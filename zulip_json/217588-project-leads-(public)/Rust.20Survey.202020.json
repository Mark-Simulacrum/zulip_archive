[
    {
        "content": "<p>Hey everyone, we were discussing what potential questions and structure for the rust survey for 2020 (in <a class=\"stream\" data-stream-id=\"249854\" href=\"/#narrow/stream/249854-t-community.2Frust-survey-2020\">#t-community/rust-survey-2020</a>) and we wanted to ask people a couple of questions.</p>\n<ul>\n<li>Are there questions from previous year's surveys that you have found particularly valuable/interesting for your team/group?</li>\n<li>Are there questions or areas that would like to see explored in this year's survey?</li>\n</ul>",
        "id": 207659661,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1598030115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> We've seen mentions in past surveys, and around the community, of compile time as a notable factor in people's usage of Rust. I'd like to add 1-2 questions to get more information about that. Namely, \"how many logical CPUs does the primary system you compile Rust on have\", and some measure of \"how much time do you typically spend waiting on Rust code to compile\".</p>",
        "id": 207662482,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598031734
    },
    {
        "content": "<p>I think the answers would be useful in prioritizing various kinds of performance optimizations.</p>",
        "id": 207662543,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598031774
    },
    {
        "content": "<p>I also have both a personal and professional interest in the answers.</p>",
        "id": 207662576,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598031796
    },
    {
        "content": "<p>I've also seen, many times, discussions about minimum supported Rust versions in a theoretical sense, but often such discussions don't feature anyone who personally uses an older Rust version than the latest stable, or latest-minus-one at most (since people don't upgrade instantly).</p>",
        "id": 207662690,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598031849
    },
    {
        "content": "<p>We have numbers from last year that 3.1% use a previous stable release. Could we ask specifically \"what leads you to use a release older than the latest or latest-but-one stable release\"?</p>",
        "id": 207662817,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598031937
    },
    {
        "content": "<p>I'm kinda wondering if there is a correlation between using rust more and complaining less about compilation time</p>",
        "id": 207663513,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598032329
    },
    {
        "content": "<p>mostly because <em>I</em>'m getting less and less annoyed by it, but I'm not sure if it's because the compiler is getting workflow-changing faster or I'm just getting used to the slow compilation cycle <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 207663602,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598032374
    },
    {
        "content": "<p>I mean, I'd rather use Rust than anything else, even if it takes many times longer to compile. But I still don't want to wait on compiles. :)</p>",
        "id": 207664165,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598032665
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207662817\">said</a>:</p>\n<blockquote>\n<p>We have numbers from last year that 3.1% use a previous stable release. Could we ask specifically \"what leads you to use a release older than the latest or latest-but-one stable release\"?</p>\n</blockquote>\n<p>the reason we use an old version of rust at work is because it's packaged in the debian repositories</p>",
        "id": 207689039,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598046913
    },
    {
        "content": "<p>and rustup doesn't support multi-user setups <a href=\"https://github.com/rust-lang/rustup/issues/313#issuecomment-658802973\">https://github.com/rust-lang/rustup/issues/313#issuecomment-658802973</a></p>",
        "id": 207689075,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598046937
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207663513\">said</a>:</p>\n<blockquote>\n<p>I'm kinda wondering if there is a correlation between using rust more and complaining less about compilation time</p>\n</blockquote>\n<p>I definitely think the people who are most annoyed by the times give up and leave rust sooner</p>",
        "id": 207689203,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598047023
    },
    {
        "content": "<p>personally the compile times are really frustrating to me even after a year in rust</p>",
        "id": 207689228,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598047043
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207689039\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207662817\">said</a>:</p>\n<blockquote>\n<p>We have numbers from last year that 3.1% use a previous stable release. Could we ask specifically \"what leads you to use a release older than the latest or latest-but-one stable release\"?</p>\n</blockquote>\n<p>the reason we use an old version of rust at work is because it's packaged in the debian repositories</p>\n</blockquote>\n<p>Do you use the version from Debian stable, or the version from latest Debian testing/unstable?</p>",
        "id": 207692298,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598049473
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207689075\">said</a>:</p>\n<blockquote>\n<p>and rustup doesn't support multi-user setups <a href=\"https://github.com/rust-lang/rustup/issues/313#issuecomment-658802973\">https://github.com/rust-lang/rustup/issues/313#issuecomment-658802973</a></p>\n</blockquote>\n<p>From the discussion on that issue, it sounds like as long as you don't have any <code>rust-toolchain</code> files and you never change the default, a shared read-only setup would work fine. (Not ideal, obviously.)</p>",
        "id": 207692412,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598049578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207689228\">said</a>:</p>\n<blockquote>\n<p>personally the compile times are really frustrating to me even after a year in rust</p>\n</blockquote>\n<p>Good to know.</p>",
        "id": 207692429,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598049597
    },
    {
        "content": "<p>I very deeply care about both minimum rust version tracking and also compile time. Unfortunately, I can't always get my minimum rust version down to 1.34.</p>",
        "id": 207694506,
        "sender_full_name": "Lokathor",
        "timestamp": 1598051474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> What motivates the former for you?</p>",
        "id": 207694622,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598051587
    },
    {
        "content": "<p>I consider it a general requirement for good semver practices. Unless a crate specifically only works on Nightly or something weird, it should select a minimum rust version (that's checked in CI), and stick to it. And a minimum rust version bump should be a semver break.</p>",
        "id": 207694845,
        "sender_full_name": "Lokathor",
        "timestamp": 1598051780
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207692298\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207689039\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207662817\">said</a>:</p>\n<blockquote>\n<p>We have numbers from last year that 3.1% use a previous stable release. Could we ask specifically \"what leads you to use a release older than the latest or latest-but-one stable release\"?</p>\n</blockquote>\n<p>the reason we use an old version of rust at work is because it's packaged in the debian repositories</p>\n</blockquote>\n<p>Do you use the version from Debian stable, or the version from latest Debian testing/unstable?</p>\n</blockquote>\n<p>Debian stable, but some of our machines are still on debian 9, so we'll have to switch to testing if bindgen starts requiring 1.40 like they've mentioned</p>",
        "id": 207695379,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598052276
    },
    {
        "content": "<p>that isn't a giant deal though as long as it shares the version of rust across all users</p>",
        "id": 207695406,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598052313
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/217588-project-leads.20(public)/topic/Rust.20Survey.202020/near/207694845\">said</a>:</p>\n<blockquote>\n<p>I consider it a general requirement for good semver practices. Unless a crate specifically only works on Nightly or something weird, it should select a minimum rust version (that's checked in CI), and stick to it. And a minimum rust version bump should be a semver break.</p>\n</blockquote>\n<p>I'd disagree with that last point (\"latest-minus-one stable\" is also a reasonable policy).</p>",
        "id": 207696431,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598053306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> But in any case, I'm less concerned with why you want to track MSRV, and more concerned with the specific use case for needing an older version of Rust.</p>",
        "id": 207696496,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598053334
    },
    {
        "content": "<p>I would dispute \"latest minus 1\" or any rolling minimum version because <code>cargo update</code> being able to drag you forward into a version your compiler can't even build is clearly bad. So until <code>cargo</code> is fixed, no rolling minimum versions.</p>\n<p>As to the <em>why</em>, I know of two use cases:</p>\n<ul>\n<li>Debian is stable 1.34.0, as we've mentioned</li>\n<li>A lot of custom stdlib stuff requires forking Nightly, and it's a huge pain to rebase your changes some of the time, so you end up forking nightly and then just being on that Nightly for like 6 months or more.</li>\n</ul>",
        "id": 207696897,
        "sender_full_name": "Lokathor",
        "timestamp": 1598053761
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> to <a class=\"stream-topic\" data-stream-id=\"122651\" href=\"/#narrow/stream/122651-general/topic/compile.20times\">#general &gt; compile times</a></p>",
        "id": 207736437,
        "sender_full_name": "Notification Bot",
        "timestamp": 1598121105
    },
    {
        "content": "<p>split, hopefully didn't remove too much</p>",
        "id": 207736445,
        "sender_full_name": "simulacrum",
        "timestamp": 1598121118
    }
]