[
    {
        "content": "<p>I've decided that it's easier for me to experiment with polonius using Soufflé than datafrog. I have a hard time translating between datalog rules and calls to the datafrog API. The comments are quite helpful, and I assume the little things like swapping indexes gets easier with time. However, using a full-featured datalog engine has other benefits (rules can't get out of sync, etc.) and seems better for prototyping. Judging from the initial blog post, Niko switched away from Soufflé pretty early on. This makes me somewhat less confident, but still confident enough to proceed.</p>",
        "id": 221584329,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796206
    },
    {
        "content": "<p>I did this on Sunday using the rules from a HackMD floating out in the ether: <a href=\"https://github.com/ecstatic-morse/polonius/tree/souffle\">https://github.com/ecstatic-morse/polonius/tree/souffle</a></p>",
        "id": 221584478,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796297
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/polonius/pull/126\">https://github.com/rust-lang/polonius/pull/126</a></p>",
        "id": 221584526,
        "sender_full_name": "lqd",
        "timestamp": 1609796336
    },
    {
        "content": "<p>Ah damn, I wish I would have seen that. I had to choose between writing \"literate Prolog\" markdown files and extensively commented <code>.dl</code> files. I probably would have gone the other way if I would have known.</p>",
        "id": 221584739,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796449
    },
    {
        "content": "<p>the automatic conversion is interesting</p>",
        "id": 221584742,
        "sender_full_name": "lqd",
        "timestamp": 1609796451
    },
    {
        "content": "<p>(we probably still have the original .dl from way back when :)</p>",
        "id": 221584917,
        "sender_full_name": "lqd",
        "timestamp": 1609796540
    },
    {
        "content": "<p>(I did see your renaming PR. Mine uses the new names.)</p>",
        "id": 221584921,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796542
    },
    {
        "content": "<p>nice !</p>",
        "id": 221584933,
        "sender_full_name": "lqd",
        "timestamp": 1609796551
    },
    {
        "content": "<p>(so does this PR, I've updated it recently)</p>",
        "id": 221584961,
        "sender_full_name": "lqd",
        "timestamp": 1609796572
    },
    {
        "content": "<p>using your script could be nice as well</p>",
        "id": 221585058,
        "sender_full_name": "lqd",
        "timestamp": 1609796630
    },
    {
        "content": "<p>Anyways, I fixed up some typos and some missing rules and it compiles. However, it seems something is still missing, since it's not outputting any errors.</p>",
        "id": 221585085,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796642
    },
    {
        "content": "<p>what input are you testing ?</p>",
        "id": 221585143,
        "sender_full_name": "lqd",
        "timestamp": 1609796664
    },
    {
        "content": "<p>(I tried on the <code>vec-push-ref</code> test cases)</p>",
        "id": 221585145,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796667
    },
    {
        "content": "<p>ok</p>",
        "id": 221585155,
        "sender_full_name": "lqd",
        "timestamp": 1609796672
    },
    {
        "content": "<p><code>foo1</code> and <code>foo2</code></p>",
        "id": 221585156,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796673
    },
    {
        "content": "<p>the thing with this hackmd is that some of it still uses placeholder loans IIRC</p>",
        "id": 221585191,
        "sender_full_name": "lqd",
        "timestamp": 1609796699
    },
    {
        "content": "<p>it probably shouldn't matter to the errors in vec-push-ref as IIRC they were regular errors</p>",
        "id": 221585218,
        "sender_full_name": "lqd",
        "timestamp": 1609796717
    },
    {
        "content": "<p>It does have the placeholder rules.</p>",
        "id": 221585252,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796741
    },
    {
        "content": "<p>yeah but which ones</p>",
        "id": 221585265,
        "sender_full_name": "lqd",
        "timestamp": 1609796750
    },
    {
        "content": "<p>I've switched away from computing subset errors with placeholder loans in 2/3 variants</p>",
        "id": 221585330,
        "sender_full_name": "lqd",
        "timestamp": 1609796772
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Prolog\"><pre><span></span><code><span class=\"nf\">origin_contains_loan_on_entry</span><span class=\"p\">(</span><span class=\"s s-Atom\">origin</span><span class=\"p\">,</span> <span class=\"s s-Atom\">loan</span><span class=\"p\">,</span> <span class=\"s s-Atom\">targetNode</span><span class=\"p\">)</span> <span class=\"p\">:-</span>\n  <span class=\"nf\">origin_contains_loan_on_entry</span><span class=\"p\">(</span><span class=\"s s-Atom\">origin</span><span class=\"p\">,</span> <span class=\"s s-Atom\">loan</span><span class=\"p\">,</span> <span class=\"s s-Atom\">sourceNode</span><span class=\"p\">),</span>\n  <span class=\"p\">!</span><span class=\"nf\">loan_killed_at</span><span class=\"p\">(</span><span class=\"s s-Atom\">loan</span><span class=\"p\">,</span> <span class=\"s s-Atom\">sourceNode</span><span class=\"p\">),</span>\n  <span class=\"nf\">cfg_edge</span><span class=\"p\">(</span><span class=\"s s-Atom\">sourceNode</span><span class=\"p\">,</span> <span class=\"s s-Atom\">targetNode</span><span class=\"p\">),</span>\n  <span class=\"p\">(</span><span class=\"nf\">origin_live_on_entry</span><span class=\"p\">(</span><span class=\"s s-Atom\">origin</span><span class=\"p\">,</span> <span class=\"s s-Atom\">targetNode</span><span class=\"p\">);</span> <span class=\"nf\">placeholder</span><span class=\"p\">(</span><span class=\"s s-Atom\">origin</span><span class=\"p\">,</span> <span class=\"k\">_</span><span class=\"p\">)).</span>\n</code></pre></div>",
        "id": 221585363,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796804
    },
    {
        "content": "<p>yeah placeholder loans are something else than this one</p>",
        "id": 221585420,
        "sender_full_name": "lqd",
        "timestamp": 1609796852
    },
    {
        "content": "<p>This one? It's whatever was in here <a href=\"https://hackmd.io/CGMNjt1hR_qYtsR9hgdGmw?view\">https://hackmd.io/CGMNjt1hR_qYtsR9hgdGmw?view</a></p>",
        "id": 221585429,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796856
    },
    {
        "content": "<p>I'll look them up</p>",
        "id": 221585431,
        "sender_full_name": "lqd",
        "timestamp": 1609796859
    },
    {
        "content": "<p>I'm not exactly sure whether the rules in the hackmd are up to date for move/init and liveness, I would hope so but I'm not sure :/</p>",
        "id": 221585478,
        "sender_full_name": "lqd",
        "timestamp": 1609796877
    },
    {
        "content": "<p>yes that's the one</p>",
        "id": 221585547,
        "sender_full_name": "lqd",
        "timestamp": 1609796896
    },
    {
        "content": "<p>I did a sanity check and all the rules seem fine. I have a few questions about liveness but it all seems reasonable.</p>",
        "id": 221585555,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796904
    },
    {
        "content": "<p>I might just be using the wrong input facts, since I had to rename them.</p>",
        "id": 221585618,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796949
    },
    {
        "content": "<p>eg the second rule here <a href=\"https://hackmd.io/CGMNjt1hR_qYtsR9hgdGmw?view#Error-reporting\">https://hackmd.io/CGMNjt1hR_qYtsR9hgdGmw?view#Error-reporting</a> is no more</p>",
        "id": 221585639,
        "sender_full_name": "lqd",
        "timestamp": 1609796965
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>mv borrow_region.facts loan_issued_at.facts\nmv killed.facts loan_killed_at.facts\nmv invalidates.facts loan_invalidated_at.facts\n\nmv child_path.facts parent_path.facts\n\nmv known_subset.facts known_placeholder_subset.facts\nmv outlives.facts subset_base.facts\n</code></pre></div>",
        "id": 221585648,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609796975
    },
    {
        "content": "<p>at least, there's a PR to change it</p>",
        "id": 221585657,
        "sender_full_name": "lqd",
        "timestamp": 1609796981
    },
    {
        "content": "<p>or am I spewing random bs, I have updated the hackmd recently</p>",
        "id": 221585845,
        "sender_full_name": "lqd",
        "timestamp": 1609797065
    },
    {
        "content": "<p>(sorry dylan, I'm a bit tired from work and trying to make progress on const generics defaults during the holidays)</p>",
        "id": 221585909,
        "sender_full_name": "lqd",
        "timestamp": 1609797102
    },
    {
        "content": "<p>another point of difference</p>",
        "id": 221586062,
        "sender_full_name": "lqd",
        "timestamp": 1609797174
    },
    {
        "content": "<p>the rules use soufflé's alternative <code>;</code> combinator</p>",
        "id": 221586095,
        "sender_full_name": "lqd",
        "timestamp": 1609797192
    },
    {
        "content": "<p>but the code does not, it does a similar thing, by materializing liveness for the universal regions / placeholders at all points in the cfg</p>",
        "id": 221586172,
        "sender_full_name": "lqd",
        "timestamp": 1609797237
    },
    {
        "content": "<p>No worries. I was planning to work on my own since you're busy for this month at least and Niko is presumably <strong>super</strong> busy. Figuring this stuff out means I reach competency faster.</p>",
        "id": 221586342,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609797338
    },
    {
        "content": "<p>Although I do wish I had known about the rules documentation PR XD</p>",
        "id": 221586371,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609797355
    },
    {
        "content": "<p>Yes. You have a PR that adds the placeholder disjunction to the datafrog rules correct?</p>",
        "id": 221586502,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609797416
    },
    {
        "content": "<p>yeah</p>",
        "id": 221586514,
        "sender_full_name": "lqd",
        "timestamp": 1609797423
    },
    {
        "content": "<p>it's still WIP because of the Opt variant which are the only ones using antijoins on liveness</p>",
        "id": 221586544,
        "sender_full_name": "lqd",
        "timestamp": 1609797443
    },
    {
        "content": "<p>and I wanted to discuss this a bit, but I expect we'd just need to add the implicit antijoins and that it should work</p>",
        "id": 221586585,
        "sender_full_name": "lqd",
        "timestamp": 1609797474
    },
    {
        "content": "<p>it's just ... verbose</p>",
        "id": 221586635,
        "sender_full_name": "lqd",
        "timestamp": 1609797483
    },
    {
        "content": "<p>and maybe something datafrog could/should help with</p>",
        "id": 221586660,
        "sender_full_name": "lqd",
        "timestamp": 1609797496
    },
    {
        "content": "<p>(I assumed that none of that would affect <code>vec_push_ref</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">foo1</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">something</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nb\">drop</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 221586679,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609797508
    },
    {
        "content": "<p>yeah same</p>",
        "id": 221586756,
        "sender_full_name": "lqd",
        "timestamp": 1609797550
    },
    {
        "content": "<p>I'm not sure how to debug that apart from comparing the relations contents first between the 3 phases</p>",
        "id": 221586862,
        "sender_full_name": "lqd",
        "timestamp": 1609797604
    },
    {
        "content": "<p>and if that doesn't help, see the tuples emitted each round as well</p>",
        "id": 221586911,
        "sender_full_name": "lqd",
        "timestamp": 1609797634
    },
    {
        "content": "<p>Yep. That was my next step but I ran out of time over the weekend. I'll let you know how it goes when I pick it up again, but I'm also busy.</p>",
        "id": 221586925,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609797638
    },
    {
        "content": "<p>I'll try to look at it if I find the time as well</p>",
        "id": 221587006,
        "sender_full_name": "lqd",
        "timestamp": 1609797673
    },
    {
        "content": "<p>I wasn't gonna post at all, but you nerd-sniped me with vEB trees. And anyone who has time to think about vEB trees has too much time.</p>",
        "id": 221587058,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609797702
    },
    {
        "content": "<p>haha <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 221587071,
        "sender_full_name": "lqd",
        "timestamp": 1609797713
    },
    {
        "content": "<p>there's always time to read on the toilet, like Muchnick's book :p</p>",
        "id": 221587199,
        "sender_full_name": "lqd",
        "timestamp": 1609797773
    },
    {
        "content": "<p>you've done a great job on commenting the rules in your branch</p>",
        "id": 221589455,
        "sender_full_name": "lqd",
        "timestamp": 1609799010
    },
    {
        "content": "<p>or maybe those are from the hackmd (pretty sure you did add some of your own tho)</p>",
        "id": 221589595,
        "sender_full_name": "lqd",
        "timestamp": 1609799099
    },
    {
        "content": "<p>(it shows that I'm not familiar with the comments on the hackmd's move/init and liveness rules, obviously ... they work in rustc == I'm happy)</p>",
        "id": 221589788,
        "sender_full_name": "lqd",
        "timestamp": 1609799222
    },
    {
        "content": "<p>Nah those are all verbatim from the HackMD. Thank Albin. I will add to them eventually though.</p>",
        "id": 221613375,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609823114
    },
    {
        "content": "<p>I found the critical differences in my transcribed version. Two relations had their arguments flipped from how they appeared in the fact file, and liveness was manually adding some facts <a href=\"https://github.com/rust-lang/polonius/blob/2cf8336f7ff9932270160a392ca5be3c804b7f41/polonius-engine/src/output/liveness.rs#L157-L170\">here</a>. Tuple counts now match up for examples without placeholders.</p>",
        "id": 221613533,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609823365
    },
    {
        "content": "<p>Naive souffle can run the clap-rs benchmark in 2 minutes without using a crazy amount of RAM, so it's definitely usable.  Running on 8 cores helps of course (<code>-j8</code>).</p>",
        "id": 221613667,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609823598
    },
    {
        "content": "<p>That's enough for tonight though.</p>",
        "id": 221613769,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1609823694
    },
    {
        "content": "<p>ah dang I now remember the different ordering in the loan invalidations relation <a href=\"https://github.com/rust-lang/polonius/blob/f2c0fcafdcd341486f7c2225824b26feb0d6b9ce/polonius-engine/src/output/mod.rs#L222\">https://github.com/rust-lang/polonius/blob/f2c0fcafdcd341486f7c2225824b26feb0d6b9ce/polonius-engine/src/output/mod.rs#L222</a></p>",
        "id": 221620490,
        "sender_full_name": "lqd",
        "timestamp": 1609833183
    },
    {
        "content": "<p>and the liveness one is the one I mentioned above, that should have been taken care of by all the \"origin is live ; origin is placeholder\" joins in the loan analysis rules though</p>",
        "id": 221620617,
        "sender_full_name": "lqd",
        "timestamp": 1609833359
    },
    {
        "content": "<p>maybe we missed one in the hackmd ?</p>",
        "id": 221620873,
        "sender_full_name": "lqd",
        "timestamp": 1609833617
    },
    {
        "content": "<p>btw RE: <a href=\"https://github.com/ecstatic-morse/polonius/commit/3e00d634ccb1026a6d04a6cebb379541b27a9eed\">https://github.com/ecstatic-morse/polonius/commit/3e00d634ccb1026a6d04a6cebb379541b27a9eed</a> the updated names and facts should already be updated in <a href=\"https://github.com/rust-lang/polonius/pull/155\">https://github.com/rust-lang/polonius/pull/155</a> (with the caveat <a href=\"https://github.com/rust-lang/polonius/pull/156#issuecomment-751460154\">https://github.com/rust-lang/polonius/pull/156#issuecomment-751460154</a> where I forgot to rename two internal relations in that PR, but that shouldn't matter to use the repository facts with soufflé)</p>",
        "id": 221758926,
        "sender_full_name": "lqd",
        "timestamp": 1609934007
    }
]