[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> if you remember we were testing NLL perf on <a href=\"http://perf.rust-lang.org\" target=\"_blank\" title=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> using some kind of NLL comparison mode before. Maybe we can touch base with <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> to see how hard it would be to extend the perf runner to test vs polonius, and then run such tests locally and look for big slowdowns.</p>",
        "id": 158927642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550617106
    },
    {
        "content": "<p>I imagine it's not so hard</p>",
        "id": 158927644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550617112
    },
    {
        "content": "<p>ok</p>",
        "id": 158927666,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550617144
    },
    {
        "content": "<p>will ping <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 158927674,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550617151
    },
    {
        "content": "<p>not very hard, and if it's for local testing, the NLL flags are set <a href=\"https://github.com/rust-lang-nursery/rustc-perf/blob/master/collector/src/bin/rustc-perf-collector/execute.rs#L229-L232\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/rustc-perf/blob/master/collector/src/bin/rustc-perf-collector/execute.rs#L229-L232\">here</a></p>",
        "id": 158928170,
        "sender_full_name": "lqd",
        "timestamp": 1550617513
    },
    {
        "content": "<p>they monitor Zulip so i imagine they'll show up sooner or later =)</p>",
        "id": 158928424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550617691
    },
    {
        "content": "<p>what needs to be run locally?</p>",
        "id": 158929395,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550618494
    },
    {
        "content": "<p>I mean, just passing -Zpolonius there is enough?</p>",
        "id": 158929417,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550618516
    },
    {
        "content": "<p>unsure how the perf compares things there</p>",
        "id": 158929469,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550618531
    },
    {
        "content": "<p>unsure if there's two runs one with some flags and the other without flags</p>",
        "id": 158929479,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550618549
    },
    {
        "content": "<p>there are many modes and dimensions, but the collector collects timings for say a specific rustc commit</p>",
        "id": 158929865,
        "sender_full_name": "lqd",
        "timestamp": 1550618909
    },
    {
        "content": "<p>and the comparisons are made between 2 of these</p>",
        "id": 158929898,
        "sender_full_name": "lqd",
        "timestamp": 1550618955
    },
    {
        "content": "<p>in your case it might be interesting to look at the \"local benchmarking\" or \"local profiling\" sections of <a href=\"https://github.com/rust-lang-nursery/rustc-perf/tree/master/collector\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/rustc-perf/tree/master/collector\">the collector readme</a></p>",
        "id": 158929930,
        "sender_full_name": "lqd",
        "timestamp": 1550619001
    },
    {
        "content": "<p>(eg maybe manually comparing results of 2 local runs, instead of using the site, one with NLL and one with Polonius, if that's what you want to compare)</p>",
        "id": 158930021,
        "sender_full_name": "lqd",
        "timestamp": 1550619070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> We'll want to answer a couple of questions:<br>\n - Do we want to test both vs. NLL and vs. Polonius?<br>\n - How bad/good is polonius compared to NLL? We can probably afford 10-20% but if it's much beyond that we'll want to delay enabling it for all things for a while</p>",
        "id": 158930360,
        "sender_full_name": "simulacrum",
        "timestamp": 1550619383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I am imagining that we start with local runs</p>",
        "id": 158930378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550619414
    },
    {
        "content": "<p>not automatic runs</p>",
        "id": 158930380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550619417
    },
    {
        "content": "<p>basically I wanted to try and answer this question:</p>",
        "id": 158930392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550619429
    },
    {
        "content": "<blockquote>\n<ul>\n<li>How bad/good is polonius compared to NLL?</li>\n</ul>\n</blockquote>",
        "id": 158930399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550619443
    },
    {
        "content": "<p>I'm pretty sure the answer is \"sometimes quite bad\"</p>",
        "id": 158930410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550619455
    },
    {
        "content": "<p>but I don't really know the reasons why or when</p>",
        "id": 158930418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550619461
    },
    {
        "content": "<p>hm, okay, so that should be fairly easy I think</p>",
        "id": 158930472,
        "sender_full_name": "simulacrum",
        "timestamp": 1550619487
    },
    {
        "content": "<p>I would go with a manual edit for the time being -- here <a href=\"https://github.com/rust-lang-nursery/rustc-perf/blob/master/collector/src/bin/rustc-perf-collector/execute.rs#L231\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/rustc-perf/blob/master/collector/src/bin/rustc-perf-collector/execute.rs#L231\">https://github.com/rust-lang-nursery/rustc-perf/blob/master/collector/src/bin/rustc-perf-collector/execute.rs#L231</a> -- as <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> mentioned -- and just run the collector with and without that patch</p>",
        "id": 158930500,
        "sender_full_name": "simulacrum",
        "timestamp": 1550619535
    },
    {
        "content": "<p>We could also collect some stats with a compiler PR + bors try if we were so inclined</p>",
        "id": 158930513,
        "sender_full_name": "simulacrum",
        "timestamp": 1550619547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> If it'd be helpful I can probably put a hack into perf manually to make some random (non important) commit get benchmarked where NLL is the \"default\" and polonius is the \"nll\" shown in the UI</p>",
        "id": 158930701,
        "sender_full_name": "simulacrum",
        "timestamp": 1550619760
    },
    {
        "content": "<p>in some sense that's the reality because 2018 means NLL is universally on</p>",
        "id": 158930707,
        "sender_full_name": "simulacrum",
        "timestamp": 1550619779
    },
    {
        "content": "<p>(well, for new code, anyway)</p>",
        "id": 158930717,
        "sender_full_name": "simulacrum",
        "timestamp": 1550619786
    },
    {
        "content": "<p>let's start with manual editing -- <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> do you see the code that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> cited above?</p>",
        "id": 158931238,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550620315
    },
    {
        "content": "<p>will check all this tomorrow morning</p>",
        "id": 158931406,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550620496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> saw the code yeah, as <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> also pointed out</p>",
        "id": 158944610,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550636007
    },
    {
        "content": "<p>don't remember if -Zpolonius goes also with -Zborrowck=mir and all that</p>",
        "id": 158944668,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550636060
    },
    {
        "content": "<p>and yeah, I can test it locally and print here the results</p>",
        "id": 158944670,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550636072
    },
    {
        "content": "<p>Ok, I guess the way to go is said here <a href=\"https://github.com/spastorino/rust/blob/06ec1a422a5ff147c3a09af7eb80db77459e797b/src/tools/compiletest/src/runtest.rs#L1807\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/06ec1a422a5ff147c3a09af7eb80db77459e797b/src/tools/compiletest/src/runtest.rs#L1807\">https://github.com/spastorino/rust/blob/06ec1a422a5ff147c3a09af7eb80db77459e797b/src/tools/compiletest/src/runtest.rs#L1807</a></p>",
        "id": 158944738,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550636211
    },
    {
        "content": "<p>getting a lot of ...</p>",
        "id": 158946160,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638346
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span> stdout=\n[2019-02-20T04:48:00Z INFO  collector] 12 benchmarks left\n[2019-02-20T04:48:00Z INFO  collector::execute] Running script-servo: Check + [Clean, Nll, BaseIncr, CleanIncr, PatchedIncrs]\n[2019-02-20T04:48:00Z INFO  collector] failed to benchmark script-servo, recorded: expected success, got exit code: 101\n\nstderr=error: An unknown error occurred\n\nTo learn more, run the command again with --verbose.\n</pre></div>",
        "id": 158946163,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ^^^</p>",
        "id": 158946171,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638361
    },
    {
        "content": "<p>I am hesitant but feel like it's plausible that's the fault of the compiler, not us?</p>",
        "id": 158946197,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638387
    },
    {
        "content": "<p>(us = perf)</p>",
        "id": 158946198,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638391
    },
    {
        "content": "<p>You might get more/better logs if you do <code>RUST_LOG=collector=trace</code></p>",
        "id": 158946209,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638411
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 158946214,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638425
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span> stdout=\n[2019-02-20T04:52:59Z INFO  collector] 12 benchmarks left\n[2019-02-20T04:52:59Z INFO  collector::execute] Running script-servo: Check + [Clean, Nll, BaseIncr, CleanIncr, PatchedIncrs]\n[2019-02-20T04:52:59Z TRACE collector::execute] running: &quot;cp&quot; &quot;-R&quot; &quot;collector/benchmarks/script-servo/.&quot; &quot;/tmp/.tmpIFlllh&quot;\n[2019-02-20T04:52:59Z TRACE collector::execute] running: &quot;cargo&quot; &quot;pkgid&quot; &quot;--manifest-path&quot; &quot;components/script/Cargo.toml&quot;\n[2019-02-20T04:52:59Z DEBUG collector::execute] &quot;cargo&quot; &quot;rustc&quot; &quot;--manifest-path&quot; &quot;components/script/Cargo.toml&quot; &quot;-p&quot; &quot;file:///tmp/.tmpIFlllh/components/script#0.0.1&quot; &quot;--profile&quot; &quot;check&quot; &quot;--no-default-features&quot; &quot;--&quot;\n[2019-02-20T04:52:59Z TRACE collector::execute] running: &quot;bash&quot; &quot;-c&quot; &quot;find . -name \\&#39;*.rs\\&#39; | xargs touch&quot;\n[2019-02-20T04:52:59Z TRACE collector::execute] running: &quot;cargo&quot; &quot;rustc&quot; &quot;--manifest-path&quot; &quot;components/script/Cargo.toml&quot; &quot;-p&quot; &quot;file:///tmp/.tmpIFlllh/components/script#0.0.1&quot; &quot;--profile&quot; &quot;check&quot; &quot;--no-default-features&quot; &quot;--&quot;\n[2019-02-20T04:53:00Z INFO  collector] failed to benchmark script-servo, recorded: expected success, got exit code: 101\n\nstderr=error: An unknown error occurred\n\nTo learn more, run the command again with --verbose.\n</pre></div>",
        "id": 158946294,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638534
    },
    {
        "content": "<p>Yep, looks like a compiler bug. I suppose maybe standard <code>RUST_LOG=polonius-...</code> might work? No idea what, if anything, polonius uses for logging.</p>",
        "id": 158946359,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638616
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> might know more.</p>",
        "id": 158946361,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638621
    },
    {
        "content": "<p>hmm</p>",
        "id": 158946383,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638669
    },
    {
        "content": "<p>Anyway, I need to run -- I suspect you might be able to filter it down to some smaller set of benchmarks (--help should help there for specific arguments to pass)</p>",
        "id": 158946384,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638671
    },
    {
        "content": "<p>but I was trying to use just nightly</p>",
        "id": 158946388,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638676
    },
    {
        "content": "<p>I think nightly is potentially similarly broken?</p>",
        "id": 158946430,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638688
    },
    {
        "content": "<p>without polonius</p>",
        "id": 158946434,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638697
    },
    {
        "content": "<p>just as is</p>",
        "id": 158946435,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638702
    },
    {
        "content": "<p>Oh.</p>",
        "id": 158946436,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638703
    },
    {
        "content": "<p>Well.</p>",
        "id": 158946437,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638705
    },
    {
        "content": "<p>....So this is not with -Zpolonius?</p>",
        "id": 158946441,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638716
    },
    {
        "content": "<p>it is</p>",
        "id": 158946444,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638724
    },
    {
        "content": "<p>but did without it and ... let me check again :)</p>",
        "id": 158946448,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638736
    },
    {
        "content": "<p>anyway, I'll try and check in tomorrow morning as well but I <em>suspect</em> this is a polonius bug</p>",
        "id": 158946460,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638754
    },
    {
        "content": "<p>Perf's CI and server certainly don't see this bug.</p>",
        "id": 158946463,
        "sender_full_name": "simulacrum",
        "timestamp": 1550638767
    },
    {
        "content": "<p>seeing the same using nightly and rustc-perf as is</p>",
        "id": 158946524,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638813
    },
    {
        "content": "<p>running this ...</p>",
        "id": 158946560,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638897
    },
    {
        "content": "<p>RUST_LOG=collector=trace ./target/release/collector --output-repo output bench_local test --rustc <code>which rustc</code> --cargo `which cargo</p>",
        "id": 158946561,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550638899
    },
    {
        "content": "<p>ok, it seems like is an error in the command I'm running</p>",
        "id": 158946963,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550639516
    },
    {
        "content": "<p>(<del>perf.rlo can’t compile script-servo right now, since the Universes PR/fixes I think, so at least ignore that one</del> update: retracted, it does compile right now, but I swear this was not the case 2 days ago, and I think there’s a comment by Simon which might be related — in any case if it’s just this one we can ignore it for now, if they all fail then yeah that’s different :)</p>",
        "id": 158948865,
        "sender_full_name": "lqd",
        "timestamp": 1550642400
    },
    {
        "content": "<p>certainly plausible that polonius mode is broken, but that doesn't seem to be the problem..?</p>",
        "id": 158965146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550659814
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/BqlqFRCtxpoP3fvzjeZWN3JK/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/BqlqFRCtxpoP3fvzjeZWN3JK/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/BqlqFRCtxpoP3fvzjeZWN3JK/pasted_image.png\"></a></div>",
        "id": 158969063,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550664647
    },
    {
        "content": "<p>this is current nll-check benchs on my machine</p>",
        "id": 158969075,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550664664
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/uDjd2JwBfM8zng8SFoqWCTYN/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/uDjd2JwBfM8zng8SFoqWCTYN/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/uDjd2JwBfM8zng8SFoqWCTYN/pasted_image.png\"></a></div>",
        "id": 158969083,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550664688
    },
    {
        "content": "<p>this is polonius benchs</p>",
        "id": 158969090,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550664695
    },
    {
        "content": "<p>tuple-stress :S</p>",
        "id": 158969093,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550664707
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm not sure if this is more or less what you imagined, worser or better :P</p>",
        "id": 158969137,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550664724
    },
    {
        "content": "<p>Looks actually pretty similar to NLL pre-optimization, so in some ways this is good IMO</p>",
        "id": 158977614,
        "sender_full_name": "simulacrum",
        "timestamp": 1550671881
    },
    {
        "content": "<p>and IIUC these are showing the worst case behavior: since they actually compile without errors, these benchmarks would succeed the LocationInsensitive pre-pass and not run the costly-for-now full analysis</p>",
        "id": 158979957,
        "sender_full_name": "lqd",
        "timestamp": 1550673395
    },
    {
        "content": "<p>Isn't that the best case?</p>",
        "id": 158980179,
        "sender_full_name": "simulacrum",
        "timestamp": 1550673511
    },
    {
        "content": "<blockquote>\n<p>Looks actually pretty similar to NLL pre-optimization, so in some ways this is good IMO</p>\n</blockquote>\n<p>Well, one of the NLL optimisations is currently disabled with Polonius because it broke it.</p>",
        "id": 158980259,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1550673570
    },
    {
        "content": "<p>Specifically this: <a href=\"https://github.com/rust-lang/rust/pull/54468/files#diff-bc11632f2a43bd654fa90b6e1e4cb94f\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54468/files#diff-bc11632f2a43bd654fa90b6e1e4cb94f\">https://github.com/rust-lang/rust/pull/54468/files#diff-bc11632f2a43bd654fa90b6e1e4cb94f</a></p>",
        "id": 158980641,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1550673786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> how so ? when the quick location-insensitive analysis is enough, running the costly one is worse :) (maybe you're talking about the additional overhead when there are indeed errors ?)</p>",
        "id": 158980860,
        "sender_full_name": "lqd",
        "timestamp": 1550673942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> These benchmarks are illustrating the best case: they are <em>not</em> running the costly full analysis since they succeed, right?</p>",
        "id": 158996367,
        "sender_full_name": "simulacrum",
        "timestamp": 1550684758
    },
    {
        "content": "<p>my guess would be that they are indeed running the costly analysis (even if they don't need to, as the benchmarks build without errors), because it's the default Polonius variant (and I don't think Santiago overrode it): it's not yet packaged up in a single variant where the location-insensitive success would avoid running this DatafrogOpt full analysis (but we'll get there :)</p>",
        "id": 158996718,
        "sender_full_name": "lqd",
        "timestamp": 1550684998
    },
    {
        "content": "<p>yeah, I did not modify the thing at all :)</p>",
        "id": 158997003,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550685190
    },
    {
        "content": "<p>rerunning the benchmarks with the environment variable POLONIUS_ALGORITHM=LocationInsensitive (IIRC) would clear that up (and eg focus on the overhead of the inactive NLL optimisation Matthew mentioned, + fact generation, etc)</p>",
        "id": 158997026,
        "sender_full_name": "lqd",
        "timestamp": 1550685206
    },
    {
        "content": "<p>ahh right, running it ...</p>",
        "id": 158997147,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550685290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>  it'd just be an additional datapoint, the overhead of DataFrogOpt you benchmarked is very interesting/important to know as well (and thanks for doing it)</p>",
        "id": 158997275,
        "sender_full_name": "lqd",
        "timestamp": 1550685386
    },
    {
        "content": "<p>yeah, exactly</p>",
        "id": 158997302,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550685409
    },
    {
        "content": "<p>we need both things</p>",
        "id": 158997303,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550685412
    },
    {
        "content": "<p>POLONIUS_ALGORITHM=LocationInsensitive RUST_LOG=info ./target/release/collector --output-repo output3 bench_local test3 --rustc /home/santiago/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --cargo <code>which cargo</code></p>",
        "id": 159005079,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550690410
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/V2zhtKt41lNKyD5CyW4Yzeb8/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/V2zhtKt41lNKyD5CyW4Yzeb8/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/V2zhtKt41lNKyD5CyW4Yzeb8/pasted_image.png\"></a></div>",
        "id": 159005168,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550690476
    },
    {
        "content": "<p>hmmm, I guess that's not passing the env variable to the rustc process</p>",
        "id": 159005217,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550690515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> yeah, I think we have an env_clear somewhere in the code</p>",
        "id": 159008037,
        "sender_full_name": "simulacrum",
        "timestamp": 1550692137
    },
    {
        "content": "<p>You'll probably want to remove that or pass through the polonius variable(s)</p>",
        "id": 159008067,
        "sender_full_name": "simulacrum",
        "timestamp": 1550692156
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>diff --git a/collector/src/bin/rustc-perf-collector/execute.rs b/collector/src/bin/rustc-perf-collector/execute.rs\nindex 1f6a0cd..28b9de9 100644\n--- a/collector/src/bin/rustc-perf-collector/execute.rs\n+++ b/collector/src/bin/rustc-perf-collector/execute.rs\n@@ -182,6 +182,7 @@ impl&lt;&#39;a&gt; CargoProcess&lt;&#39;a&gt; {\n             // Not all cargo invocations (e.g. `cargo clean`) need all of these\n             // env vars set, but it doesn&#39;t hurt to have them.\n             .env_clear()\n+            .env(&quot;POLONIUS_ALGORITHM&quot;, &quot;LocationInsensitive&quot;)\n             // SHELL is needed for some benchmarks&#39; build scripts.\n             .env(&quot;SHELL&quot;, env::var_os(&quot;SHELL&quot;).unwrap_or_default())\n             // PATH is needed to find things like linkers used by rustc/Cargo.\n@@ -229,6 +230,7 @@ impl&lt;&#39;a&gt; CargoProcess&lt;&#39;a&gt; {\n             if self.nll {\n                 cmd.arg(&quot;-Zborrowck=mir&quot;);\n                 cmd.arg(&quot;-Ztwo-phase-borrows&quot;);\n+                cmd.arg(&quot;-Zpolonius&quot;);\n             }\n             // --wrap-rustc-with is not a valid rustc flag. But rustc-fake\n             // recognizes it, strips it (and its argument) out, and uses it as an\n</pre></div>",
        "id": 159008825,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550692626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> trying with this ^^^</p>",
        "id": 159008836,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550692633
    },
    {
        "content": "<p>seems reasonable</p>",
        "id": 159009252,
        "sender_full_name": "simulacrum",
        "timestamp": 1550692880
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/o-NxMwXlDOJ51g680HKip-vd/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/o-NxMwXlDOJ51g680HKip-vd/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/o-NxMwXlDOJ51g680HKip-vd/pasted_image.png\"></a></div>",
        "id": 159015362,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550697160
    },
    {
        "content": "<p>this is location insensitive if the trick worked correctly</p>",
        "id": 159015373,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550697170
    },
    {
        "content": "<p>it seems like it did</p>",
        "id": 159015421,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550697225
    },
    {
        "content": "<p>html5ever and ucd are faster</p>",
        "id": 159015499,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550697265
    },
    {
        "content": "<p>there are a lot that gave errors</p>",
        "id": 159015554,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550697312
    },
    {
        "content": "<p>errors huh, that's interesting</p>",
        "id": 159016116,
        "sender_full_name": "lqd",
        "timestamp": 1550697764
    },
    {
        "content": "<p>Location insensitive is more location-insensitive than the current NLL and in some ways, more location insensitive than the AST borrowck.</p>",
        "id": 159016266,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1550697864
    },
    {
        "content": "<p>that's an important thing to remember</p>",
        "id": 159016570,
        "sender_full_name": "lqd",
        "timestamp": 1550698124
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> awesome, thanks! those runs look kind of like what I expected to be honest</p>",
        "id": 159080505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550765577
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> are you able to get memory usage statistics?</p>",
        "id": 159080556,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550765610
    },
    {
        "content": "<p>I have been expecting that there will be a few benchmarks (perhaps tuple-stress?) where we are building up gigantic vectors</p>",
        "id": 159080583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550765628
    },
    {
        "content": "<p>yes</p>",
        "id": 159080934,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765854
    },
    {
        "content": "<p>I can do that</p>",
        "id": 159080937,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765857
    },
    {
        "content": "<p>I guess we want that for AST, NLL and Polonius NLL, right?</p>",
        "id": 159081011,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765888
    },
    {
        "content": "<p>or do we already have AST and NLL ones somewhere?</p>",
        "id": 159081025,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765904
    },
    {
        "content": "<p>weren't they recorded when you did the runs ?</p>",
        "id": 159081115,
        "sender_full_name": "lqd",
        "timestamp": 1550765993
    },
    {
        "content": "<p>that is, is there a combobox like <a href=\"/user_uploads/4715/g-tZxwA311hHtBAtYxbRDFT1/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">this</a> down somewhere ? if so, switching it to max-rss would give you the memory comparison</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/g-tZxwA311hHtBAtYxbRDFT1/pasted_image.png\" target=\"_blank\" title=\"this\"><img src=\"/user_uploads/4715/g-tZxwA311hHtBAtYxbRDFT1/pasted_image.png\"></a></div>",
        "id": 159081296,
        "sender_full_name": "lqd",
        "timestamp": 1550766082
    },
    {
        "content": "<p>hmm, let me see</p>",
        "id": 159081483,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550766196
    },
    {
        "content": "<p>I thought that was with a different flag</p>",
        "id": 159081490,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550766203
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/kZyXJJ4SIuAh7EDEBshappIa/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/kZyXJJ4SIuAh7EDEBshappIa/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/kZyXJJ4SIuAh7EDEBshappIa/pasted_image.png\"></a></div>",
        "id": 159082813,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767018
    },
    {
        "content": "<p>current nll</p>",
        "id": 159082829,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767027
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/YMgaKKBSSaJqVArGH-wp3jhM/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/YMgaKKBSSaJqVArGH-wp3jhM/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/YMgaKKBSSaJqVArGH-wp3jhM/pasted_image.png\"></a></div>",
        "id": 159082869,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767054
    },
    {
        "content": "<p>polonius</p>",
        "id": 159082876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767059
    },
    {
        "content": "<p>html5ever is insanely worser</p>",
        "id": 159082906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767082
    },
    {
        "content": "<p>ucd</p>",
        "id": 159082963,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767093
    },
    {
        "content": "<p>etc</p>",
        "id": 159082973,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767102
    },
    {
        "content": "<p>and</p>",
        "id": 159082977,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767103
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/pwtGSBtCuf9f7qJWnOo_qNFy/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/pwtGSBtCuf9f7qJWnOo_qNFy/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/pwtGSBtCuf9f7qJWnOo_qNFy/pasted_image.png\"></a></div>",
        "id": 159083047,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767148
    },
    {
        "content": "<p>polonius location insensitive</p>",
        "id": 159083057,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767154
    },
    {
        "content": "<p>talking about max-rss</p>",
        "id": 159083111,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767188
    },
    {
        "content": "<p>just in case :)</p>",
        "id": 159083113,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767192
    },
    {
        "content": "<p><span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 159083346,
        "sender_full_name": "lqd",
        "timestamp": 1550767325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ok that was roughly what I expected =)</p>",
        "id": 159148550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550834159
    },
    {
        "content": "<p>IIRC, those are places where we put in special place checks for the old NLL</p>",
        "id": 159148605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550834185
    },
    {
        "content": "<p>it's <em>probably</em> not worth worrying about that <em>just now</em>, but it will be something we have to think about how to tackle at some point</p>",
        "id": 159148612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550834213
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 159184812,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550864279
    }
]