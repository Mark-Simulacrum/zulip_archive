[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> thanks for the initial review on <a href=\"https://github.com/rust-lang-nursery/polonius/issues/99\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/99\">polonius#99</a>, as mentioned in the PR I opened it for discussion around how we expect errors to work (since these are a different kind of error than before, and it's the first such new kind) in polonius itself and in communicating them with rustc; if this was an acceptable way to do so for this new kind; how would we expect to organize tests for the different kinds of errors (we talked about reorganizing them before, providing higher levels assertions to check for facts, reducing duplication, and more).</p>",
        "id": 161234884,
        "sender_full_name": "lqd",
        "timestamp": 1553079622
    },
    {
        "content": "<p>I'm also unsure about the plan for these errors, especially that they can be \"duplicated\" per cfg point where the regions in error are live (I forget the details, handwaving here)</p>",
        "id": 161234996,
        "sender_full_name": "lqd",
        "timestamp": 1553079751
    },
    {
        "content": "<p>but if the PR is good enough (modulo the \"Relation\" comment ofc which I'll fix ASAP) I can also just add tests as we've been writing them (might also be interesting to accept the lack of a relation facts file as an empty relation + a warning or something: a tiny bit more backwards compatibility with old facts generated by rustc)</p>",
        "id": 161235240,
        "sender_full_name": "lqd",
        "timestamp": 1553079992
    },
    {
        "content": "<p>and also I forgot: discussion about this kind of errors in 1) datafrogopt, and whether they matter in 2) the location insensitive analysis, 3) ofc the hybrid analysis</p>",
        "id": 161235368,
        "sender_full_name": "lqd",
        "timestamp": 1553080134
    },
    {
        "content": "<p>(and ofc then I'll need to make rustc emit these facts)</p>",
        "id": 161235414,
        "sender_full_name": "lqd",
        "timestamp": 1553080178
    },
    {
        "content": "<p>hmm I think I missed these comments</p>",
        "id": 164021568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1556047622
    },
    {
        "content": "<p>OK, so, my thoughts here:</p>",
        "id": 165102018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557256769
    },
    {
        "content": "<p>1. I think it's fine to just have multiple output relations, one per sort of error</p>",
        "id": 165102033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557256780
    },
    {
        "content": "<p>2. We may however want to be careful about the duplicates. I wonder if polonius would be a good place to \"suppress\" them</p>",
        "id": 165102064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557256802
    },
    {
        "content": "<p>I'm just imagining it'll be tedious to test with a ton of duplicates</p>",
        "id": 165102147,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557256827
    },
    {
        "content": "<p>datafrog doesn't currently have any kind of \"aggregate\" operator I guess (e.g., to take the \"minimum\" or something)</p>",
        "id": 165102181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557256854
    }
]