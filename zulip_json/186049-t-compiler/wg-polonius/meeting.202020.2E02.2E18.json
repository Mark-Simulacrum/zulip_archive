[
    {
        "content": "<p>Hi! I'm busy tomorrow but I'll report early: I have fixed the errors that CI and <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> helped alerting me to, and I think the Polonius PR is ready to merge. I have documented all caveats I can think of in <a href=\"https://github.com/rust-lang-nursery/polonius/issues/135\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/135\">polonius#135</a>. My plan is to document everything in the Book in a separate PR, because this one is blocking the outstanding <a href=\"https://github.com/rust-lang/rust/issues/68993\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68993\">rust#68993</a>.</p>",
        "id": 188402351,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1581968366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> awesome <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 188402663,
        "sender_full_name": "lqd",
        "timestamp": 1581968724
    },
    {
        "content": "<p>I looked at it back in november and once again earlier quickly, but it did look good to me</p>",
        "id": 188402746,
        "sender_full_name": "lqd",
        "timestamp": 1581968846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> I know niko looked it over already but did you happen to add some smoke tests in the rustc PR btw ? just a few that will be always run (so they have to be fast and not OOM ;) to make sure move errors don't randomly break when some other unrelated code is changed (there are some of those smoke tests for other -Z polonius features in a nll/polonius test subfolder)</p>",
        "id": 188402927,
        "sender_full_name": "lqd",
        "timestamp": 1581969040
    },
    {
        "content": "<p>I did add a few but I’m not sure I actually test them</p>",
        "id": 188402946,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1581969082
    },
    {
        "content": "<p>It’s probably a good idea to add some :)</p>",
        "id": 188402954,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1581969108
    },
    {
        "content": "<p>This is for the compiletests right?</p>",
        "id": 188403011,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1581969148
    },
    {
        "content": "<p>yeah</p>",
        "id": 188403013,
        "sender_full_name": "lqd",
        "timestamp": 1581969153
    },
    {
        "content": "<p>let me link you to the folder it'll be easier</p>",
        "id": 188403019,
        "sender_full_name": "lqd",
        "timestamp": 1581969166
    },
    {
        "content": "<p>so that you see the compile flags dance</p>",
        "id": 188403023,
        "sender_full_name": "lqd",
        "timestamp": 1581969179
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/tree/master/src/test/ui/nll/polonius\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/tree/master/src/test/ui/nll/polonius\">https://github.com/rust-lang/rust/tree/master/src/test/ui/nll/polonius</a></p>",
        "id": 188403055,
        "sender_full_name": "lqd",
        "timestamp": 1581969212
    },
    {
        "content": "<p>any one of those  tests (move errors could be another failing test) asks to be run under polonius (with or without using the polonius compare mode) to ensure it will succeed/fail even if the compare-mode itself isn't used (which it can't really be, because of the OOMs but that's a different issue :)</p>",
        "id": 188403177,
        "sender_full_name": "lqd",
        "timestamp": 1581969348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> <a href=\"https://github.com/rust-lang-nursery/polonius/issues/135\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/135\">polonius#135</a> looks good to me — in any case, whatever nits I may have (and I don't have any) are less important than the fact that the rustc polonius compare-mode tests (minus the ones OOM-ing) pass, and there are <em>some</em> new tests exercizing these awesome new polonius move errors :) since you've designed the rules with niko last time, and this matches closely, I say let's merge now, wdyt ?</p>",
        "id": 188410051,
        "sender_full_name": "lqd",
        "timestamp": 1581977874
    },
    {
        "content": "<p>then I can try to publish (it didn't work last time, but maybe it will this time :) so that the rustc PR is unblocked</p>",
        "id": 188410157,
        "sender_full_name": "lqd",
        "timestamp": 1581978001
    },
    {
        "content": "<p>(when you do update that PR to the future new polonius-engine version and a couple of move errors smoke tests, don't forget to rustfmt that one failing file — and you can then at your leisure <code>@bors r=nikomatsakis,lqd</code> <span aria-label=\"rocket\" class=\"emoji emoji-1f680\" role=\"img\" title=\"rocket\">:rocket:</span>)</p>",
        "id": 188410331,
        "sender_full_name": "lqd",
        "timestamp": 1581978159
    },
    {
        "content": "<p>merged, will work on removing the lalrpop warnings now</p>",
        "id": 188411825,
        "sender_full_name": "lqd",
        "timestamp": 1581980177
    },
    {
        "content": "<p>it's only in test code (since the warnings are in the lalrpop generated code from <code>polonius-parser</code>) but still, <a href=\"https://github.com/rust-lang/polonius/pull/142\" target=\"_blank\" title=\"https://github.com/rust-lang/polonius/pull/142\">https://github.com/rust-lang/polonius/pull/142</a> – I'll merge that once CI passes, to try and publish the new release (hopefully it'll work this time)</p>",
        "id": 188412082,
        "sender_full_name": "lqd",
        "timestamp": 1581980568
    },
    {
        "content": "<p>it did work this time, <code>polonius-engine</code> 0.12 published</p>",
        "id": 188414274,
        "sender_full_name": "lqd",
        "timestamp": 1581984084
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204115\">Albin Stjerna</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/meeting.202020.2E02.2E18/near/188402946\" title=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/meeting.202020.2E02.2E18/near/188402946\">said</a>:</p>\n<blockquote>\n<p>I did add a few but I’m not sure I actually test them</p>\n</blockquote>\n<p>where are those btw ? I don't think I saw them in <a href=\"https://github.com/rust-lang/rust/issues/68993\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68993\">#68993</a></p>",
        "id": 188458446,
        "sender_full_name": "lqd",
        "timestamp": 1582038601
    },
    {
        "content": "<p>I didn't see either the places where rustc would read the polonius move errors and emit them ? (maybe this PR is solely dedicated to fact renaming ? if that's the case, disregard what I've said about adding compiletests to check the emitted move errors of course; I probably misunderstood that this PR was the rustc side of your polonius move error work)</p>",
        "id": 188458722,
        "sender_full_name": "lqd",
        "timestamp": 1582038766
    },
    {
        "content": "<blockquote>\n<p>I didn't see either the places where rustc would read the polonius move errors and emit them ? (maybe this PR is solely dedicated to fact renaming ? if that's the case, disregard what I've said about adding compiletests to check the emitted move errors of course; I probably misunderstood that this PR was the rustc side of your polonius move error work)</p>\n</blockquote>\n<p>No that’s correct and you’re right; I should add some smoke tests to the Rust PR!</p>",
        "id": 188558562,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1582128879
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> what would they test if move errors are not emitted yet ? the existing smoke tests under <code>x.py test</code> will test that \"rustc master + polonius 0.11\" has the same behaviour as \"rustc + your PR + polonius 0.12\", and you'd check that the tests under the polonius compare-mode (minus OOMs) behave similarly (as you've already been doing)</p>",
        "id": 188566170,
        "sender_full_name": "lqd",
        "timestamp": 1582133765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> however, if your PR <em>does</em> make rustc emit the move errors that polonius 0.12 computes -- which is what I'm not sure about, hence the confusion :) the PR description only mentions the fact format, and fact generation to compute move errors -- then yeah for sure we need smoke tests :)</p>",
        "id": 188567262,
        "sender_full_name": "lqd",
        "timestamp": 1582134562
    },
    {
        "content": "<p>(I mean, the move errors <em>could be</em> emitted using the same codepath as other polonius errors; which is something that wasn't possible with subset errors for example)</p>",
        "id": 188567382,
        "sender_full_name": "lqd",
        "timestamp": 1582134638
    },
    {
        "content": "<p>Err, I think the new errors are a proper subset of the old errors and that they are emitted using the same code path, which means that the tests as they currently are wouldn’t pass</p>",
        "id": 188567561,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1582134743
    },
    {
        "content": "<p>Because some now fixed errors are expected</p>",
        "id": 188567624,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1582134781
    },
    {
        "content": "<p>yeah I don't know, I can't easily tell for sure as I'm less familiar about them than you are, if they are perfectly matching what is expected or somehow ignored and the existing old codepath emits them equally well :)</p>",
        "id": 188567779,
        "sender_full_name": "lqd",
        "timestamp": 1582134869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> a possible way to test could be to temporarily disable computing move errors in polonius -- if a given move error test then fails under -Zpolonius, we'll know it works :)</p>",
        "id": 188569032,
        "sender_full_name": "lqd",
        "timestamp": 1582135681
    },
    {
        "content": "<p>No wait, now I remember. Move errors should <em>not</em> be reported in Rust, the situation should be identical to subset errors; as far as I remember the responses from Polonius aren’t “connected” to anything</p>",
        "id": 188570430,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1582136632
    },
    {
        "content": "<p>But I’ll check because I don’t remember clearly</p>",
        "id": 188570481,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1582136646
    },
    {
        "content": "<p>polonius sends them to rustc here <a href=\"https://github.com/rust-lang/polonius/blob/master/polonius-engine/src/output/mod.rs#L172-L174\" target=\"_blank\" title=\"https://github.com/rust-lang/polonius/blob/master/polonius-engine/src/output/mod.rs#L172-L174\">https://github.com/rust-lang/polonius/blob/master/polonius-engine/src/output/mod.rs#L172-L174</a>, but I don't see rustc reading that <code>move_errors</code> field, hence my confusion :)</p>",
        "id": 188570521,
        "sender_full_name": "lqd",
        "timestamp": 1582136677
    },
    {
        "content": "<p>(and that subset errors needed to be specifically emitted under -Zpolonius, if the situation is identical)</p>",
        "id": 188570617,
        "sender_full_name": "lqd",
        "timestamp": 1582136757
    },
    {
        "content": "<p>to clear things up I built the PR locally:</p>",
        "id": 188627796,
        "sender_full_name": "lqd",
        "timestamp": 1582196336
    },
    {
        "content": "<ul>\n<li>if I comment the lines above (storing the move errors in the polonius output), no polonius unit test fail but the dedicated inputs change behaviour, eg the smoke test <code>basic_move_error()</code></li>\n</ul>",
        "id": 188627898,
        "sender_full_name": "lqd",
        "timestamp": 1582196430
    },
    {
        "content": "<ul>\n<li>extracting those 3 smoke tests to a dedicated file, and trying it out with this locally built version of the PR using this polonius without move-errors, it still fails to compile</li>\n</ul>",
        "id": 188627956,
        "sender_full_name": "lqd",
        "timestamp": 1582196516
    },
    {
        "content": "<p>the errors are indeed move/init errors</p>",
        "id": 188628025,
        "sender_full_name": "lqd",
        "timestamp": 1582196560
    },
    {
        "content": "<p>this seems to match what I was saying, that rustc wouldn't emit the move errors that polonius computes ?</p>",
        "id": 188628138,
        "sender_full_name": "lqd",
        "timestamp": 1582196679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> does that match your understanding as well ?</p>",
        "id": 188628474,
        "sender_full_name": "lqd",
        "timestamp": 1582197102
    },
    {
        "content": "<p>Yes!</p>",
        "id": 188745416,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1582300819
    }
]