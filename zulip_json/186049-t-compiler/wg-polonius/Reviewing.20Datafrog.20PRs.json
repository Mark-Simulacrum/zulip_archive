[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> pointed my to a series of PRs opened against <code>datafrog</code> by a new contributor. 3/4 seem like pretty straightforward cleanup, and <a href=\"https://github.com/rust-lang/datafrog/issues/34\">rust-lang/datafrog#34</a> seems great, although I haven't checked the quality of the implementation.</p>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Can I review these? I don't think any of the cleanup is controversial (although the fact that <code>datafrog</code> uses long names for type parameters bums me out a bit), and I can do a first-pass on <a href=\"https://github.com/rust-lang/rust/issues/34\">#34</a> that should make it easier for you to give a final sign-off.</p>",
        "id": 247870699,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1627842103
    },
    {
        "content": "<p>I'm pretty sure you can review these and that it would be very appreciated :)</p>",
        "id": 247875377,
        "sender_full_name": "lqd",
        "timestamp": 1627849133
    },
    {
        "content": "<p>Will do. I guess my broader question is whether we should wait for Niko to sign off on smaller PRs, or if <span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span>  and/or me is enough. I would feel uncomfortable merging any big architectural changes without Niko's approval, but making him review everything seems like overkill</p>",
        "id": 247880312,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1627857005
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/34\">#34</a> isn't going to work as-is unfortunately (see my comment on the PR). It was a little more broad than I was expecting.</p>\n<p>My point about r+ rights still stands, however. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, would you be comfortable giving me and/or <span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> (if they don't already have it) permission to approve <code>datafrog</code> PRs?</p>",
        "id": 248411333,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628112421
    },
    {
        "content": "<p>(niko is on vacation) doesn't all of t-compiler including us t-compiler contributors already have r+ rights on datafrog (much like the other crates) ?</p>",
        "id": 248411643,
        "sender_full_name": "lqd",
        "timestamp": 1628112616
    },
    {
        "content": "<p>I see \"Only those with write access to this repository can merge pull requests.\" on <code>datafrog</code> PRs</p>",
        "id": 248411693,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628112668
    },
    {
        "content": "<p>But I use an internal GitLab for work, so maybe I'm interpreting that wrong?</p>",
        "id": 248411726,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628112699
    },
    {
        "content": "<p>Is <code>bors</code> enabled for <code>datafrog</code>?</p>",
        "id": 248411802,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628112737
    },
    {
        "content": "<p>I don't think it is enabled, unfortunately, like for polonius</p>",
        "id": 248411819,
        "sender_full_name": "lqd",
        "timestamp": 1628112755
    },
    {
        "content": "<p>we asked for it to be enabled before, and it seems it didn't work</p>",
        "id": 248411846,
        "sender_full_name": "lqd",
        "timestamp": 1628112777
    },
    {
        "content": "<p>(I looked and saw that Niko was merging everything manually in the past)</p>",
        "id": 248411871,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628112791
    },
    {
        "content": "<p>weird. I seem to remember a \"crate policy\" that rust-lang repositories must adhere to, but maybe this one is old enough. we'll need to fix at some point (probably only admins can do that)</p>",
        "id": 248411878,
        "sender_full_name": "lqd",
        "timestamp": 1628112799
    },
    {
        "content": "<p>however in the meantime I think just adding you to the wg would fix that</p>",
        "id": 248411897,
        "sender_full_name": "lqd",
        "timestamp": 1628112812
    },
    {
        "content": "<p>I'll open a PR on <code>teams</code></p>",
        "id": 248411926,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628112835
    },
    {
        "content": "<p>sweet</p>",
        "id": 248411931,
        "sender_full_name": "lqd",
        "timestamp": 1628112840
    },
    {
        "content": "<p><a href=\"https://crates.io/crates/datafrog\">https://crates.io/crates/datafrog</a> only has niko as an owner so we couldn't publish releases</p>",
        "id": 248411988,
        "sender_full_name": "lqd",
        "timestamp": 1628112857
    },
    {
        "content": "<p>we did fix that on the main polonius crate however <a href=\"https://crates.io/crates/polonius-engine\">https://crates.io/crates/polonius-engine</a></p>",
        "id": 248412020,
        "sender_full_name": "lqd",
        "timestamp": 1628112884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Reviewing.20Datafrog.20PRs/near/248411926\">said</a>:</p>\n<blockquote>\n<p>I'll open a PR on <code>teams</code></p>\n</blockquote>\n<p>ping me on that so I can approve it</p>",
        "id": 248412189,
        "sender_full_name": "lqd",
        "timestamp": 1628112989
    },
    {
        "content": "<p>(I won't be able to merge it)</p>",
        "id": 248412204,
        "sender_full_name": "lqd",
        "timestamp": 1628113001
    },
    {
        "content": "<p>I could merge <a href=\"https://github.com/rust-lang/datafrog/pull/32\">https://github.com/rust-lang/datafrog/pull/32</a> but we should use this as an opportunity to test that only being in the wg will be enough for you to do so :)</p>",
        "id": 248412466,
        "sender_full_name": "lqd",
        "timestamp": 1628113161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> just to check, you have merge rights on chalk eg <a href=\"https://github.com/rust-lang/chalk/pull/709\">https://github.com/rust-lang/chalk/pull/709</a> right ?</p>",
        "id": 248412969,
        "sender_full_name": "lqd",
        "timestamp": 1628113473
    },
    {
        "content": "<p>UI looks the same, so I think not unless that repo is managed by bors</p>",
        "id": 248413101,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628113557
    },
    {
        "content": "<p>wtf</p>",
        "id": 248413189,
        "sender_full_name": "lqd",
        "timestamp": 1628113593
    },
    {
        "content": "<p>ok let's then hope the teams PR will suffice for datafrog, otherwise I'll be your merge-button-as-a-service</p>",
        "id": 248413269,
        "sender_full_name": "lqd",
        "timestamp": 1628113667
    },
    {
        "content": "<p>Yeah, looks like they're using bors over there, so a bit different than for <code>datafrog</code>.</p>",
        "id": 248413272,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628113674
    },
    {
        "content": "<p>I must have remnants of prior rights that I probably shouldn't have anymore</p>",
        "id": 248413427,
        "sender_full_name": "lqd",
        "timestamp": 1628113798
    },
    {
        "content": "<p>(great work on the leaper caching PR btw)</p>",
        "id": 248413706,
        "sender_full_name": "lqd",
        "timestamp": 1628113940
    },
    {
        "content": "<p>(for the other <code>TC :- TC, TC</code> topic we've noted this as well with frank, right at the beginning of the project. We had quickly tried a similar solution and it didn't immediately produce the exact same <code>subset</code> tuples for some reason -- like, maybe a mistake was made -- and since it was the naive variant where performance wasn't as important, we didn't try to understand the difference or possible subtleties involved or try it on the rustc tests. That difference likely doesn't matter to produce the facts about live loans we're interested in, e.g. the subset relation is also different between naive and opt and it doesn't matter there either. In any case it should be more efficient indeed, maybe we'll get Naive fast enough to achieve niko's dream of deleting Opt :)</p>",
        "id": 248418110,
        "sender_full_name": "lqd",
        "timestamp": 1628116846
    },
    {
        "content": "<p>Yep, I figured it was something like that. Mostly I want to write things down so a) I don't forget and b) others can see when something is a good idea that just hasn't been implemented yet.</p>",
        "id": 248418507,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628117217
    },
    {
        "content": "<p>Interesting that the tuple counts were different, though. I'm pretty sure my formulation is accurate.</p>",
        "id": 248418605,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628117294
    },
    {
        "content": "<p>I think it is a good idea, and we should definitely try it again :)</p>",
        "id": 248418653,
        "sender_full_name": "lqd",
        "timestamp": 1628117332
    },
    {
        "content": "<p>mistakes were probably made</p>",
        "id": 248418709,
        "sender_full_name": "lqd",
        "timestamp": 1628117386
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> does GH allow you to merge datafrog PRs now ?</p>",
        "id": 248418989,
        "sender_full_name": "lqd",
        "timestamp": 1628117605
    },
    {
        "content": "<p>It does! Can we approve the README one and the module splitting?</p>",
        "id": 248419242,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628117766
    },
    {
        "content": "<p>I'd say so yes</p>",
        "id": 248419313,
        "sender_full_name": "lqd",
        "timestamp": 1628117819
    },
    {
        "content": "<p>Alright, I'll check out the modules one real quick to make sure everything's working</p>",
        "id": 248419378,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628117876
    },
    {
        "content": "<p>esp because of:<br>\n<span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/datafrog.20PRs/near/247723084\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/datafrog/pull/32/\">https://github.com/rust-lang/datafrog/pull/32/</a> seems like a no-brainer</p>\n</blockquote>",
        "id": 248419385,
        "sender_full_name": "lqd",
        "timestamp": 1628117880
    },
    {
        "content": "<p>sweet, thank you</p>",
        "id": 248419457,
        "sender_full_name": "lqd",
        "timestamp": 1628117918
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/datafrog/issues/32\">rust-lang/datafrog#32</a> works on my machine, although I left a small nit (not sure if I should just commit on top and merge?). I merged the README one as well</p>",
        "id": 248420772,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628118847
    },
    {
        "content": "<p>I'm not crazy about <a href=\"https://github.com/rust-lang/datafrog/issues/33\">rust-lang/datafrog#33</a>, since it leads to really long parameter lists and makes it hard to differentiate between types vs. type parameters at a glance. I would prefer to keep things short, maybe like:</p>\n<p><code>T, Tuple</code> -&gt; <code>T</code><br>\n<code>K, Key</code> -&gt; <code>Key</code><br>\n<code>V, Val, Value</code> -&gt; <code>Val</code><br>\n<code>Result</code> -&gt; <code>Out</code></p>\n<p>etc.</p>\n<p>I'm new here, though so whatever fits your mental model.</p>",
        "id": 248421070,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628119074
    },
    {
        "content": "<p>agreed, such shorter names seem more idiomatic but I don't have too strong of an opinion about this, I don't particularly mind the current state of things either</p>",
        "id": 248422230,
        "sender_full_name": "lqd",
        "timestamp": 1628119924
    },
    {
        "content": "<blockquote>\n<p>not sure if I should just commit on top and merge</p>\n</blockquote>\n<p>As a passing-through comment, for small enough changes to <em>my own repositories</em>, I make changes to the commit itself during a git rebase and force push to the contributor's fork, which updates the PR. I don't see a reason to have an extra commit or to involve the contributor in another cycle to satiate my own (peculiar) reviewing requirements. Just saying that as a possible alternative.</p>",
        "id": 248743089,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1628382216
    },
    {
        "content": "<p>That's a good tip <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> . I would take the same approach if I did any open-source maintenance; it feels wrong to put 100% of the cost of nitpicking on the submitter vs. the reviewer. I wasn't actually aware you could push to PR branches on GitHub, since I haven't seen any Rust org repos do it. I think I'll wait a few days and then do just that, since I have some minor changes that will conflict.</p>",
        "id": 248744810,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628384684
    },
    {
        "content": "<p>That’s what the little checkmark box “allow maintainers to make changes to this PR” does when is, I believe.</p>",
        "id": 248746709,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1628388164
    },
    {
        "content": "<p>Hi, it's me \"new contributor\". <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>🏻</p>\n<p>Since my only goal with <a href=\"https://github.com/rust-lang/datafrog/pull/33\">https://github.com/rust-lang/datafrog/pull/33</a> was the unification of naming schemes for generics I just wanted to say that I'd be just as happy to update the PR to make it go the other way: from <code>Value1</code> to <code>V1</code>, etc (or whatever else scheme would preferable). Assuming the team deems it a worthwhile change, of course.<br>\nI for one just found that having generic types that \"play the same role\" in different functions/types made it easier to see their similarities/differences, while getting familiar with the codebase, by reducing the additional cognitive load of \"what's called Val1 in function x is actually conceptionally the same as V1 in function y, as well as Value1 in function z\" and figured such a change might help others, too.</p>",
        "id": 253162020,
        "sender_full_name": "regexident",
        "timestamp": 1631567928
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Reviewing.20Datafrog.20PRs/near/248422230\">said</a>:</p>\n<blockquote>\n<p>agreed, such shorter names seem more idiomatic but I don't have too strong of an opinion about this, I don't particularly mind the current state of things either</p>\n</blockquote>\n<p>I'd prefer to leave things as they are. The length of the type parameter names is a personal preference, and it's better to let the author use the convention that makes sense to them rather than try to pick a standard one. With more experience, we may find a convention that everyone can agree is clearly better, but I haven't spent enough time in the codebase yet.</p>",
        "id": 253453287,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1631726233
    },
    {
        "content": "<p>So if you're writing PRs, don't worry too much about being globally consistent: just use what makes sense in context.</p>",
        "id": 253453499,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1631726298
    }
]