[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/polonius/pull/130\" target=\"_blank\" title=\"https://github.com/rust-lang/polonius/pull/130\">https://github.com/rust-lang/polonius/pull/130</a> <br>\nthose ugly clone came from <code>move/expect reference</code> errors, I'm trying to resolve.<br>\n<a href=\"/user_uploads/4715/_SFOdCImc050I7o9TWgzca1x/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/_SFOdCImc050I7o9TWgzca1x/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/_SFOdCImc050I7o9TWgzca1x/pasted_image.png\"></a></div>",
        "id": 176566557,
        "sender_full_name": "csmoe",
        "timestamp": 1569419731
    },
    {
        "content": "<p>If you can't find a way to work around that, maybe this is a good time to do the refactoring thing where we split the facts into parts for the different stages of the computation</p>",
        "id": 176567371,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1569420159
    },
    {
        "content": "<p>As I recall all parts of the computation use their own inputs, except for the CFG, which is used by all of them I think</p>",
        "id": 176567495,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1569420233
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> is this <a href=\"https://github.com/rust-lang/polonius/issues/112\" target=\"_blank\" title=\"https://github.com/rust-lang/polonius/issues/112\">refactoring</a>?</p>",
        "id": 176568380,
        "sender_full_name": "csmoe",
        "timestamp": 1569420781
    },
    {
        "content": "<p>Yes, exactly that one!</p>",
        "id": 176568417,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1569420804
    },
    {
        "content": "<p>I had intended to do it myself, but if you feel up for it go ahead!</p>",
        "id": 176568432,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1569420814
    },
    {
        "content": "<p>But maybe check with err someone who isn't an overwintered master's student first :)</p>",
        "id": 176568445,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1569420832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> request for a review, \"clones\" cleared.</p>",
        "id": 177151723,
        "sender_full_name": "csmoe",
        "timestamp": 1570024337
    },
    {
        "content": "<p>ok so I just merged this, but then I realized it conflicts something bad with <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>'s renaming PR <a href=\"https://github.com/rust-lang-nursery/polonius/issues/127\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/127\">polonius#127</a></p>",
        "id": 177224833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570092102
    },
    {
        "content": "<p>which I was <em>also</em> about to go merge</p>",
        "id": 177224839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570092112
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> do you think you could squash/rebase that PR? (I probably should've merged it first, since it is older :doh: )</p>",
        "id": 177224886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570092140
    },
    {
        "content": "<p>:doh:</p>",
        "id": 177224913,
        "sender_full_name": "lqd",
        "timestamp": 1570092175
    },
    {
        "content": "<p>sure, I planned to squash after making sure you liked the result</p>",
        "id": 177224933,
        "sender_full_name": "lqd",
        "timestamp": 1570092202
    },
    {
        "content": "<p>esp wrt lower case naming in the rules comments</p>",
        "id": 177224947,
        "sender_full_name": "lqd",
        "timestamp": 1570092220
    },
    {
        "content": "<p>I think I'm <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> on that</p>",
        "id": 177225366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570092613
    },
    {
        "content": "<p>closer matching between comments and code seems good</p>",
        "id": 177225370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570092619
    },
    {
        "content": "<p>alright I'll do it at lunch break</p>",
        "id": 177225401,
        "sender_full_name": "lqd",
        "timestamp": 1570092667
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> &lt;3</p>",
        "id": 177227505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570094790
    },
    {
        "content": "<p>omg the conflicts <span aria-label=\"tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"tears\">:tears:</span></p>",
        "id": 177233801,
        "sender_full_name": "lqd",
        "timestamp": 1570101261
    },
    {
        "content": "<p>oh wow</p>",
        "id": 177234535,
        "sender_full_name": "lqd",
        "timestamp": 1570102071
    },
    {
        "content": "<p>maybe, and I can't stress this enough, rebasing and then squasing was not the smartest of moves</p>",
        "id": 177236980,
        "sender_full_name": "lqd",
        "timestamp": 1570104486
    },
    {
        "content": "<p>done <a href=\"https://github.com/rust-lang/polonius/pull/127\" target=\"_blank\" title=\"https://github.com/rust-lang/polonius/pull/127\">https://github.com/rust-lang/polonius/pull/127</a></p>",
        "id": 177236997,
        "sender_full_name": "lqd",
        "timestamp": 1570104510
    },
    {
        "content": "<p>After a week of working with it, I'm not so sure about this change anymore, it seems we've traded complexity in defining function/type signatures (with 1 generic type parameter instead of 5) in 12 different places, for <code>T::</code>noise in 200+ different places</p>",
        "id": 178007042,
        "sender_full_name": "lqd",
        "timestamp": 1570915277
    },
    {
        "content": "<p>Is this not merged into rustc yet?</p>",
        "id": 178097648,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571055500
    },
    {
        "content": "<p>I just rebased off of Polonius master and apparently it doesn't compile with current rustc master</p>",
        "id": 178097677,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571055526
    },
    {
        "content": "<p>the change is only on master here yes, rustc wasn't updated to this new API</p>",
        "id": 178097696,
        "sender_full_name": "lqd",
        "timestamp": 1571055548
    },
    {
        "content": "<p>Ah, ok</p>",
        "id": 178097716,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571055572
    },
    {
        "content": "<p>I'm lukewarm on doing so but we can talk about it at the next meeting, maybe you'll have an opinion on it as well</p>",
        "id": 178097790,
        "sender_full_name": "lqd",
        "timestamp": 1571055612
    },
    {
        "content": "<p>I don't think I do, but sure</p>",
        "id": 178097806,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571055637
    },
    {
        "content": "<p>I can send you a diff if you want to build it tho</p>",
        "id": 178097813,
        "sender_full_name": "lqd",
        "timestamp": 1571055644
    },
    {
        "content": "<p>Yes please,</p>",
        "id": 178097817,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571055651
    },
    {
        "content": "<p>ok just a sec</p>",
        "id": 178097824,
        "sender_full_name": "lqd",
        "timestamp": 1571055658
    },
    {
        "content": "<p>It would be faster than me figuring it out myself :)</p>",
        "id": 178097828,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571055663
    },
    {
        "content": "<p>I'm 4-5 days behind, so something like <a href=\"https://gist.github.com/lqd/03862f0f65a051fd60ef8074089b5c05\" target=\"_blank\" title=\"https://gist.github.com/lqd/03862f0f65a051fd60ef8074089b5c05\">https://gist.github.com/lqd/03862f0f65a051fd60ef8074089b5c05</a></p>",
        "id": 178098069,
        "sender_full_name": "lqd",
        "timestamp": 1571055904
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 178098960,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571056724
    },
    {
        "content": "<p>I think I have path-precise initialisation tracking now, but I'd like to test that it works :)</p>",
        "id": 178098976,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571056744
    },
    {
        "content": "<p>Also, I think I may have a prototype for move errors literally in a few hours if that works</p>",
        "id": 178098992,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571056761
    },
    {
        "content": "<p>But no way of testing it haha</p>",
        "id": 178098995,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571056768
    },
    {
        "content": "<blockquote>\n<p>Thank you!</p>\n</blockquote>\n<p>you're welcome</p>",
        "id": 178099113,
        "sender_full_name": "lqd",
        "timestamp": 1571056870
    },
    {
        "content": "<p>yeah I'm unsure/don't remember the plan for those sorry, I can't help much</p>",
        "id": 178099187,
        "sender_full_name": "lqd",
        "timestamp": 1571056922
    },
    {
        "content": "<p>No problem, I don't think there was even a plan :)</p>",
        "id": 178099212,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1571056940
    },
    {
        "content": "<blockquote>\n<p>I'm 4-5 days behind, so something like <a href=\"https://gist.github.com/lqd/03862f0f65a051fd60ef8074089b5c05\" target=\"_blank\" title=\"https://gist.github.com/lqd/03862f0f65a051fd60ef8074089b5c05\">https://gist.github.com/lqd/03862f0f65a051fd60ef8074089b5c05</a></p>\n</blockquote>\n<p>why not PR this</p>",
        "id": 178143280,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1571090854
    },
    {
        "content": "<p>oh, I realize that there is no polonius release with the changes</p>",
        "id": 178165454,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1571121723
    },
    {
        "content": "<p>I'd like to talk about this change first, and even so we wouldn't need to do a release just for this change per se</p>",
        "id": 178172662,
        "sender_full_name": "lqd",
        "timestamp": 1571129279
    },
    {
        "content": "<p>OK, finally caught up here</p>",
        "id": 179364292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572376789
    },
    {
        "content": "<p>it seems like the \"pro\" of this change is </p>\n<ul>\n<li>fewer type parameters to copy-and-paste, yes</li>\n<li>can add or refactor with less disruption</li>\n<li>we can do things like <code>#[derive(Debug)]</code> now, which is kinda nice, though not a big thing</li>\n</ul>\n<p>the con is that you have to write <code>T::Fact</code> instead of <code>Fact</code>, primarily?</p>\n<p>I'm ok either way I guess. I tend to ultimately move to the \"bundle of associated types\", but in this case it doesn't really offer that much in particular.</p>",
        "id": 179364409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572376867
    },
    {
        "content": "<p>maybe we can live with it for a while and after we have enough anecdata after the focus week, we can take a look at this again</p>",
        "id": 179364744,
        "sender_full_name": "lqd",
        "timestamp": 1572377045
    },
    {
        "content": "<p>I'm looking at your PR <a href=\"https://github.com/rust-lang-nursery/polonius/issues/134\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/134\">polonius#134</a>, <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 179364862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377111
    },
    {
        "content": "<p>yay</p>",
        "id": 179364999,
        "sender_full_name": "lqd",
        "timestamp": 1572377198
    },
    {
        "content": "<p>it also relates to Albin's initialization PR, errors in general (move/init errors, illegal subsets) etc</p>",
        "id": 179365051,
        "sender_full_name": "lqd",
        "timestamp": 1572377240
    },
    {
        "content": "<p>(and I don't know how you envisioned <em>those</em> and their integration with rustc)</p>",
        "id": 179365192,
        "sender_full_name": "lqd",
        "timestamp": 1572377327
    },
    {
        "content": "<p>seems like we should land <a href=\"https://github.com/rust-lang-nursery/polonius/issues/134\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/134\">polonius#134</a>?</p>",
        "id": 179365237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377359
    },
    {
        "content": "<p>although I don't know what <span class=\"user-mention\" data-user-id=\"204115\">@Albin Stjerna</span> was referring to with <code>mem::replace</code></p>",
        "id": 179365284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377399
    },
    {
        "content": "<p>an older rev where I mem::replaced some of AllFacts' clones Vecs instead of cloning <em>them</em></p>",
        "id": 179365385,
        "sender_full_name": "lqd",
        "timestamp": 1572377448
    },
    {
        "content": "<p>Nevermind that</p>",
        "id": 179365389,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572377449
    },
    {
        "content": "<p>okok</p>",
        "id": 179365426,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377476
    },
    {
        "content": "<p>if we were going to get rid of the clones</p>",
        "id": 179365440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377489
    },
    {
        "content": "<p>we can land if you think it's interesting niko, esp if it makes sense wrt the things we don't know about what you had in mind</p>",
        "id": 179365441,
        "sender_full_name": "lqd",
        "timestamp": 1572377491
    },
    {
        "content": "<blockquote>\n<p>if we were going to get rid of the clones</p>\n</blockquote>\n<p>I guess we'd have to change to <code>&amp;AllFacts</code></p>",
        "id": 179365525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377531
    },
    {
        "content": "<p>I don't quite know why we don't give ownership</p>",
        "id": 179365529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377535
    },
    {
        "content": "<p>me neither tbh</p>",
        "id": 179365558,
        "sender_full_name": "lqd",
        "timestamp": 1572377554
    },
    {
        "content": "<blockquote>\n<p>we can land if you think it's interesting niko, esp if it makes sense wrt the things we don't know about what you had in mind</p>\n</blockquote>\n<p>well I definitely think factoring out the \"common code\" is good</p>",
        "id": 179365574,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377566
    },
    {
        "content": "<p>I'm more and more hoping that we can get away frm \"specify the algorithm\"</p>",
        "id": 179365581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377574
    },
    {
        "content": "<p>I guess that coming back to things I feel a bit overwhelmed by \"too many choices\"</p>",
        "id": 179365620,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377605
    },
    {
        "content": "<p>one question I had was would rustc just call polonius once ? or differently, say to get init/move errors at a point in time, borrowck errors at another</p>",
        "id": 179365647,
        "sender_full_name": "lqd",
        "timestamp": 1572377634
    },
    {
        "content": "<p>I think rustc would call polonius once</p>",
        "id": 179365713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377650
    },
    {
        "content": "<p>presently we do all those things at once</p>",
        "id": 179365728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377659
    },
    {
        "content": "<p>because I was wondering whether the current NLL code would eg use liveness computed by polonius</p>",
        "id": 179365798,
        "sender_full_name": "lqd",
        "timestamp": 1572377706
    },
    {
        "content": "<blockquote>\n<p>I don't quite know why we don't give ownership</p>\n</blockquote>\n<p>maybe  just so the cli can run graphviz w/o a clone?</p>",
        "id": 179365809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377715
    },
    {
        "content": "<blockquote>\n<p>because I was wondering whether the current NLL code would eg use liveness computed by polonius</p>\n</blockquote>\n<p>I would hope so</p>",
        "id": 179365829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377725
    },
    {
        "content": "<p>I mean it doesn't <em>now</em></p>",
        "id": 179365840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377733
    },
    {
        "content": "<p>still, what do you mean actually?</p>",
        "id": 179365851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377740
    },
    {
        "content": "<p>in the presentation of errors?</p>",
        "id": 179365869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377748
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>I don't quite know why we don't give ownership</p>\n</blockquote>\n<p>maybe  just so the cli can run graphviz w/o a clone?</p>\n</blockquote>\n<p>That doesn't sound like a great trade-off honestly?</p>",
        "id": 179365876,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572377752
    },
    {
        "content": "<p>(I think all other uses of liveness would hopefully be replaced by polonius)</p>",
        "id": 179365891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377759
    },
    {
        "content": "<blockquote>\n<p>That doesn't sound like a great trade-off honestly?</p>\n</blockquote>\n<p>no, no it doesn't :)</p>",
        "id": 179365951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377768
    },
    {
        "content": "<p>given that we're cloning <em>anyway</em></p>",
        "id": 179365960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377774
    },
    {
        "content": "<p>yeah if all uses of liveness are replaced by polonius then we're good</p>",
        "id": 179365961,
        "sender_full_name": "lqd",
        "timestamp": 1572377774
    },
    {
        "content": "<p>I'm not 100% sure how to the \"nice error reporting\" would work -- I imagine we might be able to phrase some of what <em>it</em> does as well as polonius predicates -- but I assumed that would be something we'd worry about later</p>",
        "id": 179366020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377812
    },
    {
        "content": "<p>There goes the \"only calculate liveness for interesting variables\" idea</p>",
        "id": 179366021,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572377812
    },
    {
        "content": "<p>Why?</p>",
        "id": 179366033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377818
    },
    {
        "content": "<p>rustc already tries to avoid computing liveness</p>",
        "id": 179366064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377832
    },
    {
        "content": "<p>Ah</p>",
        "id": 179366070,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572377837
    },
    {
        "content": "<p>for liveness it can work</p>",
        "id": 179366075,
        "sender_full_name": "lqd",
        "timestamp": 1572377841
    },
    {
        "content": "<p>I guess my point is: I dont' think we use liveness for very much :)</p>",
        "id": 179366081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377844
    },
    {
        "content": "<p>Well, it's less restrictive than I had expected</p>",
        "id": 179366090,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572377847
    },
    {
        "content": "<p>it works now in my branch I mean</p>",
        "id": 179366097,
        "sender_full_name": "lqd",
        "timestamp": 1572377852
    },
    {
        "content": "<p>for initialization it's more shaky</p>",
        "id": 179366103,
        "sender_full_name": "lqd",
        "timestamp": 1572377856
    },
    {
        "content": "<p>what is \"it\" here?</p>",
        "id": 179366111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377860
    },
    {
        "content": "<p>...a relevant question</p>",
        "id": 179366126,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572377868
    },
    {
        "content": "<p>it = \"only calculating a limited subset of liveness\"</p>",
        "id": 179366134,
        "sender_full_name": "lqd",
        "timestamp": 1572377878
    },
    {
        "content": "<p>one thing: rustc does recompute a lot of the initialization stuff for the \"drop elaboration\" code. I am <strong>not</strong> envisioning that we move that into polonius (at this time)</p>",
        "id": 179366178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377883
    },
    {
        "content": "<p>also, what is your branch, <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>? :)</p>",
        "id": 179366204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377907
    },
    {
        "content": "<p>lol</p>",
        "id": 179366208,
        "sender_full_name": "lqd",
        "timestamp": 1572377913
    },
    {
        "content": "<p>I had an idea (in a different topic) of trying a more top-down approach that would only compute liveness for variables that we know are interesting because we know they have origins we are interested in, etc</p>",
        "id": 179366217,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572377920
    },
    {
        "content": "<blockquote>\n<p>also, what is your branch, <span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span>? :)</p>\n</blockquote>\n<p>to be clear, I just feel like you have a lot of branches :)</p>",
        "id": 179366235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377939
    },
    {
        "content": "<p>very true :)</p>",
        "id": 179366246,
        "sender_full_name": "lqd",
        "timestamp": 1572377947
    },
    {
        "content": "<p>also, maybe we should move this over to some other topic, or something</p>",
        "id": 179366258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572377954
    },
    {
        "content": "<p><a href=\"https://github.com/lqd/borrow-check/tree/prefiltering\" target=\"_blank\" title=\"https://github.com/lqd/borrow-check/tree/prefiltering\">https://github.com/lqd/borrow-check/tree/prefiltering</a> contains both placeholder loans and some of the \"filtering\" we're talking about here</p>",
        "id": 179366279,
        "sender_full_name": "lqd",
        "timestamp": 1572377968
    },
    {
        "content": "<p>it filters too much as it also does on initialization, only checking it for \"interesting variables\" which comes out of the liveness and invalidated/erroneous loans</p>",
        "id": 179366319,
        "sender_full_name": "lqd",
        "timestamp": 1572377998
    },
    {
        "content": "<p>and that would prevent getting all init/move errors ofc</p>",
        "id": 179366378,
        "sender_full_name": "lqd",
        "timestamp": 1572378010
    },
    {
        "content": "<p>ok</p>",
        "id": 179366392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572378021
    },
    {
        "content": "<p>once we can also solidify the plans wrt placeholder loans (eg the \"cfg root\" question, or how we'd emit those loans in rustc, say)</p>",
        "id": 179366461,
        "sender_full_name": "lqd",
        "timestamp": 1572378071
    },
    {
        "content": "<p>maybe land the \"context\" PR, etc then I can make PRs out of those branches</p>",
        "id": 179366476,
        "sender_full_name": "lqd",
        "timestamp": 1572378084
    },
    {
        "content": "<p>Once the context lands I can (more easily) start testing my move errors</p>",
        "id": 179366592,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1572378127
    },
    {
        "content": "<p>it's a bit tough to work on both perf and completeness at the same time as they step on each other's toes</p>",
        "id": 179366683,
        "sender_full_name": "lqd",
        "timestamp": 1572378192
    },
    {
        "content": "<blockquote>\n<p>it's a bit tough to work on both perf and completeness at the same time as they step on each other's toes</p>\n</blockquote>\n<p>yep this is why I think we should focus on completeness first</p>",
        "id": 179367788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572378974
    },
    {
        "content": "<blockquote>\n<p>once we can also solidify the plans wrt placeholder loans (eg the \"cfg root\" question, or how we'd emit those loans in rustc, say)</p>\n</blockquote>\n<p>yep! need to do that</p>",
        "id": 179367796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572378982
    }
]