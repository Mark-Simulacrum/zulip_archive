[
    {
        "content": "<p>So when should we do the next hackathon? :)</p>",
        "id": 260856991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636490182
    },
    {
        "content": "<p>I can't do November 26 or December 3, but any other time before Christmas works.</p>",
        "id": 260857769,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1636490573
    },
    {
        "content": "<p>december 10 then ?</p>",
        "id": 260858077,
        "sender_full_name": "lqd",
        "timestamp": 1636490715
    },
    {
        "content": "<p>That's fine. Is November 19 too soon?</p>",
        "id": 260858294,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1636490834
    },
    {
        "content": "<p>or maybe november 19 ?</p>",
        "id": 260858301,
        "sender_full_name": "lqd",
        "timestamp": 1636490837
    },
    {
        "content": "<p>I can't do this friday but likely can on the 19th</p>",
        "id": 260858416,
        "sender_full_name": "lqd",
        "timestamp": 1636490887
    },
    {
        "content": "<p>I can do Nov 19 I think</p>",
        "id": 261169833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636655704
    },
    {
        "content": "<p>Okay, let's do this Friday. I spent most of my Rust time last week dealing with <a href=\"https://github.com/rust-lang/rust/issues/90752\">#90752</a>, but I've also been reading up on HRTBs again. I also looked into some first-order theories this weekend that have quantifier elimination and might be able to model placeholder region relationships, namely atomless boolean algebras and boolean algebras with cardinality constraints. I mentioned at least one of these in my blog post. If that's successful, we could translate higher-rank types with restricted quantification(e.g., <code>for&lt;'a, 'b&gt; where 'a: 'b ...</code>) into constraints that Polonius can handle. I'm not sure this is the approach Niko has in mind, and in any case it's only part of the solution: it doesn't help us unify the constraints during type checking. But at least I'm having fun.</p>",
        "id": 261550168,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637006072
    },
    {
        "content": "<p>I don't know if I can make it this Friday or not actually</p>",
        "id": 261568219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637014787
    },
    {
        "content": "<p>I'll know soon :)</p>",
        "id": 261568224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637014790
    },
    {
        "content": "<p>but I definitely want to put in some time on the code regardless</p>",
        "id": 261568286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637014808
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> I'd love to read about that :)</p>",
        "id": 261568319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637014831
    },
    {
        "content": "<p>Sure, I'll take some time this evening to summarize what I was researching last night. My electrical engineering background isn't terribly useful, unfortunately. I have a few questions I have that a proper mathematician could answer pretty easily, although no one has studied Boolean Algebras in like 100 years. I'm also not sure whether it's important that this little portion of trait solving be decidable. The rest isn't AFAIK. It would be nice for a specification, though.</p>",
        "id": 261569792,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637015609
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Are we on for Friday or no? I've got to set my schedule for that day.</p>",
        "id": 261831834,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637175632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span>  I am available actually</p>",
        "id": 261841900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637180015
    },
    {
        "content": "<p>so we are on</p>",
        "id": 261841998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637180053
    },
    {
        "content": "<p>Okay, I'll push my meeting to the afternoon.</p>",
        "id": 261842061,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637180079
    },
    {
        "content": "<p>Did you see <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Quantifier.20elimination.20for.20HRTBs/near/261606107\">the QE thread</a> btw? You can skip the \"Boolean Algebra and Presburger Arithmetic\" section; the first section may be all we need. We found a proper mathematician! Or rather they found us.</p>",
        "id": 261843130,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637180534
    },
    {
        "content": "<p>Also, I'm curious how much of this you already knew. Sometimes I feel like I'm breathlessly explaining ideas that you figured out years ago. It's very zen master <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span> .</p>",
        "id": 261843787,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637180841
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> I haven't followed that one yet, but I will</p>",
        "id": 261859124,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637187583
    },
    {
        "content": "<p>my knowledge is kind of hit-or-miss in this area :)</p>",
        "id": 261859154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637187599
    },
    {
        "content": "<p>and I don't always know the proper terms for things</p>",
        "id": 261859222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637187611
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/next.20polonius.20hackathon.3F/near/261859222\">said</a>:</p>\n<blockquote>\n<p>and I don't always know the proper terms for things</p>\n</blockquote>\n<p>I've had to learn all this stuff from scratch, which makes conversations with people like <span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> kind of stressful. I'm terrified I'm gonna say something wrong or dumb or both!</p>",
        "id": 261859612,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637187828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> so-- actually</p>",
        "id": 261860361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188260
    },
    {
        "content": "<p>I realize I have some more conflcits</p>",
        "id": 261860371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188264
    },
    {
        "content": "<p>I'm somewhat inclined to say this hackathon is not meant to be</p>",
        "id": 261860410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188292
    },
    {
        "content": "<p>maybe we should push to Dec?</p>",
        "id": 261860413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188295
    },
    {
        "content": "<p>I'd like to fix a week though!</p>",
        "id": 261860431,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188310
    },
    {
        "content": "<p>Dec 3?</p>",
        "id": 261860446,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188321
    },
    {
        "content": "<p>Dec 10?</p>",
        "id": 261860493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188328
    },
    {
        "content": "<p>Either is ok for me</p>",
        "id": 261860495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637188330
    },
    {
        "content": "<p>I can't do the 3rd, and will be busy with holiday stuff any time after the 10th, so the 10th?</p>",
        "id": 261860539,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637188373
    },
    {
        "content": "<p>That still work for you <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>?</p>",
        "id": 261860576,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637188392
    },
    {
        "content": "<p>yeah, dec 10 still works for me</p>",
        "id": 261860946,
        "sender_full_name": "lqd",
        "timestamp": 1637188648
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/next.20polonius.20hackathon.3F/near/261859612\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/next.20polonius.20hackathon.3F/near/261859222\">said</a>:</p>\n<blockquote>\n<p>and I don't always know the proper terms for things</p>\n</blockquote>\n<p>I've had to learn all this stuff from scratch, which makes conversations with people like <span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> kind of stressful. I'm terrified I'm gonna say something wrong or dumb or both!</p>\n</blockquote>\n<p>I sympathize with this, and know and understand way less than you <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span> so this <a href=\"https://danluu.com/look-stupid/\">https://danluu.com/look-stupid/</a> was very interesting</p>",
        "id": 261861442,
        "sender_full_name": "lqd",
        "timestamp": 1637188929
    },
    {
        "content": "<p>Side note: I kind of enjoy looking stupid, because I figure it's good to model that for others.</p>",
        "id": 261939430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637248073
    },
    {
        "content": "<p>But I guess that comes with people recognizing that I am not, or at least me recognizing it, even though there is tons of stuff I am ignorant of.</p>",
        "id": 261939489,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637248089
    },
    {
        "content": "<p>But I did find that thinking of it as \"this is a service I can do to others\" takes some of the sting away :P</p>",
        "id": 261939538,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1637248113
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/next.20polonius.20hackathon.3F/near/261939538\">said</a>:</p>\n<blockquote>\n<p>But I did find that thinking of it as \"this is a service I can do to others\" takes some of the sting away <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>\n</blockquote>\n<p>I've been living most of my life in the service of others, as it turns out.</p>",
        "id": 261943896,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637249986
    },
    {
        "content": "<p>Thanks for posting that <span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span>, I hadn't read it before, although I have read some other Dan Luu. If that guy ever learns CSS he's gonna be huge.</p>",
        "id": 261944633,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1637250268
    },
    {
        "content": "<p>meanwhile I'm telling my friends about that one time when I might have actually meaningfully helped out some of the esteemed members of the Polonius working group, which have an impact on a much larger number of people than I can usually ever hope to reach</p>",
        "id": 262006931,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1637277979
    },
    {
        "content": "<p>Are we still on for the 10th? What do y'all wanna work on?</p>\n<p>I want to present/discuss the ideas I was talking about with <span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span>  in the other thread. I want to see what Niko thinks of embedding a bit of classical logic into the trait solver.</p>",
        "id": 263882181,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1638810473
    },
    {
        "content": "<p>I wasn't able to make much progress myself, but I'm still good for the 10th. I also wanted to hear more about these ideas (including the recent negation change, as I also incorrectly assumed <code>¬(a ⊆ b)</code> implied <code>b ⊂ a</code>when I read your implementation at first), and wanted to continue looking at your soufflé branch (hopefully I can do more of that by then) (but also would like to discuss whether you'd prefer we land that or that we'd look into DDlog), and also wanted to check what y'all thought about doing for .next</p>",
        "id": 263934957,
        "sender_full_name": "lqd",
        "timestamp": 1638830265
    },
    {
        "content": "<p>Shh, that was supposed to be a secret. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊆</mo></mrow><annotation encoding=\"application/x-tex\">\\subseteq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">⊆</span></span></span></span> is not a total order, just a partial one. Mario had it right all along, I just wrote in wrong in my initial commit.</p>",
        "id": 263939001,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1638832842
    }
]