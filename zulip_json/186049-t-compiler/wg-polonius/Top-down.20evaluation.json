[
    {
        "content": "<p>Something I noticed:</p>\n<p>Racket has a <a href=\"https://docs.racket-lang.org/datalog/datalog.html\">datalog implementation</a>. What's kind of interesting is their evaluation model:</p>\n<blockquote>\n<p>The package uses the tabled logic programming algorithm described in Efficient Top-Down Computation of Queries under the Well-Founded Semantics by W. Chen, T. Swift, and D. S. Warren. Another important reference is Tabled Evaluation with Delaying for General Logic Programs by W. Chen and D. S. Warren. Datalog is described in What You Always Wanted to Know About Datalog (And Never Dared to Ask) by Stefano Ceri, Georg Gottlob, and Letizia Tanca.</p>\n</blockquote>\n<p>This is the same strategy that the SLG solver in chalk uses!</p>",
        "id": 250394497,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629744431
    },
    {
        "content": "<p>I wonder if a top-down evaluation strategy would be a better fit. It'd be fun to port over the SLG solver to this simpler case (some of the annoying complexity would go away...)</p>",
        "id": 250394547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629744461
    },
    {
        "content": "<p>Might be interesting to experiment with the performance first though</p>",
        "id": 250394596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629744477
    },
    {
        "content": "<p>would be nicer than worry about magic sets</p>",
        "id": 250394670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629744495
    },
    {
        "content": "<p>/me is having flashbacks of asking to use the SLG solver years ago :p</p>",
        "id": 250396364,
        "sender_full_name": "lqd",
        "timestamp": 1629745266
    },
    {
        "content": "<p>I also remember subsumptive tabling being of interest for top-down eval (and there were analogue transforms to magic sets for bottom-up evaluation, the Demand Transform we've talked about before)</p>",
        "id": 250397081,
        "sender_full_name": "lqd",
        "timestamp": 1629745566
    },
    {
        "content": "<p>(IIRC XSB and YAP support datalog w/ top-down eval as well)</p>",
        "id": 250398051,
        "sender_full_name": "lqd",
        "timestamp": 1629745998
    },
    {
        "content": "<p>Howdy! My memory was that \"transitive closure\"-heavy programs don't benefit much from the magic set optimization (and thus from top-down pruning), since it's hard to tell which link in the chain is important for the final result. CFG reachability and <code>subset</code> are both TCs. That said, there's some potential pruning, e.g. for CFG locations where no loans are invalidated.</p>\n<p>While the nomenclature around magic sets confuses me, the basic idea is simple. <code>placeholder_subset</code> uses it when we only use edges starting from placeholder origins, for example.</p>",
        "id": 250398552,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1629746227
    },
    {
        "content": "<p>The idea is simple, but coding it by hand is annoying</p>",
        "id": 250399077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629746497
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Top-down.20evaluation/near/250396364\">said</a>:</p>\n<blockquote>\n<p>/me is having flashbacks of asking to use the SLG solver years ago :p</p>\n</blockquote>\n<p>Yeah :)</p>",
        "id": 250399163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629746527
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Top-down.20evaluation/near/250398552\">said</a>:</p>\n<blockquote>\n<p>While the nomenclature around magic sets confuses me (adorned predicates, SIPS, etc), the basic idea is simple. <code>placeholder_subset</code> uses it when we only use edges starting from placeholder origins, for example.</p>\n</blockquote>\n<p>yeah, and similarly for the other sharing / filtering in-between location-insensitive and location-sensitive analyses (only track loans which are invalidated, only track subsets downstream from the issuing origin of these invalidated loans, etc)</p>",
        "id": 250399862,
        "sender_full_name": "lqd",
        "timestamp": 1629746898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Top-down.20evaluation/near/250399077\">said</a>:</p>\n<blockquote>\n<p>The idea is simple, but coding it by hand is annoying</p>\n</blockquote>\n<p>Fair.</p>",
        "id": 250400254,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1629747089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Top-down.20evaluation/near/250399862\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Top-down.20evaluation/near/250398552\">said</a>:</p>\n<blockquote>\n<p>While the nomenclature around magic sets confuses me (adorned predicates, SIPS, etc), the basic idea is simple. <code>placeholder_subset</code> uses it when we only use edges starting from placeholder origins, for example.</p>\n</blockquote>\n<p>yeah, and similarly for the other sharing / filtering in-between location-insensitive and location-sensitive analyses (only track loans which are invalidated, only track subsets downstream from the issuing origin of these invalidated loans, etc)</p>\n</blockquote>\n<p>That's a good point. Top-down would probably work quite well for this.</p>",
        "id": 250400368,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1629747143
    }
]