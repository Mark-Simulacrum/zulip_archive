[
    {
        "content": "<p>Well, to begin I think the \"better visualisations\" is a good place to start</p>",
        "id": 247718218,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656788
    },
    {
        "content": "<p>that would be great, too!</p>",
        "id": 247718239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1627656796
    },
    {
        "content": "<p>I could work on dumping them I guess</p>",
        "id": 247718243,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656799
    },
    {
        "content": "<p>I'm sure that would pay off handsomely</p>",
        "id": 247718255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1627656807
    },
    {
        "content": "<p>if we get something nice</p>",
        "id": 247718266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1627656810
    },
    {
        "content": "<p>Well the problem is that we generate so many facts visualising them all creates so much clutter it's impossible to see anything</p>",
        "id": 247718331,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656838
    },
    {
        "content": "<p>we need to emit move errors from rustc, to be able to debug the move/init analysis. I feel Amanda had a branch doing that last time, and was testing with the UI tests at the time. but there were some that didn't work</p>",
        "id": 247718332,
        "sender_full_name": "lqd",
        "timestamp": 1627656838
    },
    {
        "content": "<p>Yes, that's correct</p>",
        "id": 247718397,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656851
    },
    {
        "content": "<p>Maybe I can go back and look at that</p>",
        "id": 247718412,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656859
    },
    {
        "content": "<p>Hopefully I still have that branch somewhere</p>",
        "id": 247718428,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656865
    },
    {
        "content": "<p>let's see</p>",
        "id": 247718512,
        "sender_full_name": "lqd",
        "timestamp": 1627656912
    },
    {
        "content": "<p>maybe you're going to need better tools at IMEA, and that would also help others</p>",
        "id": 247718536,
        "sender_full_name": "lqd",
        "timestamp": 1627656930
    },
    {
        "content": "<p>so the viz/debugging would also be worthwhile</p>",
        "id": 247718550,
        "sender_full_name": "lqd",
        "timestamp": 1627656942
    },
    {
        "content": "<p>That's precisely what I though</p>",
        "id": 247718557,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656948
    },
    {
        "content": "<p>probably more so than move/init wdyt?</p>",
        "id": 247718561,
        "sender_full_name": "lqd",
        "timestamp": 1627656949
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204115\">Amanda Stjerna</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Polonius.20Hackathon.202021-07-30/near/247718331\">said</a>:</p>\n<blockquote>\n<p>Well the problem is that we generate so many facts visualising them all creates so much clutter it's impossible to see anything</p>\n</blockquote>\n<p>Does the compiler have <code>serde</code> (or something else for parsing JSON) in its dependencies? One idea would be to have a command-line option that takes a JSON string that tells how to visualise stuff.</p>",
        "id": 247718632,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627656969
    },
    {
        "content": "<p>Well I think what they'd need the most from me is someone with compiler internals experience, and refreshing that is my main focus</p>",
        "id": 247718650,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656978
    },
    {
        "content": "<p>But both tasks would do that</p>",
        "id": 247718675,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627656992
    },
    {
        "content": "<p>I still like my idea of over-dumping data and then having an extra tool to process it and visualise it</p>",
        "id": 247718734,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627657029
    },
    {
        "content": "<p>That keeps the compiler less cluttered (at the expense of introducing a tool of course)</p>",
        "id": 247718773,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627657059
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas [he/him]</span> Do you see some problem with this I don't?</p>",
        "id": 247719001,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627657186
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204115\">Amanda Stjerna</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Polonius.20Hackathon.202021-07-30/near/247719001\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116109\">Vytautas Astrauskas [he/him]</span> Do you see some problem with this I don't?</p>\n</blockquote>\n<p>I think you will have to find a way how to store MIR to a file, which may be a problem.</p>",
        "id": 247719332,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627657305
    },
    {
        "content": "<p>If you do not want to make the compiler cluttered, I think an easier option would be to have a custom driver that queries the compiler.</p>",
        "id": 247719484,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627657358
    },
    {
        "content": "<p>However, then you have to maintain itâ€¦</p>",
        "id": 247719542,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627657387
    },
    {
        "content": "<p>But with your PR all polonius facts are accessible from a driver right?</p>",
        "id": 247719767,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627657477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204115\">Amanda Stjerna</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Polonius.20Hackathon.202021-07-30/near/247719767\">said</a>:</p>\n<blockquote>\n<p>But with your PR all polonius facts are accessible from a driver right?</p>\n</blockquote>\n<p>Yes.</p>",
        "id": 247720066,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627657589
    },
    {
        "content": "<p>So, the approach that uses my PR should work quite nicely. The only problem is that every time someone makes a breaking change in the compiler, you have to update the visualisation tool.</p>",
        "id": 247720170,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627657633
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"204115\">@Amanda Stjerna</span> you are going to look into a visualizaation tool?</p>",
        "id": 247720739,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1627657880
    },
    {
        "content": "<p>By the way, do you have a plan for how to do a visualisation?</p>",
        "id": 247720752,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627657885
    },
    {
        "content": "<p>I'm going to break this topic out</p>",
        "id": 247720762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1627657889
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116109\">Vytautas Astrauskas [he/him]</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247720752\">said</a>:</p>\n<blockquote>\n<p>By the way, do you have a plan for how to do a visualisation?</p>\n</blockquote>\n<p>Not precisely, if you mean in terms of what to visualize. My idea was sort of to start with showing an annotated boxed MIR diagram</p>",
        "id": 247721210,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658002
    },
    {
        "content": "<p>But it would be nice to also have that run Polonius and add Polonius results</p>",
        "id": 247721249,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658023
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247720739\">said</a>:</p>\n<blockquote>\n<p>so <span class=\"user-mention silent\" data-user-id=\"204115\">Amanda Stjerna</span> you are going to look into a visualizaation tool?</p>\n</blockquote>\n<p>I think that's probably best</p>",
        "id": 247721333,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658048
    },
    {
        "content": "<p>It's also what I think would be the most fun</p>",
        "id": 247721343,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658055
    },
    {
        "content": "<p>And I think fun is important at this stage since I'm doing this on my vacation :)</p>",
        "id": 247721374,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116109\">Vytautas Astrauskas [he/him]</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247720170\">said</a>:</p>\n<blockquote>\n<p>So, the approach that uses my PR should work quite nicely. The only problem is that every time someone makes a breaking change in the compiler, you have to update the visualisation tool.</p>\n</blockquote>\n<p>I still think this sounds like a nice idea</p>",
        "id": 247721461,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658112
    },
    {
        "content": "<p>Especially since I think my internship project would do something similar, so it would be useful to know how to do that</p>",
        "id": 247721514,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658142
    },
    {
        "content": "<p>So, what we have in Prusti (it is a bit broken now) is generation of dot files that show for each statement Polonius facts.</p>",
        "id": 247721525,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627658148
    },
    {
        "content": "<p>what is your experience about these visualizations ? I find that they are super cool and useful, but mostly for small cases. I almost always need the full MIR dump next to it, to the point that I was actually thinking having the polonius facts embedded in the dump-mir=nll output would be nice.</p>",
        "id": 247721531,
        "sender_full_name": "lqd",
        "timestamp": 1627658150
    },
    {
        "content": "<p>This all really points towards an interactive tool at some point, where you can enable/disable certain views</p>",
        "id": 247721712,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658223
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247721531\">said</a>:</p>\n<blockquote>\n<p>what is your experience about these visualizations ? I find that they are super cool and useful, but mostly for small cases. I almost always need the full MIR dump next to it, to the point that I was actually thinking having the polonius facts embedded in the dump-mir=nll output would be nice.</p>\n</blockquote>\n<p>In Prusti, we have a bunch of flags that control which facts to show. Typically, at the beginning, I show only the ones I care about and then once I found the location I care about, I enable other columns to dig deeper into it.</p>",
        "id": 247721798,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627658278
    },
    {
        "content": "<p>interesting</p>",
        "id": 247722024,
        "sender_full_name": "lqd",
        "timestamp": 1627658382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas [he/him]</span> about that PR btw, we plan on polonius taking ownership of the input facts, for some weird reason it's not doing that, and we have to clone a lot. So if I understand correctly, after your PR lands, to do this one'd just have to clone the input facts when your \"give me the body and facts\" boolean is true, and that'd be it ?</p>",
        "id": 247722247,
        "sender_full_name": "lqd",
        "timestamp": 1627658481
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204115\">Amanda Stjerna</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247721712\">said</a>:</p>\n<blockquote>\n<p>This all really points towards an interactive tool at some point, where you can enable/disable certain views</p>\n</blockquote>\n<p>I think one option for a visualisation tool would be to have a VS code plugin that shows a graphviz view in a side pane and in the background reruns the Rust compiler to obtain the visualisation that the user requested. Doing it in VS Code would allow you, for example, to click on a line in the Rust program and highlight the corresponding MIR block in the visualisation.</p>",
        "id": 247722429,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627658563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247722247\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116109\">Vytautas Astrauskas [he/him]</span> about that PR btw, we plan on polonius taking ownership of the input facts, for some weird reason it's not doing that, and we have to clone a lot. So if I understand correctly, after your PR lands, to do this one'd just have to clone the input facts when your \"give me the body and facts\" boolean is true, and that'd be it ?</p>\n</blockquote>\n<p>Yes, that sounds correct.</p>",
        "id": 247722534,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627658612
    },
    {
        "content": "<p>Something like that was what I had in mind eventually, plus some switches for showing and hiding various facts as desired</p>",
        "id": 247722657,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658663
    },
    {
        "content": "<p>But I guess a good MVP is something that just calls rustc, gets the facts, and outputs a dotfile</p>",
        "id": 247722737,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658699
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204115\">Amanda Stjerna</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247722737\">said</a>:</p>\n<blockquote>\n<p>But I guess a good MVP is something that just calls rustc, gets the facts, and outputs a dotfile</p>\n</blockquote>\n<p>Yes. A starting point for this could be <a href=\"https://github.com/rust-lang/rust/pull/86977/files#diff-5395549c3acc558af51147d15c04dba6e69fbbfa4ef54cdba039e445d1928e6b\">the test</a> from my PR.</p>",
        "id": 247723014,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627658832
    },
    {
        "content": "<p>We can throw away the <code>thread_local!</code> stuff and do dumping in the overridden <code>mir_borrowck</code>.</p>",
        "id": 247723144,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627658887
    },
    {
        "content": "<p>Thanks! I would have had a hard time figuring out those nuances myself.</p>",
        "id": 247723204,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627658927
    },
    {
        "content": "<p>For configuration, Prusti uses a <a href=\"https://github.com/viperproject/prusti-dev/blob/cefdb5eba35f2e8216251d5999f24810f185a0b2/prusti-common/src/config.rs#L60-L63\"><code>lazy_static</code></a>, so I guess the same approach could be taken here to configure stuff like output folder for dot files.</p>",
        "id": 247723487,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627659057
    },
    {
        "content": "<p>And which information to show.</p>",
        "id": 247723526,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627659080
    },
    {
        "content": "<p>And this is a very hacky code that produces a dot file: <a href=\"https://github.com/viperproject/prusti-dev/blob/master/prusti-interface/src/environment/dump_borrowck_info.rs\">https://github.com/viperproject/prusti-dev/blob/master/prusti-interface/src/environment/dump_borrowck_info.rs</a></p>",
        "id": 247723825,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627659235
    },
    {
        "content": "<p>It uses a bunch of boolean flags that indicate whether to show or not some column.</p>",
        "id": 247723985,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627659311
    },
    {
        "content": "<p>I think that a better solution would be to ask the user to provide a sequence <code>columns</code> that determines which columns to show and in which order.</p>",
        "id": 247724059,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627659358
    },
    {
        "content": "<p>It should not be much more difficult to implement and would make it easier to integrate into the final visualisation tool.</p>",
        "id": 247724179,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627659413
    },
    {
        "content": "<p>That sounds like a good idea yes!</p>",
        "id": 247725527,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627660075
    },
    {
        "content": "<p>Feel free to steal code from Prusti and if you have any questions let me know <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span>.</p>",
        "id": 247725646,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627660119
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204115\">@Amanda Stjerna</span> is everything going ok for you as well ? :) do you need help with anything ?</p>",
        "id": 247739779,
        "sender_full_name": "lqd",
        "timestamp": 1627666965
    },
    {
        "content": "<p>Not currently, unless you've got a teleport and a time machine and can puppy sit :)</p>",
        "id": 247748285,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627671409
    },
    {
        "content": "<p>But thanks!</p>",
        "id": 247748296,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627671414
    },
    {
        "content": "<p>I got a great start from <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas [he/him]</span>, who had frankly done most of the difficult work</p>",
        "id": 247748362,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627671459
    },
    {
        "content": "<p>Hopefully, what is left is the interesting part <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span>.</p>",
        "id": 247749850,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627672350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116109\">Vytautas Astrauskas [he/him]</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247725646\">said</a>:</p>\n<blockquote>\n<p>Feel free to steal code from Prusti and if you have any questions let me know <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span>.</p>\n</blockquote>\n<p>I haven't used the compiler interfaces before and I'm not sure how to proceed. Your test code uses <code>rustc_driver</code> and <code>rustc_hir</code> which don't seem to come with the private APIs. Is there a way to turn those on or do I have to work around that somehow?</p>",
        "id": 247751680,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627673416
    },
    {
        "content": "<p>You need to use nightly rustc and install the rustc-dev and llvm-tools-preview rustup components.</p>",
        "id": 247753569,
        "sender_full_name": "bjorn3",
        "timestamp": 1627674547
    },
    {
        "content": "<p>It seems that the rust-toolchain of the prusti-dev repo does install it already though.</p>",
        "id": 247753684,
        "sender_full_name": "bjorn3",
        "timestamp": 1627674607
    },
    {
        "content": "<p>Bors failed, so you still need to manually build my PR and have fun with manually setting up the toolchain.</p>",
        "id": 247790632,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627715467
    },
    {
        "content": "<p>By the way, do you have by any chance a Windows machine? (Debugging Windows build failures on Linux is a bit complicatedâ€¦)</p>",
        "id": 247790642,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627715516
    },
    {
        "content": "<p>No, I'm on a mac</p>",
        "id": 247801175,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627733538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247753569\">said</a>:</p>\n<blockquote>\n<p>You need to use nightly rustc and install <strong>the rustc-dev and llvm-tools-preview</strong> rustup components.</p>\n</blockquote>\n<p>A-ha! Missed the last one I think.</p>",
        "id": 247801198,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627733598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116109\">Vytautas Astrauskas [he/him]</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247790632\">said</a>:</p>\n<blockquote>\n<p>Bors failed, so you still need to manually build my PR and have fun with manually setting up the toolchain.</p>\n</blockquote>\n<p>Does using the components complicate this or is it the same as before, ie build stages 1 and 2, then rustup add and then add the components using rustup +mytoolchain etc?</p>",
        "id": 247801557,
        "sender_full_name": "Amanda Stjerna",
        "timestamp": 1627734125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204115\">Amanda Stjerna</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247801557\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116109\">Vytautas Astrauskas [he/him]</span> <a href=\"#narrow/stream/186049-t-compiler.2Fwg-polonius/topic/Visualization.20tool/near/247790632\">said</a>:</p>\n<blockquote>\n<p>Bors failed, so you still need to manually build my PR and have fun with manually setting up the toolchain.</p>\n</blockquote>\n<p>Does using the components complicate this or is it the same as before, ie build stages 1 and 2, then rustup add and then add the components using rustup +mytoolchain etc?</p>\n</blockquote>\n<p>It seems to complicate stuff (or I am missing something). I think I had problems with cargo not knowing which rust to call.</p>",
        "id": 247810637,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1627746903
    }
]