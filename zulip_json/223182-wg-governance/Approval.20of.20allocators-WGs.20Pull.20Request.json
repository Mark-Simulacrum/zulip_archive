[
    {
        "content": "<p>Currently, the working group is dependent on a single user (<span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span>) reviewing and approving the pull requests. What are the criteria to give another user (me?) the rights to approve?</p>\n<p>Is it now actually possible to specify a team as reviewer?</p>",
        "id": 218832828,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1607088923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216785\">@Tim Diekmann</span> </p>\n<p>The other members of the libs team should be able to help out with the reviews too, although they might have less context of what's going on in wg-allocators.</p>\n<p>If I understand correctly, review rights are assigned to teams and not to people directly, so i believe you'd have to be added to a team with r+ rights. (Or the entire wg-allocators group would need to get r+ rights.) Note that it wouldn't help much with your own PRs, because those should still get an r+ from another reviewer.</p>\n<p>Assigning a team with <code>r?</code> is still open: &lt;<a href=\"https://github.com/rust-lang/highfive/pull/249\">https://github.com/rust-lang/highfive/pull/249</a>&gt;</p>\n<p>I'll put it on the agenda for the next libs meeting to discuss how we can handle this better.</p>",
        "id": 218836532,
        "sender_full_name": "Mara",
        "timestamp": 1607090940
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/223182-wg-governance/topic/Approval.20of.20allocators-WGs.20Pull.20Request/near/218836532\">said</a>:</p>\n<blockquote>\n<p>The other members of the libs team should be able to help out with the reviews too, although they might have less context of what's going on in wg-allocators.</p>\n</blockquote>\n<p>I think this is the biggest problem as only a few people knows what the workgroup is currently doing/planing, thus reviewing PRs might be time-consuming I guess.</p>\n<blockquote>\n<p>If I understand correctly, review rights are assigned to teams and not to people directly, so i believe you'd have to be added to a team with r+ rights.</p>\n</blockquote>\n<p>Oh, I thought that was possible as used in <a href=\"https://github.com/rust-lang/team/blob/master/people/alexcrichton.toml\"><code>alexcrichton.toml</code> </a>.</p>\n<blockquote>\n<p>Note that it wouldn't help much with your own PRs, because those should still get an r+ from another reviewer.</p>\n</blockquote>\n<p>Isn't it possible to <code>r=name</code>? As in the latest PR where you mentioned Lokathor and Wodann?</p>\n<blockquote>\n<p>I'll put it on the agenda for the next libs meeting to discuss how we can handle this better.</p>\n</blockquote>\n<p>Nice to hear, thank you!</p>",
        "id": 218837941,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1607091636
    },
    {
        "content": "<blockquote>\n<p>Oh, I thought that was possible as used in alexcrichton.toml .</p>\n</blockquote>\n<p>Ah, good to know. Didn't know that was an option. Didn't see that in any other file.</p>\n<blockquote>\n<p>Isn't it possible to r=name?</p>\n</blockquote>\n<p>Yes, but then the question is if it's okay to r=$name on your own PR if $name doesn't have review rights themself. The bot accepts it, but normally there's at least one 'official' reviewer involved other than the author, especially if it involves breaking or publicly visible changes (even if unstable). I've only been part of the team since pretty recently, so I don't know about exceptions and what happened in similar situations in the past. But I'll make sure it gets discussed in the meeting next week. It's the first item on the agenda now. ^^</p>",
        "id": 218838956,
        "sender_full_name": "Mara",
        "timestamp": 1607092163
    },
    {
        "content": "<p>a short-term fix is to delegate a PR to someone who doesn't have rights by using <code>@bors delegate &lt;name&gt;</code>.</p>",
        "id": 218993859,
        "sender_full_name": "DPC",
        "timestamp": 1607272335
    }
]