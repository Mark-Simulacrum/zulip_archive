[
    {
        "content": "<p>Hello! I'm working on improving the error from this snippet: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=92c676b88097475a39e31047b237b8e5\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=92c676b88097475a39e31047b237b8e5</a></p>\n<p>I found the problem, which is that the <code>StreamExt</code> trait isn't considered in scope when it's attempting to determine if adding await would be useful.</p>\n<p>And then I \"fixed\" it by copying and pasting this random incantation I saw somewhere else.<br>\n(before, call.hir_id was used directly)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">                                  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">call_expr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"w\"> </span><span class=\"err\">‣</span><span class=\"n\">call_expr</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Expr</span><span class=\"w\"> </span><span class=\"err\">‣</span><span class=\"o\">&amp;</span><span class=\"n\">FnCtxt</span><span class=\"w\"></span>\n<span class=\"w\">                                      </span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"w\"> </span><span class=\"err\">‣</span><span class=\"n\">TyCtxt</span><span class=\"w\"></span>\n<span class=\"w\">                                      </span><span class=\"p\">.</span><span class=\"n\">hir</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"err\">‣</span><span class=\"n\">Map</span><span class=\"w\"></span>\n<span class=\"w\">                                      </span><span class=\"p\">.</span><span class=\"n\">expect_expr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">hir</span><span class=\"p\">().</span><span class=\"n\">get_parent_node</span><span class=\"p\">(</span><span class=\"n\">call</span><span class=\"p\">.</span><span class=\"n\">hir_id</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">                                  </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">suggest_await_before_method</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                                      </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">item_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">call_expr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">span</span><span class=\"p\">,</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm trying to figure out _why_, any ideas?</p>",
        "id": 266566086,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1641057149
    },
    {
        "content": "<p>with that snippet, you  get: </p>\n<div class=\"codehilite\"><pre><span></span><code>help: consider `await`ing on the `Future` and calling the method on its `Output`\n   |\n20 |     let data = make_a_stream().await.collect::&lt;Vec&lt;_&gt;&gt;();\n   |\n</code></pre></div>\n<p>in addition to the pretty useless error that you see in the playground</p>",
        "id": 266566108,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1641057213
    },
    {
        "content": "<p>from: <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_typeck/src/check/method/suggest.rs#L435-L441\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_typeck/src/check/method/suggest.rs#L435-L441</a></p>",
        "id": 266566372,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1641057608
    },
    {
        "content": "<p>searching_for_traits_in_scope is actually returning <code>None</code> and not <code>[]</code> which makes me thing that the HirId of the method invocation is bad somehow? And that only the parent id actually has the required info</p>",
        "id": 266619955,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1641138915
    },
    {
        "content": "<p>As I mentioned when we talked 1:1, this is because, IIUC, you needed the HirId of the enclosing scope always, not of the expr you are looking at. BTW, in the final result, ideally we would hide the <em>current</em> note, because it is kind of useless once we find that calling <code>.await</code> would be enough</p>",
        "id": 267081431,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1641486617
    }
]