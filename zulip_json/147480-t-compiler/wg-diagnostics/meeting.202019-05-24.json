[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> we're having a meeting in two hours right here</p>",
        "id": 166465879,
        "sender_full_name": "oli",
        "timestamp": 1558713625
    },
    {
        "content": "<p>I've started creating a hackmd script for us to follow for meetings: <a href=\"https://hackmd.io/T9yQwLQ0SIOguR1auo3SHQ\" target=\"_blank\" title=\"https://hackmd.io/T9yQwLQ0SIOguR1auo3SHQ\">https://hackmd.io/T9yQwLQ0SIOguR1auo3SHQ</a></p>",
        "id": 166475292,
        "sender_full_name": "oli",
        "timestamp": 1558720600
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> meeting time <span aria-label=\"mantelpiece clock\" class=\"emoji emoji-1f570\" role=\"img\" title=\"mantelpiece clock\">:mantelpiece_clock:</span></p>",
        "id": 166475646,
        "sender_full_name": "oli",
        "timestamp": 1558720830
    },
    {
        "content": "<p>Should we reuse the old <a href=\"https://github.com/rust-lang/rust/labels/WG-compiler-errors\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/WG-compiler-errors\">https://github.com/rust-lang/rust/labels/WG-compiler-errors</a>?</p>",
        "id": 166475649,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558720832
    },
    {
        "content": "<p>or rename it at least?</p>",
        "id": 166475658,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558720839
    },
    {
        "content": "<p>huh, I didn't know that existed</p>",
        "id": 166475697,
        "sender_full_name": "oli",
        "timestamp": 1558720864
    },
    {
        "content": "<p>It was used by me to gather things I thought I could get to, mostly <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 166475704,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558720865
    },
    {
        "content": "<p>it's super old and no one other than me ever used it</p>",
        "id": 166475717,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558720878
    },
    {
        "content": "<p>do we need a WG label (since A-diagnostics exists)?</p>",
        "id": 166475719,
        "sender_full_name": "oli",
        "timestamp": 1558720879
    },
    {
        "content": "<p>I’m not sure we’d need a label. Unless we feel there’s value in separating tasks from this from general diagnostic improvements.</p>",
        "id": 166475804,
        "sender_full_name": "davidtwco",
        "timestamp": 1558720924
    },
    {
        "content": "<p>hmm... ok about that I have an idea</p>",
        "id": 166475836,
        "sender_full_name": "oli",
        "timestamp": 1558720948
    },
    {
        "content": "<p>probably not, but I'd like to start categorizing in two axis using the existing A-diagnostics:<br>\neasy &lt;-&gt; hard<br>\nnice-to-have &lt;-&gt; urgent</p>",
        "id": 166475842,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558720950
    },
    {
        "content": "<p>so I've checked, we have a few priority labels on <code>A-diagnostics</code></p>",
        "id": 166475857,
        "sender_full_name": "oli",
        "timestamp": 1558720964
    },
    {
        "content": "<p>around 5-10% or so have a priority label</p>",
        "id": 166475864,
        "sender_full_name": "oli",
        "timestamp": 1558720977
    },
    {
        "content": "<p>we have no P-high, so that's good xD</p>",
        "id": 166475882,
        "sender_full_name": "oli",
        "timestamp": 1558720987
    },
    {
        "content": "<p>mostly low, I'd assume</p>",
        "id": 166475886,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558720990
    },
    {
        "content": "<p>we have 18 P-medium: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AA-diagnostics+label%3AP-medium\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AA-diagnostics+label%3AP-medium\">https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AA-diagnostics+label%3AP-medium</a></p>",
        "id": 166475906,
        "sender_full_name": "oli",
        "timestamp": 1558721024
    },
    {
        "content": "<p>and 700 unlabeled</p>",
        "id": 166475911,
        "sender_full_name": "oli",
        "timestamp": 1558721033
    },
    {
        "content": "<p><span aria-label=\"shock\" class=\"emoji emoji-1f628\" role=\"img\" title=\"shock\">:shock:</span></p>",
        "id": 166475969,
        "sender_full_name": "oli",
        "timestamp": 1558721052
    },
    {
        "content": "<p>that means around 15% of all Rust issues are diagnostics issues</p>",
        "id": 166475993,
        "sender_full_name": "oli",
        "timestamp": 1558721076
    },
    {
        "content": "<p>I think we can use priority labels for <code>nice-to-have &lt;-&gt; urgent</code></p>",
        "id": 166476034,
        "sender_full_name": "oli",
        "timestamp": 1558721112
    },
    {
        "content": "<p>how do y'all feel about doing a quick triage of P-medium? Downvote means we should go into our main WG goals first.</p>",
        "id": 166476129,
        "sender_full_name": "oli",
        "timestamp": 1558721196
    },
    {
        "content": "<p>(this is also about future meetings, I'll change the order in the hackmd accordingly)</p>",
        "id": 166476260,
        "sender_full_name": "oli",
        "timestamp": 1558721293
    },
    {
        "content": "<p>(In that case +1)</p>",
        "id": 166476270,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721309
    },
    {
        "content": "<p>If we do triage first then in future meetings it won’t take as long at the start of future meetings.</p>",
        "id": 166476277,
        "sender_full_name": "davidtwco",
        "timestamp": 1558721324
    },
    {
        "content": "<p>right</p>",
        "id": 166476301,
        "sender_full_name": "oli",
        "timestamp": 1558721346
    },
    {
        "content": "<p>Ok, let's go through them quickly then</p>",
        "id": 166476313,
        "sender_full_name": "oli",
        "timestamp": 1558721366
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/22750\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/22750\">https://github.com/rust-lang/rust/issues/22750</a> Two different versions of a crate interacting leads to unhelpful error messages</p>",
        "id": 166476325,
        "sender_full_name": "oli",
        "timestamp": 1558721382
    },
    {
        "content": "<p><em>very old</em></p>",
        "id": 166476333,
        "sender_full_name": "oli",
        "timestamp": 1558721391
    },
    {
        "content": "<p>Medium seems ok, since this is not just nice to have, it really helps with figuring out the problem</p>",
        "id": 166476429,
        "sender_full_name": "oli",
        "timestamp": 1558721449
    },
    {
        "content": "<p>leaving at medium</p>",
        "id": 166476435,
        "sender_full_name": "oli",
        "timestamp": 1558721457
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/23286\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/23286\">https://github.com/rust-lang/rust/issues/23286</a> Very confusing error on attempt to pass <code>path::Path</code> by value</p>",
        "id": 166476466,
        "sender_full_name": "oli",
        "timestamp": 1558721480
    },
    {
        "content": "<p>Still far from ideal, and would love to revisit it, but it is E-hard :-/</p>",
        "id": 166476491,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721511
    },
    {
        "content": "<p>(like everything around E0277)</p>",
        "id": 166476557,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721529
    },
    {
        "content": "<p>removing <code>E-mentor</code> because it'll be a huge undertaking for anyone to actually fix this</p>",
        "id": 166476587,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721561
    },
    {
        "content": "<p>ok, so I'll add E-hard, too</p>",
        "id": 166476593,
        "sender_full_name": "oli",
        "timestamp": 1558721569
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/23980\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/23980\">https://github.com/rust-lang/rust/issues/23980</a> Coherence error messages can be inscrutable</p>",
        "id": 166476619,
        "sender_full_name": "oli",
        "timestamp": 1558721593
    },
    {
        "content": "<p>wow, has like 10 PRs mentioning it</p>",
        "id": 166476627,
        "sender_full_name": "oli",
        "timestamp": 1558721604
    },
    {
        "content": "<p>ok, also seems E-hard, I'm not sure where to even start</p>",
        "id": 166476717,
        "sender_full_name": "oli",
        "timestamp": 1558721663
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/32777\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/32777\">https://github.com/rust-lang/rust/issues/32777</a> Add error explanations for all error codes</p>",
        "id": 166476740,
        "sender_full_name": "oli",
        "timestamp": 1558721687
    },
    {
        "content": "<p>meta issue, nothing to see here, is that really <code>P-medium</code>?</p>",
        "id": 166476769,
        "sender_full_name": "oli",
        "timestamp": 1558721708
    },
    {
        "content": "<p>I think the checkmarks are not up to date</p>",
        "id": 166476771,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721713
    },
    {
        "content": "<p>I think it is fine, as it isn't critical but makes to the general experience</p>",
        "id": 166476788,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721736
    },
    {
        "content": "<p>It's already tagged <code>T-doc</code> as well, which I feel is appropriate</p>",
        "id": 166476798,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721753
    },
    {
        "content": "<p>yea, also assigned, let's leave it at that</p>",
        "id": 166476865,
        "sender_full_name": "oli",
        "timestamp": 1558721773
    },
    {
        "content": "<p>left a comment</p>",
        "id": 166476867,
        "sender_full_name": "oli",
        "timestamp": 1558721775
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/34421\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34421\">https://github.com/rust-lang/rust/issues/34421</a> error message for macro in wrong context is missing context</p>",
        "id": 166476905,
        "sender_full_name": "oli",
        "timestamp": 1558721813
    },
    {
        "content": "<p>somewhat hard to decipher the problem</p>",
        "id": 166477055,
        "sender_full_name": "oli",
        "timestamp": 1558721915
    },
    {
        "content": "<p>All of the macro errors need a revamp</p>",
        "id": 166477058,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721916
    },
    {
        "content": "<p>so... P-medium seems ok</p>",
        "id": 166477071,
        "sender_full_name": "oli",
        "timestamp": 1558721922
    },
    {
        "content": "<p>but I don't think it is medium</p>",
        "id": 166477094,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721940
    },
    {
        "content": "<p>it might even be fixed given the current output</p>",
        "id": 166477109,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721949
    },
    {
        "content": "<p>jseyfried wants there to be a note about expressions not being items</p>",
        "id": 166477134,
        "sender_full_name": "oli",
        "timestamp": 1558721970
    },
    {
        "content": "<p>Yeah, and there's no complaint about <code>B</code> either..</p>",
        "id": 166477153,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721992
    },
    {
        "content": "<p>still don't think it's medium</p>",
        "id": 166477158,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558721998
    },
    {
        "content": "<p>so users actually know what's going on, because it seems they are trying to create an item</p>",
        "id": 166477162,
        "sender_full_name": "oli",
        "timestamp": 1558722000
    },
    {
        "content": "<p>ok</p>",
        "id": 166477165,
        "sender_full_name": "oli",
        "timestamp": 1558722002
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/42226\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/42226\">https://github.com/rust-lang/rust/issues/42226</a> Unclear errors with type annotations on functions instead of their traits</p>",
        "id": 166477292,
        "sender_full_name": "oli",
        "timestamp": 1558722076
    },
    {
        "content": "<p>Medium, tag as diagnostic-suggestions too</p>",
        "id": 166477418,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558722152
    },
    {
        "content": "<p>overflow during drop-check on a recursive type <a href=\"https://github.com/rust-lang/rust/issues/44933\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/44933\">#44933</a></p>",
        "id": 166477480,
        "sender_full_name": "oli",
        "timestamp": 1558722188
    },
    {
        "content": "<p>P-low imo, or at least E-hard</p>",
        "id": 166477585,
        "sender_full_name": "oli",
        "timestamp": 1558722252
    },
    {
        "content": "<p>marking as hard, continue</p>",
        "id": 166477644,
        "sender_full_name": "oli",
        "timestamp": 1558722300
    },
    {
        "content": "<p>Both, I'd say</p>",
        "id": 166477659,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558722305
    },
    {
        "content": "<p>done</p>",
        "id": 166477796,
        "sender_full_name": "oli",
        "timestamp": 1558722387
    },
    {
        "content": "<p>rustc recommends specialization for type parameters inside an extern block <a href=\"https://github.com/rust-lang/rust/issues/45092\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/45092\">#45092</a></p>",
        "id": 166477798,
        "sender_full_name": "oli",
        "timestamp": 1558722389
    },
    {
        "content": "<p><code>P-low</code>, <code>A-diagnostic-suggestions</code></p>",
        "id": 166477836,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558722423
    },
    {
        "content": "<p>huh, is that literally just explaining more in the message?</p>",
        "id": 166477858,
        "sender_full_name": "oli",
        "timestamp": 1558722437
    },
    {
        "content": "<p>so E-easy, too?</p>",
        "id": 166477864,
        "sender_full_name": "oli",
        "timestamp": 1558722441
    },
    {
        "content": "<p><code>E-medium</code>, I think, if we want to actually suggest replacing the <code>T</code> with a concrete type</p>",
        "id": 166477897,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558722469
    },
    {
        "content": "<p>but easy if only wording</p>",
        "id": 166477928,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558722478
    },
    {
        "content": "<p>you'd have to look at the callers to do that</p>",
        "id": 166478054,
        "sender_full_name": "oli",
        "timestamp": 1558722551
    },
    {
        "content": "<p>and there probably aren't any yet</p>",
        "id": 166478062,
        "sender_full_name": "oli",
        "timestamp": 1558722556
    },
    {
        "content": "<p>Pattern errors are too imprecise and should be removed in favor of MIR borrowck <a href=\"https://github.com/rust-lang/rust/issues/45600\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/45600\">#45600</a></p>",
        "id": 166478076,
        "sender_full_name": "oli",
        "timestamp": 1558722569
    },
    {
        "content": "<p>yeah, let's leave it at wording change</p>",
        "id": 166478086,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558722580
    },
    {
        "content": "<p>ooh, that one was in T-compiler some time ago</p>",
        "id": 166478145,
        "sender_full_name": "oli",
        "timestamp": 1558722603
    },
    {
        "content": "<p>let's leave it as is, but marking as E-medium</p>",
        "id": 166478222,
        "sender_full_name": "oli",
        "timestamp": 1558722642
    },
    {
        "content": "<p>No docs for error code E0280 <a href=\"https://github.com/rust-lang/rust/issues/50028\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50028\">#50028</a></p>",
        "id": 166478271,
        "sender_full_name": "oli",
        "timestamp": 1558722668
    },
    {
        "content": "<p>seems like this belongs into the big docs issue</p>",
        "id": 166478287,
        "sender_full_name": "oli",
        "timestamp": 1558722687
    },
    {
        "content": "<p><code>E-easy</code>, link from the tracking issue</p>",
        "id": 166478294,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558722695
    },
    {
        "content": "<p>closing, there's a checkbox in the tracking issue</p>",
        "id": 166478402,
        "sender_full_name": "oli",
        "timestamp": 1558722767
    },
    {
        "content": "<p>cannot infer an appropriate lifetime for pattern should have fix suggestions <a href=\"https://github.com/rust-lang/rust/issues/50195\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50195\">#50195</a></p>",
        "id": 166478473,
        "sender_full_name": "oli",
        "timestamp": 1558722830
    },
    {
        "content": "<p>pasted current output</p>",
        "id": 166478540,
        "sender_full_name": "oli",
        "timestamp": 1558722850
    },
    {
        "content": "<p>still needs a suggestion on how to resolve the error I guess?</p>",
        "id": 166478578,
        "sender_full_name": "oli",
        "timestamp": 1558722898
    },
    {
        "content": "<p>leaving as is, will revisit</p>",
        "id": 166478637,
        "sender_full_name": "oli",
        "timestamp": 1558722929
    },
    {
        "content": "<p>Unclear \"cannot infer\" error message instead of expected \"cannot move out of borrowed content\" <a href=\"https://github.com/rust-lang/rust/issues/51759\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51759\">#51759</a></p>",
        "id": 166478639,
        "sender_full_name": "oli",
        "timestamp": 1558722930
    },
    {
        "content": "<p>hmm... wontfix?</p>",
        "id": 166478668,
        "sender_full_name": "oli",
        "timestamp": 1558722961
    },
    {
        "content": "<p>I was inclined at that</p>",
        "id": 166478766,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723013
    },
    {
        "content": "<p>given matthew's comment</p>",
        "id": 166478786,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723025
    },
    {
        "content": "<p>ack</p>",
        "id": 166478966,
        "sender_full_name": "oli",
        "timestamp": 1558723160
    },
    {
        "content": "<p>NLL: Poor borrow checker error message when extension of borrow happens indirectly (e.g. via method) <a href=\"https://github.com/rust-lang/rust/issues/54256\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54256\">#54256</a></p>",
        "id": 166478967,
        "sender_full_name": "oli",
        "timestamp": 1558723161
    },
    {
        "content": "<p>we could state <em>why</em> a mutable borrow is happening</p>",
        "id": 166479090,
        "sender_full_name": "oli",
        "timestamp": 1558723241
    },
    {
        "content": "<p>not just \"mutable borrow occurs here\"</p>",
        "id": 166479098,
        "sender_full_name": "oli",
        "timestamp": 1558723251
    },
    {
        "content": "<p>that sounds reasonable, I would mark this <code>E-medium</code> or <code>E-hard</code> to discourage newcomers from jumping in blind</p>",
        "id": 166479194,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723326
    },
    {
        "content": "<p>It should probably add a new span pointing at the right spot in loops</p>",
        "id": 166479245,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723394
    },
    {
        "content": "<p>jop</p>",
        "id": 166479252,
        "sender_full_name": "oli",
        "timestamp": 1558723403
    },
    {
        "content": "<p>Compiler panic using 'static_assertions' <a href=\"https://github.com/rust-lang/rust/issues/54327\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54327\">#54327</a></p>",
        "id": 166479253,
        "sender_full_name": "oli",
        "timestamp": 1558723404
    },
    {
        "content": "<p>Maybe edit the title?</p>",
        "id": 166479336,
        "sender_full_name": "davidtwco",
        "timestamp": 1558723463
    },
    {
        "content": "<p>blocked on lazy norm, ignoring</p>",
        "id": 166479337,
        "sender_full_name": "oli",
        "timestamp": 1558723463
    },
    {
        "content": "<p>should we keep the diagnostics label?</p>",
        "id": 166479377,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723498
    },
    {
        "content": "<p>On mobile, is it still an ICE or is that fixed and it’s just a diagnostics improvement?</p>",
        "id": 166479392,
        "sender_full_name": "davidtwco",
        "timestamp": 1558723504
    },
    {
        "content": "<p>(assumed the latter, hence suggesting a rename)</p>",
        "id": 166479423,
        "sender_full_name": "davidtwco",
        "timestamp": 1558723522
    },
    {
        "content": "<p>still an ICE</p>",
        "id": 166479429,
        "sender_full_name": "oli",
        "timestamp": 1558723529
    },
    {
        "content": "<p>Ignore me then.</p>",
        "id": 166479434,
        "sender_full_name": "davidtwco",
        "timestamp": 1558723536
    },
    {
        "content": "<p>It's the default lazy norm ICE</p>",
        "id": 166479443,
        "sender_full_name": "oli",
        "timestamp": 1558723548
    },
    {
        "content": "<p>confusing error message around trait object bound <a href=\"https://github.com/rust-lang/rust/issues/54779\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54779\">#54779</a></p>",
        "id": 166479455,
        "sender_full_name": "oli",
        "timestamp": 1558723560
    },
    {
        "content": "<p>assigned, leaving as it is, will revisit</p>",
        "id": 166479524,
        "sender_full_name": "oli",
        "timestamp": 1558723590
    },
    {
        "content": "<p>nll: strange suggestion to \"consider removing the <code>*</code> <a href=\"https://github.com/rust-lang/rust/issues/54985\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54985\">#54985</a></p>",
        "id": 166479535,
        "sender_full_name": "oli",
        "timestamp": 1558723609
    },
    {
        "content": "<p>E-easy, just remove the suggestion</p>",
        "id": 166479552,
        "sender_full_name": "oli",
        "timestamp": 1558723631
    },
    {
        "content": "<p>NLL accepts higher-ranked subtype that non-NLL rejects <a href=\"https://github.com/rust-lang/rust/issues/57642\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57642\">#57642</a></p>",
        "id": 166479585,
        "sender_full_name": "oli",
        "timestamp": 1558723677
    },
    {
        "content": "<p>not sure why marked as <code>A-diagnostics</code></p>",
        "id": 166479658,
        "sender_full_name": "oli",
        "timestamp": 1558723707
    },
    {
        "content": "<p>That doesn't seem like a diagnostic issue</p>",
        "id": 166479664,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723710
    },
    {
        "content": "<p>yeah</p>",
        "id": 166479668,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723712
    },
    {
        "content": "<p>Infinite \"recursive requirements\" compiler error <a href=\"https://github.com/rust-lang/rust/issues/60603\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60603\">#60603</a></p>",
        "id": 166479709,
        "sender_full_name": "oli",
        "timestamp": 1558723746
    },
    {
        "content": "<p>while it's a diagnostics issue, this is actually a trait solver issue</p>",
        "id": 166479748,
        "sender_full_name": "oli",
        "timestamp": 1558723787
    },
    {
        "content": "<p>and the result of weird trait solving causes a bad diagnostic</p>",
        "id": 166479820,
        "sender_full_name": "oli",
        "timestamp": 1558723811
    },
    {
        "content": "<p>leaving as is, but adding E-hard</p>",
        "id": 166479845,
        "sender_full_name": "oli",
        "timestamp": 1558723831
    },
    {
        "content": "<p>wooo, done!</p>",
        "id": 166479895,
        "sender_full_name": "oli",
        "timestamp": 1558723869
    },
    {
        "content": "<p>next time I'll do pre-triage before the meeting</p>",
        "id": 166479907,
        "sender_full_name": "oli",
        "timestamp": 1558723883
    },
    {
        "content": "<p>now, let's get to business in the last 9 minutes: <a href=\"https://hackmd.io/T9yQwLQ0SIOguR1auo3SHQ\" target=\"_blank\" title=\"https://hackmd.io/T9yQwLQ0SIOguR1auo3SHQ\">https://hackmd.io/T9yQwLQ0SIOguR1auo3SHQ</a></p>",
        "id": 166479934,
        "sender_full_name": "oli",
        "timestamp": 1558723908
    },
    {
        "content": "<p>It's fine, from now on it should get faster and faster</p>",
        "id": 166479935,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723909
    },
    {
        "content": "<p>How are we doing on \"Make diagnostics emitting independent of the happy code path\"?</p>",
        "id": 166479945,
        "sender_full_name": "oli",
        "timestamp": 1558723918
    },
    {
        "content": "<p>For <code>Parser</code> we're on track, everywhere else it's been piece meal</p>",
        "id": 166480009,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723937
    },
    {
        "content": "<p>I’m somewhat out of the loop on what the plan has been to achieve these goals.</p>",
        "id": 166480037,
        "sender_full_name": "davidtwco",
        "timestamp": 1558723959
    },
    {
        "content": "<p>We need a more concerted \"pack of locusts\" approach on a per crate level</p>",
        "id": 166480043,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558723962
    },
    {
        "content": "<p>IIRC <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> suggested we'd create structs that have all data that's needed and put the actual diagnostic rendering code elsewhere?</p>",
        "id": 166480047,
        "sender_full_name": "oli",
        "timestamp": 1558723967
    },
    {
        "content": "<p>Not sure if there was a meeting I missed here or at all hands.</p>",
        "id": 166480057,
        "sender_full_name": "davidtwco",
        "timestamp": 1558723977
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I think that was just some informal discussions</p>",
        "id": 166480083,
        "sender_full_name": "oli",
        "timestamp": 1558723991
    },
    {
        "content": "<blockquote>\n<p>IIRC <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban Küber</span> suggested we'd create structs that have all data that's needed and put the actual diagnostic rendering code elsewhere?</p>\n</blockquote>\n<p>I took that approach in some parts of NLL and felt it went well.</p>",
        "id": 166480115,
        "sender_full_name": "davidtwco",
        "timestamp": 1558724021
    },
    {
        "content": "<p>I think that <code>rustc_errors</code> should define a <code>trait AsError { fn to_error(self) -&gt; DiagnosticBuilder {} fn emit(self) {} }</code></p>",
        "id": 166480121,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724023
    },
    {
        "content": "<p>and then each part of the compiler can make their own structs as needed and implement that trait</p>",
        "id": 166480143,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724040
    },
    {
        "content": "<p>needs a session for <code>to_error</code>, right?</p>",
        "id": 166480190,
        "sender_full_name": "oli",
        "timestamp": 1558724045
    },
    {
        "content": "<p>I think so, yes</p>",
        "id": 166480208,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724052
    },
    {
        "content": "<p>or go through tls?</p>",
        "id": 166480209,
        "sender_full_name": "oli",
        "timestamp": 1558724053
    },
    {
        "content": "<p>the problem is it depends on where in the compiler we are...<br>\nsome times we only have a <code>Session</code> (or a <code>ParseSess</code>)</p>",
        "id": 166480240,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724084
    },
    {
        "content": "<p>so... <code>emit</code> is defaulted?</p>",
        "id": 166480256,
        "sender_full_name": "oli",
        "timestamp": 1558724098
    },
    {
        "content": "<p>heh, yea, maybe we need a trait for these, too in order to abstract away their API</p>",
        "id": 166480279,
        "sender_full_name": "oli",
        "timestamp": 1558724113
    },
    {
        "content": "<p>didn't give it much thought ^_^</p>",
        "id": 166480291,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724121
    },
    {
        "content": "<p>bascially offer the <code>Session</code> API but just skip impossible parts in <code>ParseSess</code></p>",
        "id": 166480305,
        "sender_full_name": "oli",
        "timestamp": 1558724133
    },
    {
        "content": "<p>but my thinking is having each crate define their own builder structs</p>",
        "id": 166480308,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724135
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>struct TypeError {\n    expected: Ty,\n    found: Ty,\n    context: Option&lt;_&gt;,\n    ...\n}\n</pre></div>",
        "id": 166480391,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724166
    },
    {
        "content": "<p>maybe we can start small and have an <code>AsParseError</code> and <code>AsError</code> trait for the different situations?</p>",
        "id": 166480440,
        "sender_full_name": "oli",
        "timestamp": 1558724198
    },
    {
        "content": "<p>and then</p>\n<div class=\"codehilite\"><pre><span></span>let type_err = TypeError::new(expected, found).with_context(context).build().emit();\n</pre></div>",
        "id": 166480444,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724199
    },
    {
        "content": "<p>we can think about merging later</p>",
        "id": 166480451,
        "sender_full_name": "oli",
        "timestamp": 1558724204
    },
    {
        "content": "<p>sounds reasonable</p>",
        "id": 166480464,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724216
    },
    {
        "content": "<p>ok, seems like a plan. Any volunteers for writing up an issue from this convo? Otherwise I'll do it XD</p>",
        "id": 166480525,
        "sender_full_name": "oli",
        "timestamp": 1558724257
    },
    {
        "content": "<p>It would be nice to define the “session” type as an associated type or something like that. I can imagine in some places you would want a <code>TyCtxt</code>, not just a <code>Session</code>, to get the type of a <code>DefId</code> for some kinds of error output.</p>",
        "id": 166480535,
        "sender_full_name": "davidtwco",
        "timestamp": 1558724271
    },
    {
        "content": "<p>right</p>",
        "id": 166480618,
        "sender_full_name": "oli",
        "timestamp": 1558724316
    },
    {
        "content": "<p>ok, 2 minutes</p>",
        "id": 166480624,
        "sender_full_name": "oli",
        "timestamp": 1558724321
    },
    {
        "content": "<p>How are we doing on \"Separate the diagnostics rendering from the compiler so it can be reused by others.\"</p>",
        "id": 166480625,
        "sender_full_name": "oli",
        "timestamp": 1558724323
    },
    {
        "content": "<p>there is <a href=\"https://crates.io/crates/annotate-snippets\" target=\"_blank\" title=\"https://crates.io/crates/annotate-snippets\">https://crates.io/crates/annotate-snippets</a></p>",
        "id": 166480637,
        "sender_full_name": "oli",
        "timestamp": 1558724333
    },
    {
        "content": "<p>we should totally figure out how to use it even for just a few things</p>",
        "id": 166480657,
        "sender_full_name": "oli",
        "timestamp": 1558724344
    },
    {
        "content": "<p>maybe add a feature flag so we can alternate between the diagnostic emitters?</p>",
        "id": 166480683,
        "sender_full_name": "oli",
        "timestamp": 1558724366
    },
    {
        "content": "<p>not sure if that is even possible</p>",
        "id": 166480690,
        "sender_full_name": "oli",
        "timestamp": 1558724375
    },
    {
        "content": "<p>the way everything is entangled</p>",
        "id": 166480692,
        "sender_full_name": "oli",
        "timestamp": 1558724380
    },
    {
        "content": "<p>Are there things that crate is missing that we’d need?</p>",
        "id": 166480703,
        "sender_full_name": "davidtwco",
        "timestamp": 1558724392
    },
    {
        "content": "<p>probably, not sure</p>",
        "id": 166480711,
        "sender_full_name": "oli",
        "timestamp": 1558724399
    },
    {
        "content": "<p>I haven't looked too closely</p>",
        "id": 166480772,
        "sender_full_name": "oli",
        "timestamp": 1558724405
    },
    {
        "content": "<p>We could fork and go back into the fold if that slows us down</p>",
        "id": 166480791,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724424
    },
    {
        "content": "<p>but we should probably just bite the bullet and try it out</p>",
        "id": 166480796,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724435
    },
    {
        "content": "<p>oh, idea</p>",
        "id": 166480804,
        "sender_full_name": "oli",
        "timestamp": 1558724443
    },
    {
        "content": "<p>we can add a new kind of output format</p>",
        "id": 166480807,
        "sender_full_name": "oli",
        "timestamp": 1558724451
    },
    {
        "content": "<p>and see if we can just use it as a diagnostics renderer for now</p>",
        "id": 166480821,
        "sender_full_name": "oli",
        "timestamp": 1558724463
    },
    {
        "content": "<p>instead of going all in even with the builder frontend</p>",
        "id": 166480836,
        "sender_full_name": "oli",
        "timestamp": 1558724472
    },
    {
        "content": "<p>mmm...<br>\nthat should work</p>",
        "id": 166480837,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724474
    },
    {
        "content": "<p>and decouple DiagnosticBuilder and the emitter more than now, I like it</p>",
        "id": 166480869,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724498
    },
    {
        "content": "<p>sounds like a plan</p>",
        "id": 166480884,
        "sender_full_name": "oli",
        "timestamp": 1558724519
    },
    {
        "content": "<p>meeting time is over! I'll open two issues for our \"newly\" \"discovered\" ideas</p>",
        "id": 166480956,
        "sender_full_name": "oli",
        "timestamp": 1558724546
    },
    {
        "content": "<p>I'll also try to setup a new meeting time planner</p>",
        "id": 166480989,
        "sender_full_name": "oli",
        "timestamp": 1558724581
    },
    {
        "content": "<p>thanks everyone!</p>",
        "id": 166481008,
        "sender_full_name": "oli",
        "timestamp": 1558724592
    },
    {
        "content": "<p>for the later you could extend the exisitng annotated-snippets-rs ticket</p>",
        "id": 166481025,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724607
    },
    {
        "content": "<p>thanks!</p>",
        "id": 166481040,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1558724618
    },
    {
        "content": "<p>will do, thanks, good idea</p>",
        "id": 166481041,
        "sender_full_name": "oli",
        "timestamp": 1558724619
    }
]