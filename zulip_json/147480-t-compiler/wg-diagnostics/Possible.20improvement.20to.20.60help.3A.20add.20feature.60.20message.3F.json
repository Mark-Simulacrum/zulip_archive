[
    {
        "content": "<p>There is a <code>help</code> message when a nightly feature is required but not enabled:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>    = help: add `#![feature(const_eval_select)]` to the crate attributes to enable\n</code></pre></div>\n<p>I wander if this could also include a link to the crate root file like this:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>    = help: add `#![feature(const_eval_select)]` to the crate attributes to enable: src/lib.rs:1:1\n</code></pre></div>\n<p>Because in a big project it is sometimes hard to find the crate root and it's a lot easier to just click the link :)</p>\n<p>Does this seem reasonable?</p>",
        "id": 260392896,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1636111277
    },
    {
        "content": "<p>This could also help in cases when \"the crate\" is actually test/binary/etc i.e. not the only/main crate in the project</p>",
        "id": 260400687,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1636116765
    },
    {
        "content": "<p>I think it would be great if there was a MachineApplicable suggestion on where to place the feature attribute. However, I vaguely recall looking into this in the past, and finding it was not easy to do.  The place where this error is generated doesn't seem to have easy access to the crate root span (AFAIK).  <a href=\"https://github.com/rust-lang/rust/issues/81370\">#81370</a> somewhat covers this issue.</p>",
        "id": 260408418,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636120744
    },
    {
        "content": "<p>it's also, imo, MaybeIncorrect, because a project may not want to opt into a feature</p>",
        "id": 260434987,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1636132124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/147480-t-compiler.2Fwg-diagnostics/topic/Possible.20improvement.20to.20.60help.3A.20add.20feature.60.20message.3F/near/260408418\">said</a>:</p>\n<blockquote>\n<p>I think it would be great if there was a MachineApplicable suggestion on where to place the feature attribute. However, I vaguely recall looking into this in the past, and finding it was not easy to do.  The place where this error is generated doesn't seem to have easy access to the crate root span (AFAIK).  <a href=\"https://github.com/rust-lang/rust/issues/81370\">#81370</a> somewhat covers this issue.</p>\n</blockquote>\n<p>I think you could access the crate root span with something along the lines of <code>tcx.def_span(CRATE_DEF_ID)</code>. But you'd still need to adjust it so it points to the right spot. Maybe <code>.shrink_to_lo()</code> would be good enough?</p>",
        "id": 260543142,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636242713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> The issue I saw was that this error primarily happens in <code>feature_err_issue</code>, which only has access to a <code>ParseSess</code>, and I don't see a way to get the crate root from there. Is there a way?</p>",
        "id": 260543349,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636243072
    },
    {
        "content": "<p>Ah, I didn't realize this was pre-TyCtxt</p>",
        "id": 260543566,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636243285
    },
    {
        "content": "<p>Although I thought a lot of feature-gating (though not all) is post-expansion?</p>",
        "id": 260543576,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636243299
    },
    {
        "content": "<p>Perhaps I'm misremembering</p>",
        "id": 260543625,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636243334
    }
]