[
    {
        "content": "<p>I'm looking at code that unexpectedly fails to build with <code>error[E0412]: cannot find type </code>my_symbol<code> in this scope</code>. apparently my symbol is not in the namespace I expected it to be in, and the namespace rustc suggests i add a <code>use</code> directive for is one where I didn't expect the symbol to be exported from. I'm wondering if there's more information rustc can emit (perhaps behind extra flags) to help me figure out what's going on</p>\n<p>I don't remember ever seeing rustc list two options when suggesting <code>use</code> directives - is it just picking the first one, and if so could we optionally show all places where symbols of that name are found? my other idea was to just dump a .json of the whole namespace tree for the user to weed through. thoughts?</p>\n<p>(the specific thing I'm trying to do is build libstd with the Buck build system using build files generated by <a href=\"https://github.com/facebookincubator/reindeer\">https://github.com/facebookincubator/reindeer</a> and I think Buck is not handling the way libcore imports stdarch by hardcoding a relative path to its <code>mod.rs</code> well. that configuration is unsupported, but it means I can't use <code>cargo doc</code> since I'm not building with Cargo)</p>",
        "id": 261044842,
        "sender_full_name": "Matt H",
        "timestamp": 1636573909
    },
    {
        "content": "<p>Multiple suggestions are technically possible, but I think that <em>that</em> suggestion in particular picks up the closest match only. I thought that that error also had a span pointing at the original definition, when possible.</p>",
        "id": 261167770,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636654501
    },
    {
        "content": "<p>Are you ok with relying on nightly-only -Z flags, <span class=\"user-mention\" data-user-id=\"456484\">@Matt H</span>?</p>",
        "id": 261167841,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1636654544
    },
    {
        "content": "<p>what do you mean? are there already -Z flags that exist that i could use, or do I think a hypothetical new flag could be kept nightly-only? -Z is fine with me either way (and actually i realize i never checked if -Z flags exist already!)</p>",
        "id": 261185462,
        "sender_full_name": "Matt H",
        "timestamp": 1636665454
    },
    {
        "content": "<p>I meant to add a new <code>-Z</code> flag to do this: stabilizing such a thing would be a lengthy process, but having a nightly flag to dump this info would only need an MCP to t-compiler that would likely be accepted quickly</p>",
        "id": 261959285,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1637255850
    }
]