[
    {
        "content": "<p>I'm looking into migrating Clippy code to use more diagnostic items. But there seems to be a conflict in naming. Sometimes names are camel case like <code>hashmap_type</code> and sometimes they match the item name exactly like <code>IntoIterator</code>. I really like the latter for readability. Is there a reason for camel case? Can we agree on a convention?</p>",
        "id": 224964313,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1612317306
    },
    {
        "content": "<p>Also, using the exact name gives us more mileage out of <code>sym::*</code> items.</p>\n<p>For more specific items like <code>Iterator::map</code>, I imagine we could name it <code>iterator_map</code>, but perhaps we could name it <code>Iterator::map</code>. Yet another approach is to avoid diagnostic items on associated items and instead write code like <code>is_diagnostic_assoc_item(did, sym::Iterator, sym::map)</code>.</p>",
        "id": 225024603,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1612363488
    },
    {
        "content": "<p>CC <span class=\"user-group-mention\" data-user-group-id=\"3456\">@T-clippy</span></p>",
        "id": 225024792,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1612363564
    },
    {
        "content": "<p>having a way to check for assoc items of diagnostic items sounds like a much more scalable approach than attaching diagnostic item information to all things. It may be a bit more expensive, but likely that perf diff is irrelevant</p>",
        "id": 225025241,
        "sender_full_name": "oli",
        "timestamp": 1612363753
    },
    {
        "content": "<p>I agree. Shouldn't be too bad if we use <code>AssociatedItems::find_by_name_and_kind</code>.</p>",
        "id": 225025470,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1612363844
    },
    {
        "content": "<p>Hey, I've basically reached the same point where I want to move more of Clippy's code to use diagnostic items. Has there been any progress on implementing  a function like <code>is_diagnostic_assoc_item(did, sym::Iterator, sym::map)</code>? If not, I would be happy to pick that up <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 246137929,
        "sender_full_name": "xFrednet",
        "timestamp": 1626374588
    },
    {
        "content": "<p>There has been zero progress</p>",
        "id": 246211401,
        "sender_full_name": "oli",
        "timestamp": 1626435001
    },
    {
        "content": "<p>I believe you can prototype this in clippy's util module instead of in rustc, which should make it easier and faster to develop</p>",
        "id": 246211464,
        "sender_full_name": "oli",
        "timestamp": 1626435031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"369415\">@xFrednet</span> we have is_diag_trait_item and is_diag_item_method in clippy_utils</p>",
        "id": 246215372,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1626437881
    },
    {
        "content": "<p>Oh, I've missed that, thank you for the reference, that should eliminate some more paths <span aria-label=\"gun\" class=\"emoji emoji-1f52b\" role=\"img\" title=\"gun\">:gun:</span></p>",
        "id": 246218102,
        "sender_full_name": "xFrednet",
        "timestamp": 1626439757
    },
    {
        "content": "<p>Yeah it's too many disjoint utils</p>",
        "id": 246219134,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1626440366
    },
    {
        "content": "<p>we could move these helpers to rustc, right next to <code>is_diagnostic_item</code>, so it is more discoverable</p>",
        "id": 246219629,
        "sender_full_name": "oli",
        "timestamp": 1626440639
    },
    {
        "content": "<p>(and probably make these functions mention each other in the docs)</p>",
        "id": 246219691,
        "sender_full_name": "oli",
        "timestamp": 1626440654
    },
    {
        "content": "<p>I'm looking to replace them though</p>",
        "id": 246220590,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1626441182
    },
    {
        "content": "<p>But I should stop talking and PR :)</p>",
        "id": 246220614,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1626441193
    }
]