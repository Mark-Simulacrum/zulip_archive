[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> there is definitely a plan for internationalization :)</p>",
        "id": 187042515,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580426659
    },
    {
        "content": "<p>is that plan concrete implementation wise though? My impression is that we have broad strokes (e.g., maybe even what platform to use) but not the details.</p>",
        "id": 187042568,
        "sender_full_name": "simulacrum",
        "timestamp": 1580426720
    },
    {
        "content": "<p>Once we have diagnostics structs as listed in the issue then it should be easy ish to add i18n based on various json files or something that key off of the text error code or something</p>",
        "id": 187042639,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580426767
    },
    {
        "content": "<p>This assumes there's a human-understandable \"error code\" like <code>object-safety-generics</code> that we can key off of but if we decide against codes then we can still use this internally</p>",
        "id": 187042675,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580426816
    },
    {
        "content": "<p>(split off into new topic)</p>",
        "id": 187042687,
        "sender_full_name": "simulacrum",
        "timestamp": 1580426836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> there are some open questions but in this case I think it's _mostly_ clear implementation wise what we can do</p>",
        "id": 187042703,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580426857
    },
    {
        "content": "<p>We don't even necessarily need to pull in Fluent</p>",
        "id": 187042712,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580426868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> hm, okay</p>",
        "id": 187042769,
        "sender_full_name": "simulacrum",
        "timestamp": 1580426904
    },
    {
        "content": "<p>that's farther than I thought we were</p>",
        "id": 187042775,
        "sender_full_name": "simulacrum",
        "timestamp": 1580426918
    },
    {
        "content": "<p>Error i18n is blocked on y'all implementing the diagnostics derive</p>",
        "id": 187042797,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580426949
    },
    {
        "content": "<p>error index i18n isn't blocked on anything someone just needs to do it, also it would make sense to hold off until after we figure out error codes</p>",
        "id": 187042829,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580426985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> note that this is only a plan, no implementation</p>",
        "id": 187042842,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427000
    },
    {
        "content": "<p>But please loop me in on PRs implementing the diagnostics derive so I can ensure it's compatible with this</p>",
        "id": 187042910,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427022
    },
    {
        "content": "<p>I was going to do it myself but I keep not having time lol</p>",
        "id": 187042924,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427037
    },
    {
        "content": "<p>yeah, this also all sounds mostly compatible</p>",
        "id": 187042984,
        "sender_full_name": "simulacrum",
        "timestamp": 1580427097
    },
    {
        "content": "<p>I continue to be skeptical about the \"many files on disk\", but of course the final artifacts can bundle things up if needed</p>",
        "id": 187043067,
        "sender_full_name": "simulacrum",
        "timestamp": 1580427146
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> did you have thoughts re. translation of error descriptions though? (i.e. the <code>.md</code> files we have today)</p>",
        "id": 187043107,
        "sender_full_name": "centril",
        "timestamp": 1580427183
    },
    {
        "content": "<p>these: <a href=\"https://github.com/rust-lang/rust/tree/master/src/librustc_error_codes/error_codes\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/tree/master/src/librustc_error_codes/error_codes\">https://github.com/rust-lang/rust/tree/master/src/librustc_error_codes/error_codes</a></p>",
        "id": 187043126,
        "sender_full_name": "centril",
        "timestamp": 1580427217
    },
    {
        "content": "<p>As long as there's something to key off of this is quite easy.</p>",
        "id": 187043283,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427356
    },
    {
        "content": "<p>Again, some open questions.</p>",
        "id": 187043328,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427368
    },
    {
        "content": "<p>it's basically just a string code that is linked up via a rustc_driver hashmap to descriptions</p>",
        "id": 187043354,
        "sender_full_name": "centril",
        "timestamp": 1580427403
    },
    {
        "content": "<p>it's very isolated</p>",
        "id": 187043359,
        "sender_full_name": "centril",
        "timestamp": 1580427415
    },
    {
        "content": "<p>but I was wondering re. the linking aspect; e.g. how do we store the translations and how does rustc load them?</p>",
        "id": 187043394,
        "sender_full_name": "centril",
        "timestamp": 1580427458
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/registry/struct.Registry.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/registry/struct.Registry.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/registry/struct.Registry.html</a></p>",
        "id": 187043478,
        "sender_full_name": "centril",
        "timestamp": 1580427527
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> rustup component, basically json files or something. which specific format depends on what works with Pontoon and what can support the detail we need. I think for error codes the json format is fine.</p>",
        "id": 187043600,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427634
    },
    {
        "content": "<p>Could also bake it in, but at least to start with a rustup component makes sense to me</p>",
        "id": 187043615,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427663
    },
    {
        "content": "<p>For diagnostics we may need to use a format a bit more powerful than json</p>",
        "id": 187043624,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427683
    },
    {
        "content": "<p>Maybe.</p>",
        "id": 187043627,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427692
    },
    {
        "content": "<p>Either way these files are never hand generated</p>",
        "id": 187043635,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427701
    },
    {
        "content": "<p>Er, handwritten</p>",
        "id": 187043644,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427711
    },
    {
        "content": "<p>Or read by humans.</p>",
        "id": 187043687,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427724
    },
    {
        "content": "<p>Error descriptions are basically just a long string, so it requires nothing technically complicated beyond that I think</p>",
        "id": 187043702,
        "sender_full_name": "centril",
        "timestamp": 1580427739
    },
    {
        "content": "<p>I continue to think the linking aspect is not too interesting :)</p>",
        "id": 187043704,
        "sender_full_name": "simulacrum",
        "timestamp": 1580427742
    },
    {
        "content": "<p>like, we can definitely do it</p>",
        "id": 187043710,
        "sender_full_name": "simulacrum",
        "timestamp": 1580427750
    },
    {
        "content": "<p>I personally favor the existing solution as being just fine</p>",
        "id": 187043726,
        "sender_full_name": "simulacrum",
        "timestamp": 1580427768
    },
    {
        "content": "<p>I agree in the sense that it's not complicated</p>",
        "id": 187043736,
        "sender_full_name": "centril",
        "timestamp": 1580427775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span>  I suspect the error descriptions are the most readily translatable asset we have</p>",
        "id": 187043759,
        "sender_full_name": "centril",
        "timestamp": 1580427798
    },
    {
        "content": "<p>since it's so simple</p>",
        "id": 187043764,
        "sender_full_name": "centril",
        "timestamp": 1580427801
    },
    {
        "content": "<p>Yes those are the easiest</p>",
        "id": 187043783,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427823
    },
    {
        "content": "<p>basically you need to swap out a string for another string</p>",
        "id": 187043786,
        "sender_full_name": "centril",
        "timestamp": 1580427827
    },
    {
        "content": "<p>I actually started doing them at one point lol and then left it</p>",
        "id": 187043790,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427834
    },
    {
        "content": "<p>It's not hard tbh</p>",
        "id": 187043832,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427843
    },
    {
        "content": "<p>Like if you want me to jot down a full plan in an issue I can</p>",
        "id": 187043848,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427860
    },
    {
        "content": "<p>yea; if we setup some infra I bet people will come and do it</p>",
        "id": 187043850,
        "sender_full_name": "centril",
        "timestamp": 1580427864
    },
    {
        "content": "<p>there's a bunch of initial work that needs to be done</p>",
        "id": 187043863,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> in rustup?</p>",
        "id": 187043885,
        "sender_full_name": "centril",
        "timestamp": 1580427909
    },
    {
        "content": "<p>Okay one question: presumably y'all still want to write these as MD files yes? So we should be generating the English json files via some step which Pontoon can then consume</p>",
        "id": 187043903,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427928
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> also in rustc so it knows how to load these etc</p>",
        "id": 187043912,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427942
    },
    {
        "content": "<p>For all of this there are two options: forcing rustc users to write things in the json/whatever format, or using what we use today and having an autogenrtation step</p>",
        "id": 187043991,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580427994
    },
    {
        "content": "<p>MD files is a pretty new (but nice!) thing -- they used to be hard-coded strings in the <code>errors.rs</code> files</p>",
        "id": 187043992,
        "sender_full_name": "centril",
        "timestamp": 1580427998
    },
    {
        "content": "<p>Both work, it's up to y'all</p>",
        "id": 187043996,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428001
    },
    {
        "content": "<p>I know! I wrote half of them :)</p>",
        "id": 187044003,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428011
    },
    {
        "content": "<p>:D</p>",
        "id": 187044010,
        "sender_full_name": "centril",
        "timestamp": 1580428015
    },
    {
        "content": "<blockquote>\n<p>also in rustc so it knows how to load these etc</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span>  could we start with a dumb <code>-Z</code> flag perhaps?</p>",
        "id": 187044025,
        "sender_full_name": "centril",
        "timestamp": 1580428028
    },
    {
        "content": "<p>and no rustup support initially</p>",
        "id": 187044046,
        "sender_full_name": "centril",
        "timestamp": 1580428054
    },
    {
        "content": "<p>Yes</p>",
        "id": 187044049,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428058
    },
    {
        "content": "<p>If y'all want I can file a bunch of concrete issues</p>",
        "id": 187044072,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428078
    },
    {
        "content": "<p>And a meta issue and a plan or whatever</p>",
        "id": 187044114,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428084
    },
    {
        "content": "<p>sounds helpful <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 187044120,
        "sender_full_name": "centril",
        "timestamp": 1580428090
    },
    {
        "content": "<p>Don't have bandwidth to do this myself but I can watch and help</p>",
        "id": 187044127,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428094
    },
    {
        "content": "<p>I was mostly waiting for diagnostics derive to happen first</p>",
        "id": 187044135,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428109
    },
    {
        "content": "<p>For short diagnostics we may not be able to have a sensible generation step and diagnostics writers may need to write text for the diagnostic in a file fwiw</p>",
        "id": 187044199,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428178
    },
    {
        "content": "<p>But maybe not</p>",
        "id": 187044275,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428227
    },
    {
        "content": "<p>maybe we can hard-code the English strings in the struct to make the diagnostics dev UX less \"jumpy\"</p>",
        "id": 187044295,
        "sender_full_name": "centril",
        "timestamp": 1580428263
    },
    {
        "content": "<p>also to facilitate the move</p>",
        "id": 187044300,
        "sender_full_name": "centril",
        "timestamp": 1580428270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> we can hardcode provided there's a way to extract it in a structured format, which is trickier for structs</p>",
        "id": 187044396,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428336
    },
    {
        "content": "<p>That said it's possible to just use a basic parse script for this. Annoying</p>",
        "id": 187044411,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1580428361
    }
]