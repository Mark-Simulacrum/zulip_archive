[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>\n<p>I have attempted to fix the issue by adding the following <a href=\"https://github.com/vakaras/rust/commit/8aa8e0656feed592b3409c416244fac786cbd485\" target=\"_blank\" title=\"https://github.com/vakaras/rust/commit/8aa8e0656feed592b3409c416244fac786cbd485\">lines</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">trait_ref</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ty</span>::<span class=\"n\">TraitRef</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">def_id</span>: <span class=\"nc\">tcx</span><span class=\"p\">.</span><span class=\"n\">lang_items</span><span class=\"p\">().</span><span class=\"n\">sized_trait</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">substs</span>: <span class=\"nc\">tcx</span><span class=\"p\">.</span><span class=\"n\">mk_substs_trait</span><span class=\"p\">(</span><span class=\"n\">place_ty</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[]),</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">prove_trait_ref</span><span class=\"p\">(</span><span class=\"n\">trait_ref</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">);</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>However, if I try to compile with:</p>\n<div class=\"codehilite\"><pre><span></span>./x.py build --stage <span class=\"m\">1</span> --keep-stage <span class=\"m\">0</span> -i\n</pre></div>\n\n\n<p>I get an ICE:</p>\n<div class=\"codehilite\"><pre><span></span>   Compiling syntax_ext v0.0.0 (file:///home/data/rustfest-paris/rust/src/libsyntax_ext)\nerror: internal compiler error: broken MIR in NodeId(702427) (&quot;&quot;): errors selecting obligation: [FulfillmentError(Obligation(predicate=Binder(TraitPredicate(&lt;[T] as std::marker::Sized&gt;)),depth=1),Unimplemented)]\n   --&gt; librustc/ty/mod.rs:591:1\n    |\n591 | pub struct Slice&lt;T&gt;([T]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n\nerror: Could not compile `rustc`.\n\nCaused by:\n  process didn&#39;t exit successfully: `/home/data/rustfest-paris/rust/build/bootstrap/debug/rustc\n</pre></div>\n\n\n<p>Do you have any idea why it fails while compiling stage 1?</p>",
        "id": 127206723,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527515645
    },
    {
        "content": "<p>Also, is my change at least to the right direction?</p>",
        "id": 127206736,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527515690
    },
    {
        "content": "<p>nope :) I mean, it looks like in that case we .. have some value of type <code>[T]</code>... seems ... unexpected to me but maybe I'm forgetting a corner case</p>",
        "id": 127206757,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527515738
    },
    {
        "content": "<blockquote>\n<p>Also, is my change at least to the right direction?</p>\n</blockquote>\n<p>yes, it looks roughly right</p>",
        "id": 127206758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527515750
    },
    {
        "content": "<p>it might be helpful to do <code>-Zdump-mir=all</code> and look for the last file to be dumped</p>",
        "id": 127206759,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527515761
    },
    {
        "content": "<p>and/or <code>-Zdump-mir=nll</code></p>",
        "id": 127206801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527515780
    },
    {
        "content": "<p>these will dump files into a directory <code>mir_dump</code> or <code>dump_mir</code>, something like that</p>",
        "id": 127206802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527515791
    },
    {
        "content": "<p>If I understand correctly, the code that fails is generated by a procedural macro.</p>",
        "id": 127206952,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527516049
    },
    {
        "content": "<blockquote>\n<p>If I understand correctly, the code that fails is generated by a procedural macro.</p>\n</blockquote>\n<p>sounds plausible, do you have the MIR?</p>",
        "id": 127207025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516149
    },
    {
        "content": "<p>I had kind of hoped to look at the MIR</p>",
        "id": 127207026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516156
    },
    {
        "content": "<p>Compilingâ€¦</p>",
        "id": 127207028,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527516165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I got his fix to compile and for the example in the issue it outputs this now</p>\n<div class=\"codehilite\"><pre><span></span>error: free region `&#39;a` does not outlive free region `&#39;static`\n  --&gt; test.rs:13:13\n   |\n13 |     let x = *s; // requires &#39;a: &#39;static\n   |             ^^\n\nerror: aborting due to previous error\n</pre></div>\n\n\n<p>Which is good, I think?</p>",
        "id": 127208990,
        "sender_full_name": "Fabian Zaiser",
        "timestamp": 1527519008
    },
    {
        "content": "<p>Still fails on my machine. I suspect that my environment is corrupted. I have scheduled a build on my server. I will open a pull request if it succeeds.</p>",
        "id": 127209963,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527520389
    },
    {
        "content": "<p>curious</p>",
        "id": 127210323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527520886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> this is with a clean build (nothing in the <code>build/</code> directory  at the outset, and you've removed <code>--keep-stage 0</code> as well?</p>",
        "id": 127210511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527521185
    },
    {
        "content": "<p>(got a face-to-face reponse; the answer is \"no, neither of those things were done yet\")</p>",
        "id": 127210526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527521256
    },
    {
        "content": "<p>The build has succeeded on my server (including <code>./x.py test</code>). I have rebased and opened a pull request: <a href=\"https://github.com/rust-lang/rust/pull/51139\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51139\">https://github.com/rust-lang/rust/pull/51139</a></p>",
        "id": 127218030,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527534967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> <a href=\"https://github.com/rust-lang/rust/pull/51139#issuecomment-400111611\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51139#issuecomment-400111611\">I left a comment about how to fix this issue, let me know what you think</a></p>",
        "id": 128625944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529964521
    },
    {
        "content": "<p>Thanks! Looking into it.</p>",
        "id": 128646840,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530004050
    },
    {
        "content": "<p>I proposed the hacky but simple fix :)</p>",
        "id": 128650744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530010360
    },
    {
        "content": "<p>I am working on it. <span class=\"emoji emoji-263a\" title=\"relaxed\">:relaxed:</span></p>",
        "id": 128653105,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530014547
    },
    {
        "content": "<p>By the way, if I understood it correctly, this code</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Qey</span><span class=\"o\">&lt;</span><span class=\"n\">Q</span>: <span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">Q</span><span class=\"p\">);</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>is sound just because the constructor is never called (with an argument of an unknown size), am I right?</p>",
        "id": 128653386,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530015043
    },
    {
        "content": "<p>yes -- basically we prevent constructing an unsized value in the first place</p>",
        "id": 128653450,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530015150
    },
    {
        "content": "<p>Ok. Thanks!</p>",
        "id": 128654600,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530017062
    },
    {
        "content": "<p>Can anyone advise me where I should put a test file so that when the Rust compiler test suite is run, it would be checked that the program compiles with no errors with <strong>both</strong> AST and MIR borrow checkers?</p>",
        "id": 128713412,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530103005
    },
    {
        "content": "<p>if you make a <code>ui</code> test, it will work, because we also do a second run with <code>compare-mode=nll</code></p>\n<p>but if you want to be explicit, you can add something like this to the test:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// revisions: ast mir</span>\n<span class=\"cp\">#![cfg_attr(mir, feature(nll))]</span><span class=\"w\"></span>\n</pre></div>",
        "id": 128713955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530103727
    },
    {
        "content": "<p>revisions are <a href=\"https://rust-lang-nursery.github.io/rustc-guide/tests/adding.html#revisions\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/tests/adding.html#revisions\">explained in the rustc guide</a></p>",
        "id": 128713976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530103767
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 128713979,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530103775
    },
    {
        "content": "<p>I will try.</p>",
        "id": 128713982,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530103782
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I have updated the <a href=\"https://github.com/rust-lang/rust/pull/51139\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51139\">pull request</a>. Please let me know what you think. It passes all tests on my machine. One thing that is strange to me is why the reported spans in some tests <a href=\"https://github.com/rust-lang/rust/pull/51139/files#diff-c03499f7aa03d8590f0f6bffb19917d6R27\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51139/files#diff-c03499f7aa03d8590f0f6bffb19917d6R27\">changed</a>.</p>",
        "id": 128724479,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1530116604
    },
    {
        "content": "<p>ok</p>",
        "id": 128726526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530119089
    }
]