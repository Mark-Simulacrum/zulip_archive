[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> back into this, so, without reading further I saw you said it's used just once, so why don't just make it &amp;mut?</p>",
        "id": 128847155,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530301889
    },
    {
        "content": "<p>hehe, stupid thought :P</p>",
        "id": 128847156,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530301901
    },
    {
        "content": "<p>I mean, I was wondering why is it doing clone in the first place</p>",
        "id": 128847245,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530302016
    },
    {
        "content": "<p>well we need a temporary buffer basically</p>",
        "id": 128847618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530302491
    },
    {
        "content": "<p>so as not to modify the original value</p>",
        "id": 128847622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530302497
    },
    {
        "content": "<p>ok, will check this</p>",
        "id": 128849412,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530304796
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I haven't jumped really into this task yet because this thing is still compiling your branch</p>",
        "id": 128850074,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530305807
    },
    {
        "content": "<p>but just finished reading the issue</p>",
        "id": 128850076,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530305813
    },
    {
        "content": "<p>there's something I don't understand</p>",
        "id": 128850077,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530305818
    },
    {
        "content": "<p>I don't see how this is going to do any better</p>",
        "id": 128850084,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530305832
    },
    {
        "content": "<p>I mean, if I understood correctly <code>simulate_block</code> is being called only from <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/type_check/liveness.rs#L52-L54\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/type_check/liveness.rs#L52-L54\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/type_check/liveness.rs#L52-L54</a> and that function pass down to <code>simulate_block</code></p>",
        "id": 128850099,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530305865
    },
    {
        "content": "<p>the thing is, each call is with a different <code>bb</code>, so I don't see any reuse because each call will build a different thing</p>",
        "id": 128850101,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530305877
    },
    {
        "content": "<p>so I'd be basically moving the clone call to the caller and passing that down</p>",
        "id": 128850218,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530306011
    },
    {
        "content": "<p>with no reuse, because I'd need to do that inside the loop</p>",
        "id": 128850227,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530306030
    },
    {
        "content": "<blockquote>\n<p>the thing is, each call is with a different <code>bb</code>, so I don't see any reuse because each call will build a different thing</p>\n</blockquote>\n<p>all basic blocks can re-use the same buffer</p>",
        "id": 128872637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530350742
    },
    {
        "content": "<p>where we now clone the <code>foo[bb]</code>, we would want to use <code>overwrite</code> to write the data in</p>",
        "id": 128872676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530350765
    },
    {
        "content": "<p>tbh, I don't know if it will be much of a win or not</p>",
        "id": 128872678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530350771
    },
    {
        "content": "<p>it's just saving an allocation basically</p>",
        "id": 128872680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530350778
    },
    {
        "content": "<p>(and a free)</p>",
        "id": 128872681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530350783
    },
    {
        "content": "<p>I know that's very easy what we need to do but I'm still not catching exactly what you meant</p>",
        "id": 128883164,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530370147
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> to be 100% specific</p>",
        "id": 128883167,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530370154
    },
    {
        "content": "<p>I was getting that you mean to use a buffer with <code>self.outs[bb]</code> content but that doesn't make any sense to me, that's why I have doubts about exactly what you want to do</p>",
        "id": 128883215,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530370209
    },
    {
        "content": "<p>if you mean to use a buffer with <code>self.outs</code>, makes sense :)</p>",
        "id": 128883222,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530370231
    },
    {
        "content": "<p>if the buffer is about <code>self.outs[bb]</code> I think we would be just moving things around because there's no reuse of the outs for a specific basic block</p>",
        "id": 128883233,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530370308
    },
    {
        "content": "<p>what is reused is <code>self.outs</code> being used on each call with a different <code>bb</code></p>",
        "id": 128883274,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530370328
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> forgot to share a link with my changes to check if that was the idea you had ...</p>",
        "id": 128906121,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530416585
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/commit/986bb2a81ee58a35b5deb729fb8f1cdf53b774d3\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/986bb2a81ee58a35b5deb729fb8f1cdf53b774d3\">https://github.com/spastorino/rust/commit/986bb2a81ee58a35b5deb729fb8f1cdf53b774d3</a></p>",
        "id": 128906123,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530416600
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I left various comments on the commit â€” the key differences are:</p>\n<ul>\n<li>the buffer you made is too big -- it contains the results for all blocks, but it only needs to be the right size for one block</li>\n<li>the buffer can be shared across blocks</li>\n<li>the regular/drop computation don't need distinct buffers</li>\n</ul>",
        "id": 128914977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530437776
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>you don&#39;t need a separate regular/drops buffer -- the buffer is just a bitset of local variables, and the set of local variables comes from the MIR, it is the same for the regular/drop computation. If we add the helper I suggested below, this would be something like:\n\nlet mut simulate_buffer = self.liveness.make_simulate_buffer(self.mir);\n</pre></div>",
        "id": 128921575,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530452838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I thought we talked that regular.outs was the set of live locals when you only consider regular uses</p>",
        "id": 128921578,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530452879
    },
    {
        "content": "<p>and drop.outs was the set of live locals you consider for drops</p>",
        "id": 128921617,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530452900
    },
    {
        "content": "<p>that is correct</p>",
        "id": 128921618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452904
    },
    {
        "content": "<p>however</p>",
        "id": 128921620,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452909
    },
    {
        "content": "<p>that's why I cloned regulars and drops</p>",
        "id": 128921621,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530452914
    },
    {
        "content": "<p>both are sets of <strong>variables</strong></p>",
        "id": 128921622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452915
    },
    {
        "content": "<p>that is, the \"domain\" of each set is the same</p>",
        "id": 128921623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452923
    },
    {
        "content": "<p>and the buffer is just a temporary set over that (same) domain</p>",
        "id": 128921625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452930
    },
    {
        "content": "<p>more concretely, it is a bit set</p>",
        "id": 128921626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452941
    },
    {
        "content": "<p>and the point is that the number of bits in both cases is the same</p>",
        "id": 128921631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452948
    },
    {
        "content": "<p>you meant that in the method this thing is overwritten?</p>",
        "id": 128921632,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530452951
    },
    {
        "content": "<p>(but different bits will be set / unset)</p>",
        "id": 128921633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452954
    },
    {
        "content": "<p>do you mean \"overwritten\"?</p>",
        "id": 128921634,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452968
    },
    {
        "content": "<p>if so, yes</p>",
        "id": 128921635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452984
    },
    {
        "content": "<p>yes, overwritten</p>",
        "id": 128921636,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530452992
    },
    {
        "content": "<p>basically what that method (<code>simulate_block()</code>) does is something like this:</p>",
        "id": 128921637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530452993
    },
    {
        "content": "<p>ahhh ok ok ok, now makes sense</p>",
        "id": 128921638,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530452998
    },
    {
        "content": "<p>it never made sense until I hear that things are overwritten :)</p>",
        "id": 128921687,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453018
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>let mut buffer = starting_value.clone();\n\nfor each statement in reverse order {\n    mutate(&amp;mut buffer);\n    callback(&amp;buffer);\n}\n</pre></div>",
        "id": 128921688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453019
    },
    {
        "content": "<p>yes yes</p>",
        "id": 128921689,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453028
    },
    {
        "content": "<p>now makes sense</p>",
        "id": 128921690,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453031
    },
    {
        "content": "<p>that's why I wasn't following</p>",
        "id": 128921692,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453040
    },
    {
        "content": "<p>and now we will do something like:</p>\n<div class=\"codehilite\"><pre><span></span>let buffer = allocate();\n...\nloop {\n  copy_initial_values(&amp;mut buffer);\n\n  for each statement in reverse order {\n    mutate(&amp;mut buffer);\n    callback(&amp;buffer);\n  }\n}\n</pre></div>",
        "id": 128921693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453054
    },
    {
        "content": "<p>yeah, ok</p>",
        "id": 128921695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453056
    },
    {
        "content": "<p>I knew things were modified but not that the buffer was entirely overwritten</p>",
        "id": 128921702,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453071
    },
    {
        "content": "<p>tbh I'm not sure if it will be a win :) but it can't hurt I guess</p>",
        "id": 128921703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453072
    },
    {
        "content": "<p>I mean</p>",
        "id": 128921704,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453073
    },
    {
        "content": "<p>mainly because that buffer starts with the set of live locals at the end of the block</p>",
        "id": 128921705,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453100
    },
    {
        "content": "<p>njn found that there were a lot more allocations in the NLL path, so part of this is a drive to shave those off and see if it helps</p>",
        "id": 128921706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453102
    },
    {
        "content": "<p>so I never imagined that those things were changed</p>",
        "id": 128921707,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453110
    },
    {
        "content": "<p>so ... to be 100% sure</p>",
        "id": 128921756,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453214
    },
    {
        "content": "<p>if this bitset has 50 bits of locals set, all those 50 bits will be changed?</p>",
        "id": 128921795,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453245
    },
    {
        "content": "<p>I'm going to check the code for some reason I was kind of skeptical of that :P</p>",
        "id": 128921798,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453269
    },
    {
        "content": "<p>because if everything is changed why that doesn't use a new set and start filling it?</p>",
        "id": 128921799,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453301
    },
    {
        "content": "<p>I am confused</p>",
        "id": 128921851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453472
    },
    {
        "content": "<p>I mean I thikn the answer is yes?</p>",
        "id": 128921852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453477
    },
    {
        "content": "<p>but I'm not sure <em>exactly</em> what you are asking</p>",
        "id": 128921892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453487
    },
    {
        "content": "<p>changed by what?</p>",
        "id": 128921893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453492
    },
    {
        "content": "<p>:(</p>",
        "id": 128921901,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453547
    },
    {
        "content": "<p>hehe</p>",
        "id": 128921902,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453581
    },
    {
        "content": "<p>I've been having a lot of english/understanding issues with this task :(</p>",
        "id": 128921919,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453602
    },
    {
        "content": "<p>hmm</p>",
        "id": 128921949,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453609
    },
    {
        "content": "<p>let me try to explain</p>",
        "id": 128921952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453618
    },
    {
        "content": "<p>Before:</p>\n<div class=\"codehilite\"><pre><span></span>loop {\n  let mut buffer = starting_value.clone(); // same as:\n  // let mut buffer = buffer.allocate(num_locals);\n  // copy_initial_values(&amp;mut buffer, &amp;starting_value);\n\n  for each statement in reverse order {\n    mutate(&amp;mut buffer);\n    callback(&amp;buffer);\n  }\n}\n</pre></div>\n\n\n<p>after:</p>\n<div class=\"codehilite\"><pre><span></span>let buffer = allocate(num_locals);\n...\nloop {\n  copy_initial_values(&amp;mut buffer, &amp;starting_value);\n\n  for each statement in reverse order {\n    mutate(&amp;mut buffer);\n    callback(&amp;buffer);\n  }\n}\n</pre></div>",
        "id": 128921953,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453625
    },
    {
        "content": "<p>I see what you mean</p>",
        "id": 128922020,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453778
    },
    {
        "content": "<p>the key is ...</p>",
        "id": 128922023,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453782
    },
    {
        "content": "<p><code>buffer.overwrite(&amp;self.outs[block]);</code></p>",
        "id": 128922026,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453784
    },
    {
        "content": "<p>(note: this only makes sense because we are using a dense bitset)</p>",
        "id": 128922080,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453876
    },
    {
        "content": "<p>the problem was ... when you said reuse I've tried to reuse values and you meant reuse memory</p>",
        "id": 128922081,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453882
    },
    {
        "content": "<p>since then we allocate same amount no matter what</p>",
        "id": 128922082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453883
    },
    {
        "content": "<p>I didn't see any way to reuse values</p>",
        "id": 128922083,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530453897
    },
    {
        "content": "<p>ah, I see. Yes.</p>",
        "id": 128922092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453933
    },
    {
        "content": "<p>Correct.</p>",
        "id": 128922093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530453935
    },
    {
        "content": "<p>will change this in a bit if I have time :)</p>",
        "id": 128922188,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530454085
    },
    {
        "content": "<p>was your PR, the one from where I was starting off, merged?</p>",
        "id": 128922192,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530454109
    },
    {
        "content": "<p>I think you mean <a href=\"https://github.com/rust-lang/rust/pull/51896\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51896\">https://github.com/rust-lang/rust/pull/51896</a> ?</p>",
        "id": 128922211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530454191
    },
    {
        "content": "<p>if so, not yet</p>",
        "id": 128922212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530454193
    },
    {
        "content": "<p>hmm looks like it has some error too</p>",
        "id": 128922257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530454229
    },
    {
        "content": "<p>will fix</p>",
        "id": 128922259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530454230
    },
    {
        "content": "<p>ok</p>",
        "id": 128922405,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530454571
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/commit/9cc337339c7730335364079cd94ed92f58efa046\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/9cc337339c7730335364079cd94ed92f58efa046\">https://github.com/rust-lang/rust/commit/9cc337339c7730335364079cd94ed92f58efa046</a></p>",
        "id": 128930613,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530473554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> that looks right to me</p>",
        "id": 128970569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545736
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 128970577,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530545747
    },
    {
        "content": "<p><code>overwrite</code> should exist on master; maybe not on that branch. You can use <code>IdxSet::clone_from(...)</code> if not</p>",
        "id": 128970579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545751
    },
    {
        "content": "<p>but that method got renamed to <code>overwrite</code></p>",
        "id": 128970586,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545756
    },
    {
        "content": "<p>but clone_from does some clones so it allocates stuff</p>",
        "id": 128970628,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530545781
    },
    {
        "content": "<p>it does not</p>",
        "id": 128970630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545785
    },
    {
        "content": "<p>I wanted to avoid allocations</p>",
        "id": 128970632,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530545789
    },
    {
        "content": "<p>no?</p>",
        "id": 128970634,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530545791
    },
    {
        "content": "<p>not <code>IdxSet::clone_from</code>, specifically</p>",
        "id": 128970635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545792
    },
    {
        "content": "<p>but there is another method (<code>Clone::clone_from</code>) that does</p>",
        "id": 128970643,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545804
    },
    {
        "content": "<p>this is why we renamed <code>IdxSet::clone_from</code></p>",
        "id": 128970644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545809
    },
    {
        "content": "<p>in <a href=\"https://github.com/rust-lang/rust/pull/51869\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51869\">https://github.com/rust-lang/rust/pull/51869</a></p>",
        "id": 128970647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545821
    },
    {
        "content": "<p>I see</p>",
        "id": 128970802,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530545986
    },
    {
        "content": "<p>well, does it worth to change the code? no matter what I do is going to conflict in master</p>",
        "id": 128970864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530546015
    },
    {
        "content": "<p>unless I do this stuff against master itself</p>",
        "id": 128970875,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530546025
    },
    {
        "content": "<p>instead of your branch</p>",
        "id": 128970882,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530546032
    },
    {
        "content": "<p>I suspect you could rebase on to master and it would be fine, else wait for my branch to land</p>",
        "id": 128971002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530546159
    },
    {
        "content": "<p>the PR is r+'d now</p>",
        "id": 128971004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530546161
    },
    {
        "content": "<p>yeah :)</p>",
        "id": 128971283,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530546416
    },
    {
        "content": "<p>will wait</p>",
        "id": 128971300,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530546441
    },
    {
        "content": "<p>ping me when it lands</p>",
        "id": 128971303,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530546445
    },
    {
        "content": "<p>ok, I'm planning to push a bit harder on triage and think things over</p>",
        "id": 128971374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530546503
    },
    {
        "content": "<p>in terms of \"what's next\"</p>",
        "id": 128971377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530546507
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 128977354,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530553202
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you could rebase now</p>",
        "id": 128990484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530569288
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/52007\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52007\">https://github.com/rust-lang/rust/pull/52007</a></p>",
        "id": 128990986,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530570106
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> [00:04:32] tidy error: /checkout/src/librustc_mir/util/liveness.rs:169: line longer than 100 chars</p>",
        "id": 128995153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530577086
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> facepalm, yeah just saw it and was fixing it</p>",
        "id": 128995183,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530577190
    },
    {
        "content": "<p>pushed</p>",
        "id": 128995283,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530577357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> now it's fine :)</p>",
        "id": 128995294,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530577439
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> rebased <a href=\"https://github.com/rust-lang/rust/pull/52007\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52007\">https://github.com/rust-lang/rust/pull/52007</a></p>",
        "id": 129098688,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530729320
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <a href=\"https://github.com/rust-lang/rust/pull/52007#pullrequestreview-134453710\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52007#pullrequestreview-134453710\">https://github.com/rust-lang/rust/pull/52007#pullrequestreview-134453710</a></p>",
        "id": 129098812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530729514
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ...</p>",
        "id": 129099021,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530729851
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    /// Create an empty `LocalSet` buffer to be mutably shared accross different calls to\n    /// `simulate_block`, hence reducing memory allocation.\n</pre></div>",
        "id": 129099025,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530729855
    },
    {
        "content": "<p>sounds like proper english?</p>",
        "id": 129099027,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530729864
    },
    {
        "content": "<p><span class=\"emoji emoji-1f61b\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 129099032,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530729879
    },
    {
        "content": "<p>yep :)</p>",
        "id": 129099113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730038
    },
    {
        "content": "<p>pushed again</p>",
        "id": 129099116,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530730066
    },
    {
        "content": "<p>I'm wondering if I should just r+</p>",
        "id": 129099189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730137
    },
    {
        "content": "<p>I guess it might not help</p>",
        "id": 129099190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730140
    },
    {
        "content": "<p>that would not, really, surprise me very much</p>",
        "id": 129099197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730146
    },
    {
        "content": "<p>hehe yeah</p>",
        "id": 129100569,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530732235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://perf.rust-lang.org/compare.html?start=860d169474acabdc53b9a698f8ce02eba7e0daeb&amp;end=00bcc44fb92c28465c727881355c3235a56a4045&amp;stat=instructions%3Au\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=860d169474acabdc53b9a698f8ce02eba7e0daeb&amp;end=00bcc44fb92c28465c727881355c3235a56a4045&amp;stat=instructions%3Au\">https://perf.rust-lang.org/compare.html?start=860d169474acabdc53b9a698f8ce02eba7e0daeb&amp;end=00bcc44fb92c28465c727881355c3235a56a4045&amp;stat=instructions%3Au</a></p>",
        "id": 129132164,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530790154
    },
    {
        "content": "<p>hmm, kind of looks like noise</p>",
        "id": 129132477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530790487
    },
    {
        "content": "<p>I think I'm inclined not to land it</p>",
        "id": 129132485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530790501
    },
    {
        "content": "<p>if it doesn't really <em>help</em> performance, it's mildly less clean, and it could make future refactorings more annoying</p>",
        "id": 129132498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530790518
    },
    {
        "content": "<p>what do you think?</p>",
        "id": 129132502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530790520
    },
    {
        "content": "<p>agreed</p>",
        "id": 129137623,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530797184
    },
    {
        "content": "<p>ok, closed</p>",
        "id": 129138342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530797863
    }
]