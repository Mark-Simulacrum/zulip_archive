[
    {
        "content": "<p>Someone posted this example on twitter: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a4232dffd9300e6febeabf2208ea589d\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a4232dffd9300e6febeabf2208ea589d\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a4232dffd9300e6febeabf2208ea589d</a> which I thought was interesting -- The argument borrow _could_ end before we borrow self, but obviously it doesn't. I was curious what would be needed to fix this. (Obviously in this example you could just do <code>self.a</code>, but the user says IRL they needed a mut ref)</p>",
        "id": 193217765,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1586278734
    },
    {
        "content": "<p>for clarity:</p>\n<div class=\"codehilite\"><pre><span></span>struct Foo {\n    a: usize,\n}\n\nimpl Foo {\n    fn bad(&amp;mut self) {\n        let ref mut b = self.a;\n        self.doit(*b);\n    }\n   fn doit(&amp;mut self, _b: usize) {}\n}\n</pre></div>",
        "id": 193217945,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1586278826
    },
    {
        "content": "<p>Is this similar to two-phase borrows?</p>",
        "id": 193449335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1586438749
    },
    {
        "content": "<p>I think it may <em>be</em> two phase borrows</p>",
        "id": 193449412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1586438766
    },
    {
        "content": "<p>(or \"generalized two-phase borrows\", rather)</p>",
        "id": 193449435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1586438775
    },
    {
        "content": "<p>oh, maybe. But because it's explicitly ref mut it isn't?</p>",
        "id": 193468586,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1586447180
    },
    {
        "content": "<p>I don't know yet</p>",
        "id": 193487467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1586455506
    },
    {
        "content": "<p>It just struck me as quite similar</p>",
        "id": 193487494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1586455519
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"279742\">@Russell Cohen</span> I think <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is correct that this is related to two-phase borrows, but there are two complications:</p>\n<ul>\n<li>first, we decided not to support mixing two <code>&amp;mut</code>  references</li>\n<li>second, this is a case of a \"pre-existing borrow', which we also decided to forbid, as it is incompatible with two-phase borrows (See e.g. <a href=\"https://github.com/rust-lang/rust/issues/59159\" title=\"https://github.com/rust-lang/rust/issues/59159\">#59159</a>, <a href=\"https://github.com/rust-lang/rust/issues/56254\" title=\"https://github.com/rust-lang/rust/issues/56254\">#56254</a>)</li>\n</ul>",
        "id": 194539833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587209542
    },
    {
        "content": "<p>Got it. So theoretically it could be handled in exactly this form, but the generalized form causes issues.</p>",
        "id": 195098647,
        "sender_full_name": "Russell Cohen",
        "timestamp": 1587665273
    }
]