[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can we schedule a time to discuss <a href=\"https://github.com/rust-lang/rust/issues/67681\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67681\">#67681</a> and further plans in that direction? I'm available from about this time (19:30 UTC) onwards on weekdays.</p>",
        "id": 184937690,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1578338967
    },
    {
        "content": "<p>ping <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^</p>",
        "id": 185036134,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1578419930
    },
    {
        "content": "<p>ugh I missed this, sorry <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></p>",
        "id": 185621340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579024797
    },
    {
        "content": "<p>yes, let's do that</p>",
        "id": 185621342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579024799
    },
    {
        "content": "<p>are you still available with those times?</p>",
        "id": 185621384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579024803
    },
    {
        "content": "<p>Yes</p>",
        "id": 185627742,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579028442
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 185735273,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579116971
    },
    {
        "content": "<p>Hi:)</p>",
        "id": 185735490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117091
    },
    {
        "content": "<p>Gimme one or two minutes</p>",
        "id": 185735505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117100
    },
    {
        "content": "<p>ok ok</p>",
        "id": 185735944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117387
    },
    {
        "content": "<p>So yeah <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> not sure if we had a precise agenda</p>",
        "id": 185735955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117398
    },
    {
        "content": "<p>I guess the bigger question is \"how to remove lexical checker\"</p>",
        "id": 185735970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117410
    },
    {
        "content": "<p>well I'm not sure if that's the right framing, so maybe we should start with that question</p>",
        "id": 185735982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117423
    },
    {
        "content": "<p>is the goal to <em>remove lexical checker</em> or to <em>move typeck to not compute regions</em></p>",
        "id": 185735995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117432
    },
    {
        "content": "<p>Well, I have a list of things that move towards <em>move typeck to not compute regions</em></p>",
        "id": 185736078,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579117462
    },
    {
        "content": "<p>I'm not sure if getting the NLL solver to handle region solving in, say item wf checking would be that beneficial.</p>",
        "id": 185736133,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579117511
    },
    {
        "content": "<p>Yes</p>",
        "id": 185736272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117571
    },
    {
        "content": "<p>Well, yes and no</p>",
        "id": 185736288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117577
    },
    {
        "content": "<p>I mean the advantage would obviously be that we have only one region checker, whereas now we have 2</p>",
        "id": 185736312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117591
    },
    {
        "content": "<p>but I think I\"ve basically come around to thinking \"that is a waste of time\"</p>",
        "id": 185736330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117604
    },
    {
        "content": "<p>that is, we should focus more on liberating typeck</p>",
        "id": 185736342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117610
    },
    {
        "content": "<p>and things like \"item wf checking\" can wait</p>",
        "id": 185736355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117620
    },
    {
        "content": "<p>It's much lower priority at least.</p>",
        "id": 185736362,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579117623
    },
    {
        "content": "<p>so what is your list?</p>",
        "id": 185736370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117634
    },
    {
        "content": "<p>(also, I'm trying to remember what the PR you had was...)</p>",
        "id": 185736511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117719
    },
    {
        "content": "<p>also, I rebased the \"no leak check\" branch btw</p>",
        "id": 185736558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117749
    },
    {
        "content": "<p>we could talk a bit about that too :)</p>",
        "id": 185736563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117754
    },
    {
        "content": "<p>I haven't yet tried to keep the leak check and issue warnings, I was going to tinker with that, prob not <em>too hard</em> to do</p>",
        "id": 185736575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117769
    },
    {
        "content": "<ul>\n<li>Erase regions after region solving (this isn't really the long term goal, but I think that it's helpful in the short term).</li>\n<li>Don't infer regions (i.e. don't run <code>lexical_region_reolve</code>) when checking function/const/static bodies, gated on <code>-Zborrowck=mir</code></li>\n<li>Don't visit expressions in regionck. This essentially disables the leak check because <code>ReEmpty</code> is special, so requires some work to ensure that we don't regress error messages (i.e. your PR).</li>\n<li>Ensure that <code>MIR</code> doesn't contain unerased free regions (except for borrowck's copy) (this is mostly cleaning up)</li>\n</ul>",
        "id": 185736630,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579117803
    },
    {
        "content": "<p>If we keep the leak check and emit warnings, does selection also need the leak check to avoid ambiguity errors?</p>",
        "id": 185736721,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579117860
    },
    {
        "content": "<p>Yes, I think it does</p>",
        "id": 185736747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117879
    },
    {
        "content": "<p>Which is why I think if we issue warnings</p>",
        "id": 185736755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117886
    },
    {
        "content": "<p>We probably want to keep leak check .. all the time?</p>",
        "id": 185736766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117892
    },
    {
        "content": "<p>it just feels like things will be too inconsistent otherwise</p>",
        "id": 185736785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117906
    },
    {
        "content": "<p>ok so</p>",
        "id": 185736791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117912
    },
    {
        "content": "<p>looking at the list</p>",
        "id": 185736795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117915
    },
    {
        "content": "<p>I guess the idea of the first step is</p>",
        "id": 185736836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117923
    },
    {
        "content": "<p>start by erasing all the regions coming out from typeck--</p>",
        "id": 185736846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117930
    },
    {
        "content": "<p>That list gets us about half way. I guess that the long term goal is to not even create <code>ReVar</code>s?</p>",
        "id": 185736852,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579117937
    },
    {
        "content": "<p>thus proving the current \"hypothesis\" that NLL doesn't depend at all on the regionck from typeck</p>",
        "id": 185736888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579117960
    },
    {
        "content": "<blockquote>\n<ul>\n<li>Don't visit expressions in regionck. This essentially disables the leak check because <code>ReEmpty</code> is special, so requires some work to ensure that we don't regress error messages (i.e. your PR).</li>\n</ul>\n</blockquote>\n<p>this is interesting</p>",
        "id": 185736974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118019
    },
    {
        "content": "<p>if I'm reading your list correctly, at no point do we stop running <code>lexical_region_resolve</code> on regular functions...? oh, I see, that was the second bullet</p>",
        "id": 185737167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118038
    },
    {
        "content": "<p>I misunderstood it at first</p>",
        "id": 185737214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118044
    },
    {
        "content": "<blockquote>\n<p>(also, I'm trying to remember what the PR you had was...)</p>\n</blockquote>\n<p>It moves opaque type region inference to borrow checking.</p>",
        "id": 185737422,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579118177
    },
    {
        "content": "<p>ah right right</p>",
        "id": 185737447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118194
    },
    {
        "content": "<p>so as far as visiting expressions in regionck</p>",
        "id": 185737454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118204
    },
    {
        "content": "<p>I think maybe some aspects of WF checking were triggered by that?</p>",
        "id": 185737475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118223
    },
    {
        "content": "<p>trying to remember, there is something \"special\" about a type outliving the empty region</p>",
        "id": 185737487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118232
    },
    {
        "content": "<p>re: my PR, I was hoping that we land it with the leak-check on \"life support\"</p>",
        "id": 185737509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118252
    },
    {
        "content": "<p>and then at next release maybe rip it out, hopefully that gives a bit of transition? I'd hope it's short</p>",
        "id": 185737527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118265
    },
    {
        "content": "<p>I still feel a bit uncomfortable, like how best to explain what we are doing and \"why\"</p>",
        "id": 185737537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118278
    },
    {
        "content": "<p>but I also like that this gives some time to write the code in NLL checker that I didn't get to</p>",
        "id": 185737589,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118287
    },
    {
        "content": "<blockquote>\n<p>I still feel a bit uncomfortable, like how best to explain what we are doing and \"why\"</p>\n</blockquote>\n<p>I think it probably suffices to say: </p>\n<p>We are pursuing a model of region checking that is maximally conservative in some sense, and fixing lots of existing bugs in the current code.</p>",
        "id": 185737638,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118327
    },
    {
        "content": "<p>the maximally conservative part refers to this balance of \"how much checking takes place eagerly, and hence effects subtyping\" and \"how much takes place in region checking\" -- or just kind of -- where do region constraints get evaluated</p>",
        "id": 185737714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118381
    },
    {
        "content": "<p>I feel I can write up an explanation around this, maybe make a tracking issue, though I think ideally I would want to have an RFC  (though it would be the sort of RFC that nobody reads but <span class=\"user-mention silent\" data-user-id=\"126804\">Ariel Ben-Yehuda</span>, no doubt =)</p>",
        "id": 185737866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118446
    },
    {
        "content": "<p>but I think an RFC would be better for when we sort of know the \"full answer\", and/or part of describing chalk/polonius</p>",
        "id": 185737899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118471
    },
    {
        "content": "<p>anyway I think your plan for moving regions makes sense</p>",
        "id": 185737921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118485
    },
    {
        "content": "<p>do we have a tracking issue for this?</p>",
        "id": 185737929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118489
    },
    {
        "content": "<p>No. I was going to create one after this and I had a bit more clarity on the goal.</p>",
        "id": 185738015,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579118525
    },
    {
        "content": "<p>I'm pondering the part about</p>",
        "id": 185738057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118548
    },
    {
        "content": "<p>well first off</p>",
        "id": 185738066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118554
    },
    {
        "content": "<blockquote>\n<p>That list gets us about half way. I guess that the long term goal is to not even create <code>ReVar</code>s?</p>\n</blockquote>\n<p>to come back to this</p>",
        "id": 185738075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118565
    },
    {
        "content": "<p>yeah I mean in my <em>ideal</em> world</p>",
        "id": 185738086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118570
    },
    {
        "content": "<p>we'd be erasing regions as we bring things \"into scope\" of the type checker</p>",
        "id": 185738102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118579
    },
    {
        "content": "<p>this would also improve caching, presumably, between functions</p>",
        "id": 185738119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118592
    },
    {
        "content": "<p>Indeed. And maybe reduce the number of types we're interning.</p>",
        "id": 185738243,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579118653
    },
    {
        "content": "<p>right</p>",
        "id": 185738263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118666
    },
    {
        "content": "<p>so I guess that is my goal :)</p>",
        "id": 185738274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118676
    },
    {
        "content": "<p>I'm still pondering the part about:</p>\n<p>keep running regionck without running the region solver</p>",
        "id": 185738315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118699
    },
    {
        "content": "<p>are there checks that it does that we would have to do elsewhere?</p>",
        "id": 185738335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118714
    },
    {
        "content": "<p>is it just a matter of bad error messages or something?</p>",
        "id": 185738346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118720
    },
    {
        "content": "<p>I remember being not very happy about the hacks around \"outlives 'empty\"</p>",
        "id": 185738354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118733
    },
    {
        "content": "<p>and in particular the checks that say \"is this 'empty? if so, return\" that we use to avoid ICEs</p>",
        "id": 185738369,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118749
    },
    {
        "content": "<p>but I sort of forget if I had a different sol'n in mind</p>",
        "id": 185738373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118755
    },
    {
        "content": "<p>It can also cause <code>dropck_outlives</code> to run which hides the hang that <a href=\"https://github.com/rust-lang/rust/pull/67731\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67731\">https://github.com/rust-lang/rust/pull/67731</a> fixes.</p>",
        "id": 185738445,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579118798
    },
    {
        "content": "<p>but NLL subsumes that check, right?</p>",
        "id": 185738518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118860
    },
    {
        "content": "<p>I think NLL skips it for types with no free lifetimes (in fact, no free lifetimes that don't contain a universal region atm)</p>",
        "id": 185738607,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579118897
    },
    {
        "content": "<p>is that a problem?</p>",
        "id": 185738670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118959
    },
    {
        "content": "<p>Not with that PR.</p>",
        "id": 185738684,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579118972
    },
    {
        "content": "<p>ok =)</p>",
        "id": 185738734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579118989
    },
    {
        "content": "<p>well, ok, then I'll get to work on those modifications to leak check PR ;)</p>",
        "id": 185738965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119130
    },
    {
        "content": "<p>and you create tracking issue :)</p>",
        "id": 185738966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119136
    },
    {
        "content": "<p>we'll figure out the next steps after that</p>",
        "id": 185738975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119144
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 185739035,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579119197
    },
    {
        "content": "<p>This issue title is something like \"Don't infer regions in type checking\"?</p>",
        "id": 185739145,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579119268
    },
    {
        "content": "<p>Did you see <a href=\"https://github.com/rust-lang/rust/pull/67911\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67911\">https://github.com/rust-lang/rust/pull/67911</a> ?</p>",
        "id": 185739171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119286
    },
    {
        "content": "<p>you are assigned to it, I guess</p>",
        "id": 185739176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119290
    },
    {
        "content": "<p>are my concerns correct, that this approach won't work?</p>",
        "id": 185739189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119301
    },
    {
        "content": "<p>or am I missing something :)</p>",
        "id": 185739201,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119304
    },
    {
        "content": "<p>I agree that this doesn't currently work. I haven't had time to think about how best to go about fixing it.</p>",
        "id": 185739258,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579119354
    },
    {
        "content": "<p>OK, me neither</p>",
        "id": 185739419,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579119459
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/68261\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68261\">#68261</a></p>",
        "id": 185740314,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1579119927
    }
]