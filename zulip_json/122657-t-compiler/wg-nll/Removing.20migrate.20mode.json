[
    {
        "content": "<p>So, I'm looking locally, and I think we're probably in a place that migrate mode can be removed, at least from the standpoint of error messages.<br>\nMir mode is not 100% the same as Migrate, but it's pretty close. The change I see most often is <code>error[E0308]: mismatched types</code> -&gt; <code>error: lifetime may not live long enough</code>, which is actually an improvement imo (the actual error text is quite nice). I don't personally have the bandwidth to see this through, but I would love for someone to essentially just make the PR. At worst, during review someone doesn't like the error output change and that needs to block it; at best, we accept the changes and move forward.</p>",
        "id": 261377179,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636833491
    },
    {
        "content": "<p>ohh yeah, this seems good, I've talked about this with <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 261784258,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1637156189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> is someone working on this already?</p>",
        "id": 261784305,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1637156220
    },
    {
        "content": "<p>I'm not sure tbh, I'm not aware of more work being done since aaron hill's recent-ish great work on diagnostics (but I may have missed some, easily)</p>",
        "id": 261807338,
        "sender_full_name": "lqd",
        "timestamp": 1637165764
    },
    {
        "content": "<p>Honestly, it's a pretty easy PR, I think. Just removing migrate mode and blessing tests (if there's actual followup work, that could be harder, but honestly unless there is something I missed, we can probably land)</p>",
        "id": 261813040,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637167956
    },
    {
        "content": "<p>There is still some work to be done for diagnostics IIRC, in that esteban would not like it if we regressed them; se we may have to manually compare the 200 or so tests with different blessed expectations to make sure of that</p>\n<p>it <em>was</em> my understanding that when enabling full NLLs we’d also wish to remove the leak check (while keeping some of its functionality) but I may have misunderstood Niko and maybe they meant this as one of the multiple steps to clean up what’s left of the old  regionck and so on ?</p>",
        "id": 261830463,
        "sender_full_name": "lqd",
        "timestamp": 1637175045
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/Removing.20migrate.20mode/near/261830463\">said</a>:</p>\n<blockquote>\n<p>There is still some work to be done for diagnostics IIRC, in that esteban would not like it if we regressed them; so we may have to manually compare the 200 or so tests with different blessed expectations to make sure of that</p>\n</blockquote>\n<p>Right, this is what I was saying; as I was going through them, I didn't see any that were particularly bad</p>",
        "id": 261865172,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637191412
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/Removing.20migrate.20mode/near/261830463\">said</a>:</p>\n<blockquote>\n<p>it <em>was</em> my understanding that when enabling full NLLs we’d also wish to remove the leak check (while keeping some of its functionality) but I may have misunderstood Niko and maybe they meant this as one of the multiple steps to clean up what’s left of the old  regionck and so on ?</p>\n</blockquote>\n<p>I don't think removing leak check needs to be done together with removing migrate mode. As I've recently found out (while working on the outlives lint), there's still quite a bit of code that relies on the hir regionck, at least as far as implied bounds during type checking and such</p>",
        "id": 261865321,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637191506
    },
    {
        "content": "<p>the leak check thing was about this comment from niko <a href=\"https://github.com/rust-lang/rust/issues/58781#issuecomment-933606424\">https://github.com/rust-lang/rust/issues/58781#issuecomment-933606424</a> maybe we'll need some clarification :)</p>",
        "id": 261868053,
        "sender_full_name": "lqd",
        "timestamp": 1637193431
    },
    {
        "content": "<p>I agree there probably aren't any tests that are awful now that the higher ranked subtype error ones have been fixed (at least the ones we know about, we're not sure whether there still are some in the wild, but that seems possible)</p>",
        "id": 261868500,
        "sender_full_name": "lqd",
        "timestamp": 1637193711
    },
    {
        "content": "<p>even if none are particularly bad, they could still be worse than the current ones, and even just regressing the quality would be unfortunate. there are cases where they are better and that's nice. we could weigh the pros and the cons, and the different ways to achieve the removal (and divvy up some tasks). </p>\n<p>it would sure be nice for us contributors to not have to bless the NLL tests anymore, but we oughta make sure that the cost of fixing that isn't too big for users wrt diagnostics :)</p>",
        "id": 261869421,
        "sender_full_name": "lqd",
        "timestamp": 1637194216
    },
    {
        "content": "<p>(in addition to the other blockers, like <a href=\"https://github.com/rust-lang/rust/issues/73154\">https://github.com/rust-lang/rust/issues/73154</a>)</p>",
        "id": 261869506,
        "sender_full_name": "lqd",
        "timestamp": 1637194298
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/Removing.20migrate.20mode/near/261868053\">said</a>:</p>\n<blockquote>\n<p>the leak check thing was about this comment from niko <a href=\"https://github.com/rust-lang/rust/issues/58781#issuecomment-933606424\">https://github.com/rust-lang/rust/issues/58781#issuecomment-933606424</a> maybe we'll need some clarification :) (maybe it's about the coercion order issue ?)</p>\n</blockquote>\n<p>ah I see</p>",
        "id": 261873327,
        "sender_full_name": "Jack Huey",
        "timestamp": 1637197227
    }
]