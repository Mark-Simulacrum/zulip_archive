[
    {
        "content": "<p>sorry for being late</p>",
        "id": 126940602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017550
    },
    {
        "content": "<p>no worries :)</p>",
        "id": 126940605,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527017560
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44b\" title=\"wave\">:wave:</span>  I was just about to post a message</p>",
        "id": 126940607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527017564
    },
    {
        "content": "<p>I'll brb</p>",
        "id": 126940610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527017569
    },
    {
        "content": "<p>yeah I made the mistake of doing an impromptu Rust tutorial at the Rust Paris meetup</p>",
        "id": 126940615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017582
    },
    {
        "content": "<p>So lets see, here's a link to the triage page: <a href=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be\">https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be</a></p>",
        "id": 126940678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017660
    },
    {
        "content": "<p>I saw that <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> pointed out above that the ongoing diagnostics work will have an unknown impact on Polonius. We should indeed chat about this.</p>",
        "id": 126940694,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017710
    },
    {
        "content": "<p>shall we ping <span class=\"user-mention\" data-user-id=\"*\">@everyone</span> =) — not sure who is around</p>",
        "id": 126940696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527017715
    },
    {
        "content": "<p>oh yes that seems like a good trick. :)</p>",
        "id": 126940699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017726
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44b\" title=\"wave\">:wave:</span></p>",
        "id": 126940701,
        "sender_full_name": "qmx",
        "timestamp": 1527017736
    },
    {
        "content": "<p>I also wrote a <a href=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be#:uid=513600694358508882742191&amp;h2=General-overview:\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be#:uid=513600694358508882742191&amp;h2=General-overview:\">general overview section</a> in the dropbox paper that sketched out the next steps as I saw them (I think <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> this accords with what you and I were saying this morning)</p>",
        "id": 126940751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527017775
    },
    {
        "content": "<p>yes I was just reading over that, saying \"I don't remember this from last week\"</p>",
        "id": 126940757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017790
    },
    {
        "content": "<p>and then realizing that it wasn't from last week. :)</p>",
        "id": 126940763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017804
    },
    {
        "content": "<p>:)</p>",
        "id": 126940773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527017824
    },
    {
        "content": "<p>all the stuff Niko wrote was very useful, you guys just let me know where I can help</p>",
        "id": 126940776,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527017826
    },
    {
        "content": "<p>but the plan makes a lot of sense</p>",
        "id": 126940778,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527017831
    },
    {
        "content": "<p>I guess I was a bit verbose in that section</p>",
        "id": 126940795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527017881
    },
    {
        "content": "<p>so I'll admit that I have had trouble following all of the polonius activity</p>",
        "id": 126940839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017900
    },
    {
        "content": "<blockquote>\n<p>I guess I was a bit verbose in that section</p>\n</blockquote>\n<p>in the general overview section?</p>",
        "id": 126940845,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527017915
    },
    {
        "content": "<blockquote>\n<p>so I'll admit that I have had trouble following all of the polonius activity</p>\n</blockquote>\n<p>I had more trouble than you for sure :P</p>",
        "id": 126940849,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527017926
    },
    {
        "content": "<p>can someone summarize 1. how we are estimating its performance, and 2. what the current estimate of \"best\" performance is?</p>",
        "id": 126940852,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527017940
    },
    {
        "content": "<p>that's why I think Niko's summary was very helpful</p>",
        "id": 126940864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527017958
    },
    {
        "content": "<p>you could break it down more like this:</p>\n<ul>\n<li>existing checker<ul>\n<li>top-priority diagnostic fixes (<span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is the process of uncovering this)</li>\n<li>fix <code>kill_live_borrows_at_point</code> performance (<a href=\"https://github.com/rust-lang/rust/issues/50934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50934\">https://github.com/rust-lang/rust/issues/50934</a> — maybe <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> is on this)</li>\n</ul>\n</li>\n<li>polonius<ul>\n<li>help nmatsakis with <a href=\"https://github.com/rust-lang/rust/issues/50934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50934\">#50934</a></li>\n<li>simple rustc integration</li>\n<li>further performance optimization</li>\n</ul>\n</li>\n</ul>",
        "id": 126940879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527017984
    },
    {
        "content": "<blockquote>\n<p>can someone summarize 1. how we are estimating its performance, and 2. what the current estimate of \"best\" performance is?</p>\n</blockquote>\n<p>we have been estimating performance by measuring on the clap data set</p>",
        "id": 126940926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018005
    },
    {
        "content": "<p>at present, the \"best\" performance is about 800ms</p>",
        "id": 126940936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018016
    },
    {
        "content": "<p>versus a starting point of 160s :)</p>",
        "id": 126940941,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018024
    },
    {
        "content": "<p>okay, I wasn;'t sure if we had incorporated other data sets</p>",
        "id": 126940946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018032
    },
    {
        "content": "<p>that is using <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>'s \"location insensitive\" analysis as a pre-filter</p>",
        "id": 126940950,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018039
    },
    {
        "content": "<p>in the case of clap, it's precise enough</p>",
        "id": 126940951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018043
    },
    {
        "content": "<p>if we don't use that, it's about 5s-7s right now</p>",
        "id": 126940956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018051
    },
    {
        "content": "<p>but..there is no reason not to use the pre-filter :)</p>",
        "id": 126940967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018078
    },
    {
        "content": "<p>so basically the \"raw perf\" is solved at this point</p>",
        "id": 126940969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018084
    },
    {
        "content": "<p>well</p>",
        "id": 126940970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018084
    },
    {
        "content": "<p>though we have some ideas for further improvements</p>",
        "id": 126940974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018088
    },
    {
        "content": "<p>I certainly agree there's no reason not to use the pre-filter in the short term</p>",
        "id": 126940978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018108
    },
    {
        "content": "<p>imo or long term</p>",
        "id": 126940981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018116
    },
    {
        "content": "<p>because the vast majority of code in the wild will be written to satisfy the AST borrowck</p>",
        "id": 126940984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018121
    },
    {
        "content": "<p>note also that the pre-filter can help make the more precise analysis more efficient</p>",
        "id": 126941039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018158
    },
    {
        "content": "<p>because we can focus the analysis only on those loans that <em>may</em> cause errors</p>",
        "id": 126941042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018166
    },
    {
        "content": "<p>(though we've not tried that yet)</p>",
        "id": 126941049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018177
    },
    {
        "content": "<p>ah okay I didn't know it could be fed into the next analysis</p>",
        "id": 126941053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018183
    },
    {
        "content": "<blockquote>\n<p>because the vast majority of code in the wild will be written to satisfy the AST borrowck</p>\n</blockquote>\n<p>and also I guess because most functions doesn't need the more precise analysis</p>",
        "id": 126941064,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527018199
    },
    {
        "content": "<p>that makes the calculation of \"when it stops paying off\" more difficult. :)</p>",
        "id": 126941065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018207
    },
    {
        "content": "<p>anyway — as I said — I think at this point perf is not the \"bottleneck\"</p>",
        "id": 126941074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018237
    },
    {
        "content": "<p>okay so that sounds good</p>",
        "id": 126941075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018238
    },
    {
        "content": "<p>we can always get better...</p>",
        "id": 126941117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018244
    },
    {
        "content": "<p>So my next question</p>",
        "id": 126941131,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018278
    },
    {
        "content": "<p>My understanding is that we should be able to just plug in polonius and keep the existing mir-borrowck as is</p>",
        "id": 126941160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018325
    },
    {
        "content": "<p>(for the most part)</p>",
        "id": 126941165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018331
    },
    {
        "content": "<p>But I thought I saw some rumblings from niko that he might like for polonius to actually take on more of that duty, right?</p>",
        "id": 126941186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018360
    },
    {
        "content": "<p>or have I misunderstood those musings?</p>",
        "id": 126941235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018382
    },
    {
        "content": "<p>(or is it more that if that happens, it would be far future work?)</p>",
        "id": 126941247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018404
    },
    {
        "content": "<p>I think we could integrate roughly as is</p>",
        "id": 126941262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018423
    },
    {
        "content": "<p>The reason I ask this is, is that it impacts how we approach fixing diagnostics</p>",
        "id": 126941265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018425
    },
    {
        "content": "<p>I'm not exactly sure what I said before, but I think it's like this:</p>",
        "id": 126941276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018439
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> already has a PR to emit the <code>Invalidated</code> facts (not yet landed, though it's r+)</p>",
        "id": 126941291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018454
    },
    {
        "content": "<p>this is somewhat refactored so that there is not <em>gross</em> code duplication</p>",
        "id": 126941299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018466
    },
    {
        "content": "<p>right now, if we integrate polonius in the simplest way, we'll wind up being less efficient than we might</p>",
        "id": 126941331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018482
    },
    {
        "content": "<p>because after polonius runs we will re-walk the MIR and look for violations</p>",
        "id": 126941351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018497
    },
    {
        "content": "<p>but polonius has already returned to us the full set of errors</p>",
        "id": 126941353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018504
    },
    {
        "content": "<p>in other words, the current code would be doing something like:</p>\n<div class=\"codehilite\"><pre><span></span>for each point P {\n  check if there is an error at P\n}\n</pre></div>\n\n\n<p>instead of:</p>\n<div class=\"codehilite\"><pre><span></span>for each error E {\n  report the error E\n}\n</pre></div>",
        "id": 126941363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018528
    },
    {
        "content": "<p><em>however,</em> changing that is non-trivial and I think something we would only do gradually</p>",
        "id": 126941373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018539
    },
    {
        "content": "<p>for one thing, polonius doesn't detect all errors right now</p>",
        "id": 126941381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018546
    },
    {
        "content": "<p>but its not currently the \"full\" set of errors, because polonius does not yet encode the other dataflows</p>",
        "id": 126941394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018554
    },
    {
        "content": "<p>oh you just said this</p>",
        "id": 126941397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018558
    },
    {
        "content": "<p>yeah, exactly</p>",
        "id": 126941402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018571
    },
    {
        "content": "<p>okay it is good to confirm that understanding</p>",
        "id": 126941408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018583
    },
    {
        "content": "<p>I basically just want to make sure we don't invest a bunch of effort perfecting the diagnostics for mir-borrowck</p>",
        "id": 126941478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018647
    },
    {
        "content": "<p>yeah, I can see that</p>",
        "id": 126941491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018668
    },
    {
        "content": "<p>and then discover that we should have instead been spending that effort figuring out how to encode those same diagnostics in a fashion that works via polonius</p>",
        "id": 126941493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018671
    },
    {
        "content": "<p>so... I think that the vast majority of that work is probably reusable? the red flags would be if we are inspecting the \"values\" of regions and using that</p>",
        "id": 126941505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018689
    },
    {
        "content": "<p>i.e., if we are using the <code>regioncx</code> basically</p>",
        "id": 126941510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018700
    },
    {
        "content": "<p>since that won't exist once polonius integration is complete</p>",
        "id": 126941513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018707
    },
    {
        "content": "<blockquote>\n<p>but its not currently the \"full\" set of errors, because polonius does not yet encode the other dataflows</p>\n</blockquote>\n<p>sorry, hard to follow to a non native speaker but ... what does other dataflows here means?</p>",
        "id": 126941515,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527018713
    },
    {
        "content": "<p>example: computing which paths have been initialized or moved </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"o\">!</span><span class=\"p\">[];</span><span class=\"w\"></span>\n<span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// &lt;-- error, but polonius doesn&#39;t detect it</span>\n</pre></div>",
        "id": 126941562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018743
    },
    {
        "content": "<p>right now we compute a variety of things (about 5?), only some of which polonius encodes</p>",
        "id": 126941569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018766
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126941584,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527018789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so wait: Are you saying that we should actively try to avoid using <code>regioncx</code> when implementing diagnostics</p>",
        "id": 126941586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018797
    },
    {
        "content": "<p>or just that we should take note of it when it happens</p>",
        "id": 126941589,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018803
    },
    {
        "content": "<p>the latter I think</p>",
        "id": 126941590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018808
    },
    {
        "content": "<p>those are things we might have to redo</p>",
        "id": 126941591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018816
    },
    {
        "content": "<p>okay, good</p>",
        "id": 126941594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018820
    },
    {
        "content": "<p>I'm not sure when/if we would want to do that</p>",
        "id": 126941596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018823
    },
    {
        "content": "<p>I still feel a bit unsettled :)</p>",
        "id": 126941680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018917
    },
    {
        "content": "<p>Okay.</p>",
        "id": 126941681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018919
    },
    {
        "content": "<p>The next thing I'd like to discuss is the diagnostics list, as it currently stands</p>",
        "id": 126941690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018935
    },
    {
        "content": "<p>its not finished</p>",
        "id": 126941691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018937
    },
    {
        "content": "<p>(that is, about how we hope/plan to distribute work)</p>",
        "id": 126941692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527018938
    },
    {
        "content": "<p>but there's things we can point out</p>",
        "id": 126941696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018941
    },
    {
        "content": "<p>this is the list: <a href=\"https://paper.dropbox.com/doc/KzroSvNgQ7lip3WQyiLTa\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/KzroSvNgQ7lip3WQyiLTa\">https://paper.dropbox.com/doc/KzroSvNgQ7lip3WQyiLTa</a></p>",
        "id": 126941706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527018955
    },
    {
        "content": "<p>So its obvious that some of these tests are likely all going to be resolved at once, once the root cause is fixed</p>",
        "id": 126941769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019003
    },
    {
        "content": "<p>we've already got a bunch of MY EYES on there...</p>",
        "id": 126941777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019015
    },
    {
        "content": "<p>an example of this are the cases which say \"we used to report a nice error about closures, we now report an indecipherable error about free regions. We need to detect free regions associated with closures.\"</p>",
        "id": 126941785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019023
    },
    {
        "content": "<p>Which I suspect already even has a corresponding issue on the rust repo that  I just don't recall offhand</p>",
        "id": 126941804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019046
    },
    {
        "content": "<p>there's a ton of those</p>",
        "id": 126941807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019049
    },
    {
        "content": "<p>indeed</p>",
        "id": 126941810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019055
    },
    {
        "content": "<p>Something I realized today</p>",
        "id": 126941812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019059
    },
    {
        "content": "<p>is that one might erroneously think that the cases with multiple such tests</p>",
        "id": 126941819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019074
    },
    {
        "content": "<p>should take highest priority</p>",
        "id": 126941820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019078
    },
    {
        "content": "<p>due to some idea of \"user impact\"</p>",
        "id": 126941860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019084
    },
    {
        "content": "<p>but I don't think our set of tests</p>",
        "id": 126941865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019088
    },
    {
        "content": "<p>necessarily correspond, in terms of the distribution of the forms they use, to the cases that users encounter.</p>",
        "id": 126941889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019119
    },
    {
        "content": "<p>does that make sense? I'm just trying to warn</p>",
        "id": 126941901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019145
    },
    {
        "content": "<p>makes sense</p>",
        "id": 126941906,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019148
    },
    {
        "content": "<p>i.e., we might have a lot of tests around some corner case people rarely hit</p>",
        "id": 126941908,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019155
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126941910,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527019156
    },
    {
        "content": "<p>that we should not necessarily prioritize based on the number of tests</p>",
        "id": 126941911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019157
    },
    {
        "content": "<p>yes exactly</p>",
        "id": 126941916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019164
    },
    {
        "content": "<p>(I independently wondered if there would be some way to actually attach a bias to each test to make it correspond to the number of users that hit that construct)</p>",
        "id": 126941928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019188
    },
    {
        "content": "<p>(but that seems like a research question)</p>",
        "id": 126941930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019196
    },
    {
        "content": "<p>Anyway</p>",
        "id": 126941932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019200
    },
    {
        "content": "<p>having said all that</p>",
        "id": 126941992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019222
    },
    {
        "content": "<p>I do think our users care about closures</p>",
        "id": 126941999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019228
    },
    {
        "content": "<p>and closures with free variables that have references</p>",
        "id": 126942004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019245
    },
    {
        "content": "<p>or rather, free regions in general  I guess</p>",
        "id": 126942009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019253
    },
    {
        "content": "<p>yes</p>",
        "id": 126942016,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527019264
    },
    {
        "content": "<p>And thus, these cases <strong>should</strong> get a pretty high priority</p>",
        "id": 126942028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019279
    },
    {
        "content": "<p>that makes sense, yes</p>",
        "id": 126942036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019298
    },
    {
        "content": "<p>seems like we should file discrete rustc issues for said cases (or find them?) and try to find someone to hack on them?</p>",
        "id": 126942081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Q: is mapping a free region back to its associated closure something that would be done via the regioncx, either today or in some future version of it?</p>",
        "id": 126942084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019331
    },
    {
        "content": "<p>let me see if I can find if an issue already exists</p>",
        "id": 126942092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019346
    },
    {
        "content": "<p>one thing I am wondering about is whether it's worth trying to e.g. tweet about it to drum up more folks, or if it's better to focus on those of us here who have more experience</p>",
        "id": 126942093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019346
    },
    {
        "content": "<p>and link it from the paper doc</p>",
        "id": 126942096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019349
    },
    {
        "content": "<p>another question: how much fuel to put into polonius vs this?</p>",
        "id": 126942108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019371
    },
    {
        "content": "<p>(I've said I do not want the paper doc to end up being the canonical database for these issues)</p>",
        "id": 126942110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019373
    },
    {
        "content": "<p>some part of me is inclined to say: we should have somebody working on polonius integration, and the rest of us on diagnostics</p>",
        "id": 126942118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019382
    },
    {
        "content": "<p>(but for now, its <em>my</em> canonical database...)</p>",
        "id": 126942119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019383
    },
    {
        "content": "<p>I got the impression that a lot of the volunteers at this meeting are super pumped about polonius</p>",
        "id": 126942135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019414
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Q: is mapping a free region back to its associated closure something that would be done via the regioncx, either today or in some future version of it?</p>\n</blockquote>\n<p>I have to look at the test, but it seems likely it will touch the <code>regioncx</code></p>",
        "id": 126942137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019418
    },
    {
        "content": "<p>I don't want to squander that enthusiasm</p>",
        "id": 126942143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019428
    },
    {
        "content": "<p>I guess people can elect for themselves :)</p>",
        "id": 126942196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019459
    },
    {
        "content": "<p>Here's probably the relevant issue: <a href=\"https://github.com/rust-lang/rust/issues/49824\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49824\">https://github.com/rust-lang/rust/issues/49824</a></p>",
        "id": 126942197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019462
    },
    {
        "content": "<p>for closures</p>",
        "id": 126942199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019466
    },
    {
        "content": "<p>and free regions</p>",
        "id": 126942200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019470
    },
    {
        "content": "<blockquote>\n<p>one thing I am wondering about is whether it's worth trying to e.g. tweet about it to drum up more folks, or if it's better to focus on those of us here who have more experience</p>\n</blockquote>\n<p>this is a thing I guess you guys need to decide, and I don't feel that knowledgeable yet to help someone, but if you feel that I can help somebody or work with somebody that is starting I'm open</p>",
        "id": 126942206,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527019487
    },
    {
        "content": "<p>but maybe that particular issue is about a more specific problem...</p>",
        "id": 126942208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019492
    },
    {
        "content": "<p>yeah, I'm not sure,  I remember vaguely talking about it with <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 126942218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019506
    },
    {
        "content": "<p>re: twitter vs not, I think it probably depends a lot on the issue</p>",
        "id": 126942223,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019520
    },
    {
        "content": "<p>e.g. that closure stuff... is tricky and involves a lot of things</p>",
        "id": 126942227,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019529
    },
    {
        "content": "<p>but maybe some of the \"wrong span\" cases, not so much?</p>",
        "id": 126942234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019541
    },
    {
        "content": "<p>these is also this issue: <a href=\"https://github.com/rust-lang/rust/issues/49397\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49397\">https://github.com/rust-lang/rust/issues/49397</a></p>",
        "id": 126942235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019545
    },
    {
        "content": "<p>hmm</p>",
        "id": 126942237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019548
    },
    {
        "content": "<p>I feel like that latter issue (49397) is more general</p>",
        "id": 126942251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019562
    },
    {
        "content": "<p>yes, and thus probably more appropriate, right?</p>",
        "id": 126942282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019574
    },
    {
        "content": "<p>well, I'd like to have an issue around that <em>specific</em> set of closure error messages</p>",
        "id": 126942286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019585
    },
    {
        "content": "<p>maybe I'll make its description link to all the relevant .nll.stderr files</p>",
        "id": 126942288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019587
    },
    {
        "content": "<p>oh interesting</p>",
        "id": 126942292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019593
    },
    {
        "content": "<p>but there are other \"free region\" sort of errors that we probably need to handle better</p>",
        "id": 126942295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019595
    },
    {
        "content": "<p>that don't fall into that set</p>",
        "id": 126942298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019597
    },
    {
        "content": "<p>okay true, free regions + closures is a more specific case, yes</p>",
        "id": 126942303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019612
    },
    {
        "content": "<p>(or did we consider it not so important that we target the closure case specifically?)</p>",
        "id": 126942305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019614
    },
    {
        "content": "<p>I kinda think it is, thinking on it now</p>",
        "id": 126942311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019625
    },
    {
        "content": "<p>particularly since free region errors are hard enough</p>",
        "id": 126942320,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019635
    },
    {
        "content": "<p>we were downgrading instances of \"closure may outlive current function\"</p>",
        "id": 126942388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019704
    },
    {
        "content": "<p>(that is, we should seize \"special case\" opportunities  where we can say something clear)</p>",
        "id": 126942389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019704
    },
    {
        "content": "<p>but the \"free regions associated with closures\" are all rated with MY EYES</p>",
        "id": 126942399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019727
    },
    {
        "content": "<p>okay we're 9 minutes over my preferred 30 min time limit</p>",
        "id": 126942429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019791
    },
    {
        "content": "<p>lets see if we can try to come to a conclusion here</p>",
        "id": 126942433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019799
    },
    {
        "content": "<p>I agree we need to figure out how to prioritize work between polonius and diagnostics</p>",
        "id": 126942486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019819
    },
    {
        "content": "<p>Maybe we can ask people to state, on the Triage Paper, which topic they would like to focus on in the near term</p>",
        "id": 126942491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019845
    },
    {
        "content": "<p>if too few say \"diagnostics\"</p>",
        "id": 126942497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019858
    },
    {
        "content": "<p>then we tweet about it?</p>",
        "id": 126942502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019864
    },
    {
        "content": "<p>(or we could just tweet about it regardless)</p>",
        "id": 126942508,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019872
    },
    {
        "content": "<p>yeah I think we should open up some issues and see if we can get people interested</p>",
        "id": 126942509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019884
    },
    {
        "content": "<p>its a question of whether we want to invest time in onboarding if we can avoid it</p>",
        "id": 126942510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019885
    },
    {
        "content": "<p>and twitter etc remains an option</p>",
        "id": 126942512,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019890
    },
    {
        "content": "<p>But then again</p>",
        "id": 126942513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019892
    },
    {
        "content": "<p>impl Days Paris is coming up</p>",
        "id": 126942517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019902
    },
    {
        "content": "<p>so I might try to strong-arm some people there</p>",
        "id": 126942520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019917
    },
    {
        "content": "<p>(as in, \"I'll already be investing time in onboarding, so I shouldn't fear doing it.\")</p>",
        "id": 126942570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019946
    },
    {
        "content": "<p>ok, seems like top priority then is to identify a discrete set of diagnostic issues</p>",
        "id": 126942577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019964
    },
    {
        "content": "<p>which I guess <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> you will be doing ?</p>",
        "id": 126942581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527019971
    },
    {
        "content": "<p>yeah I'll keep going through the list</p>",
        "id": 126942583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019979
    },
    {
        "content": "<p>I can devote serious time to that tomorrow</p>",
        "id": 126942586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527019984
    },
    {
        "content": "<p>... maybe some time tonight? Not sure. I was up late last night with going through \"weak test\" diagnostics, but i think that was as big mistake in the end.</p>",
        "id": 126942594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020007
    },
    {
        "content": "<p>:)</p>",
        "id": 126942599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020024
    },
    {
        "content": "<p>Any other specific high priority task to tackle this week?</p>",
        "id": 126942681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020152
    },
    {
        "content": "<p>besides the perf thing (which I think <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> is tackling)</p>",
        "id": 126942728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020184
    },
    {
        "content": "<p>I still think it'd be good to get polonius integration up and going</p>",
        "id": 126942735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020200
    },
    {
        "content": "<p>oh yes</p>",
        "id": 126942737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020201
    },
    {
        "content": "<p>so, regarding polonius integration</p>",
        "id": 126942744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020216
    },
    {
        "content": "<p>well</p>",
        "id": 126942746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020220
    },
    {
        "content": "<p>I guess I basically agree that a library is the way to go</p>",
        "id": 126942755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020231
    },
    {
        "content": "<p>seems like it's gonna be easier, though you're not wrong about the cycle time to test changes</p>",
        "id": 126942760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020244
    },
    {
        "content": "<p>I was briefly enamored with the hypothetically improved cycle time</p>",
        "id": 126942763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020247
    },
    {
        "content": "<p>but the reality is that there's a real serious cost to implementing that</p>",
        "id": 126942767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020261
    },
    {
        "content": "<p>and its work that ends up being thrown away in the end</p>",
        "id": 126942773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020271
    },
    {
        "content": "<p>yeah</p>",
        "id": 126942860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020367
    },
    {
        "content": "<p>anyway I would think that <em>somebody</em>  should pursue that</p>",
        "id": 126942870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020389
    },
    {
        "content": "<p>might be a natural extension to <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span>'s existing PR, not sure if they are around</p>",
        "id": 126942887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020402
    },
    {
        "content": "<p>but doens't have to be them</p>",
        "id": 126942949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020414
    },
    {
        "content": "<p>ok well we'll figure it out</p>",
        "id": 126943037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020532
    },
    {
        "content": "<p>man, i thought this meeting would all be about <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span></p>",
        "id": 126943057,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527020589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> still looking for someone to do the <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span> integration :)</p>",
        "id": 126943150,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020724
    },
    {
        "content": "<p>(you say my notes?)</p>",
        "id": 126943164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020756
    },
    {
        "content": "<p>Feel free to discuss <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span>.  I have to close down this meetup and then go home, so I won't be able to participate live, but I'll try to read the transcript.</p>",
        "id": 126943212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527020779
    },
    {
        "content": "<p>i was in fact reading frank's blog post about the treefrog leapjoin (or was it leapfrog triejoin?) function</p>",
        "id": 126943239,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527020829
    },
    {
        "content": "<p>good read :)</p>",
        "id": 126943255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what work needs to be done there though? I thought we pretty much had it covered with the port from timely to <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span> for all strategies</p>",
        "id": 126943256,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527020876
    },
    {
        "content": "<p>well rustc is not using polonius yet</p>",
        "id": 126943311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020910
    },
    {
        "content": "<p>er, I guess I meant \"integrating polonius into rustc\"</p>",
        "id": 126943316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020923
    },
    {
        "content": "<p>(leapfrog triejoin is logicblox's, treefrog leapjoin is another similar worst case optimal join algorithm from the Ngo paper, named in classic mcsherry style :)</p>",
        "id": 126943317,
        "sender_full_name": "lqd",
        "timestamp": 1527020926
    },
    {
        "content": "<p>not really <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span> integration per se</p>",
        "id": 126943319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527020929
    },
    {
        "content": "<p>ah, yes, i was indeed going over those notes you left on the triage docs</p>",
        "id": 126943335,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527020971
    },
    {
        "content": "<p>it is also a dilemma that we face if we are to fully integrate polonius into rustc, because it would seem like the work for improving diagnostics would be for naught</p>",
        "id": 126943422,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527021030
    },
    {
        "content": "<p>I dont' think so</p>",
        "id": 126943448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527021072
    },
    {
        "content": "<p>but in any case I want to do the rustc-integration behind a switch of course</p>",
        "id": 126943455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527021082
    },
    {
        "content": "<p>e.g., -Zpolonius</p>",
        "id": 126943456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527021085
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> it would depend on how deep the integration goes</p>",
        "id": 126943461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527021095
    },
    {
        "content": "<p>(as discussed earlier in this topic, i think?)</p>",
        "id": 126943474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527021112
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> start from here: <a href=\"#narrow/stream/122657-wg-nll/subject/weekly.20meeting.20May.2022/near/126941478\" title=\"#narrow/stream/122657-wg-nll/subject/weekly.20meeting.20May.2022/near/126941478\">https://rust-lang.zulipchat.com/#narrow/stream/122657-wg-nll/subject/weekly.20meeting.20May.2022/near/126941478</a></p>",
        "id": 126943538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527021176
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> btw just saw <a href=\"https://github.com/rust-lang-nursery/polonius/pull/42/\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/42/\">your PR 42</a>, nice</p>",
        "id": 126943610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527021273
    },
    {
        "content": "<p>the link doesn't work as intended, but i got the idea</p>",
        "id": 126943611,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527021274
    },
    {
        "content": "<p>I wish I was able to better test that it would actually report errors :) (or even at all)</p>",
        "id": 126943636,
        "sender_full_name": "lqd",
        "timestamp": 1527021332
    },
    {
        "content": "<p>did we ever ended up with graphviz visualizations for facts?</p>",
        "id": 126950032,
        "sender_full_name": "qmx",
        "timestamp": 1527029468
    },
    {
        "content": "<blockquote>\n<p>might be a natural extension to <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span>'s existing PR, not sure if they are around</p>\n</blockquote>\n<p>I'm open to working on Polonius integration into <code>rustc</code>. I can't participate live in these meetings as they're right in the middle of my work day, but I still have time to work on <code>rustc</code> stuff in the evenings.</p>",
        "id": 126955676,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527041033
    },
    {
        "content": "<p>Also, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> my refactor didn't end up in <a href=\"https://github.com/rust-lang/rust/pull/50798\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50798\">https://github.com/rust-lang/rust/pull/50798</a> since I thought that had already landed when I made those changes, and did some git wizardry to convince Github not to include the refactor in the PR when I realized it hadn't and that it would invalidate your r+. I can push it for real though if you want to land it in the same merge however.</p>",
        "id": 126962043,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527055507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> by \"my refactor\" are you referring to <a href=\"https://github.com/bobtwinkles/rust/commit/e62fa27071f296cca9b35f50e2d1bb3459631fd7\" target=\"_blank\" title=\"https://github.com/bobtwinkles/rust/commit/e62fa27071f296cca9b35f50e2d1bb3459631fd7\">this commit</a>? if so, I think it is being <a href=\"https://github.com/rust-lang/rust/pull/50798#issuecomment-391245099\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50798#issuecomment-391245099\">actively tested by bors right now</a>....</p>",
        "id": 126967717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527066592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> </p>\n<blockquote>\n<p>(I independently wondered if there would be some way to actually attach a bias to each test to make it correspond to the number of users that hit that construct)<br>\n(but that seems like a research question)</p>\n</blockquote>\n<p>JFYI: As far as I understand, the main problem with computing the number of users that hit a specific error is that programmers rarely publish the code that does not compile. One way to obtain such information would be to write an IDE plugin that would log how a programmer writes a program.  However, if we had such log, we could not only compute what problems are the most common but also train a machine learning model capable of proposing fixes for common errors.</p>",
        "id": 126977959,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527084366
    },
    {
        "content": "<p>There is ongoing discussion on trying to add Telemetry to the rust compiler. I imagine such a log would be a useful component of such telemetry, <em>if</em> we can actually get permission to gather such data in the first place...</p>",
        "id": 126978082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527084585
    },
    {
        "content": "<p>I was referring to that commit, and I don't think Bors tested it. That merge doesn't add the <code>path_utils</code> file that I added in the refactor commit</p>",
        "id": 126979591,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527086925
    },
    {
        "content": "<p>sorry I've made a mess haven't I</p>",
        "id": 126979601,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527086942
    },
    {
        "content": "<p>Is there a tracking issue for Telemetry, or something that could give me an overview of the current situation?</p>\n<p>Yes, there is a huge privacy concern here. We would need at least to get an explicit agreement from everyone giving away their data.</p>",
        "id": 126979860,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527087272
    },
    {
        "content": "<p>Hello GDPR =)</p>",
        "id": 126979964,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527087395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <a href=\"https://github.com/rust-lang/rust/pull/50998\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50998\">https://github.com/rust-lang/rust/pull/50998</a><br>\nSorry, I thought it would be easier to do this in a separate PR. Didn't realize how deep Bor's queue was at the time...</p>",
        "id": 126980096,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527087597
    },
    {
        "content": "<p>I've considered adding telemetry to the playground, since the code is already \"going somewhere else\"</p>",
        "id": 126980174,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527087674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> oh, actually, you are correct, I was misreading Github.</p>",
        "id": 126980268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527087800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> well, that commit looked good to me :)</p>",
        "id": 126980275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527087811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> telemetry hasn't progressed to that point yet, and the need for us to figure out stuff like that is part of why :) it's mostly a 'thought' at this juncture</p>",
        "id": 126980335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527087850
    },
    {
        "content": "<p>I see. The privacy-related questions are definitely not easy to answer.</p>",
        "id": 127019326,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527151451
    }
]