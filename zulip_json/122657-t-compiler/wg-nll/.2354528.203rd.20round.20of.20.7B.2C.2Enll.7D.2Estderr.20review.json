[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>, out of curiosity, did we not <em>create</em> new issues when warranted on <a href=\"https://github.com/rust-lang/rust/issues/52663\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52663\">#52663</a> ?</p>",
        "id": 135391474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538991945
    },
    {
        "content": "<p>/me goes to do a quick skim</p>",
        "id": 135391476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538991954
    },
    {
        "content": "<p>We did for a handful of them.</p>",
        "id": 135391522,
        "sender_full_name": "davidtwco",
        "timestamp": 1538991979
    },
    {
        "content": "<p>I think my main problem is that I wanted some way to keep track of partial progress through the list of deviations</p>",
        "id": 135391540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992007
    },
    {
        "content": "<p>I started working through the list again last week and there were a handful that were already fixed or the issues had been closed but the table not updated.</p>",
        "id": 135391543,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992009
    },
    {
        "content": "<p>which was sort of handled by the \"Need Further Review\" bucket on <a href=\"https://github.com/rust-lang/rust/issues/52663\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52663\">#52663</a></p>",
        "id": 135391550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992029
    },
    {
        "content": "<p>yeah I see; keeping the table up to date is indeed a problem</p>",
        "id": 135391555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992047
    },
    {
        "content": "<p>It might make sense to do that in a comment on the “do another review” issue.</p>",
        "id": 135391558,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992052
    },
    {
        "content": "<p>okay that sounds good to me: to try to keep the gross summary of progress and work items on <a href=\"https://github.com/rust-lang/rust/issues/54528\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54528\">#54528</a> itself</p>",
        "id": 135391601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992083
    },
    {
        "content": "<p>but to try to avoid keeping too much detail about the specific deviations that need addressing</p>",
        "id": 135391616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992108
    },
    {
        "content": "<p>so what's the deal with this project thing...</p>",
        "id": 135391622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992122
    },
    {
        "content": "<p>Having issues for the buckets means that they can be closed by PRs that resolve them.</p>",
        "id": 135391626,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992139
    },
    {
        "content": "<p>where do the categories come from .. . oh I see, each project gets to make its own set of \"Cards\" ?</p>",
        "id": 135391635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992160
    },
    {
        "content": "<p>Here’s an example of one: <a href=\"https://github.com/rust-lang/rust/projects/8\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/projects/8\">https://github.com/rust-lang/rust/projects/8</a></p>",
        "id": 135391693,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992213
    },
    {
        "content": "<p>I just think it would be a nice way to view it.</p>",
        "id": 135391697,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992222
    },
    {
        "content": "<p>yeah I'm skimming over <a href=\"https://github.com/rust-lang/rust/projects/9\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/projects/9\">https://github.com/rust-lang/rust/projects/9</a></p>",
        "id": 135391699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992233
    },
    {
        "content": "<p>Though it’s not that important, GitHub issues are more than fine.</p>",
        "id": 135391700,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992237
    },
    {
        "content": "<p>(since I'm more immediately familiar with a few of the issues there)</p>",
        "id": 135391705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992246
    },
    {
        "content": "<p>I’m not sure <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is a fan of projects.</p>",
        "id": 135391707,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992250
    },
    {
        "content": "<p>the other question is</p>",
        "id": 135391721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992284
    },
    {
        "content": "<p>What PR's are currently up that I'd like to land before I start this round of review</p>",
        "id": 135391726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992302
    },
    {
        "content": "<p>I know you have some</p>",
        "id": 135391730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992308
    },
    {
        "content": "<p>which maybe you can just answer the Q here instead of me putting it up a third time: <em>Is</em> there a reason you've been restricting your filters to only work on Projections whose <code>.base</code> is a <code>Local</code> ?</p>",
        "id": 135391798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992349
    },
    {
        "content": "<p>If you look for PRs that I’m the author of then there’s a handful.</p>",
        "id": 135391814,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992382
    },
    {
        "content": "<p>Not particularly, that’s just how I’ve been doing it. Normally I’ll need a local to find a type or something.</p>",
        "id": 135391832,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992406
    },
    {
        "content": "<p>(for example, are the resulting diagnostics misleading or just worse if you try to generalize to a <code>.base</code> that is an arbitrary <code>Place</code> ?)</p>",
        "id": 135391833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992407
    },
    {
        "content": "<p>You can ask a <code>Place</code> for its type</p>",
        "id": 135391836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992416
    },
    {
        "content": "<p>its not the most obvious thing, but the <code>.place_ty</code> method takes a <code>tcx</code> and gives back a <code>PlaceTy</code> enum that can then be turned into a <code>Ty</code></p>",
        "id": 135391878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992453
    },
    {
        "content": "<p>If you’ve mentioned that before and I’ve not been making sure I don’t do that in other PRs then my bad.</p>",
        "id": 135391892,
        "sender_full_name": "davidtwco",
        "timestamp": 1538992463
    },
    {
        "content": "<p>(the reason we have the <code>PlaceTy</code> enum to be able to keep track of more specific info when the <code>Place</code> is a projection into an Enum variant.)</p>",
        "id": 135391895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538992481
    },
    {
        "content": "<p>Anyway, <a href=\"https://github.com/rust-lang/rust/issues/54831\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54831\">#54831</a>,  <a href=\"https://github.com/rust-lang/rust/issues/54825\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54825\">#54825</a>, <a href=\"https://github.com/rust-lang/rust/issues/54802\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54802\">#54802</a> and <a href=\"https://github.com/rust-lang/rust/issues/54848\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54848\">#54848</a> are the current diagnostic PRs I've got open and I'm still working on one of the buckets in the previous review.</p>",
        "id": 135392715,
        "sender_full_name": "davidtwco",
        "timestamp": 1538993641
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> fixed both of those PRs.</p>",
        "id": 135393389,
        "sender_full_name": "davidtwco",
        "timestamp": 1538994442
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  that's great, thanks for following up</p>",
        "id": 135396942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1538999103
    },
    {
        "content": "<p>I'm barely scratching the surface of this, and yet I'm already considering whether it would save time overall for me to first pause and look into resolving some of the instances of \"NLL migration mode sometimes prints more diagnostics than either AST-borrowck or NLL\" <a href=\"https://github.com/rust-lang/rust/issues/53004\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53004\">#53004</a> that I am encountering...</p>",
        "id": 136405936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540384796
    },
    {
        "content": "<p>(and <em>then</em> I realized/remembered that PR <a href=\"https://github.com/rust-lang/rust/issues/55221\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55221\">#55221</a> should address a number of instances of <a href=\"https://github.com/rust-lang/rust/issues/53004\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53004\">#53004</a>)</p>",
        "id": 136406927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540385991
    },
    {
        "content": "<p>Hey is there anyone looking for something to do?</p>",
        "id": 136700558,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813705
    },
    {
        "content": "<p>I ask because I am building up a queue of \"investigate further\" issues during my sweep of the \"compare .stderr to .nll.stderr output files\"</p>",
        "id": 136700573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813736
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/projects/10#column-3667365\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/projects/10#column-3667365\">link to \"investigate further\"</a> column</p>",
        "id": 136700586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813762
    },
    {
        "content": "<p>I'll have some time this evening.</p>",
        "id": 136700603,
        "sender_full_name": "davidtwco",
        "timestamp": 1540813782
    },
    {
        "content": "<p>(there's also one potentially quite serious issue that's in a different column but I think I might look at that one myself later today...)</p>",
        "id": 136700613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813798
    },
    {
        "content": "<p>It looks like there aren't many issues coming out of the review though, which is good - a handful of potential improvements and some redundancies.</p>",
        "id": 136700692,
        "sender_full_name": "davidtwco",
        "timestamp": 1540813842
    },
    {
        "content": "<p>(I guess it's still early days, didn't see the \"yet to be looked at\" column)</p>",
        "id": 136700729,
        "sender_full_name": "davidtwco",
        "timestamp": 1540813921
    },
    {
        "content": "<p>yes. I'm not surprised by this outcome, but it nonetheless makes me happy</p>",
        "id": 136700731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813922
    },
    {
        "content": "<p>I am <em>very</em> glad we switched to testing the migrate mode</p>",
        "id": 136700771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813931
    },
    {
        "content": "<p>I probably should try to keep track of how fast I am churning through the todo list</p>",
        "id": 136700788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813986
    },
    {
        "content": "<p>to figure out if its worth trying to delegate the load</p>",
        "id": 136700790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540813996
    },
    {
        "content": "<p>(i'm also very close to suggesting that we hack the <code>compare-mode=nll</code> to do some sort of \"normalization\"... ignore trivial span differences, ignore distinctions like \"use of ...\" vs \"borrow of ...\" ...)</p>",
        "id": 136702494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1540816251
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I'm thinking that it might be worth archiving the cards on the diagnostic review that are addressed - so straight away archiving the \"equivalent\" or \"improvement\" columns and then any of the \"migrate downgrade\" cards that your PR for that fixed. Would be helpful for only looking over things that need work.</p>",
        "id": 137122596,
        "sender_full_name": "davidtwco",
        "timestamp": 1541268335
    },
    {
        "content": "<p>Where does archived stuff go?</p>",
        "id": 137125489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541273569
    },
    {
        "content": "<p>I’m not sure. Presumably there’s some option to show them again.</p>",
        "id": 137127469,
        "sender_full_name": "davidtwco",
        "timestamp": 1541276868
    },
    {
        "content": "<p>lets figure out the answer to that question first. Then we can consider adopting the protocol you suggest.</p>",
        "id": 146786262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541412310
    },
    {
        "content": "<p>So, I looked into this a little. There's a option to show archived cards and restore them. Apparently a card was archived six days ago. <a href=\"/user_uploads/4715/AKePM-JZDA1H7KXAst2kqupq/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/AKePM-JZDA1H7KXAst2kqupq/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/AKePM-JZDA1H7KXAst2kqupq/pasted_image.png\"></a></div>",
        "id": 146786328,
        "sender_full_name": "davidtwco",
        "timestamp": 1541412397
    },
    {
        "content": "<p>hmm okay. I have now figured out how to access that list of Archived Cards</p>",
        "id": 146788952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541416112
    },
    {
        "content": "<p>So yes, I think it sounds good to adopt the protocol you suggest. But <em>first</em> I want to make sure that the single currently archived card actually belongs there</p>",
        "id": 146788964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541416144
    },
    {
        "content": "<p>I'm not sure how you found the process for using a project while doing the review. But being able to pick a card, click \"convert to issue\", and then have a easy issue number to refer to it and close via a PR and then just archiving that card is a nicer workflow from the \"working through the review items\" point of view compared to the issue w/ comments we had.</p>",
        "id": 146789023,
        "sender_full_name": "davidtwco",
        "timestamp": 1541416222
    },
    {
        "content": "<p>the project system is okay i suppose. I prefer text-based interactions to mouse-based ones when it comes to really repetitive stuff, so that was the main drawback I was able to identify for my own personal workflow compared to updating comments on a issue. (However, I did note that updating comments is not really workable once a comment gets too long, and that thus invalidates the claim that a text-based workflow is actually usable in practice...)</p>",
        "id": 146803040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541431917
    },
    {
        "content": "<p>I will say that its been good to actually go through the cards and archive them (and link to the relevant PR or Issue where they are now addressed), since there was at least one test that had a card that I failed to transcribe into <a href=\"https://github.com/rust-lang/rust/issues/55533\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55533\">#55533</a> when I made the test list there.</p>",
        "id": 146803138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541431988
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 146803247,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432062
    },
    {
        "content": "<p>Oops, sorry: <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I added another commit to PR <a href=\"https://github.com/rust-lang/rust/issues/55700\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55700\">#55700</a></p>",
        "id": 146803585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432343
    },
    {
        "content": "<p>I'll stop doing that now, I didn't realize you were going to get to the review so fast.</p>",
        "id": 146803597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432359
    },
    {
        "content": "<p>Feel free to keep going, I can take a look again later.</p>",
        "id": 146803671,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432412
    },
    {
        "content": "<p>Was going to wait for a Travis pass before pinging bors anyway.</p>",
        "id": 146803678,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432423
    },
    {
        "content": "<p>I suppose my biggest question about project workflow is that I currently take the approach of treating cards like lightweight entities</p>",
        "id": 146803923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432660
    },
    {
        "content": "<p>and so I often end up with several cards that are all related; i.e. they want to be handled by a single Github issue</p>",
        "id": 146803941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432680
    },
    {
        "content": "<p>I don't know whether this is a case where I am simply wrong to treat cards as lightweight, or if I should hope/expect Github to make further enhancements that would allow me to more easily group sets of cards and then assign all of them to a single issue</p>",
        "id": 146803993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432734
    },
    {
        "content": "<p>In those cases, I'd edit them to reference the same issue; in other cases where a card corresponds to a single unit of work (like the unions one I looked at over the weekend), then I'd can convert to issue.</p>",
        "id": 146804002,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432744
    },
    {
        "content": "<p>It would be nice to have more grouping/bulk selection. Or even a way of adding some sort of checklist items to a single card.</p>",
        "id": 146804070,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432768
    },
    {
        "content": "<p>Yes some sort of checkmark based selection of sets of cards could be useful for mass modifications</p>",
        "id": 146804123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432815
    },
    {
        "content": "<p>so far I've been getting by with using search for filters</p>",
        "id": 146804142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432834
    },
    {
        "content": "<p>I'm going to move the empty columns to the end.</p>",
        "id": 146804151,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432844
    },
    {
        "content": "<p>I think in most cases, GitHub probably expected that projects would have issues as cards rather than lots of notes.</p>",
        "id": 146804242,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432911
    },
    {
        "content": "<p>I'll go a step further and try to put the higher priority columns at the beginning</p>",
        "id": 146804248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541432917
    },
    {
        "content": "<p>That's not really viable in our case with all the tests, but I can see how it would probably work a little nicer.</p>",
        "id": 146804259,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432941
    },
    {
        "content": "<p>Should the \"expected enhancement\" cards be archived?</p>",
        "id": 146804295,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432984
    },
    {
        "content": "<p>There's no work to be done for those?</p>",
        "id": 146804296,
        "sender_full_name": "davidtwco",
        "timestamp": 1541432987
    },
    {
        "content": "<p>I think it would be good to change those to use revisions (if they don't already) and add <code>// ignore-compare-mode-nll</code></p>",
        "id": 146804385,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433027
    },
    {
        "content": "<p>basically, I'd like the expected changes injected by NLL to be flagged explicitly in the test code, via <code>// revisions: ast nll</code> and then associated <code>//[nll]~ ERROR ...</code> annotations.</p>",
        "id": 146804412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433061
    },
    {
        "content": "<p>you can see some instances of this pattern in PR <a href=\"https://github.com/rust-lang/rust/issues/55700\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55700\">#55700</a></p>",
        "id": 146804433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433087
    },
    {
        "content": "<p>We could probably hide the \"motivation\" card on the leftmost column too since the project description has that information (in the \"Projects\" listing; or by pressing \"menu\" when in the project).</p>",
        "id": 146804441,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433103
    },
    {
        "content": "<p>ah I was just musing about where that text could go</p>",
        "id": 146804461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433120
    },
    {
        "content": "<p>I think I prefer having compare modes over revisions, it'd be nice to be able to do the error annotations for the compare mode rather than need to switch everything to revisions.</p>",
        "id": 146804570,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433218
    },
    {
        "content": "<p>I guess there's not that much of a difference though.</p>",
        "id": 146804577,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433231
    },
    {
        "content": "<p>(out of scope, but it'd be nice if compare modes were just \"global revisions\" that applied implicitly to every test, then you'd get that for free)</p>",
        "id": 146804685,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433323
    },
    {
        "content": "<p>hmm. And an error that is meant to apply to the base mode alone would be annotated with, what, <code>//[]~ ERROR ...</code> ?</p>",
        "id": 146804917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433508
    },
    {
        "content": "<p>Or just <code>//~ ERROR</code>.</p>",
        "id": 146804930,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433526
    },
    {
        "content": "<p>(vs <code>//~ ERROR ...</code> which I would like to apply to all of the modes under comparison)</p>",
        "id": 146804940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433536
    },
    {
        "content": "<p>Ah, yeah, that's a good idea.</p>",
        "id": 146804953,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433547
    },
    {
        "content": "<p><code>//[]~ ERROR</code> or <code>//[default]~ ERROR</code> would work fine.</p>",
        "id": 146804967,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433568
    },
    {
        "content": "<p>I mean, if you don't do that, then you hit a <em>huge</em> annotation burden...</p>",
        "id": 146804968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433569
    },
    {
        "content": "<p>Yeah, I hadn't thought about that. Makes sense.</p>",
        "id": 146804980,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433582
    },
    {
        "content": "<p>I prefer the <code>x.py</code> output for compare modes where it runs one compare mode and then the next over that of revisions where each revision is run one after another before the next test. In my ideal situation it'd run each revision one at a time, with only the N tests that have that revision (where N = all tests if it's a \"global revision\").</p>",
        "id": 146805126,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433704
    },
    {
        "content": "<p>hmm, why do you prefer that?</p>",
        "id": 146805187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433737
    },
    {
        "content": "<p>I think I just like knowing when I watch it run that the <code>ast</code> compare mode should all pass, but some of <code>nll</code> might not, and then seeing that confirmed as it goes.</p>",
        "id": 146805211,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433776
    },
    {
        "content": "<p>There's no functional difference.</p>",
        "id": 146805225,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433796
    },
    {
        "content": "<p>I don't know if I have a preference. When I'm working on fine-tuning the tests, after the first test run, future runs tend to have a huge set of ignored tests, so I guess I haven't noticed <em>too</em> much of a difference.</p>",
        "id": 146805229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433801
    },
    {
        "content": "<p>Well you do have to get the whole AST suite passing before you get any feedback about the NLL compare mode ones</p>",
        "id": 146805236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433813
    },
    {
        "content": "<p>Yeah, I'm not really sure why I prefer it.</p>",
        "id": 146805246,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433838
    },
    {
        "content": "<p>I guess I just like seeing the separation.</p>",
        "id": 146805298,
        "sender_full_name": "davidtwco",
        "timestamp": 1541433857
    },
    {
        "content": "<p>(which I then take to be an advantage of revisions over compare mode; but thats minor, and I suppose easy to bypass by just feeding in an explicit subset of the tests)</p>",
        "id": 146805300,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433861
    },
    {
        "content": "<p>anyway I'm basically falling back on \"I think I don't have a preference...\" <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
        "id": 146805325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541433893
    },
    {
        "content": "<blockquote>\n<p>(vs <code>//~ ERROR ...</code> which I would like to apply to all of the modes under comparison)</p>\n</blockquote>\n<p>this would be great, <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, I've wanted this before — also it's surprising today because it's basically just <em>ignored</em></p>",
        "id": 147309403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541693154
    },
    {
        "content": "<p>yeah I think I filed an issue for that too</p>",
        "id": 147309481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541693214
    },
    {
        "content": "<p>this one: \"compiletest: tests using revisions treat files with just <code>//~ ERROR</code> has having no errors\" <a href=\"https://github.com/rust-lang/rust/issues/55695\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55695\">#55695</a></p>",
        "id": 147309506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541693236
    }
]