[
    {
        "content": "<p>Is there anything blocking this happening? I should catch up with the conversation in <code>T-compiler</code> about this.</p>",
        "id": 131094774,
        "sender_full_name": "davidtwco",
        "timestamp": 1533716961
    },
    {
        "content": "<p>not really</p>",
        "id": 131095239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533717627
    },
    {
        "content": "<p>afaik</p>",
        "id": 131095240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533717630
    },
    {
        "content": "<p>I could take a look at that today if nobody else is doing it already.</p>",
        "id": 131095257,
        "sender_full_name": "davidtwco",
        "timestamp": 1533717686
    },
    {
        "content": "<p>afaik nobody is doing anything</p>",
        "id": 131095544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533718194
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/issues/52531\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52531\">https://github.com/rust-lang/rust/issues/52531</a> might be problematic?</p>",
        "id": 131097759,
        "sender_full_name": "davidtwco",
        "timestamp": 1533721392
    },
    {
        "content": "<p>hmm yes</p>",
        "id": 131097776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533721430
    },
    {
        "content": "<p>we should fix that I guess</p>",
        "id": 131097779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533721436
    },
    {
        "content": "<p>would you like to know how to fix it? :)</p>",
        "id": 131097826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533721484
    },
    {
        "content": "<p>Yeah, that would be helpful. <a href=\"https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/runtest.rs#L2671-L2679\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/runtest.rs#L2671-L2679\">I've spotted this</a> in the ui test code.</p>",
        "id": 131097853,
        "sender_full_name": "davidtwco",
        "timestamp": 1533721554
    },
    {
        "content": "<p>let's move to another topic..</p>",
        "id": 131097946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533721670
    },
    {
        "content": "<p>I was already in the process of doing that.</p>",
        "id": 131097990,
        "sender_full_name": "davidtwco",
        "timestamp": 1533721688
    },
    {
        "content": "<p>oh... just did :)</p>",
        "id": 131097999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533721704
    },
    {
        "content": "<p>I guess this still works, since your topic is more specific to the <code>error-pattern</code> comments.</p>",
        "id": 131098008,
        "sender_full_name": "davidtwco",
        "timestamp": 1533721725
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> These tests fail to compile in normal compare-mode but compile in nll compare-mode - I'm not sure if that is necessarily correct or not, should I just add <code>// ignore-compare-mode-nll</code>?</p>\n<div class=\"codehilite\"><pre><span></span>    [ui (nll)] ui/compile-fail-migration/associated-types-subtyping-1.rs\n    [ui (nll)] ui/compile-fail-migration/borrow-tuple-fields.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-borrow-mut-object-twice.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-closures-two-mut.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-closures-unique-imm.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-closures-unique.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-issue-2657-1.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-lend-flow-if.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-lend-flow.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-loan-blocks-move-cc.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-loan-blocks-move.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-move-from-subpath-of-borrowed-path.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-move-mut-base-ptr.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-mut-borrow-of-mut-base-ptr.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-object-lifetime.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-overloaded-index-autoderef.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-swap-mut-base-ptr.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-union-borrow-nested.rs\n    [ui (nll)] ui/compile-fail-migration/borrowck/borrowck-uniq-via-lend.rs\n    [ui (nll)] ui/compile-fail-migration/cleanup-rvalue-scopes-cf.rs\n    [ui (nll)] ui/compile-fail-migration/closure_promotion.rs\n    [ui (nll)] ui/compile-fail-migration/hashmap-lifetimes.rs\n    [ui (nll)] ui/compile-fail-migration/issue-28848.rs\n    [ui (nll)] ui/compile-fail-migration/issue-5500-1.rs#ast\n    [ui (nll)] ui/compile-fail-migration/method-self-arg-2.rs\n    [ui (nll)] ui/compile-fail-migration/mut-cant-alias.rs\n    [ui (nll)] ui/compile-fail-migration/regions-assoc-type-in-supertrait-outlives-container.rs\n    [ui (nll)] ui/compile-fail-migration/regions-bounded-by-trait-requiring-static.rs\n    [ui (nll)] ui/compile-fail-migration/regions-bounded-method-type-parameters.rs\n    [ui (nll)] ui/compile-fail-migration/regions-free-region-ordering-caller.rs\n    [ui (nll)] ui/compile-fail-migration/regions-implied-bounds-projection-gap-1.rs\n    [ui (nll)] ui/compile-fail-migration/regions-infer-contravariance-due-to-decl.rs\n    [ui (nll)] ui/compile-fail-migration/regions-infer-covariance-due-to-decl.rs\n    [ui (nll)] ui/compile-fail-migration/regions-outlives-projection-container-wc.rs\n    [ui (nll)] ui/compile-fail-migration/regions-outlives-projection-container.rs\n    [ui (nll)] ui/compile-fail-migration/regions-variance-contravariant-use-covariant-in-second-position.rs\n    [ui (nll)] ui/compile-fail-migration/regions-variance-contravariant-use-covariant.rs\n    [ui (nll)] ui/compile-fail-migration/regions-variance-covariant-use-contravariant.rs\n    [ui (nll)] ui/compile-fail-migration/regions-variance-invariant-use-contravariant.rs\n    [ui (nll)] ui/compile-fail-migration/regions-variance-invariant-use-covariant.rs\n    [ui (nll)] ui/compile-fail-migration/unboxed-closure-region.rs\n    [ui (nll)] ui/compile-fail-migration/unboxed-closures-borrow-conflict.rs\n    [ui (nll)] ui/compile-fail-migration/variance-cell-is-invariant.rs\n    [ui (nll)] ui/compile-fail-migration/variance-contravariant-arg-trait-match.rs\n    [ui (nll)] ui/compile-fail-migration/variance-contravariant-self-trait-match.rs\n    [ui (nll)] ui/compile-fail-migration/variance-covariant-arg-trait-match.rs\n    [ui (nll)] ui/compile-fail-migration/variance-covariant-self-trait-match.rs\n    [ui (nll)] ui/compile-fail-migration/variance-invariant-arg-trait-match.rs\n    [ui (nll)] ui/compile-fail-migration/variance-invariant-self-trait-match.rs\n</pre></div>\n\n\n<p>After that, all the compile-fail tests will be working as UI tests. (Then I'll look into moving them into the main <code>src/test/ui</code> folder rather than <code>src/test/ui/compile-fail-migration</code> and organizing them slightly as per <a href=\"https://github.com/rust-lang/rust/issues/46841\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/46841\">#46841</a>).</p>",
        "id": 131102645,
        "sender_full_name": "davidtwco",
        "timestamp": 1533728696
    },
    {
        "content": "<p>I should clarify, they pass in normal compare-mode, but they fail in NLL compare-mode because they compile successfully.</p>",
        "id": 131102751,
        "sender_full_name": "davidtwco",
        "timestamp": 1533728847
    },
    {
        "content": "<p>There are some (like <code>issue-550-1.rs#ast</code>) that I can see are fine but others where I'm not sure if it is a NLL bug that they compile or if it is NLL being great.</p>",
        "id": 131102920,
        "sender_full_name": "davidtwco",
        "timestamp": 1533729036
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I think in such cases we did ignore the compare mode, yes -- or maybe we added <code>#[cfg_attr(nll, rustc_error)]</code> to the <code>main</code>, actually? <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> would remember</p>",
        "id": 131103808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533729968
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> mentioned <code>// ignore-compare-mode-nll</code> to me <a href=\"#narrow/stream/122657-wg-nll/subject/pr-52809-and-52793/near/130721091\" title=\"#narrow/stream/122657-wg-nll/subject/pr-52809-and-52793/near/130721091\">here</a>. I just wasn't sure whether or not these tests were correct in compiling with NLL or whether that is a bug.</p>",
        "id": 131104411,
        "sender_full_name": "davidtwco",
        "timestamp": 1533730725
    },
    {
        "content": "<p>Figured I'd need to check that before just marking them all as OK.</p>",
        "id": 131104426,
        "sender_full_name": "davidtwco",
        "timestamp": 1533730743
    },
    {
        "content": "<p>well</p>",
        "id": 131105603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533731928
    },
    {
        "content": "<p>I can check if you want</p>",
        "id": 131105604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533731930
    },
    {
        "content": "<p>they might just need to be changed</p>",
        "id": 131105610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533731938
    },
    {
        "content": "<p>OK so -- the <code>associated-types-sutyping-1.rs</code> I think can be fixed if you change from <code>let _: ...</code> to <code>let _c: .. = </code></p>",
        "id": 131105639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732001
    },
    {
        "content": "<p>or <code>let c</code></p>",
        "id": 131105680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732005
    },
    {
        "content": "<p>the problem is that the type annot is being ignored</p>",
        "id": 131105692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732013
    },
    {
        "content": "<p><code>borrow-tuple-fields.rs</code> needs to be changed to use the reference</p>",
        "id": 131105730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732064
    },
    {
        "content": "<p>so e.g.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"p\">(</span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">box</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR cannot move out of `x` because it is borrowed</span>\n</pre></div>\n\n\n<p>becomes</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"p\">(</span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">box</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR cannot move out of `x` because it is borrowed</span>\n<span class=\"w\">    </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">);</span><span class=\"w\"></span>\n</pre></div>",
        "id": 131105737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732079
    },
    {
        "content": "<p>same with <code>borrowck-borrow-mut-object-twice.rs</code></p>",
        "id": 131105759,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732106
    },
    {
        "content": "<p>ok, I'm going to stop there because I have to do something else, but maybe that helps <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> :)</p>",
        "id": 131105799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732123
    },
    {
        "content": "<p>Thanks. I'll change those two and any others I can spot, otherwise I'll add an ignore comment to them in a separate commit so it's easy to differentiate the tests I changed due to this and everything else moving around.</p>",
        "id": 131105925,
        "sender_full_name": "davidtwco",
        "timestamp": 1533732296
    },
    {
        "content": "<p>one possibility: open a tracking issue and dump them in a checklist</p>",
        "id": 131106062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732449
    },
    {
        "content": "<p>they are almost certainly what <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> calls \"weak tests\"</p>",
        "id": 131106065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533732455
    },
    {
        "content": "<p>Sounds good.</p>",
        "id": 131106151,
        "sender_full_name": "davidtwco",
        "timestamp": 1533732533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/issues/53196\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53196\">#53196</a></p>",
        "id": 131112926,
        "sender_full_name": "davidtwco",
        "timestamp": 1533739692
    },
    {
        "content": "<p>It already has merge conflicts, which is annoying.</p>",
        "id": 131112928,
        "sender_full_name": "davidtwco",
        "timestamp": 1533739699
    },
    {
        "content": "<p>lol</p>",
        "id": 131113228,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533740071
    },
    {
        "content": "<p>It's _huge_.</p>",
        "id": 131113238,
        "sender_full_name": "davidtwco",
        "timestamp": 1533740094
    },
    {
        "content": "<p>I'm not even sure how to keep this mergable - it'll get conflicts every day.</p>",
        "id": 131113285,
        "sender_full_name": "davidtwco",
        "timestamp": 1533740157
    },
    {
        "content": "<p>well probably I'll r+ with p=10 or something</p>",
        "id": 131113506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533740387
    },
    {
        "content": "<p>Rebasing this is so very confusing.</p>",
        "id": 131113893,
        "sender_full_name": "davidtwco",
        "timestamp": 1533740782
    },
    {
        "content": "<p>Yeah, I messed up a little and my \"update NLL tests\" commit has a bunch of deletions and the next commit has the additions.</p>",
        "id": 131114007,
        "sender_full_name": "davidtwco",
        "timestamp": 1533740943
    },
    {
        "content": "<p>Where that commit should only have a handful (~40 or so) test/stderr changes.</p>",
        "id": 131114023,
        "sender_full_name": "davidtwco",
        "timestamp": 1533740969
    },
    {
        "content": "<p>I'm going to fix the commits in the PR before attempting to rebase it - should make it much simpler and it's kind-of required so that those tests that got the <code>ignore-compare-mode-nll</code> can be checked.</p>",
        "id": 131114249,
        "sender_full_name": "davidtwco",
        "timestamp": 1533741243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  hum, tidy looks for the compile-fail directory apparently</p>",
        "id": 131122590,
        "sender_full_name": "lqd",
        "timestamp": 1533750507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I noticed, not had a chance to fix it yet.</p>",
        "id": 131125644,
        "sender_full_name": "davidtwco",
        "timestamp": 1533753687
    }
]