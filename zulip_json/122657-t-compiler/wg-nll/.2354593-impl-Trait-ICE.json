[
    {
        "content": "<p>what landed in the last nightly? it broke at least one thing <a href=\"https://travis-ci.com/lykenware/gll/builds/85984866\" target=\"_blank\" title=\"https://travis-ci.com/lykenware/gll/builds/85984866\">https://travis-ci.com/lykenware/gll/builds/85984866</a></p>\n<p>could it be this? <a href=\"https://github.com/rust-lang/rust/pull/53438\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53438\">https://github.com/rust-lang/rust/pull/53438</a></p>",
        "id": 134663678,
        "sender_full_name": "eddyb",
        "timestamp": 1537958628
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span></p>",
        "id": 134663931,
        "sender_full_name": "eddyb",
        "timestamp": 1537958893
    },
    {
        "content": "<p>(I also asked in #compiler on Discord)</p>",
        "id": 134663938,
        "sender_full_name": "eddyb",
        "timestamp": 1537958896
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/53542\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53542\">https://github.com/rust-lang/rust/pull/53542</a> looks more likely, if it's in this nightly. Although I wrote some of the code in that PR, so I guess it's on me either way.</p>",
        "id": 134665441,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1537960466
    },
    {
        "content": "<p>yeah I was came here to paste <a href=\"https://github.com/rust-lang/rust/pull/53542\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53542\">https://github.com/rust-lang/rust/pull/53542</a> heh</p>",
        "id": 134666156,
        "sender_full_name": "eddyb",
        "timestamp": 1537961165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> any change you can file an issue (even better if you can reproduce some other way...)</p>",
        "id": 134686533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537978622
    },
    {
        "content": "<p>I can uhh try to reduce it?</p>",
        "id": 134686544,
        "sender_full_name": "eddyb",
        "timestamp": 1537978645
    },
    {
        "content": "<p>well that always helps but I'd like to have an issue just to help me stay organized</p>",
        "id": 134686938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537979049
    },
    {
        "content": "<p>yes, but, all I have to point to is that travis build failure, I wanted something more substantive</p>",
        "id": 134686972,
        "sender_full_name": "eddyb",
        "timestamp": 1537979108
    },
    {
        "content": "<p>reduced to one-liner! <code>#![feature(nll)] fn foo() -&gt; impl FnOnce() { || (|| foo())()() }</code></p>",
        "id": 134688320,
        "sender_full_name": "eddyb",
        "timestamp": 1537980608
    },
    {
        "content": "<p>oh wooow</p>",
        "id": 134688460,
        "sender_full_name": "eddyb",
        "timestamp": 1537980755
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/issues/54593\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54593\">https://github.com/rust-lang/rust/issues/54593</a></p>",
        "id": 134688999,
        "sender_full_name": "eddyb",
        "timestamp": 1537981276
    },
    {
        "content": "<p>0.0 whyyyyyyyy</p>",
        "id": 134689257,
        "sender_full_name": "Tyler Laing",
        "timestamp": 1537981538
    },
    {
        "content": "<p>I just edited it a bit - you don't need <code>impl FnOnce()</code>, any <code>impl Trait</code> will do</p>",
        "id": 134689391,
        "sender_full_name": "eddyb",
        "timestamp": 1537981680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> thanks!</p>",
        "id": 134689465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537981766
    },
    {
        "content": "<p>that's awesome</p>",
        "id": 134689467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537981770
    },
    {
        "content": "<p>breaking GLL is <em>not</em> awesome :P</p>",
        "id": 134689568,
        "sender_full_name": "eddyb",
        "timestamp": 1537981873
    },
    {
        "content": "<p>(IMO the PR was a bit rushed)</p>",
        "id": 134689577,
        "sender_full_name": "eddyb",
        "timestamp": 1537981888
    },
    {
        "content": "<p>at least we have older nightlies, but we won't be able to land PRs without messing with <code>.travis.yml</code> ... somehow</p>",
        "id": 134689648,
        "sender_full_name": "eddyb",
        "timestamp": 1537981935
    },
    {
        "content": "<p>let me see if I can see what the problem is...</p>",
        "id": 134689661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537981960
    },
    {
        "content": "<p>having a test case is mucho helpful</p>",
        "id": 134689664,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537981966
    },
    {
        "content": "<p>yeah I'm surprised it reduced!</p>",
        "id": 134689670,
        "sender_full_name": "eddyb",
        "timestamp": 1537981980
    },
    {
        "content": "<p>this is... right smack in the middle of a system for composing \"thunks\" acting on continuations</p>",
        "id": 134689680,
        "sender_full_name": "eddyb",
        "timestamp": 1537981996
    },
    {
        "content": "<p>but it's more about closures somehow inheriting some ability regarding <code>-&gt; impl Trait</code> of their parents</p>",
        "id": 134689759,
        "sender_full_name": "eddyb",
        "timestamp": 1537982074
    },
    {
        "content": "<p>yes</p>",
        "id": 134689777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982100
    },
    {
        "content": "<p>hmm. I just tested your example with my build from <a href=\"https://github.com/rust-lang/rust/pull/54453\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54453\">https://github.com/rust-lang/rust/pull/54453</a> and it passes.</p>",
        "id": 134689884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982242
    },
    {
        "content": "<p>this build is fully rebased...</p>",
        "id": 134689885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982248
    },
    {
        "content": "<p>though maybe I need to rebuild since rebasing</p>",
        "id": 134689887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982254
    },
    {
        "content": "<p>I think I only ran <code>x.py check</code></p>",
        "id": 134689898,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982272
    },
    {
        "content": "<p>so maybe the executable itself is from before that PR landed</p>",
        "id": 134689900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982277
    },
    {
        "content": "<p>/me rebuilds</p>",
        "id": 134689943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982291
    },
    {
        "content": "<p>(yep, I get the ICE now)</p>",
        "id": 134690502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you might be able to just revert the NLL changes in the PR. it would break some tests but I suspect it will fix my testcase</p>",
        "id": 134691583,
        "sender_full_name": "eddyb",
        "timestamp": 1537983992
    },
    {
        "content": "<p>well</p>",
        "id": 134691838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984209
    },
    {
        "content": "<p>I see why it's failing</p>",
        "id": 134691839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984211
    },
    {
        "content": "<p>but I don't quite know how the code went wrong yet</p>",
        "id": 134691841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984217
    },
    {
        "content": "<p>woah, I just read this code</p>",
        "id": 134691955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984379
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">terr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">sub_types</span><span class=\"p\">(</span><span class=\"n\">sub</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sup</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">locations</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">category</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">TyKind</span>::<span class=\"n\">Opaque</span><span class=\"p\">(..)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sup</span><span class=\"p\">.</span><span class=\"n\">sty</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">eq_opaque_type_and_type</span><span class=\"p\">(</span><span class=\"n\">sub</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sup</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">locations</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">category</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">terr</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n</pre></div>",
        "id": 134691963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984391
    },
    {
        "content": "<p>that doesn't seem quite right</p>",
        "id": 134691971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984404
    },
    {
        "content": "<p>(as in, I don't like the idea of \"try to do subtyping and if it fails do something else\")</p>",
        "id": 134691981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984418
    },
    {
        "content": "<p>hmm</p>",
        "id": 134691988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984422
    },
    {
        "content": "<p>it probably also doesn't make sense to do type equality in the fallback case</p>",
        "id": 134692040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984447
    },
    {
        "content": "<p>well, let me see if I can figure out the problem at hand, then we can revisit these points...</p>",
        "id": 134692057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537984477
    },
    {
        "content": "<p>ok, I see the bug I think. We are instantiating the opaque types defined on the \"parent def-id\" (so, the enclosing function). We used to instantiate the opaque types defined on the closure itself (none)</p>",
        "id": 134693358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537985937
    },
    {
        "content": "<p>I'm not really clear on why we are doing <em>that</em> though</p>",
        "id": 134693364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537985955
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123893\">@alercah</span> you around? I'm trying to fix the problem that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> hit in <a href=\"https://github.com/rust-lang/rust/pull/53542/\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53542/\">https://github.com/rust-lang/rust/pull/53542/</a> ... I am wondering why in <code>eq_opaque_type_and_type</code> you are using the <code>parent_def_id</code> when invoking <code>instantiate_opaque_types</code> (instead of <code>self.mir_def_id</code>)...</p>",
        "id": 134693478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986080
    },
    {
        "content": "<p>well, I guess i'll try changing it and see what happens :)</p>",
        "id": 134693482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986090
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> did you meant to ping <span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> ?</p>",
        "id": 134693541,
        "sender_full_name": "eddyb",
        "timestamp": 1537986127
    },
    {
        "content": "<p>maybe?</p>",
        "id": 134693548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986136
    },
    {
        "content": "<p>did I misread the author of the PR? :)</p>",
        "id": 134693550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986141
    },
    {
        "content": "<p>(who is easier to find on Discord)</p>",
        "id": 134693558,
        "sender_full_name": "eddyb",
        "timestamp": 1537986151
    },
    {
        "content": "<p>it appears I did</p>",
        "id": 134693562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986158
    },
    {
        "content": "<p>sorry <span class=\"user-mention\" data-user-id=\"123893\">@alercah</span></p>",
        "id": 134693568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986167
    },
    {
        "content": "<p>ok well I can confirm it fixes this example</p>",
        "id": 134693583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986197
    },
    {
        "content": "<p>let me see if anything..else breaks...</p>",
        "id": 134693586,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537986201
    },
    {
        "content": "<p>hmm, still seems to pass all tests...</p>",
        "id": 134694388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537987035
    },
    {
        "content": "<p>Add a new test(s)?</p>",
        "id": 134694541,
        "sender_full_name": "Tyler Laing",
        "timestamp": 1537987189
    },
    {
        "content": "<p>no, ok, I found some tests that break, which is good (tests added by the PR in question)</p>",
        "id": 134694613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537987241
    },
    {
        "content": "<p>they were just under run-pass</p>",
        "id": 134694615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537987245
    },
    {
        "content": "<p>can't wait to get rid of those directories</p>",
        "id": 134694623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537987252
    },
    {
        "content": "<p>I wonder how this is being desugared</p>",
        "id": 134694650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537987289
    },
    {
        "content": "<p>I guess I have to read a bit more closely</p>",
        "id": 134694652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537987297
    }
]