[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> just opening a thread to chat about that issue =)</p>",
        "id": 129047761,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530651998
    },
    {
        "content": "<p><code>In particular, there is some code that is accepted today under AST borrowck that NLL rejects. So we need a migration path.</code></p>",
        "id": 129088783,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530715237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> remember me what that code is</p>",
        "id": 129088789,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530715244
    },
    {
        "content": "<p>:)</p>",
        "id": 129088793,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530715246
    },
    {
        "content": "<p>just look for NLL-fixed-by-NLL tag</p>",
        "id": 129090293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530716987
    },
    {
        "content": "<p>plenty of bugs fixed by NLL: <a href=\"https://github.com/rust-lang/rust/labels/NLL-fixed-by-NLL\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/NLL-fixed-by-NLL\">https://github.com/rust-lang/rust/labels/NLL-fixed-by-NLL</a></p>",
        "id": 129090296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530716996
    },
    {
        "content": "<p>all of that is code that is accepted under the AST borrow check</p>",
        "id": 129090337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530717004
    },
    {
        "content": "<p>but should not have been</p>",
        "id": 129090343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530717006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> back, I always thought that that was not going to happen</p>",
        "id": 129093424,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530721070
    },
    {
        "content": "<p>and also having open issues about that confuses me</p>",
        "id": 129093466,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530721088
    },
    {
        "content": "<p>you mean that the code that is accepted in AST borrowck but NLL rejects are issues to be fixed? or is there really code that is accepted under AST borrowck and not by NLL?</p>",
        "id": 129093482,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530721122
    },
    {
        "content": "<p>haven't gone through the issues, checking ...</p>",
        "id": 129093496,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530721143
    },
    {
        "content": "<p>ahhh I see you meant that is code wrongly accepted by AST borrowck and should not</p>",
        "id": 129093602,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530721258
    },
    {
        "content": "<p>if it's that I'm fine :)</p>",
        "id": 129093616,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530721270
    },
    {
        "content": "<p>reading <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> phrase confused me, I thought there was code that worked on AST and not on NLL</p>",
        "id": 129093636,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530721309
    },
    {
        "content": "<blockquote>\n<p>if it's that I'm fine :)</p>\n</blockquote>\n<p>correct</p>",
        "id": 129095292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530723778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I think the link at the end of <a href=\"https://github.com/rust-lang/rust/issues/46908\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/46908\">https://github.com/rust-lang/rust/issues/46908</a> is now incorrect</p>",
        "id": 129097175,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530726760
    },
    {
        "content": "<p>ahh no, seems fine</p>",
        "id": 129097186,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530726795
    },
    {
        "content": "<p>so checking just in case, if mir doesn't report any error the code should be allowed, right?</p>",
        "id": 129097405,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530727135
    },
    {
        "content": "<p>yes</p>",
        "id": 129097415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530727170
    },
    {
        "content": "<p>the presumption is that MIR borrowck is strictly more correct :)</p>",
        "id": 129097417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530727179
    },
    {
        "content": "<p>if MIR has errors and AST too -&gt; report MIR errors</p>",
        "id": 129097418,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530727179
    },
    {
        "content": "<p>yes</p>",
        "id": 129097419,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530727182
    },
    {
        "content": "<p>and if MIR has errors but AST don't -&gt; allow code and report a warning</p>",
        "id": 129097483,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530727228
    },
    {
        "content": "<p>ok, checking just in case :)</p>",
        "id": 129097489,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530727234
    },
    {
        "content": "<p>yes</p>",
        "id": 129097558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530727345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> back to this thing :)</p>",
        "id": 129101947,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734230
    },
    {
        "content": "<p><code>Presently, we are actually always executing AST borrowck, as well, which will need to be tweaked:</code></p>",
        "id": 129101948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734232
    },
    {
        "content": "<p>you want to execute mir borrowck and if no errors avoid ast borrowck?</p>",
        "id": 129101953,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734254
    },
    {
        "content": "<p>from that phrase seems that</p>",
        "id": 129101958,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734280
    },
    {
        "content": "<p>and I guess it makes sense</p>",
        "id": 129102003,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734306
    },
    {
        "content": "<p>the issue doesn't state clearly that, so checking just in case</p>",
        "id": 129102020,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734370
    },
    {
        "content": "<p>but I guess it makes sense</p>",
        "id": 129102023,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734374
    },
    {
        "content": "<p>yes</p>",
        "id": 129102327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734819
    },
    {
        "content": "<p>I'd prefer not to run AST borrowck if we don't have to :)</p>",
        "id": 129102335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734826
    },
    {
        "content": "<p>ok</p>",
        "id": 129102336,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734827
    },
    {
        "content": "<p>yes make sense</p>",
        "id": 129102341,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734836
    },
    {
        "content": "<p>that might actualyl be a plausible first PR</p>",
        "id": 129102342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734836
    },
    {
        "content": "<p>just skip AST borowck if borrowck=mir</p>",
        "id": 129102345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734840
    },
    {
        "content": "<p>yep</p>",
        "id": 129102348,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734848
    },
    {
        "content": "<p>I wouldn't be surprised if this proves to be more complex than expected</p>",
        "id": 129102351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734853
    },
    {
        "content": "<p>e.g., maybe add an assertion into borrowck that it does not run if borrowck=mir</p>",
        "id": 129102357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734863
    },
    {
        "content": "<p>just to be sure :)</p>",
        "id": 129102359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734865
    },
    {
        "content": "<p>you want to do it if borrowck=mir ?</p>",
        "id": 129102361,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734869
    },
    {
        "content": "<p>or just for migrate mode?</p>",
        "id": 129102368,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734877
    },
    {
        "content": "<p>I guess in all those modes?</p>",
        "id": 129102372,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734881
    },
    {
        "content": "<p>both really</p>",
        "id": 129102396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734883
    },
    {
        "content": "<p>but I'm saying, before we even add migrate mode</p>",
        "id": 129102415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734887
    },
    {
        "content": "<p>we could do the hard work for <code>-Zborrowck=mir</code></p>",
        "id": 129102421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734892
    },
    {
        "content": "<p>yes</p>",
        "id": 129102422,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734897
    },
    {
        "content": "<p>gonna do that</p>",
        "id": 129102425,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734901
    },
    {
        "content": "<p>was investigating about ast borrowck errors</p>",
        "id": 129102433,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734913
    },
    {
        "content": "<p>right now it does this weird thing where it \"silences\" them</p>",
        "id": 129102440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734926
    },
    {
        "content": "<p>I think that was because of the \"unused mutability\" lint</p>",
        "id": 129102446,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734935
    },
    {
        "content": "<p>yeah trying to find all that :)</p>",
        "id": 129102449,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734938
    },
    {
        "content": "<p>which we've now reimplemented in MIR borrowck</p>",
        "id": 129102458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530734945
    },
    {
        "content": "<p>I guess it's related to that Result struct</p>",
        "id": 129102460,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734951
    },
    {
        "content": "<p><code>BorrowCheckResult</code></p>",
        "id": 129102463,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530734957
    },
    {
        "content": "<p><code>unused::check</code> :P</p>",
        "id": 129102557,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735106
    },
    {
        "content": "<p>to be honest there's nothing inside <code>fn borrowck</code> that looks like silencing errors (to me)</p>",
        "id": 129102688,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735253
    },
    {
        "content": "<p>ahh I guess it happens here <code>build_borrowck_dataflow_data</code></p>",
        "id": 129102722,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735353
    },
    {
        "content": "<p>it probably calls <code>cancel()</code> or something</p>",
        "id": 129102874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735566
    },
    {
        "content": "<p>not seeing that (yet)</p>",
        "id": 129102880,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735600
    },
    {
        "content": "<p>look for </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">cancel_if_wrong_origin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                              </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">diag</span>: <span class=\"nc\">DiagnosticBuilder</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                              </span><span class=\"n\">o</span>: <span class=\"nc\">Origin</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                              </span>-&gt; <span class=\"nc\">DiagnosticBuilder</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">o</span><span class=\"p\">.</span><span class=\"n\">should_emit_errors</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">borrowck_mode</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">sess</span><span class=\"p\">.</span><span class=\"n\">diagnostic</span><span class=\"p\">().</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">diag</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">diag</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 129102927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735613
    },
    {
        "content": "<p>that said, I would put an asseriton right in the beginning of AST borrowck</p>",
        "id": 129102931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735634
    },
    {
        "content": "<p>yes</p>",
        "id": 129102933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735645
    },
    {
        "content": "<p>isn't it cancelling on check_loans</p>",
        "id": 129102952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735666
    },
    {
        "content": "<p>that is some other weird code</p>",
        "id": 129102968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735713
    },
    {
        "content": "<p>I think maybe that is suppressing duplicates?</p>",
        "id": 129102969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735720
    },
    {
        "content": "<p>I saw that <code>cancel_if_wrong_origin</code></p>",
        "id": 129102970,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735722
    },
    {
        "content": "<p>well in any case that use of cancel is distinct</p>",
        "id": 129103028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735752
    },
    {
        "content": "<p>it seems to be that there are two operations A and B</p>",
        "id": 129103032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735759
    },
    {
        "content": "<p>that must be mutually compatible</p>",
        "id": 129103036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735763
    },
    {
        "content": "<p>(in <code>check_loans</code> I mean)</p>",
        "id": 129103038,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735767
    },
    {
        "content": "<p>ok</p>",
        "id": 129103042,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735771
    },
    {
        "content": "<p>so we check whether A prevents B and whether B prevents A</p>",
        "id": 129103043,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735772
    },
    {
        "content": "<p>if both are errors, we pick one arbitrarily</p>",
        "id": 129103048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735781
    },
    {
        "content": "<p>otherwise, we report the one that failed</p>",
        "id": 129103053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735784
    },
    {
        "content": "<p>unsure what <code>cancel_if_wrong_origin</code> means :P</p>",
        "id": 129103055,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735789
    },
    {
        "content": "<p>it means \"cancel if this came from the wrong borrowck\"</p>",
        "id": 129103056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735797
    },
    {
        "content": "<p>ahh ok</p>",
        "id": 129103063,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735820
    },
    {
        "content": "<p>so we don't want that anymore</p>",
        "id": 129103069,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735840
    },
    {
        "content": "<p>I'm talking about PR #2 the first thing as you've said is to make mir mode only run mir borrowck</p>",
        "id": 129103130,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530735904
    },
    {
        "content": "<p>hmm well</p>",
        "id": 129103190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735979
    },
    {
        "content": "<p>we might still need similar logic in the end</p>",
        "id": 129103192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735985
    },
    {
        "content": "<p>because if we are in migrate mode</p>",
        "id": 129103193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735987
    },
    {
        "content": "<p>we want to know <em>if</em> there were errors</p>",
        "id": 129103195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735991
    },
    {
        "content": "<p>but we don't want to report them</p>",
        "id": 129103198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530735994
    },
    {
        "content": "<p>ya, right</p>",
        "id": 129103208,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736012
    },
    {
        "content": "<p>ok</p>",
        "id": 129103209,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> another question</p>",
        "id": 129103295,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736163
    },
    {
        "content": "<p>when we run compare mode we are running ast borrowck twice, right?</p>",
        "id": 129103298,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736175
    },
    {
        "content": "<p>one in ast mode and another one in mir mode, because there we run both modes</p>",
        "id": 129103312,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736197
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 129103377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736224
    },
    {
        "content": "<p>compare-mode is just another mode</p>",
        "id": 129103384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736238
    },
    {
        "content": "<p>ast-borrowck is a query</p>",
        "id": 129103388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736245
    },
    {
        "content": "<p>so it is memoized</p>",
        "id": 129103390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736247
    },
    {
        "content": "<p>no matter how many times you request it, it will only run once</p>",
        "id": 129103393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736253
    },
    {
        "content": "<p>when it is in compare mode, it adds (Ast) to its errors and otherwise emits them as normal</p>",
        "id": 129103407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736270
    },
    {
        "content": "<p>ahh ok, it doesn't run because it's memoized</p>",
        "id": 129103410,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736274
    },
    {
        "content": "<p>when we are in AST mode, it just emits its errors</p>",
        "id": 129103413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736277
    },
    {
        "content": "<p>that fine</p>",
        "id": 129103414,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736278
    },
    {
        "content": "<p>when we are in MIR mode, it emits nothing</p>",
        "id": 129103416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736281
    },
    {
        "content": "<p>ok</p>",
        "id": 129103421,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736304
    },
    {
        "content": "<p>what about this ...</p>",
        "id": 129103567,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736510
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    // Return early if we are not supposed to use MIR borrow checker for this function.\n    return_early = !tcx.has_attr(def_id, &quot;rustc_mir_borrowck&quot;) &amp;&amp; !tcx.use_mir_borrowck();\n</pre></div>",
        "id": 129103571,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736513
    },
    {
        "content": "<p>the idea is that won't happen anymore?</p>",
        "id": 129103594,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736538
    },
    {
        "content": "<p>we should probably just remove that <code>#[rustc_mir_borrowck]</code> attribute to be honest</p>",
        "id": 129103609,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736562
    },
    {
        "content": "<p>I'd say we are passed that point</p>",
        "id": 129103649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736570
    },
    {
        "content": "<p>that said</p>",
        "id": 129103651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736576
    },
    {
        "content": "<p>I'm not sure what you mean by \"that won't happen anymore\"</p>",
        "id": 129103652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736583
    },
    {
        "content": "<p>it could still happen if we are in AST mode?</p>",
        "id": 129103654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736587
    },
    {
        "content": "<p>that is, returning early could still happen</p>",
        "id": 129103657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736600
    },
    {
        "content": "<p>but why in AST mode do we call MIR borrowck stuff?</p>",
        "id": 129103660,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736605
    },
    {
        "content": "<p>well, I guess you could fix that, true</p>",
        "id": 129103691,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736658
    },
    {
        "content": "<p>right now we call the <code>mir_borrowck</code> unconditionally I think</p>",
        "id": 129103693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736665
    },
    {
        "content": "<p>we could consult the mode and decide not to do so</p>",
        "id": 129103703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530736670
    },
    {
        "content": "<p>I see</p>",
        "id": 129103705,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530736672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what does <code>#[rustc_mir_borrowck]</code> means?</p>",
        "id": 129104547,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530737972
    },
    {
        "content": "<p>you told me that I should remove that</p>",
        "id": 129104550,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530737982
    },
    {
        "content": "<p>but change to what?</p>",
        "id": 129104551,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530737986
    },
    {
        "content": "<p><code>#![feature(nll)]</code>?</p>",
        "id": 129104572,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530738002
    },
    {
        "content": "<p>it enables MIR borrowck for just one function</p>",
        "id": 129104679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530738141
    },
    {
        "content": "<p>if it is used in tests, then I think yes just replacing with <code>#![feature(nll)]</code> would be fine</p>",
        "id": 129104682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530738154
    },
    {
        "content": "<p>ok</p>",
        "id": 129104785,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530738265
    },
    {
        "content": "<p>and last thing, how do I check for errors after calling borrowck?</p>",
        "id": 129104792,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530738279
    },
    {
        "content": "<p>or mir_borrowck?</p>",
        "id": 129104793,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530738282
    },
    {
        "content": "<p>I've this <code>BorrowCheckResult</code> thing but don't see how to check for errors</p>",
        "id": 129104798,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530738302
    },
    {
        "content": "<p>yes, I guess we have to add a field or something</p>",
        "id": 129106134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740312
    },
    {
        "content": "<p>that indicates whether any errors occurred</p>",
        "id": 129106136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740319
    },
    {
        "content": "<p>but I don't know when exactly the code figures out that there's an error</p>",
        "id": 129106218,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740458
    },
    {
        "content": "<p>well, it's basically exactly that function</p>",
        "id": 129106230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740485
    },
    {
        "content": "<p>the one that checks whether to \"cancel\" the error</p>",
        "id": 129106234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740492
    },
    {
        "content": "<p>I would think that we would have it flip some flag to true</p>",
        "id": 129106237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740497
    },
    {
        "content": "<p>ok</p>",
        "id": 129106294,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740540
    },
    {
        "content": "<p>will check that</p>",
        "id": 129106295,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740544
    },
    {
        "content": "<p>another thing</p>",
        "id": 129106299,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740558
    },
    {
        "content": "<p>was looking to remove <code>rustc_mir_borrowck</code></p>",
        "id": 129106302,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740568
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@archlinux rust1 (z-borrowck-migrate)]$ rg rustc_mir_borrowck\nsrc/librustc_mir/borrow_check/mod.rs\n83:    return_early = !tcx.has_attr(def_id, &quot;rustc_mir_borrowck&quot;) &amp;&amp; !tcx.use_mir_borrowck();\n\nsrc/librustc_mir/transform/rustc_peek.rs\n39:        if !tcx.has_attr(def_id, &quot;rustc_mir_borrowck&quot;) {\n</pre></div>",
        "id": 129106305,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740580
    },
    {
        "content": "<p>those are all the occurrences of it</p>",
        "id": 129106310,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740588
    },
    {
        "content": "<p>but never see where or how it's defined</p>",
        "id": 129106314,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740598
    },
    {
        "content": "<p>that just shows up if you use an attribute on top of a function?</p>",
        "id": 129106362,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740661
    },
    {
        "content": "<p>as the test is doing?</p>",
        "id": 129106364,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740667
    },
    {
        "content": "<p>I was expecting to see a white list of attrs or something</p>",
        "id": 129106385,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740752
    },
    {
        "content": "<p>there is a white list; I think we might have some special rule for <code>rustc_*</code></p>",
        "id": 129106424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740764
    },
    {
        "content": "<p>ahh ok</p>",
        "id": 129106427,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740771
    },
    {
        "content": "<p>that's why I don't find the thing :)</p>",
        "id": 129106430,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740778
    },
    {
        "content": "<p>ok</p>",
        "id": 129106432,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740783
    },
    {
        "content": "<p>also</p>",
        "id": 129106433,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740790
    },
    {
        "content": "<p>however, if you look for other such attributes (e.g., <code>rustc_if_this_changed</code>), they have entries in the whitelist</p>",
        "id": 129106436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740798
    },
    {
        "content": "<p>it's possible that <code>rustc_mir_borrowck</code> was just incompletely removed</p>",
        "id": 129106440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530740805
    },
    {
        "content": "<p>also</p>",
        "id": 129106452,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740855
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/rustc_peek.rs#L39\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/rustc_peek.rs#L39\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/rustc_peek.rs#L39</a></p>",
        "id": 129106453,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740855
    },
    {
        "content": "<p>unsure what's the code about</p>",
        "id": 129106455,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740864
    },
    {
        "content": "<p>but this is ... always? ... skipped</p>",
        "id": 129106458,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740876
    },
    {
        "content": "<p>I mean if you don't use the attr</p>",
        "id": 129106495,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740883
    },
    {
        "content": "<p>unless the attr is cascade from another attr</p>",
        "id": 129106499,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740890
    },
    {
        "content": "<p>need to search for it without rustc_ to see how it's used</p>",
        "id": 129106502,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530740902
    },
    {
        "content": "<p>oh, that's some stuff that pnkfelix added</p>",
        "id": 129106564,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741004
    },
    {
        "content": "<p>for asserting things about the dataflow state</p>",
        "id": 129106570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741010
    },
    {
        "content": "<p>alternatively, we could keep the attribute, but just error if you use it without <code>#![feature(nll)]</code></p>",
        "id": 129106573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741032
    },
    {
        "content": "<p>though I think it'd probably be fine to just rip out all that code</p>",
        "id": 129106575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741044
    },
    {
        "content": "<p>but it is a way of doing some unit testing</p>",
        "id": 129106577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741049
    },
    {
        "content": "<p>in fact, people using that code appear to be the <em>only</em> ones using <code>#![rustc_mir_borrowck]</code></p>",
        "id": 129106584,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741071
    },
    {
        "content": "<p>I'm not understanding what's going on</p>",
        "id": 129106585,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741075
    },
    {
        "content": "<p>don't find anything about mir_borrowck</p>",
        "id": 129106587,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741082
    },
    {
        "content": "<p>what I find seems unrelated</p>",
        "id": 129106588,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741091
    },
    {
        "content": "<p>it's really a red herring</p>",
        "id": 129106591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741103
    },
    {
        "content": "<p>this attribute I mean</p>",
        "id": 129106595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741108
    },
    {
        "content": "<blockquote>\n<p>in fact, people using that code appear to be the <em>only</em> ones using <code>#![rustc_mir_borrowck]</code></p>\n</blockquote>\n<p>exactly that's what I mean</p>",
        "id": 129106596,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741111
    },
    {
        "content": "<p>but basically: it enables MIR borrowck on an individual function</p>",
        "id": 129106597,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741114
    },
    {
        "content": "<p>and it also (apparently) enables this other kind of wacky unit testing stuff</p>",
        "id": 129106637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741124
    },
    {
        "content": "<p>where we recognize special fuinctions</p>",
        "id": 129106639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741129
    },
    {
        "content": "<p>and trigger extra assertions</p>",
        "id": 129106640,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741132
    },
    {
        "content": "<p>e.g., to test that a variable is considered uninitialized at a particular point</p>",
        "id": 129106641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741144
    },
    {
        "content": "<p>now that we have the full MIR borrowck working, those tests are less imporatnt</p>",
        "id": 129106643,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741150
    },
    {
        "content": "<p>since we can just test for ordinary errors</p>",
        "id": 129106647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741156
    },
    {
        "content": "<p>should we keep or not?</p>",
        "id": 129106648,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741157
    },
    {
        "content": "<p>I'm not sure :)</p>",
        "id": 129106652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741177
    },
    {
        "content": "<p>hehe</p>",
        "id": 129106653,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741180
    },
    {
        "content": "<p>I think I'd just leave it, it's not important</p>",
        "id": 129106654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741181
    },
    {
        "content": "<p>but we can simplify the logic around it</p>",
        "id": 129106659,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741187
    },
    {
        "content": "<p>also</p>",
        "id": 129106661,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741193
    },
    {
        "content": "<p>maybe <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> wants to keep it, not sure</p>",
        "id": 129106662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741199
    },
    {
        "content": "<p>can you point me to where is this attribute defined?</p>",
        "id": 129106663,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741208
    },
    {
        "content": "<p>I can't find it even removing rustc_</p>",
        "id": 129106664,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741216
    },
    {
        "content": "<p>the white list you mentioned</p>",
        "id": 129106666,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741227
    },
    {
        "content": "<p>maybe <a href=\"https://github.com/rust-lang/rust/blob/master/src/libsyntax/feature_gate.rs#L697\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/libsyntax/feature_gate.rs#L697\">https://github.com/rust-lang/rust/blob/master/src/libsyntax/feature_gate.rs#L697</a></p>",
        "id": 129106779,
        "sender_full_name": "lqd",
        "timestamp": 1530741395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> yes but interestingly, <code>rustc_mir_borrowck</code> is not listed there</p>",
        "id": 129106847,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741556
    },
    {
        "content": "<p>maybe <code>rustc_mir</code> acts like rustc_mir_* or something?</p>",
        "id": 129106850,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741579
    },
    {
        "content": "<p>we don't really have a notion of \"defining\" attributes</p>",
        "id": 129106925,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741687
    },
    {
        "content": "<p>they are just strings</p>",
        "id": 129106926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741691
    },
    {
        "content": "<p>but we do have this whitelist that prevents you from using random stuff</p>",
        "id": 129106927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741697
    },
    {
        "content": "<p>(the one that <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> cited, yes)</p>",
        "id": 129106929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741706
    },
    {
        "content": "<p>you'd have to check, maybe it has some rules around <code>rustc_</code>, I can't recall</p>",
        "id": 129106971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741724
    },
    {
        "content": "<p>I don't see any <em>obvious</em> code of that kind</p>",
        "id": 129106976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741761
    },
    {
        "content": "<p>try <code>rustc_foo_bar</code> and see if you get an error :)</p>",
        "id": 129106981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741770
    },
    {
        "content": "<p>somewhere there must be such code:</p>\n<p><a href=\"https://play.rust-lang.org/?gist=dbe1c01e25907f7b9ded86396cbce0a6&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=dbe1c01e25907f7b9ded86396cbce0a6&amp;version=nightly&amp;mode=debug&amp;edition=2015\">https://play.rust-lang.org/?gist=dbe1c01e25907f7b9ded86396cbce0a6&amp;version=nightly&amp;mode=debug&amp;edition=2015</a></p>",
        "id": 129106997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741803
    },
    {
        "content": "<p>ah, I see it</p>",
        "id": 129107004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741820
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/4af9132a022ebe4111395139d1a4e45e285d299a/src/libsyntax/feature_gate.rs#L1192-L1196\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/4af9132a022ebe4111395139d1a4e45e285d299a/src/libsyntax/feature_gate.rs#L1192-L1196\">right here</a></p>",
        "id": 129107007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741832
    },
    {
        "content": "<p>ok</p>",
        "id": 129107049,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741862
    },
    {
        "content": "<p>anyway ...</p>",
        "id": 129107052,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what do you think I should do?</p>",
        "id": 129107055,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741885
    },
    {
        "content": "<p>I think you should just leave it :) I apologize for sending you on a wild goose chase</p>",
        "id": 129107059,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741896
    },
    {
        "content": "<p>no worries</p>",
        "id": 129107065,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741903
    },
    {
        "content": "<p>but I mean as high level</p>",
        "id": 129107070,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741909
    },
    {
        "content": "<p>but I think that we can feel free to tweak the logic around it</p>",
        "id": 129107071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741911
    },
    {
        "content": "<p>in particular, I would modify the tests that use it (there are like 4)</p>",
        "id": 129107074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741919
    },
    {
        "content": "<p>to have <code>#![feature(nll)]</code></p>",
        "id": 129107076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741922
    },
    {
        "content": "<p>and say that it does not affect whether MIR borowck gets used or not</p>",
        "id": 129107081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741928
    },
    {
        "content": "<p>it's only there for this <code>rustc_peek</code> stuff</p>",
        "id": 129107084,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741938
    },
    {
        "content": "<p>actually</p>",
        "id": 129107088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741953
    },
    {
        "content": "<p>all of that code <em>also</em> uses <code>#[rustc_mir(...)]</code></p>",
        "id": 129107089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741960
    },
    {
        "content": "<p>so <em>that</em> could be the attribute we use to gate that stuff</p>",
        "id": 129107128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741966
    },
    {
        "content": "<p>see e.g. src/test/compile-fail/mir-dataflow/uninits-1.rs</p>",
        "id": 129107130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530741977
    },
    {
        "content": "<p>yes</p>",
        "id": 129107132,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530741995
    },
    {
        "content": "<p>in which case I think we shoudl remove it again :)</p>",
        "id": 129107140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742007
    },
    {
        "content": "<p>you want to change all that and use just feature(nll)?</p>",
        "id": 129107141,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742010
    },
    {
        "content": "<p>I mostly didn't want to remove the unit testing stuff</p>",
        "id": 129107143,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742013
    },
    {
        "content": "<p>just as a simplification</p>",
        "id": 129107148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742023
    },
    {
        "content": "<p>this logic is complex enough</p>",
        "id": 129107155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742027
    },
    {
        "content": "<p>without adding add'l attributes in there</p>",
        "id": 129107157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742031
    },
    {
        "content": "<p>but if we change to feature(nll) we won't use the test anymore</p>",
        "id": 129107158,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742038
    },
    {
        "content": "<p>the unit test</p>",
        "id": 129107159,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742042
    },
    {
        "content": "<p>why?</p>",
        "id": 129107161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742044
    },
    {
        "content": "<p>the peek thing</p>",
        "id": 129107164,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742048
    },
    {
        "content": "<p>I mean you also have to modify that peek code</p>",
        "id": 129107166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742051
    },
    {
        "content": "<p>not to look for <code>#![rustc_mir_borrowck]</code> but instead to look for <code>#![rustc_mir]</code></p>",
        "id": 129107168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742062
    },
    {
        "content": "<p>I see</p>",
        "id": 129107171,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742076
    },
    {
        "content": "<p>ok</p>",
        "id": 129107173,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742078
    },
    {
        "content": "<p>that's the first thing to do</p>",
        "id": 129107206,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742083
    },
    {
        "content": "<p>then I can make borrowck ast not run when borrowck=mir</p>",
        "id": 129107215,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742104
    },
    {
        "content": "<p>just change <code>if !tcx.has_attr(def_id, \"rustc_mir_borrowck\")</code> to <code>if !tcx.has_attr(def_id, \"rustc_mir\")</code></p>",
        "id": 129107216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742107
    },
    {
        "content": "<p>cool :)</p>",
        "id": 129107218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742115
    },
    {
        "content": "<p>and then tackle the issue I guess :)</p>",
        "id": 129107220,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530742122
    },
    {
        "content": "<p>heh :)</p>",
        "id": 129107222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530742128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can't make <code>cancel_if_wrong_origin</code> modify <code>BorrowckCtxt</code></p>",
        "id": 129115718,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530761362
    },
    {
        "content": "<p>to make that happen I'd need to implement <code>BorrowckErrors</code> for <code>&amp;mut BorrowckCtxt</code></p>",
        "id": 129115760,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530761407
    },
    {
        "content": "<p>and that's not possible because <code>&amp;mut BorrowckCtxt</code> doesn't satisfy <code>Copy</code></p>",
        "id": 129115764,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530761430
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0277]: the trait bound `&amp;&#39;a mut borrowck::BorrowckCtxt&lt;&#39;b, &#39;tcx&gt;: std::marker::Copy` is not satisfied\n   --&gt; librustc_borrowck/borrowck/mod.rs:282:24\n    |\n282 | impl&lt;&#39;a, &#39;b, &#39;tcx: &#39;b&gt; BorrowckErrors&lt;&#39;a&gt; for &amp;&#39;a mut BorrowckCtxt&lt;&#39;b, &#39;tcx&gt; {\n    |                        ^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `&amp;&#39;a mut borrowck::BorrowckCtxt&lt;&#39;b, &#39;tcx&gt;`\n</pre></div>",
        "id": 129115765,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530761435
    },
    {
        "content": "<p>what about something like ...</p>",
        "id": 129116322,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530762662
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    // (Mir-)Borrowck uses `mir_validated`, so we have to force it to\n    // execute before we can steal.\n    let _ = tcx.mir_borrowck(def_id);\n\n    if let Some(_) = tcx.sess.diagnostic().get_code() {\n        let _ = tcx.borrowck(def_id);\n    }\n</pre></div>",
        "id": 129116325,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530762666
    },
    {
        "content": "<p>will check this out tomorrow</p>",
        "id": 129116326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530762672
    },
    {
        "content": "<p>unsure if all errors have codes...</p>",
        "id": 129116377,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530762828
    },
    {
        "content": "<p>well I guess I'd need to push the flag to <code>diagnostic</code> and done</p>",
        "id": 129116494,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530763049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> will check tomorrow if you have any suggestion</p>",
        "id": 129116496,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530763068
    },
    {
        "content": "<p>last thing, now I wonder if <code>if self.tcx.sess.has_errors() {</code> doesn't do the trick</p>",
        "id": 129116889,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530763807
    },
    {
        "content": "<blockquote>\n<p>last thing, now I wonder if <code>if self.tcx.sess.has_errors() {</code> doesn't do the trick</p>\n</blockquote>\n<p>well, that will be a bit \"crude\" — i.e., the errors could've come from anywhere</p>",
        "id": 129129358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530786005
    },
    {
        "content": "<p>let me look at the code a bit more closely :)</p>",
        "id": 129129366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530786010
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you could use a <code>Cell</code></p>",
        "id": 129129430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530786089
    },
    {
        "content": "<p>however, I wonder why it has that <code>Copy</code> bound</p>",
        "id": 129129436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530786103
    },
    {
        "content": "<p>oh, I sort of remember this</p>",
        "id": 129129438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530786117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I would add a <code>Cell</code>; that type already has a <code>RefCell</code> in it</p>",
        "id": 129129482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530786179
    },
    {
        "content": "<p>e.g.,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">BorrowckCtxt</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;tcx</span>: <span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tcx</span>: <span class=\"nc\">TyCtxt</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;tcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// tables for the current thing we are checking; set to</span>\n<span class=\"w\">    </span><span class=\"c1\">// Some in `borrowck_fn` and cleared later</span>\n<span class=\"w\">    </span><span class=\"n\">tables</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;a</span><span class=\"w\"> </span><span class=\"n\">ty</span>::<span class=\"n\">TypeckTables</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">region_scope_tree</span>: <span class=\"nc\">Lrc</span><span class=\"o\">&lt;</span><span class=\"n\">region</span>::<span class=\"n\">ScopeTree</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">owner_def_id</span>: <span class=\"nc\">DefId</span><span class=\"p\">,</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">body</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;tcx</span><span class=\"w\"> </span><span class=\"n\">hir</span>::<span class=\"n\">Body</span><span class=\"p\">,</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">errors_reported</span>: <span class=\"nc\">Cell</span><span class=\"o\">&lt;</span><span class=\"kt\">bool</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// &lt;-- added this!</span>\n\n<span class=\"w\">    </span><span class=\"n\">used_mut_nodes</span>: <span class=\"nc\">RefCell</span><span class=\"o\">&lt;</span><span class=\"n\">FxHashSet</span><span class=\"o\">&lt;</span><span class=\"n\">HirId</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 129129491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530786202
    },
    {
        "content": "<p>so ...</p>",
        "id": 129147846,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807371
    },
    {
        "content": "<p><code>cancel_if_wrong_origin</code> is defined on both <code>TyCtxt</code> and <code>BorrowckCtxt</code></p>",
        "id": 129147865,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807407
    },
    {
        "content": "<p>it seems that AST borrow checker uses the one in <code>BorrowckCtxt</code> and MIR borrow checker uses the one in <code>TyCtxt</code></p>",
        "id": 129147887,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807439
    },
    {
        "content": "<p>for the first thing I need to do is to skip AST borrow check if MIR borrow check accepts the code</p>",
        "id": 129147901,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807471
    },
    {
        "content": "<p>should I add the flag to <code>TyCtxt</code>?</p>",
        "id": 129147941,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807483
    },
    {
        "content": "<p>it's seems to me like polluting things a lot with stuff</p>",
        "id": 129147958,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807499
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> unsure what you think about it</p>",
        "id": 129147963,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807506
    },
    {
        "content": "<p>and unsure why we don't have a borrow check context for MIR</p>",
        "id": 129147987,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530807531
    },
    {
        "content": "<blockquote>\n<p>should I add the flag to <code>TyCtxt</code>?</p>\n</blockquote>\n<p>definitely not</p>",
        "id": 129148758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530808340
    },
    {
        "content": "<p>hmm I think what we should do with the MIR errors</p>",
        "id": 129148770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530808354
    },
    {
        "content": "<p>is buffer them somehow</p>",
        "id": 129148774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530808364
    },
    {
        "content": "<p>MIR errors should never \"cancel\"</p>",
        "id": 129148778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530808370
    },
    {
        "content": "<p>but they may need to be converted to lints</p>",
        "id": 129148781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530808377
    },
    {
        "content": "<p>did you make progress on not running AST when in borrowck=mir mode?</p>",
        "id": 129148795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530808397
    },
    {
        "content": "<p>ok</p>",
        "id": 129149159,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530808858
    },
    {
        "content": "<p>I guess I can make just that change and push</p>",
        "id": 129149166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530808867
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>-    let _ = tcx.borrowck(def_id);\n+\n+    if tcx.borrowck_mode() != BorrowckMode::Mir {\n+        let _ = tcx.borrowck(def_id);\n+    }\n</pre></div>",
        "id": 129149457,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530809199
    },
    {
        "content": "<p>naively did this</p>",
        "id": 129149461,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530809204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is there something else to consider?</p>",
        "id": 129149468,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530809213
    },
    {
        "content": "<p>I'm compiling and going to run tests</p>",
        "id": 129149475,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530809221
    },
    {
        "content": "<p>well I can make that less hacky</p>",
        "id": 129149498,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530809249
    },
    {
        "content": "<p>I guess I should change use_ast() fn to check for that</p>",
        "id": 129149518,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530809272
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I would add an assertion in the AST borrowck the borrowck mode is not <code>Mir</code>. Then we'll find out if there is something else to consider. :)</p>",
        "id": 129150302,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530810149
    },
    {
        "content": "<p>done!</p>",
        "id": 129150411,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530810339
    },
    {
        "content": "<p>nice</p>",
        "id": 129150473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530810399
    },
    {
        "content": "<p>and everything fails</p>",
        "id": 129150900,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530810930
    },
    {
        "content": "<p>hehe</p>",
        "id": 129150901,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530810932
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> rustc::ty::query::__query_compute::borrowck calls the old borrowck</p>",
        "id": 129151861,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812065
    },
    {
        "content": "<p>investigating</p>",
        "id": 129151864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812067
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> that is just the query wrapper -- who calls <em>that</em> ?</p>",
        "id": 129151911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812143
    },
    {
        "content": "<p><code>   9:     0x7fbbeb5df69c - rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors&lt;'tcx&gt; for rustc::ty::query::queries::borrowck&lt;'tcx&gt;&gt;::compute::h79b1dcd73cb26cfd</code></p>",
        "id": 129151982,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812183
    },
    {
        "content": "<p>I see</p>",
        "id": 129152124,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812290
    },
    {
        "content": "<p>check_crate is the thing</p>",
        "id": 129152130,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812295
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>pub fn check_crate&lt;&#39;a, &#39;tcx&gt;(tcx: TyCtxt&lt;&#39;a, &#39;tcx, &#39;tcx&gt;) {\n    tcx.par_body_owners(|body_owner_def_id| {\n        tcx.borrowck(body_owner_def_id);\n    });\n}\n</pre></div>",
        "id": 129152139,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812307
    },
    {
        "content": "<p>makes sense</p>",
        "id": 129152153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812333
    },
    {
        "content": "<p>we should also not call that :)</p>",
        "id": 129152156,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812336
    },
    {
        "content": "<p>explain :)</p>",
        "id": 129152166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812344
    },
    {
        "content": "<p>what does this do?</p>",
        "id": 129152179,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812354
    },
    {
        "content": "<p>it invokes borrowck on every function</p>",
        "id": 129152263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812417
    },
    {
        "content": "<p>that basically makes sure that borrowck is run</p>",
        "id": 129152270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812426
    },
    {
        "content": "<p>before compilation completes</p>",
        "id": 129152278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812431
    },
    {
        "content": "<p>why is called check_crate if it does that?</p>",
        "id": 129152297,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812451
    },
    {
        "content": "<p>and why that's not relevant on mir mode?</p>",
        "id": 129152322,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812477
    },
    {
        "content": "<blockquote>\n<p>why is called check_crate if it does that?</p>\n</blockquote>\n<p>because that is what \"check crate\" means?</p>",
        "id": 129152456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812598
    },
    {
        "content": "<p>that is, it checks the whole crate</p>",
        "id": 129152459,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812601
    },
    {
        "content": "<p>(which is done by checking all the functions in the crate)</p>",
        "id": 129152463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812607
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129152468,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812615
    },
    {
        "content": "<blockquote>\n<p>and why that's not relevant on mir mode?</p>\n</blockquote>\n<p>because it is running the AST borrowck</p>",
        "id": 129152470,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812615
    },
    {
        "content": "<p>we have a similar function for MIR borrowck already I think</p>",
        "id": 129152475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812623
    },
    {
        "content": "<p>ahh ok ok</p>",
        "id": 129152482,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812631
    },
    {
        "content": "<p>ok, we don't have a <em>function</em> but the code is inlined into the driver</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">            </span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"n\">sess</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                 </span><span class=\"s\">&quot;MIR borrow checking&quot;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                 </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">par_body_owners</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">def_id</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">mir_borrowck</span><span class=\"p\">(</span><span class=\"n\">def_id</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"p\">}));</span><span class=\"w\"></span>\n</pre></div>",
        "id": 129152533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530812657
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129152698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530812849
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> btw, shouldn't we do the same on ast mode?</p>",
        "id": 129153565,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813741
    },
    {
        "content": "<p>I mean, avoid executing mir borrowck when mode=ast</p>",
        "id": 129153579,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813756
    },
    {
        "content": "<p>mode=ast only ast borrowck<br>\nmode=mir only mir borrowck<br>\nmode=compare both<br>\nmode=migrate both</p>",
        "id": 129153603,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813780
    },
    {
        "content": "<p>probably. we already just \"skip over\" MIR borrowck in  that case though</p>",
        "id": 129153638,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813821
    },
    {
        "content": "<p>I know is not that important but if someone for perf reasons meanwhile this thing is shaped or something want to avoid nll I guess it's possible to do that</p>",
        "id": 129153641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813822
    },
    {
        "content": "<p>but it'd probably be cleaner to never invoke the query to begin with, if it's easy to do</p>",
        "id": 129153653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813833
    },
    {
        "content": "<blockquote>\n<p>but it'd probably be cleaner to never invoke the query to begin with, if it's easy to do</p>\n</blockquote>\n<p>explain the meaning of this, please :)</p>",
        "id": 129153724,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813875
    },
    {
        "content": "<p>querys? how does the thing work more or less?</p>",
        "id": 129153735,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813897
    },
    {
        "content": "<p>I guess what you mean but want more info</p>",
        "id": 129153753,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813917
    },
    {
        "content": "<p>you probably meant that this is called several times and structures collected are memoized</p>",
        "id": 129153760,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813934
    },
    {
        "content": "<p>so on different calls you will get memoized results</p>",
        "id": 129153770,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813945
    },
    {
        "content": "<p>I guess what you're talking about is something like that (?)</p>",
        "id": 129153810,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530813963
    },
    {
        "content": "<p>I'm not sure what you want me to explain :)</p>",
        "id": 129153896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814041
    },
    {
        "content": "<p>there is a <code>mir_borrowck</code> query</p>",
        "id": 129153898,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814046
    },
    {
        "content": "<p>it is invoked from a few places</p>",
        "id": 129153899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814050
    },
    {
        "content": "<p>right now, we <em>always</em> invoke the query, but sometimes it does nothing</p>",
        "id": 129153904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814056
    },
    {
        "content": "<p>we've been modifying the ast-borrowck so that the query is only invoked if it is needed</p>",
        "id": 129153910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814071
    },
    {
        "content": "<p>I don't think we <em>have</em> to do the same for MIR</p>",
        "id": 129153916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814080
    },
    {
        "content": "<p>but we could</p>",
        "id": 129153917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814081
    },
    {
        "content": "<p>the reason it was important for AST is because -- in the migration mode --</p>",
        "id": 129153959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814089
    },
    {
        "content": "<p>we want to be able to run the MIR and only run the AST borrowck <strong>for those functions that need it</strong></p>",
        "id": 129153966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814105
    },
    {
        "content": "<p>so if we are always invoking it on <strong>all functions</strong> (as we do now)</p>",
        "id": 129153971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814112
    },
    {
        "content": "<p>that won't work</p>",
        "id": 129153973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814114
    },
    {
        "content": "<p>yeah, was just surprised that you called that a query :)</p>",
        "id": 129153986,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814140
    },
    {
        "content": "<p>I guess there are reasons for that, that I don't see</p>",
        "id": 129154045,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <a href=\"https://rust-lang-nursery.github.io/rustc-guide/query.html\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/query.html\">https://rust-lang-nursery.github.io/rustc-guide/query.html</a></p>",
        "id": 129154392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814513
    },
    {
        "content": "<p>I mean a very specific thing by query</p>",
        "id": 129154398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814518
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I don't know why I never read the rustc-guide :(</p>",
        "id": 129154547,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814669
    },
    {
        "content": "<p>it's in my todo list</p>",
        "id": 129154549,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814672
    },
    {
        "content": "<p>it takes time :/</p>",
        "id": 129154587,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814684
    },
    {
        "content": "<p>should I open a PR with just this?</p>",
        "id": 129154596,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814689
    },
    {
        "content": "<p>or land all at once?</p>",
        "id": 129154600,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814693
    },
    {
        "content": "<p>I would say yes</p>",
        "id": 129154601,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814694
    },
    {
        "content": "<p>it may be a perf win :)</p>",
        "id": 129154605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814698
    },
    {
        "content": "<p>probably a small one</p>",
        "id": 129154610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/52083\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52083\">https://github.com/rust-lang/rust/pull/52083</a></p>",
        "id": 129154633,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814727
    },
    {
        "content": "<p>would this be small?</p>",
        "id": 129154638,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814736
    },
    {
        "content": "<p>I thought it was going to be huge</p>",
        "id": 129154641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814745
    },
    {
        "content": "<p>I mean, skipping the whole AST borrowck ...</p>",
        "id": 129154648,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814754
    },
    {
        "content": "<p>the AST borrowck is pretty fast :)</p>",
        "id": 129154791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814875
    },
    {
        "content": "<p>ok :)</p>",
        "id": 129154813,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814911
    },
    {
        "content": "<p>btw, 2 stderr files changed in here <a href=\"https://github.com/rust-lang/rust/pull/52083\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52083\">https://github.com/rust-lang/rust/pull/52083</a></p>",
        "id": 129154854,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814923
    },
    {
        "content": "<p>unsure why</p>",
        "id": 129154858,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814926
    },
    {
        "content": "<p>changes doesn't have any semantic</p>",
        "id": 129154870,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814940
    },
    {
        "content": "<p>just moved a couple of lines around</p>",
        "id": 129154876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814947
    },
    {
        "content": "<p>also seems better now :P</p>",
        "id": 129154881,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814952
    },
    {
        "content": "<p>but unsure what made that happen</p>",
        "id": 129154886,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530814956
    },
    {
        "content": "<p>yeah, must be some change in evaluation order, seems ok</p>",
        "id": 129154915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814990
    },
    {
        "content": "<p>I left one nit</p>",
        "id": 129154919,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530814991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> actually what I did is wrong</p>",
        "id": 129155073,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530815139
    },
    {
        "content": "<p>that should be <code>assert!(tcx.use_ast_borrowck())</code></p>",
        "id": 129155166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530815188
    },
    {
        "content": "<p>use_ast_borrowck() consider the match already</p>",
        "id": 129155179,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530815199
    },
    {
        "content": "<p>good point</p>",
        "id": 129155185,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815203
    },
    {
        "content": "<p>and does the right thing</p>",
        "id": 129155188,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530815204
    },
    {
        "content": "<p>yes, seems better</p>",
        "id": 129155192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815210
    },
    {
        "content": "<p>so .. now</p>",
        "id": 129155243,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530815263
    },
    {
        "content": "<p>how to tackle the migrate thing?</p>",
        "id": 129155252,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530815276
    },
    {
        "content": "<p>hmm ok so</p>",
        "id": 129155330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815336
    },
    {
        "content": "<p>one first step might be</p>",
        "id": 129155343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815352
    },
    {
        "content": "<p>to modify the MIR borrowck</p>",
        "id": 129155346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815354
    },
    {
        "content": "<p>so that instead of emitting the errors right away</p>",
        "id": 129155348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815359
    },
    {
        "content": "<p>it buffers them up (per function)</p>",
        "id": 129155352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815362
    },
    {
        "content": "<p>and then emits them at the end</p>",
        "id": 129155354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815366
    },
    {
        "content": "<p>though I suppose that isn't .. <em>strictly</em> needed</p>",
        "id": 129155366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815378
    },
    {
        "content": "<p>I could see two ways of going about things</p>",
        "id": 129155375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815392
    },
    {
        "content": "<p>in one version, we buffer up the errors</p>",
        "id": 129155380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815395
    },
    {
        "content": "<p>and then if that buffer is non-empty, we run the AST borrowck</p>",
        "id": 129155420,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815403
    },
    {
        "content": "<p>and if it comes back with errors</p>",
        "id": 129155432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815409
    },
    {
        "content": "<p>(which we suppress)</p>",
        "id": 129155436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815412
    },
    {
        "content": "<p>then we emit the errors from the buffer</p>",
        "id": 129155445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815419
    },
    {
        "content": "<p>else we go back over them</p>",
        "id": 129155449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815422
    },
    {
        "content": "<p>and convert them to warnings</p>",
        "id": 129155453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815426
    },
    {
        "content": "<p>and emit them</p>",
        "id": 129155455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815426
    },
    {
        "content": "<p>another way to do it though</p>",
        "id": 129155457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815430
    },
    {
        "content": "<p>would be that when we are about to emit an error</p>",
        "id": 129155465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815444
    },
    {
        "content": "<p>we run the AST borrowck just as before</p>",
        "id": 129155471,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815450
    },
    {
        "content": "<p>and convert that pending error to a warning if the AST borrowck gets no errors</p>",
        "id": 129155490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815469
    },
    {
        "content": "<p>point is, we don't buffer, we just invoke the AST borrowck <strong>for each error</strong> as we are emitting it</p>",
        "id": 129155495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815479
    },
    {
        "content": "<p>since it is memoized</p>",
        "id": 129155496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815482
    },
    {
        "content": "<p>that won't really cost anything</p>",
        "id": 129155498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815485
    },
    {
        "content": "<p>I guess either way the <strong>very first</strong> step is to add a Migrate mode</p>",
        "id": 129155506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815496
    },
    {
        "content": "<p>and to modify the AST borrowck</p>",
        "id": 129155507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815499
    },
    {
        "content": "<p>er, wait</p>",
        "id": 129155517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815507
    },
    {
        "content": "<p>well, yes</p>",
        "id": 129155520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815509
    },
    {
        "content": "<p>and modify the AST borrowck so that it includes a boolean flag</p>",
        "id": 129155525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815516
    },
    {
        "content": "<p>indicating whether any errors occurred</p>",
        "id": 129155529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815519
    },
    {
        "content": "<p>actually maybe <em>just</em> add that flag :)</p>",
        "id": 129155575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815529
    },
    {
        "content": "<p>that's at least an initial commit</p>",
        "id": 129155577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815535
    },
    {
        "content": "<p>make sense?</p>",
        "id": 129155581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530815537
    },
    {
        "content": "<p>brewing coffee <span class=\"emoji emoji-1f603\" title=\"smiley\">:smiley:</span>, as soon as I have my <span class=\"emoji emoji-2615\" title=\"coffee\">:coffee:</span>️ will check this</p>",
        "id": 129155895,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530815819
    },
    {
        "content": "<p>I would never come between a person and their <span class=\"emoji emoji-2615\" title=\"coffee\">:coffee:</span></p>",
        "id": 129156090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530816004
    },
    {
        "content": "<p>and it's also cold here, so I needed something hot to warm myself a bit :)</p>",
        "id": 129157963,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530817798
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> back, so read it and the reasoning makes sense</p>",
        "id": 129158949,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818824
    },
    {
        "content": "<p>didn't understand 100% the steps</p>",
        "id": 129158959,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818834
    },
    {
        "content": "<p>but first of all</p>",
        "id": 129158961,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818837
    },
    {
        "content": "<p>I think I would go for the non-buffering version</p>",
        "id": 129158962,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818838
    },
    {
        "content": "<p>seems easier</p>",
        "id": 129158963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818839
    },
    {
        "content": "<p>ahh ok, I was going to ask that</p>",
        "id": 129158967,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818849
    },
    {
        "content": "<p>I was going to go with the buffered version :P</p>",
        "id": 129158975,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818861
    },
    {
        "content": "<p>yeah seems easier, but doesn't seem better</p>",
        "id": 129158985,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818875
    },
    {
        "content": "<p>to me the first approach seems cleaner</p>",
        "id": 129159031,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818898
    },
    {
        "content": "<p>I don't have a strong opinion =) I'd be ok w/ buffering</p>",
        "id": 129159047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818918
    },
    {
        "content": "<p>anyway I can go with the non-buffering and we could revisit at some point</p>",
        "id": 129159050,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818920
    },
    {
        "content": "<p>I see some advantages to that too</p>",
        "id": 129159051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818921
    },
    {
        "content": "<p>in particular, we might be able to combine errors later on</p>",
        "id": 129159055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818927
    },
    {
        "content": "<p>so maybe it's a useful refactoring</p>",
        "id": 129159061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818937
    },
    {
        "content": "<p>yeah</p>",
        "id": 129159062,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818938
    },
    {
        "content": "<p>down the road</p>",
        "id": 129159065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818939
    },
    {
        "content": "<p>might also be helpful for supressing duplicates etc</p>",
        "id": 129159074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818949
    },
    {
        "content": "<p>unsure how much do we need to change</p>",
        "id": 129159079,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818953
    },
    {
        "content": "<p>:P</p>",
        "id": 129159091,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818962
    },
    {
        "content": "<p>probably not very much</p>",
        "id": 129159092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818963
    },
    {
        "content": "<p>ok, let's do it then :)</p>",
        "id": 129159101,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818973
    },
    {
        "content": "<p>but I have to look</p>",
        "id": 129159103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530818975
    },
    {
        "content": "<p>let me ask you some questions because I have no idea of things, hehe :P</p>",
        "id": 129159115,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530818998
    },
    {
        "content": "<p>we already have these <code>DiagnosticBuilder&lt;'_&gt;</code> things that represent messages</p>",
        "id": 129159118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819001
    },
    {
        "content": "<p>I mean, what needs to be done is completely clear</p>",
        "id": 129159171,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819009
    },
    {
        "content": "<p>the thing is where are the things</p>",
        "id": 129159174,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819014
    },
    {
        "content": "<p>where stuff is happening</p>",
        "id": 129159180,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819018
    },
    {
        "content": "<p>etc</p>",
        "id": 129159181,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819019
    },
    {
        "content": "<p>so ...</p>",
        "id": 129159184,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819020
    },
    {
        "content": "<p>probably the <em>very first</em> step</p>",
        "id": 129159190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819028
    },
    {
        "content": "<p>is modifying the AST borrowck</p>",
        "id": 129159194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819033
    },
    {
        "content": "<p>to record whether it had any errors</p>",
        "id": 129159200,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819041
    },
    {
        "content": "<p>which is I think just a few lines :)</p>",
        "id": 129159202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819045
    },
    {
        "content": "<p>basically adding a <code>error_count: Cell&lt;usize&gt;</code> and having that method do <code>error_count.set(error_count.get() + 1)</code></p>",
        "id": 129159209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819063
    },
    {
        "content": "<p>yep</p>",
        "id": 129159223,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819079
    },
    {
        "content": "<p>I've code like that already stashed</p>",
        "id": 129159226,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819087
    },
    {
        "content": "<p>ok</p>",
        "id": 129159230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819094
    },
    {
        "content": "<p>in that case the next thing I would imagine is to setup the buffering</p>",
        "id": 129159231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819099
    },
    {
        "content": "<p>without changing existing behavior</p>",
        "id": 129159234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819103
    },
    {
        "content": "<p>in the MIR borrow check I mean</p>",
        "id": 129159240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819120
    },
    {
        "content": "<p>yeah yeah</p>",
        "id": 129159283,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819132
    },
    {
        "content": "<p>the buffering happens there, yeah</p>",
        "id": 129159289,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819137
    },
    {
        "content": "<p>the thing is ... where are currently stored errors?</p>",
        "id": 129159298,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819156
    },
    {
        "content": "<p>through diagnostic(s)?</p>",
        "id": 129159307,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530819173
    },
    {
        "content": "<p>we don't store errors today</p>",
        "id": 129159998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530819990
    },
    {
        "content": "<p>we emit them and forget about them</p>",
        "id": 129160009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820000
    },
    {
        "content": "<p>ok, so I should make emit not emit and store them?</p>",
        "id": 129160033,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530820028
    },
    {
        "content": "<p>and change emit name to store :P</p>",
        "id": 129160038,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530820034
    },
    {
        "content": "<p>or something</p>",
        "id": 129160040,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530820039
    },
    {
        "content": "<p>and then search for a place very late in the process to call a real emit thing</p>",
        "id": 129160046,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530820057
    },
    {
        "content": "<p>if you want to buffer them, they need to be put into a vector</p>",
        "id": 129160239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820307
    },
    {
        "content": "<p>and then at the end we would iterate over and invoke <code>emit()</code></p>",
        "id": 129160248,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> here is an <a href=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L179-L199\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L179-L199\">example of the code</a></p>",
        "id": 129160435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820485
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L186\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L186\">we create the error here</a></p>",
        "id": 129160449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820498
    },
    {
        "content": "<p>and <a href=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L198\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L198\">emit here</a></p>",
        "id": 129160460,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820510
    },
    {
        "content": "<p>so we could hold off on that final call to <code>emit()</code></p>",
        "id": 129160477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820534
    },
    {
        "content": "<p>they ought to have the type <code>DiagnosticBuilder&lt;'cx&gt;</code></p>",
        "id": 129160571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530820609
    },
    {
        "content": "<p>ok will check all this in a bit</p>",
        "id": 129160752,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530820799
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> looks like a <a href=\"https://perf.rust-lang.org/compare.html?start=94eb1760551096363ec04e42367b6b195592dbd8&amp;end=b27d9cfa4975b93430620cf0b8afc21d4a169fee\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=94eb1760551096363ec04e42367b6b195592dbd8&amp;end=b27d9cfa4975b93430620cf0b8afc21d4a169fee\">decent perf win</a> from your PR :)</p>",
        "id": 129170295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530831742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> tackling this now</p>",
        "id": 129221638,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907390
    },
    {
        "content": "<p>so ...</p>",
        "id": 129221641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907392
    },
    {
        "content": "<p>I understood your comment about this code <a href=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L179-L199\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L179-L199\">https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/error_reporting.rs#L179-L199</a></p>",
        "id": 129221648,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907409
    },
    {
        "content": "<p>basically, I should put the err on a buffer</p>",
        "id": 129221652,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907425
    },
    {
        "content": "<p>and remove the emit</p>",
        "id": 129221657,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907430
    },
    {
        "content": "<p>my question is ... when is that last moment in time where I should emit?</p>",
        "id": 129221662,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907442
    },
    {
        "content": "<p>like, when do you iterate over that buffer?</p>",
        "id": 129221708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907462
    },
    {
        "content": "<p>yes</p>",
        "id": 129221719,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907478
    },
    {
        "content": "<p>at some point I should iterate and call emit over all the errs</p>",
        "id": 129221730,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907494
    },
    {
        "content": "<p>but when is a good moment to do that</p>",
        "id": 129221739,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907504
    },
    {
        "content": "<p>somewhere around <a href=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/mod.rs#L322\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/mod.rs#L322\">the end of <code>do_mir_borrowck</code></a>, I guess</p>",
        "id": 129221747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907512
    },
    {
        "content": "<p>ok</p>",
        "id": 129221760,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907521
    },
    {
        "content": "<p>also ... you wanted me to split this in some way? or just do all at once?</p>",
        "id": 129221772,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907544
    },
    {
        "content": "<p>split what?</p>",
        "id": 129221777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907550
    },
    {
        "content": "<p>oh</p>",
        "id": 129221779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907553
    },
    {
        "content": "<p>I meant, I remember you talking about the option on one side</p>",
        "id": 129221784,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907559
    },
    {
        "content": "<p>I'd probably do a \"buffer\" step that doesn't change anything else</p>",
        "id": 129221822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907564
    },
    {
        "content": "<p>and this thing on the other side</p>",
        "id": 129221823,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907565
    },
    {
        "content": "<p>ok</p>",
        "id": 129221832,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907577
    },
    {
        "content": "<p>well we were discussing whether to buffer or not</p>",
        "id": 129221833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907577
    },
    {
        "content": "<p>I think the \"commits\" (maybe PRs?) are:</p>\n<ul>\n<li>modify MIR borrowck to buffer up errors</li>\n<li>add a flag to AST borowck so that it indicates whether it got errors or not in the result of its query (without necessarily emitting them)</li>\n<li>combine those two?</li>\n</ul>",
        "id": 129221864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907615
    },
    {
        "content": "<p>ok</p>",
        "id": 129221902,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530907670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> all the errors of mir borrowck are the ones reported in src/librustc_mir</p>",
        "id": 129224868,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530910898
    },
    {
        "content": "<p>I was looking for <code>rg \"emit\\(\" src/librustc_mir</code> to start</p>",
        "id": 129224876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530910917
    },
    {
        "content": "<p>but unsure if all the stuff there is what's needed, investigating ...</p>",
        "id": 129224937,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530910948
    },
    {
        "content": "<p>for instance ...</p>",
        "id": 129224969,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530911016
    },
    {
        "content": "<p>what about <a href=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/move_errors.rs#L278\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/move_errors.rs#L278\">https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/move_errors.rs#L278</a> ?</p>",
        "id": 129224970,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530911018
    },
    {
        "content": "<blockquote>\n<p>all the errors of mir borrowck are the ones reported in src/librustc_mir</p>\n</blockquote>\n<p>I believe so, yes</p>",
        "id": 129225298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530911383
    },
    {
        "content": "<blockquote>\n<p>what about <a href=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/move_errors.rs#L278\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/move_errors.rs#L278\">https://github.com/rust-lang/rust/blob/94eb1760551096363ec04e42367b6b195592dbd8/src/librustc_mir/borrow_check/move_errors.rs#L278</a> ?</p>\n</blockquote>\n<p>that is also a borrowck error, yes</p>",
        "id": 129225308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530911398
    },
    {
        "content": "<p>there's a lot of stuff</p>",
        "id": 129225594,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530911757
    },
    {
        "content": "<p>there's no borrowckctxt there, though</p>",
        "id": 129225637,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530911773
    },
    {
        "content": "<p>I have the <code>MoveErrorCtxt</code></p>",
        "id": 129225656,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530911820
    },
    {
        "content": "<p>it's called from <code>report_move_errors</code> — maybe pass in an <code>&amp;mut Vec</code> there or something</p>",
        "id": 129226333,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530912679
    },
    {
        "content": "<p>yes, I can pass stuff around but when this kind of stuff happens it starts to feel hacky to me</p>",
        "id": 129228612,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530915194
    },
    {
        "content": "<p>but if you say it's good it's good :)</p>",
        "id": 129228615,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530915201
    },
    {
        "content": "<p>shouldn't most of these functions have also a more general purpose context?</p>",
        "id": 129228684,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530915252
    },
    {
        "content": "<p>I mean, besides from this particular context</p>",
        "id": 129228696,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530915272
    },
    {
        "content": "<p>I still don't know all the contexts that are around and their connections but in lot of cases happened something like this and we kept adding parameters to functions</p>",
        "id": 129228789,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530915395
    },
    {
        "content": "<p>maybe if all the functions receive some kind of compilation context or something kind of general</p>",
        "id": 129228799,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530915419
    },
    {
        "content": "<p>unsure ...</p>",
        "id": 129228801,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530915422
    },
    {
        "content": "<p>I don't know, both have their appeal. A \"master context\" means everything is less independent</p>",
        "id": 129229578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530916458
    },
    {
        "content": "<p>but in any case there is no such context at present</p>",
        "id": 129229583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530916469
    },
    {
        "content": "<p>you could also make the <code>MoveData</code> accumulate errors into an internal vector</p>",
        "id": 129229588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530916490
    },
    {
        "content": "<p>and then just return that vector</p>",
        "id": 129229589,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530916494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I'm planning to change to a mir borrowck context for move errors.</p>",
        "id": 129248666,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1530953643
    },
    {
        "content": "<p>cool, I guess in this issue I'm going to pass stuff around</p>",
        "id": 129261492,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530977990
    },
    {
        "content": "<p>then I guess we can move that inside the context when you add that context</p>",
        "id": 129261539,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530978006
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 129551812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418695
    },
    {
        "content": "<p>hi</p>",
        "id": 129551821,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418706
    },
    {
        "content": "<p>I assume a text-based chat in here is good</p>",
        "id": 129551822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418706
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129551832,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418715
    },
    {
        "content": "<p>so, I haven't attempted to look at your branch</p>",
        "id": 129551856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418738
    },
    {
        "content": "<p>so ... I was lacking a bit of time so I didn't make a lot of progress</p>",
        "id": 129551864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418746
    },
    {
        "content": "<p>(assuming its still the same branch as the one you shared)</p>",
        "id": 129551869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418748
    },
    {
        "content": "<p>yes</p>",
        "id": 129551877,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418753
    },
    {
        "content": "<p>okay. Lets just talk about where you are and where you want to go</p>",
        "id": 129551919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418763
    },
    {
        "content": "<p>current status is ...</p>",
        "id": 129551924,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418764
    },
    {
        "content": "<p>well basically the idea we discussed with Niko was ...</p>",
        "id": 129551951,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418788
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>- modify MIR borrowck to buffer up errors\n- add a flag to AST borowck so that it indicates whether it got errors or not in the result of its query (without necessarily emitting them)\n- combine those two?\n</pre></div>",
        "id": 129551954,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418790
    },
    {
        "content": "<p>I was modifying the MIR borrowck to buffer up errors</p>",
        "id": 129551964,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418806
    },
    {
        "content": "<p>have made that in a couple of places</p>",
        "id": 129551972,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418813
    },
    {
        "content": "<p>there's still some cases missing</p>",
        "id": 129551977,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418818
    },
    {
        "content": "<p>which I haven't looked at the code to see how hard it could be</p>",
        "id": 129551989,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418831
    },
    {
        "content": "<p>okay</p>",
        "id": 129552007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418849
    },
    {
        "content": "<p>mainly may lack the context in some specific areas</p>",
        "id": 129552012,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418852
    },
    {
        "content": "<p>I think after this, the rest should be easy</p>",
        "id": 129552023,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418864
    },
    {
        "content": "<p>and this may also be easy :P</p>",
        "id": 129552026,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418869
    },
    {
        "content": "<p>haven't checked properly yet</p>",
        "id": 129552033,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418875
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@archlinux rust1 (z-borrowck-migrate)]$ rg &quot;\\.emit\\(\\)&quot; src/librustc_mir\nsrc/librustc_mir/monomorphize/collector.rs\n514:        diag.emit();\n\nsrc/librustc_mir/transform/qualify_consts.rs\n178:            err.emit();\n198:            err.emit();\n485:                    err.emit()\n516:                                    err.emit();\n666:                            err.emit();\n763:                            err.emit();\n786:                        .emit();\n805:                    err.emit();\n936:                            err.emit();\n963:                    err.emit();\n1005:                            .emit();\n1058:                    err.emit();\n\nsrc/librustc_mir/transform/check_unsafety.rs\n432:    db.emit();\n475:                    .emit();\n\nsrc/librustc_mir/borrow_check/mod.rs\n294:        err.emit();\n327:                .emit();\n1365:                .emit();\n1883:        err.emit();\n\nsrc/librustc_mir/borrow_check/nll/mod.rs\n342:        err.emit();\n349:        err.emit();\n\nsrc/librustc_mir/hair/pattern/mod.rs\n391:                                err.emit();\n\nsrc/librustc_mir/hair/pattern/check_match.rs\n146:                    ).emit();\n152:                    ).emit();\n241:                    err.emit();\n304:            diag.emit();\n333:                        err.emit();\n390:                                        .emit();\n421:                                            .emit();\n441:                            err.emit();\n503:                .emit();\n537:                .emit();\n542:                .emit();\n548:                    .emit();\n606:                    .emit();\n617:                    .emit();\n648:                        .emit();\n\nsrc/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs\n257:        diag.emit();\n</pre></div>",
        "id": 129552075,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418889
    },
    {
        "content": "<p>is your latest status pushed to your repo up on github?</p>",
        "id": 129552079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418898
    },
    {
        "content": "<p>this ^^^ may show more or less the places where I need to change emit calls and buffer the stuff</p>",
        "id": 129552085,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418912
    },
    {
        "content": "<blockquote>\n<p>is your latest status pushed to your repo up on github?</p>\n</blockquote>\n<p>yes</p>",
        "id": 129552092,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418923
    },
    {
        "content": "<p>I'm going to continue now or in a few minutes with the task</p>",
        "id": 129552101,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418940
    },
    {
        "content": "<p>I'm not sure if you have any particular suggestion</p>",
        "id": 129552111,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531418947
    },
    {
        "content": "<p>well let me quickly look</p>",
        "id": 129552118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418958
    },
    {
        "content": "<p>the main thing I wanted to immediate check in about</p>",
        "id": 129552136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418966
    },
    {
        "content": "<p>was about that idea we had discussed</p>",
        "id": 129552141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531418973
    },
    {
        "content": "<p>about trying to make the replacement for the <code>emit()</code> calls look ... well, look something much like \"just another method call\" (but on a different receiving object)</p>",
        "id": 129552216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419021
    },
    {
        "content": "<p>yes, you talked about changing emit to signal</p>",
        "id": 129552242,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419061
    },
    {
        "content": "<p>The name didn't matter</p>",
        "id": 129552253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419069
    },
    {
        "content": "<p>which may emit or may buffer depending on some setting</p>",
        "id": 129552256,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419072
    },
    {
        "content": "<p>I'd be fine with <code>receiver.eventually_emit(..)</code></p>",
        "id": 129552264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419084
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129552272,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419092
    },
    {
        "content": "<p>I liked signal :P</p>",
        "id": 129552273,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419098
    },
    {
        "content": "<p>well unsure if it's the best name ...</p>",
        "id": 129552281,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419108
    },
    {
        "content": "<p>whatever you prefer</p>",
        "id": 129552285,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419111
    },
    {
        "content": "<p>signal is also fine; it just may not be a meaningful difference to some people</p>",
        "id": 129552289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419114
    },
    {
        "content": "<p>I see \"eventually emit\" as trying to express the idea that this <em>might be</em> delayed</p>",
        "id": 129552341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419133
    },
    {
        "content": "<p>can't discuss names, english is not my best ability :')</p>",
        "id": 129552342,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419136
    },
    {
        "content": "<p>ok, eventually_emit then :)</p>",
        "id": 129552349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419153
    },
    {
        "content": "<p>you convinced me quickly</p>",
        "id": 129552355,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419159
    },
    {
        "content": "<p>okay I see, you really are just doing <code>self.errors_buffer.push(err)</code>. Well, if that works then it should be easy to change it later</p>",
        "id": 129552361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419165
    },
    {
        "content": "<p>its up to you.</p>",
        "id": 129552367,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419171
    },
    {
        "content": "<p>so ... what if I just go ahead ... was going to say exactly that</p>",
        "id": 129552382,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419184
    },
    {
        "content": "<p>I think it would be easier to continue and leave that to another PR or same PR another commit</p>",
        "id": 129552396,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419206
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 129552405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419225
    },
    {
        "content": "<p>/me is still getting used to Zulip idioms</p>",
        "id": 129552452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419246
    },
    {
        "content": "<p>Okay from what I see in your branch, this looks good to me</p>",
        "id": 129552481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419281
    },
    {
        "content": "<p>hehe, I probably didn't get used yet :P</p>",
        "id": 129552489,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419285
    },
    {
        "content": "<p>ok, so ... I can just start to look around and in any case ask questions</p>",
        "id": 129552504,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419303
    },
    {
        "content": "<p>Ah</p>",
        "id": 129552521,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419313
    },
    {
        "content": "<p>I remember why you might want to do it as <code>eventually_emit</code> (or <code>signal</code> etc), now</p>",
        "id": 129552542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419329
    },
    {
        "content": "<p>if you do it as <code>recv.eventually_emit(..)</code> now, then you can truly retain the old \"immediately emit\" behavior by default and put the new behavior under a debugflag</p>",
        "id": 129552622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419367
    },
    {
        "content": "<p>that in turn will mean that you should be able to run the compiler test suite out of the box</p>",
        "id": 129552631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419377
    },
    {
        "content": "<p>Putting in buffering and buffering alone, via the <code>ctxt.errors_buffer.push(..)</code> style, will <em>force</em> you to actually figure out how to get those errors emitted</p>",
        "id": 129552710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419443
    },
    {
        "content": "<p>I see :)</p>",
        "id": 129552718,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419446
    },
    {
        "content": "<p>and either you'll figure out how to emit them in exactly the same way that they get emitted today</p>",
        "id": 129552734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419461
    },
    {
        "content": "<p>(which means all the tests will immediately pass)</p>",
        "id": 129552744,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419469
    },
    {
        "content": "<p>anyway, right now the changes are just buffer to call emit at the end</p>",
        "id": 129552748,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419474
    },
    {
        "content": "<p>or you'll have some changes in your output (even if its just in the order that errors are emitted)</p>",
        "id": 129552799,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419486
    },
    {
        "content": "<p>there's nothing changed</p>",
        "id": 129552801,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419486
    },
    {
        "content": "<p>and you'll then have to verify that those changes are correct</p>",
        "id": 129552812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419494
    },
    {
        "content": "<p>You sound quite confident that there won't be any visible effect</p>",
        "id": 129552835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419522
    },
    {
        "content": "<blockquote>\n<p>or you'll have some changes in your output (even if its just in the order that errors are emitted)</p>\n</blockquote>\n<p>the order should be the same, I'm doing FIFO</p>",
        "id": 129552840,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419530
    },
    {
        "content": "<p>I was under the impression that you didn't have anything building and thus nothing running yet</p>",
        "id": 129552854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419544
    },
    {
        "content": "<blockquote>\n<p>You sound quite confident that there won't be any visible effect</p>\n</blockquote>\n<p>hehe, I'm never that confident :P</p>",
        "id": 129552863,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419549
    },
    {
        "content": "<p>(and I've learned to not be quite so confident in such scenarios)</p>",
        "id": 129552873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419563
    },
    {
        "content": "<p>yeah</p>",
        "id": 129552882,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419569
    },
    {
        "content": "<p>agree on that</p>",
        "id": 129552884,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419571
    },
    {
        "content": "<p>but okay, yes I agree that FIFO order means that you shoudn't observer any change</p>",
        "id": 129552890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419576
    },
    {
        "content": "<p>anyway, let's see</p>",
        "id": 129552911,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419593
    },
    {
        "content": "<p>I will impact your changes for sure</p>",
        "id": 129552915,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419601
    },
    {
        "content": "<p>the main thing is that I don't want to delay this stuff</p>",
        "id": 129552964,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419612
    },
    {
        "content": "<p>which of my changes do you mean?</p>",
        "id": 129552966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419614
    },
    {
        "content": "<p>like changes to diagnostics?</p>",
        "id": 129552974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419623
    },
    {
        "content": "<p>the eventually_emit idea</p>",
        "id": 129552976,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419624
    },
    {
        "content": "<p>oh oh h</p>",
        "id": 129552979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419627
    },
    {
        "content": "<p>sooner or later I will do</p>",
        "id": 129552991,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419647
    },
    {
        "content": "<p>let me see what actually happens in code</p>",
        "id": 129552999,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419655
    },
    {
        "content": "<p>one might even say that you will \"eventually_incorporate\" them...</p>",
        "id": 129553011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419664
    },
    {
        "content": "<p>hehe :D</p>",
        "id": 129553026,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419672
    },
    {
        "content": "<p>okay great. the only other thing I would potentially want to discuss is what to do <em>after</em> this task is done</p>",
        "id": 129553043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419698
    },
    {
        "content": "<p>but I think the right strategy</p>",
        "id": 129553046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419703
    },
    {
        "content": "<p>will probably be to finish <em>this task</em></p>",
        "id": 129553051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419710
    },
    {
        "content": "<p>yes</p>",
        "id": 129553054,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419716
    },
    {
        "content": "<p>and get it landed in the github repo</p>",
        "id": 129553056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419717
    },
    {
        "content": "<p>agreed</p>",
        "id": 129553096,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419725
    },
    {
        "content": "<p>the remaining work I expect will be much less effort</p>",
        "id": 129553100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419728
    },
    {
        "content": "<p>I was thinking about jumping into perf stuff</p>",
        "id": 129553104,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419736
    },
    {
        "content": "<p>but you have more idea than I about what's more important</p>",
        "id": 129553121,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419763
    },
    {
        "content": "<p>great then I don't think there's much else we need to talk about. You can focus on finishing this up and I can go back to looking at the unrelated NLL diagnostic thing I was playing with today.</p>",
        "id": 129553123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419765
    },
    {
        "content": "<p>Oh, the perf stuff is very important</p>",
        "id": 129553127,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419774
    },
    {
        "content": "<p>I did say that this -Z borrowck=migrate is a blocker</p>",
        "id": 129553138,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419785
    },
    {
        "content": "<p>but I think once you get a PR up for this thing you have here</p>",
        "id": 129553144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419794
    },
    {
        "content": "<p>so after finishing this task will ping you to see what could be next</p>",
        "id": 129553145,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419794
    },
    {
        "content": "<p>then that will be really close to the finish line</p>",
        "id": 129553150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419803
    },
    {
        "content": "<p>sounds great</p>",
        "id": 129553152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419806
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129553158,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419811
    },
    {
        "content": "<p>thanks for sharing thoughts and ideas</p>",
        "id": 129553169,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419827
    },
    {
        "content": "<p>talk to you later</p>",
        "id": 129553171,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531419832
    },
    {
        "content": "<p>bye!</p>",
        "id": 129553470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531419956
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> giving you both an update about this because I saw you mentioned this issue, I had zero time until now, I'm right now jumping again in this issue</p>",
        "id": 129822539,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531846356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm wondering how is the best way to pass the buffer in some places</p>",
        "id": 129827310,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852001
    },
    {
        "content": "<p>for instance in qualify_consts</p>",
        "id": 129827314,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852007
    },
    {
        "content": "<p>wait what</p>",
        "id": 129827340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531852038
    },
    {
        "content": "<p>why are you modifying that?</p>",
        "id": 129827355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531852056
    },
    {
        "content": "<p>there's a call to emit there</p>",
        "id": 129827402,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852082
    },
    {
        "content": "<p>and it's in librustc_mir</p>",
        "id": 129827420,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852090
    },
    {
        "content": "<p>hmm I see what you mean :)</p>",
        "id": 129827456,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852148
    },
    {
        "content": "<p>what I need to modify is all the calls to emit inside <code>src/librustc_mir/borrow_check/</code> right?</p>",
        "id": 129827480,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852195
    },
    {
        "content": "<p>yep</p>",
        "id": 129827521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531852205
    },
    {
        "content": "<p>that one I was talking about is not part of the borrow_check</p>",
        "id": 129827523,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852207
    },
    {
        "content": "<p>ok</p>",
        "id": 129827526,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852208
    },
    {
        "content": "<p>was naively searching for stuff without noticing that</p>",
        "id": 129827545,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852226
    },
    {
        "content": "<p>good thing you asked :)</p>",
        "id": 129827682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531852437
    },
    {
        "content": "<p>:)</p>",
        "id": 129827939,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852777
    },
    {
        "content": "<p>just for the sake of checking</p>",
        "id": 129827943,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852787
    },
    {
        "content": "<p>let me push the stuff I have</p>",
        "id": 129827947,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852794
    },
    {
        "content": "<p>I think this is close and should be ready soon</p>",
        "id": 129827952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852802
    },
    {
        "content": "<p>thought it was more complicated than what it seems to be</p>",
        "id": 129828004,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852820
    },
    {
        "content": "<p>cool</p>",
        "id": 129828087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531852937
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> here is the relevant commit <a href=\"https://github.com/spastorino/rust/commit/fa80c651ac27151bced89490a109ff1a99b19ce2\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/fa80c651ac27151bced89490a109ff1a99b19ce2\">https://github.com/spastorino/rust/commit/fa80c651ac27151bced89490a109ff1a99b19ce2</a></p>",
        "id": 129828098,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852954
    },
    {
        "content": "<p>here <a href=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L294-L296\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L294-L296\">https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L294-L296</a> you see me iterating over the buffer and emitting</p>",
        "id": 129828104,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852976
    },
    {
        "content": "<p>I was wondering about the rest of the emit calls in <code>mod.rs</code></p>",
        "id": 129828118,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852993
    },
    {
        "content": "<p>for instance ...</p>",
        "id": 129828121,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531852995
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L328\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L328\">https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L328</a></p>",
        "id": 129828196,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853100
    },
    {
        "content": "<p>that one doesn't seem to be important because it will happen after the buffer already emitted all what's in the buffer</p>",
        "id": 129828209,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853121
    },
    {
        "content": "<p>I could make that push anyway and have a method which is called at the very end and just emit</p>",
        "id": 129828216,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853139
    },
    {
        "content": "<p>maybe that's more clear</p>",
        "id": 129828220,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853149
    },
    {
        "content": "<p>why not move the \"emit site\" down?</p>",
        "id": 129828270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531853168
    },
    {
        "content": "<p>I feel like if we're gonna buffer, let's buffer <em>everything</em>...</p>",
        "id": 129828277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531853183
    },
    {
        "content": "<p>yes</p>",
        "id": 129828281,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853190
    },
    {
        "content": "<p>that's what I meant</p>",
        "id": 129828285,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853194
    },
    {
        "content": "<p>ok</p>",
        "id": 129828287,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853195
    },
    {
        "content": "<p><em>although</em> one other thing is that I do find it annoying to get stuff like \"unnecessary mut\" when there  are other, real errors</p>",
        "id": 129828289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531853196
    },
    {
        "content": "<p>but that's a secondary issue</p>",
        "id": 129828292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531853203
    },
    {
        "content": "<p>we can talk about sorting later</p>",
        "id": 129828294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531853210
    },
    {
        "content": "<p>(often, the reason that the mut is not used is because of some other error, I find)</p>",
        "id": 129828302,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531853227
    },
    {
        "content": "<p>there's also <a href=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L1366\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L1366\">https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L1366</a></p>",
        "id": 129828303,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853227
    },
    {
        "content": "<p>and <a href=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L1908\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L1908\">https://github.com/spastorino/rust/blob/fa80c651ac27151bced89490a109ff1a99b19ce2/src/librustc_mir/borrow_check/mod.rs#L1908</a></p>",
        "id": 129828310,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853239
    },
    {
        "content": "<p>need to buffer those too</p>",
        "id": 129828311,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853244
    },
    {
        "content": "<p>ok, will do with all the stuff</p>",
        "id": 129828314,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853249
    },
    {
        "content": "<p>so something I've been thinking about</p>",
        "id": 129828318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853255
    },
    {
        "content": "<p>it seems like you are using grep to find the instances of <code>emit()</code></p>",
        "id": 129828321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853265
    },
    {
        "content": "<p>yep :)</p>",
        "id": 129828372,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853288
    },
    {
        "content": "<p>There is another option.</p>",
        "id": 129828393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853320
    },
    {
        "content": "<p>In particular, you could 1. Add a trait that defines emit, 2. Rename the existing emit (to something like <code>emit_</code> or <code>do_emit</code>) and make it private, then implement the aforementioned trait, and 3. <code>use</code> the trait in each module that you want to alllow <code>emit</code> to be called.</p>",
        "id": 129828404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853338
    },
    {
        "content": "<p>This is not something that you would have to make part of your PR. It could just be a separate commit that you use as a tool to assure yourself that you've identified all the sites where <code>emit()</code> is called.</p>",
        "id": 129828420,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853368
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 129828479,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853406
    },
    {
        "content": "<p>Its up to you, of course. I just figure it seems like you're doing a lot of work to identify the emit's.</p>",
        "id": 129828496,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853430
    },
    {
        "content": "<p>it's not actually that much</p>",
        "id": 129828503,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853447
    },
    {
        "content": "<p>the thing is ... actually what you're saying is not going to work</p>",
        "id": 129828514,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853463
    },
    {
        "content": "<p>well, unless I'm not seeing something</p>",
        "id": 129828528,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853482
    },
    {
        "content": "<p>so ... I need to avoid calls to emit inside <code>borrow_check</code> mod</p>",
        "id": 129828538,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853498
    },
    {
        "content": "<p>... maybe I'm not explaining it correctly. Its what I think of as the standard pattern for tying methods to modules</p>",
        "id": 129828540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853502
    },
    {
        "content": "<p>but leave as is for the rest of the places where the calls happen</p>",
        "id": 129828550,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853518
    },
    {
        "content": "<p>right. So you would <code>use</code> this new trait in all the modules <em>except</em> <code>rustc_mir::borrow_check</code> (and everything underneath it)</p>",
        "id": 129828611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531853558
    },
    {
        "content": "<p>ok</p>",
        "id": 129828616,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853568
    },
    {
        "content": "<p>yes</p>",
        "id": 129828617,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853569
    },
    {
        "content": "<p>something like that would work</p>",
        "id": 129828621,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853576
    },
    {
        "content": "<p>yeah I see what you mean</p>",
        "id": 129828624,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853581
    },
    {
        "content": "<p>I can also keep doing grep and change stuff and then move to a trait to see if something is failing in borrow_check</p>",
        "id": 129828646,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853610
    },
    {
        "content": "<p>if nothing fails inside there I can just git checkout the trait and that stuff</p>",
        "id": 129828651,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531853624
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I remember why I didn't push to errors_buffer on that loop</p>",
        "id": 129829941,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855300
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0502]: cannot borrow `mbcx.errors_buffer` as mutable because `mbcx` is also borrowed as immutable\n   --&gt; librustc_mir/borrow_check/mod.rs:326:13\n    |\n297 |         .filter(|local| !mbcx.used_mut.contains(local))\n    |                 -------  ----                         - immutable borrow ends here\n    |                 |        |\n    |                 |        previous borrow occurs due to use of `mbcx` in closure\n    |                 immutable borrow occurs here\n...\n326 |             mbcx.errors_buffer.push(err);\n    |             ^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n\nerror: aborting due to previous error\n</pre></div>",
        "id": 129829947,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855311
    },
    {
        "content": "<p>thinking how to avoid this ...</p>",
        "id": 129829949,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855318
    },
    {
        "content": "<p>I think you might be able to do something like let used_mut = &amp;mbcx.used_mut; above the filter and then use that inside</p>",
        "id": 129830008,
        "sender_full_name": "simulacrum",
        "timestamp": 1531855373
    },
    {
        "content": "<p>field-level disparity is tracked by AST borrowck I believe</p>",
        "id": 129830017,
        "sender_full_name": "simulacrum",
        "timestamp": 1531855385
    },
    {
        "content": "<p>yes, that is the topic of this blog post: <a href=\"http://smallcultfollowing.com/babysteps/blog/2018/04/24/rust-pattern-precise-closure-capture-clauses/\" target=\"_blank\" title=\"http://smallcultfollowing.com/babysteps/blog/2018/04/24/rust-pattern-precise-closure-capture-clauses/\">http://smallcultfollowing.com/babysteps/blog/2018/04/24/rust-pattern-precise-closure-capture-clauses/</a></p>",
        "id": 129830031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531855419
    },
    {
        "content": "<p>also there is a pending RFC to improve it that I have been neglecting :(</p>",
        "id": 129830035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531855429
    },
    {
        "content": "<p>ahh, makes sense</p>",
        "id": 129830091,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855472
    },
    {
        "content": "<p>but</p>",
        "id": 129830094,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855475
    },
    {
        "content": "<blockquote>\n<p>field-level disparity is tracked by AST borrowck I believe</p>\n</blockquote>\n<p>what does this ^^^ means?</p>",
        "id": 129830095,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855477
    },
    {
        "content": "<p>what do you mean by field-level disparity</p>",
        "id": 129830116,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855534
    },
    {
        "content": "<p>i.e. you can do</p>\n<div class=\"codehilite\"><pre><span></span>struct Bar { foo: u32, baz: u32 };\nlet mut bar = Bar { foo: 10, baz: 10 };\nlet field_foo = &amp;bar.foo;\nlet field_baz = &amp;mut bar.baz;\n</pre></div>",
        "id": 129830183,
        "sender_full_name": "simulacrum",
        "timestamp": 1531855610
    },
    {
        "content": "<p>but maybe I'm remembering wrong</p>",
        "id": 129830191,
        "sender_full_name": "simulacrum",
        "timestamp": 1531855627
    },
    {
        "content": "<p>I think the term I normally hear is \"disjoint\".</p>",
        "id": 129830194,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531855635
    },
    {
        "content": "<p>yes of course</p>",
        "id": 129830196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531855635
    },
    {
        "content": "<p>without that nothing at all would work :)</p>",
        "id": 129830197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531855640
    },
    {
        "content": "<p>The borrow checker knows that fields of a structure are disjoint and do not overlap</p>",
        "id": 129830217,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531855660
    },
    {
        "content": "<p>but it must be done within one fn, and a closure is a separate fn. that's the problem.</p>",
        "id": 129830222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531855667
    },
    {
        "content": "<p>ya makes, sense</p>",
        "id": 129830269,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855696
    },
    {
        "content": "<p>yep, your closure has borrowed all of <code>mbcx</code></p>",
        "id": 129830271,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531855698
    },
    {
        "content": "<p>it was that I had no idea about the term <code>field level disparity</code> :)</p>",
        "id": 129830280,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531855718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'll admit that that particular style espoused in your blog was new to me. I haven't needed it too much since reading then, but I've been trying it when I do.</p>",
        "id": 129830293,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531855744
    },
    {
        "content": "<p>do you mean the </p>\n<div class=\"codehilite\"><pre><span></span>{\n    let x = ...;\n    move || x ...\n}\n</pre></div>\n\n\n<p>?</p>",
        "id": 129830310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531855777
    },
    {
        "content": "<p>I'm probably the only one who does it :) but I like packaging up the \"closure borrows\" with the closure itself...</p>",
        "id": 129830319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531855800
    },
    {
        "content": "<p>right, I mean pulling the field access out of the closure</p>",
        "id": 129830375,
        "sender_full_name": "simulacrum",
        "timestamp": 1531855822
    },
    {
        "content": "<p>not pretty but it should work</p>",
        "id": 129830376,
        "sender_full_name": "simulacrum",
        "timestamp": 1531855825
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> indeed. I can see the benefit of it, but it's still a little odd to actually use \"bare\" <code>{ }</code> like that</p>",
        "id": 129830469,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531855936
    },
    {
        "content": "<p>oh, I do that a lot too, if I want to emphasize \"these are temporary values used to construct this other thing\"</p>",
        "id": 129830503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531856017
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> hey, so as an experiment I grabbed your branch and tried doing the trait experiment I described, mostly to get an idea how painful it was</p>",
        "id": 129865320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531912381
    },
    {
        "content": "<p>and one thing I noticed while working on it: There are a few places where errors are being generated that are <em>not</em> going through the structured DiagnosticBuilder interface.</p>",
        "id": 129865340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531912415
    },
    {
        "content": "<p>Its probably easiest to just fix all those cases as part of this work, since otherwise you'll end up with deltas to the test results (namely in the ordering of diagnostic output) that you'd have to account for; such accounting is harder than just fixing the code to use DiagnosticBuilder</p>",
        "id": 129865414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531912509
    },
    {
        "content": "<p>Also, something I only just thought of last night that hasn't really been specified yet: What will the behavior of <code>#![feature(nll)]</code> be under <code>-Z borrowck=migrate</code>, aka under edition=2018 ?</p>",
        "id": 129868723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531916999
    },
    {
        "content": "<p>My thought is that if the user opts into <code>#![feature(nll)]</code> then we should just run with NLL and not do AST at all; they've opted into it and they <em>want</em> the errors.</p>",
        "id": 129868778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531917030
    },
    {
        "content": "<p>But then that raises a question: Should we add separate feature for users to opt into the <code>-Z borrowck=migrate</code> mode, so that crates can turn it on? Or is this something that we'll just toggle via the edition opt-in, and via the <code>-Z</code> flag in our unit tests?</p>",
        "id": 129868836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531917125
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you may have thoughts on this ^</p>",
        "id": 129868845,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531917147
    },
    {
        "content": "<p>my main concern is the logic getting too complex</p>",
        "id": 129868851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531917159
    },
    {
        "content": "<p>so..many...modes....</p>",
        "id": 129868853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531917165
    },
    {
        "content": "<p>I'm personally leaning towards \"we'll just toggle via the edition opt-in, and via the -Z flag in our unit tests\"</p>",
        "id": 129868882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531917234
    },
    {
        "content": "<p>so what are the full set of modes? there are at least two things, right?</p>\n<ul>\n<li>borrowck = ast, mir, migrate</li>\n<li>two-phase-borrows on or off</li>\n</ul>\n<p>Right now <code>#![feature(nll)]</code> means mir + 2-phase</p>\n<p>I guess you are saying we could add a new <code>#![feature(nll_migrate)]</code> that means migrate + 2-phase</p>\n<p>And have <code>--edition 2018</code> enable that feature</p>",
        "id": 129873086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922360
    },
    {
        "content": "<p>that seems ok</p>",
        "id": 129873091,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922367
    },
    {
        "content": "<p>otoh I think maybe it's easier to just have <code>#![feature(nll)]</code> be the one user-exposed thing</p>",
        "id": 129873099,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922379
    },
    {
        "content": "<p>well, we don't technically need a <code>feature(nll_migrate)</code></p>",
        "id": 129873152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922408
    },
    {
        "content": "<p>basically the \"default\" borrowck mode would depend on  the edition (2015 = AST, 2018 = Migrate)</p>",
        "id": 129873166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922426
    },
    {
        "content": "<p>right?</p>",
        "id": 129873169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922428
    },
    {
        "content": "<p>I don't really have a strong opinion is the truth</p>",
        "id": 129873173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922437
    },
    {
        "content": "<p>would polonius become a feature flag ever (after <code>nll</code> is enabled, presumably)</p>",
        "id": 129873390,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531922650
    },
    {
        "content": "<p>presumably at some point</p>",
        "id": 129873590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922884
    },
    {
        "content": "<p>but yes I imagine by then nll will just be the deafult</p>",
        "id": 129873593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922891
    },
    {
        "content": "<p>so it wont add to the matrix</p>",
        "id": 129873693,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531923005
    },
    {
        "content": "<p>We don't need <code>feature(nll_migrate)</code> unless we think people will want to opt into that mode separately from opting into the edition. (Right?)</p>",
        "id": 129873924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923305
    },
    {
        "content": "<p>That is, I'm attempting to say I agree with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> 's statement above, or rather, I am attempting to refine it.</p>",
        "id": 129873954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923341
    },
    {
        "content": "<p>yes, true</p>",
        "id": 129874016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923371
    },
    {
        "content": "<p>I initially had this idea that the edition should be the union of various feature gates, but that's not necessarily true</p>",
        "id": 129874023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923383
    },
    {
        "content": "<p>And I think I agree with the statement. Someone who wants to migrate (but cannot or will not jump into edition=2018) and is on nightly should probably jump whole hog into <code>feature(nll)</code>.</p>",
        "id": 129874041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923404
    },
    {
        "content": "<p>or rather, we should not be making further pains to support someone who is not willing to fix their code. (Right?)</p>",
        "id": 129874066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923426
    },
    {
        "content": "<p>Because I see the whole backwards-compatibility thing in this case as being about supporting people who are using either old/abandoned third-party libraries</p>",
        "id": 129874084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923452
    },
    {
        "content": "<blockquote>\n<p>I initially had this idea that the edition should be the union of various feature gates, but that's not necessarily true</p>\n</blockquote>\n<p>Okay I'll admit this is an alternative, somewhat more compelling argument for <code>feature(nll_migrate)</code>.</p>",
        "id": 129874213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923600
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> while I have your attention in this topic area: Did (or do) you have any preference about how the overall control-flow should look for how we fallback on the AST-borrowck?</p>",
        "id": 129874312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923671
    },
    {
        "content": "<p>In particular, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> 's current branch is building the error buffers as a temporary <code>Vec</code> inside <code>rustc_mir::borrow_check::do_mir_borrowck</code>. If that vec doesn't leak outside of that method, then the fallback run of AST-borrowck has to be invoked from within <code>do_mir_borrowck</code>. (Which is fine with me if it is doable.)</p>",
        "id": 129874423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923785
    },
    {
        "content": "<p>not obvious to me why that is a problem</p>",
        "id": 129874441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923805
    },
    {
        "content": "<p>one other thing: one could imagine that in 2018 mode, we just always give hard NLL errors</p>",
        "id": 129874448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923817
    },
    {
        "content": "<p>but in 2015 mode, we do fallback</p>",
        "id": 129874452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923823
    },
    {
        "content": "<p>and there is only one feature gate (<code>nll</code>)</p>",
        "id": 129874461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923829
    },
    {
        "content": "<p>The alternative control-flow I could envisage would involve <code>do_mir_borrowck</code> passing the <code>errors_buffer</code> back up to its caller and letting it process them. Or make them the result of the query, etc.</p>",
        "id": 129874462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923829
    },
    {
        "content": "<p>I think they cannot be the result of the query</p>",
        "id": 129874517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923870
    },
    {
        "content": "<p>because they contain references they ought not to</p>",
        "id": 129874521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923878
    },
    {
        "content": "<p>Oh, because lifetimes</p>",
        "id": 129874524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923881
    },
    {
        "content": "<p>right</p>",
        "id": 129874530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923883
    },
    {
        "content": "<p>I've mused about that too. There's one obvious hack: Don't store <code>DiagnoticBuilder&lt;'a&gt;</code> in the vector; instead, convert each one to its string form eagerly.</p>",
        "id": 129874564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923933
    },
    {
        "content": "<p>but that seems unnecessary if you are okay with us just invoking the AST-borrowck query from within MIR-borrowck.</p>",
        "id": 129874624,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531923967
    },
    {
        "content": "<blockquote>\n<p>Oh, because lifetimes</p>\n</blockquote>\n<p>The story of programming in Rust.</p>",
        "id": 129874625,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531923968
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>Oh, because lifetimes</p>\n</blockquote>\n<p>The story of programming in Rust.</p>\n</blockquote>\n<p>Its probably the story of programming in any non-GC'ed language. We just forced people to start talking about it. (What a \"woke\" language!)</p>",
        "id": 129874653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531924014
    },
    {
        "content": "<blockquote>\n<p>and one thing I noticed while working on it: There are a few places where errors are being generated that are <em>not</em> going through the structured DiagnosticBuilder interface.</p>\n</blockquote>\n<p>I looked into this further; I <em>think</em> these are the main instances of this: <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L505\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L505\">nll/region_infer report_generic_bound_failure</a>, <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L523\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L523\">nll/region_infer span_err</a>, <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/type_check/mod.rs#L1257\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/type_check/mod.rs#L1257\">nll/type_check span_err</a>.</p>",
        "id": 129877481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531926835
    },
    {
        "content": "<p>(However, I only just now noticed the instance of <code>report_generic_bound_failure</code>. There might be other instances of that.)</p>",
        "id": 129877538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531926874
    },
    {
        "content": "<blockquote>\n<p>and one thing I noticed while working on it: There are a few places where errors are being generated that are <em>not</em> going through the structured DiagnosticBuilder interface.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> can you share the stuff you've already figured out? like the traits code if you think it's useful and the places where errors are being generated without using DiagnosticBuilder in case you have them identified</p>",
        "id": 129880392,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531929865
    },
    {
        "content": "<blockquote>\n<p>Its probably easiest to just fix all those cases as part of this work, since otherwise you'll end up with deltas to the test results (namely in the ordering of diagnostic output) that you'd have to account for; such accounting is harder than just fixing the code to use DiagnosticBuilder</p>\n</blockquote>\n<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129880399,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531929877
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>and one thing I noticed while working on it: There are a few places where errors are being generated that are <em>not</em> going through the structured DiagnosticBuilder interface.</p>\n</blockquote>\n<p>I looked into this further; I <em>think</em> these are the main instances of this: <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L505\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L505\">nll/region_infer report_generic_bound_failure</a>, <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L523\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/region_infer/mod.rs#L523\">nll/region_infer span_err</a>, <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/type_check/mod.rs#L1257\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/type_check/mod.rs#L1257\">nll/type_check span_err</a>.</p>\n</blockquote>\n<p>just saw this message :) so part of my question is already answered :)</p>",
        "id": 129880730,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531930291
    },
    {
        "content": "<p>I’ll try to share what i have from today after I manage to coax my son into sleeping... which may take two hours but I hope not</p>",
        "id": 129887057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531937112
    },
    {
        "content": "<blockquote>\n<p>can you share the stuff you've already figured out?</p>\n</blockquote>\n<p>Here you go: <a href=\"https://github.com/pnkfelix/rust/commits/z-borrowck-migrate\" target=\"_blank\" title=\"https://github.com/pnkfelix/rust/commits/z-borrowck-migrate\">https://github.com/pnkfelix/rust/commits/z-borrowck-migrate</a></p>",
        "id": 129891904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531942866
    },
    {
        "content": "<p>that builds and gets through the non-nll <code>ui/</code> tests. But it gets hung up on three of the <code>ui (nll)</code> tests. I am hoping it is due to the aforementioned cases I identified (which are tagged with FIXME in an isolated commit  on that branch.</p>",
        "id": 129891980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531942969
    },
    {
        "content": "<p>BTW lets make sure we keep that <code>trait Emit</code> code factored out; I don' think we'll want to land that.</p>",
        "id": 129891990,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531942998
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129893667,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945096
    },
    {
        "content": "<p>actually I have not been paying attention to this because I have been fighting with the borrow checker for a while :)</p>",
        "id": 129893674,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945120
    },
    {
        "content": "<p>last thing I need to fix is ...</p>",
        "id": 129893690,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945145
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0597]: `mdpe` does not live long enough\n   --&gt; librustc_mir/borrow_check/mod.rs:177:48\n    |\n177 |         MaybeInitializedPlaces::new(tcx, mir, &amp;mdpe),\n    |                                                ^^^^ borrowed value does not live long enough\n...\n345 | }\n    | - `mdpe` dropped here while still borrowed\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n\nerror[E0597]: `mdpe` does not live long enough\n   --&gt; librustc_mir/borrow_check/mod.rs:186:50\n    |\n186 |         MaybeUninitializedPlaces::new(tcx, mir, &amp;mdpe),\n    |                                                  ^^^^ borrowed value does not live long enough\n...\n345 | }\n    | - `mdpe` dropped here while still borrowed\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n\nerror[E0597]: `mdpe` does not live long enough\n   --&gt; librustc_mir/borrow_check/mod.rs:195:45\n    |\n195 |         MovingOutStatements::new(tcx, mir, &amp;mdpe),\n    |                                             ^^^^ borrowed value does not live long enough\n...\n345 | }\n    | - `mdpe` dropped here while still borrowed\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n\nerror[E0597]: `mdpe` does not live long enough\n   --&gt; librustc_mir/borrow_check/mod.rs:204:47\n    |\n204 |         EverInitializedPlaces::new(tcx, mir, &amp;mdpe),\n    |                                               ^^^^ borrowed value does not live long enough\n...\n345 | }\n    | - `mdpe` dropped here while still borrowed\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0597`.\nerror: Could not compile `rustc_mir`.\n</pre></div>",
        "id": 129893693,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945149
    },
    {
        "content": "<p>I don't see why is mdpe still borrowed</p>",
        "id": 129893772,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945221
    },
    {
        "content": "<p>you can see how I fixed that on my branch</p>",
        "id": 129893984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945527
    },
    {
        "content": "<p>namely in <a href=\"https://github.com/pnkfelix/rust/commit/2353b715e92353c824931bbda2451fbf1e46cf8b\" target=\"_blank\" title=\"https://github.com/pnkfelix/rust/commit/2353b715e92353c824931bbda2451fbf1e46cf8b\">this commit</a></p>",
        "id": 129894047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945574
    },
    {
        "content": "<p>the <code>mdpe</code> needs to outlive the <code>errors_buffer</code></p>",
        "id": 129894060,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945595
    },
    {
        "content": "<p>I've just fixed it</p>",
        "id": 129894089,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945661
    },
    {
        "content": "<p>anyway gonna check your commit</p>",
        "id": 129894093,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945668
    },
    {
        "content": "<p>The way the code was before, with the <code>let mdpe</code> at the point where <code>mdpe</code> is initialized, makes it get dropped too soon. Which ... I don't think actually matters ... but I think it was causing the region inference to get confused.</p>",
        "id": 129894141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945694
    },
    {
        "content": "<p>your fix is simpler and better :)</p>",
        "id": 129894143,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945696
    },
    {
        "content": "<p>I had to take a walk in between when I saw that error and when I actually fixed it. :)</p>",
        "id": 129894162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945727
    },
    {
        "content": "<p>there was some useless head-banging against the keyboard when I first hit it.</p>",
        "id": 129894166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945742
    },
    {
        "content": "<p>:)</p>",
        "id": 129894181,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945769
    },
    {
        "content": "<p>the code I have is now compiling</p>",
        "id": 129894189,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945778
    },
    {
        "content": "<p>after all the borrowck headaches</p>",
        "id": 129894238,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945805
    },
    {
        "content": "<p>now my question is</p>",
        "id": 129894264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945819
    },
    {
        "content": "<p>how many of these headaches will NLL fix...</p>",
        "id": 129894268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531945824
    },
    {
        "content": "<p>:P</p>",
        "id": 129894275,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945831
    },
    {
        "content": "<p>I have no idea</p>",
        "id": 129894277,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945838
    },
    {
        "content": "<p>hehehe</p>",
        "id": 129894279,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945840
    },
    {
        "content": "<p>I don't think the issues I was hitting are related</p>",
        "id": 129894293,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945866
    },
    {
        "content": "<p>just needed to properly adjust a lot of structs lifetimes</p>",
        "id": 129894305,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945880
    },
    {
        "content": "<p>and properly mark outlives relations</p>",
        "id": 129894310,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945888
    },
    {
        "content": "<p>I think is the first time I do this in Rust in a such intensive way</p>",
        "id": 129894321,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531945907
    },
    {
        "content": "<p>Sometimes that kind of change ends up not being necessary</p>",
        "id": 129894502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946073
    },
    {
        "content": "<p>if the types end up all being covariant</p>",
        "id": 129894513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946083
    },
    {
        "content": "<p>but as soon as something has a <code>&amp;mut</code> or other kinds of mutability like <code>Cell</code>, you end up having a lot of pain with explicit lifetime maintenance</p>",
        "id": 129894538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946116
    },
    {
        "content": "<p>(Thus, passing down a <code>&amp;mut</code> errors_buffer like this, and trying to add it to an existing struct, can lead to a lot of headaches.)</p>",
        "id": 129894557,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946153
    },
    {
        "content": "<p>its an area where the language will need to be improved, long term.</p>",
        "id": 129894603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946169
    },
    {
        "content": "<p>I see what you described happening in practice</p>",
        "id": 129894721,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531946319
    },
    {
        "content": "<p>I don't know why is all this related with the thing being <code>&amp;mut</code></p>",
        "id": 129894733,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531946340
    },
    {
        "content": "<p>Niko told me the same thing earlier</p>",
        "id": 129894743,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531946347
    },
    {
        "content": "<p>I have a presentation you can watch if you want to learn</p>",
        "id": 129894746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946353
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129894751,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531946362
    },
    {
        "content": "<p>I told Niko, would be nice to have a rustc conference :P</p>",
        "id": 129894765,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531946382
    },
    {
        "content": "<p>this one: <a href=\"https://www.youtube.com/watch?v=fI4RG_uq-WU\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=fI4RG_uq-WU\">https://www.youtube.com/watch?v=fI4RG_uq-WU</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"fI4RG_uq-WU\" href=\"https://www.youtube.com/watch?v=fI4RG_uq-WU\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=fI4RG_uq-WU\"><img src=\"https://i.ytimg.com/vi/fI4RG_uq-WU/default.jpg\"></a></div>",
        "id": 129894768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946389
    },
    {
        "content": "<p>You may need to connect a few more dots after watching that to connect it to what we're discussing, I cannot remember now.</p>",
        "id": 129894844,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531946435
    },
    {
        "content": "<p>I feel that there's a lot of knowledge you have and if properly shared I and pretty sure other contributors will be more productive :)</p>",
        "id": 129894845,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531946438
    },
    {
        "content": "<p>Variance is both an intuitive and unintuitive concept. I refer back to <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/nomicon/subtyping.html\">https://doc.rust-lang.org/nomicon/subtyping.html</a> when thinking about it.</p>",
        "id": 129896081,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531948021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> FYI I just pushed some more commits to my repo's z-borrowck-migrate branch</p>",
        "id": 129896877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531949039
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> i haven't identified all the problematic points yet;I believe I've fixed the three that I identified earlier, but the test suite still has two test cases where the output ordering differs.</p>",
        "id": 129896936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531949085
    },
    {
        "content": "<p>(note that I would not necessarily try to land this code I've written as is. I'm just trying to see how far I can get.)</p>",
        "id": 129897169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531949411
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> that talk was really great, thanks for linking it!)</p>",
        "id": 129897537,
        "sender_full_name": "davidtwco",
        "timestamp": 1531949948
    },
    {
        "content": "<p>every time I skim over the slides I marvel at how long I spent preparing it</p>",
        "id": 129897545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531949967
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> i haven't identified all the problematic points yet;I believe I've fixed the three that I identified earlier, but the test suite still has two test cases where the output ordering differs.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> cool, I've this thing compiling today is a national holiday here, so will probably stop now</p>",
        "id": 129898132,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950623
    },
    {
        "content": "<p>tomorrow I guess I should finish this</p>",
        "id": 129898141,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950643
    },
    {
        "content": "<p>haven't checked your branch yet</p>",
        "id": 129898150,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950649
    },
    {
        "content": "<p>i too must stop because i fear my toddler may awake at any point during the night</p>",
        "id": 129898154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531950654
    },
    {
        "content": "<blockquote>\n<p>(note that I would not necessarily try to land this code I've written as is. I'm just trying to see how far I can get.)</p>\n</blockquote>\n<p>and no worries about this :)</p>",
        "id": 129898156,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950657
    },
    {
        "content": "<p>we should make this happen together :)</p>",
        "id": 129898165,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> have you pushed your branch? Please do so just so I can look at it</p>",
        "id": 129898169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531950677
    },
    {
        "content": "<p>And yes, I think it would be good for us to try to collaborate to get this to happen. I was musing earlier that it might be good if we tried to literally hand work off to each other</p>",
        "id": 129898179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531950708
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yes, I've pushed</p>",
        "id": 129898182,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950715
    },
    {
        "content": "<p>it's here <a href=\"https://github.com/spastorino/rust/compare/z-borrowck-migrate\" target=\"_blank\" title=\"https://github.com/spastorino/rust/compare/z-borrowck-migrate\">https://github.com/spastorino/rust/compare/z-borrowck-migrate</a></p>",
        "id": 129898184,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950718
    },
    {
        "content": "<p>Great. I may look at it tomorrow.</p>",
        "id": 129898226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531950728
    },
    {
        "content": "<p>haven't checked properly yet</p>",
        "id": 129898227,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950728
    },
    {
        "content": "<p>may be some weird lifetimes dance that I still need to remove</p>",
        "id": 129898237,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950743
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> would be good to make a list of things that we want to accomplish</p>",
        "id": 129898258,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950798
    },
    {
        "content": "<p>we talked about a lot of things and may be a good idea to build a checklist to not forget about stuff</p>",
        "id": 129898266,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531950819
    },
    {
        "content": "<p>well if we can get the buffering to the point where the errors it emits are in the same order, then that would be a fine point to make a PR</p>",
        "id": 129898270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531950841
    },
    {
        "content": "<p>But yeah, I'll put a checklist up on issue <a href=\"https://github.com/rust-lang/rust/issues/46908\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/46908\">#46908</a> itself, so that we know the task list for the issue itself.</p>",
        "id": 129898336,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531950946
    },
    {
        "content": "<p>exactly</p>",
        "id": 129898555,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531951224
    },
    {
        "content": "<p>yeah</p>",
        "id": 129898556,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531951225
    },
    {
        "content": "<p>makes sense</p>",
        "id": 129898558,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531951229
    },
    {
        "content": "<blockquote>\n<p>every time I skim over the slides I marvel at how long I spent preparing it</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> out of curiosity, how long is that? :)</p>",
        "id": 129900183,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531953951
    },
    {
        "content": "<p>Well one can identify some rough bounds on an estimate by looking at the commit history here <a href=\"https://github.com/pnkfelix/presentations/commits/rustfest-berlin-2016\" target=\"_blank\" title=\"https://github.com/pnkfelix/presentations/commits/rustfest-berlin-2016\">https://github.com/pnkfelix/presentations/commits/rustfest-berlin-2016</a></p>",
        "id": 129907418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531966669
    },
    {
        "content": "<p>3 years :)</p>",
        "id": 129911909,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1531976088
    },
    {
        "content": "<p>well that a pretty conservative bound</p>",
        "id": 129925327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531997047
    },
    {
        "content": "<p>(a more thorough answer: I wrote the talk proposal in late June, and made final mods to the slides themselves in early september. The <a href=\"https://github.com/pnkfelix/presentations/commits/rustfest-berlin-2016/rustfest-berlin-2016/src/slides.md\" target=\"_blank\" title=\"https://github.com/pnkfelix/presentations/commits/rustfest-berlin-2016/rustfest-berlin-2016/src/slides.md\">commit history</a> is misleading, in that it shows that a lot of the text was inserted over the course of a few days, but I had worked out the ideas on paper &amp; index cards long before then.)</p>",
        "id": 129925573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531997357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> okay I think I identified the other emit calls that I had missed. Or at least, I am now able to get through the <code>ui/</code> tests.</p>",
        "id": 129927035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1531999499
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> have you based your work on top of my updated branch or something?</p>",
        "id": 129930849,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005288
    },
    {
        "content": "<p>what do you mean?</p>",
        "id": 129930860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005322
    },
    {
        "content": "<p>maybe I can just add you as a collaborator to my repo and you can push your stuff on top of mine</p>",
        "id": 129930897,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005325
    },
    {
        "content": "<p>so we can open a PR</p>",
        "id": 129930902,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005331
    },
    {
        "content": "<p>or you can point me to what you have done and I guess I can grab your commits and open a PR</p>",
        "id": 129930906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005357
    },
    {
        "content": "<p>I pushed the working system to the same branch on my repo (same name as the one on your rust repo)</p>",
        "id": 129930921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005400
    },
    {
        "content": "<p>and now I've been rebasing and cleaning it up a little</p>",
        "id": 129930926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005408
    },
    {
        "content": "<p>If you like I can handle opening the PR at this point</p>",
        "id": 129930929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005415
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129930933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005425
    },
    {
        "content": "<p>its up to you; i'll leave the commits that you did attributed to you</p>",
        "id": 129930934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005427
    },
    {
        "content": "<p>no worries about that, you can merge stuff if you prefer</p>",
        "id": 129930985,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005466
    },
    {
        "content": "<p>I don't mind</p>",
        "id": 129930987,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005468
    },
    {
        "content": "<p>at least, I got the impression that you were interested in going back to working on performance investigation?</p>",
        "id": 129930988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005471
    },
    {
        "content": "<p>I'm fine to do whatever is needed</p>",
        "id": 129931003,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005498
    },
    {
        "content": "<p>but I could continue with the -Z migrate thing I guess</p>",
        "id": 129931014,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005508
    },
    {
        "content": "<p>whatever you prefer</p>",
        "id": 129931018,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005512
    },
    {
        "content": "<p>check my branch again if you didn't because yesterday late I made some changes</p>",
        "id": 129931027,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005536
    },
    {
        "content": "<p>okay I'll look at that</p>",
        "id": 129931032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005547
    },
    {
        "content": "<p>my branch was compiling, it was probably lacking those emit order stuff you were investigating :)</p>",
        "id": 129931081,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005570
    },
    {
        "content": "<p>my branch passes the {ui,compile-fail,run-pass,mir-opt} test suites</p>",
        "id": 129931093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005608
    },
    {
        "content": "<p>which is a good sign</p>",
        "id": 129931096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532005614
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129931171,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532005697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> let me know when you finish or if I can help in any way so I can continue with the rest</p>",
        "id": 129933472,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532008707
    },
    {
        "content": "<p>or well ... I can assume it's done and continue in a new branch</p>",
        "id": 129933480,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532008731
    },
    {
        "content": "<p>I have plenty of time today</p>",
        "id": 129933483,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532008741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> ?</p>",
        "id": 129941111,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017306
    },
    {
        "content": "<p>I can continue with everything from the point you have it now I guess</p>",
        "id": 129941182,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017355
    },
    {
        "content": "<p>I guess I can grab your branch</p>",
        "id": 129941184,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017360
    },
    {
        "content": "<p>I have plenty of time :)</p>",
        "id": 129941188,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017365
    },
    {
        "content": "<p>I’m busy with child card right now, yeah</p>",
        "id": 129941207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532017391
    },
    {
        "content": "<p>no worries</p>",
        "id": 129941216,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017410
    },
    {
        "content": "<p>so I can continue</p>",
        "id": 129941218,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017414
    },
    {
        "content": "<p>should I grab your branch?</p>",
        "id": 129941221,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017421
    },
    {
        "content": "<p>is it up to date?</p>",
        "id": 129941225,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017424
    },
    {
        "content": "<p>gonna cherry pick the commits that make sense and continue on my branch I guess</p>",
        "id": 129941231,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532017435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> all my commits + yours are here <a href=\"https://github.com/rust-lang/rust/compare/master...spastorino:z-borrowck-migrate\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/compare/master...spastorino:z-borrowck-migrate\">https://github.com/rust-lang/rust/compare/master...spastorino:z-borrowck-migrate</a></p>",
        "id": 129974064,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532059508
    },
    {
        "content": "<p>it's giving some lifetimes errors after having it rebased with master</p>",
        "id": 129974136,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532059649
    },
    {
        "content": "<p>tomorrow will look into it</p>",
        "id": 129974138,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532059654
    },
    {
        "content": "<p>there were a lot of things in your repo that I already have done in mine also</p>",
        "id": 129974197,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532059746
    },
    {
        "content": "<p>so the merge ended not being so straightforward</p>",
        "id": 129974199,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532059762
    },
    {
        "content": "<p>Yeah I should have warned you about that, I had seen lifetime errors post rebase and while I have a fixed, I had not pushed my own rebased version</p>",
        "id": 129990174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532085459
    },
    {
        "content": "<p>@pnkfelix can you point me to the code that fixes that?</p>",
        "id": 129994565,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532090861
    },
    {
        "content": "<p>I'm going right now to start fighting with this issues</p>",
        "id": 129994580,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532090882
    },
    {
        "content": "<p>So</p>",
        "id": 129995040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091351
    },
    {
        "content": "<p>I just finished rebasing my work atop your branch</p>",
        "id": 129995084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091364
    },
    {
        "content": "<p>and after looking over your changes, I'm not sure we're winning trying to contintually rebase this way</p>",
        "id": 129995094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091380
    },
    {
        "content": "<p>in terms of the amount of time that it seems like we might be hitting conflicts in our changes?</p>",
        "id": 129995107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091402
    },
    {
        "content": "<p>yeah, maybe, unsure</p>",
        "id": 129995178,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091483
    },
    {
        "content": "<p>what you suggest?</p>",
        "id": 129995197,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091490
    },
    {
        "content": "<p>Not sure yet</p>",
        "id": 129995207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091504
    },
    {
        "content": "<p>I'm curious about the lifetimes issue fix :)</p>",
        "id": 129995211,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091509
    },
    {
        "content": "<p>sure, i believe it is this bit: <a href=\"https://github.com/pnkfelix/rust/commit/389c4cf3e527df07212646844efcf95c5ddcd382#diff-681da89983b0186166523349cf3c2a8cR155\" target=\"_blank\" title=\"https://github.com/pnkfelix/rust/commit/389c4cf3e527df07212646844efcf95c5ddcd382#diff-681da89983b0186166523349cf3c2a8cR155\">https://github.com/pnkfelix/rust/commit/389c4cf3e527df07212646844efcf95c5ddcd382#diff-681da89983b0186166523349cf3c2a8cR155</a></p>",
        "id": 129995215,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091519
    },
    {
        "content": "<p>but this first part should be ready, right?</p>",
        "id": 129995219,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091525
    },
    {
        "content": "<p>that is, I added a new <code>'errs</code> lifetime</p>",
        "id": 129995236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091546
    },
    {
        "content": "<p>I was thinking exactly the same thing</p>",
        "id": 129995250,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091566
    },
    {
        "content": "<p>where <code>'a</code> can be shorter than <code>'errs</code> but <code>'errs</code> can be shorter than <code>'gcx</code></p>",
        "id": 129995267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091586
    },
    {
        "content": "<p>makes sense</p>",
        "id": 129995274,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091598
    },
    {
        "content": "<p>This first part is indeed ready, or close to it.</p>",
        "id": 129995327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091608
    },
    {
        "content": "<p>I did want to ask you</p>",
        "id": 129995340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091616
    },
    {
        "content": "<p>why did you rename <code>'a</code> to <code>'cx</code> ?</p>",
        "id": 129995343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091621
    },
    {
        "content": "<p>do you want me to continue?</p>",
        "id": 129995358,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091639
    },
    {
        "content": "<p>At least, I personally don't find <code>'cx</code> to be more informative. they're both equally generic.</p>",
        "id": 129995359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091641
    },
    {
        "content": "<p>yeah</p>",
        "id": 129995361,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091651
    },
    {
        "content": "<p>I thought about that</p>",
        "id": 129995367,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091662
    },
    {
        "content": "<p>can revert that stuff</p>",
        "id": 129995374,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091669
    },
    {
        "content": "<p>well</p>",
        "id": 129995375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091672
    },
    {
        "content": "<p>I'll do that</p>",
        "id": 129995376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091673
    },
    {
        "content": "<p>I think at this point</p>",
        "id": 129995378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091675
    },
    {
        "content": "<p>the most efficient thing</p>",
        "id": 129995382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091678
    },
    {
        "content": "<p>well it depends</p>",
        "id": 129995399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091707
    },
    {
        "content": "<p>Were you planning to spend time on the other followup tasks for this issue over the weekend?</p>",
        "id": 129995463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091756
    },
    {
        "content": "<p>I usually don't have free time to code (or assist on the chat room/email) during the weekend</p>",
        "id": 129995481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091788
    },
    {
        "content": "<p>yeah I plan to work on this</p>",
        "id": 129995591,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091912
    },
    {
        "content": "<p>in that case</p>",
        "id": 129995602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091933
    },
    {
        "content": "<p>and I have time today</p>",
        "id": 129995605,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091937
    },
    {
        "content": "<p>since I won't have time, and I'll be finishing up my day soon</p>",
        "id": 129995610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091946
    },
    {
        "content": "<p>but I can jump to other task if you prefer</p>",
        "id": 129995614,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091951
    },
    {
        "content": "<p>no I think it would be good for you to keep going</p>",
        "id": 129995659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091964
    },
    {
        "content": "<p>cool</p>",
        "id": 129995668,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532091974
    },
    {
        "content": "<p>since you have time and were already planning on going after it</p>",
        "id": 129995670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091976
    },
    {
        "content": "<p>but I'd like to make sure you start off ahead of the curve</p>",
        "id": 129995673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532091986
    },
    {
        "content": "<p>as in: My branch, I believe, has everything in yours, and has been rebased atop master, and passes the test suite</p>",
        "id": 129995682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092014
    },
    {
        "content": "<p>so I should hand it off to you</p>",
        "id": 129995686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092022
    },
    {
        "content": "<p>and let you run with it</p>",
        "id": 129995692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092024
    },
    {
        "content": "<p>let me just</p>",
        "id": 129995707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092043
    },
    {
        "content": "<p>finish off the last task of getting rid of that <code>'a</code> to <code>'cx</code> rename commit</p>",
        "id": 129995718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092064
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129995721,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092078
    },
    {
        "content": "<p>and then I think I'll put up a PR with that</p>",
        "id": 129995723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092081
    },
    {
        "content": "<p>and then <em>you</em> can work on followup tasks</p>",
        "id": 129995771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092089
    },
    {
        "content": "<p>based on that PR</p>",
        "id": 129995773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092091
    },
    {
        "content": "<p>does that make sense?</p>",
        "id": 129995776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092095
    },
    {
        "content": "<p>as in, we can get niko to review the PR of the error buffering work</p>",
        "id": 129995781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092105
    },
    {
        "content": "<p>while you work on the other tasks for this issue</p>",
        "id": 129995788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092118
    },
    {
        "content": "<p>one of the reasoning about 'a -&gt; 'cx is that it is a bit confusing that in some places is called 'a and in other 'cx</p>",
        "id": 129995793,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092128
    },
    {
        "content": "<p>but unsure</p>",
        "id": 129995797,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092134
    },
    {
        "content": "<p><em>that</em> I can understand</p>",
        "id": 129995800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092136
    },
    {
        "content": "<p>but right now it just seemed to me to inject noise into the PR</p>",
        "id": 129995815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092157
    },
    {
        "content": "<p>yeah avoid that commit from PR</p>",
        "id": 129995821,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092172
    },
    {
        "content": "<p>okay</p>",
        "id": 129995825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532092175
    },
    {
        "content": "<p>anyway if we were making a change like that would need to be consistent over all the uses, not just a few :)</p>",
        "id": 129995852,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092198
    },
    {
        "content": "<blockquote>\n<p>does that make sense?</p>\n</blockquote>\n<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span>, makes sense</p>",
        "id": 129995903,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092209
    },
    {
        "content": "<p>I was going to say that</p>",
        "id": 129995907,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092215
    },
    {
        "content": "<p>open a PR</p>",
        "id": 129995908,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092217
    },
    {
        "content": "<p>:)</p>",
        "id": 129995909,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532092218
    },
    {
        "content": "<p>was that a command or a clarification?</p>",
        "id": 129996810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093348
    },
    {
        "content": "<p>\"sudo open a PR\"</p>",
        "id": 129996822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093374
    },
    {
        "content": "<p>In any case, here is the PR: <a href=\"https://github.com/rust-lang/rust/pull/52566\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52566\">https://github.com/rust-lang/rust/pull/52566</a></p>",
        "id": 129997111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> do you actually know <em>which</em> of the -Z borrowck=migrate tasks you are likely to take on in the immediate future?</p>",
        "id": 129997142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093732
    },
    {
        "content": "<p>hahaha, I clarification :P</p>",
        "id": 129997149,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532093744
    },
    {
        "content": "<p>I was going to say, if it's ready and all that should I grab your branch and open a PR or are you doing that?</p>",
        "id": 129997202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532093780
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> do you actually know <em>which</em> of the -Z borrowck=migrate tasks you are likely to take on in the immediate future?</p>\n</blockquote>\n<p>no, whatever shows up first I guess</p>",
        "id": 129997243,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532093837
    },
    {
        "content": "<p>my thinking is that I'll keep my on-going work on the <code>z-borrowck-migrate</code> branch. The PR I put up is based on a newly named branch that is just a point on that branch.</p>",
        "id": 129997244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093842
    },
    {
        "content": "<p>are you going to do something?</p>",
        "id": 129997245,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532093843
    },
    {
        "content": "<p>in that case, we can split some parts</p>",
        "id": 129997254,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532093850
    },
    {
        "content": "<p>The reason I asked which thing you might work on first is that I see two interesting tasks left</p>",
        "id": 129997268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093863
    },
    {
        "content": "<p>1. Add a mode to AST-borrowck so that you can invoke it without it emitting any errors itself (and instead it just returns \"saw an error\" or \"saw no errors\")</p>",
        "id": 129997337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093895
    },
    {
        "content": "<p>2. Add the code to MIR-borrowck that calls out to AST-borrowck if MIR -borrowck saw any errors.</p>",
        "id": 129997351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093913
    },
    {
        "content": "<p>One <em>could</em> start on 2. without having yet done 1.</p>",
        "id": 129997362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093924
    },
    {
        "content": "<p>So yeah, I figured its <em>potentially</em> splittable.</p>",
        "id": 129997383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093943
    },
    {
        "content": "<p>cool</p>",
        "id": 129997397,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532093957
    },
    {
        "content": "<p>I'm going to be working for about another two hours or so</p>",
        "id": 129997398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093957
    },
    {
        "content": "<p>Given the description on <a href=\"https://github.com/rust-lang/rust/issues/46908\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/46908\">#46908</a>, can you think of any other work items?</p>",
        "id": 129997444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532093992
    },
    {
        "content": "<p>the other thing we can do ... is ... are you already working on 1 or what are you currently doing?</p>",
        "id": 129997450,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532093994
    },
    {
        "content": "<p>(there's also the bit about making sure the diagnostics and docs properly indicate the severity of the supposed \"warnings\" you'll get)</p>",
        "id": 129997530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532094027
    },
    {
        "content": "<p>because I can just let you do what you're doing and then you can hand over where you left the stuff to me</p>",
        "id": 129997532,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532094028
    },
    {
        "content": "<p>I haven't actually started on 1. or 2. yet</p>",
        "id": 129997547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532094047
    },
    {
        "content": "<p>maybe you can start with 1</p>",
        "id": 129997566,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532094061
    },
    {
        "content": "<p>and if I can do something before you leave I will start 2</p>",
        "id": 129997584,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532094074
    },
    {
        "content": "<p>Great, sounds good.</p>",
        "id": 129997589,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532094080
    },
    {
        "content": "<p>and before leaving ping me so I know where you left and I merge everything over and try to finish my stuff and yours if there's something missing</p>",
        "id": 129997605,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532094100
    },
    {
        "content": "<p>Okay. If I forget to ping you, the on-going work, if any, will be pushed to my <code>z-borrowck-migrate</code> branch. (That's why I made a fresh name for the PR)</p>",
        "id": 129997674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532094156
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 129997887,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532094341
    },
    {
        "content": "<p>So I <em>might</em> have managed to do both 1. and 2.</p>",
        "id": 130005132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532100926
    },
    {
        "content": "<p>I'm not 100% sure yet because my first attempt to actually test <code>-Z borrowck=migrate</code>, I discovered I missed one spot where we validate the -Z input text and thus I couldn't actually test the flag.</p>",
        "id": 130005212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532100970
    },
    {
        "content": "<p>so I'm rebuilding the compiler now with that fixed.</p>",
        "id": 130005227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532100983
    },
    {
        "content": "<p>but it does seem like my current changes don't <em>break</em> the existing code at least.</p>",
        "id": 130005236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101005
    },
    {
        "content": "<p>cool</p>",
        "id": 130005254,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532101025
    },
    {
        "content": "<p>But I'm also going to have to leave in like four minutes so it may not build before I get a chance to actually do any real testing of <code>-Z borrowck=migrate</code> itself.</p>",
        "id": 130005260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101031
    },
    {
        "content": "<p>let me know what I need to do then or if it's just done :)</p>",
        "id": 130005271,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532101036
    },
    {
        "content": "<p>I've pushed the work to my <code>z-borrowck-mode</code> branch</p>",
        "id": 130005273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101040
    },
    {
        "content": "<p>ok</p>",
        "id": 130005275,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532101051
    },
    {
        "content": "<p>it still needs unit tests to be written</p>",
        "id": 130005280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101056
    },
    {
        "content": "<p>what should I do?</p>",
        "id": 130005284,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532101057
    },
    {
        "content": "<p>I could also leave it up to you</p>",
        "id": 130005301,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532101079
    },
    {
        "content": "<p>one way to do a unit test would be to identify a piece of code that passes AST borrowck but is rejected by MIR-borrowck</p>",
        "id": 130005348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101090
    },
    {
        "content": "<p>for when you have a chance and look for other tasks</p>",
        "id": 130005350,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532101092
    },
    {
        "content": "<p>and then make sure that such code emits a warning under <code>-Z borrowck=migrate</code></p>",
        "id": 130005369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101106
    },
    {
        "content": "<p>the most obvious example of such a piece of code are the examples from <a href=\"https://github.com/rust-lang/rust/issues/27282\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/27282\">#27282</a></p>",
        "id": 130005388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101128
    },
    {
        "content": "<p>And of course we also would want to make sure that every <em>other</em> piece of code behaves the way we expect, in terms of acceptance or rejection by compiler, under <code>-Z borrowck=migrate</code>.</p>",
        "id": 130005439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101194
    },
    {
        "content": "<p>I actually don't know the easiest way to accomplish that. Add a new <code>compare-more</code> to compiletest?</p>",
        "id": 130005504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101221
    },
    {
        "content": "<p>or repurpose the existing <code>compare-mode</code> ?</p>",
        "id": 130005510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101231
    },
    {
        "content": "<p>or just use the revision infrastructure?</p>",
        "id": 130005517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101243
    },
    {
        "content": "<p>Anyway, I have to leave now. I leave it up to you whether you want to try to follow up on this</p>",
        "id": 130005538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101277
    },
    {
        "content": "<p>I.e. if you feel like doing something totally different with your time, that's fine</p>",
        "id": 130005542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101287
    },
    {
        "content": "<p>but if you're cool with checking out the branch  and trying to find flaws in it and maybe writing a couple tests, that would be helpful</p>",
        "id": 130005568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532101313
    },
    {
        "content": "<p>(there's also a bunch of minimized repros that passed AST borrowck and MIR borrowck rejected, in the crater run if you need some)</p>",
        "id": 130006519,
        "sender_full_name": "lqd",
        "timestamp": 1532102339
    },
    {
        "content": "<p>@lqd could you actually put url linking to those in the issue??</p>",
        "id": 130007002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532102853
    },
    {
        "content": "<p>sure</p>",
        "id": 130007093,
        "sender_full_name": "lqd",
        "timestamp": 1532102934
    },
    {
        "content": "<p>(though tbf some of those <em>are</em> MIR borrowck bugs, but I guess those can be useful as well)</p>",
        "id": 130007499,
        "sender_full_name": "lqd",
        "timestamp": 1532103362
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/46908#issuecomment-406652255\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/46908#issuecomment-406652255\">https://github.com/rust-lang/rust/issues/46908#issuecomment-406652255</a></p>",
        "id": 130007931,
        "sender_full_name": "lqd",
        "timestamp": 1532103903
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> shouldn't we make this <a href=\"https://github.com/rust-lang/rust/blob/64aa4c5369611ba9867b6956fe9a57e0fc11ca49/src/librustc/infer/error_reporting/mod.rs#L306\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/64aa4c5369611ba9867b6956fe9a57e0fc11ca49/src/librustc/infer/error_reporting/mod.rs#L306\">https://github.com/rust-lang/rust/blob/64aa4c5369611ba9867b6956fe9a57e0fc11ca49/src/librustc/infer/error_reporting/mod.rs#L306</a> depend on the mode or something at some point?</p>",
        "id": 130023320,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532120972
    },
    {
        "content": "<p>Feel free to change it; I’m not familiar with the logic in that part of the code, and like I said, I didn’t get a chance to test my -Z borrowck=migrate before I left</p>",
        "id": 130027090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532125344
    },
    {
        "content": "<p>(Have you built it yourself yet? Does it seem like it’s plausibly working?)</p>",
        "id": 130027103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532125368
    },
    {
        "content": "<p>I didn't do that much given that most of the work was more or less done</p>",
        "id": 130027186,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532125495
    },
    {
        "content": "<p>have built the thing and left tests running</p>",
        "id": 130027194,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532125506
    },
    {
        "content": "<p>will try to check a bit today or during the weekend</p>",
        "id": 130027200,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532125519
    },
    {
        "content": "<p>also, shouldn't we skip this <a href=\"https://github.com/rust-lang/rust/blob/64aa4c5369611ba9867b6956fe9a57e0fc11ca49/src/librustc_mir/transform/mod.rs#L229-L231\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/64aa4c5369611ba9867b6956fe9a57e0fc11ca49/src/librustc_mir/transform/mod.rs#L229-L231\">https://github.com/rust-lang/rust/blob/64aa4c5369611ba9867b6956fe9a57e0fc11ca49/src/librustc_mir/transform/mod.rs#L229-L231</a> if mir_borrowck didn't fail?</p>",
        "id": 130028012,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532126592
    },
    {
        "content": "<p>It probably doesn’t matter, since the result of the query is cached, right?</p>",
        "id": 130040512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532151491
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> / <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> are either of you around? I'm wondering about a possible way to simplify <a href=\"https://github.com/rust-lang/rust/issues/52566\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52566\">#52566</a></p>",
        "id": 130051621,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532174241
    },
    {
        "content": "<p>I'm here</p>",
        "id": 130052708,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532176029
    },
    {
        "content": "<p>I left a comment on the PR</p>",
        "id": 130052839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532176217
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/52566#pullrequestreview-139256779\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52566#pullrequestreview-139256779\">https://github.com/rust-lang/rust/pull/52566#pullrequestreview-139256779</a></p>",
        "id": 130052844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532176238
    },
    {
        "content": "<p>TL;DR I think we could simplify some of the lifetime hell you went through :)</p>",
        "id": 130052852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532176291
    },
    {
        "content": "<p>:)</p>",
        "id": 130052904,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532176367
    },
    {
        "content": "<p>ok</p>",
        "id": 130052905,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532176368
    },
    {
        "content": "<p>will see if I can invest some time to this during the weekend</p>",
        "id": 130052912,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532176392
    },
    {
        "content": "<p>i'm looking at it now as well, since I didn't see any notes from <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> . The main interesting complication so far is that <code>DiagnosticBuilder</code>implements <code>Drop</code>, so you have to use <code>ptr::read</code> to pull out its <code>self.diagnostic</code> (and then <code>mem::forget(self)</code> afterward).</p>",
        "id": 130140568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532341475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I would probably just clone the diagnostic</p>",
        "id": 130149458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532353875
    },
    {
        "content": "<p>well that's no fun</p>",
        "id": 130149465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532353895
    },
    {
        "content": "<p>and/or make it an <code>Option&lt;Diagnostic&gt;</code> (I think there is already some kind of flag, right? That's how the emit prevents it from erroring out?)</p>",
        "id": 130149467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532353899
    },
    {
        "content": "<p>not sure how that works actually</p>",
        "id": 130149473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532353907
    },
    {
        "content": "<p>there's a Level::Cancelled</p>",
        "id": 130149481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532353916
    },
    {
        "content": "<p>but wait is that how that works</p>",
        "id": 130149531,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532353929
    },
    {
        "content": "<p>maybe emit uses <code>mem::forget</code> to cancel the dtor</p>",
        "id": 130149535,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532353939
    },
    {
        "content": "<p>no it just calls <code>self.cancel()</code>.</p>",
        "id": 130149539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532353953
    },
    {
        "content": "<p>(and that then sets the level to <code>Level::Cancelled</code>)</p>",
        "id": 130149543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532353969
    },
    {
        "content": "<p>ok. well, I still think <code>clone</code> is perfectly fine here :)</p>",
        "id": 130149552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532353998
    },
    {
        "content": "<p>this is not a hot path</p>",
        "id": 130149553,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532354000
    },
    {
        "content": "<p>true</p>",
        "id": 130149559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532354006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> sorry but I couldn't do anything during the weekend</p>",
        "id": 130163809,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532368828
    },
    {
        "content": "<p>I'm back and can start tackling something</p>",
        "id": 130163816,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532368835
    },
    {
        "content": "<p>unsure what's the current status of this</p>",
        "id": 130163821,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532368842
    },
    {
        "content": "<p>let me know and I can help or finish whatever is needed</p>",
        "id": 130163828,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532368852
    },
    {
        "content": "<p>no idea how much progress did Felix here</p>",
        "id": 130163838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532368865
    },
    {
        "content": "<p>well I r+'d some PR :)</p>",
        "id": 130163937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532368980
    },
    {
        "content": "<p>ok</p>",
        "id": 130164340,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532369410
    },
    {
        "content": "<p>do you have an idea about what Felix has done?</p>",
        "id": 130164348,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532369418
    },
    {
        "content": "<p>he has a branch, I can check that</p>",
        "id": 130164358,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532369427
    },
    {
        "content": "<p>know there were some missing tests</p>",
        "id": 130164364,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532369432
    },
    {
        "content": "<p>and I guess I can make the changes you suggested on top of this r+'d PR :)</p>",
        "id": 130164380,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532369449
    },
    {
        "content": "<p>sounds good?</p>",
        "id": 130164383,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532369452
    },
    {
        "content": "<p>or do you want this to stay as is?</p>",
        "id": 130164389,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532369459
    },
    {
        "content": "<p>well pnkfelix had <a href=\"https://github.com/rust-lang/rust/pull/52566\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52566\">https://github.com/rust-lang/rust/pull/52566</a></p>",
        "id": 130164644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532369754
    },
    {
        "content": "<p>which is the PR I r+'d</p>",
        "id": 130164646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532369757
    },
    {
        "content": "<p>it adds buffering, I think that's all it does</p>",
        "id": 130164656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532369762
    },
    {
        "content": "<p>so I guess the next step would be to build from there, presumably to start adding the <code>=migrate</code> logic?</p>",
        "id": 130164696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532369774
    },
    {
        "content": "<p>yes, that's the old thing we did</p>",
        "id": 130165013,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370135
    },
    {
        "content": "<p>he also had the =migrate logic</p>",
        "id": 130165034,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370151
    },
    {
        "content": "<p>that's why I kind of stopped</p>",
        "id": 130165038,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370156
    },
    {
        "content": "<p>\"old thing\"?</p>",
        "id": 130165039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370157
    },
    {
        "content": "<p>ok, I'm not really clear on that</p>",
        "id": 130165047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370168
    },
    {
        "content": "<p>I mean, it's the mergeable thing</p>",
        "id": 130165050,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370169
    },
    {
        "content": "<p>I see</p>",
        "id": 130165055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370172
    },
    {
        "content": "<p>the current thing</p>",
        "id": 130165058,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370177
    },
    {
        "content": "<p>but I was wondering if he had something new</p>",
        "id": 130165062,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370184
    },
    {
        "content": "<p>I see</p>",
        "id": 130165068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370188
    },
    {
        "content": "<p>I don't really know :(</p>",
        "id": 130165071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370192
    },
    {
        "content": "<p>or if he implemented your proposed changes</p>",
        "id": 130165074,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370197
    },
    {
        "content": "<p>we could try to find another task</p>",
        "id": 130165076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370198
    },
    {
        "content": "<p>should be possible ;)</p>",
        "id": 130165079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370200
    },
    {
        "content": "<p>he did implement my proposed changes</p>",
        "id": 130165085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370203
    },
    {
        "content": "<p>ahh where?</p>",
        "id": 130165093,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370212
    },
    {
        "content": "<p>in that PR?</p>",
        "id": 130165097,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370215
    },
    {
        "content": "<p>ahh I see, he fixed some commits</p>",
        "id": 130165171,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370280
    },
    {
        "content": "<p>it would worth for me checking that</p>",
        "id": 130165173,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370285
    },
    {
        "content": "<p>ok, I'd say I'd leave the rest of this work to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, most of the stuff is already done</p>",
        "id": 130165209,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370334
    },
    {
        "content": "<p>I think we are spending a lot of time on checking with each other</p>",
        "id": 130165217,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370355
    },
    {
        "content": "<p>the same happened to Felix when he needed to check my stuff :)</p>",
        "id": 130165265,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370368
    },
    {
        "content": "<p>heh :)</p>",
        "id": 130165290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370410
    },
    {
        "content": "<p>I guess the question then is what maybe to look at next</p>",
        "id": 130165325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370444
    },
    {
        "content": "<p>not sure if you had anything else enqueued?</p>",
        "id": 130165331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532370451
    },
    {
        "content": "<p>let me chat with you in private to avoid adding uninteresting stuff here :)</p>",
        "id": 130165631,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1532370723
    },
    {
        "content": "<p>There’s a branch with follow on work</p>",
        "id": 130193569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532413350
    },
    {
        "content": "<p>z-borrowck-migrate</p>",
        "id": 130193571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532413373
    },
    {
        "content": "<p>I think it’s about done; but it needs tests. I’ll do that today</p>",
        "id": 130193578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532413398
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ah the situation I described earlier isn't nearly as dire as I had feared</p>",
        "id": 130236307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465228
    },
    {
        "content": "<p>that's good</p>",
        "id": 130236321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465242
    },
    {
        "content": "<p>I think i've about got that PR ready for your review</p>",
        "id": 130236326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465245
    },
    {
        "content": "<p>yes, elaborate-drops does call out to <code>move_data::gather_moves</code>, and yes, that does return an Err in this case</p>",
        "id": 130236327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465247
    },
    {
        "content": "<p>I'm doing some rebasing and cleanup</p>",
        "id": 130236330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465249
    },
    {
        "content": "<p>but the Err it returns <em>includes</em> the constructed MoveData</p>",
        "id": 130236338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465257
    },
    {
        "content": "<p>along with a Vec of MoveErrors</p>",
        "id": 130236339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465262
    },
    {
        "content": "<p>(which we, presumably, have already previously reported as warnings)</p>",
        "id": 130236343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465272
    },
    {
        "content": "<p>so it might be enough to just ... let elaborate-drops muddle along with the returned MoveData</p>",
        "id": 130236392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465287
    },
    {
        "content": "<p>it is still semi-risky, but not really much more than we are already being risky by allowing unsound code to compile at all in the name of backwards compat</p>",
        "id": 130236409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465309
    },
    {
        "content": "<p>hmm</p>",
        "id": 130236421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465332
    },
    {
        "content": "<p>well it can lead to ICEs</p>",
        "id": 130236422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465335
    },
    {
        "content": "<p>sure</p>",
        "id": 130236424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532465341
    },
    {
        "content": "<p>or just not work very well</p>",
        "id": 130236434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465352
    },
    {
        "content": "<p>that is, the code might do different stuff, not what it did before</p>",
        "id": 130236446,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465365
    },
    {
        "content": "<p>still, maybe worth a try</p>",
        "id": 130236449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465368
    },
    {
        "content": "<p>I don't really know what the effect will be</p>",
        "id": 130236452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465374
    },
    {
        "content": "<p>I also do think it's ok to make this a kind of \"hard error\"</p>",
        "id": 130236456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532465381
    },
    {
        "content": "<blockquote>\n<p>that is, the code might do different stuff, not what it did before</p>\n</blockquote>\n<p>Ah, the old compiler-writer's \"it's undefined behavior\" <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 130236798,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1532465636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> ok I just reviewed <a href=\"https://github.com/rust-lang/rust/pull/52681/\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52681/\">https://github.com/rust-lang/rust/pull/52681/</a> -- seems great, one thing I was wondering though</p>",
        "id": 130277988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528580
    },
    {
        "content": "<p>first off, if you use <code>#![feature(nll)]</code> in this, still get the current mode, right?</p>",
        "id": 130277996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528589
    },
    {
        "content": "<p>I was wondering if we wanted to try and make this a future-compat lint, or if that is too much of a pain in the neck</p>",
        "id": 130278005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528612
    },
    {
        "content": "<p>\"current mode\" as in, -Z borrowck overrides the feature?</p>",
        "id": 130278006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528614
    },
    {
        "content": "<p>no I mean what does <code>#![feature(nll)]</code> do -- hard errors, or migration mode?</p>",
        "id": 130278018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528628
    },
    {
        "content": "<p>did I miss a change there?</p>",
        "id": 130278021,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528632
    },
    {
        "content": "<p>right that's a good question</p>",
        "id": 130278023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528636
    },
    {
        "content": "<p>I do imagine some people will want to go with \"hard error\"</p>",
        "id": 130278066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528647
    },
    {
        "content": "<p>I think I tried this out but forgot to make a test encoding the behavior</p>",
        "id": 130278067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528649
    },
    {
        "content": "<p>I was just thinking about the test best way to give them that :)</p>",
        "id": 130278071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528655
    },
    {
        "content": "<p>I actually wanted to ask you</p>",
        "id": 130278076,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528661
    },
    {
        "content": "<p>is our short term plan</p>",
        "id": 130278083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528668
    },
    {
        "content": "<p>to turn <code>-Z borrowck=migrate</code> on by default at the same time for both 2015 edition and 2018 edition</p>",
        "id": 130278098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528688
    },
    {
        "content": "<p>or is our short term plan to have the 2018 edition, as part of EP2, enable <code>-Z borrowck=migrate</code></p>",
        "id": 130278103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528704
    },
    {
        "content": "<p>(and thus people who want to sample living in the future will have to opt into it)</p>",
        "id": 130278111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528720
    },
    {
        "content": "<p>I've been assuming our plan is the latter.</p>",
        "id": 130278123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528740
    },
    {
        "content": "<p>In addition, I've been personally planning that <code>#![feature(nll)]</code> <em>should</em> override the migration injected via 2018-edition opt-in</p>",
        "id": 130278178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528775
    },
    {
        "content": "<p>Which probably means that it should <em>also</em> override <code>-Z borrowck=migrate</code>.</p>",
        "id": 130278186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528790
    },
    {
        "content": "<p>(just to keep ourselves sane...)</p>",
        "id": 130278190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528796
    },
    {
        "content": "<p>Does that all make sense to you? Again, I did not put in a test encoding that behavior</p>",
        "id": 130278201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528808
    },
    {
        "content": "<p>but I want to do so</p>",
        "id": 130278204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528811
    },
    {
        "content": "<p>so it's kind of like: we take the \"max\" of various signals</p>",
        "id": 130278205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528811
    },
    {
        "content": "<p><code>#![feature(nll)]</code>signals \"hard error\"</p>",
        "id": 130278211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528818
    },
    {
        "content": "<p><code>-Zborrowck=mir</code> the same</p>",
        "id": 130278222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528824
    },
    {
        "content": "<p><code>--edition 2018</code> signals \"migration\"</p>",
        "id": 130278226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528829
    },
    {
        "content": "<p><code>-Zborrowck=migrate</code> the same</p>",
        "id": 130278230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528834
    },
    {
        "content": "<p>?</p>",
        "id": 130278232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528836
    },
    {
        "content": "<p>Yes</p>",
        "id": 130278237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528840
    },
    {
        "content": "<p>er, default is \"ast\" still</p>",
        "id": 130278240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528843
    },
    {
        "content": "<p>Yes</p>",
        "id": 130278246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528851
    },
    {
        "content": "<p>I did not plan to enable it for everyone yet ,yeah, just the 2018 folks</p>",
        "id": 130278247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528851
    },
    {
        "content": "<p>that plan sounds fine to me</p>",
        "id": 130278251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528855
    },
    {
        "content": "<p>Okay great</p>",
        "id": 130278255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528858
    },
    {
        "content": "<p>I guess this is all still nightly territory so anyone using it can as well use <code>#![feature(nll)]</code> if they want to force hard errors</p>",
        "id": 130278312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528887
    },
    {
        "content": "<p>so that seems good</p>",
        "id": 130278314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528892
    },
    {
        "content": "<p>I wouldn't be surprised if the current PR does not currently encode that desired semantics of the relationship between <code>#![feature(nll)]</code> and <code>-Z borrowck=migrate</code>.</p>",
        "id": 130278319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528898
    },
    {
        "content": "<p>But I <em>want</em> that to happen</p>",
        "id": 130278323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528908
    },
    {
        "content": "<p>So I will right now 1. write the test, and then 2. ensure that it passes, hacking the code if necessary.</p>",
        "id": 130278337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532528932
    },
    {
        "content": "<p>ok</p>",
        "id": 130278383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528977
    },
    {
        "content": "<p>I don't have a strong opinion about that particular thing</p>",
        "id": 130278386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528984
    },
    {
        "content": "<p>but I agree that the \"max\" interpretation is consistent</p>",
        "id": 130278388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532528989
    },
    {
        "content": "<p>oh I remember what I did test</p>",
        "id": 130278581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529179
    },
    {
        "content": "<p>I wanted to see what <code>-Z borrowck=mir -Z borrowck=migrate</code> would do</p>",
        "id": 130278594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529192
    },
    {
        "content": "<p>because that is what ends up happening for this test with <code>compare-mode=nll</code>.</p>",
        "id": 130278604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529210
    },
    {
        "content": "<p>:)</p>",
        "id": 130278610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529221
    },
    {
        "content": "<p>(and the answer appears to be that the last flag wins. )</p>",
        "id": 130278614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529224
    },
    {
        "content": "<p>seems...yeah whatever :)</p>",
        "id": 130278616,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529230
    },
    {
        "content": "<p>though I did wonder in passing</p>",
        "id": 130278620,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529239
    },
    {
        "content": "<p>yeah, that I don't care about</p>",
        "id": 130278629,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529242
    },
    {
        "content": "<p>Okay yeah I'm going to need to make another commit to the PR to get the \"max\" interpretation. Will have that up soon.</p>",
        "id": 130278941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> can you also link to the edition?</p>",
        "id": 130278964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529558
    },
    {
        "content": "<p>I think we might as well at this point, don't you?</p>",
        "id": 130278966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529563
    },
    {
        "content": "<p>Well can we try to land this first?</p>",
        "id": 130278974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529576
    },
    {
        "content": "<p>sure, we can do that later</p>",
        "id": 130278976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529581
    },
    {
        "content": "<p>I was just trying to save a bors cycle :)</p>",
        "id": 130278981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529588
    },
    {
        "content": "<p>Its going to take me a little bit of effort to figure out the right way to hook in the edition</p>",
        "id": 130279038,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529614
    },
    {
        "content": "<p>if I can do it faster than bors then fine. But I dont think i will given the other things I want to address today.</p>",
        "id": 130279062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532529637
    },
    {
        "content": "<p>(travis is not exactly cooperating rn anyway :)</p>",
        "id": 130279108,
        "sender_full_name": "lqd",
        "timestamp": 1532529716
    },
    {
        "content": "<p>ok</p>",
        "id": 130279159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529734
    },
    {
        "content": "<blockquote>\n<p>(travis is not exactly cooperating rn anyway :)</p>\n</blockquote>\n<p>oh, is that why I've noticed an absence of green checkmarks?</p>",
        "id": 130279170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532529753
    },
    {
        "content": "<p>very likely, there seems to be hook problems or something, in addition to the shutting down of builders and/or mac CI, it's a party</p>",
        "id": 130279224,
        "sender_full_name": "lqd",
        "timestamp": 1532529830
    },
    {
        "content": "<p>Yes we're working on it</p>",
        "id": 130279289,
        "sender_full_name": "simulacrum",
        "timestamp": 1532529871
    },
    {
        "content": "<p>Travis is currently ignoring rust-lang/rust for some reason</p>",
        "id": 130279292,
        "sender_full_name": "simulacrum",
        "timestamp": 1532529880
    },
    {
        "content": "<p>is it because of mac beta issue?</p>",
        "id": 130279580,
        "sender_full_name": "DPC",
        "timestamp": 1532530171
    },
    {
        "content": "<p>well possibly, we don't really knwo</p>",
        "id": 130279693,
        "sender_full_name": "simulacrum",
        "timestamp": 1532530266
    },
    {
        "content": "<p>ah there is <a href=\"https://github.com/rust-lang/rust/issues/52701\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52701\">https://github.com/rust-lang/rust/issues/52701</a></p>",
        "id": 130279835,
        "sender_full_name": "DPC",
        "timestamp": 1532530402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> what is the \"perf command\" again...? is it documented somewhere?</p>",
        "id": 130280226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532530776
    },
    {
        "content": "<p>I usually search zulip...</p>",
        "id": 130280227,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532530780
    },
    {
        "content": "<p><code>@rust-timer build &lt;full commit hash&gt;</code></p>",
        "id": 130280236,
        "sender_full_name": "simulacrum",
        "timestamp": 1532530793
    },
    {
        "content": "<p>Not documented</p>",
        "id": 130280280,
        "sender_full_name": "simulacrum",
        "timestamp": 1532530803
    },
    {
        "content": "<p>although given travis maybe <code>@bors try</code> will not work</p>",
        "id": 130280290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532530806
    },
    {
        "content": "<p>Nope no builds for now</p>",
        "id": 130280405,
        "sender_full_name": "simulacrum",
        "timestamp": 1532530947
    },
    {
        "content": "<p>:'(</p>",
        "id": 130280676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532531220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> wrote:</p>\n<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> can you also link to the edition?<br>\n I think we might as well at this point, don't you?</p>\n</blockquote>\n<p>But: I'm now wondering if that step should wait until we've fixed the issues that block us bootstrapping <code>rustc</code>, at least?</p>",
        "id": 130335168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532601730
    },
    {
        "content": "<p>why?</p>",
        "id": 130337916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532605436
    },
    {
        "content": "<p>well I can see why</p>",
        "id": 130337918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532605441
    },
    {
        "content": "<p>but that's a bit tricky</p>",
        "id": 130337957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532605444
    },
    {
        "content": "<p>e.g., bootstrapping requires that things be in beta, etc</p>",
        "id": 130337963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532605449
    },
    {
        "content": "<p>I definitely think NLL should be in EP2</p>",
        "id": 130337968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532605462
    },
    {
        "content": "<p>I guess I just anticipate someone, as a test, trying to make sure we can still bootstrap rustc under <code>--edition 2018</code>.</p>",
        "id": 130338321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532605942
    },
    {
        "content": "<p>so I figure why cause them pain?</p>",
        "id": 130338324,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532605955
    },
    {
        "content": "<p>Anyway the PR that fixes bootstrapping <code>rustc</code> should be landing soon enough anyway, so sure, I'll probably put the edition linking into the same PR</p>",
        "id": 130338343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1532605993
    }
]