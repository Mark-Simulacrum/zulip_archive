[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> any thoughts on what to do for this issue <a href=\"https://github.com/rust-lang/rust/issues/52739\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52739\">#52739</a> (and <a href=\"https://github.com/rust-lang/rust/issues/52742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52742\">#52742</a>)?</p>",
        "id": 130981015,
        "sender_full_name": "davidtwco",
        "timestamp": 1533564871
    },
    {
        "content": "<p>are you talking <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> about this error message?</p>\n<div class=\"codehilite\"><pre><span></span>error[E0623]: lifetime mismatch\n  --&gt; src/main.rs:13:5\n   |\n12 | fn func(foo: Foo&lt;&#39;_, &#39;_&gt;, bar: Bar&lt;&#39;_&gt;) {\n   |              -----------       ------- these two types are declared with different lifetimes...\n13 |     foo.y = bar.z;\n   |     ^^^^^^^^^^^^^ ...but data from `bar` flows into `foo` here\n</pre></div>",
        "id": 130981137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565012
    },
    {
        "content": "<p>if so, I do :)</p>",
        "id": 130981138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565013
    },
    {
        "content": "<p>I'm curious actually -- do you still have that branch where you disabled nice region errors?</p>",
        "id": 130981141,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565022
    },
    {
        "content": "<p>Just in general about what nice region errors we want to keep.</p>",
        "id": 130981149,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565030
    },
    {
        "content": "<p>I do.</p>",
        "id": 130981150,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565031
    },
    {
        "content": "<p>It's about a week old, but it exists.</p>",
        "id": 130981163,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565047
    },
    {
        "content": "<p>I see -- so --- my sense is that this is a case where our \"normal errors\" are as good or better</p>",
        "id": 130981164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565048
    },
    {
        "content": "<p>well I'm a bit torn</p>",
        "id": 130981168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565057
    },
    {
        "content": "<p>I wonder if <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> is around ...</p>",
        "id": 130981169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565062
    },
    {
        "content": "<p>/me doubts it</p>",
        "id": 130981171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565064
    },
    {
        "content": "<p>anyway, I think that our normal msg is better than that \"nice\" message in this case</p>",
        "id": 130981174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565073
    },
    {
        "content": "<p>but I wonder if there is some hybrid that is better than both</p>",
        "id": 130981179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565080
    },
    {
        "content": "<p>let me see I am trying to decide what to do with today :)</p>",
        "id": 130981225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565097
    },
    {
        "content": "<p>let me put this on the list</p>",
        "id": 130981226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565100
    },
    {
        "content": "<p>I think maybe I would focus a bit of time on this, and a bit on assessing the crater run results</p>",
        "id": 130981236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565115
    },
    {
        "content": "<p>Sounds good. Let me know when we decide on what we want to do with these.</p>",
        "id": 130981261,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565156
    },
    {
        "content": "<p>as a simple step</p>",
        "id": 130981263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565159
    },
    {
        "content": "<p>we have this code:</p>",
        "id": 130981264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565162
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">try_report</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">ErrorReported</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">try_report_named_anon_conflict</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">try_report_anon_anon_conflict</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">try_report_outlives_closure</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">try_report_static_impl_trait</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 130981266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565165
    },
    {
        "content": "<p>that's the code you turned off, basically</p>",
        "id": 130981271,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565169
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 130981272,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565173
    },
    {
        "content": "<p>I wonder if we want to have a \"NLL variant\" of this</p>",
        "id": 130981275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565177
    },
    {
        "content": "<p>that disables some of them but keeps others?</p>",
        "id": 130981278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565187
    },
    {
        "content": "<p>some of those (e.g., outlives closure) don't trigger for NLL anyway I guess</p>",
        "id": 130981282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565196
    },
    {
        "content": "<p>I am thinking that <code>named_anon_conflict</code> may still be better</p>",
        "id": 130981294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565202
    },
    {
        "content": "<p>at least in some cases, not sure</p>",
        "id": 130981326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565205
    },
    {
        "content": "<p><code>named_anon_conflict</code> is better when the suggestion is correct.</p>",
        "id": 130981345,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565237
    },
    {
        "content": "<p><code>anon_anon_conflict</code> is worse in all cases, I think.</p>",
        "id": 130981364,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565272
    },
    {
        "content": "<p>and yeah, <code>outlives_closure</code> doesn't come up.</p>",
        "id": 130981371,
        "sender_full_name": "davidtwco",
        "timestamp": 1533565282
    },
    {
        "content": "<p>I agree</p>",
        "id": 130981373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565282
    },
    {
        "content": "<p>the \"when the suggestion is correct\" makes me think though</p>",
        "id": 130981378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565295
    },
    {
        "content": "<p>that ultimately we ought to reimplemented <code>named_anon_conflict</code></p>",
        "id": 130981383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565303
    },
    {
        "content": "<p>but that requires us to make a <em>bit</em> more progress I think</p>",
        "id": 130981390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565316
    },
    {
        "content": "<p>on being able to explain <em>why</em> a lifetime is constrained</p>",
        "id": 130981409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565323
    },
    {
        "content": "<p>right now we just cite one span, I think to do significantly better -- at least in some cases -- we would want to cite &gt;1 place?</p>",
        "id": 130981441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533565346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> to start then maybe open a PR that removes everything but \"named-anon-conflict\" for NLL mode? (not sure about that final case)</p>",
        "id": 130982110,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533566018
    },
    {
        "content": "<p>Sure thing, I'll get started on that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>.</p>",
        "id": 130982124,
        "sender_full_name": "davidtwco",
        "timestamp": 1533566039
    },
    {
        "content": "<p>re: <a href=\"https://github.com/rust-lang/rust/issues/52742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52742\">#52742</a>, I'd be happy to mentor through a fix there, though I have to refresh my memory. I <em>think</em> it'd be something  we could solve by adding some more cases to the \"region-name\" code.</p>",
        "id": 130982176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533566062
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Oops, didn't see that last message. I had thought that both <a href=\"https://github.com/rust-lang/rust/issues/52739\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52739\">#52739</a> and <a href=\"https://github.com/rust-lang/rust/issues/52742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52742\">#52742</a> were just \"figure out which nice region errors to keep\".</p>",
        "id": 130987847,
        "sender_full_name": "davidtwco",
        "timestamp": 1533571552
    },
    {
        "content": "<p>well maybe it is â but I was thinking that, at least in some cases, we should highlight regions in the impl declaration</p>",
        "id": 130987911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533571579
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Submitted <a href=\"https://github.com/rust-lang/rust/issues/53115\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53115\">#53115</a> with the disabling all but <code>named_anon_conflict</code> in NLL mode. One strange test change. Could probably also add the fix for <a href=\"https://github.com/rust-lang/rust/issues/52742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52742\">#52742</a> to this PR.</p>",
        "id": 130989479,
        "sender_full_name": "davidtwco",
        "timestamp": 1533573442
    },
    {
        "content": "<p>(when such a fix exists)</p>",
        "id": 130989484,
        "sender_full_name": "davidtwco",
        "timestamp": 1533573454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> left some notes <a href=\"https://github.com/rust-lang/rust/pull/53115#pullrequestreview-143673844\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53115#pullrequestreview-143673844\">https://github.com/rust-lang/rust/pull/53115#pullrequestreview-143673844</a></p>",
        "id": 130990343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533574377
    },
    {
        "content": "<p>For the potential issues to open, might be worth adding them to <a href=\"https://github.com/rust-lang/rust/issues/52663\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52663\">#52663</a> - I've replied to the reviews where they are already on that list.</p>",
        "id": 130991216,
        "sender_full_name": "davidtwco",
        "timestamp": 1533575227
    },
    {
        "content": "<p>Interestingly, the <code>try_report_from_nll</code> change fixed the strangeness with that one test case in the migrate mode - presumably something to do with the <code>is_mir_borrowck</code> implementation.</p>",
        "id": 130991308,
        "sender_full_name": "davidtwco",
        "timestamp": 1533575332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I think it's because the code was being invoked from the AST borrow checker</p>",
        "id": 130991650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533575753
    },
    {
        "content": "<p>I thought that might be the case...</p>",
        "id": 130991653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533575758
    },
    {
        "content": "<p>I agree with adding them to the list in <a href=\"https://github.com/rust-lang/rust/issues/52663\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52663\">#52663</a>, sure</p>",
        "id": 130991694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533575766
    },
    {
        "content": "<p>not sure that distinct issues are useful</p>",
        "id": 130991697,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533575770
    },
    {
        "content": "<p>but I'd like to keep those ideas around</p>",
        "id": 130991702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533575777
    },
    {
        "content": "<p>Pushed a commit that changes it to a <code>try_report_from_nll</code> approach.</p>",
        "id": 130991719,
        "sender_full_name": "davidtwco",
        "timestamp": 1533575804
    },
    {
        "content": "<p>Also added a new comment to <a href=\"https://github.com/rust-lang/rust/issues/52663\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52663\">#52663</a> with the new potential improvement (the rest were already there).</p>",
        "id": 130992146,
        "sender_full_name": "davidtwco",
        "timestamp": 1533576193
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> ty</p>",
        "id": 130992263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533576292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> fixed the <code>compile-fail</code> failures (only looked at <code>ui</code> locally) - will need another <code>r+</code> if good.</p>",
        "id": 130996761,
        "sender_full_name": "davidtwco",
        "timestamp": 1533581064
    },
    {
        "content": "<p>ok</p>",
        "id": 130996979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533581366
    }
]