[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> did you want to talk about this issue at some point?</p>",
        "id": 129873207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922500
    },
    {
        "content": "<p>sure :)</p>",
        "id": 129873277,
        "sender_full_name": "lqd",
        "timestamp": 1531922581
    },
    {
        "content": "<p>ok so the thing I would want to do to debug this....</p>",
        "id": 129873598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531922911
    },
    {
        "content": "<p>to start, I would enable <code>RUST_LOG=rustc_mir::borrow_check</code> and look for the output from <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/universal_regions.rs#L711-L716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc_mir/borrow_check/nll/universal_regions.rs#L711-L716\">the <code>add_implied_bounds</code> function</a></p>",
        "id": 129873712,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531923030
    },
    {
        "content": "<p>ok I'll do that as soon as my build completes, somehow debug assertions got turned off in this build, sad trombone</p>",
        "id": 129874090,
        "sender_full_name": "lqd",
        "timestamp": 1531923462
    },
    {
        "content": "<p>it's mostly</p>\n<div class=\"codehilite\"><pre><span></span>DEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: build: input_or_output=&amp;mut &lt;Drain&lt;&#39;_, T&gt; as Join&gt;::Value\nDEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: add_implied_bounds(ty=&amp;mut &lt;Drain&lt;&#39;_, T&gt; as Join&gt;::Value)\nDEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: add_outlives_bounds(bound=RegionSubRegion(&#39;_#2r, &#39;_#4r))\nDEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: relate_universal_regions: fr_a=&#39;_#4r outlives fr_b=&#39;_#2r\nDEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: add_outlives_bounds(bound=RegionSubParam(&#39;_#2r, T/#1))\nDEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: add_outlives_bounds(bound=RegionSubParam(&#39;_#1r, T/#1))\nDEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: build: input_or_output=()\nDEBUG 2018-07-18T14:39:00Z: rustc_mir::borrow_check::nll::universal_regions: add_implied_bounds(ty=())\n</pre></div>",
        "id": 129875635,
        "sender_full_name": "lqd",
        "timestamp": 1531924925
    },
    {
        "content": "<p>hmm</p>",
        "id": 129875683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531924989
    },
    {
        "content": "<p>try with <code>-Zverbose</code></p>",
        "id": 129875697,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925004
    },
    {
        "content": "<p>and then the relate_universal_regions (which reminds me of something I was in Polonius, that we generate regions outliving themselves, I don't know if it's that big of a problem)</p>",
        "id": 129875705,
        "sender_full_name": "lqd",
        "timestamp": 1531925015
    },
    {
        "content": "<p>still, <code> add_outlives_bounds(bound=RegionSubRegion('_#2r, '_#4r)) </code> looks relevant</p>",
        "id": 129875706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925017
    },
    {
        "content": "<p>can you gist the full output somewhere?</p>",
        "id": 129875763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925044
    },
    {
        "content": "<p><a href=\"https://gist.github.com/lqd/dfda486e0d99b53d828bf3c1673d73b5\" target=\"_blank\" title=\"https://gist.github.com/lqd/dfda486e0d99b53d828bf3c1673d73b5\">https://gist.github.com/lqd/dfda486e0d99b53d828bf3c1673d73b5</a></p>",
        "id": 129875782,
        "sender_full_name": "lqd",
        "timestamp": 1531925064
    },
    {
        "content": "<p>doing the verbose one now</p>",
        "id": 129875787,
        "sender_full_name": "lqd",
        "timestamp": 1531925067
    },
    {
        "content": "<p>the verbose one looks surprisingly similar <a href=\"https://gist.github.com/lqd/18f805512135d5873b5c97520202866c\" target=\"_blank\" title=\"https://gist.github.com/lqd/18f805512135d5873b5c97520202866c\">https://gist.github.com/lqd/18f805512135d5873b5c97520202866c</a></p>",
        "id": 129875934,
        "sender_full_name": "lqd",
        "timestamp": 1531925226
    },
    {
        "content": "<p>the only difference is that regions don't get printed as <code>'_</code></p>",
        "id": 129875954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925247
    },
    {
        "content": "<p>oh good to know thank you</p>",
        "id": 129876008,
        "sender_full_name": "lqd",
        "timestamp": 1531925285
    },
    {
        "content": "<p>so what I am looking for here</p>",
        "id": 129876035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925311
    },
    {
        "content": "<p>and, actually, i'm not sure I see</p>",
        "id": 129876039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925314
    },
    {
        "content": "<p>let me back up :)</p>",
        "id": 129876040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925318
    },
    {
        "content": "<p>the way that this code works</p>",
        "id": 129876045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925321
    },
    {
        "content": "<p>is that the <code>universal_regions</code> computes which of the free regions on the function may be related to one another</p>",
        "id": 129876052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925335
    },
    {
        "content": "<p>(as an aside, I want to rename <code>universal_regions</code> back to <code>free_regions</code> at some point)</p>",
        "id": 129876062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925344
    },
    {
        "content": "<p>so e.g. we would wnat to compute here that -- because of an implied bound -- we know that <code>'b: 'a</code> or whatever</p>",
        "id": 129876075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925355
    },
    {
        "content": "<p>in this case I think <code>'a</code> is assigned '_#1r`</p>",
        "id": 129876089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925380
    },
    {
        "content": "<p>as you can see from this line:</p>",
        "id": 129876102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925393
    },
    {
        "content": "<p>yeah</p>",
        "id": 129876103,
        "sender_full_name": "lqd",
        "timestamp": 1531925394
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>DEBUG 2018-07-18T14:45:19Z: rustc_mir::borrow_check::nll::universal_regions: build: indices=UniversalRegionIndices { indices: {ReEarlyBound(0, &#39;a): &#39;_#1r, ReStatic: &#39;_#0r} }DEBUG 2018-07-18T14:45:19Z: rustc_mir::borrow_check::nll::universal_regions: build: indices=UniversalRegionIndices { indices: {ReEarlyBound(0, &#39;a): &#39;_#1r, ReStatic: &#39;_#0r} }\n</pre></div>",
        "id": 129876104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925394
    },
    {
        "content": "<p>and <code>'b</code> is '_#2r`</p>",
        "id": 129876150,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925405
    },
    {
        "content": "<p>as you can see ultimately from this type:</p>\n<div class=\"codehilite\"><pre><span></span>DEBUG 2018-07-18T14:45:19Z: rustc_mir::borrow_check::nll::universal_regions: build: input_or_output=&amp;&#39;_#2r mut &lt;Drain&lt;&#39;_#1r, T&gt; as Join&gt;::Value\n</pre></div>",
        "id": 129876161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925410
    },
    {
        "content": "<p><code>&lt;&amp;'_#2r mut &lt;Drain&lt;'_#1r, T&gt; as Join&gt;::Value</code>, that is</p>",
        "id": 129876180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925437
    },
    {
        "content": "<p>so we'd expect to see that <code>'_#1r: '_#2r</code></p>",
        "id": 129876194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925452
    },
    {
        "content": "<p>but i do .. not see that</p>",
        "id": 129876202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925462
    },
    {
        "content": "<p>so that is sort of curious</p>",
        "id": 129876215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925480
    },
    {
        "content": "<p>it would look like an <code>add_outlive_bounds</code> of '_#2r and '_#1r ?</p>",
        "id": 129876221,
        "sender_full_name": "lqd",
        "timestamp": 1531925494
    },
    {
        "content": "<p>or a relate_universal_regions log ?</p>",
        "id": 129876230,
        "sender_full_name": "lqd",
        "timestamp": 1531925516
    },
    {
        "content": "<p>yeah, or later on, when we dump the full relations</p>",
        "id": 129876231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925518
    },
    {
        "content": "<p>e.g. here: <a href=\"https://gist.github.com/lqd/18f805512135d5873b5c97520202866c#file-z-verbose-L19-L34\" target=\"_blank\" title=\"https://gist.github.com/lqd/18f805512135d5873b5c97520202866c#file-z-verbose-L19-L34\">https://gist.github.com/lqd/18f805512135d5873b5c97520202866c#file-z-verbose-L19-L34</a></p>",
        "id": 129876279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925534
    },
    {
        "content": "<p>implied outlives bounds are computed by <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc/infer/outlives/bounds.rs#L34-L61\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc/infer/outlives/bounds.rs#L34-L61\">this function in <code>infer</code></a></p>",
        "id": 129876292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925553
    },
    {
        "content": "<p>so maybe we should re-run with <code>RUST_LOG=rustc::infer::outlives::bounds</code> as well</p>",
        "id": 129876305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925569
    },
    {
        "content": "<p>(also keep the rustc_mir)</p>",
        "id": 129876308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925574
    },
    {
        "content": "<p>hmm that fn doesn't have as many <code>debug!</code> as I would like</p>",
        "id": 129876334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925615
    },
    {
        "content": "<p>we might want to log <code>rustc::ty::wf</code> too</p>",
        "id": 129876349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925628
    },
    {
        "content": "<p>to get <a href=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc/infer/outlives/bounds.rs#L83\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/29ee65411c46b8f701bd1f241725092cb1b347e6/src/librustc/infer/outlives/bounds.rs#L83\">the output from this call</a></p>",
        "id": 129876391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925645
    },
    {
        "content": "<p>I can just use commas to have more than one module with RUST_LOG right ?</p>",
        "id": 129876411,
        "sender_full_name": "lqd",
        "timestamp": 1531925681
    },
    {
        "content": "<p>yes</p>",
        "id": 129876447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531925717
    },
    {
        "content": "<p>I should add that to the rustc-guide</p>",
        "id": 129876455,
        "sender_full_name": "lqd",
        "timestamp": 1531925734
    },
    {
        "content": "<p><a href=\"https://gist.github.com/lqd/a44290e6e898ad8740b41c3515de06b9\" target=\"_blank\" title=\"https://gist.github.com/lqd/a44290e6e898ad8740b41c3515de06b9\">https://gist.github.com/lqd/a44290e6e898ad8740b41c3515de06b9</a></p>",
        "id": 129876579,
        "sender_full_name": "lqd",
        "timestamp": 1531925856
    },
    {
        "content": "<p>is it me or the outlives::bounds logs don't tell us much rn ?</p>",
        "id": 129876780,
        "sender_full_name": "lqd",
        "timestamp": 1531926011
    },
    {
        "content": "<p>yeah there aren't many <code>debug!</code></p>",
        "id": 129876790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926020
    },
    {
        "content": "<p>next step might be to add some :)</p>",
        "id": 129876796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926025
    },
    {
        "content": "<p>I can add them yeah</p>",
        "id": 129876800,
        "sender_full_name": "lqd",
        "timestamp": 1531926029
    },
    {
        "content": "<p>still, I think I see the problem</p>",
        "id": 129876829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926065
    },
    {
        "content": "<p>interesting problem</p>",
        "id": 129876839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926071
    },
    {
        "content": "<p>I wonder if tmandry's PR will help here actually</p>",
        "id": 129876844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926077
    },
    {
        "content": "<p>so I think what is happening is that:</p>",
        "id": 129876847,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926082
    },
    {
        "content": "<p>we normalize <code>&amp;'_#2r mut &lt;Drain&lt;'_#1r, T&gt; as Join&gt;::Value</code></p>",
        "id": 129876854,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926103
    },
    {
        "content": "<p>in so doing, we create a result <code>&amp;'4 Option&lt;T&gt;</code> or something</p>",
        "id": 129876860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926112
    },
    {
        "content": "<p>this <code>'4</code> is a new variable that we created</p>",
        "id": 129876863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926119
    },
    {
        "content": "<p>it is equated with <code>'1</code></p>",
        "id": 129876900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926124
    },
    {
        "content": "<p>but the universal regions code doesn't recognize that</p>",
        "id": 129876909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926132
    },
    {
        "content": "<p>tmandry's PR pulled some of this logic into a query</p>",
        "id": 129876911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926140
    },
    {
        "content": "<p>oh</p>",
        "id": 129876912,
        "sender_full_name": "lqd",
        "timestamp": 1531926142
    },
    {
        "content": "<p>which might mean that we get back a more \"normalized\" result</p>",
        "id": 129876917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926146
    },
    {
        "content": "<p>let me take a look at its current status</p>",
        "id": 129876919,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926149
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116883\">@Tyler Mandry</span> -- but I think they are on vacation</p>",
        "id": 129876927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926163
    },
    {
        "content": "<p>the PR is <a href=\"https://github.com/rust-lang/rust/pull/51959\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51959\">https://github.com/rust-lang/rust/pull/51959</a></p>",
        "id": 129876937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926174
    },
    {
        "content": "<p>yeah, needs rebase</p>",
        "id": 129876943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926181
    },
    {
        "content": "<p>I think I'll try to take it over... I'll ping them on discord though</p>",
        "id": 129876950,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926186
    },
    {
        "content": "<p>unlucky</p>",
        "id": 129876957,
        "sender_full_name": "lqd",
        "timestamp": 1531926191
    },
    {
        "content": "<p>indeed I do not get an ICE with their branch</p>",
        "id": 129877114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926371
    },
    {
        "content": "<p>it doesn't ICE</p>",
        "id": 129877121,
        "sender_full_name": "lqd",
        "timestamp": 1531926392
    },
    {
        "content": "<p>it's just an error</p>",
        "id": 129877122,
        "sender_full_name": "lqd",
        "timestamp": 1531926398
    },
    {
        "content": "<p>er, yes, well, it compiles successfully anyway</p>",
        "id": 129877134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926421
    },
    {
        "content": "<p>oh ok then :)</p>",
        "id": 129877140,
        "sender_full_name": "lqd",
        "timestamp": 1531926427
    },
    {
        "content": "<p>we could investigate another bug :)</p>",
        "id": 129877142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926432
    },
    {
        "content": "<p>that's awesome to hear</p>",
        "id": 129877146,
        "sender_full_name": "lqd",
        "timestamp": 1531926436
    },
    {
        "content": "<p>as I feel there's been a lot of those similar errors in the crater run</p>",
        "id": 129877149,
        "sender_full_name": "lqd",
        "timestamp": 1531926453
    },
    {
        "content": "<p>ah, cool</p>",
        "id": 129877154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926458
    },
    {
        "content": "<p>I'm going to try and rebase the PR against master then</p>",
        "id": 129877160,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926473
    },
    {
        "content": "<p>there was one ICE we talked about yesterday which we could look at</p>",
        "id": 129877204,
        "sender_full_name": "lqd",
        "timestamp": 1531926486
    },
    {
        "content": "<p>yes which was that...</p>",
        "id": 129877218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926512
    },
    {
        "content": "<p>it was <a href=\"https://github.com/rust-lang/rust/issues/52384\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52384\">#52384</a></p>",
        "id": 129877219,
        "sender_full_name": "lqd",
        "timestamp": 1531926513
    },
    {
        "content": "<p>(I have to step away for 10-15mins though sorry)</p>",
        "id": 129877236,
        "sender_full_name": "lqd",
        "timestamp": 1531926548
    },
    {
        "content": "<p>brb</p>",
        "id": 129877248,
        "sender_full_name": "lqd",
        "timestamp": 1531926565
    },
    {
        "content": "<p>no worries. I'll do some rebasing. I actually may have to run an errand too</p>",
        "id": 129877418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926740
    },
    {
        "content": "<p>greek stores have kind of wacky hours that must be respected :)</p>",
        "id": 129877422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531926748
    },
    {
        "content": "<p>(I'm back btw, and have a couple hours of free time :)</p>",
        "id": 129879868,
        "sender_full_name": "lqd",
        "timestamp": 1531929314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> whoops, sorry</p>",
        "id": 129889906,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531940250
    }
]