[
    {
        "content": "<p>Was there a discussion about how to integrate two-phase borrows into the alias analysis? It's not entirely obvious to me how we should generate <code>invalidate</code> statements without livenss information for them. Right now, that's computed as part of the overall borrow liveness computation, and depends on our existing region inference if I'm remembering that code correctly... which is exactly what the new analysis rips out <span class=\"emoji emoji-1f605\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 126333018,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525897710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>  ^</p>",
        "id": 126333129,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525897827
    },
    {
        "content": "<p>the invalidation information should be independent I think</p>",
        "id": 126333178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525897897
    },
    {
        "content": "<p>just based on which paths overlap</p>",
        "id": 126333185,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525897901
    },
    {
        "content": "<p>not based on the <em>location</em> at all</p>",
        "id": 126333191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525897907
    },
    {
        "content": "<p>but I gotta run, I'll be back in 15-30 mins</p>",
        "id": 126333199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525897918
    },
    {
        "content": "<p>I think it still matters? If we have something like</p>\n<div class=\"codehilite\"><pre><span></span>LOC0: _3 = &amp;&#39;3 mut _1 // this borrow is two phase\nLOC1:  _4 = &amp;&#39;4 _1\n// do something with _4\n// ... _4 dies here\nLOC2: call(move _3, ... ) // borrow activates here\n</pre></div>\n\n\n<p>Borrowing <code>_1</code> immutably using <code>_4</code> needs to still work; but if I'm blindly generating <code>invalidate</code> rules I /think/ we would incorrectly generate an error since we would generate at least 2 invalidates facts:<br>\n  -  <code>i0: invalidates('4, LOC0)</code> because single-phase mutable borrows require all borrows of the same path (or any parent path) to be dead<br>\n  - <code>i1: invalidates('3, LOC1)</code> because creating this borrow is going to invalidate a single-phase mutable borrow<br>\nWe also have a region <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mn>3</mn></mrow><annotation encoding=\"application/x-tex\"> R3 </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathrm\">3</span></span></span></span> representing the liveness of '3, which has to be live at <code>LOC0</code>,  <code>LOC1</code>, and <code>LOC2</code>. Thus we would error at <code>LOC1</code> since '3 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>∈</mo><mi>R</mi><mn>3</mn></mrow><annotation encoding=\"application/x-tex\"> \\in R3 </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"base\"><span class=\"mrel\">∈</span><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathrm\">3</span></span></span></span> but '3 is invalidated by <code>i1</code>. <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mn>3</mn></mrow><annotation encoding=\"application/x-tex\"> R3 </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathrm\">3</span></span></span></span>  has to contain every point between <code>LOC0</code> and <code>LOC2</code> since otherwise bad things might happen to <code>_1</code> when we aren't looking (e.g. overwriting it, which is illegal today since any write access to <code>_1</code> or its children would force the activation of '3). All this is assuming I know my borrow checker rules which might not be true <span class=\"emoji emoji-1f643\" title=\"upside down face\">:upside_down_face:</span>.</p>",
        "id": 126334830,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525899765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> I see, yeah good point.</p>",
        "id": 126335213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525900313
    },
    {
        "content": "<p>still, we know whether we are in the \"active\" region or not</p>",
        "id": 126335258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525900327
    },
    {
        "content": "<p>based solely on the dominator information</p>",
        "id": 126335260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525900331
    },
    {
        "content": "<p>so you could take that into account when considering what \"invalidates\" perhaps</p>",
        "id": 126335261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525900342
    },
    {
        "content": "<p>/me thinks</p>",
        "id": 126335263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525900346
    },
    {
        "content": "<p>I <em>think</em> that would be true -- the idea would be that the <code>&amp;mut a.b.c</code> would be in error in the first place</p>",
        "id": 126335270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525900375
    },
    {
        "content": "<p>i.e., the initial borrow still invalidates itself, but -- until activation -- only writes to <code>a.b.c</code> violate the loan</p>",
        "id": 126335282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525900403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> btw however far you get post your branch if you run out of time. I'll be able to talk more about this tomorrow, I gotta run for tonight.</p>",
        "id": 126336159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525901780
    },
    {
        "content": "<p>Sounds good. Using the dominator information should work out I think? I'll definitely push a branch</p>",
        "id": 126336179,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525901836
    },
    {
        "content": "<p>This is the branch that removes position information and thus (I believe) speeds up \"NLL\" while sacrificing precision: <a href=\"https://github.com/rust-lang/rust/pull/50593\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50593\">https://github.com/rust-lang/rust/pull/50593</a></p>",
        "id": 126345501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525919239
    },
    {
        "content": "<p>Here's what I was able to get done: <a href=\"https://github.com/bobtwinkles/rust/tree/nll_facts_invalidate\" target=\"_blank\" title=\"https://github.com/bobtwinkles/rust/tree/nll_facts_invalidate\">https://github.com/bobtwinkles/rust/tree/nll_facts_invalidate</a><br>\nIt's not complete, probably doesn't compile, and definitely doesn't work but I'm way past out of time today and I'll be spending tomorrow traveling. I think I got most of the boring stuff out of the way for you <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, if you want to pick this up  and run with it <span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span> . You'll need to review <code>check_access_for_conflict</code> in <code>invalidation.rs</code> and add a call to <code>generate_invalidates</code> in <code>nll/mod.rs</code>. Reviewing everything else in there probably wouldn't be the worst idea. As a \"nice to have thing\", we can probably do better than just iterating over every single borrow every single time we need to check for conflicts. Something like a <code>FxHashMap&lt;Place, Vec&lt;BorrowIndex&gt;&gt;</code> mapping from the root place to a list of the borrows involving that place and its children would probably work well</p>",
        "id": 126358166,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525946914
    },
    {
        "content": "<p>also the code duplication with the current borrow check hurts me a little, and there should be a way to reduce it</p>",
        "id": 126358249,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525947096
    },
    {
        "content": "<p>it might  be possible to just roll this generation into the existing borrow checking by switching out the implementation of <code>each_borrow_involving_path</code> actually, that might be worth looking into</p>",
        "id": 126358323,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525947205
    },
    {
        "content": "<p>I was expecting the changes to be more drastic but it appears that won't be the case</p>",
        "id": 126358325,
        "sender_full_name": "Reed Koser",
        "timestamp": 1525947222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> cool, thanks. I told Niko that I wasn't finding time for this, I should be able today or tomorrow</p>",
        "id": 126361234,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1525952935
    },
    {
        "content": "<p>I haven't had a chance to check out <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span>'s branch yet</p>",
        "id": 126361304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1525953058
    },
    {
        "content": "<p>it seems like it'd be great to continue on this, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, if you have time today—</p>",
        "id": 126413633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043414
    },
    {
        "content": "<p>specifically, I was thinking that it'd be really nice to get the <code>borrow-check</code> repo to the point where we can run it on actual files</p>",
        "id": 126413640,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043427
    },
    {
        "content": "<p>and see the errors that result</p>",
        "id": 126413641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043430
    },
    {
        "content": "<p>i.e., in order to try out examples</p>",
        "id": 126413643,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043436
    },
    {
        "content": "<p>(not to mention the optimization potential)</p>",
        "id": 126413645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043439
    },
    {
        "content": "<p>my vision was roughly that you give a <code>.rs</code> file</p>",
        "id": 126413648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043448
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 126413650,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526043451
    },
    {
        "content": "<p>and we run <code>rustc -Znll-facts</code>, load the facts,</p>",
        "id": 126413652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043457
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 126413654,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526043461
    },
    {
        "content": "<p>run our analysis and print errors</p>",
        "id": 126413657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043462
    },
    {
        "content": "<p>though you could integrate in different ways</p>",
        "id": 126413659,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043468
    },
    {
        "content": "<p>(e.g., rustc could invoke us, instead, or we could be a custom driver)</p>",
        "id": 126413702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043484
    },
    {
        "content": "<p>sorry for those two yes, using with Zulip :P</p>",
        "id": 126413706,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526043488
    },
    {
        "content": "<blockquote>\n<p>it seems like it'd be great to continue on this, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, if you have time today—</p>\n</blockquote>\n<p>yes</p>",
        "id": 126413709,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526043504
    },
    {
        "content": "<p>but it seems like getting the info from #4 is the first step</p>",
        "id": 126413710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526043505
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126413781,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526043620
    },
    {
        "content": "<p>I'll be around to chat, it's unlikely that I'll have a chance to write code until Monday or Tuesday at the earliest though. So don't worry about duplicate work for now =)</p>",
        "id": 126430444,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526067798
    },
    {
        "content": "<p>I think neither <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> nor I had a chance to even look at the branch yet</p>",
        "id": 126538758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526306210
    },
    {
        "content": "<p>but I was hoping to look at it quickly now</p>",
        "id": 126538764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526306223
    },
    {
        "content": "<p>I guess <a href=\"https://github.com/bobtwinkles/rust/commit/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983\" target=\"_blank\" title=\"https://github.com/bobtwinkles/rust/commit/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983\">this is the main commit</a></p>",
        "id": 126538777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526306248
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126539022,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526306542
    },
    {
        "content": "<p>I'm doing all this right now :)</p>",
        "id": 126539037,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526306582
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> so I agree with <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> that we ought to be able to refactor the borrow-check to share more core</p>",
        "id": 126539471,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526307198
    },
    {
        "content": "<p>I'm not sure how much to worry about that -- maybe worth landing something first? -- but ...</p>",
        "id": 126539477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526307213
    },
    {
        "content": "<p>I guess the idea would be to have a function that , for a given <code>Location</code>, returns a list of invalidated loans (and why)</p>",
        "id": 126539532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526307266
    },
    {
        "content": "<p>which the borrow checker could then call</p>",
        "id": 126539539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526307274
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126539687,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526307501
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> so -- in terms of what code goes where —</p>",
        "id": 126552973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325192
    },
    {
        "content": "<p>the first step is modifying <code>rustc</code> so that it generates the <code>Invalidates</code> tuples at the right locations</p>",
        "id": 126552978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325216
    },
    {
        "content": "<p>it looks like <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> got pretty far there, the main problem is that there is a lot of code duplication</p>",
        "id": 126552984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325235
    },
    {
        "content": "<p>I'm trying to take a shortcut :P</p>",
        "id": 126553024,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526325256
    },
    {
        "content": "<p>that is, the existing borrow check code in <code>librustc_mir</code> and this \"fact dumper\" kind of encode the same info</p>",
        "id": 126553025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325260
    },
    {
        "content": "<p>right now, the borrow checker works sort of like this:</p>",
        "id": 126553029,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325268
    },
    {
        "content": "<p>it walks the MIR</p>",
        "id": 126553030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325270
    },
    {
        "content": "<p>and, for each statement, determines what loans it invalidates -- then it checks if those loans are \"in scope\" at that point -- if both are true it reports an error</p>",
        "id": 126553041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325304
    },
    {
        "content": "<p>but these concepts are not \"explicitly materialized\" as facts per se</p>",
        "id": 126553045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325313
    },
    {
        "content": "<p>more like, the borrow check invokes some helper fn whose name I forgot — <code>check_access_for_conflict</code>, I think? — for each of the loans that would be invalidated</p>",
        "id": 126553051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325342
    },
    {
        "content": "<p>or \"borrows\", as we call them there</p>",
        "id": 126553052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325347
    },
    {
        "content": "<blockquote>\n<p>that is, the existing borrow check code in <code>librustc_mir</code> and this \"fact dumper\" kind of encode the same info</p>\n</blockquote>\n<p>when you say fact dumper, what are you referring to?</p>",
        "id": 126553056,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526325360
    },
    {
        "content": "<p>I'm referring to <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span>'s branch</p>",
        "id": 126553126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325444
    },
    {
        "content": "<p>but it builds on some code I landed in rustc a bit back</p>",
        "id": 126553132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325452
    },
    {
        "content": "<p>that lets you pass <code>-Znll-facts</code> to rustc</p>",
        "id": 126553146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325457
    },
    {
        "content": "<p>which causes it to dump facts into a subdirectory</p>",
        "id": 126553149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325465
    },
    {
        "content": "<p>got it</p>",
        "id": 126553201,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526325511
    },
    {
        "content": "<p>anyway I actually think the code duplication is ok for now</p>",
        "id": 126553216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325537
    },
    {
        "content": "<p>so we could land it as is — potentially — and then resolve that</p>",
        "id": 126553221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325544
    },
    {
        "content": "<p>but it <em>would</em> be nice if the borrow checker itself</p>",
        "id": 126553225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325550
    },
    {
        "content": "<p>ok</p>",
        "id": 126553230,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526325552
    },
    {
        "content": "<p>used these facts to drive itself</p>",
        "id": 126553231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325552
    },
    {
        "content": "<p>so that our tests would check that they are a complete set</p>",
        "id": 126553237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325561
    },
    {
        "content": "<p>(because, if they weren't, we'd be missing errors)</p>",
        "id": 126553239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325565
    },
    {
        "content": "<p>anyway, this is all just the 1st step — once we have the facts available, there is work to do on the <code>borrow-check</code> repository side</p>",
        "id": 126553246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325589
    },
    {
        "content": "<p>haven't checked <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> code yet, but seems like we need to make that compile and work</p>",
        "id": 126553309,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526325638
    },
    {
        "content": "<p>I mean, it seems that it doesn't miss more stuff</p>",
        "id": 126553314,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526325652
    },
    {
        "content": "<p>yeah</p>",
        "id": 126553391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325769
    },
    {
        "content": "<p>the code is pretty straight forward (nice job <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> =)</p>",
        "id": 126553406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325809
    },
    {
        "content": "<p>you can view it in <a href=\"https://github.com/bobtwinkles/rust/commit/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983\" target=\"_blank\" title=\"https://github.com/bobtwinkles/rust/commit/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983\">this commit</a></p>",
        "id": 126553407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325815
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126553416,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526325834
    },
    {
        "content": "<p>in particular <a href=\"https://github.com/bobtwinkles/rust/blob/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983/src/librustc_mir/borrow_check/nll/invalidation.rs\" target=\"_blank\" title=\"https://github.com/bobtwinkles/rust/blob/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983/src/librustc_mir/borrow_check/nll/invalidation.rs\">this file</a></p>",
        "id": 126553455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325844
    },
    {
        "content": "<p>it walks over the MIR and figures out which paths are manipulated and how</p>",
        "id": 126553464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325873
    },
    {
        "content": "<p>so e.g. an <a href=\"https://github.com/bobtwinkles/rust/blob/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983/src/librustc_mir/borrow_check/nll/invalidation.rs#L70-L83\" target=\"_blank\" title=\"https://github.com/bobtwinkles/rust/blob/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983/src/librustc_mir/borrow_check/nll/invalidation.rs#L70-L83\">assign statement is here</a></p>",
        "id": 126553466,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325879
    },
    {
        "content": "<p>these ultimately boil down to calls to <a href=\"https://github.com/bobtwinkles/rust/blob/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983/src/librustc_mir/borrow_check/nll/invalidation.rs#L475-L481\" target=\"_blank\" title=\"https://github.com/bobtwinkles/rust/blob/d0fb8a3b50d4c2e6c62eb034f6a5bf0d24427983/src/librustc_mir/borrow_check/nll/invalidation.rs#L475-L481\">this function</a></p>",
        "id": 126553481,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325908
    },
    {
        "content": "<p>I guess it doesn't build though</p>",
        "id": 126553496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325947
    },
    {
        "content": "<p>or at least I don't see impls of things like <code>report_conflicting_borrow</code></p>",
        "id": 126553499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325957
    },
    {
        "content": "<p>but I think the idea would be that you would add an <code>Invalidated</code> fact for each such call</p>",
        "id": 126553539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325967
    },
    {
        "content": "<p>(this code looks like it's kind of cut-and-paste out from the rest of the borrow checker, which makes total sense)</p>",
        "id": 126553544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526325983
    },
    {
        "content": "<p>Your analysis there is correct, is mostly copy paste =P.<br>\nThe general strategy was to copy over most of the core, rip out the real error reporting, and replace it with fact generation</p>",
        "id": 126553847,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526326343
    },
    {
        "content": "<p>I got about halfway though ripping out the error reporting and didn't get to the last step there at all really</p>",
        "id": 126553870,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526326379
    },
    {
        "content": "<p>Though I think it should be reasonably trivial (just append to the fact list probably)</p>",
        "id": 126553956,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526326454
    },
    {
        "content": "<p>I'll have some time to hack on something borrow-check related later today too, possibly the nicer front end if <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> is going to finish this up</p>",
        "id": 126553991,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526326524
    },
    {
        "content": "<p>I can also finish up this patch, I feel kinda bad about dropping the ball</p>",
        "id": 126554061,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526326573
    },
    {
        "content": "<p>I'm ok with taking it over and also ok with leaving it to you</p>",
        "id": 126554077,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526326603
    },
    {
        "content": "<p>can't promise that I will finish it all today</p>",
        "id": 126554082,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526326614
    },
    {
        "content": "<p>but I can promise to work on it a bit today and tomorrow and finish this ASAP</p>",
        "id": 126554100,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526326646
    },
    {
        "content": "<p>I'm trying to think: it seems like it woudl make the most sense for <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> to finish what they started, but is there follow-up work we can productively do on the borrow-check side <em>now</em></p>",
        "id": 126554108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326670
    },
    {
        "content": "<p>I also opened up this <a href=\"https://github.com/rust-lang-nursery/borrow-check/issues/26\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/borrow-check/issues/26\">https://github.com/rust-lang-nursery/borrow-check/issues/26</a> which seems like it might interest you <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> , as an aside</p>",
        "id": 126554148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326686
    },
    {
        "content": "<p>(we could flesh it out and make it more concrete)</p>",
        "id": 126554155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326702
    },
    {
        "content": "<p>(basically I'd like some other way to use <code>borrow-check</code> that lets us test and develop examples without having to run rustc)</p>",
        "id": 126554163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326717
    },
    {
        "content": "<blockquote>\n<p>I'm trying to think: it seems like it woudl make the most sense for <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> to finish what they started, but is there follow-up work we can productively do on the borrow-check side <em>now</em></p>\n</blockquote>\n<p>well</p>",
        "id": 126554183,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326782
    },
    {
        "content": "<p>one thing we could obviously do</p>",
        "id": 126554186,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326786
    },
    {
        "content": "<p>we could add a kind of filter on the differential-dataflow rules</p>",
        "id": 126554189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326799
    },
    {
        "content": "<p>That works for me. I can finish this up then if that's alright <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>. I know you claimed it earlier and I kinda stole it</p>",
        "id": 126554231,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526326804
    },
    {
        "content": "<p>that cause it to ignore loans that arent' relevant <em>anywhere</em></p>",
        "id": 126554235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326805
    },
    {
        "content": "<p>not that interesting but maybe relevant</p>",
        "id": 126554244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326823
    },
    {
        "content": "<p>anyway it'd be mostly an exercise in learning how stuff work</p>",
        "id": 126554248,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I culd write-up some instructions on that if you have time now</p>",
        "id": 126554250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326845
    },
    {
        "content": "<p>well let me try to add a few notes into #4 anyway</p>",
        "id": 126554251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526326859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> go ahead :)</p>",
        "id": 126554319,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526326942
    },
    {
        "content": "<p>all yours</p>",
        "id": 126554322,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526326948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yep, let me know what to do :)</p>",
        "id": 126554395,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526327049
    },
    {
        "content": "<p>Sounds good, thanks</p>",
        "id": 126554406,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526327073
    },
    {
        "content": "<p>I have time to do some rustc stuff again since today, besides from going to the doctor with the baby :)</p>",
        "id": 126554450,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526327144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I wrote up <a href=\"https://github.com/rust-lang-nursery/borrow-check/issues/4#issuecomment-388940330\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/borrow-check/issues/4#issuecomment-388940330\">this</a></p>",
        "id": 126554629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526327400
    },
    {
        "content": "<p>very simple first step, but I imagine it'll take a bit to get acquainted with <code>borrow-check</code> codebase anyhow</p>",
        "id": 126554679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526327412
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126554686,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526327452
    },
    {
        "content": "<p>so it's two things? <a href=\"https://github.com/rust-lang-nursery/borrow-check/issues/26\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/borrow-check/issues/26\">https://github.com/rust-lang-nursery/borrow-check/issues/26</a> and <a href=\"https://github.com/rust-lang-nursery/borrow-check/issues/4#issuecomment-388940330\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/borrow-check/issues/4#issuecomment-388940330\">https://github.com/rust-lang-nursery/borrow-check/issues/4#issuecomment-388940330</a> ?</p>",
        "id": 126554705,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526327514
    },
    {
        "content": "<p>those are distinct things</p>",
        "id": 126554783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526327631
    },
    {
        "content": "<p>either one seems fine</p>",
        "id": 126554784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526327634
    },
    {
        "content": "<p>but the latter is <em>much</em> more concrete</p>",
        "id": 126554787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526327641
    },
    {
        "content": "<p>the former is kind of a big task</p>",
        "id": 126554826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526327644
    },
    {
        "content": "<p>I think my branch includes step 1 there</p>",
        "id": 126554855,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526327723
    },
    {
        "content": "<p>ok</p>",
        "id": 126554859,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526327737
    },
    {
        "content": "<p>gonna try to help with the latter thing</p>",
        "id": 126554864,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526327756
    },
    {
        "content": "<p>Oh wait that's in borrow-check nvm</p>",
        "id": 126554901,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526327764
    },
    {
        "content": "<p>I added that to all facts in rustc</p>",
        "id": 126554909,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526327782
    },
    {
        "content": "<p>right, those are separate</p>",
        "id": 126554910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526327788
    },
    {
        "content": "<p>wrt a friendlier frontend, maybe the one at nll-soufflé could be reused <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ?</p>",
        "id": 126556214,
        "sender_full_name": "lqd",
        "timestamp": 1526329294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm going to the doctor now with the little baby :), but was reading what you wrote</p>",
        "id": 126558310,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332018
    },
    {
        "content": "<p>in particular <code>then we would need to make that compile loading facts from invalidated.facts.</code></p>",
        "id": 126558319,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332036
    },
    {
        "content": "<p>what does it means to compile loading a file?</p>",
        "id": 126558323,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332051
    },
    {
        "content": "<p>you mean that you want the thing to run with invalidated.facts?</p>",
        "id": 126558329,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332067
    },
    {
        "content": "<p>and also</p>",
        "id": 126558384,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332124
    },
    {
        "content": "<p>where is invalidated.facts?</p>",
        "id": 126558386,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332129
    },
    {
        "content": "<p>it's not under inputs dir</p>",
        "id": 126558402,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332154
    },
    {
        "content": "<p>should I generate that somehow?</p>",
        "id": 126558407,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332170
    },
    {
        "content": "<p>sorry, I'm very late to the party, I guess you explained all this several times</p>",
        "id": 126558414,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332188
    },
    {
        "content": "<p>I will do this when I'm back</p>",
        "id": 126558470,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526332228
    },
    {
        "content": "<blockquote>\n<p>should I generate that somehow?</p>\n</blockquote>\n<p>sorry, should have been clearer: yes, I figured you'd just make an empty file to start</p>",
        "id": 126560371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526334932
    },
    {
        "content": "<p>since we are not actually using this data for anything yet</p>",
        "id": 126560373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526334942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm back and this thing is done</p>",
        "id": 126562734,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338307
    },
    {
        "content": "<p>the part 1</p>",
        "id": 126562739,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338315
    },
    {
        "content": "<p>Nice</p>",
        "id": 126562741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526338319
    },
    {
        "content": "<p>hehe, I had to do nothing</p>",
        "id": 126562788,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338337
    },
    {
        "content": "<p>we need to talk about part 2</p>",
        "id": 126562791,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338344
    },
    {
        "content": "<p>ok so</p>",
        "id": 126563050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526338534
    },
    {
        "content": "<p>I was thinking about this on the bike ride home just now</p>",
        "id": 126563057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526338544
    },
    {
        "content": "<p>I've only got a few minutes but maybe I can sketch something on the issue</p>",
        "id": 126563064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526338556
    },
    {
        "content": "<p>ok</p>",
        "id": 126563107,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338566
    },
    {
        "content": "<p>yes</p>",
        "id": 126563108,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338568
    },
    {
        "content": "<p>I'm around with some time to code, so <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126563113,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338590
    },
    {
        "content": "<p>meanwhile I'm going to read borrow-check code</p>",
        "id": 126563116,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526338608
    },
    {
        "content": "<p>ok so I left some notes, but they're probably too vague to be of much use</p>",
        "id": 126563489,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526339067
    },
    {
        "content": "<p>gotta run now in any case</p>",
        "id": 126563491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526339073
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> can you open a PR ?</p>",
        "id": 126563516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526339085
    },
    {
        "content": "<p>yes</p>",
        "id": 126564145,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526339813
    },
    {
        "content": "<p>it's a shame the PR</p>",
        "id": 126564148,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526339822
    },
    {
        "content": "<p>but yes</p>",
        "id": 126564151,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526339824
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/borrow-check/pull/28\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/borrow-check/pull/28\">https://github.com/rust-lang-nursery/borrow-check/pull/28</a></p>",
        "id": 126564259,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526339933
    },
    {
        "content": "<p>heh; I think there's a few more things that could be added.</p>",
        "id": 126566557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526343973
    },
    {
        "content": "<p>I'll leave comments :)</p>",
        "id": 126566559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526343977
    },
    {
        "content": "<p>unsure what happened yesterday with this</p>",
        "id": 126591410,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526390859
    },
    {
        "content": "<p>nothing yet :)</p>",
        "id": 126591415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526390872
    },
    {
        "content": "<p>hehe committed two lines of codes and one was missing</p>",
        "id": 126591417,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526390878
    },
    {
        "content": "<blockquote>\n<p>nothing yet :)</p>\n</blockquote>\n<p>well, talking about the last part I had assigned</p>",
        "id": 126591479,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526390915
    },
    {
        "content": "<p>need to tackle step 2</p>",
        "id": 126591499,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526390948
    },
    {
        "content": "<p>right so I also broke out a new issue that described my thoughts there in a bit more detail</p>",
        "id": 126591520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526390984
    },
    {
        "content": "<p>but this intersects what <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and I are talking about <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> so maybe jump in there :)</p>",
        "id": 126591566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526391006
    },
    {
        "content": "<p>in #making-plans?</p>",
        "id": 126591772,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526391359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> yeah, particularly towards the end -- e.g. <a href=\"#narrow/stream/122657-wg-nll/subject/making-plans/near/126591635\" title=\"#narrow/stream/122657-wg-nll/subject/making-plans/near/126591635\">in this comment</a> I sketched out what I see as the major pieces atm</p>",
        "id": 126591923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526391589
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span>, I'm reading :)</p>",
        "id": 126591976,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526391614
    },
    {
        "content": "<p>70 messages left :P</p>",
        "id": 126591980,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526391618
    },
    {
        "content": "<p>Sorry I meant to write up my progress on this but ran out of time last night. I cleaned up the work I did Thursday and then stopped because I 1) ran in to a doozy of a borrowck error and 2) had to get some sleep. Hopefully I'll have enough time to actually finish this up tonight, but it turns out moving across the country results in some time-consuming tasks =)</p>",
        "id": 126592131,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526391889
    },
    {
        "content": "<p>So reading through other threads, seems like this is blocking a lot of other work. I won't have time to poke at this until 12+ hours from now, so if someone else has spare cycles between now and then (<span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>?) feel free to pick this up</p>",
        "id": 126592467,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526392330
    },
    {
        "content": "<p>my evenings are often filled with child care stuff</p>",
        "id": 126592480,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526392367
    },
    {
        "content": "<p>so don't be too confident that I'll be poking at too many new things in the next 12+ hours</p>",
        "id": 126592505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526392387
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span> No worries. Your children are probably more important than working on this stuff <span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span></p>",
        "id": 126592535,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526392436
    },
    {
        "content": "<p>Just a heads up, I pushed <a href=\"https://github.com/rust-lang/rust/pull/50798\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50798\">https://github.com/rust-lang/rust/pull/50798</a><br>\nThere's some more cleanup I think I should do but it's ready for review.</p>",
        "id": 126646740,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526479790
    },
    {
        "content": "<p>nice</p>",
        "id": 126646759,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526479803
    },
    {
        "content": "<p>I /think/ I picked up all the important cases for invalidations but it's definitely possible I missed something =)</p>",
        "id": 126646800,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526479822
    },
    {
        "content": "<p>cool</p>",
        "id": 126646807,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526479835
    },
    {
        "content": "<p>I'll check :)</p>",
        "id": 126646809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526479838
    },
    {
        "content": "<p>sounds good, thanks</p>",
        "id": 126646821,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526479861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> I left a review fyi</p>",
        "id": 126651593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526486144
    },
    {
        "content": "<p>in particular, I answered some of your FIXME questions</p>",
        "id": 126651602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526486155
    },
    {
        "content": "<p>but it basically looked right to me, though I could easily be missing something too :)</p>",
        "id": 126651644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526486163
    },
    {
        "content": "<p>Cool, I'll take a look after work</p>",
        "id": 126652299,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526487140
    },
    {
        "content": "<p>Probably like 7:30 PST</p>",
        "id": 126652302,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526487149
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <a href=\"https://github.com/rust-lang/rust/pull/50798\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50798\">https://github.com/rust-lang/rust/pull/50798</a> is back in your wheelhouse</p>",
        "id": 126685829,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526543491
    },
    {
        "content": "<p>ok, I r+'d it</p>",
        "id": 126703817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526571840
    },
    {
        "content": "<p>I was chatting a bit with <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> about the next steps <a href=\"#narrow/stream/122657-wg-nll/subject/making-plans/near/126703539\" title=\"#narrow/stream/122657-wg-nll/subject/making-plans/near/126703539\">here</a></p>",
        "id": 126703861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526571847
    },
    {
        "content": "<p>basically we don't have to wait for the PR to land to start trying it out</p>",
        "id": 126703882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526571880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> probably step 1 is to get a build going of rust-lang/rust#50798</p>",
        "id": 126703916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526571961
    },
    {
        "content": "<p>Alright, I'll get that kicked off.</p>",
        "id": 126703959,
        "sender_full_name": "davidtwco",
        "timestamp": 1526571970
    },
    {
        "content": "<p>the blog post actually spelled out the datalog rules we're going to need already</p>",
        "id": 126703962,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526571975
    },
    {
        "content": "<p><span class=\"emoji emoji-1f980\" title=\"crab\">:crab:</span></p>",
        "id": 126703969,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526571992
    },
    {
        "content": "<p>Good luck and God speed</p>",
        "id": 126703973,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526571998
    },
    {
        "content": "<p>not sure what's the best way to \"come up to speed\"</p>",
        "id": 126703977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526572009
    },
    {
        "content": "<p>What was the video you mentioned?</p>",
        "id": 126703995,
        "sender_full_name": "davidtwco",
        "timestamp": 1526572042
    },
    {
        "content": "<p><a href=\"https://www.youtube.com/watch?v=oTnbtGuSpWQ&amp;feature=youtu.be\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=oTnbtGuSpWQ&amp;feature=youtu.be\">https://www.youtube.com/watch?v=oTnbtGuSpWQ&amp;feature=youtu.be</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"oTnbtGuSpWQ\" href=\"https://www.youtube.com/watch?v=oTnbtGuSpWQ&amp;feature=youtu.be\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=oTnbtGuSpWQ&amp;feature=youtu.be\"><img src=\"https://i.ytimg.com/vi/oTnbtGuSpWQ/default.jpg\"></a></div>",
        "id": 126704003,
        "sender_full_name": "csmoe",
        "timestamp": 1526572055
    },
    {
        "content": "<p>this one?</p>",
        "id": 126704011,
        "sender_full_name": "csmoe",
        "timestamp": 1526572063
    },
    {
        "content": "<p>I finished it just now.</p>",
        "id": 126704066,
        "sender_full_name": "csmoe",
        "timestamp": 1526572095
    },
    {
        "content": "<p>that looks like it</p>",
        "id": 126704067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526572101
    },
    {
        "content": "<p>Alright, I'll give that a watch, read the blog post and get that PR built.</p>",
        "id": 126704184,
        "sender_full_name": "davidtwco",
        "timestamp": 1526572229
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> feel free to ping me with any questions of course</p>",
        "id": 126704226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526572302
    },
    {
        "content": "<p>Will do!</p>",
        "id": 126704230,
        "sender_full_name": "davidtwco",
        "timestamp": 1526572312
    },
    {
        "content": "<p>so ... how can I generate input data from <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> PR?</p>",
        "id": 126716806,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526588776
    },
    {
        "content": "<p>taking a look but any pointer is appreciated</p>",
        "id": 126716817,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526588794
    },
    {
        "content": "<p>well, you have to build it first</p>",
        "id": 126716825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526588819
    },
    {
        "content": "<p>then you have to run <code>-Znll-facts</code> on some input</p>",
        "id": 126716836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526588832
    },
    {
        "content": "<p>so we should pick some inputs that have errors :)</p>",
        "id": 126716845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526588860
    },
    {
        "content": "<p>yeah saw about <code>-Znll-facts</code></p>",
        "id": 126716849,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526588868
    },
    {
        "content": "<p>but what were you using on polonius repo?</p>",
        "id": 126716888,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526588884
    },
    {
        "content": "<p>are there some inputs you were already using?</p>",
        "id": 126716903,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526588913
    },
    {
        "content": "<p>do I need to build some example?</p>",
        "id": 126716906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526588919
    },
    {
        "content": "<p>hmm in the video there's an example if I'm not wrong</p>",
        "id": 126716934,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526589000
    },
    {
        "content": "<p>there are some inputs I used on the repo, however,</p>",
        "id": 126717008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526589076
    },
    {
        "content": "<p>none of those examples actually are expected to give an error</p>",
        "id": 126717014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526589085
    },
    {
        "content": "<p>doesn't mean we can't try them, actually :)</p>",
        "id": 126717015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526589090
    },
    {
        "content": "<p>so basically you would do <code>rustc -Znll-facts foo.rs</code></p>",
        "id": 126717075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526589195
    },
    {
        "content": "<p>I think the README.md maybe talks about that?</p>",
        "id": 126717077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526589200
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/polonius/#how-to-generate-your-own-inputs\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/#how-to-generate-your-own-inputs\">yes, there is a section here</a></p>",
        "id": 126717079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526589223
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 126717754,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590107
    },
    {
        "content": "<p>maybe some example like ...</p>",
        "id": 126717757,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590112
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">location_sensitive</span><span class=\"p\">(</span><span class=\"n\">vec</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">];</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">vec</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 126717761,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590127
    },
    {
        "content": "<p>it's the idea you mentioned on the video</p>",
        "id": 126717779,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590150
    },
    {
        "content": "<p>I see. Yes, that's good.</p>",
        "id": 126717883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590312
    },
    {
        "content": "<p>there is an example in the repo you could use</p>",
        "id": 126717889,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590318
    },
    {
        "content": "<p><a href=\"http://issue-47680.rs\" target=\"_blank\" title=\"http://issue-47680.rs\">issue-47680.rs</a> ?</p>",
        "id": 126718033,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590466
    },
    {
        "content": "<p>but does this fail in the insensitive analysis?</p>",
        "id": 126718076,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590547
    },
    {
        "content": "<p>it depends on what we try to do, just dumping invalidates would be good to test this out</p>",
        "id": 126718121,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590566
    },
    {
        "content": "<p>but at the same time we would need one that fails</p>",
        "id": 126718129,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590575
    },
    {
        "content": "<p>no, not that one</p>",
        "id": 126718132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590582
    },
    {
        "content": "<p>it will however definitely fail in the insensitive analysis</p>",
        "id": 126718136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590596
    },
    {
        "content": "<p>it's not the one I meant tho</p>",
        "id": 126718137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590601
    },
    {
        "content": "<p>one sec</p>",
        "id": 126718138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590607
    },
    {
        "content": "<p>well probably the one that fails would be more useful when I do the second part which is tying timely_opt with insensitive stuff</p>",
        "id": 126718142,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590612
    },
    {
        "content": "<p>yeah for the first part I think anything is good</p>",
        "id": 126718150,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526590630
    },
    {
        "content": "<p>I meant <code>src/test/ui/nll/get_default.rs</code></p>",
        "id": 126718212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590686
    },
    {
        "content": "<p>it's basically the same test as the one from our discussion tho</p>",
        "id": 126718216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526590692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> were you able to run anything?</p>",
        "id": 126719738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526592979
    },
    {
        "content": "<p>hey, I'm back</p>",
        "id": 126719906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526593259
    },
    {
        "content": "<p>not yet, wasn't with the computer</p>",
        "id": 126719913,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526593269
    },
    {
        "content": "<p>let me try</p>",
        "id": 126719914,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526593271
    },
    {
        "content": "<p>I created <a href=\"https://github.com/rust-lang-nursery/polonius/pull/35\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/35\">https://github.com/rust-lang-nursery/polonius/pull/35</a> to \"properly\" close out #4. It just adds some example facts to the repo so people don't necessarily have to build their own <code>rustc</code> to play with <code>invalidates</code>. CC <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>  and <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 126737404,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526629734
    },
    {
        "content": "<p>I guess that closes out #4; should probably open another issue to change the official output from the <code>borrow_live_at</code> results to <em>just</em> the points where errors occur</p>",
        "id": 126740857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526636060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> cool, I had done the same in another PR will check with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> how to finish my stuff</p>",
        "id": 126743702,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1526641481
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, I'm around now</p>",
        "id": 126746831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526647018
    },
    {
        "content": "<p>Don't we want both? The invalidates facts for input and errors as output validation</p>",
        "id": 126753328,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526654839
    },
    {
        "content": "<p>Oh you mean in the prototype</p>",
        "id": 126753343,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526654868
    },
    {
        "content": "<p>Brain isn't working at full speed quite yet</p>",
        "id": 126753385,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526654891
    },
    {
        "content": "<blockquote>\n<p>Don't we want both? The invalidates facts for input and errors as output validation</p>\n</blockquote>\n<p>not sure I understood you here :)</p>",
        "id": 126753812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526655557
    },
    {
        "content": "<p>but I think the next logical step after adding <code>invalidates</code> relation is rejiggering the analyses to output <em>errors</em> instead of the raw <code>borrow_live_at</code> (though this impacts also the integration that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> was proposing, but we can tweak this — e.g., have an option to emit <code>borrow_live_at</code> too)</p>",
        "id": 126753877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526655614
    },
    {
        "content": "<p>I'm not sure just how far <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> got on this but in <a href=\"https://github.com/rust-lang-nursery/polonius/pull/34\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/34\">their PR</a> they have the basic setup for the location insensitive case, anyway</p>",
        "id": 126753900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526655666
    }
]