[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Are you staying for Impl Days?</p>",
        "id": 127154056,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527402005
    },
    {
        "content": "<p>(Just thinking that we should make a group of people working on NLL during Impl Days.)</p>",
        "id": 127154113,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527402223
    },
    {
        "content": "<p>Unfortunately not, leaving tomorrow. I think I remember your name flash on a badge and it seemed familIar d:)</p>",
        "id": 127154160,
        "sender_full_name": "lqd",
        "timestamp": 1527402313
    },
    {
        "content": "<p>It would have been nice indeed</p>",
        "id": 127154200,
        "sender_full_name": "lqd",
        "timestamp": 1527402371
    },
    {
        "content": "<p>I see. It seems that I managed to get sick, so not sure if I manage to come tomorrow.</p>",
        "id": 127158660,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527413559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> We are 8 beginners at Impl Days keen to work on NLL.</p>",
        "id": 127195322,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527496310
    },
    {
        "content": "<p>Any help would be greatly appreciated. <span class=\"emoji emoji-263a\" title=\"relaxed\">:relaxed:</span></p>",
        "id": 127195417,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527496467
    },
    {
        "content": "<p>Dropbox paper: <a href=\"https://paper.dropbox.com/doc/Rust-Fest-Impl-Days-NLL-bEyDVSumYzlqpGx51ayY3\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Rust-Fest-Impl-Days-NLL-bEyDVSumYzlqpGx51ayY3\">https://paper.dropbox.com/doc/Rust-Fest-Impl-Days-NLL-bEyDVSumYzlqpGx51ayY3</a></p>",
        "id": 127195432,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527496516
    },
    {
        "content": "<p>This is one of the unsound cases - <a href=\"https://github.com/rust-lang/rust/issues/51117\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51117\">https://github.com/rust-lang/rust/issues/51117</a></p>",
        "id": 127195801,
        "sender_full_name": "emilsp",
        "timestamp": 1527497228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> its a holiday in the USA today so its at least possible that Niko is spending the day offline with his family</p>",
        "id": 127198026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527501039
    },
    {
        "content": "<p>I'll be around somewhat today.</p>",
        "id": 127199503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527503334
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> what is current state?</p>",
        "id": 127199510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527503357
    },
    {
        "content": "<p>Currently, everybody is trying to understand what is Polonius, Datalog, etc.</p>",
        "id": 127200144,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527504452
    },
    {
        "content": "<p>ok :)</p>",
        "id": 127200148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527504463
    },
    {
        "content": "<p>that's kind of astray from the soundness bugs</p>",
        "id": 127200151,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527504472
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/50716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50716\">https://github.com/rust-lang/rust/issues/50716</a> might be an easy-ish one to fix, for example</p>",
        "id": 127200192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527504504
    },
    {
        "content": "<p>I'd be up to walk somebody through that</p>",
        "id": 127200193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527504510
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/50716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50716\">https://github.com/rust-lang/rust/issues/50716</a> might be an easy-ish one to fix, for example</p>\n</blockquote>\n<p>Trying to understand what it is about.</p>",
        "id": 127200214,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527504577
    },
    {
        "content": "<p>I'm online and can help field random datafrog questions. Not super on-point about polonius and what it needs next, though.</p>",
        "id": 127200341,
        "sender_full_name": "Frank McSherry",
        "timestamp": 1527504735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> actually that bug is kinda' silly, let me look over the rest first</p>",
        "id": 127200612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505320
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/50716\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50716\">https://github.com/rust-lang/rust/issues/50716</a> might be an easy-ish one to fix, for example</p>\n</blockquote>\n<p>Trying to understand what it is about.</p>\n</blockquote>\n<p>Ok, I think I understand now where the problem is.</p>",
        "id": 127200651,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527505332
    },
    {
        "content": "<p>I guess though that, apart from <a href=\"https://github.com/rust-lang/rust/issues/47184\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47184\">https://github.com/rust-lang/rust/issues/47184</a>, that is the major open soundness issue. The others seem mostly to have to do with matches, and <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> has an open PR that (I believe) should fix them</p>",
        "id": 127200671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505432
    },
    {
        "content": "<p>no no, my open PR isn't for this</p>",
        "id": 127200714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> isn't for what?</p>",
        "id": 127200716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505465
    },
    {
        "content": "<p>I am working on a branch that addresses some of this</p>",
        "id": 127200717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505467
    },
    {
        "content": "<p>oh oh oh wait</p>",
        "id": 127200720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505478
    },
    {
        "content": "<p>you have an open PR for <strong>matches</strong></p>",
        "id": 127200721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505481
    },
    {
        "content": "<p>I misread your message</p>",
        "id": 127200722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505481
    },
    {
        "content": "<p>right sorry</p>",
        "id": 127200723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505487
    },
    {
        "content": "<p>okay yes, I do have an open PR for <strong>matches</strong> that hopefully resolves much of our issues there</p>",
        "id": 127200728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505503
    },
    {
        "content": "<p>ok</p>",
        "id": 127200736,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505512
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> actually that bug is kinda' silly, let me look over the rest first</p>\n</blockquote>\n<p>OK. By the way, are Polonius issues 12, 19, and 20 available to work right now?</p>",
        "id": 127200744,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527505527
    },
    {
        "content": "<p>and I am independently working on a branch that addresses one part of <a href=\"https://github.com/rust-lang/rust/issues/47184\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47184\">rust-lang/rust#47184</a> ((namely, deconstructive bindings like <code>let (a, b): (T, U);</code>))</p>",
        "id": 127200758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505562
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> in terms of polonius, I feel like rustc-integration is the most imp't thing, but <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> and <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> have that under control; after that, <a href=\"https://github.com/rust-lang-nursery/borrow-check/issues/20\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/borrow-check/issues/20\">https://github.com/rust-lang-nursery/borrow-check/issues/20</a> may be the most interesting issue. It's maybe semi-blocked by #24 but not necessarily</p>",
        "id": 127200792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505586
    },
    {
        "content": "<p>I think these issues are the ones that I could help others to work on.</p>",
        "id": 127200793,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527505587
    },
    {
        "content": "<p>but I haven't thought terribly hard about how to further generalize to e.g. <code>foo::&lt;'static&gt;(argh)</code></p>",
        "id": 127200795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527505600
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> I'm not aware of anyone working on those. That said, I don't know that #19 would be particularly helpful. I think that the DatafrogOpt variant probably solves that problem fairly effectively.</p>",
        "id": 127200808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505637
    },
    {
        "content": "<p>I should probably close that</p>",
        "id": 127200859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505719
    },
    {
        "content": "<p>OK, so we have four issues we could work on.</p>",
        "id": 127200950,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527505897
    },
    {
        "content": "<p>I'm starting to take a look at <a href=\"https://github.com/rust-lang-nursery/polonius/issues/20\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/20\">https://github.com/rust-lang-nursery/polonius/issues/20</a></p>",
        "id": 127201145,
        "sender_full_name": "Julien Cretin (ia0)",
        "timestamp": 1527506221
    },
    {
        "content": "<p>Personally, I would be up to work on either #47184 or #50716. However, I would definitely need a walk through.</p>",
        "id": 127201211,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527506334
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> well let's fix #50716, or .. at least partially fix it .. (there's some subtleties I think concerning location). But it seems like something you can get a PR up for today whereas the remaining parts of #47184 would be quite hard)</p>",
        "id": 127201352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527506550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> </p>\n<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> well let's fix #50716, or .. at least partially fix it .. (there's some subtleties I think concerning location). But it seems like something you can get a PR up for today whereas the remaining parts of #47184 would be quite hard)</p>\n</blockquote>\n<p>Sounds good.</p>",
        "id": 127201639,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527507024
    },
    {
        "content": "<p>ok <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> — I'm writing up some brief notes on #50716</p>",
        "id": 127201680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507089
    },
    {
        "content": "<p>OK.</p>",
        "id": 127201731,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527507131
    },
    {
        "content": "<p>Heyo! Me and <span class=\"user-mention\" data-user-id=\"117911\">@Yati Sagade</span> are taking a look at better debug output with GraphViz.<br>\nMay have qs for <span class=\"user-mention\" data-user-id=\"116609\">@Frank McSherry</span></p>",
        "id": 127201748,
        "sender_full_name": "Andrea Lattuada",
        "timestamp": 1527507157
    },
    {
        "content": "<p>I'm going to have a look at <a href=\"https://github.com/rust-lang/rust/issues/48417\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/48417\">https://github.com/rust-lang/rust/issues/48417</a>, although I don't think I should self-assign until I think I've made some headway</p>",
        "id": 127201753,
        "sender_full_name": "Jaime Valdemoros",
        "timestamp": 1527507169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> <a href=\"https://github.com/rust-lang/rust/issues/50716#issuecomment-392503047\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50716#issuecomment-392503047\">here is the comment</a></p>",
        "id": 127201805,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117908\">@Jaime Valdemoros</span> sounds fine, you can always leave a comment, but I don't know that you have any competition. I'll try to be around to answer any questions...</p>",
        "id": 127201809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507303
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> <a href=\"https://github.com/rust-lang/rust/issues/50716#issuecomment-392503047\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50716#issuecomment-392503047\">here is the comment</a></p>\n</blockquote>\n<p>Thanks, reading it.</p>",
        "id": 127201906,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527507472
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, <span class=\"user-mention\" data-user-id=\"117914\">@Christian</span> and I have been looking at whether we could spot any easy speed-ups in the use of datafrog. We're noticed that on the 'bad input' in the repo we have no output from datafrogopts compared to naive - do you know if that's expected?</p>",
        "id": 127207106,
        "sender_full_name": "Jaime Valdemoros",
        "timestamp": 1527516292
    },
    {
        "content": "<p>I don't (fully) understand the question</p>",
        "id": 127207257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516539
    },
    {
        "content": "<p>but in general naive and datafrogopt should produce precisely the same final result</p>",
        "id": 127207263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516549
    },
    {
        "content": "<p>and can be compared against one another</p>",
        "id": 127207264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516552
    },
    {
        "content": "<p>that is indeed the whole point of keeping naive around :)</p>",
        "id": 127207265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516559
    },
    {
        "content": "<p>I think you are saying that we are not really testing as thoroughly as we could be? In which case I'm sure that's true and would welcome PRs to do better :)</p>",
        "id": 127207272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516588
    },
    {
        "content": "<p>No, I don't think I'm saying you should do anything differently :) I think I was just messing up the flags - with <code>-v</code> both print the same thing, but without <code>-v</code> (which is what I was doing) the naive one was printing out a load of results and datafrogopts wasn't which made me think it was coming to a different conclusion to datafrogopts.</p>",
        "id": 127208089,
        "sender_full_name": "Jaime Valdemoros",
        "timestamp": 1527517686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117908\">@Jaime Valdemoros</span> oh, hmm, well — that is probably a sorta bug too :)</p>",
        "id": 127208373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518106
    },
    {
        "content": "<p>I think that (without <code>-v</code>) both should just print the errors and that's it</p>",
        "id": 127208380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518117
    },
    {
        "content": "<p>I'm not sure why it is acting differently actually...</p>",
        "id": 127208386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518133
    },
    {
        "content": "<p>probably something simple though</p>",
        "id": 127208391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518140
    },
    {
        "content": "<p>Okay, thanks, that's what we were wondering <span class=\"emoji emoji-1f642\" title=\"simple smile\">:simple_smile:</span> might be a good thing for us to possibly contribute with</p>",
        "id": 127208476,
        "sender_full_name": "Jaime Valdemoros",
        "timestamp": 1527518234
    },
    {
        "content": "<p>yeah, seems like a simple place to start  and get familiar:)</p>",
        "id": 127208483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518256
    },
    {
        "content": "<p>(if anybody is still looking for things to do, we could merge <a href=\"https://github.com/rust-lang-nursery/polonius/pull/48\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/48\">https://github.com/rust-lang-nursery/polonius/pull/48</a> then I think there is follow-up work to do there)</p>",
        "id": 127208604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> here are a couple things I thought could be interesting for the people at impl days, what do you think ?<br>\n- implement <code>def</code> into polonius-parser, and produce the correct <code>region_live_at</code> with liveness, as described in the 2 github PRs<br>\n- add crude statistics to datafrog, behind a feature, to both have the number of tuples, and the time it took to merge and produce all of them, per Relation. There are IIRC examples of this inside datafrog itself rn (look for commented out Drop impls)<br>\n- remove the <code>subset</code> symmetries, a lot of tuples in clap are the same region on both sides of the relation<br>\n- if anybody wants to land leapfrog, note that the gists we showed still produce <code>borrow_live_at</code> while the repo ones are more looking to produce errors; while we could lean leapfrog producing borrows and joining to <code>invalidates</code> as right now; however in this direction, <code>borrow_live_at</code> is a temporary that does not need to produce tuples (except in -v) + Invalidates (in my mind) will cut into the relation quite a bit since those should be a nice subset of all points. I have already done this work but was waiting for FLTJ to land in master, without more tests I'm not sure on a specific API point, but I can find the gist when I get to the office if need be<br>\n- try to see if we need to share more of the location-insensitive and -sensitive work, by filtering the latter's work with the former's output<br>\n- find out what is slow in compiling <code>webrender</code> and <code>cargo</code> when compiled with NLL, as shown on perf.rlo — use the code versions in the <code>rustc-perf</code> repo; extract benchmark use cases for polonius out of those slow cases, if needed (or maybe rustc issues)</p>",
        "id": 127238910,
        "sender_full_name": "lqd",
        "timestamp": 1527579767
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> these all seem good, whether at impl days or not. We should open corresponding issues on the polonius repository</p>",
        "id": 127240010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527581776
    },
    {
        "content": "<p>(would you be up for doing that?)</p>",
        "id": 127240023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527581811
    },
    {
        "content": "<p>I think outside of polonius, we should be focusing <em>probably</em> on diagnostics — I am kind of unclear on the status there, I know that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> did a bunch of awesome work categorizing things, but I'm not clear on how many are fixed (it looked like there was good progress by <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> on at least some things)</p>",
        "id": 127240032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527581852
    },
    {
        "content": "<p>(sure I can create issues at lunch break, which is in a couple hours or so)</p>",
        "id": 127240095,
        "sender_full_name": "lqd",
        "timestamp": 1527581939
    },
    {
        "content": "<p>another datafrog thing people might find interesting: implement multi variable TFLJ, to see if removing even more of the temporary Variables has a an impact; more info on how to do that from Frank <a href=\"#narrow/stream/122657-wg-nll/subject/optimizing-transitive-closure/near/126965559\" title=\"#narrow/stream/122657-wg-nll/subject/optimizing-transitive-closure/near/126965559\">here</a></p>",
        "id": 127240591,
        "sender_full_name": "lqd",
        "timestamp": 1527582691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> you know what's annoying? that <code>-Znll</code> doesn't mean the same thing as <code>#![feature(nll)]</code> (right?).</p>",
        "id": 127241063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527583408
    },
    {
        "content": "<p>I wish that we had <code>-Zdisable-two-phase-borrows</code> instead</p>",
        "id": 127241066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527583424
    },
    {
        "content": "<p>isn't this annoyance worth to be raised as an issue?</p>",
        "id": 127245071,
        "sender_full_name": "qmx",
        "timestamp": 1527590468
    },
    {
        "content": "<p>we certainly can make that change, especially at this point</p>",
        "id": 127245075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527590488
    },
    {
        "content": "<p>though we don't even have <code>-Z nll</code> anymore</p>",
        "id": 127245137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527590534
    },
    {
        "content": "<p>(<code>-Z borrowck=mir</code> certainly <em>could</em> imply <code>-Z two-phase-borrows</code>, which is probably what niko meant. Its a little goofy, but at this point <code>-Z borrowck=mir</code> implies a lot of things beyond the switch the mir-borrowck...)</p>",
        "id": 127245148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527590592
    },
    {
        "content": "<p>I don't know what I meant:) mostly that I want something as easy as <code>#![feature(nll)]</code> — whether it be <code>-Znll</code> or <code>-Zborrowck=mir</code> I don't care :)</p>",
        "id": 127245468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527591125
    },
    {
        "content": "<p>in some ways the easiest thing would be to re-add <code>-Z nll</code> and just have it imply the same set of flags that <code>#![feature(nll)]</code> does</p>",
        "id": 127245792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527591638
    },
    {
        "content": "<p>Though perhaps some would find that confusing...</p>",
        "id": 127245794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527591652
    },
    {
        "content": "<p>(by \"easiest\" I sort of mean for end-users. It probably <em>isn't</em> the easiest to implement, though I suspect it wouldn't be that hard either...)</p>",
        "id": 127245802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527591687
    },
    {
        "content": "<p>I created <a href=\"https://github.com/rust-lang-nursery/polonius/issues/61\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/61\">https://github.com/rust-lang-nursery/polonius/issues/61</a> <a href=\"https://github.com/rust-lang-nursery/polonius/issues/62\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/62\">https://github.com/rust-lang-nursery/polonius/issues/62</a> and <a href=\"https://github.com/rust-lang-nursery/datafrog/issues/6\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/datafrog/issues/6\">https://github.com/rust-lang-nursery/datafrog/issues/6</a> to track some of the ideas mentioned this morning (sharing work between location-insensitive and sensitive analyses is already in an issue somewhere IIRC, and investigation webrender/cargo NLL slowness didn't feel like it should be in the polonius repo)</p>",
        "id": 127246904,
        "sender_full_name": "lqd",
        "timestamp": 1527593709
    },
    {
        "content": "<p>ah and <a href=\"https://github.com/rust-lang-nursery/datafrog/issues/5\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/datafrog/issues/5\">https://github.com/rust-lang-nursery/datafrog/issues/5</a> as well</p>",
        "id": 127249039,
        "sender_full_name": "lqd",
        "timestamp": 1527596985
    },
    {
        "content": "<p>Double checking, nobody is working on speed improvements in polonius/datafrog right now? Me and @solidninja intend to work on this for today.</p>",
        "id": 127249655,
        "sender_full_name": "Christian",
        "timestamp": 1527597921
    },
    {
        "content": "<p>Reed had made some tests here <a href=\"#narrow/stream/122657-wg-nll/subject/optimizing-transitive-closure/near/127141172\" title=\"#narrow/stream/122657-wg-nll/subject/optimizing-transitive-closure/near/127141172\">https://rust-lang.zulipchat.com/#narrow/stream/122657-wg-nll/subject/optimizing-transitive-closure/near/127141172</a> recently</p>",
        "id": 127249857,
        "sender_full_name": "lqd",
        "timestamp": 1527598194
    },
    {
        "content": "<p>On the topic of datafrog / polonius speed improvements: I'd want proper tests that check that all algorithms return the correct results for the test inputs (can't find any doing this in the current code base?), and also listing the timings for these so it will be easy to compare various versions of the code. Has anyone worked on this or should I do this now?</p>",
        "id": 127250096,
        "sender_full_name": "Christian",
        "timestamp": 1527598510
    },
    {
        "content": "<p>there are 2-3 tests, including comparing the Naive vs Opt variant on one of the datasets, the rest is at the moment done manually comparing the expected outputs from the in-repo datasets; until we have more tests with the frontend, and finalized rustc integration</p>",
        "id": 127250242,
        "sender_full_name": "lqd",
        "timestamp": 1527598684
    },
    {
        "content": "<p>we have some tests like that with <code>cargo test</code>, but it is true that we need more. The plan was to land the rustc-integration work (currently in bors queue), find places where we are failing soundness tests, extract the facts, and make tests from those (presuming the flaw is in polonius, perhaps, as opposed to rustc). We don't have to necessarily wait though for rustc-integration to <strong>land</strong> before beginning that process -- you can build it locally from <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>'s branch</p>",
        "id": 127250252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527598730
    },
    {
        "content": "<blockquote>\n<p>On the topic of datafrog / polonius speed improvements: I'd want proper tests that check that all algorithms return the correct results for the test inputs (can't find any doing this in the current code base?), and also listing the timings for these so it will be easy to compare various versions of the code. Has anyone worked on this or should I do this now?</p>\n</blockquote>\n<p>I've taken some stabs at doing optimizations within Datafrog. I think there's much larger wins to be hard by doing algorithmic optimizations on Polonius, but didn't get a chance to sit down and think about it this weekend</p>",
        "id": 127257190,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527607525
    }
]