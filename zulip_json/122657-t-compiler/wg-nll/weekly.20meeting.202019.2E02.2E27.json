[
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"491\">@WG-compiler-nll</span> ; we'll be having our meeting in this stream topic in about ... seven hours.</p>",
        "id": 159512370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551274606
    },
    {
        "content": "<p>as discussed last week, the weekly meeting is going to shift to more of a synchronized office hours of sorts. But I still want to take care of pre-triage before the meeting; I've dedicated a <a href=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/pre-triage.202019.2E02.2E27/near/159512514\" title=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/pre-triage.202019.2E02.2E27/near/159512514\">separate topic</a> to that task.</p>",
        "id": 159512696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551274728
    },
    {
        "content": "<p>pre-triage is done. The outcome is <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3AA-NLL+label%3AI-nominated+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3AA-NLL+label%3AI-nominated+\">five nominated issues/prs</a> to discuss at tonight's meeting.</p>",
        "id": 159528278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551284236
    },
    {
        "content": "<p>does \"synchronized office hours of sorts\" mean \"we'll generally talk about issues, ask questions, think about how to solve them ?\"</p>",
        "id": 159531665,
        "sender_full_name": "lqd",
        "timestamp": 1551286345
    },
    {
        "content": "<p>seems reasonable to me</p>",
        "id": 159549372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299133
    },
    {
        "content": "<p>okay <span class=\"user-group-mention\" data-user-group-id=\"491\">@WG-compiler-nll</span> , you got your seven hour warning, now this is your five minute warning. :)</p>",
        "id": 159549433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299165
    },
    {
        "content": "<p>Currently compiling what I hope is a fix for <a href=\"https://github.com/rust-lang/rust/issues/58776\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58776\">#58776</a></p>",
        "id": 159549477,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551299225
    },
    {
        "content": "<p>Hi everyone</p>",
        "id": 159549785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299465
    },
    {
        "content": "<p>as noted <a href=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/weekly.20meeting.202019.2E02.2E27/near/159528278\" title=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/weekly.20meeting.202019.2E02.2E27/near/159528278\">above</a>, pre-triage yielded five nominated issues</p>",
        "id": 159549818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299493
    },
    {
        "content": "<p>I'm hoping we can get through them relatively quickly and then leave the remaining time to free discussion</p>",
        "id": 159549846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299521
    },
    {
        "content": "<p>the nominated issues are <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3AA-NLL+label%3AI-nominated+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3AA-NLL+label%3AI-nominated+\">these five</a></p>",
        "id": 159549909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299540
    },
    {
        "content": "<p>first is \"NLL migrate mode erroneously downgrades error with nested closures, yielding use-after-free\" <a href=\"https://github.com/rust-lang/rust/issues/58776\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58776\">#58776</a>, which sounds like its hopefully under control</p>",
        "id": 159549935,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299565
    },
    {
        "content": "<p>in any case its clear that <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is on the case</p>",
        "id": 159549942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299571
    },
    {
        "content": "<p>so I'm just going to remove the nominated tag; if anyone has Q's about it, lets maybe have those after we go through the other nominations</p>",
        "id": 159549968,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299591
    },
    {
        "content": "<p>going slightly out of order, next is \"Include bounds from promoted constants in NLL\" <a href=\"https://github.com/rust-lang/rust/issues/57202\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57202\">#57202</a></p>",
        "id": 159549990,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299624
    },
    {
        "content": "<p>I nominated this after reviewing it today</p>",
        "id": 159549995,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299632
    },
    {
        "content": "<p>because I just wanted to point out that this change is going to change our handling of a particular test case</p>",
        "id": 159550055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299659
    },
    {
        "content": "<p>as i commented <a href=\"https://github.com/rust-lang/rust/pull/57202#discussion_r260790519\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/57202#discussion_r260790519\">here</a> in my review</p>",
        "id": 159550072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299678
    },
    {
        "content": "<p>seems like it ICEd in some tests ?</p>",
        "id": 159550082,
        "sender_full_name": "lqd",
        "timestamp": 1551299693
    },
    {
        "content": "<p>so the test in question is from issue <a href=\"https://github.com/rust-lang/rust/issues/48697\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/48697\">#48697</a></p>",
        "id": 159550083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299695
    },
    {
        "content": "<blockquote>\n<p>seems like it ICEd in some tests ?</p>\n</blockquote>\n<p>hmm clearly we'll have to look into that too</p>",
        "id": 159550109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299721
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[00:26:48] thread &#39;rustc&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, /checkout/src/libcore/slice/mod.rs:2539:10\n[00:26:48] note: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n[00:26:48]\n[00:26:48] error: internal compiler error: unexpected panic\n[00:26:48]\n[00:26:48] note: the compiler unexpectedly panicked. this is a bug.\n</pre></div>",
        "id": 159550188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299773
    },
    {
        "content": "<p>lack of a stack trace there is unfortunate</p>",
        "id": 159550201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299796
    },
    {
        "content": "<p>Yes, that's from a rebase. I'll have a look soon.</p>",
        "id": 159550204,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551299803
    },
    {
        "content": "<p>any way I personally am okay with the shift in behavior in the test</p>",
        "id": 159550211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299819
    },
    {
        "content": "<p>though it might good to validate the hypothesis I posted as to <em>why</em> its not compiling now</p>",
        "id": 159550230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299833
    },
    {
        "content": "<p>The test was to check that we didn't ICE</p>",
        "id": 159550241,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551299850
    },
    {
        "content": "<p>right. and we don't ICE</p>",
        "id": 159550247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299857
    },
    {
        "content": "<p>but still, it <em>is</em> a change in the static semantics. Its probably a bug fix</p>",
        "id": 159550255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299870
    },
    {
        "content": "<blockquote>\n<p>though it might good to validate the hypothesis I posted as to <em>why</em> its not compiling now</p>\n</blockquote>\n<p>it <em>is</em> compiling now ?</p>",
        "id": 159550310,
        "sender_full_name": "lqd",
        "timestamp": 1551299892
    },
    {
        "content": "<p>tell you what, I'll just give myself an action item to double-check why its behavior changed</p>",
        "id": 159550313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299895
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <a href=\"http://issue-48697.rs\" target=\"_blank\" title=\"http://issue-48697.rs\">issue-48697.rs</a> compiles on current master. After this PR, it gets rejected with a static error</p>",
        "id": 159550327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299921
    },
    {
        "content": "<p>ah understood</p>",
        "id": 159550333,
        "sender_full_name": "lqd",
        "timestamp": 1551299933
    },
    {
        "content": "<p>or ... well the commit I had commented on may have dissapeared</p>",
        "id": 159550357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299969
    },
    {
        "content": "<p>but I assuem that it an artifact of rebasing</p>",
        "id": 159550363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551299976
    },
    {
        "content": "<p>maybe this is stable <a href=\"https://github.com/rust-lang/rust/pull/57202/files#diff-91652dffff87bfbf9b4392ae57c61778L3\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/57202/files#diff-91652dffff87bfbf9b4392ae57c61778L3\">diff link</a> ?</p>",
        "id": 159550420,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300006
    },
    {
        "content": "<p>anyway. I'll work on satisfying my own curiosity here</p>",
        "id": 159550437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300026
    },
    {
        "content": "<p>I'm not so concerned about this one as to try to push for a warning cycle or whatnot</p>",
        "id": 159550447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300038
    },
    {
        "content": "<p>(this case was already being rejected by AST-borrowck)</p>",
        "id": 159550454,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300047
    },
    {
        "content": "<p>next nominated issue: \"user type annotations are captured post normalization\" <a href=\"https://github.com/rust-lang/rust/issues/54940\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54940\">#54940</a></p>",
        "id": 159550472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300080
    },
    {
        "content": "<p>I nominated this in the hopes that niko might be able to report what the plan is for lazy normalization</p>",
        "id": 159550484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300102
    },
    {
        "content": "<p>which he has said is blocking this from being fixed</p>",
        "id": 159550493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300116
    },
    {
        "content": "<p>but I don't think <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is here right now</p>",
        "id": 159550495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300121
    },
    {
        "content": "<p>I can just leave this nominated but we can move along</p>",
        "id": 159550540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300130
    },
    {
        "content": "<p>I sort of am</p>",
        "id": 159550542,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300133
    },
    {
        "content": "<p>I've not been following along (sorry)</p>",
        "id": 159550546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300141
    },
    {
        "content": "<p>they were recently looking for examples of things needing lazy norm</p>",
        "id": 159550556,
        "sender_full_name": "lqd",
        "timestamp": 1551300153
    },
    {
        "content": "<p>its sort of a cross-cutting issue at this point</p>",
        "id": 159550566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300169
    },
    {
        "content": "<p>Ah, lazy norm -- well, answer is that I am currently in an \"investigative\" phase -- and that's it's a high priority of traits WG</p>",
        "id": 159550567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300170
    },
    {
        "content": "<p>between WG-nll and WG-traits</p>",
        "id": 159550568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300177
    },
    {
        "content": "<p>but still haven't formed concrete plan of what we will do</p>",
        "id": 159550573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300182
    },
    {
        "content": "<p>but \"progress is being made\"</p>",
        "id": 159550587,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300187
    },
    {
        "content": "<p>so maybe Ill just leave it nominated and we can maybe hope to discuss tomorrow at T-compiler meeting?</p>",
        "id": 159550594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300193
    },
    {
        "content": "<p>seems ok; I probaly won't have a lot more to say by then, but maybe I can pester some folks :)</p>",
        "id": 159550615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300213
    },
    {
        "content": "<p>okay, i can't ask for more than that</p>",
        "id": 159550619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300220
    },
    {
        "content": "<p>next nomination: \"fix \"bivariant wf\" bug in the NLL subtyping code\" <a href=\"https://github.com/rust-lang/rust/issues/54105\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54105\">#54105</a></p>",
        "id": 159550630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300235
    },
    {
        "content": "<p>I nominated this to see if I could entice a <del>victim</del> volunteer to try to search for a test case</p>",
        "id": 159550681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300253
    },
    {
        "content": "<p>with the warning that niko had already put K units of effort (for unspecified K and unspecified work unit) into trying to find said test</p>",
        "id": 159550714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300293
    },
    {
        "content": "<p>this might be a better candidate for the free discussion period...</p>",
        "id": 159550738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300310
    },
    {
        "content": "<p>in fact</p>",
        "id": 159550741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300314
    },
    {
        "content": "<p>I regret bringing it up now;</p>",
        "id": 159550747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300322
    },
    {
        "content": "<p>I'd rather raise the last nominated issue first</p>",
        "id": 159550754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300335
    },
    {
        "content": "<p>are we sure there is such a bug ? that is, can we find this test case ?</p>",
        "id": 159550758,
        "sender_full_name": "lqd",
        "timestamp": 1551300338
    },
    {
        "content": "<blockquote>\n<p>are we sure there is such a bug ? that is, can we find this test case ?</p>\n</blockquote>\n<p>that's basically the problem. <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 159550780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300354
    },
    {
        "content": "<p>our hope was to find a test case; at least for me, that would help assign a prioritization</p>",
        "id": 159550847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300384
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> thinks that there is a bug, but doesn't know if it affects any code.</p>",
        "id": 159550852,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551300388
    },
    {
        "content": "<p>without a test case, its hard for me to give a serious priority label to this, which means I'd be tempted to just tag it as P-low</p>",
        "id": 159550873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300412
    },
    {
        "content": "<p>(which is sort of how we've been treating that bug anyway...)</p>",
        "id": 159550889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300424
    },
    {
        "content": "<p>anyway I've satisfied my desire to at least publicly state \"hey this bug exists\"</p>",
        "id": 159550936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300479
    },
    {
        "content": "<p>so now the last nominated topic, which may be so dumb as to not be worth discussing, is \"Does the MIR generated for match still build in order-deps visible to MIR-borrowck?\" <a href=\"https://github.com/rust-lang/rust/issues/58646\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58646\">#58646</a></p>",
        "id": 159550994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300511
    },
    {
        "content": "<p>so this one I think requires a little bit of explanation; you can find an attempt at an explanation on the bug description</p>",
        "id": 159551017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300541
    },
    {
        "content": "<p>(about the prior issue: maybe we can look for such a case in a relaxed/exploratory manner ? that is, I'm not opposed to looking for such a thing myself but if Niko didn't find it easily after some K units of time I'm not particularly hopeful about my chances :)</p>",
        "id": 159551125,
        "sender_full_name": "lqd",
        "timestamp": 1551300616
    },
    {
        "content": "<p>but the heart of <a href=\"https://github.com/rust-lang/rust/issues/58646\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58646\">#58646</a> is: we have some amount of safe-guards against accidental order-dependence in our code-generation for match. That is, we don't want to couple ourselves too tightly to the particular control-flow graph that we happen to generate</p>",
        "id": 159551147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300650
    },
    {
        "content": "<p>and yet to my eye there are relatively simple variants that one might argue are coupled to the control-flow graph</p>",
        "id": 159551195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300709
    },
    {
        "content": "<p>reading over the test now, I admit that the <em>intent</em> of the <code>fn all_previous_tests_may_be_done</code> may have been more about the order in which the components of the tuple are matched</p>",
        "id": 159551360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300860
    },
    {
        "content": "<p>rather than the order of the match arms, which is what the text of <a href=\"https://github.com/rust-lang/rust/issues/58646\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58646\">#58646</a> is talking about</p>",
        "id": 159551375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300878
    },
    {
        "content": "<p>That's what the test was for. I don't mind the example that you posted too much since it amounts to us guaranteeing that we don't preemptively test patterns.</p>",
        "id": 159551428,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551300920
    },
    {
        "content": "<p>I don't know how to interpret \"don't mind the example\",</p>",
        "id": 159551452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300956
    },
    {
        "content": "<p>that could mean \"it would be fine for the compiler to accept it\"</p>",
        "id": 159551506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300965
    },
    {
        "content": "<p>There are some more subtle cases around guards where we expose the fact that we sometimes \"remember\" the result of a test across a guard.</p>",
        "id": 159551511,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551300971
    },
    {
        "content": "<p>or it could mean \"it would be fine for us to start rejecting it\"</p>",
        "id": 159551513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551300976
    },
    {
        "content": "<blockquote>\n<p>that could mean \"it would be fine for the compiler to accept it\"</p>\n</blockquote>\n<p>I mean this</p>",
        "id": 159551520,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551300984
    },
    {
        "content": "<p>okay</p>",
        "id": 159551571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301033
    },
    {
        "content": "<p>I also don't mind if we accept that code</p>",
        "id": 159551581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301040
    },
    {
        "content": "<p>but I do think it might lead to some interesting question marks when it comes time to attempt formal specification</p>",
        "id": 159551617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301079
    },
    {
        "content": "<p>and it might be an interesting experiment to just try adding backwards fake edges?</p>",
        "id": 159551688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301111
    },
    {
        "content": "<p>or maybe that's bonkers</p>",
        "id": 159551695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301115
    },
    {
        "content": "<p>anyway, that's everything I wanted to get out in the open</p>",
        "id": 159551711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301140
    },
    {
        "content": "<p>I really don't want a cyclic cfg for <code>match</code>. It interacts pretty badly with guards.</p>",
        "id": 159551732,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551301153
    },
    {
        "content": "<blockquote>\n<p>I really don't want a cyclic cfg for <code>match</code>. It interacts pretty badly with guards.</p>\n</blockquote>\n<p>yeah I was worried about that. The only alternative I could image would involve having duplicate code paths</p>",
        "id": 159551771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301188
    },
    {
        "content": "<p>I think more fake reads would be the better approach to this.</p>",
        "id": 159551860,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551301219
    },
    {
        "content": "<p>and duplicate code paths, if you nest matches, could have bad (code size) blow up (at least in the abstract representation, not the actual machine code)</p>",
        "id": 159551863,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301222
    },
    {
        "content": "<p>oh interesting ... like add fake reads of future patterns, sort of modelling speculative execution</p>",
        "id": 159551927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301275
    },
    {
        "content": "<p>the other simple reality is that if we <strong>actually</strong> wanted to make changes to the match code gen, it would probably have to be tied to an edition or something</p>",
        "id": 159552018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301336
    },
    {
        "content": "<p>at least that's my guess as to how we could best limit any negative impact.</p>",
        "id": 159552046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301369
    },
    {
        "content": "<p>if we're done with nominated issues I have a couple questions</p>",
        "id": 159552217,
        "sender_full_name": "lqd",
        "timestamp": 1551301513
    },
    {
        "content": "<p>I'm done with the nominations</p>",
        "id": 159552227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301532
    },
    {
        "content": "<p>the first is related to universes and the temporary return of the leak check: I was working on <a href=\"https://github.com/rust-lang/rust/issues/57374\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57374\">#57374</a> but the leak check's return has brought it back to pre-Universes levels of diagnostics. I feel I needed some help from Felix to advance</p>",
        "id": 159552330,
        "sender_full_name": "lqd",
        "timestamp": 1551301612
    },
    {
        "content": "<p>hmm</p>",
        "id": 159552365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301654
    },
    {
        "content": "<p>(there's a dedicated topic, where I posted my level of progress, which was somewhat at this point \"we need to look at the mir and reimplement basic errors\" so that felt wrong-ish)</p>",
        "id": 159552386,
        "sender_full_name": "lqd",
        "timestamp": 1551301679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  is there a <code>-Z</code> flag to remove the leak check?</p>",
        "id": 159552433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301684
    },
    {
        "content": "<p><code>-Zno-leak-check</code></p>",
        "id": 159552448,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551301690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> could that help you at least have something to run with?</p>",
        "id": 159552461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301704
    },
    {
        "content": "<p>thanks Matthew</p>",
        "id": 159552465,
        "sender_full_name": "lqd",
        "timestamp": 1551301710
    },
    {
        "content": "<p>it's also related to other issues (another ICE, etc) so I was wondering when do we think the leak check will be removed again ?</p>",
        "id": 159552512,
        "sender_full_name": "lqd",
        "timestamp": 1551301746
    },
    {
        "content": "<p>(some of these were closed by the PR but we might need to keep an eye on them for when it's removed again)</p>",
        "id": 159552556,
        "sender_full_name": "lqd",
        "timestamp": 1551301798
    },
    {
        "content": "<p>/me is trying to figure out how we missing <a href=\"https://github.com/rust-lang/rust/issues/46989\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/46989\">#46989</a> at last week's T-compiler meeting...</p>",
        "id": 159552822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551301958
    },
    {
        "content": "<p>but yeah <code>-Zno-leak-check</code> will help in at least being able to work on <a href=\"https://github.com/rust-lang/rust/issues/57374\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57374\">#57374</a>, albeit I'm still unsure on what to do. My last update on it being <a href=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/.2357374.20higher.20ranked.20subtype.20errors/near/157301017\" title=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/.2357374.20higher.20ranked.20subtype.20errors/near/157301017\">this</a></p>",
        "id": 159552839,
        "sender_full_name": "lqd",
        "timestamp": 1551301972
    },
    {
        "content": "<p>okay I'll see if I can spend some time assisting with <a href=\"https://github.com/rust-lang/rust/issues/57374\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57374\">#57374</a> tomorrow or friday</p>",
        "id": 159553090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302131
    },
    {
        "content": "<p>sorry its been a month of radio silence there</p>",
        "id": 159553117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302155
    },
    {
        "content": "<p>but while we're here: Are there other Q's?</p>",
        "id": 159553175,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302166
    },
    {
        "content": "<p>no need to apologize I was working on another universe issue (which was also fixed temporarily by the leak check return :)</p>",
        "id": 159553428,
        "sender_full_name": "lqd",
        "timestamp": 1551302358
    },
    {
        "content": "<p>the other Q I had was about the bivariant wf bug, if you had pointers on to look for such a test case ?</p>",
        "id": 159553458,
        "sender_full_name": "lqd",
        "timestamp": 1551302396
    },
    {
        "content": "<p>hmm nothing at the moment</p>",
        "id": 159553530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302414
    },
    {
        "content": "<p>(esp as we're not sure we can trigger it in code)</p>",
        "id": 159553534,
        "sender_full_name": "lqd",
        "timestamp": 1551302420
    },
    {
        "content": "<p>oh ok</p>",
        "id": 159553557,
        "sender_full_name": "lqd",
        "timestamp": 1551302440
    },
    {
        "content": "<p>and that's all I personally had</p>",
        "id": 159553602,
        "sender_full_name": "lqd",
        "timestamp": 1551302492
    },
    {
        "content": "<p>okay. I'm going to remove the I-nominated tag from <a href=\"https://github.com/rust-lang/rust/issues/54105\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54105\">#54105</a></p>",
        "id": 159553728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302598
    },
    {
        "content": "<p>do we need a P- ?</p>",
        "id": 159553764,
        "sender_full_name": "lqd",
        "timestamp": 1551302639
    },
    {
        "content": "<p>I'm not going to put one on quite yet</p>",
        "id": 159553818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302654
    },
    {
        "content": "<p>I want another chance to think about this, and I'll hopefully look at it again next week when I again look at the pile of unprioritized issues.</p>",
        "id": 159553893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302725
    },
    {
        "content": "<p>I can try looking at it a bit as well</p>",
        "id": 159553908,
        "sender_full_name": "lqd",
        "timestamp": 1551302739
    },
    {
        "content": "<p>thanks!</p>",
        "id": 159554139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302881
    },
    {
        "content": "<p>okay bye everyone</p>",
        "id": 159554181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551302885
    },
    {
        "content": "<p>good afternoon/evening everyone <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 159554194,
        "sender_full_name": "lqd",
        "timestamp": 1551302899
    },
    {
        "content": "<p>also: <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> for <a href=\"https://github.com/rust-lang/rust/issues/58788\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58788\">#58788</a> <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> :)</p>",
        "id": 159554754,
        "sender_full_name": "lqd",
        "timestamp": 1551303325
    }
]