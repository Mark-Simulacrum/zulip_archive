[
    {
        "content": "<p>OK, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, so talking about <a href=\"https://github.com/rust-lang/rust/issues/51195\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51195\">https://github.com/rust-lang/rust/issues/51195</a>...</p>",
        "id": 127800967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528504981
    },
    {
        "content": "<p>I'm a little bit confused because that example <a href=\"https://play.rust-lang.org/?gist=e7b74556cdee598c19c2ac03cd10db1e&amp;version=nightly&amp;mode=debug\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=e7b74556cdee598c19c2ac03cd10db1e&amp;version=nightly&amp;mode=debug\">doesn't seem to give an error with NLL</a>; you could modify to make it do so, though</p>",
        "id": 127800973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528505007
    },
    {
        "content": "<p>I'm not sure if <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> had a modified version in mind</p>",
        "id": 127800975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528505023
    },
    {
        "content": "<p>I see the error shows up when you do <code>rustc -Zborrowck=mir -Ztwo-phase-borrows src/test/ui/error-codes/E0597.rs</code></p>",
        "id": 127804800,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528513712
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@archlinux rust1 (diagnostic-suggest-drop-in-reverse)]$ rustc +stage1 -Zborrowck=mir -Ztwo-phase-borrows src/test/ui/error-codes/E0597.rs\nerror[E0597]: `y` does not live long enough\n  --&gt; src/test/ui/error-codes/E0597.rs:18:16\n   |\n18 |     x.x = Some(&amp;y);\n   |                ^^ borrowed value does not live long enough\n19 |     //~^ `y` does not live long enough [E0597]\n20 | }\n   | -\n   | |\n   | borrowed value only lives until here\n   | borrow later used here, when `x` is dropped\n   |\n   = note: values in a scope are dropped in the opposite order they are defined\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0597`.\n</pre></div>",
        "id": 127804801,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528513719
    },
    {
        "content": "<p>and runtest is doing exactly that, so we have <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/error-codes/E0597.nll.stderr\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/error-codes/E0597.nll.stderr\">https://github.com/rust-lang/rust/blob/master/src/test/ui/error-codes/E0597.nll.stderr</a></p>",
        "id": 127804852,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528513832
    },
    {
        "content": "<p>because of <a href=\"https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/runtest.rs#L1745\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/runtest.rs#L1745\">https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/runtest.rs#L1745</a></p>",
        "id": 127804946,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528514066
    },
    {
        "content": "<p>we need a -Znll flag to do the right thing</p>",
        "id": 127804948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528514090
    },
    {
        "content": "<p>and I guess all that happens because of <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L310\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L310\">https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L310</a></p>",
        "id": 127805158,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528514538
    },
    {
        "content": "<p>huh, I don't see any such error</p>",
        "id": 127812312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528531393
    },
    {
        "content": "<p>ah I see, it's a modified version of the test</p>",
        "id": 127812315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528531420
    },
    {
        "content": "<p>so it already says \"borrow later used here, when <code>x</code> is dropped\"</p>",
        "id": 127812357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528531470
    },
    {
        "content": "<p>which feels arguably <em>better</em> than the original</p>",
        "id": 127812358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528531481
    },
    {
        "content": "<p>but it would probably be better still with the <code>note</code></p>",
        "id": 127812359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528531493
    },
    {
        "content": "<p>so let me think — we want the note to trigger I think when two things happen:</p>\n<p>(1) a local variable is borrowed<br>\n(2) the last use is when <em>another</em> local variable is dropped</p>",
        "id": 127812409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528531577
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, you added that note that tells us when the last use is a drop :)</p>",
        "id": 127812416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528531627
    },
    {
        "content": "<p>You all have probably figured this out, but yes, that test needed to be updated at the time this issue was filed. And subsequently was updated,</p>",
        "id": 127813741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528534677
    },
    {
        "content": "<p>I don't understand how is the deal with <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L307-L312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L307-L312\">https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L307-L312</a></p>",
        "id": 127833470,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579220
    },
    {
        "content": "<p>why this test is ok with feature(nll) and not with -Zborrowck=mir -Ztwo-phase-borrow ?</p>",
        "id": 127833473,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579253
    },
    {
        "content": "<p>or are we talking about different tests</p>",
        "id": 127833479,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579273
    },
    {
        "content": "<p>/me confused</p>",
        "id": 127833480,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579277
    },
    {
        "content": "<blockquote>\n<p>why this test is ok with feature(nll) and not with -Zborrowck=mir -Ztwo-phase-borrow ?</p>\n</blockquote>\n<p>it's not, I was confused — the test has been modified since the version that I was looking at</p>",
        "id": 127833521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528579323
    },
    {
        "content": "<blockquote>\n<p>I don't understand how is the deal with <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L307-L312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L307-L312\">https://github.com/rust-lang/rust/blob/master/src/librustc/infer/error_reporting/mod.rs#L307-L312</a></p>\n</blockquote>\n<p>we skip errors there because the MIR borrow check tests the same stuff (but more precisely)</p>",
        "id": 127833528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528579381
    },
    {
        "content": "<p>ahh, now it makes sense :)</p>",
        "id": 127833575,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579456
    },
    {
        "content": "<p>anyway, no time during this weekend</p>",
        "id": 127833576,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579467
    },
    {
        "content": "<p>will get back to this on monday</p>",
        "id": 127833581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579477
    },
    {
        "content": "<p>anyway, I'm not sure about what you've said first</p>",
        "id": 127833584,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579491
    },
    {
        "content": "<blockquote>\n<p>so let me think — we want the note to trigger I think when two things happen:</p>\n<p>(1) a local variable is borrowed<br>\n(2) the last use is when <em>another</em> local variable is dropped</p>\n</blockquote>\n<p>ahh ok ok, re-reading this thing makes sense</p>",
        "id": 127833592,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579533
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, you added that note that tells us when the last use is a drop :)</p>\n</blockquote>\n<p>what do you mean by this?</p>",
        "id": 127833594,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528579549
    },
    {
        "content": "<p>I mean that you added the code that causes that message to print out :)</p>",
        "id": 127833635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528579569
    },
    {
        "content": "<p>I think...</p>",
        "id": 127833639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528579598
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/49808/\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/49808/\">https://github.com/rust-lang/rust/pull/49808/</a></p>",
        "id": 127833641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528579613
    },
    {
        "content": "<p>anyway, doesn't matter :)</p>",
        "id": 127833642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528579621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> just to clarify what I had in mind, I <a href=\"https://github.com/rust-lang/rust/issues/51195#issuecomment-396008556\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51195#issuecomment-396008556\">left some notes in the issue</a>.</p>",
        "id": 127837940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528589906
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127858381,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528639195
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I did indeed change my mind between the first comment and the later ones.</p>",
        "id": 127948650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528802563
    },
    {
        "content": "<p>Recall that the basic structure of the \"error reporting\" phase of the borrow check is like this:</p>\n<ul>\n<li>Walk over the MIR</li>\n<li>For each \"action\" of various kinds, check if there is a conflicting loan:<ul>\n<li>In this particular case, if there is a <code>StorageDead(y)</code> or <code>Drop(y)</code>, that means that the stack space for a local variable is being freed</li>\n<li>Therefore, if there is a loan of that variable <code>y</code>, that's a problem and we should report an error</li>\n</ul>\n</li>\n</ul>\n<p>Currently, if there is a loan of that variable <code>y</code>, we report an error, and then we invoke <a href=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L26-L31\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L26-L31\"><code>explain_why_borrow_contains_point</code></a>. This tries to report <em>why</em> the variable <code>y</code> is still considered borrowed. In the case of our example, we find that the reason is because <a href=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L56-L89\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L56-L89\">that reference is going to be used in the <code>Drop(x)</code> for some other variable <code>x</code></a>.</p>\n<p>What I am saying is that <em>in precisely these conditions</em>, where the current statement is a <code>Drop</code>/<code>StorageDead</code> <em>and</em> the final use is <em>another</em> <code>Drop</code>, we should report the note about the relative ordering of variables. This is because that means that</p>\n<ul>\n<li>we are dropping one variable (<code>y</code>)</li>\n<li>but a reference to that variable  is going to be used in the destructor of another variable (<code>x</code>)</li>\n</ul>\n<p>It seems like precisely here is where the relative order of variables is relevant.</p>",
        "id": 127948829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528802909
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ok, some questions</p>",
        "id": 127953950,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528810687
    },
    {
        "content": "<blockquote>\n<p>In this particular case, if there is a StorageDead(y) or Drop(y), that means that the stack space for a local variable is being freed</p>\n</blockquote>\n<p>how do I know that this is for <code>y</code> and not for <code>x</code>?</p>",
        "id": 127953959,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528810724
    },
    {
        "content": "<p>well, first off, if they were the <em>same</em> variable, there'd be no error</p>",
        "id": 127953969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528810767
    },
    {
        "content": "<p>(actually, hmm, is that known to be true? maybe there can be, if you setup a cycle...)</p>",
        "id": 127953974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528810788
    },
    {
        "content": "<p>the variables names are, in any case, available to us</p>",
        "id": 127953978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528810800
    },
    {
        "content": "<p>though you may have to add  some logic to thread them through</p>",
        "id": 127954023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528810810
    },
    {
        "content": "<p>so you're saying that I have access to both things?</p>",
        "id": 127954176,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528811140
    },
    {
        "content": "<p>one if <code>local</code> and the other one, which one is it?</p>",
        "id": 127954179,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528811152
    },
    {
        "content": "<p>can find it using borrow info, I guess</p>",
        "id": 127954227,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528811180
    },
    {
        "content": "<p>sorry, got distracted =)</p>",
        "id": 127954323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811361
    },
    {
        "content": "<p>yes, the borrow info</p>",
        "id": 127954324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811364
    },
    {
        "content": "<p>the other data we might have to add to the data that is passed in</p>",
        "id": 127954325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811378
    },
    {
        "content": "<p>it comes from the MIR</p>",
        "id": 127954326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> so <a href=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/mod.rs#L501-L508\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/mod.rs#L501-L508\">here</a> is where the call originates (or maybe the arm for <code>Drop</code>)</p>",
        "id": 127954381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811432
    },
    {
        "content": "<p>that variable <code>local</code> contains the variable <code>y</code></p>",
        "id": 127954386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811443
    },
    {
        "content": "<p>so .. actually ..</p>",
        "id": 127954388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811452
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> well it seems like <a href=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L26\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L26\"><code>explain_why_borrow_contains_point</code></a> is not currently given the path that was being accessed</p>",
        "id": 127954476,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811621
    },
    {
        "content": "<p>but if it were, that would contain the variable <code>y</code> that is being dropped</p>",
        "id": 127954478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528811627
    },
    {
        "content": "<p>didn't understand that last thing</p>",
        "id": 127956359,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528814162
    },
    {
        "content": "<p>you meant <code>x</code>?</p>",
        "id": 127956393,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528814169
    },
    {
        "content": "<p>isn't what represents <code>y</code>, the one we have there under <code>local</code>?</p>",
        "id": 127956402,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528814201
    },
    {
        "content": "<p>I guess I gave a different meaning to the word contain</p>",
        "id": 127956794,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528814672
    },
    {
        "content": "<p>ok, I see local is <code>x</code></p>",
        "id": 127956988,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528814897
    },
    {
        "content": "<p>yes</p>",
        "id": 127959701,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528817996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so ... let me recap a bit to see if I'm correct</p>",
        "id": 127959774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818034
    },
    {
        "content": "<p>I'd need in this Some arm <a href=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L59\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L59\">https://github.com/rust-lang/rust/blob/2a0062974a5225847fc43d5522c4dc3718173fe5/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L59</a></p>",
        "id": 127959804,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818096
    },
    {
        "content": "<p>unsure if the same happens when it's a temporary ...</p>",
        "id": 127959810,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818110
    },
    {
        "content": "<p>in that case would be in the Some of the previous line</p>",
        "id": 127959869,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818143
    },
    {
        "content": "<p>I have \"x\" in local</p>",
        "id": 127959876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818158
    },
    {
        "content": "<p>need to find in borrow if there's something dropped</p>",
        "id": 127959893,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818189
    },
    {
        "content": "<p>looking for StorageDead or Drop</p>",
        "id": 127959899,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818209
    },
    {
        "content": "<p>and print the note for that case</p>",
        "id": 127959918,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528818242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> nevermind about all this</p>",
        "id": 127962573,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821757
    },
    {
        "content": "<p>ok :) just logged in</p>",
        "id": 127962579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821768
    },
    {
        "content": "<p>I'm pushing something to discuss</p>",
        "id": 127962580,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821770
    },
    {
        "content": "<p>yeah, so you connected</p>",
        "id": 127962589,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821776
    },
    {
        "content": "<p>I got the point p of where the use happens</p>",
        "id": 127962605,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821804
    },
    {
        "content": "<p>and got the statements kind</p>",
        "id": 127962608,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821812
    },
    {
        "content": "<p>and I'm checking if that's a StorageDead</p>",
        "id": 127962610,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821822
    },
    {
        "content": "<p>ok, sounds good, I think <code>Drop</code> also counts</p>",
        "id": 127962617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821841
    },
    {
        "content": "<p>there's no kind <code>Drop</code> or <code>Call</code> or anything like that</p>",
        "id": 127962633,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821843
    },
    {
        "content": "<p>well</p>",
        "id": 127962660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821847
    },
    {
        "content": "<p>I was surprised that there's no kind <code>Call</code> or something</p>",
        "id": 127962668,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821863
    },
    {
        "content": "<p>unsure what I may be missing</p>",
        "id": 127962670,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821869
    },
    {
        "content": "<p>you are referring to <code>Call</code> because it's invoking a desturctor?</p>",
        "id": 127962679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821884
    },
    {
        "content": "<p>in MIR, that's a special statement</p>",
        "id": 127962680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821889
    },
    {
        "content": "<p>called <code>Drop</code></p>",
        "id": 127962681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821891
    },
    {
        "content": "<p>first of all remind me what are <code>StorageDead</code> and <code>Drop</code></p>",
        "id": 127962696,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821916
    },
    {
        "content": "<p>maybe what I think they are is wrong :)</p>",
        "id": 127962699,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821925
    },
    {
        "content": "<p>that call occurs here <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L864\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L864\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L864</a></p>",
        "id": 127962702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821939
    },
    {
        "content": "<p>Ah, <code>StorageDead</code> means \"Free the stack space for this variable\"</p>",
        "id": 127962707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821948
    },
    {
        "content": "<p>ya</p>",
        "id": 127962710,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821957
    },
    {
        "content": "<p><code>Drop</code> means \"destroy the value currently in this variable\"</p>",
        "id": 127962711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821957
    },
    {
        "content": "<p>ok</p>",
        "id": 127962752,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821965
    },
    {
        "content": "<p>yes, it was what I was thinking</p>",
        "id": 127962758,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821973
    },
    {
        "content": "<p>the key thing is, when we call <code>access_place</code>, we tell if what <strong>kind</strong> of access:</p>",
        "id": 127962760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821979
    },
    {
        "content": "<p><code>Write(WriteKind::StorageDeadOrDrop)</code> is what we want</p>",
        "id": 127962764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528821983
    },
    {
        "content": "<p>but <code>Drop</code> is when you call that explicitly? or not necessarily?</p>",
        "id": 127962766,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528821998
    },
    {
        "content": "<p>that is the value of <code>kind.1</code> where <code>kind</code> is <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L883\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L883\">this parameter here</a></p>",
        "id": 127962771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822005
    },
    {
        "content": "<blockquote>\n<p>but <code>Drop</code> is when you call that explicitly? or not necessarily?</p>\n</blockquote>\n<p>I don't know what you are referring to here :)</p>",
        "id": 127962811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822073
    },
    {
        "content": "<p>when a variable goes out of scope: 2 things potentially happen</p>",
        "id": 127962851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822085
    },
    {
        "content": "<p>1. (optional) the current value is dropped<br>\n2. (optional) the storage is reclaimed</p>\n<p>the first step is optional because -- in some cases -- we can clearly see it is not needed; e.g., if the type is a <code>u32</code></p>\n<p>the second step is optional because -- in some cases -- it's not worth dropping the stack space for individual variables; in particular, during unwinding. In that case, we have a special check at the end that drops all the variables in one big step.</p>",
        "id": 127962886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822157
    },
    {
        "content": "<p>I see</p>",
        "id": 127962957,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822214
    },
    {
        "content": "<p>/me takes some notes for a rustc-guide chapter on MIR</p>",
        "id": 127962965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822230
    },
    {
        "content": "<p>when you say dropped that may also happen by drop(x)?</p>",
        "id": 127962967,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822236
    },
    {
        "content": "<p>no</p>",
        "id": 127963028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822335
    },
    {
        "content": "<p>that is just a user function</p>",
        "id": 127963031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822344
    },
    {
        "content": "<p>totally unrelated (from the MIR point of view)</p>",
        "id": 127963035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822346
    },
    {
        "content": "<p>ya</p>",
        "id": 127963043,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822364
    },
    {
        "content": "<p>that is, if you write <code>drop(x)</code>, that is just a call</p>",
        "id": 127963047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822369
    },
    {
        "content": "<p>right, makes sense</p>",
        "id": 127963048,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822371
    },
    {
        "content": "<p>a <code>Drop</code> terminator is <em>only</em> used when a variable goes out of scope</p>",
        "id": 127963052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528822379
    },
    {
        "content": "<p>yeah, you are passing ownership and when it goes out of scope it will be dropped for real :)</p>",
        "id": 127963059,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822394
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> take a look at this <a href=\"https://github.com/spastorino/rust/commit/9004ec75ebc56649e357fd297c80e2add84dfa1e\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/9004ec75ebc56649e357fd297c80e2add84dfa1e\">https://github.com/spastorino/rust/commit/9004ec75ebc56649e357fd297c80e2add84dfa1e</a></p>",
        "id": 127963125,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822514
    },
    {
        "content": "<p>what was my first attempt</p>",
        "id": 127963140,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822532
    },
    {
        "content": "<p>I still need to find the connection between <code>access_place</code> and <code>explain_why_borrow_contains_point</code> because I haven't yet</p>",
        "id": 127963211,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528822627
    },
    {
        "content": "<p>you'd have to trace it through</p>",
        "id": 127963879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528823617
    },
    {
        "content": "<p>I can help if you want but maybe you want to do it for yourself :)</p>",
        "id": 127963927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528823644
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> how goes?</p>",
        "id": 127978392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528843263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> didn't do that much, just left this thing compiling in debug mode, and it took a while</p>",
        "id": 127983510,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528852492
    },
    {
        "content": "<p>at least had some minutes to run it with the debugger ...</p>",
        "id": 127988228,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528861968
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>#0  rustc_mir::borrow_check::nll::explain_borrow::&lt;impl rustc_mir::borrow_check::MirBorrowckCtxt&lt;&#39;cx, &#39;gcx, &#39;tcx&gt;&gt;::explain_why_borrow_contains_point (self=0x7ffffffd5470, context=Context = {...},\n    borrow=0x555555c26200, err=0x7ffffffd0440) at librustc_mir/borrow_check/nll/explain_borrow/mod.rs:32\n#1  0x00007ffff26dee75 in rustc_mir::borrow_check::error_reporting::&lt;impl rustc_mir::borrow_check::MirBorrowckCtxt&lt;&#39;cx, &#39;gcx, &#39;tcx&gt;&gt;::report_unscoped_local_value_does_not_live_long_enough (self=0x7ffffffd5470,\n    context=Context = {...}, name=0x7ffffffd09a8, scope_tree=0x7ffffffd0758, borrow=0x555555c26200, drop_span=Span = {...}, borrow_span=Span = {...}, _proper_span=Span = {...})\n    at librustc_mir/borrow_check/error_reporting.rs:547\n#2  0x00007ffff26ddc17 in rustc_mir::borrow_check::error_reporting::&lt;impl rustc_mir::borrow_check::MirBorrowckCtxt&lt;&#39;cx, &#39;gcx, &#39;tcx&gt;&gt;::report_borrowed_value_does_not_live_long_enough (self=0x7ffffffd5470,\n    context=Context = {...}, borrow=0x555555c26200, drop_span=Span = {...}) at librustc_mir/borrow_check/error_reporting.rs:445\n#3  0x00007ffff2425388 in rustc_mir::borrow_check::MirBorrowckCtxt::check_access_for_conflict::{{closure}} (this=0x7ffffffd5470, borrow_index=BorrowIndex = {...}, borrow=0x555555c26200)\n    at librustc_mir/borrow_check/mod.rs:1050\n#4  0x00007ffff241ee81 in rustc_mir::borrow_check::path_utils::each_borrow_involving_path (s=0x7ffffffd5470, tcx=TyCtxt = {...}, mir=0x7ffffffd3538, access_place={...}, borrow_set=0x555555c1fb20,\n    candidates=..., op=closure = {...}) at librustc_mir/borrow_check/path_utils.rs:71\n#5  0x00007ffff26eb59e in rustc_mir::borrow_check::MirBorrowckCtxt::check_access_for_conflict (self=0x7ffffffd5470, context=Context = {...}, place_span={...}, Python Exception &lt;class &#39;gdb.error&#39;&gt; Cannot convert value to long.:\nsd=..., rw=Write = {...},\n    flow_state=0x7ffffffd5658) at librustc_mir/borrow_check/mod.rs:958\n#6  0x00007ffff26eaae5 in rustc_mir::borrow_check::MirBorrowckCtxt::access_place (self=0x7ffffffd5470, context=Context = {...}, place_span={...}, kind={...},\n    is_local_mutation_allowed=rustc_mir::borrow_check::LocalMutationIsAllowed::Yes, flow_state=0x7ffffffd5658) at librustc_mir/borrow_check/mod.rs:919\n</pre></div>",
        "id": 127988230,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528861975
    },
    {
        "content": "<p>now you wanted me to pass <code>ReadOrWrite</code> down from <code>access_place</code> to <code>explain_why_borrow_contains_point</code>?</p>",
        "id": 127988292,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528862064
    },
    {
        "content": "<p>basically yes</p>",
        "id": 128004914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528891824
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> adding this</p>",
        "id": 128011300,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900109
    },
    {
        "content": "<p>of course this ends spreading to a lot of places</p>",
        "id": 128011316,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900146
    },
    {
        "content": "<p>were you imagining doing Option&lt;ReadOrWrite&gt; I guess</p>",
        "id": 128011323,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900159
    },
    {
        "content": "<p>so I can pass None in most of places</p>",
        "id": 128011326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900167
    },
    {
        "content": "<p>I hadn't really thought about it tbh</p>",
        "id": 128011588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528900465
    },
    {
        "content": "<p><code>Option</code> seems potentially ok</p>",
        "id": 128011590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528900470
    },
    {
        "content": "<p>if indeed there are places that don't have access to it...</p>",
        "id": 128011594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528900479
    },
    {
        "content": "<p>gonna try with Option first and see how it looks</p>",
        "id": 128011596,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900482
    },
    {
        "content": "<p>it already seems too hacky :P</p>",
        "id": 128011600,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900488
    },
    {
        "content": "<p>I wonder <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> if some refactoring is in order</p>",
        "id": 128011617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528900516
    },
    {
        "content": "<p>in particular, I could imagine making a kind of \"subcontext\" struct that (a) has a pointer to the <code>MirBorrowckContext</code> but also a lot of other \"environmental\" information</p>",
        "id": 128011623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528900535
    },
    {
        "content": "<p>yep</p>",
        "id": 128011627,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900548
    },
    {
        "content": "<p>I feel like we thread a ton of parameters around...</p>",
        "id": 128011628,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528900556
    },
    {
        "content": "<p>I was thinking about the same, some kind of contextual object that has more information</p>",
        "id": 128011672,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900566
    },
    {
        "content": "<p>exactly</p>",
        "id": 128011674,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900569
    },
    {
        "content": "<p>it keeps growing, it sounds like it needs a struct</p>",
        "id": 128011678,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528900581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/spastorino/rust/commit/9aa9c0ca2f0c1f103f4272f8f353141b520124c3\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/9aa9c0ca2f0c1f103f4272f8f353141b520124c3\">https://github.com/spastorino/rust/commit/9aa9c0ca2f0c1f103f4272f8f353141b520124c3</a></p>",
        "id": 128021004,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528912548
    },
    {
        "content": "<p>just to start discussing</p>",
        "id": 128021008,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528912559
    },
    {
        "content": "<p>seems wrong though</p>",
        "id": 128021074,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528912626
    },
    {
        "content": "<p>why does it seem wrong?</p>",
        "id": 128022464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914367
    },
    {
        "content": "<p>have you seen the stderr files?</p>",
        "id": 128022533,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914468
    },
    {
        "content": "<p>I was inspecting some of the examples</p>",
        "id": 128022541,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914475
    },
    {
        "content": "<p>and I have doubts</p>",
        "id": 128022549,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914478
    },
    {
        "content": "<p>but doesn't seem to be exactly what we want</p>",
        "id": 128022597,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914487
    },
    {
        "content": "<p>anyway, I'd need to change the option thing</p>",
        "id": 128022606,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914504
    },
    {
        "content": "<p>and pass this rw struct from more places</p>",
        "id": 128022609,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914513
    },
    {
        "content": "<p>but that could make more examples to add the note</p>",
        "id": 128022617,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914525
    },
    {
        "content": "<p>which I'm neither sure if it's what we want</p>",
        "id": 128022621,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528914534
    },
    {
        "content": "<p>well so it'd be good to highlight the examples that are giving you doubts</p>",
        "id": 128022850,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914765
    },
    {
        "content": "<p>the examples like this seem a bit odd</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">&amp;</span><span class=\"n\">z</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</pre></div>",
        "id": 128022871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914789
    },
    {
        "content": "<p>though I think that's actually an example where a note of this kind <em>would</em> be helpful;</p>",
        "id": 128022877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914804
    },
    {
        "content": "<p>just maybe not <em>this</em> note</p>",
        "id": 128022880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914808
    },
    {
        "content": "<p>to do better there, I think we need to add more data— in particular we need to know <em>which</em> variable is being dropped</p>",
        "id": 128022894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914824
    },
    {
        "content": "<p>we have this information</p>",
        "id": 128022897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914827
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/commit/9aa9c0ca2f0c1f103f4272f8f353141b520124c3#diff-5b4d01d26caf43976125ba0f877e78c0R1054\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/9aa9c0ca2f0c1f103f4272f8f353141b520124c3#diff-5b4d01d26caf43976125ba0f877e78c0R1054\">here</a>, it would be <code>place_span.0</code></p>",
        "id": 128022964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914871
    },
    {
        "content": "<p>if we knew which variable was being dropped (in the example above, it would be <code>z</code>) we could then check the scoping</p>",
        "id": 128022984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914900
    },
    {
        "content": "<p>we might see here that <code>z</code> is in a subscope of <code>x</code> (the variable we have a reference to)</p>",
        "id": 128022998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914911
    },
    {
        "content": "<p>in which case, we would say \"note that variables are dropped at the end of the block in which they are declared\" or something? seems a bit general, not sure how to express that this is a <em>subblock</em></p>",
        "id": 128023020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914958
    },
    {
        "content": "<p>the note we are issuing would be reserved for variables in the <em>same</em> scope</p>",
        "id": 128023064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528914968
    },
    {
        "content": "<p>the scope info is available in the <code>source_info</code> field of a <code>LocalDecl</code></p>",
        "id": 128023166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528915108
    },
    {
        "content": "<p><a href=\"http://I%20was%20going%20to%20meet%20a%20friend%20of%20mine,%20that%20was%20the%20only%20day%20that%20works\" target=\"_blank\" title=\"http://I%20was%20going%20to%20meet%20a%20friend%20of%20mine,%20that%20was%20the%20only%20day%20that%20works\">see here</a></p>",
        "id": 128023178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528915129
    },
    {
        "content": "<blockquote>\n<p>just maybe not <em>this</em> note</p>\n</blockquote>\n<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 128028822,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528922550
    },
    {
        "content": "<blockquote>\n<p>the note we are issuing would be reserved for variables in the <em>same</em> scope</p>\n</blockquote>\n<p>I guess scope1 == scope2 works?</p>",
        "id": 128029324,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528923188
    },
    {
        "content": "<blockquote>\n<p>[see here] (I was going to meet a friend of mine, that was the only day that works)</p>\n</blockquote>\n<p>link is wrong, I see that you were going to meet a friend :P</p>",
        "id": 128029346,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528923222
    },
    {
        "content": "<blockquote>\n<p>I guess scope1 == scope2 works?</p>\n</blockquote>\n<p>probably</p>",
        "id": 128037406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528935081
    },
    {
        "content": "<blockquote>\n<p>link is wrong, I see that you were going to meet a friend :P</p>\n</blockquote>\n<p>heh uh</p>",
        "id": 128037413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528935112
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/cd1105437cd433c12ae5132c9632e01d387b2384/src/librustc/mir/mod.rs#L371-L373\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/cd1105437cd433c12ae5132c9632e01d387b2384/src/librustc/mir/mod.rs#L371-L373\">https://github.com/rust-lang/rust/blob/cd1105437cd433c12ae5132c9632e01d387b2384/src/librustc/mir/mod.rs#L371-L373</a></p>",
        "id": 128037456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528935148
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> how do you get the scope given a <code>Place</code>?</p>",
        "id": 128101366,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529035443
    },
    {
        "content": "<p>I would assume you would need to drill down to its underlying <code>Local</code>, and then map that via the <code>mir.local_decls[*local]</code> to a <code>mir::LocalDecl</code></p>",
        "id": 128101389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1529035531
    },
    {
        "content": "<p>ya</p>",
        "id": 128101391,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529035546
    },
    {
        "content": "<p>that's it</p>",
        "id": 128101392,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529035548
    },
    {
        "content": "<p>there are things called \"scopes\" that are fields in the <code>mir::LocalDecl</code>; I am not 100% sure if those are what you need for this issue though.</p>",
        "id": 128101432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1529035567
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> for you to check tomorrow ... <a href=\"https://github.com/spastorino/rust/commit/a9213f3fedb8611472a08c543ca367d12106da61\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/a9213f3fedb8611472a08c543ca367d12106da61\">https://github.com/spastorino/rust/commit/a9213f3fedb8611472a08c543ca367d12106da61</a></p>",
        "id": 128102424,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529037781
    },
    {
        "content": "<p>I guess I need the scope_tree, though, and call is_subscope there</p>",
        "id": 128102540,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529038033
    },
    {
        "content": "<p>I don't think we can check for the <em>same</em> scope</p>",
        "id": 128119774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529069246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <a href=\"https://play.rust-lang.org/?gist=a936cc9e53ab356594be3c7e39721255&amp;version=nightly&amp;mode=debug\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=a936cc9e53ab356594be3c7e39721255&amp;version=nightly&amp;mode=debug\">check out the MIR for this example</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>I see the following scopes</p>\n<div class=\"codehilite\"><pre><span></span>let mut _0: ();                      // return place\n    scope 1 {\n        scope 3 {\n        }\n        scope 4 {\n            let _2: i32;                 // &quot;x&quot; in scope 4 at src/main.rs:3:9: 3:10\n        }\n    }\n    scope 2 {\n        let _1: i32;                     // &quot;y&quot; in scope 2 at src/main.rs:2:9: 2:10\n    }\n</pre></div>",
        "id": 128119824,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529069306
    },
    {
        "content": "<p>I'm talking with <span class=\"user-mention\" data-user-id=\"119009\">@Eduard-Mihai Burtescu</span> about it over on Discord</p>",
        "id": 128120094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529069684
    },
    {
        "content": "<p>it's a bit confusing</p>",
        "id": 128120096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529069687
    },
    {
        "content": "<p>link to that conversation: <a href=\"https://discordapp.com/channels/442252698964721669/443151243398086667?jump=457175015394115585\" target=\"_blank\" title=\"https://discordapp.com/channels/442252698964721669/443151243398086667?jump=457175015394115585\">link</a></p>",
        "id": 128120326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529070005
    },
    {
        "content": "<p>will check in a bit :)</p>",
        "id": 128125301,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529076274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> hey, sorry for being so absent last week</p>",
        "id": 128245959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529327741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> no worries, I will be around in a while, we need to finish this ASAP :P</p>",
        "id": 128249826,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529332503
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> around now?</p>",
        "id": 128263263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348224
    },
    {
        "content": "<p>yes</p>",
        "id": 128263388,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348368
    },
    {
        "content": "<p>I need to read Discord's log</p>",
        "id": 128263407,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348398
    },
    {
        "content": "<p>so I think I can extract the relevant part though I don't know that I fully understand it</p>",
        "id": 128263462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348409
    },
    {
        "content": "<p>first off, apparently the current MIR output is misleading</p>",
        "id": 128263468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348419
    },
    {
        "content": "<p>I've not tried to investigate more deeply but this is what <span class=\"user-mention\" data-user-id=\"119009\">@Eduard-Mihai Burtescu</span> wrote:</p>",
        "id": 128263474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348429
    },
    {
        "content": "<p>Case 1:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Case 2:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">...;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>To distinguish:</p>\n<ul>\n<li>In case 1: in the first one, it's the other way around, with both scopes of <code>y</code> being nested only in the visibility scope of <code>x</code></li>\n<li>In case 2: both scopes of <code>y</code> are nested within the source scope of <code>x</code>, and neither is nested in the visibility scope of <code>x</code></li>\n</ul>",
        "id": 128263585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348549
    },
    {
        "content": "<p>so I guess there are two scopes: the visibility scope and.. the other one</p>",
        "id": 128263595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348559
    },
    {
        "content": "<p><code>in the first one, it's the other way around</code>, didn't follow this</p>",
        "id": 128263684,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348650
    },
    {
        "content": "<p>both scopes of <code>y</code>, both?</p>",
        "id": 128263703,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348673
    },
    {
        "content": "<p>er, that's cause I reordered what he wrote</p>",
        "id": 128263710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348681
    },
    {
        "content": "<p>because he explained case 2 first</p>",
        "id": 128263711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348686
    },
    {
        "content": "<p>and then case 1 :)</p>",
        "id": 128263714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348688
    },
    {
        "content": "<p>:)</p>",
        "id": 128263716,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348693
    },
    {
        "content": "<p>let me look at the code a second</p>",
        "id": 128263718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348696
    },
    {
        "content": "<p>there's actually some big comments</p>",
        "id": 128263763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348741
    },
    {
        "content": "<p>hope they are up to date :)</p>",
        "id": 128263767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348743
    },
    {
        "content": "<p>what is source scope and visibility scope?</p>",
        "id": 128263824,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348780
    },
    {
        "content": "<p>these are the two scopes:<br>\n- <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.source_info\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.source_info\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.source_info</a><br>\n- <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.visibility_scope\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.visibility_scope\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.visibility_scope</a></p>",
        "id": 128263828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348786
    },
    {
        "content": "<p>ok I see</p>",
        "id": 128263851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348831
    },
    {
        "content": "<p>the comments actually explain it pretty well</p>",
        "id": 128263855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348840
    },
    {
        "content": "<p>so maybe take a look and see if it makes sense to you :)</p>",
        "id": 128263857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348848
    },
    {
        "content": "<p>what comments are you talking about?</p>",
        "id": 128263908,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348883
    },
    {
        "content": "<p>in those links?</p>",
        "id": 128263913,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348887
    },
    {
        "content": "<p>or are you talking about comments in the source code?</p>",
        "id": 128263922,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529348895
    },
    {
        "content": "<p>to update my summary of what <span class=\"user-mention\" data-user-id=\"119009\">@Eduard-Mihai Burtescu</span> wrote:</p>\n<p>Case 1:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Case 2:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">...;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>To distinguish:</p>\n<ul>\n<li>In Case 1, the source scope of <code>y</code> is <strong>not</strong> nested within the source scope of <code>x</code>, but the visibility scope of <code>y</code> <strong>is</strong> nested within the visibility scope of <code>x</code></li>\n<li>In Case 2, the source scope of <code>y</code> <strong>is</strong> nested within the source scope of <code>x</code></li>\n</ul>\n<p>So I think we want to issue the lint if:</p>\n<ul>\n<li>the <em>visibility scope</em> of the variable <code>y</code> being dropped <strong>is</strong> nested within the <em>visibility scope</em> of  the variable <code>x</code> being borrowed</li>\n<li>but the <em>source scope</em> of <code>y</code> is <strong>not</strong> nested within the <em>source scope</em> of <code>x</code></li>\n</ul>",
        "id": 128263977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348988
    },
    {
        "content": "<blockquote>\n<p>in those links?</p>\n</blockquote>\n<p>yes, in those links</p>",
        "id": 128263987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529348997
    },
    {
        "content": "<p>reading the links</p>",
        "id": 128264037,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349019
    },
    {
        "content": "<p>to say more:</p>\n<p>So I think we want to issue the lint if:</p>\n<ul>\n<li>the <em>visibility scope</em> of the variable <code>y</code> being dropped <strong>is</strong> nested within the <em>visibility scope</em> of  the variable <code>x</code> being borrowed<ul>\n<li>this means that <code>x</code> is defined first, then <code>y</code></li>\n</ul>\n</li>\n<li>but the <em>source scope</em> of <code>y</code> is <strong>not</strong> nested within the <em>source scope</em> of <code>x</code><ul>\n<li>this means that <code>y</code> not defined inside of <code>x</code></li>\n</ul>\n</li>\n</ul>",
        "id": 128264048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529349033
    },
    {
        "content": "<p>well the content in those links :')</p>",
        "id": 128264049,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349034
    },
    {
        "content": "<p><code>The reason is that we want the local to be within the let-statement for lint purposes, but we want the local to be after the let-statement for names-in-scope purposes.</code></p>",
        "id": 128264172,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349182
    },
    {
        "content": "<p>why you need the local to be within the let-statement for lint purposes?</p>",
        "id": 128264181,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349204
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#[allow(foo)]</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">..;</span><span class=\"w\"> </span><span class=\"c1\">// the `foo` lint is allowed here</span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">...;</span><span class=\"w\"> </span><span class=\"c1\">// but not here</span>\n</pre></div>",
        "id": 128264366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529349456
    },
    {
        "content": "<p>ahh I see</p>",
        "id": 128264447,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349552
    },
    {
        "content": "<p>yeah I care only about visibility scope</p>",
        "id": 128264450,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349561
    },
    {
        "content": "<p>actually</p>",
        "id": 128264508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529349603
    },
    {
        "content": "<p>I guess yeah it suffices to look and see if the visibility scope of the one variable (being dropped) is enclosed within the one that was borrowed</p>",
        "id": 128264530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529349625
    },
    {
        "content": "<p>so you meant that source_info.scope is not visibility scope, I guess?</p>",
        "id": 128264542,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349649
    },
    {
        "content": "<p>so what I wrote is even more complex than is needed</p>",
        "id": 128264543,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529349649
    },
    {
        "content": "<p>it is not, there is <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.visibility_scope\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.visibility_scope\">a field called <code>visibility_scope</code></a></p>",
        "id": 128264548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529349661
    },
    {
        "content": "<p>ahh I see</p>",
        "id": 128264558,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349673
    },
    {
        "content": "<p>ok</p>",
        "id": 128264560,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349674
    },
    {
        "content": "<p>ok, will change this thing</p>",
        "id": 128264571,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349690
    },
    {
        "content": "<p>and then to check if one of these things is a subscope of the other one I need <code>ScopeTree</code>, right?</p>",
        "id": 128264593,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349716
    },
    {
        "content": "<p>right :)</p>",
        "id": 128264642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529349740
    },
    {
        "content": "<p>ok, let me try all this</p>",
        "id": 128264646,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349749
    },
    {
        "content": "<p>pulling and building master :)</p>",
        "id": 128264658,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529349777
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> in order to pass scope_tree everywhere I need to spread that thing all over the place</p>",
        "id": 128268094,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353597
    },
    {
        "content": "<p>we really need like a context struct or something</p>",
        "id": 128268096,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353604
    },
    {
        "content": "<p>for now should I keep passing Option&lt;ScopeTree&gt; so when I don't have I just put None?</p>",
        "id": 128268107,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> are we not threading the MIR down I guess?</p>",
        "id": 128268136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353663
    },
    {
        "content": "<p>or maybe use Option&lt;ScopeTree, WriteKind&gt;</p>",
        "id": 128268139,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353666
    },
    {
        "content": "<p>I think we should just thread the MIR down if we're not already</p>",
        "id": 128268140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353668
    },
    {
        "content": "<p>oh well</p>",
        "id": 128268153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353679
    },
    {
        "content": "<p>hmm</p>",
        "id": 128268154,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353680
    },
    {
        "content": "<p>what is <code>ScopeTree</code> exactly?</p>",
        "id": 128268199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353687
    },
    {
        "content": "<p>we could modify the <code>WriteKind</code> to carry the local variable info we need, if it's not otherwise available</p>",
        "id": 128268210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353704
    },
    {
        "content": "<p>also, I don't think we want a scope tree at all</p>",
        "id": 128268233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353731
    },
    {
        "content": "<p>maybe I am confused :)</p>",
        "id": 128268236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353735
    },
    {
        "content": "<p>but this search doesn't seem to turn up any related data types <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/?search=scopetree\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/?search=scopetree\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc/?search=scopetree</a></p>",
        "id": 128268244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353746
    },
    {
        "content": "<p>so ...</p>",
        "id": 128268336,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353822
    },
    {
        "content": "<p>I thought that was the thing you needed to call <code>subscope</code></p>",
        "id": 128268358,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353854
    },
    {
        "content": "<p>maybe that thing is completely unrelated to what I'm doing? :P</p>",
        "id": 128268377,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353874
    },
    {
        "content": "<p>hmmm I think so</p>",
        "id": 128268388,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353891
    },
    {
        "content": "<p>it's related to regions</p>",
        "id": 128268392,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353897
    },
    {
        "content": "<p>there are multiple \"scope-like\" things</p>",
        "id": 128268402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353914
    },
    {
        "content": "<p>can you send me a link to the latest code?</p>",
        "id": 128268447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353930
    },
    {
        "content": "<p>so I can get some idea what you have available :)</p>",
        "id": 128268452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529353935
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772\">https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772</a></p>",
        "id": 128268498,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529353998
    },
    {
        "content": "<p>ok so you have the MIR in the <code>mir</code> variable</p>",
        "id": 128268524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354038
    },
    {
        "content": "<p>i.e., <a href=\"https://github.com/spastorino/rust/blob/0a6bcc89d80b6412e11bc0ebde51c194a24e4772/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L34\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/0a6bcc89d80b6412e11bc0ebde51c194a24e4772/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L34\">here</a></p>",
        "id": 128268570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354053
    },
    {
        "content": "<p>yes</p>",
        "id": 128268575,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529354060
    },
    {
        "content": "<p>so we should be able to extract the <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html\"><code>LocalDecl</code></a> for the two local variables involved</p>",
        "id": 128268583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354074
    },
    {
        "content": "<p>e.g., <code>&amp;mir.local_decls[local]</code></p>",
        "id": 128268595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354087
    },
    {
        "content": "<p>yep that's already done</p>",
        "id": 128268625,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529354139
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR49\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR49\">https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR49</a></p>",
        "id": 128268632,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529354149
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR50\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR50\">https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR50</a></p>",
        "id": 128268676,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529354165
    },
    {
        "content": "<p>the <code>local</code> we <a href=\"https://github.com/spastorino/rust/blob/0a6bcc89d80b6412e11bc0ebde51c194a24e4772/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L70\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/0a6bcc89d80b6412e11bc0ebde51c194a24e4772/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L70\">extract from <code>Cause::DropVar</code></a> is the one being dropped -- the <code>x</code> in our examples</p>",
        "id": 128268678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354168
    },
    {
        "content": "<p>ah right ok</p>",
        "id": 128268690,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354185
    },
    {
        "content": "<p>so we just need to check basically if the one visibility scope is a subscope of the other</p>",
        "id": 128268698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354196
    },
    {
        "content": "<p>yes</p>",
        "id": 128268705,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529354203
    },
    {
        "content": "<p>I need to change this <a href=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR52\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR52\">https://github.com/spastorino/rust/commit/0a6bcc89d80b6412e11bc0ebde51c194a24e4772#diff-fe005d3dcf77fde8f189617b2599e10eR52</a></p>",
        "id": 128268706,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529354206
    },
    {
        "content": "<p>the field <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.Mir.html#structfield.source_scopes\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.Mir.html#structfield.source_scopes\"><code>source_scopes</code></a> contains the info for each scope</p>",
        "id": 128268733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354234
    },
    {
        "content": "<p>I don't know if there is a helper to check for subscopes</p>",
        "id": 128268738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354239
    },
    {
        "content": "<p>but we could add one if not</p>",
        "id": 128268741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354242
    },
    {
        "content": "<p>I don't see any such helper</p>",
        "id": 128268752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354257
    },
    {
        "content": "<p>presumably we would fetch the parent data for the \"smaller scope\" and iterate up the chain (<a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.SourceScopeData.html#structfield.parent_scope\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.SourceScopeData.html#structfield.parent_scope\">parent data is in this field</a>)</p>",
        "id": 128268813,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354288
    },
    {
        "content": "<p>but wasn't source scope different to visibility scope?</p>",
        "id": 128268815,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529354292
    },
    {
        "content": "<p>hmm the names are maybe a bit confusing <em>but</em></p>",
        "id": 128268834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354326
    },
    {
        "content": "<p>the <code>SourceScope</code> type is used for both of the fields</p>",
        "id": 128268837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354333
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.visibility_scope\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.LocalDecl.html#structfield.visibility_scope\"><code>visibility_scope: SourceScope</code></a></p>",
        "id": 128268846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354353
    },
    {
        "content": "<p>probably the fields should be named <code>decl_scope</code> and <code>visibility_scope</code></p>",
        "id": 128268860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354368
    },
    {
        "content": "<p>i.e., there are two scopes associated with a variable</p>",
        "id": 128268863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354375
    },
    {
        "content": "<p>but both of them are scopes</p>",
        "id": 128268873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354384
    },
    {
        "content": "<p>put another way, there is one tree of scopes, and the decl-scope and the visibility-scope both reference into it</p>",
        "id": 128268894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529354402
    },
    {
        "content": "<blockquote>\n<p>presumably we would fetch the parent data for the \"smaller scope\" and iterate up the chain (<a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.SourceScopeData.html#structfield.parent_scope\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.SourceScopeData.html#structfield.parent_scope\">parent data is in this field</a>)</p>\n</blockquote>\n<p>you meant, to start from the smaller and go up until it matches the bigger one?</p>",
        "id": 128269752,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529355259
    },
    {
        "content": "<p>how do you know which is the smaller one?</p>",
        "id": 128269780,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529355295
    },
    {
        "content": "<p>well we know we want to test if one is smaller than the other</p>",
        "id": 128269791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529355307
    },
    {
        "content": "<p>well you know :)</p>",
        "id": 128269793,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529355309
    },
    {
        "content": "<p>so we'd start from that one</p>",
        "id": 128269795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529355311
    },
    {
        "content": "<p>yep</p>",
        "id": 128269806,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529355325
    },
    {
        "content": "<p>in particular, we want to start from the one that is being dropped</p>",
        "id": 128269808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529355325
    },
    {
        "content": "<p>(since the idea would be that if you reorder that w/r/t the other one, you would make it bigger...)</p>",
        "id": 128269830,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529355343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> trying this thing</p>",
        "id": 128270577,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529356344
    },
    {
        "content": "<p>+1</p>",
        "id": 128270579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529356350
    },
    {
        "content": "<p>so ... I iterate to the parent</p>",
        "id": 128270581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529356352
    },
    {
        "content": "<p>and check for span?</p>",
        "id": 128270583,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529356357
    },
    {
        "content": "<p>I mean, if parent span is equal to the other scope span?</p>",
        "id": 128270591,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529356374
    },
    {
        "content": "<p>I would never look at the span</p>",
        "id": 128270676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529356471
    },
    {
        "content": "<p>I would rather add a method to <code>Mir</code> like</p>",
        "id": 128270680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529356479
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">is_sub_scope</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">sub</span>: <span class=\"nc\">SourceScope</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sup</span>: <span class=\"nc\">SourceScope</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">sub</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">sup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">scope_info</span><span class=\"p\">[</span><span class=\"n\">sub</span><span class=\"p\">].</span><span class=\"n\">parent</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">sub</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 128270719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529356534
    },
    {
        "content": "<p>and then you can ask <code>if mir.is_sub_scope(a, b) { ... }</code></p>",
        "id": 128270728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529356549
    },
    {
        "content": "<p>yeah, was doing something like that</p>",
        "id": 128270785,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529356590
    },
    {
        "content": "<p>figured after asking that I needed <code>==</code></p>",
        "id": 128270795,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529356599
    },
    {
        "content": "<p>yeah, main thing is you can just compare the indices</p>",
        "id": 128270928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529356794
    },
    {
        "content": "<p>you don't need to look at the spans</p>",
        "id": 128270930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529356797
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 128271097,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529357021
    },
    {
        "content": "<p>this is compiling, etc</p>",
        "id": 128271100,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529357025
    },
    {
        "content": "<p>hope it works and will open a PR soon</p>",
        "id": 128271106,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529357041
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> still not working :(</p>",
        "id": 128273346,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529360072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/spastorino/rust/commit/30a7e60a1f5b9c806a6d476685530386ca05ca7f\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/30a7e60a1f5b9c806a6d476685530386ca05ca7f\">https://github.com/spastorino/rust/commit/30a7e60a1f5b9c806a6d476685530386ca05ca7f</a></p>",
        "id": 128273598,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529360422
    },
    {
        "content": "<p>what's this <a href=\"https://github.com/spastorino/rust/commit/30a7e60a1f5b9c806a6d476685530386ca05ca7f#diff-ae6caad4b0eb05799bbbd3eeb98f64d7R13\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/30a7e60a1f5b9c806a6d476685530386ca05ca7f#diff-ae6caad4b0eb05799bbbd3eeb98f64d7R13\">https://github.com/spastorino/rust/commit/30a7e60a1f5b9c806a6d476685530386ca05ca7f#diff-ae6caad4b0eb05799bbbd3eeb98f64d7R13</a> stuff?</p>",
        "id": 128273630,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529360491
    },
    {
        "content": "<p>ahh I see, compiler is ICEing</p>",
        "id": 128273694,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529360594
    },
    {
        "content": "<p>any idea why?</p>",
        "id": 128277170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529365940
    },
    {
        "content": "<p>no</p>",
        "id": 128278665,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529368473
    },
    {
        "content": "<p>try running the test with <code>RUST_BACKTRACE=1</code>?</p>",
        "id": 128278677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529368505
    },
    {
        "content": "<p>have done that already</p>",
        "id": 128278825,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529368788
    },
    {
        "content": "<p>let me paste the output</p>",
        "id": 128278830,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529368792
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@archlinux rust1 (diagnostic-suggest-drop-in-reverse)]$ RUST_BACKTRACE=1 rustc +stage1 src/test/ui/error-codes/E0657.rs\nerror[E0657]: `impl Trait` can only capture lifetimes bound at the fn or impl level\n  --&gt; src/test/ui/error-codes/E0657.rs:19:31\n   |\n19 |     -&gt; Box&lt;for&lt;&#39;a&gt; Id&lt;impl Lt&lt;&#39;a&gt;&gt;&gt;\n   |                               ^^\n\nerror[E0657]: `impl Trait` can only capture lifetimes bound at the fn or impl level\n  --&gt; src/test/ui/error-codes/E0657.rs:28:35\n   |\n28 |         -&gt; Box&lt;for&lt;&#39;a&gt; Id&lt;impl Lt&lt;&#39;a&gt;&gt;&gt;\n   |                                   ^^\n\nthread &#39;main&#39; panicked at &#39;assertion failed: !erased_self_ty.has_escaping_regions()&#39;, librustc/ty/util.rs:369:9\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::print\n             at libstd/sys_common/backtrace.rs:71\n             at libstd/sys_common/backtrace.rs:59\n   2: std::panicking::default_hook::{{closure}}\n             at libstd/panicking.rs:211\n   3: std::panicking::default_hook\n             at libstd/panicking.rs:227\n   4: rustc::util::common::panic_hook\n             at librustc/util/common.rs:54\n   5: std::panicking::rust_panic_with_hook\n             at libstd/panicking.rs:515\n   6: std::panicking::begin_panic\n             at libstd/panicking.rs:445\n   7: rustc::ty::util::&lt;impl rustc::ty::context::TyCtxt&lt;&#39;a, &#39;gcx, &#39;tcx&gt;&gt;::required_region_bounds\n             at librustc/ty/util.rs:369\n   8: rustc::infer::anon_types::Instantiator::fold_anon_ty\n             at librustc/infer/anon_types/mod.rs:748\n   9: &lt;rustc::ty::fold::BottomUpFolder&lt;&#39;a, &#39;gcx, &#39;tcx, F&gt; as rustc::ty::fold::TypeFolder&lt;&#39;gcx, &#39;tcx&gt;&gt;::fold_ty\n             at ./src/librustc/infer/anon_types/mod.rs:704\n             at ./src/librustc/ty/fold.rs:203\n  10: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::TyS&lt;&#39;tcx&gt;&gt;::fold_with\n             at ./src/librustc/ty/structural_impls.rs:885\n  11: core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;&#39;a mut F&gt;::call_once\n             at ./src/librustc/ty/subst.rs:155\n             at ./src/librustc/ty/fold.rs:58\n             at ./src/librustc/ty/subst.rs:327\n             at ./src/libcore/ops/function.rs:271\n  12: &lt;rustc_data_structures::array_vec::ArrayVec&lt;A&gt; as core::iter::traits::Extend&lt;&lt;A as rustc_data_structures::array_vec::Array&gt;::Element&gt;&gt;::extend\n             at ./src/libcore/option.rs:414\n             at ./src/libcore/iter/mod.rs:1326\n             at ./src/librustc_data_structures/array_vec.rs:197\n  13: &lt;rustc_data_structures::accumulate_vec::AccumulateVec&lt;A&gt; as core::iter::traits::FromIterator&lt;&lt;A as rustc_data_structures::array_vec::Array&gt;::Element&gt;&gt;::from_iter\n             at ./src/librustc_data_structures/accumulate_vec.rs:113\n  14: rustc::ty::subst::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::Slice&lt;rustc::ty::subst::Kind&lt;&#39;tcx&gt;&gt;&gt;::super_fold_with\n             at ./src/libcore/iter/iterator.rs:1398\n             at ./src/librustc/ty/subst.rs:327\n  15: rustc::ty::fold::TypeFoldable::fold_with\n             at ./src/librustc/ty/fold.rs:58\n  16: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for rustc::ty::sty::ExistentialPredicate&lt;&#39;tcx&gt;&gt;::super_fold_with\n             at ./src/librustc/macros.rs:314\n             at ./src/librustc/ty/fold.rs:58\n             at ./src/librustc/macros.rs:394\n  17: rustc::ty::fold::TypeFoldable::fold_with\n             at ./src/librustc/ty/fold.rs:58\n  18: core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;&#39;a mut F&gt;::call_once\n             at ./src/librustc/ty/structural_impls.rs:749\n             at ./src/libcore/ops/function.rs:271\n  19: &lt;rustc_data_structures::array_vec::ArrayVec&lt;A&gt; as core::iter::traits::Extend&lt;&lt;A as rustc_data_structures::array_vec::Array&gt;::Element&gt;&gt;::extend\n             at ./src/libcore/option.rs:414\n             at ./src/libcore/iter/mod.rs:1326\n             at ./src/librustc_data_structures/array_vec.rs:197\n  20: &lt;rustc_data_structures::accumulate_vec::AccumulateVec&lt;A&gt; as core::iter::traits::FromIterator&lt;&lt;A as rustc_data_structures::array_vec::Array&gt;::Element&gt;&gt;::from_iter\n             at ./src/librustc_data_structures/accumulate_vec.rs:113\n  21: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::Slice&lt;rustc::ty::sty::ExistentialPredicate&lt;&#39;tcx&gt;&gt;&gt;::super_fold_with\n             at ./src/libcore/iter/iterator.rs:1398\n             at ./src/librustc/ty/structural_impls.rs:749\n  22: rustc::ty::fold::TypeFoldable::fold_with\n             at ./src/librustc/ty/fold.rs:58\n  23: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for rustc::ty::sty::Binder&lt;T&gt;&gt;::super_fold_with\n             at ./src/librustc/ty/structural_impls.rs:727\n             at ./src/librustc/ty/sty.rs:788\n             at ./src/librustc/ty/sty.rs:782\n             at ./src/librustc/ty/structural_impls.rs:727\n  24: rustc::ty::fold::TypeFolder::fold_binder\n             at ./src/librustc/ty/fold.rs:152\n  25: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for rustc::ty::sty::Binder&lt;T&gt;&gt;::fold_with\n             at ./src/librustc/ty/structural_impls.rs:731\n  26: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::TyS&lt;&#39;tcx&gt;&gt;::super_fold_with\n             at ./src/librustc/ty/structural_impls.rs:853\n  27: &lt;rustc::ty::fold::BottomUpFolder&lt;&#39;a, &#39;gcx, &#39;tcx, F&gt; as rustc::ty::fold::TypeFolder&lt;&#39;gcx, &#39;tcx&gt;&gt;::fold_ty\n             at ./src/librustc/ty/fold.rs:202\n  28: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::TyS&lt;&#39;tcx&gt;&gt;::fold_with\n             at ./src/librustc/ty/structural_impls.rs:885\n  29: core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;&#39;a mut F&gt;::call_once\n             at ./src/librustc/ty/subst.rs:155\n             at ./src/librustc/ty/fold.rs:58\n             at ./src/librustc/ty/subst.rs:327\n             at ./src/libcore/ops/function.rs:271\n  30: &lt;rustc_data_structures::array_vec::ArrayVec&lt;A&gt; as core::iter::traits::Extend&lt;&lt;A as rustc_data_structures::array_vec::Array&gt;::Element&gt;&gt;::extend\n             at ./src/libcore/option.rs:414\n             at ./src/libcore/iter/mod.rs:1326\n             at ./src/librustc_data_structures/array_vec.rs:197\n  31: &lt;rustc_data_structures::accumulate_vec::AccumulateVec&lt;A&gt; as core::iter::traits::FromIterator&lt;&lt;A as rustc_data_structures::array_vec::Array&gt;::Element&gt;&gt;::from_iter\n             at ./src/librustc_data_structures/accumulate_vec.rs:113\n  32: rustc::ty::subst::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::Slice&lt;rustc::ty::subst::Kind&lt;&#39;tcx&gt;&gt;&gt;::super_fold_with\n             at ./src/libcore/iter/iterator.rs:1398\n             at ./src/librustc/ty/subst.rs:327\n  33: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::TyS&lt;&#39;tcx&gt;&gt;::super_fold_with\n             at ./src/librustc/ty/fold.rs:58\n             at ./src/librustc/ty/structural_impls.rs:851\n  34: &lt;rustc::ty::fold::BottomUpFolder&lt;&#39;a, &#39;gcx, &#39;tcx, F&gt; as rustc::ty::fold::TypeFolder&lt;&#39;gcx, &#39;tcx&gt;&gt;::fold_ty\n             at ./src/librustc/ty/fold.rs:202\n  35: rustc::ty::structural_impls::&lt;impl rustc::ty::fold::TypeFoldable&lt;&#39;tcx&gt; for &amp;&#39;tcx rustc::ty::TyS&lt;&#39;tcx&gt;&gt;::fold_with\n             at ./src/librustc/ty/structural_impls.rs:885\n  36: rustc::infer::anon_types::Instantiator::instantiate_anon_types_in_map\n             at ./src/librustc/infer/anon_types/mod.rs:654\n  37: rustc::infer::anon_types::&lt;impl rustc::infer::InferCtxt&lt;&#39;a, &#39;gcx, &#39;tcx&gt;&gt;::instantiate_anon_types\n             at ./src/librustc/infer/anon_types/mod.rs:127\n  38: rustc_typeck::check::FnCtxt::instantiate_anon_types_from_return_value\n             at librustc_typeck/check/mod.rs:2093\n  39: rustc_typeck::check::check_fn\n             at librustc_typeck/check/mod.rs:1022\n  40: rustc::ty::context::tls::set_tlv\n             at librustc_typeck/check/mod.rs:849\n             at librustc_typeck/check/mod.rs:608\n             at ./src/librustc/infer/mod.rs:453\n             at ./src/librustc/ty/context.rs:1483\n             at ./src/librustc/ty/context.rs:1829\n             at ./src/librustc/ty/context.rs:1768\n  41: rustc::ty::context::tls::with_context_opt\n             at ./src/librustc/ty/context.rs:1828\n             at ./src/librustc/ty/context.rs:1482\n             at ./src/librustc/ty/context.rs:1929\n             at ./src/librustc/ty/context.rs:1913\n             at ./src/librustc/ty/context.rs:1904\n  42: rustc::ty::context::tls::with_related_context\n             at ./src/librustc/ty/context.rs:1913\n             at ./src/librustc/ty/context.rs:1924\n  43: rustc::ty::context::GlobalCtxt::enter_local\n             at ./src/librustc/ty/context.rs:1475\n  44: rustc::infer::InferCtxtBuilder::enter\n             at ./src/librustc/infer/mod.rs:453\n  45: rustc_typeck::check::InheritedBuilder::enter\n             at librustc_typeck/check/mod.rs:608\n  46: rustc_typeck::check::typeck_tables_of\n             at librustc_typeck/check/mod.rs:833\n  47: rustc::ty::query::__query_compute::typeck_tables_of\n             at librustc/ty/query/plumbing.rs:783\n             at librustc/ty/query/plumbing.rs:752\n  48: rustc::ty::query::&lt;impl rustc::ty::query::config::QueryAccessors&lt;&#39;tcx&gt; for rustc::ty::query::queries::typeck_tables_of&lt;&#39;tcx&gt;&gt;::compute\n             at librustc/ty/query/plumbing.rs:781\n  49: rustc::dep_graph::graph::DepGraph::with_task_impl\n             at librustc/dep_graph/graph.rs:341\n  50: rustc::dep_graph::graph::DepGraph::with_task\n             at librustc/dep_graph/graph.rs:207\n  51: rustc::ty::context::tls::set_tlv\n             at librustc/ty/query/plumbing.rs:533\n             at librustc/ty/query/plumbing.rs:203\n             at librustc/ty/context.rs:1829\n             at librustc/ty/context.rs:1768\n  52: rustc::ty::context::tls::with_context_opt\n             at librustc/ty/context.rs:1828\n             at librustc/ty/query/plumbing.rs...\n</pre></div>",
        "id": 128278885,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529368828
    },
    {
        "content": "<p>haven't investigated yet</p>",
        "id": 128278899,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529368894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^^^</p>",
        "id": 128278901,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529368910
    },
    {
        "content": "<p>maybe better this <a href=\"https://gist.github.com/spastorino/b589e884798f72c75679d45ea91ecae5\" target=\"_blank\" title=\"https://gist.github.com/spastorino/b589e884798f72c75679d45ea91ecae5\">https://gist.github.com/spastorino/b589e884798f72c75679d45ea91ecae5</a></p>",
        "id": 128278941,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529368937
    },
    {
        "content": "<p>ok, it's a thing that's happening on master</p>",
        "id": 128280053,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529371060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> this would be the thing <a href=\"https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff\">https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff</a></p>",
        "id": 128281015,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529372951
    },
    {
        "content": "<p>need to check if all the notes are on examples that make sense</p>",
        "id": 128281020,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529372972
    },
    {
        "content": "<blockquote>\n<p>ok, it's a thing that's happening on master</p>\n</blockquote>\n<p>huh?</p>",
        "id": 128292743,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529396072
    },
    {
        "content": "<p>actually, I think maybe I am seeing it too</p>",
        "id": 128292777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529396141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> we are still alerting in this kind of cases <a href=\"https://github.com/spastorino/rust/blob/37a565546509b601f356e2d2136bab431c46beff/src/test/ui/issue-46471-1.rs\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/37a565546509b601f356e2d2136bab431c46beff/src/test/ui/issue-46471-1.rs\">https://github.com/spastorino/rust/blob/37a565546509b601f356e2d2136bab431c46beff/src/test/ui/issue-46471-1.rs</a></p>",
        "id": 128305027,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529415641
    },
    {
        "content": "<p>see <a href=\"https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff#diff-f471045f63f2df09085b887aa7dd4644R26\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff#diff-f471045f63f2df09085b887aa7dd4644R26\">https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff#diff-f471045f63f2df09085b887aa7dd4644R26</a></p>",
        "id": 128305037,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529415656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> huh.</p>",
        "id": 128305832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529416630
    },
    {
        "content": "<p>if I were you, I would add <code>debug!</code> and print out</p>\n<ul>\n<li>both of the scopes</li>\n<li>whether the visibility scope of Borrowed is a subscope of the Dropped variable</li>\n<li>whether the visibility scope of Dropped is a subscope of the Borrowed variable</li>\n<li>whether the source scope of Borrowed is a subscope of the Dropped variable</li>\n<li>whether the source scope of Dropped is a subscope of the Borrowed variable</li>\n</ul>\n<p>and then try a few examples to see what we should be looking for :)</p>",
        "id": 128305909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529416695
    },
    {
        "content": "<p>maybe we are confused</p>",
        "id": 128305911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529416697
    },
    {
        "content": "<p>I would also print out the locals themselves</p>",
        "id": 128305930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529416740
    },
    {
        "content": "<p>so we can check that we are plumbing through the values we <em>think</em> we are plumbing through</p>",
        "id": 128305942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529416748
    },
    {
        "content": "<p>hey, back, so ...</p>",
        "id": 128308691,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529419934
    },
    {
        "content": "<p>but the thing is ...</p>",
        "id": 128308716,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529419972
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>fn main() {\n    let y = {\n        let mut z = 0;\n        &amp;mut z\n    };\n    //~^^ ERROR `z` does not live long enough (Ast) [E0597]\n    //~| ERROR `z` does not live long enough (Mir) [E0597]\n    println!(&quot;{}&quot;, y);\n}\n</pre></div>",
        "id": 128308732,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529419986
    },
    {
        "content": "<p>visibility scope of the borrowed z is a subscope of y</p>",
        "id": 128308740,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529420005
    },
    {
        "content": "<p>and that's what I'm checking</p>",
        "id": 128308743,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529420011
    },
    {
        "content": "<p>so this is right</p>",
        "id": 128308745,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529420014
    },
    {
        "content": "<p>unsure if it's what we wanted</p>",
        "id": 128308750,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529420019
    },
    {
        "content": "<p>because we don't want to alert in this case</p>",
        "id": 128308752,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529420026
    },
    {
        "content": "<p>I think you should dump out all the relationships</p>",
        "id": 128308831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529420115
    },
    {
        "content": "<p>I do not believe that the visibility scope of <code>z</code> <em>should</em> be a subscope of the visibility scope of <code>y</code></p>",
        "id": 128308909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529420226
    },
    {
        "content": "<p>so something seems fishy</p>",
        "id": 128308911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529420226
    },
    {
        "content": "<p>like, there is no point in the program where <code>y</code> and <code>z</code> are both ins cope</p>",
        "id": 128308912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529420226
    },
    {
        "content": "<p>so something is awry</p>",
        "id": 128308913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529420226
    },
    {
        "content": "<p>ok</p>",
        "id": 128309596,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529420856
    },
    {
        "content": "<p>let me check that</p>",
        "id": 128309600,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529420861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> this is why I was suggesting just dumping All The Things</p>",
        "id": 128309705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529420991
    },
    {
        "content": "<p>so we can kind of see what's going on</p>",
        "id": 128309709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529420996
    },
    {
        "content": "<p>yes</p>",
        "id": 128309796,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529421066
    },
    {
        "content": "<p>doing that</p>",
        "id": 128309797,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529421068
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>DEBUG 2018-06-19T15:26:16Z: rustc_mir::borrow_check::nll::explain_borrow: visibility local_scope=scope[0]\nDEBUG 2018-06-19T15:26:16Z: rustc_mir::borrow_check::nll::explain_borrow: visibility borrowed_local_scope=scope[3]\nDEBUG 2018-06-19T15:26:16Z: rustc_mir::borrow_check::nll::explain_borrow: borrowed_local_scope is a sub scope of local_scope\nDEBUG 2018-06-19T15:26:16Z: rustc_mir::borrow_check::nll::explain_borrow: source local_scope=scope[0]\nDEBUG 2018-06-19T15:26:16Z: rustc_mir::borrow_check::nll::explain_borrow: source borrowed_local_scope=scope[4]\nDEBUG 2018-06-19T15:26:16Z: rustc_mir::borrow_check::nll::explain_borrow: source_borrowed_local_scope is a sub scope of source_local_scope\n</pre></div>",
        "id": 128310680,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422069
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> visibility and source scopes of the borrowed thing are subscopes of the local thing</p>",
        "id": 128310733,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422108
    },
    {
        "content": "<p>can you try two examples?</p>",
        "id": 128310738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529422126
    },
    {
        "content": "<p>i.e., also an example where we <em>want</em> it to fire?</p>",
        "id": 128310740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529422131
    },
    {
        "content": "<p>also, what is the MIR in this case?</p>",
        "id": 128310744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529422137
    },
    {
        "content": "<p>yes</p>",
        "id": 128310751,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422147
    },
    {
        "content": "<p>finally, can you also add other bits of log — notably, what are the local variables in question?</p>",
        "id": 128310755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529422155
    },
    {
        "content": "<p>yes</p>",
        "id": 128310761,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422172
    },
    {
        "content": "<p>-Zmir-dump, right?</p>",
        "id": 128310764,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422178
    },
    {
        "content": "<p><code>-Zdump-mir=nll</code> I think</p>",
        "id": 128310773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529422192
    },
    {
        "content": "<p>at  least that is what my fingers want to type</p>",
        "id": 128310775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529422197
    },
    {
        "content": "<p>ok</p>",
        "id": 128310776,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422197
    },
    {
        "content": "<p>hehehe</p>",
        "id": 128310782,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422203
    },
    {
        "content": "<p>ok</p>",
        "id": 128310831,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://paper.dropbox.com/doc/Issue-51195--AFjUtJ8u3V7OKKrxMgCuh3a0AQ-t4zFz77cMeB6Se08GuC2r\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Issue-51195--AFjUtJ8u3V7OKKrxMgCuh3a0AQ-t4zFz77cMeB6Se08GuC2r\">https://paper.dropbox.com/doc/Issue-51195--AFjUtJ8u3V7OKKrxMgCuh3a0AQ-t4zFz77cMeB6Se08GuC2r</a></p>",
        "id": 128311148,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422678
    },
    {
        "content": "<p>adding more examples</p>",
        "id": 128311191,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529422683
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> great :) it'd be nice to have the locals etc too, not just their scopes</p>",
        "id": 128311897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529423607
    },
    {
        "content": "<p>good case where a debugger would be helpful</p>",
        "id": 128311951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529423658
    },
    {
        "content": "<p>sigh</p>",
        "id": 128311952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529423659
    },
    {
        "content": "<p>well ... interesting</p>",
        "id": 128312256,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529424076
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>RUST_LOG=rustc_mir::borrow_check::nll::explain_borrow RUST_BACKTRACE=1 rustc +stage1 -Zborrowck=mir -Ztwo-phase-borrows -Zdump-mir=nll src/test/ui/error-codes/E0597.rs\nerror[E0597]: `y` does not live long enough\n  --&gt; src/test/ui/error-codes/E0597.rs:18:16\n   |\n18 |     x.x = Some(&amp;y);\n   |                ^^ borrowed value does not live long enough\n19 |     //~^ `y` does not live long enough [E0597]\n20 | }\n   | -\n   | |\n   | borrowed value only lives until here\n   | borrow later used here, when `x` is dropped\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0597`.\n</pre></div>",
        "id": 128312258,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529424081
    },
    {
        "content": "<p>this is the case that is supposed to be printing the note</p>",
        "id": 128312265,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529424106
    },
    {
        "content": "<p>need to add more debug calls</p>",
        "id": 128312317,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529424146
    },
    {
        "content": "<p>but it's not going in that area of the code</p>",
        "id": 128312321,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529424155
    },
    {
        "content": "<p>OHH man!</p>",
        "id": 128312521,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529424438
    },
    {
        "content": "<p>hehe I've made the silliest mistake ever</p>",
        "id": 128312523,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529424450
    },
    {
        "content": "<p>I had a feeling :)</p>",
        "id": 128314229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529426883
    },
    {
        "content": "<p>:)</p>",
        "id": 128314689,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529427505
    },
    {
        "content": "<p>pushing again</p>",
        "id": 128314692,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529427508
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/commit/a1a30ec8c79771693b338f9ece9415f91500bd49\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/a1a30ec8c79771693b338f9ece9415f91500bd49\">https://github.com/spastorino/rust/commit/a1a30ec8c79771693b338f9ece9415f91500bd49</a></p>",
        "id": 128314716,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529427563
    },
    {
        "content": "<p>need to change where are we suggesting this thing to see if it's 100% right or not</p>",
        "id": 128314722,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529427586
    },
    {
        "content": "<p>still got <a href=\"https://github.com/spastorino/rust/commit/a1a30ec8c79771693b338f9ece9415f91500bd49#diff-ae6caad4b0eb05799bbbd3eeb98f64d7R13\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/a1a30ec8c79771693b338f9ece9415f91500bd49#diff-ae6caad4b0eb05799bbbd3eeb98f64d7R13\">that weird ICE thing going on</a></p>",
        "id": 128315299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529428303
    },
    {
        "content": "<p>ahh ya</p>",
        "id": 128315700,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529428872
    },
    {
        "content": "<p>let me fix that</p>",
        "id": 128315709,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529428883
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> done <a href=\"https://github.com/spastorino/rust/commit/e669d462303536e33bd8740ead5306bfd37d04d5\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/e669d462303536e33bd8740ead5306bfd37d04d5\">https://github.com/spastorino/rust/commit/e669d462303536e33bd8740ead5306bfd37d04d5</a></p>",
        "id": 128315810,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429003
    },
    {
        "content": "<p>nice</p>",
        "id": 128315816,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529429022
    },
    {
        "content": "<p>do the changed tests \"feel reasonable\"?</p>",
        "id": 128315821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529429030
    },
    {
        "content": "<p>I'm checking that</p>",
        "id": 128315875,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I think it makes sense</p>",
        "id": 128315979,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429254
    },
    {
        "content": "<p>I've checked some examples that are correct from my point of view</p>",
        "id": 128315986,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429274
    },
    {
        "content": "<p>will check a bit more</p>",
        "id": 128315989,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429279
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what happens in <code> let (last_dropped, foo0);</code> ?</p>",
        "id": 128316127,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429433
    },
    {
        "content": "<p><code>foo0.something = &amp;last_dropped;</code></p>",
        "id": 128316131,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429445
    },
    {
        "content": "<p>I guess in this case is considered that both things are dropped at the same time</p>",
        "id": 128316159,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429499
    },
    {
        "content": "<p>so the definition order thing still applies</p>",
        "id": 128316165,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429510
    },
    {
        "content": "<p>anyway something like <code>values in a scope are dropped in the opposite order they are defined</code> may not be 100% correct for this case</p>",
        "id": 128316219,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429549
    },
    {
        "content": "<p>also unsure what about this <a href=\"https://github.com/spastorino/rust/blob/e669d462303536e33bd8740ead5306bfd37d04d5/src/test/ui/span/send-is-not-static-std-sync.rs\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/e669d462303536e33bd8740ead5306bfd37d04d5/src/test/ui/span/send-is-not-static-std-sync.rs\">https://github.com/spastorino/rust/blob/e669d462303536e33bd8740ead5306bfd37d04d5/src/test/ui/span/send-is-not-static-std-sync.rs</a></p>",
        "id": 128316504,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429908
    },
    {
        "content": "<p>other than that, seems correct</p>",
        "id": 128316508,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429916
    },
    {
        "content": "<p>opening a PR</p>",
        "id": 128316510,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529429919
    },
    {
        "content": "<blockquote>\n<p>I guess in this case is considered that both things are dropped at the same time</p>\n</blockquote>\n<p>well, there <em>is</em> an order -- we used to sort of hide it (in the AST days), but in MIR we do not. <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and I felt like this was OK, since we can't really <em>change</em> the ordering anyway.</p>",
        "id": 128316786,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529430267
    },
    {
        "content": "<p>ok</p>",
        "id": 128317417,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529430972
    },
    {
        "content": "<p>yeah, I know there's an order in MIR</p>",
        "id": 128317421,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529430978
    },
    {
        "content": "<p>what I meant is that from a programmer perspective, the message may be confusing</p>",
        "id": 128317432,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529431016
    },
    {
        "content": "<p>unless programmers think about MIR, which I doubt most will do</p>",
        "id": 128317442,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529431036
    },
    {
        "content": "<p>but anyway ...</p>",
        "id": 128317445,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529431042
    },
    {
        "content": "<p>opening a PR</p>",
        "id": 128317446,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529431044
    },
    {
        "content": "<p>running tidy, recompiling, etc</p>",
        "id": 128317448,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529431057
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/51638\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51638\">https://github.com/rust-lang/rust/pull/51638</a></p>",
        "id": 128318264,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529432076
    },
    {
        "content": "<blockquote>\n<p>what I meant is that from a programmer perspective, the message may be confusing</p>\n</blockquote>\n<p>yeah we may want to rephrase to target this case (e.g., order within a tuple is significant)</p>",
        "id": 128318280,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529432100
    },
    {
        "content": "<p>for some reason I've missed the comments like <a href=\"https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff#r29417759\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff#r29417759\">https://github.com/spastorino/rust/commit/37a565546509b601f356e2d2136bab431c46beff#r29417759</a></p>",
        "id": 128318560,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529432437
    },
    {
        "content": "<p>I can fix that</p>",
        "id": 128318562,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529432440
    },
    {
        "content": "<p>how do you want to document that?</p>",
        "id": 128318567,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529432451
    },
    {
        "content": "<p>there are no docs about the parameters of <code>explain_why_borrow_containts_point</code></p>",
        "id": 128318577,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529432475
    },
    {
        "content": "<p>as fn documentation I meant</p>",
        "id": 128318590,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529432494
    },
    {
        "content": "<p>unsure if you want to add that as the fn documentation</p>",
        "id": 128318595,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529432504
    },
    {
        "content": "<p>yeah, I would just add fn documentation</p>",
        "id": 128319090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529433055
    },
    {
        "content": "<p>ideally explaining all the parameters =)</p>",
        "id": 128319093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529433060
    },
    {
        "content": "<p>but at minimum explaining that one...</p>",
        "id": 128319103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529433069
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    /// Receives the `borrow` and it&#39;s `context`, `kind_place` pair where it&#39;s first element says\n    /// if it&#39;s a write or not and the second holds the place that&#39;s being dropped and a `mut err`\n    /// where error annotations are going to be added.\n</pre></div>",
        "id": 128320578,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529433865
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> fix my shitty english :P</p>",
        "id": 128320615,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529433874
    },
    {
        "content": "<p>I think borrow and context are kind of self explanatory given the function name</p>",
        "id": 128320779,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529433905
    },
    {
        "content": "<p>wouldn't explain the data structures there</p>",
        "id": 128320854,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529433916
    },
    {
        "content": "<p>better to navigate to BorrowData and Context definitions, I guess</p>",
        "id": 128320920,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529433934
    },
    {
        "content": "<p>seems ok. I'd usually put these tthings into more of a list format for easier reading:</p>",
        "id": 128321126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529433964
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span># Parameters\n\n- `borrow`: borrow..\n-  `context`: where the borrow occurs\n- `kind_place`: if Some, this describes the statement that triggered the error.\n  - first half is the kind of write, if any, being performed\n  - second half is the place being accessed\n- ...\n</pre></div>",
        "id": 128321366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529434043
    },
    {
        "content": "<p>ok</p>",
        "id": 128322365,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529435323
    },
    {
        "content": "<p>just in case ...</p>",
        "id": 128322367,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529435325
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>diff --git a/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs b/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs\nindex b96c5f5fcc..4f37b338e9 100644\n--- a/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs\n+++ b/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs\n@@ -22,6 +22,15 @@ impl&lt;&#39;cx, &#39;gcx, &#39;tcx&gt; MirBorrowckCtxt&lt;&#39;cx, &#39;gcx, &#39;tcx&gt; {\n     /// point from `context`. This is key for the &quot;3-point errors&quot;\n     /// [described in the NLL RFC][d].\n     ///\n+    /// # Parameters\n+    ///\n+    /// - `borrow`: the borrow in question\n+    /// - `context`: where the borrow occurs\n+    /// - `kind_place`: if Some, this describes the statement that triggered the error.\n+    ///   - first half is the kind of write, if any, being performed\n+    ///   - second half is the place being accessed\n+    /// - `err`: where the error annotations are going to be added\n+    ///\n     /// [d]: https://rust-lang.github.io/rfcs/2094-nll.html#leveraging-intuition-framing-errors-in-terms-of-points\n     pub(in borrow_check) fn explain_why_borrow_contains_point(\n         &amp;mut self,\n</pre></div>",
        "id": 128322370,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529435330
    },
    {
        "content": "<p>looks perfect</p>",
        "id": 128322397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529435383
    },
    {
        "content": "<p>ok, PR is ready then :)</p>",
        "id": 128322453,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529435424
    },
    {
        "content": "<p>let's wait for the CI :)</p>",
        "id": 128322456,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529435429
    },
    {
        "content": "<p>nice!</p>",
        "id": 128322482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529435489
    }
]