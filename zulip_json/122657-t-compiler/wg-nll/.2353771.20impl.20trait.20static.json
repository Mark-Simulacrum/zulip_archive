[
    {
        "content": "<p>What's the best way for me to get the span of the return type? I've tried a handful of things like <code>mir.local_decls[mir::RETURN_PLACE].source_info.span</code>.</p>\n<div class=\"codehilite\"><pre><span></span>   |\n12 |     fn iter_values&lt;&#39;a&gt;(&amp;&#39;a self) -&gt; impl Iterator&lt;Item=u32&gt; + &#39;a {\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</pre></div>",
        "id": 133193522,
        "sender_full_name": "davidtwco",
        "timestamp": 1535841669
    },
    {
        "content": "<p>If you just care about <code>impl Trait</code> then there's the <code>DefId</code> in <code>TyKind::Anon</code> (sadly there's no equivalent for <code>dyn Trait</code>). Otherwise the best I can find is crawling through the hir to find it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">hir</span><span class=\"p\">.</span><span class=\"n\">as_local_node_id</span><span class=\"p\">(</span><span class=\"n\">def_id</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">hir</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Node</span>::<span class=\"n\">Item</span><span class=\"p\">(</span><span class=\"n\">Item</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">node</span>: <span class=\"nc\">ItemKind</span>::<span class=\"nb\">Fn</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"cm\">/* In a closure or something */</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 133207993,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1535877301
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> Thanks, using the <code>DefId</code> from the <code>TyKind::Anon</code> did the trick.</p>",
        "id": 133208699,
        "sender_full_name": "davidtwco",
        "timestamp": 1535879161
    },
    {
        "content": "<p>Submitted <a href=\"https://github.com/rust-lang/rust/issues/53900\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53900\">#53900</a>.</p>",
        "id": 133208947,
        "sender_full_name": "davidtwco",
        "timestamp": 1535879736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Could you take a look at the review I left on <a href=\"https://github.com/rust-lang/rust/issues/53900\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53900\">#53900</a> (and <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> commented on) and provide some high-level pointers on where I should be looking to check for a <code>+ 'static</code> bound on a impl Trait return type? Not a priority though, I've got other PRs I can look at.</p>",
        "id": 133312873,
        "sender_full_name": "davidtwco",
        "timestamp": 1536070389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> just a stray thought: have you attempted to reverse engineer where the bound comes from by looking at the pretty printing code for type?</p>",
        "id": 133312975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536070503
    },
    {
        "content": "<p>(I'm not sure this would be an <em>efficient</em> way to answer the Q. but it might at least be a way to unblock yourself here...)</p>",
        "id": 133312993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536070524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I hadn't considered that. I had tried to trace it up from libsyntax briefly (figuring that the representation, or at least what things are named, is normally fairly similar), but ran out of time for the day.</p>",
        "id": 133313106,
        "sender_full_name": "davidtwco",
        "timestamp": 1536070673
    },
    {
        "content": "<p>If I'm not mistaken, it looks like <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/util/ppaux.rs#L1128-L1150\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/util/ppaux.rs#L1128-L1150\">it is this code</a>.</p>",
        "id": 133313209,
        "sender_full_name": "davidtwco",
        "timestamp": 1536070748
    },
    {
        "content": "<p>That's helpful, I can experiment with the functions that it is calling and see what happens.</p>",
        "id": 133313214,
        "sender_full_name": "davidtwco",
        "timestamp": 1536070762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> are you on a Linux box?</p>",
        "id": 133313232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536070785
    },
    {
        "content": "<p>Yeah (well, I SSH into one for my Rust stuff).</p>",
        "id": 133313298,
        "sender_full_name": "davidtwco",
        "timestamp": 1536070807
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> if so, combining <code>rr</code> with stepping backwards through the printing of a type can really narrow things down</p>",
        "id": 133313303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536070812
    },
    {
        "content": "<p>I'll need to look into that. I've been wanting to hook a debugger up when working on things for a while so I can easier see the values of things without adding log statements and waiting a bunch.</p>",
        "id": 133313349,
        "sender_full_name": "davidtwco",
        "timestamp": 1536070878
    },
    {
        "content": "<p>Fixed it now.</p>",
        "id": 133322462,
        "sender_full_name": "davidtwco",
        "timestamp": 1536080241
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Do you want me to change anything based on the feedback on <a href=\"https://github.com/rust-lang/rust/issues/53900\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53900\">#53900</a>?</p>",
        "id": 133384463,
        "sender_full_name": "davidtwco",
        "timestamp": 1536162644
    },
    {
        "content": "<p>nope. If you prefer passing an extra parameter that is derivable from another parameter, then go ahead. Its not <em>my</em> personal style</p>",
        "id": 133384570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536162726
    },
    {
        "content": "<p>but its also something that I do not see as worth blocking a useful PR</p>",
        "id": 133384581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536162738
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I left some nits, I'd like to take one more quick look once you add a few more comments</p>",
        "id": 133385697,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536163741
    },
    {
        "content": "<p>but the new errors look great!</p>",
        "id": 133385704,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536163745
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> w/r/t <a href=\"https://github.com/rust-lang/rust/pull/53900#discussion_r215330742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53900#discussion_r215330742\">this comment</a> - I believe this will only suggest <code>'a: 'static</code> and wouldn't ever suggest <code>T: 'static</code>. Given that, should I just change this from a suggestion to a help mentioning that <code>'a</code> should be replaced with <code>'static</code>?</p>",
        "id": 133398207,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I think so</p>",
        "id": 133398212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536177093
    },
    {
        "content": "<p>I wouldn't want to encourage anyone to write <code>'a: 'static</code></p>",
        "id": 133398216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536177101
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 133398224,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  would <code>replace uses of 'a with 'static since 'a must live as long as 'static</code> be alright for the help message? - struggling to come up with a decent one..</p>",
        "id": 133398609,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177518
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error: unsatisfied lifetime constraints\n  --&gt; $DIR/must_outlive_least_region_or_bound.rs:22:69\n   |\nLL | fn with_bound&lt;&#39;a&gt;(x: &amp;&#39;a i32) -&gt; impl LifetimeTrait&lt;&#39;a&gt; + &#39;static { x }\n   |               -- lifetime `&#39;a` defined here                         ^ returning this value requires that `&#39;a` must outlive `&#39;static`\nhelp: consider replacing `&#39;a` with `&#39;static`\n</pre></div>",
        "id": 133398891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536177832
    },
    {
        "content": "<p>maybe that?</p>",
        "id": 133398892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536177836
    },
    {
        "content": "<p>Well, the error already is:</p>\n<div class=\"codehilite\"><pre><span></span>error: unsatisfied lifetime constraints\n  --&gt; $DIR/must_outlive_least_region_or_bound.rs:22:69\n   |\nLL | fn with_bound&lt;&#39;a&gt;(x: &amp;&#39;a i32) -&gt; impl LifetimeTrait&lt;&#39;a&gt; + &#39;static { x }\n   |               -- lifetime `&#39;a` defined here                         ^ returning this value requires that `&#39;a` must outlive `&#39;static`\n</pre></div>",
        "id": 133398955,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177885
    },
    {
        "content": "<p>I see you already used the existing error.</p>",
        "id": 133398969,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177904
    },
    {
        "content": "<p>I thought you were suggesting that.</p>",
        "id": 133398976,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177908
    },
    {
        "content": "<p><span class=\"emoji emoji-1f926\" title=\"face palm\">:face_palm:</span></p>",
        "id": 133398989,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177923
    },
    {
        "content": "<p>I see what you mean.</p>",
        "id": 133398995,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177926
    },
    {
        "content": "<p>I'll use that message.</p>",
        "id": 133398997,
        "sender_full_name": "davidtwco",
        "timestamp": 1536177930
    },
    {
        "content": "<p>Updated this PR.</p>",
        "id": 133404092,
        "sender_full_name": "davidtwco",
        "timestamp": 1536182855
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> if you have a moment, could you take a look at this? It was approved before and I rebased a few days ago.</p>",
        "id": 133722070,
        "sender_full_name": "davidtwco",
        "timestamp": 1536660924
    }
]