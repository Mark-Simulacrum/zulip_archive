[
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> let's chat here if needed...</p>",
        "id": 133789737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536747314
    },
    {
        "content": "<p>Got it<span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 133793745,
        "sender_full_name": "blitzerr",
        "timestamp": 1536753077
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <br>\nI have a question related to the mentoring notes<br>\n\"This only works when you have something like (1) loop { drop(x); } -- here, the drop(x) from the previous loop iteration is conflicting with the drop(x) with the next iteration. But it doesn't work for a case like this:(2) loop { use(x); drop(x); }, which is what we have in this example.\"<br>\n<a href=\"https://github.com/rust-lang/rust/issues/1\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/1\">#1</a> is obvious but why is <a href=\"https://github.com/rust-lang/rust/issues/2\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/2\">#2</a> not the same? I think in <a href=\"https://github.com/rust-lang/rust/issues/2\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/2\">#2</a> as well in the second iteration of the loop, it is being used as well. But also in <a href=\"https://github.com/rust-lang/rust/issues/2\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/2\">#2</a>, drop(x) is trying to borrow what use(x) already borrowed ? Is my understanding correct ?</p>",
        "id": 133898869,
        "sender_full_name": "blitzerr",
        "timestamp": 1536858357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> </p>\n<p>So, in the second example:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// L1</span>\n<span class=\"w\">  </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// L2</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>when we get to L1, we see that <code>x</code> is uninitialized on entry. So we walk backwards to find where the move came from. We go backwards around the loop and stop when we reach L2.</p>\n<p>Now, the problem is that our \"in previous iteration of the loop\" message prints only if L1 == L2 (not true here)</p>",
        "id": 133899148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536858623
    },
    {
        "content": "<p>I didn't think x was uninitialized. I just thought this is a code snippet and x can be initialized earlier. Also to be clear, drop is a normal function call and not the destructor ?</p>",
        "id": 133899554,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859112
    },
    {
        "content": "<p><code>drop</code> is just a normal function, yes</p>",
        "id": 133899560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859121
    },
    {
        "content": "<p>presumably it was initialized somewhere outside the loop</p>",
        "id": 133899562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859129
    },
    {
        "content": "<p>by <code>drop</code> I meant <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/std/mem/fn.drop.html\"><code>std::mem::drop</code></a></p>",
        "id": 133899574,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859146
    },
    {
        "content": "<p>which is just <code>fn drop&lt;T&gt;(x: T) { }</code> :)</p>",
        "id": 133899581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859154
    },
    {
        "content": "<p>so e.g. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"o\">!</span><span class=\"p\">[];</span><span class=\"w\"></span>\n<span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// L1</span>\n<span class=\"w\">  </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// L2</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 133899595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859179
    },
    {
        "content": "<p>now L1 is reachable via two paths</p>",
        "id": 133899600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859184
    },
    {
        "content": "<p>So in the new example that you just pasted because L1 and L2 are same, here \"in the previous iteration of the loop\" will be printed just fine as we want it to, right ?</p>",
        "id": 133899602,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859189
    },
    {
        "content": "<p>on one path (the first loop iteration) it is initialized</p>",
        "id": 133899603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859190
    },
    {
        "content": "<p>but on the second one, it is not</p>",
        "id": 133899606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859194
    },
    {
        "content": "<blockquote>\n<p>So in the new example that you just pasted because L1 and L2 are same, here \"in the previous iteration of the loop\" will be printed just fine as we want it to, right ?</p>\n</blockquote>\n<p>no, it will not</p>",
        "id": 133899645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859203
    },
    {
        "content": "<p>because L1 and L2 are <em>not</em> the same point in the program :)</p>",
        "id": 133899658,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859209
    },
    {
        "content": "<p>if you had</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// L1</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 133899660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859216
    },
    {
        "content": "<p>then it would walk backwards from L1 and find L1 again</p>",
        "id": 133899667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859227
    },
    {
        "content": "<p>makes sense. Thank you so much.</p>",
        "id": 133899698,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859305
    },
    {
        "content": "<p>One more trivial question and mostly because of ignorance. <br>\nIn the playground (<a href=\"https://play.rust-lang.org/?gist=1d1523cfeed2f9648f3de855eebb1c00&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=1d1523cfeed2f9648f3de855eebb1c00&amp;version=nightly&amp;mode=debug&amp;edition=2015\">https://play.rust-lang.org/?gist=1d1523cfeed2f9648f3de855eebb1c00&amp;version=nightly&amp;mode=debug&amp;edition=2015</a>)<br>\nI find this line:<br>\nlet y: Box&lt;isize&gt; = box 42;</p>\n<p>Box is widely discussed and there are docs on it but what is \"box\" the small case ?<br>\nbox 42  (Is that type casting in Rust) ?</p>",
        "id": 133899809,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859427
    },
    {
        "content": "<p>ah</p>",
        "id": 133899986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859600
    },
    {
        "content": "<p>that's older syntax</p>",
        "id": 133899988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859604
    },
    {
        "content": "<p>that is now behind a feature gate</p>",
        "id": 133899989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859609
    },
    {
        "content": "<p>it is effectively synonymous with <code>Box::new(42)</code></p>",
        "id": 133899992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859616
    },
    {
        "content": "<p>certainly for the purposes of this example, they are the same</p>",
        "id": 133899999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859627
    },
    {
        "content": "<p>the test case dates from when <code>Box::new</code> was built into the language and used only via keyword</p>",
        "id": 133900005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859638
    },
    {
        "content": "<p>we've kept the keyword around but never permitted it in Stable Rust</p>",
        "id": 133900012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859648
    },
    {
        "content": "<p>because it can do some things more efficiently</p>",
        "id": 133900023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859660
    },
    {
        "content": "<p>(and we wanted to maybe add it back later, once we settled on various details)</p>",
        "id": 133900035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859676
    },
    {
        "content": "<p>cool. Thank s a lot for explaining that.</p>",
        "id": 133900079,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859687
    },
    {
        "content": "<p>I would rewrite the test to use <code>Box::new</code></p>",
        "id": 133900080,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859688
    },
    {
        "content": "<p>always better to avoid feature gates in tests if we can</p>",
        "id": 133900090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859699
    },
    {
        "content": "<p>so they don't bit rot if the feature is removed or changed</p>",
        "id": 133900096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859705
    },
    {
        "content": "<p>Benefits of asking the compiler writer directly, you get to the point answer :P</p>",
        "id": 133900111,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859723
    },
    {
        "content": "<p>feature gate being the <code>#![feature(xxx)]</code> syntax</p>",
        "id": 133900114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859725
    },
    {
        "content": "<p>That I guessed <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 133900126,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859741
    },
    {
        "content": "<p>NLL is not available in stable release or is it ?</p>",
        "id": 133900232,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859827
    },
    {
        "content": "<p>I think the feature is developed, right ?</p>",
        "id": 133900252,
        "sender_full_name": "blitzerr",
        "timestamp": 1536859861
    },
    {
        "content": "<p>not stable yet</p>",
        "id": 133900385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859990
    },
    {
        "content": "<p>you have to add <code>#![feature(nll)]</code></p>",
        "id": 133900388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536859998
    },
    {
        "content": "<p>Also. When I make a change in the librustc-mir do I run ./x.py build ?</p>",
        "id": 133900676,
        "sender_full_name": "blitzerr",
        "timestamp": 1536860320
    },
    {
        "content": "<p>It takes several minutes even with the -i flag set</p>",
        "id": 133900689,
        "sender_full_name": "blitzerr",
        "timestamp": 1536860347
    },
    {
        "content": "<p>you can, but it will be slow, yes</p>",
        "id": 133901253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536860951
    },
    {
        "content": "<p>I suggest <a href=\"https://rust-lang-nursery.github.io/rustc-guide/how-to-build-and-run.html#suggested-workflows-for-faster-builds-of-the-compiler\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/how-to-build-and-run.html#suggested-workflows-for-faster-builds-of-the-compiler\">the workflow described in rustc-guide</a></p>",
        "id": 133901266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536860980
    },
    {
        "content": "<p>specifically, the \"Incremental builds with --keep-stage\"</p>",
        "id": 133901275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536860989
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 133903945,
        "sender_full_name": "blitzerr",
        "timestamp": 1536863290
    },
    {
        "content": "<p>I am assuming there is no option of attaching a debugger and stepping through the code as the doc does not mention that in the debugging the compiler section ?</p>",
        "id": 133904029,
        "sender_full_name": "blitzerr",
        "timestamp": 1536863393
    },
    {
        "content": "<p>sometimes it works</p>",
        "id": 133904135,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536863473
    },
    {
        "content": "<p>but i've not had much luck with it</p>",
        "id": 133904141,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536863484
    },
    {
        "content": "<p>debuginfo doesn't survive optimizations very well</p>",
        "id": 133904149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536863497
    },
    {
        "content": "<p>and if you don't optimize, rustc is unbearably slow</p>",
        "id": 133904154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536863501
    },
    {
        "content": "<p>Sounds good. Thanks you</p>",
        "id": 133904898,
        "sender_full_name": "blitzerr",
        "timestamp": 1536864174
    },
    {
        "content": "<p>On the subject of running <code>rustc</code> under a debugger: I used to do it more regularly, and still do it (in the form of an <code>rr</code> run) from time to time. But its mostly a tool for me to get into the middle of the control flow and analyze how we jump between procedures, not really for inspecting the data structures themselves.</p>",
        "id": 133910135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536869356
    },
    {
        "content": "<p>My advice for anyone who wants to try it is to use <code>rr</code>, and to be prepared to do things like use <code>stepi</code> instead of <code>step</code> in order to deal with the issues of code reorder by optimizations...</p>",
        "id": 133910224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536869418
    },
    {
        "content": "<p>Thanks a lot <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> . I will try that.</p>",
        "id": 133910938,
        "sender_full_name": "blitzerr",
        "timestamp": 1536870104
    },
    {
        "content": "<p>@pnkfelix rr looks to only work with linux and not macOs.</p>",
        "id": 133918316,
        "sender_full_name": "blitzerr",
        "timestamp": 1536879053
    },
    {
        "content": "<p>oh, yeah, I forgot to mention that I have a Linux desktop that is basically dedicated to the purpose of running <code>rr</code>. (Well, that and its a faster box in general than my laptop)</p>",
        "id": 133940201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536915384
    },
    {
        "content": "<p>makes sense. I will have to go with the old school print statements.  If rr works then gdb would work, no ?</p>",
        "id": 133965444,
        "sender_full_name": "blitzerr",
        "timestamp": 1536944091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> you know about the <code>debug!</code> macros?</p>",
        "id": 133968991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536947936
    },
    {
        "content": "<p>Ya, to print logs for debug builds but are stripped off in the release build. Basically you are saying I can use it for print debugging. Is there more to it that I am not aware of ?</p>",
        "id": 133969754,
        "sender_full_name": "blitzerr",
        "timestamp": 1536948582
    },
    {
        "content": "<p>I would advise you to <a href=\"https://rust-lang-nursery.github.io/rustc-guide/how-to-build-and-run.html#create-a-configtoml\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/how-to-build-and-run.html#create-a-configtoml\">create a config.toml like it describes in the rustc-guide</a></p>",
        "id": 133970163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536948974
    },
    {
        "content": "<p>in particular, one that includes <code>debug-assertions = true</code></p>",
        "id": 133970169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536948982
    },
    {
        "content": "<p>then you can use <code>debug!</code> to get logs</p>",
        "id": 133970175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536948987
    },
    {
        "content": "<p><a href=\"https://rust-lang-nursery.github.io/rustc-guide/compiler-debugging.html#getting-logging-output\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/compiler-debugging.html#getting-logging-output\">as described here</a></p>",
        "id": 133970182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536949000
    },
    {
        "content": "<p>(and/or add your own)</p>",
        "id": 133970187,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536949012
    },
    {
        "content": "<p>Sorry I missed this message as Zuip didn't notify.</p>",
        "id": 133993927,
        "sender_full_name": "blitzerr",
        "timestamp": 1536981797
    },
    {
        "content": "<p>I did make the changes as suggested in the rustc development guide.</p>",
        "id": 133993971,
        "sender_full_name": "blitzerr",
        "timestamp": 1536981852
    },
    {
        "content": "<p>Thanks for the RUST_LOG suggestion. I will use that</p>",
        "id": 133993982,
        "sender_full_name": "blitzerr",
        "timestamp": 1536981935
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> I'll remember to mention you specifically in the future :)</p>",
        "id": 134005882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537006414
    },
    {
        "content": "<p><span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 134029675,
        "sender_full_name": "blitzerr",
        "timestamp": 1537053393
    },
    {
        "content": "<p>RUST_LOG=rustc::traits::error_reporting rustc +stage1 ./src/librustc_mir/borrow_check/error_reporting.rs</p>",
        "id": 134029676,
        "sender_full_name": "blitzerr",
        "timestamp": 1537053399
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>RUST_LOG=rustc::traits::error_reporting rustc +stage1 ./src/librustc_mir/borrow_check/error_reporting.rs\n</pre></div>\n\n\n<p>I did that to print the debug statements but it errors out</p>",
        "id": 134029722,
        "sender_full_name": "blitzerr",
        "timestamp": 1537053489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  what would be the correct format to enable debug! Output for the <a href=\"http://error_reporting.rs\" target=\"_blank\" title=\"http://error_reporting.rs\">error_reporting.rs</a> module only ?</p>",
        "id": 134103655,
        "sender_full_name": "blitzerr",
        "timestamp": 1537194158
    },
    {
        "content": "<p><code>RUST_LOG=rustc_mir::borrow_check::error_reporting</code> (or similar with the correct path to that module if I've misremembered)</p>",
        "id": 134103699,
        "sender_full_name": "davidtwco",
        "timestamp": 1537194215
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></p>",
        "id": 134104103,
        "sender_full_name": "blitzerr",
        "timestamp": 1537194564
    },
    {
        "content": "<p>how goes <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> ?</p>",
        "id": 134106328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537196640
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Its going well. I read through the code, made the changes suggested by you in the mentoring notes (and the cosmetic changes to go with it) except for the key piece<br>\n'''<br>\n   if span == move_span { //*is_back_edge { <br>\n'''<br>\nAnd I expected the test to still fail and it did but <em>not</em> with an error message I expected<br>\n'''<br>\nF<br>\nfailures:</p>\n<p>---- [ui] ui/liveness/liveness-move-in-while.rs stdout ----<br>\ndiff of stderr:</p>\n<p>1   error[E0382]: use of moved value: <code>y</code><br>\n-     --&gt; $DIR/liveness-move-in-while.rs:17:24<br>\n+     --&gt; $DIR/liveness-move-in-while.rs:15:24<br>\n3      |<br>\n4   LL |         println!(\"{}\", y); //~ ERROR use of moved value: <code>y</code><br>\n5      |                        ^ value used here after move</p>\n<p>9      = note: move occurs because <code>y</code> has type <code>std::boxed::Box&lt;isize&gt;</code>, which does not implement the <code>Copy</code> trait<br>\n10<br>\n11  error[E0382]: use of moved value: <code>y</code><br>\n-     --&gt; $DIR/liveness-move-in-while.rs:18:52<br>\n+     --&gt; $DIR/liveness-move-in-while.rs:16:52<br>\n13     |<br>\n14  LL |         while true { while true { while true { x = y; x.clone(); } } }<br>\n15     |                                                    ^ value moved here in previous iteration of loop<br>\n'''</p>",
        "id": 134114639,
        "sender_full_name": "blitzerr",
        "timestamp": 1537205191
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>F\nfailures:\n\n---- [ui] ui/liveness/liveness-move-in-while.rs stdout ----\ndiff of stderr:\n\n1   error[E0382]: use of moved value: `y`\n-     --&gt; $DIR/liveness-move-in-while.rs:17:24\n+     --&gt; $DIR/liveness-move-in-while.rs:15:24\n3      |\n4   LL |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n5      |                        ^ value used here after move\n\n9      = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n10\n11  error[E0382]: use of moved value: `y`\n-     --&gt; $DIR/liveness-move-in-while.rs:18:52\n+     --&gt; $DIR/liveness-move-in-while.rs:16:52\n13     |\n14  LL |         while true { while true { while true { x = y; x.clone(); } } }\n15     |                                                    ^ value moved here in previous iteration of loop\n</pre></div>",
        "id": 134114736,
        "sender_full_name": "blitzerr",
        "timestamp": 1537205286
    },
    {
        "content": "<p>So from this error, it looks like the test fails because of two line number mismatches (17 vs 15 and 18 vs 16) and not because of the lack of the text \"previous iteration of loop\"</p>",
        "id": 134114834,
        "sender_full_name": "blitzerr",
        "timestamp": 1537205407
    },
    {
        "content": "<p>what is the test again? also, are you fully rebased?</p>",
        "id": 134114876,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205476
    },
    {
        "content": "<p>ok, I see...</p>",
        "id": 134114887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205513
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> so I'm not really sure what your diff is, I guess :)</p>",
        "id": 134114918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205522
    },
    {
        "content": "<p>however, the test has a stderr file that encodes our current output as the expected output</p>",
        "id": 134114946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205550
    },
    {
        "content": "<p>so if you've not made the \"real fix\" yet (which I think you haven't) then I would expect the test to pass</p>",
        "id": 134114954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205564
    },
    {
        "content": "<p>The test is ui/liveness/liveness-move-in-while.rs</p>",
        "id": 134114955,
        "sender_full_name": "blitzerr",
        "timestamp": 1537205565
    },
    {
        "content": "<p>presumably you edited it slightly, which is why it's failing at all</p>",
        "id": 134114962,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205576
    },
    {
        "content": "<p>but once you've made the real fix, it will start to fail for real (because the output changed in a more significant way)</p>",
        "id": 134114981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205598
    },
    {
        "content": "<p>you can run <code>./x.py test</code> with <code>--bless</code> to update the \"expected output\" file based on the current output (I always do, personally)</p>",
        "id": 134114996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205616
    },
    {
        "content": "<p>then you can just look at <code>git status</code> to see what changed...</p>",
        "id": 134115000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205622
    },
    {
        "content": "<p>(and look for anything unexpected)</p>",
        "id": 134115009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537205637
    },
    {
        "content": "<p>I understand the cause of the line number change / mismatch in the error message but my question is this:<br>\nThis change is to add this error message :</p>\n<div class=\"codehilite\"><pre><span></span>value moved here in previous iteration of loop\n</pre></div>\n\n\n<p>But it looks like that line already exists. So, I am assuming that I need to enable nll and then this test will fail ?</p>",
        "id": 134115406,
        "sender_full_name": "blitzerr",
        "timestamp": 1537206056
    },
    {
        "content": "<p>Because the whole point of the change is that it was not printing <br>\n<code>previous iteration of loop</code>, right <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 134115447,
        "sender_full_name": "blitzerr",
        "timestamp": 1537206114
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> it only exists on the second error, not the first</p>",
        "id": 134115528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206167
    },
    {
        "content": "<p>moreover, there is another change from <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> (which I guess hasn't landed yet) which will suppress the second error as a duplicate</p>",
        "id": 134115540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206182
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/53995\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53995\">https://github.com/rust-lang/rust/pull/53995</a></p>",
        "id": 134115566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206206
    },
    {
        "content": "<p>2.</p>\n<div class=\"codehilite\"><pre><span></span>RUST_LOG=rustc_mir::borrow_check::error_reporting rustc +stage1 ./src/librustc_mir/borrow_check/error_reporting.rs\n</pre></div>\n\n\n<p>gives me errors like this</p>\n<div class=\"codehilite\"><pre><span></span>error[E0433]: failed to resolve. There are too many initial `super`s.\n   --&gt; ./src/librustc_mir/borrow_check/error_reporting.rs:716:5\n    |\n716 | pub(super) struct IncludingDowncast(bool);\n    |     ^^^^^ There are too many initial `super`s.\n\nerror[E0433]: failed to resolve. There are too many initial `super`s.\n   --&gt; ./src/librustc_mir/borrow_check/error_reporting.rs:993:5\n    |\n993 | pub(super) enum UseSpans {\n    |     ^^^^^ There are too many initial `super`s.\n</pre></div>",
        "id": 134115568,
        "sender_full_name": "blitzerr",
        "timestamp": 1537206212
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/2\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/2\">#2</a> is a different issue, but I wanted to put it there before I go away from my laptop. <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 134115641,
        "sender_full_name": "blitzerr",
        "timestamp": 1537206265
    },
    {
        "content": "<p>back to <a href=\"https://github.com/rust-lang/rust/issues/1\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/1\">#1</a>, the test.</p>",
        "id": 134115650,
        "sender_full_name": "blitzerr",
        "timestamp": 1537206278
    },
    {
        "content": "<p>that's a wacky error. I think the syntax is <code>pub(in super)</code></p>",
        "id": 134115796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206469
    },
    {
        "content": "<p>(pretty sure <code>pub(super)</code> is valid)</p>",
        "id": 134115851,
        "sender_full_name": "davidtwco",
        "timestamp": 1537206494
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 134115867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206524
    },
    {
        "content": "<p>but maybe</p>",
        "id": 134115869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206528
    },
    {
        "content": "<p>can't recall</p>",
        "id": 134115872,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206531
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0382]: borrow of moved value: `y`\n --&gt; src/main.rs:8:24\n  |\n8 |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n  |                        ^ value borrowed here after move\n9 |         while true { while true { while true { x = y; x.clone(); } } }\n  |                                                    - value moved here\n  |\n  = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n\nwe would rather add &quot;in previous iteration of loop&quot; to the &quot;value moved here&quot; message:\n\n9 |         while true { while true { while true { x = y; x.clone(); } } }\n  |                                                    - value moved here, in previous iteration of loop\n</pre></div>\n\n\n<p>That's  from the mentoring notes. I thought that we wanted the \"in previous iteration of loop\" only in the second case ? Did I misinterpret it ?</p>",
        "id": 134115881,
        "sender_full_name": "blitzerr",
        "timestamp": 1537206542
    },
    {
        "content": "<p>I take it back, a quick ripgrep suggests it is :)</p>",
        "id": 134115887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206546
    },
    {
        "content": "<p>this is the full error I get:</p>\n<div class=\"codehilite\"><pre><span></span>error[E0382]: use of moved value: `y`\n --&gt; src/main.rs:7:24\n  |\n7 |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n  |                        ^ value used here after move\n8 |         while true { while true { while true { x = y; x.clone(); } } }\n  |                                                    - value moved here\n  |\n  = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `y`\n --&gt; src/main.rs:8:52\n  |\n8 |         while true { while true { while true { x = y; x.clone(); } } }\n  |                                                    ^ value moved here in previous iteration of loop\n  |\n  = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n</pre></div>",
        "id": 134115914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206592
    },
    {
        "content": "<p>the second error looks right</p>",
        "id": 134115917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206598
    },
    {
        "content": "<p>but I think the first error is not</p>",
        "id": 134115958,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206604
    },
    {
        "content": "<p>I would expect:</p>",
        "id": 134115959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206605
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0382]: use of moved value: `y`\n --&gt; src/main.rs:7:24\n  |\n7 |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n  |                        ^ value used here after move\n8 |         while true { while true { while true { x = y; x.clone(); } } }\n  |                                                    - value moved here in previous iteration of loop\n  |\n  = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `y`\n --&gt; src/main.rs:8:52\n  |\n8 |         while true { while true { while true { x = y; x.clone(); } } }\n  |                                                    ^ value moved here in previous iteration of loop\n  |\n  = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n</pre></div>",
        "id": 134115975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206613
    },
    {
        "content": "<p>though really I want there to be a comma too, but that's a grammatical nit :P</p>",
        "id": 134115990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206630
    },
    {
        "content": "<p>\"value moved here, in previous iteration of loop\"</p>",
        "id": 134115995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206642
    },
    {
        "content": "<p>A comma, that's too much :P</p>",
        "id": 134116032,
        "sender_full_name": "blitzerr",
        "timestamp": 1537206701
    },
    {
        "content": "<p>(I feel like this is a parenthetical clause, hence the comma)</p>",
        "id": 134116153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537206812
    },
    {
        "content": "<p>I was not debating the introduction of a comma. It was meant to be a joke <span class=\"emoji emoji-1f603\" title=\"smiley\">:smiley:</span></p>",
        "id": 134116550,
        "sender_full_name": "blitzerr",
        "timestamp": 1537207142
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what is the correct format to enable rust_log for the <a href=\"http://error_reporting.rs\" target=\"_blank\" title=\"http://error_reporting.rs\">error_reporting.rs</a></p>",
        "id": 134118312,
        "sender_full_name": "blitzerr",
        "timestamp": 1537208909
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> <code>RUST_LOG=crate::module::module</code> is the general format</p>",
        "id": 134119247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537209804
    },
    {
        "content": "<p>you can use a comma separated list</p>",
        "id": 134119259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537209817
    },
    {
        "content": "<p><code>RUST_LOG=rustc_mir::borrow_check::error_reporting rustc +stage1 ./src/librustc_mir/borrow_check/error_reporting.rs</code><br>\nthis should be just </p>\n<div class=\"codehilite\"><pre><span></span>RUST_LOG=rustc_mir::borrow_check::error_reporting rustc +stage1 ./src/librustc_mir/borrow_check/error_reporting.rs\n``` ?\n</pre></div>",
        "id": 134119878,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210392
    },
    {
        "content": "<p>I meant should be just:</p>\n<div class=\"codehilite\"><pre><span></span>RUST_LOG=rustc_mir::borrow_check::error_reporting\n</pre></div>\n\n\n<p>?</p>",
        "id": 134119979,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210517
    },
    {
        "content": "<p>the log looks correct, but you'll be seeing what is logged when you compile your test case, that is, probably <a href=\"http://liveness-move-in-while.rs\" target=\"_blank\" title=\"http://liveness-move-in-while.rs\">liveness-move-in-while.rs</a> ? (rather than compiling <code>./src/librustc_mir/borrow_check/error_reporting.rs</code>)</p>",
        "id": 134119997,
        "sender_full_name": "lqd",
        "timestamp": 1537210551
    },
    {
        "content": "<p>Did you compile with the <code>config.toml</code> set to enable debug assertions and logging? If you're not seeing anything then it could be that.</p>",
        "id": 134120052,
        "sender_full_name": "davidtwco",
        "timestamp": 1537210581
    },
    {
        "content": "<p>So those error messages are normal ?</p>",
        "id": 134120062,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210602
    },
    {
        "content": "<p>which error messages ?</p>",
        "id": 134120078,
        "sender_full_name": "lqd",
        "timestamp": 1537210626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  I have those settings ON in config.toml</p>",
        "id": 134120083,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210627
    },
    {
        "content": "<p>That depends on the error messages.</p>",
        "id": 134120088,
        "sender_full_name": "davidtwco",
        "timestamp": 1537210631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> </p>\n<div class=\"codehilite\"><pre><span></span>error[E0433]: failed to resolve. There are too many initial `super`s.\n   --&gt; ./src/librustc_mir/borrow_check/error_reporting.rs:716:5\n    |\n716 | pub(super) struct IncludingDowncast(bool);\n    |     ^^^^^ There are too many initial `super`s.\n\nerror[E0433]: failed to resolve. There are too many initial `super`s.\n   --&gt; ./src/librustc_mir/borrow_check/error_reporting.rs:993:5\n    |\n993 | pub(super) enum UseSpans {\n    |     ^^^^^ There are too many initial `super`s.\n</pre></div>",
        "id": 134120167,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> why are you compiling this file btw ?</p>",
        "id": 134120182,
        "sender_full_name": "lqd",
        "timestamp": 1537210725
    },
    {
        "content": "<p>There are many like those, I just copied some</p>",
        "id": 134120183,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210729
    },
    {
        "content": "<p>try <code>RUST_LOG=rustc_mir::borrow_check::error_reporting rustc +stage1 ./src/test/ui/liveness/liveness-move-in-while.rs</code></p>",
        "id": 134120197,
        "sender_full_name": "lqd",
        "timestamp": 1537210748
    },
    {
        "content": "<p>Ah, yeah, so the issue is that you're compiling one of the compiler source files - not a test.</p>",
        "id": 134120200,
        "sender_full_name": "davidtwco",
        "timestamp": 1537210749
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  I am making changes to that file and want to understand the code flow</p>",
        "id": 134120209,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210768
    },
    {
        "content": "<p>The path after <code>rustc</code> should be the file that will be compiled (ie. the test case that you're expecting to make a change to). You can then see the logging from <code>RUST_LOG=rustc_mir::borrow_check::error_reporting</code> (which is the file you want to understand the code flow of) as it compiles the test case.</p>",
        "id": 134120275,
        "sender_full_name": "davidtwco",
        "timestamp": 1537210811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  That might be it. Thanks a lot</p>",
        "id": 134120278,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210823
    },
    {
        "content": "<p>are you compiling this file to get a working compiler with your changes ? if so, the command you want is probably one of the <code>./x.py buid</code>s</p>",
        "id": 134120281,
        "sender_full_name": "lqd",
        "timestamp": 1537210826
    },
    {
        "content": "<p>I have the compiler built just fine with the new changes (using x.py ...). I wanted to get the debug statements when the test is run</p>",
        "id": 134120382,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210930
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  ^^</p>",
        "id": 134120392,
        "sender_full_name": "blitzerr",
        "timestamp": 1537210949
    },
    {
        "content": "<p>then try my previous command, compiling the test file :)</p>",
        "id": 134120398,
        "sender_full_name": "lqd",
        "timestamp": 1537210962
    },
    {
        "content": "<p>or using x.py test with the test args for that test would probably also work</p>",
        "id": 134120434,
        "sender_full_name": "lqd",
        "timestamp": 1537211002
    },
    {
        "content": "<p>What you suggested should do the trick for me, <br>\n<code>rustc +stage1 ./src/test/ui/liveness/liveness-move-in-while.rs</code></p>",
        "id": 134120435,
        "sender_full_name": "blitzerr",
        "timestamp": 1537211004
    },
    {
        "content": "<p>yes, with the RUST_LOG set as you mentioned</p>",
        "id": 134120503,
        "sender_full_name": "lqd",
        "timestamp": 1537211075
    },
    {
        "content": "<p>Right. Thanks a lot @lqd <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></p>",
        "id": 134120524,
        "sender_full_name": "blitzerr",
        "timestamp": 1537211116
    },
    {
        "content": "<p>let us know if that doesn't work and we'll figure it out</p>",
        "id": 134120526,
        "sender_full_name": "lqd",
        "timestamp": 1537211117
    },
    {
        "content": "<p>I will. That's very helpful. I will let you guys know later though as I don't have my laptop on which I build rustc</p>",
        "id": 134120590,
        "sender_full_name": "blitzerr",
        "timestamp": 1537211169
    },
    {
        "content": "<p>alright :)</p>",
        "id": 134120607,
        "sender_full_name": "lqd",
        "timestamp": 1537211207
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>RUST_LOG=rustc_mir::borrow_check::move_errors rustc +stage2 ./src/test/ui/liveness/liveness-move-in-while.rs\nerror[E0382]: use of moved value: `y`\n  --&gt; ./src/test/ui/liveness/liveness-move-in-while.rs:17:24\n   |\n17 |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n   |                        ^ value used here after move\n18 |         while true { while true { while true { x = y; x.clone(); } } }\n   |                                                    - value moved here\n   |\n   = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n</pre></div>\n\n\n<p>The compilation fails as expected but no debug statements are printed(no errors are generated either, so this command is correct). Your suggestion was the right one. Thanks</p>",
        "id": 134141468,
        "sender_full_name": "blitzerr",
        "timestamp": 1537238893
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span> RUST_LOG=rustc_mir::borrow_check rustc +stage2 ./src/test/ui/liveness/liveness-move-in-while.rs\nDEBUG 2018-09-18T02:48:31Z: rustc_mir::borrow_check::nll::type_check: run_pass: DefId(0/0:3 ~ liveness_move_in_while[317d]::main[0])\nDEBUG 2018-09-18T02:48:31Z: rustc_mir::borrow_check::nll::type_check: sanitize_place: _2\n</pre></div>\n\n\n<p>This prints the debug messages but only from the module <em>rustc_mir::borrow_check::nll::type_check</em>, rightly so because the debug messages I expect like </p>\n<div class=\"codehilite\"><pre><span></span>report_use_of_moved_or_uninitialized: mois=\n</pre></div>\n\n\n<p>Don't feature here.</p>",
        "id": 134141580,
        "sender_full_name": "blitzerr",
        "timestamp": 1537239130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 134141856,
        "sender_full_name": "blitzerr",
        "timestamp": 1537239697
    },
    {
        "content": "<p>oh that's unfortunate, let me try it when I'm in front of a computer</p>",
        "id": 134148891,
        "sender_full_name": "lqd",
        "timestamp": 1537253031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> so, what you're seeing there are actually old borrowck errors: this test doesn't enable NLL, and niko manually did so <a href=\"https://play.rust-lang.org/?gist=1d1523cfeed2f9648f3de855eebb1c00&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=1d1523cfeed2f9648f3de855eebb1c00&amp;version=nightly&amp;mode=debug&amp;edition=2015\">here</a>. You could do a similar thing, adding <code>#![feature(nll)]</code>to the file but let's not: you can turn on NLL with rustc flags, as so: <code>RUST_LOG=rustc_mir::borrow_check::error_reporting rustc +stage2 -Zborrowck=mir -Ztwo-phase-borrows ./src/test/ui/liveness/liveness-move-in-while.rs</code>. Then you'll have approximately 400+ lines of <code>report_use_of_moved_or_uninitialized</code> logs you wanted :)</p>",
        "id": 134152997,
        "sender_full_name": "lqd",
        "timestamp": 1537259716
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  Thank you so much for your time in trying this out yourself. It worked like a charm.</p>",
        "id": 134173840,
        "sender_full_name": "blitzerr",
        "timestamp": 1537285146
    },
    {
        "content": "<p>For the next time in other module how do I know if I have to use what in place of <br>\n<code>Zborrowck=mir -Ztwo-phase-borrows </code>   ?<br>\nI have problems with Rust module imports. They are not file paths as it is in cpp</p>",
        "id": 134173939,
        "sender_full_name": "blitzerr",
        "timestamp": 1537285246
    },
    {
        "content": "<p>those are flags to rustc</p>",
        "id": 134173974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537285286
    },
    {
        "content": "<p>that tell it to enable NLL</p>",
        "id": 134173975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537285288
    },
    {
        "content": "<p>I would just put <code>#![feature(nll)]</code> on the top of the test file, though</p>",
        "id": 134173981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537285296
    },
    {
        "content": "<p>easier ;)</p>",
        "id": 134173982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537285297
    },
    {
        "content": "<p>then you don't need the flags</p>",
        "id": 134173984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537285300
    },
    {
        "content": "<p>those flags are independent from logging, though</p>",
        "id": 134173989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537285308
    },
    {
        "content": "<p>(well, they make the code that you're changing run, so without them you won't see the logging from that code, but they in and of themselves, don't \"enable\" logging or anything like that)</p>",
        "id": 134174062,
        "sender_full_name": "davidtwco",
        "timestamp": 1537285366
    },
    {
        "content": "<p>That I got.</p>",
        "id": 134174093,
        "sender_full_name": "blitzerr",
        "timestamp": 1537285420
    },
    {
        "content": "<p>That they enable the feature via command line args instead of a code change. Thanks everyone.</p>",
        "id": 134174187,
        "sender_full_name": "blitzerr",
        "timestamp": 1537285481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> PR working? if you're having trouble, feel free to open a PR with <code>[WIP]</code> in the title and send me a link. That's the easiest way for me to give feedback.</p>",
        "id": 134177334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537288699
    },
    {
        "content": "<p>Sure <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I will do that tonight, the first version</p>",
        "id": 134177608,
        "sender_full_name": "blitzerr",
        "timestamp": 1537288966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <a href=\"https://github.com/rust-lang/rust/pull/54343/files\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54343/files\">https://github.com/rust-lang/rust/pull/54343/files</a> - not ready but posted what I had locally</p>",
        "id": 134211000,
        "sender_full_name": "blitzerr",
        "timestamp": 1537333007
    },
    {
        "content": "<p>cool; btw, do you have rustfmt installed?</p>",
        "id": 134258048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537379914
    },
    {
        "content": "<p>(I'm trying to keep the new code — like this — formatted with rustfmt)</p>",
        "id": 134258067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537379938
    },
    {
        "content": "<p>Sure, I will install  rustfmt and format it when I send the next revision</p>",
        "id": 134262403,
        "sender_full_name": "blitzerr",
        "timestamp": 1537384015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  did you get a chance to take a look. I have a few questions from the rust_log output and basic blocks. Maybe that would explain why the current code doesn't work</p>",
        "id": 134262490,
        "sender_full_name": "blitzerr",
        "timestamp": 1537384087
    },
    {
        "content": "<p>I didn't look closely — what is the otuput from current version? (no changes?)</p>",
        "id": 134262510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537384125
    },
    {
        "content": "<p>I can look now</p>",
        "id": 134262513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537384128
    },
    {
        "content": "<p>I see the bug, will leave some comments</p>",
        "id": 134262729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537384362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> <a href=\"https://github.com/rust-lang/rust/pull/54343#pullrequestreview-156977839\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54343#pullrequestreview-156977839\">see my review</a></p>",
        "id": 134262761,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537384415
    },
    {
        "content": "<p>mostly nits, but the final comment identifies the bug I think</p>",
        "id": 134262765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537384422
    },
    {
        "content": "<p>let me know if that makes sense</p>",
        "id": 134262767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537384423
    },
    {
        "content": "<p>Just now got the GitHub email <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 134263318,
        "sender_full_name": "blitzerr",
        "timestamp": 1537385045
    },
    {
        "content": "<p>I wanted to comment on the review but I am not hip enough to comment on a GitHub review from my phone, so I ask here <span class=\"emoji emoji-1f600\" title=\"grinning\">:grinning:</span></p>",
        "id": 134263615,
        "sender_full_name": "blitzerr",
        "timestamp": 1537385403
    },
    {
        "content": "<p>Why do we prefer a struct instead of a tuple?  <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 134263666,
        "sender_full_name": "blitzerr",
        "timestamp": 1537385444
    },
    {
        "content": "<p>I prefer a struct for a few reasons;</p>",
        "id": 134263677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537385461
    },
    {
        "content": "<p>it gives a place to add comments, first of all, explaining what is going on</p>",
        "id": 134263688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537385469
    },
    {
        "content": "<p>it lets us use named fields like <code>is_back_edge</code> instead of <code>foo.1</code></p>",
        "id": 134263694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537385479
    },
    {
        "content": "<p>and finally it lets us define a name (\"MoveSite\") that we can use for variables and the like :)</p>",
        "id": 134263702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537385491
    },
    {
        "content": "<p>we could of course do that with the tuple too...</p>",
        "id": 134263705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537385497
    },
    {
        "content": "<p>basically I just find it more self-documenting</p>",
        "id": 134263708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537385502
    },
    {
        "content": "<p>All that makes sense. And it also comes at no performance penalties ? I guess it would depend on how a tuple is implemented, one can more or less expensive than the other but because we will recursively create an object of all basic blocks, it can have a large cost of compilation in big projects ? <br>\nThese are just questions out of curiosity, I do agree with the self documenting part with well named members argument about structs.</p>",
        "id": 134279407,
        "sender_full_name": "blitzerr",
        "timestamp": 1537406599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 134279409,
        "sender_full_name": "blitzerr",
        "timestamp": 1537406609
    },
    {
        "content": "<blockquote>\n<p>All that makes sense. And it also comes at no performance penalties ?</p>\n</blockquote>\n<p>tuples and structs are identical at runtime, yes</p>",
        "id": 134309429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537450250
    },
    {
        "content": "<p>Awesome thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 134331016,
        "sender_full_name": "blitzerr",
        "timestamp": 1537471254
    },
    {
        "content": "<p>I have another question. The basic blocks's location is the line number of a statement, right? Does it strips the empty lines. I was trying to change the lines numbers in the debug logging for the test for it wouldn't change.</p>",
        "id": 134331121,
        "sender_full_name": "blitzerr",
        "timestamp": 1537471363
    },
    {
        "content": "<p>The <code>Location</code> that you're talking about is the location in the MIR - which is an intermediate representation of the language. It's made up of basic blocks with statements and then a terminator. If you run the compiler with <code>-Z dump-mir=all</code> then you get a <code>mir_dump</code> folder that shows you the MIR. In those files (there's one for each function/closure) you'll see things like <code>bb0[2]</code> which is basic block 0, statement 2. There aren't any empty lines in the MIR.<br>\n<a href=\"https://rust-lang-nursery.github.io/rustc-guide/mir/index.html\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/mir/index.html\">https://rust-lang-nursery.github.io/rustc-guide/mir/index.html</a></p>",
        "id": 134332123,
        "sender_full_name": "davidtwco",
        "timestamp": 1537472483
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> <br>\nI will do what you suggested. Usually basic block is for a block of code but are you suggesting that Mir treats single statements as the basic block ?</p>",
        "id": 134341224,
        "sender_full_name": "blitzerr",
        "timestamp": 1537481764
    },
    {
        "content": "<p>Thanks for the link<span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 134341281,
        "sender_full_name": "blitzerr",
        "timestamp": 1537481850
    },
    {
        "content": "<p>A single statement in a test might end up as multiple statements in the Mir with compiler inserted temporaries.</p>",
        "id": 134341283,
        "sender_full_name": "davidtwco",
        "timestamp": 1537481854
    },
    {
        "content": "<p>But within the parts of the code you're working on, you'll always be working within the Mir of one function or closure, which can have many basic blocks, each with statements and a terminator.</p>",
        "id": 134341352,
        "sender_full_name": "davidtwco",
        "timestamp": 1537481913
    },
    {
        "content": "<p>Thanks a  lot <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  I will try this out.</p>",
        "id": 134351120,
        "sender_full_name": "blitzerr",
        "timestamp": 1537495813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>   <br>\nI did get my question answered</p>",
        "id": 134539271,
        "sender_full_name": "blitzerr",
        "timestamp": 1537808907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I didn't make much progress this weekend. I am sorry that this seemingly an hour worth of work is taking me over a week to get done.</p>",
        "id": 134539811,
        "sender_full_name": "blitzerr",
        "timestamp": 1537809591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> first PR is the hardest :)</p>",
        "id": 134542034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537812005
    },
    {
        "content": "<p>Tell me about it <span class=\"emoji emoji-1f600\" title=\"grinning\">:grinning:</span></p>",
        "id": 134542552,
        "sender_full_name": "blitzerr",
        "timestamp": 1537812487
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Also I looked at your comments. It looks more than just the error annotations not updated. My pull just eliminated the second  comment for the error, which points to the while loop and where the move happened.</p>",
        "id": 134556186,
        "sender_full_name": "blitzerr",
        "timestamp": 1537822578
    },
    {
        "content": "<p>I added a comment on the GitHub earlier. <br>\nI will take a look today</p>",
        "id": 134556198,
        "sender_full_name": "blitzerr",
        "timestamp": 1537822608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <br>\nI added a comment on the PR.</p>",
        "id": 134689945,
        "sender_full_name": "blitzerr",
        "timestamp": 1537982307
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">stage1</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"w\"></span>\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0382</span><span class=\"p\">]</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">17</span>:<span class=\"mi\">24</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR use of moved value: `y`</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                        </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"n\">after</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">move</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">std</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"kt\">isize</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0382</span><span class=\"p\">]</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">18</span>:<span class=\"mi\">52</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">iteration</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">move</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">std</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"kt\">isize</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">aborting</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0382</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</pre></div>",
        "id": 134752253,
        "sender_full_name": "blitzerr",
        "timestamp": 1538061932
    },
    {
        "content": "<p>After fetching from upstream and doing a clean build, I see these errors while trying to compile the test file. I remember you saying that there is a PR that removes the second error as a duplicate?</p>",
        "id": 134752385,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062009
    },
    {
        "content": "<p>I see the code in my repo, but the output has it, maybe I misunderstood the intended meaning of duplicate ?</p>",
        "id": 134752452,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062076
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 134752459,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062080
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> can you test against the output when you use <code>rustc +nightly</code>?</p>",
        "id": 134753272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538062691
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"w\"></span>\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0382</span><span class=\"p\">]</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">17</span>:<span class=\"mi\">24</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR use of moved value: `y`</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                        </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"n\">after</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">move</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">std</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"kt\">isize</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0382</span><span class=\"p\">]</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">18</span>:<span class=\"mi\">52</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">iteration</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">move</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">std</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"kt\">isize</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">aborting</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0382</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</pre></div>",
        "id": 134753445,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062820
    },
    {
        "content": "<p>e.g., I get</p>\n<div class=\"codehilite\"><pre><span></span>athena. rustc +nightly liveness-move-in-while.rs -Zborrowck=mir -Ztwo-phase-borrows\nerror[E0382]: borrow of moved value: `y`\n  --&gt; liveness-move-in-while.rs:17:24\n   |\n17 |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n   |                        ^ value borrowed here after move\n18 |         while true { while true { while true { x = y; x.clone(); } } }\n   |                                                    - value moved here\n   |\n   = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n</pre></div>",
        "id": 134753447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538062821
    },
    {
        "content": "<p>are you running with <code>-Zborrowck=mir</code>? Otherwise, unless the test has <code>#![feature(nll)]</code>, you are running the older, AST-based borrow checker</p>",
        "id": 134753463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538062846
    },
    {
        "content": "<p>Ahh ! This is what I am beating my head against <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 134753482,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062868
    },
    {
        "content": "<p>d'oh, sorry for the confusion :)</p>",
        "id": 134753485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538062874
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>\n</pre></div>",
        "id": 134753575,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062957
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ rustc +nightly ./src/test/ui/liveness/liveness-move-in-while.rs -Zborrowck=mir -Ztwo-phase-borrows\nerror[E0382]: borrow of moved value: `y`\n  --&gt; ./src/test/ui/liveness/liveness-move-in-while.rs:17:24\n   |\n17 |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n   |                        ^ value borrowed here after move\n18 |         while true { while true { while true { x = y; x.clone(); } } }\n   |                                                    - value moved here\n   |\n   = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `y`\n  --&gt; ./src/test/ui/liveness/liveness-move-in-while.rs:18:52\n   |\n18 |         while true { while true { while true { x = y; x.clone(); } } }\n   |                                                    ^ value moved here in previous iteration of loop\n   |\n   = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0382`.\n</pre></div>",
        "id": 134753581,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062966
    },
    {
        "content": "<p>Still the same, right ?</p>",
        "id": 134753602,
        "sender_full_name": "blitzerr",
        "timestamp": 1538062996
    },
    {
        "content": "<p>You have a different output than I do ! <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 134753683,
        "sender_full_name": "blitzerr",
        "timestamp": 1538063046
    },
    {
        "content": "<p>The only change I have in my repo right now, is the RustFmt-ed file<br>\n<a href=\"https://github.com/rust-lang/rust/pull/54343/files\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54343/files\">https://github.com/rust-lang/rust/pull/54343/files</a></p>",
        "id": 134753837,
        "sender_full_name": "blitzerr",
        "timestamp": 1538063182
    },
    {
        "content": "<p>I did a hard reset and this is what my git log shows :</p>\n<div class=\"codehilite\"><pre><span></span>commit c9865b1c37f8cb8a257591e6ea0b32a5df1f3d41 (HEAD -&gt; master, upstream/master)\nMerge: c4501a0f1d 3feffd48bd\nAuthor: bors &lt;bors@rust-lang.org&gt;\nDate:   Thu Sep 27 12:35:36 2018 +0000\n\n    Auto merge of #54355 - pnkfelix:issue-22323-regression-test, r=davidtwco\n\n    NLL: regression test for &quot;dropck: track order of destruction for r-value temporaries&quot;\n\n    Once this lands, we can remove the E-needstest from #22323.\n\n    (We shouldn&#39;t close the bug itself, however, because we are leaving the NLL-fixed-by-NLL bugs open until NLL is turned on by default.)\n</pre></div>",
        "id": 134756833,
        "sender_full_name": "blitzerr",
        "timestamp": 1538065674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <br>\nThis is the output :</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Zborrowck</span><span class=\"o\">=</span><span class=\"n\">mir</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ztwo</span><span class=\"o\">-</span><span class=\"n\">phase</span><span class=\"o\">-</span><span class=\"n\">borrows</span><span class=\"w\"></span>\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0382</span><span class=\"p\">]</span>: <span class=\"nc\">borrow</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">17</span>:<span class=\"mi\">24</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR use of moved value: `y`</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                        </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">borrowed</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"n\">after</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">move</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">std</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"kt\">isize</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0382</span><span class=\"p\">]</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">/</span><span class=\"n\">liveness</span><span class=\"o\">-</span><span class=\"k\">move</span><span class=\"o\">-</span><span class=\"k\">in</span><span class=\"o\">-</span><span class=\"k\">while</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">18</span>:<span class=\"mi\">52</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">iteration</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">move</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">y</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">std</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"kt\">isize</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">aborting</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0382</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</pre></div>",
        "id": 134756912,
        "sender_full_name": "blitzerr",
        "timestamp": 1538065718
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>\n</pre></div>",
        "id": 134757812,
        "sender_full_name": "blitzerr",
        "timestamp": 1538066577
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>\n</pre></div>",
        "id": 134757818,
        "sender_full_name": "blitzerr",
        "timestamp": 1538066582
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ rustc +nightly -vV\nrustc 1.28.0-nightly (cbc4c8380 2018-06-22)\nbinary: rustc\ncommit-hash: cbc4c8380fb92a719ae9be40f9da44ca7e3e2f3f\ncommit-date: 2018-06-22\nhost: x86_64-apple-darwin\nrelease: 1.28.0-nightly\nLLVM version: 6.0\n</pre></div>",
        "id": 134757830,
        "sender_full_name": "blitzerr",
        "timestamp": 1538066590
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span> rustc +stage1 -vV\nrustc 1.30.0-dev\nbinary: rustc\ncommit-hash: unknown\ncommit-date: unknown\nhost: x86_64-apple-darwin\nrelease: 1.30.0-dev\nLLVM version: 8.0\n</pre></div>",
        "id": 134757854,
        "sender_full_name": "blitzerr",
        "timestamp": 1538066619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> <code>rustup update nightly</code>, perhaps?</p>",
        "id": 134761771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538070270
    },
    {
        "content": "<p>in particular your nightly is super old :)</p>",
        "id": 134761787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538070299
    },
    {
        "content": "<p>my nightly is:</p>\n<div class=\"codehilite\"><pre><span></span>athena. rustc +nightly -vV\nrustc 1.30.0-nightly (ae7fe84e8 2018-09-26)\nbinary: rustc\ncommit-hash: ae7fe84e8cf7523f6853d9786e28e9d066d4e5cd\ncommit-date: 2018-09-26\nhost: x86_64-unknown-linux-gnu\nrelease: 1.30.0-nightly\nLLVM version: 8.0\n</pre></div>",
        "id": 134761798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538070306
    },
    {
        "content": "<p>what does your branch do if you supply <code>-Zborrowck=mir</code>?</p>",
        "id": 134761822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538070327
    },
    {
        "content": "<p>I don't see that above</p>",
        "id": 134761823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538070330
    },
    {
        "content": "<p>I see nightly is a separate build, unrelated to the rust forked branch. Sure, I will update that</p>",
        "id": 134762049,
        "sender_full_name": "blitzerr",
        "timestamp": 1538070526
    },
    {
        "content": "<p>I will get back to you on that flag <code>-Zborrowck=mir</code>?<br>\nI think it will work like a charm. <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span><br>\nDon't have my laptop with me right now <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 134762162,
        "sender_full_name": "blitzerr",
        "timestamp": 1538070636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> ok</p>",
        "id": 134762995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538071373
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/54343/commits/a4ccbdbb939b7c3d63fadef24ec9fcda5f789347\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54343/commits/a4ccbdbb939b7c3d63fadef24ec9fcda5f789347\">https://github.com/rust-lang/rust/pull/54343/commits/a4ccbdbb939b7c3d63fadef24ec9fcda5f789347</a></p>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  The PR fixes <a href=\"https://github.com/rust-lang/rust/issues/54015\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54015\">#54015</a>. Please take a look at you convenience and let me know.</p>\n<div class=\"codehilite\"><pre><span></span>$ rustc +stage1 src/test/ui/liveness/liveness-move-in-while.rs -Zborrowck=mir -Ztwo-phase-borrows\nerror[E0382]: borrow of moved value: `y`\n  --&gt; src/test/ui/liveness/liveness-move-in-while.rs:17:24\n   |\n17 |         println!(&quot;{}&quot;, y); //~ ERROR use of moved value: `y`\n   |                        ^ value borrowed here after move\n18 |         while true { while true { while true { x = y; x.clone(); } } }\n   |                                                    - value moved here, in previous iteration of loop\n   |\n   = note: move occurs because `y` has type `std::boxed::Box&lt;isize&gt;`, which does not implement the `Copy` trait\n\nerror: aborting due to previous error\n</pre></div>\n\n\n<p>Gives the desired error message now and as you can see, it also has the comma. :D</p>",
        "id": 134796430,
        "sender_full_name": "blitzerr",
        "timestamp": 1538112349
    },
    {
        "content": "<p>Looks great <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span>, I added a couple small nits when I was taking a peek.</p>",
        "id": 134811345,
        "sender_full_name": "davidtwco",
        "timestamp": 1538125803
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  for taking a look. I will address them.</p>",
        "id": 134816849,
        "sender_full_name": "blitzerr",
        "timestamp": 1538133275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  I updated my PR with your suggestions.</p>",
        "id": 134818268,
        "sender_full_name": "blitzerr",
        "timestamp": 1538135294
    },
    {
        "content": "<p>You'll need to <code>--bless</code> some of the UI tests that made fail <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span>.</p>",
        "id": 134821347,
        "sender_full_name": "davidtwco",
        "timestamp": 1538139006
    },
    {
        "content": "<p>Otherwise, the nits seem fixed!</p>",
        "id": 134821371,
        "sender_full_name": "davidtwco",
        "timestamp": 1538139041
    },
    {
        "content": "<p><span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 134821375,
        "sender_full_name": "davidtwco",
        "timestamp": 1538139044
    },
    {
        "content": "<p>Currently doing that. <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span>Will update the PR once the UI tests runs fine locally</p>",
        "id": 134821644,
        "sender_full_name": "blitzerr",
        "timestamp": 1538139320
    },
    {
        "content": "<p>Thanks for reviewing <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span></p>",
        "id": 134821649,
        "sender_full_name": "blitzerr",
        "timestamp": 1538139335
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <br>\nI saw you mention me on GitHub. Are you not able to access my new PR ?</p>",
        "id": 134830345,
        "sender_full_name": "blitzerr",
        "timestamp": 1538146761
    },
    {
        "content": "<p>What can I do to help you (not that you need any<span class=\"emoji emoji-1f600\" title=\"grinning\">:grinning:</span>)?</p>",
        "id": 134830375,
        "sender_full_name": "blitzerr",
        "timestamp": 1538146786
    },
    {
        "content": "<p>I am able to</p>",
        "id": 134830832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538147123
    },
    {
        "content": "<p>I just wanted to have a link from the main issue</p>",
        "id": 134830836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538147127
    },
    {
        "content": "<p>(normally, in your PR description, you would \"cite\" the issue, and it would get created automatically)</p>",
        "id": 134830846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538147137
    },
    {
        "content": "<p>I did cite it like this: <br>\n<code>[54015] NLL:Improve move error loop detection</code></p>",
        "id": 134835414,
        "sender_full_name": "blitzerr",
        "timestamp": 1538151441
    },
    {
        "content": "<p>Maybe the square brackets messes up the back-linking <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 134835487,
        "sender_full_name": "blitzerr",
        "timestamp": 1538151484
    },
    {
        "content": "<p>you can cite using github's special syntax: in your PR's description (or any comment) using the issue number like \"<a href=\"https://github.com/rust-lang/rust/issues/54015\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54015\">#54015</a>\", it will create a backlink from this 54015 issue to the PR/comment, so it's easy to track using links directly in the issue page (rather than search if we don't)</p>",
        "id": 134835702,
        "sender_full_name": "lqd",
        "timestamp": 1538151696
    },
    {
        "content": "<p>I just added the test fixes to make Travis happy and I added the \"#\" before 54015 and things look fine.<br>\nSorry guys</p>",
        "id": 134836078,
        "sender_full_name": "blitzerr",
        "timestamp": 1538152054
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> there are no worries whatsoever</p>",
        "id": 134836152,
        "sender_full_name": "lqd",
        "timestamp": 1538152112
    },
    {
        "content": "<p>:D</p>",
        "id": 134836162,
        "sender_full_name": "blitzerr",
        "timestamp": 1538152141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> thanks for the awesome work</p>",
        "id": 134836171,
        "sender_full_name": "lqd",
        "timestamp": 1538152150
    },
    {
        "content": "<p><span class=\"emoji emoji-1f604\" title=\"big smile\">:big_smile:</span></p>",
        "id": 134836174,
        "sender_full_name": "blitzerr",
        "timestamp": 1538152153
    },
    {
        "content": "<p>Not quite <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> , it took me a long time to get the first PR out. It should have been trivial piece of work. <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 134836266,
        "sender_full_name": "blitzerr",
        "timestamp": 1538152227
    },
    {
        "content": "<p>(easy access to the PR: <a href=\"https://github.com/rust-lang/rust/issues/54343\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54343\">#54343</a>)</p>",
        "id": 134836269,
        "sender_full_name": "lqd",
        "timestamp": 1538152231
    },
    {
        "content": "<p>let's just say that rustc and the whole environment wasn't trivial to me for my first PR <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> :) nicely done in any case <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 134836448,
        "sender_full_name": "lqd",
        "timestamp": 1538152482
    },
    {
        "content": "<p>Everyone here I have interacted with  is very kind and helpful. It makes it a great experience. Thanks all <span class=\"emoji emoji-1f44f\" title=\"clap\">:clap:</span></p>",
        "id": 134836665,
        "sender_full_name": "blitzerr",
        "timestamp": 1538152761
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> still seeing some failures in your PR though — do you know what those are about?</p>",
        "id": 134845473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538162192
    },
    {
        "content": "<p>I didn't look too closely</p>",
        "id": 134845475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538162196
    },
    {
        "content": "<p>ah, looks like you need to run <code>x.py test</code> with <code>--bless</code></p>",
        "id": 134845484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538162210
    },
    {
        "content": "<p>to update the reference files</p>",
        "id": 134845485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538162212
    },
    {
        "content": "<p>otherwise, looking great!</p>",
        "id": 134845511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538162251
    },
    {
        "content": "<p>I did run bless on the files for which I got error locally. Will do that again. Thanks for taking a look <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 134846493,
        "sender_full_name": "blitzerr",
        "timestamp": 1538163306
    },
    {
        "content": "<p><a href=\"https://travis-ci.org/rust-lang/rust/builds/434870102?utm_source=github_status&amp;utm_medium=notification\" target=\"_blank\" title=\"https://travis-ci.org/rust-lang/rust/builds/434870102?utm_source=github_status&amp;utm_medium=notification\">https://travis-ci.org/rust-lang/rust/builds/434870102?utm_source=github_status&amp;utm_medium=notification</a></p>\n<p>The build passed.</p>",
        "id": 134884382,
        "sender_full_name": "blitzerr",
        "timestamp": 1538230747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> great!</p>",
        "id": 134985767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538416534
    },
    {
        "content": "<p>I think this failed again. How to run compile test for UI suite in \"compare_mode=nll\"?</p>",
        "id": 134991863,
        "sender_full_name": "blitzerr",
        "timestamp": 1538422702
    },
    {
        "content": "<p><code>./x.py test src/test/ui --bless</code> (--bless will update test output for you), you'll also want to add <code>-i</code>, <code>--stage 1</code>, etc. to match how you're building.</p>",
        "id": 134991998,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1538422912
    },
    {
        "content": "<p>That will run in non-compare mode first</p>",
        "id": 134992046,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1538422933
    }
]