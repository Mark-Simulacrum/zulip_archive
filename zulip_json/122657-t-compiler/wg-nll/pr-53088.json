[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Changes are implemented now. Not sure how well it works for long type names</p>",
        "id": 131002802,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533587840
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error: unsatisfied lifetime constraints\n  --&gt; $DIR/issue-49824.rs:22:9\n   |\nLL |       || {\n   |       --\n   |       ||\n   |       |return type of closure is [closure@$DIR/issue-49824.rs:22:9: 24:10 x:&amp;&#39;2 mut i32]\n   |       lifetime `&#39;1` represents this closure&#39;s body\nLL | /         || {\nLL | |             let _y = &amp;mut x;\nLL | |         }\n   | |_________^ requires that `&#39;1` must outlive `&#39;2`\n   |\n   = note: closure implements `FnMut`, so references to captured variables can&#39;t escape the closure\n\nerror: aborting due to previous error\n</pre></div>",
        "id": 131002805,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533587851
    },
    {
        "content": "<p>well</p>",
        "id": 131002854,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587892
    },
    {
        "content": "<p>I think the problem <em>there</em> is probably that we should try to identify that case</p>",
        "id": 131002858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587899
    },
    {
        "content": "<p>if nothing else, this version tells me what the problem is quite precisely though :)</p>",
        "id": 131002865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587906
    },
    {
        "content": "<p>in particular, the closure holds on to a reference to <code>x</code></p>",
        "id": 131002875,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587931
    },
    {
        "content": "<p>(also, I'm not 100% convinced this test <em>should</em> fail to compile)</p>",
        "id": 131002900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587961
    },
    {
        "content": "<p>that .. kind of seems like a bug</p>",
        "id": 131002902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587965
    },
    {
        "content": "<p>but not related to your PR, obviously</p>",
        "id": 131002905,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587977
    },
    {
        "content": "<p>anyway, TL;DR I still consider that an improvement on what was there before, because it gives you enough information to solve the problem, if you know how to interpret it; but it's not a final goal in that we should break it down for the user more</p>",
        "id": 131002917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533587999
    },
    {
        "content": "<p>(we should probably also investigate <em>why</em> <code>issue-49824.rs</code> is failing to compile, which seems like an NLL-complete bug)</p>",
        "id": 131002976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588019
    },
    {
        "content": "<p>I feel like we maybe had a bug on this?</p>",
        "id": 131002981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588024
    },
    {
        "content": "<p>I think there is a recent one opened by Felix</p>",
        "id": 131003020,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533588100
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/53040\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53040\">#53040</a></p>",
        "id": 131003112,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533588199
    },
    {
        "content": "<p>ah yes and I see I wrote this which seems relevant too :)</p>",
        "id": 131003214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588298
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/49824#issuecomment-384391152\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49824#issuecomment-384391152\">https://github.com/rust-lang/rust/issues/49824#issuecomment-384391152</a></p>",
        "id": 131003215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588299
    },
    {
        "content": "<p>ok so</p>",
        "id": 131003253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588341
    },
    {
        "content": "<p>I would say we should try to identify this case and give a nice error</p>",
        "id": 131003279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588360
    },
    {
        "content": "<p>it seems sort of related to <a href=\"https://github.com/rust-lang/rust/issues/51026\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51026\">https://github.com/rust-lang/rust/issues/51026</a> as well</p>",
        "id": 131003328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588379
    },
    {
        "content": "<p>though it may not be precisely the same scenario</p>",
        "id": 131003334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588386
    },
    {
        "content": "<p>specifically I think the scenario would be:</p>",
        "id": 131003366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588428
    },
    {
        "content": "<ul>\n<li>if the one region appears as the lifetime of an implicit closure upvar reference (here, the reference to <code>x</code>)</li>\n</ul>",
        "id": 131003382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588452
    },
    {
        "content": "<ul>\n<li>and the other region is the closure body</li>\n</ul>",
        "id": 131003438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588487
    },
    {
        "content": "<p>then we want to say something like \"this closure captures <code>x</code> by reference but then escapes its creating stack frame\"</p>",
        "id": 131003451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588530
    },
    {
        "content": "<p>and suggest using \"move\"</p>",
        "id": 131003453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588539
    },
    {
        "content": "<p>actually the message from borrowck-escaping-closure-error-1 is probably exactly what we want</p>",
        "id": 131003466,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588556
    },
    {
        "content": "<p>so maybe this really <em>is</em> the same case</p>",
        "id": 131003467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588558
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0373]: closure may outlive the current function, but it borrows `books`, which is owned by the current function\n  --&gt; $DIR/borrowck-escaping-closure-error-1.rs:23:11\n   |\nLL |     spawn(|| books.push(4));\n   |           ^^ ----- `books` is borrowed here\n   |           |\n   |           may outlive borrowed value `books`\nhelp: to force the closure to take ownership of `books` (and any other referenced variables), use the `move` keyword\n   |\nLL |     spawn(move || books.push(4));\n   |           ^^^^^^^\n</pre></div>",
        "id": 131003477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588566
    },
    {
        "content": "<p>probably what we want is to to skip the \"...and the other region is the closure body\" check</p>",
        "id": 131003491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588582
    },
    {
        "content": "<p>and just print something like whenever the other region is \"some free region\"</p>",
        "id": 131003498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> does that make sense?</p>",
        "id": 131003544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533588604
    },
    {
        "content": "<p>Yes. You might want to leave a note for this somewhere so it doesn't get lost.</p>",
        "id": 131003869,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533589031
    },
    {
        "content": "<p>I left it in the issue <a href=\"https://github.com/rust-lang/rust/issues/51026\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51026\">https://github.com/rust-lang/rust/issues/51026</a>, which is assigned to you actually</p>",
        "id": 131003963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533589125
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> so looking at <a href=\"https://github.com/rust-lang/rust/issues/51354\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51354\">https://github.com/rust-lang/rust/issues/51354</a>, I think that is also a case where this error message would apply</p>",
        "id": 131004843,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533590355
    }
]