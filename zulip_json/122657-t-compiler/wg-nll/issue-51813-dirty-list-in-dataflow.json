[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span>, I saw you assigned <a href=\"https://github.com/rust-lang/rust/issues/51813\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51813\">https://github.com/rust-lang/rust/issues/51813</a> to yourself! Sounds good. Let me know how it goes.</p>",
        "id": 128741430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530137616
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <br>\nas per your instruction I implemented something like this <a href=\"https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208\" target=\"_blank\" title=\"https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208\">https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208</a><br>\nHowever I am getting exception like this <a href=\"https://gist.github.com/PramodBisht/858da0bb18c59130e88ace5af3c2136f/revisions?diff=unified\" target=\"_blank\" title=\"https://gist.github.com/PramodBisht/858da0bb18c59130e88ace5af3c2136f/revisions?diff=unified\">https://gist.github.com/PramodBisht/858da0bb18c59130e88ace5af3c2136f/revisions?diff=unified</a></p>\n<p>Could you give me pointer or two what I am doing wrong?</p>",
        "id": 128755165,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530162714
    },
    {
        "content": "<p>leaving aside relatively minor nits, I think the immediate bug is that you are populating the dirty list with the wrong thing. =)</p>",
        "id": 128764222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180125
    },
    {
        "content": "<p>roughly speaking, the way that the propagation works is like this:</p>\n<div class=\"codehilite\"><pre><span></span>for each basic block B {\n    compute new data D for B;\n    for each successor S of B {\n        if in_data(S) != D {\n            in_data(S) = D;\n            changed = true;\n        }\n    }\n}\n</pre></div>",
        "id": 128764252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180211
    },
    {
        "content": "<p>you changed it to this:</p>\n<div class=\"codehilite\"><pre><span></span>dirty_blocks = [];\nfor each block B in dirty_blocks {\n    compute new data D for B;\n    for each successor S of B {\n        if in_data(S) != D {\n            in_data(S) = D;\n            changed = true;\n        }\n    }\n    if any successor changed {\n       dirty_blocks.push(B);\n    }\n}\n</pre></div>",
        "id": 128764301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180262
    },
    {
        "content": "<p>(sort of)</p>",
        "id": 128764304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180266
    },
    {
        "content": "<p>here, you are pushing the block <code>B</code></p>",
        "id": 128764314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180272
    },
    {
        "content": "<p>but in fact <em>that</em> block is now \"clean\" -- that is, we've processed it</p>",
        "id": 128764322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180280
    },
    {
        "content": "<p>the dirty blocks are its successors</p>",
        "id": 128764334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180285
    },
    {
        "content": "<p>that is, you want something like this</p>\n<div class=\"codehilite\"><pre><span></span>dirty_blocks = [];\nfor each block B in dirty_blocks {\n    compute new data D for B;\n    for each successor S of B {\n        if in_data(S) != D {\n            in_data(S) = D;\n            dirty_blocks.push(S);\n            changed = true;\n        }\n    }\n}\n</pre></div>",
        "id": 128764348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180315
    },
    {
        "content": "<p>(in fact, we should be able to remove the <code>changed</code> flag eventually and just check whether the dirty list is empty or not)</p>",
        "id": 128764352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180343
    },
    {
        "content": "<p>you can actually manage the worklist quite well with a <code>FxHashSet</code> and a <code>VecDeque</code> combined</p>",
        "id": 128764402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180391
    },
    {
        "content": "<p>but anyway let's get it working first then we'll fine-tune</p>",
        "id": 128764405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180406
    },
    {
        "content": "<p>in terms of your gist, you will want to change <a href=\"https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208#file-51813-L65-L66\" target=\"_blank\" title=\"https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208#file-51813-L65-L66\">these lines here</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">             </span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">propagate_bits_into_graph_successors_of</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                 </span><span class=\"n\">in_out</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mir</span>::<span class=\"n\">BasicBlock</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">bb_idx</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">bb_data</span><span class=\"p\">));</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>because you need to pass the dirty list into the function.</p>",
        "id": 128764417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180447
    },
    {
        "content": "<p>actually, if we look at <a href=\"https://github.com/rust-lang/rust/blob/ba196bdcb10736da5d14c961bd8962d80e300913/src/librustc_mir/dataflow/mod.rs#L806-L810\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/ba196bdcb10736da5d14c961bd8962d80e300913/src/librustc_mir/dataflow/mod.rs#L806-L810\">the source for <code>propagate_bits_into_graph_successors_of</code></a>, you can see that it <a href=\"https://github.com/rust-lang/rust/blob/ba196bdcb10736da5d14c961bd8962d80e300913/src/librustc_mir/dataflow/mod.rs#L825\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/ba196bdcb10736da5d14c961bd8962d80e300913/src/librustc_mir/dataflow/mod.rs#L825\">mostly calls a helper function</a></p>",
        "id": 128764465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180518
    },
    {
        "content": "<p>that function is <a href=\"https://github.com/rust-lang/rust/blob/ba196bdcb10736da5d14c961bd8962d80e300913/src/librustc_mir/dataflow/mod.rs#L877-L888\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/ba196bdcb10736da5d14c961bd8962d80e300913/src/librustc_mir/dataflow/mod.rs#L877-L888\"><code>propagate_bits_into_entry_set_for</code></a>; this function too wants to take the dirty list as argument. Instead of </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">set_changed</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">*</span><span class=\"n\">changed</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>it wants to do</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">set_changed</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">dirty_list</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">bb</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">*</span><span class=\"n\">changed</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>(Also, we should change it to take <code>mir::BasicBlock</code> and not <code>&amp;mir::BasicBlock</code> -- this is just an integer, so the latter is kind of silly, but that's not really related)</p>",
        "id": 128764521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> make sense?</p>",
        "id": 128764526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530180626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yes, it makes sense :)</p>",
        "id": 128773007,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530193837
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  as you instructed I implemented something like this <a href=\"https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208/revisions\" target=\"_blank\" title=\"https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208/revisions\">https://gist.github.com/PramodBisht/3bf922125f8948f27bf053bcd496c208/revisions</a><br>\nThis block compiles successfully. However, I am getting some weird error like this<br>\n<a href=\"https://gist.github.com/PramodBisht/858da0bb18c59130e88ace5af3c2136f/revisions?diff=unified\" target=\"_blank\" title=\"https://gist.github.com/PramodBisht/858da0bb18c59130e88ace5af3c2136f/revisions?diff=unified\">https://gist.github.com/PramodBisht/858da0bb18c59130e88ace5af3c2136f/revisions?diff=unified</a></p>\n<p>Could you give pointer or two what I am doing wrong?</p>",
        "id": 128808482,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530242955
    },
    {
        "content": "<p>please ignore this message, something occurred while checking message on android app.</p>",
        "id": 128812469,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530250724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> no worries. The android app is Zulip's big weakness, I would say... :(</p>",
        "id": 128819039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530263970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> btw <a href=\"https://github.com/rust-lang/rust/pull/51896\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51896\">PR #51896</a>  may interest you -- it adds a similar work queue to the liveness computation</p>",
        "id": 128822678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530270400
    },
    {
        "content": "<p>also, <span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span>, feel free to open a <code>[WIP]</code> PR with your branch. It tends to make it much easier for me to give feedback</p>",
        "id": 128824521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530273527
    },
    {
        "content": "<p>sure <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, first I am trying to implement using naive approach, then I will do changes which will use your new implemented <code>work_queue</code>.</p>",
        "id": 128824618,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530273647
    },
    {
        "content": "<p>is that okay?</p>",
        "id": 128824631,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530273688
    },
    {
        "content": "<p>seems good</p>",
        "id": 128824697,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530273766
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> please find WIP state here <a href=\"https://github.com/rust-lang/rust/pull/51900\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51900\">https://github.com/rust-lang/rust/pull/51900</a></p>",
        "id": 128828509,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530279695
    },
    {
        "content": "<p>to be more precise this is the changeset <a href=\"https://github.com/rust-lang/rust/pull/51900/files#diff-e1d33bfc0f6996e6a7d96525162675e4\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51900/files#diff-e1d33bfc0f6996e6a7d96525162675e4\">https://github.com/rust-lang/rust/pull/51900/files#diff-e1d33bfc0f6996e6a7d96525162675e4</a></p>",
        "id": 128828667,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530279862
    },
    {
        "content": "<p>I am also waiting for build to complete.</p>",
        "id": 128828744,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530279966
    },
    {
        "content": "<p>great! <a href=\"https://github.com/rust-lang/rust/pull/51900#pullrequestreview-133233767\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51900#pullrequestreview-133233767\">first round of feedback here</a></p>",
        "id": 128829094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530280455
    },
    {
        "content": "<p>\"odd annotation\" == odd indentation ? ;)</p>",
        "id": 128829539,
        "sender_full_name": "lqd",
        "timestamp": 1530280968
    },
    {
        "content": "<p>I think for this line <code>let sets = builder.flow_state.sets.for_block(bb_idx); </code>, or I should use integer form of BasicBlock?</p>",
        "id": 128830400,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530281866
    },
    {
        "content": "<p>video link was posted accidentally :)</p>",
        "id": 128830467,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530281917
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 128830474,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1530281936
    },
    {
        "content": "<p>I'm confused</p>",
        "id": 128830478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530281939
    },
    {
        "content": "<p>I think for this line <code>let sets = builder.flow_state.sets.for_block(bb_idx);</code> we may need to maintain counter <code>bb_idx</code>, I think right value should be integer form of <code>BasicBlock</code> right?</p>",
        "id": 128830564,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530282025
    },
    {
        "content": "<p>hmm, let me look</p>",
        "id": 128830592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530282072
    },
    {
        "content": "<p>oh, yes, you can use <code>bb</code></p>",
        "id": 128830614,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530282104
    },
    {
        "content": "<p>you can use <code>bb.index()</code> or something like that</p>",
        "id": 128830618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530282113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> tidy failed before and is likely going to fail again</p>",
        "id": 128831295,
        "sender_full_name": "lqd",
        "timestamp": 1530282837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> let me check.</p>",
        "id": 128831350,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530282876
    },
    {
        "content": "<p>oh tidy</p>",
        "id": 128831435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530282981
    },
    {
        "content": "<p>so annoying</p>",
        "id": 128831436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530282982
    },
    {
        "content": "<p>My local build got failed, fixing them.</p>",
        "id": 128832157,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530283821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  many testcases related to that failed. I have pasted logs at <a href=\"https://gist.github.com/PramodBisht/0ad38646e007973c0924996a0e186eae\" target=\"_blank\" title=\"https://gist.github.com/PramodBisht/0ad38646e007973c0924996a0e186eae\">https://gist.github.com/PramodBisht/0ad38646e007973c0924996a0e186eae</a></p>",
        "id": 128836031,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530288064
    },
    {
        "content": "<p>you might need <a href=\"https://github.com/rust-lang/rust/pull/51896/commits/f140bcac20777ac15824324b517420b11edd07b2\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51896/commits/f140bcac20777ac15824324b517420b11edd07b2\">https://github.com/rust-lang/rust/pull/51896/commits/f140bcac20777ac15824324b517420b11edd07b2</a></p>",
        "id": 128836202,
        "sender_full_name": "lqd",
        "timestamp": 1530288269
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I rebased branch with that commit.</p>",
        "id": 128836242,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530288326
    },
    {
        "content": "<p>and it still fails anyway, you mean ?</p>",
        "id": 128836349,
        "sender_full_name": "lqd",
        "timestamp": 1530288480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> yes you are right, actually I pushed that to GH but I forgot to take pull on Janitor's remote machine where I execute that.</p>",
        "id": 128836534,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530288680
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 128836552,
        "sender_full_name": "lqd",
        "timestamp": 1530288716
    },
    {
        "content": "<p>I left some nits <span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> but it <em>looks</em> correct to me — are you still getting test failures?</p>",
        "id": 128839275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> no I am not getting any test case failure. Checking nits</p>",
        "id": 128839348,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530292406
    },
    {
        "content": "<p>ah, ok, great!</p>",
        "id": 128839357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292422
    },
    {
        "content": "<p>I can merge your changes in and re-profile perhaps</p>",
        "id": 128839363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292438
    },
    {
        "content": "<p>before that should I change <code>ref target</code> to <code>target</code>, btw that looks much cleaner and other nits. Plus I am waiting for travis CI to complete.</p>",
        "id": 128839512,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530292624
    },
    {
        "content": "<p>ah well I just meant merge it into this local branch I have</p>",
        "id": 128839519,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292646
    },
    {
        "content": "<p>so I can measure the effect</p>",
        "id": 128839523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292652
    },
    {
        "content": "<p>(locally)</p>",
        "id": 128839525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292654
    },
    {
        "content": "<p>I'll r+ once the nits are fixed, yes</p>",
        "id": 128839527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292664
    },
    {
        "content": "<p>(and travis is happy etc)</p>",
        "id": 128839528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292667
    },
    {
        "content": "<p>given that this builds on my PR... I wonder if I should just close that in favor of yours</p>",
        "id": 128839575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292688
    },
    {
        "content": "<p>I'd like to have the original r+'d</p>",
        "id": 128839576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292692
    },
    {
        "content": "<p>seems like it'd be better for them to merge separately though, just to have the perf data if nothing else</p>",
        "id": 128839579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292705
    },
    {
        "content": "<p>@nikomatsakis do you run perf on your local machine, or we have dedicated machine for that?<br>\nAlmost a week back, I tried to follow your <code>perf</code> instruction, but got stuck while installing it.</p>",
        "id": 128839777,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530292924
    },
    {
        "content": "<p>I run <code>perf</code> locally, yes, but we <em>also</em> have a dedicatd perf machine: <a href=\"http://perf.rust-lang.org\" target=\"_blank\" title=\"http://perf.rust-lang.org\">perf.rust-lang.org</a></p>",
        "id": 128839799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292968
    },
    {
        "content": "<p>(that shows the results)</p>",
        "id": 128839801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292973
    },
    {
        "content": "<p>it computes the timing results from each PR as it lands</p>",
        "id": 128839802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292978
    },
    {
        "content": "<p>but we also sometimes compute results for PRs that not yet landed</p>",
        "id": 128839810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292984
    },
    {
        "content": "<p>are you using linux?</p>",
        "id": 128839815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293008
    },
    {
        "content": "<p>I'm surprised you had to 'install' perf :)</p>",
        "id": 128839818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293013
    },
    {
        "content": "<p>Yes</p>",
        "id": 128839819,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530293013
    },
    {
        "content": "<p>or maybe I've always done that and forgotten ;)</p>",
        "id": 128839821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293022
    },
    {
        "content": "<p>that said, I should also add instructions for profiling with callgrind and the like</p>",
        "id": 128839826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293035
    },
    {
        "content": "<p>which is also excellent</p>",
        "id": 128839830,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293039
    },
    {
        "content": "<p>`<br>\nWARNING: perf not found for kernel 4.6.0-040600rc7</p>\n<p>You may need to install the following packages for this specific kernel:<br>\n    linux-tools-4.6.0-040600rc7-generic<br>\n    linux-cloud-tools-4.6.0-040600rc7-generic</p>\n<p>You may also want to install one of the following packages to keep up to date:<br>\n    linux-tools-generic-lts-&lt;series&gt;<br>\n    linux-cloud-tools-generic-lts-&lt;series&gt;</p>\n<p>`<br>\nI get something like that</p>",
        "id": 128839873,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530293061
    },
    {
        "content": "<p>ah... I have no idea :)</p>",
        "id": 128839878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293074
    },
    {
        "content": "<p>sounds like you maybe need to upgrade :)</p>",
        "id": 128839883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293082
    },
    {
        "content": "<p>but those series perf packages were not found when I searched them.<br>\nI will check it again some other time.<br>\nYes, I am using Ubuntu 14.04, because of some legacy stuff, I always deferred upgrading it.</p>",
        "id": 128839948,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530293166
    },
    {
        "content": "<p>yeah, that might be it. you sound a bit like me ;)</p>",
        "id": 128839949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293177
    },
    {
        "content": "<p>getting back to nits :)</p>",
        "id": 128839950,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530293178
    },
    {
        "content": "<p>I'm always hating to upgrade</p>",
        "id": 128839951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293181
    },
    {
        "content": "<p>:)</p>",
        "id": 128839958,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530293201
    },
    {
        "content": "<p>/me just wants the computer to <em>work</em> damn it</p>",
        "id": 128839989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293267
    },
    {
        "content": "<blockquote>\n<p>/me just wants the computer to <em>work</em> damn it</p>\n</blockquote>\n<p>You know how programmers make the computer work again when it wasn't working in the first place, yeah? <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 128840260,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530293562
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is still running Rust 1.0</p>",
        "id": 128840277,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530293585
    },
    {
        "content": "<p>lololol</p>",
        "id": 128840288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293598
    },
    {
        "content": "<p>you know me</p>",
        "id": 128840290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530293599
    },
    {
        "content": "<p>hmm, my profiling results are not that encouraging :( but I'm not sure I trust my measurements.</p>",
        "id": 128841116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530294670
    },
    {
        "content": "<p>we should definitely do a bors try run</p>",
        "id": 128841119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530294677
    },
    {
        "content": "<p>(we may want to experiment with alternative execution strategies too; it's not always clear that a work queue is fastest, for example)</p>",
        "id": 128841189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530294747
    },
    {
        "content": "<p>should we consider giving flags for alternative execution strategy?</p>",
        "id": 128843424,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530297478
    },
    {
        "content": "<p>I'd say that's a bit premature</p>",
        "id": 128843479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297539
    },
    {
        "content": "<p>let's do some more measurement first</p>",
        "id": 128843487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297549
    },
    {
        "content": "<p>did you address the nits btw?</p>",
        "id": 128843491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297554
    },
    {
        "content": "<p>have given build command with those nits</p>",
        "id": 128843513,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530297600
    },
    {
        "content": "<p>will raise PR if everything goes fine.</p>",
        "id": 128843582,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530297630
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 128843616,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297709
    },
    {
        "content": "<p>I will I think checkout <em>just</em> your PR</p>",
        "id": 128843621,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297716
    },
    {
        "content": "<p>and make an optimized build of that</p>",
        "id": 128843623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297720
    },
    {
        "content": "<p>plus the master it's based on</p>",
        "id": 128843648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297722
    },
    {
        "content": "<p>and compare the two</p>",
        "id": 128843661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297724
    },
    {
        "content": "<p>the nits shouldn't really affect perf anyway</p>",
        "id": 128843672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297739
    },
    {
        "content": "<p>I guess it's based on my commit</p>",
        "id": 128843689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530297787
    },
    {
        "content": "<p>(I noticed the nits aren't — this time — signed \"Your capricious reviewer\" :D)</p>",
        "id": 128843791,
        "sender_full_name": "lqd",
        "timestamp": 1530297904
    },
    {
        "content": "<p>hmm I was thinking about this some more</p>",
        "id": 128844812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299124
    },
    {
        "content": "<p>there is some research in different eval strategies</p>",
        "id": 128844829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299156
    },
    {
        "content": "<p>e.g., one thing you can do is to compute SCC (strongly connected components / cycles, basically)</p>",
        "id": 128844878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299168
    },
    {
        "content": "<p>which converts the flow graph into a tree</p>",
        "id": 128844883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299178
    },
    {
        "content": "<p>and then you can do a single walk over the tree, iterating only within a component etc</p>",
        "id": 128844888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299190
    },
    {
        "content": "<p>I guess we should go find those papers ;)</p>",
        "id": 128844895,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> hmm yeah I'm definitely finding that your branch is slower :(</p>",
        "id": 128844915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299224
    },
    {
        "content": "<p>for..  whatever reason</p>",
        "id": 128844924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299240
    },
    {
        "content": "<p>the paper I was thinking of <a href=\"https://pdfs.semanticscholar.org/db53/41a4bc653b84a12780139d795a910c1c8b60.pdf\" target=\"_blank\" title=\"https://pdfs.semanticscholar.org/db53/41a4bc653b84a12780139d795a910c1c8b60.pdf\">https://pdfs.semanticscholar.org/db53/41a4bc653b84a12780139d795a910c1c8b60.pdf</a></p>",
        "id": 128844983,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299291
    },
    {
        "content": "<p>Yup this should have run faster :( . Lets see what we can get from that paper.</p>",
        "id": 128846516,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530301098
    },
    {
        "content": "<p><em>could</em> also be a bug somewhere</p>",
        "id": 128846647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301236
    },
    {
        "content": "<p>might be worth dumping the debug logs</p>",
        "id": 128846651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301245
    },
    {
        "content": "<p>and making sure it's doing what we expect</p>",
        "id": 128846656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301250
    },
    {
        "content": "<p>if number of iteration have reduced then this should have run faster.</p>",
        "id": 128846740,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530301347
    },
    {
        "content": "<p>I think maintaining counter and printing in debug log should help.</p>",
        "id": 128846774,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530301416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  instead of populating basic blocks from <code>IndexVec</code> I did this <br>\n<code>let mut dirty_queue: WorkQueue&lt;mir::BasicBlock&gt; = WorkQueue::with_all(self.builder.mir.basic_blocks().len());</code> assuming they are <code>bb</code> in ascending integer order. do you think this can also be a cause ?</p>",
        "id": 128847160,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530301920
    },
    {
        "content": "<p>I think that was the same as what it was doing before</p>",
        "id": 128847629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530302518
    },
    {
        "content": "<p>there was <em>some</em> revision -- not sure where -- where we were iterating in reverse-post-order instead</p>",
        "id": 128847671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530302532
    },
    {
        "content": "<p>but you'd have to look back in the history to see where that was removed</p>",
        "id": 128847679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530302543
    },
    {
        "content": "<p>probably because computing the RPO took time</p>",
        "id": 128847682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530302547
    },
    {
        "content": "<p>and it wasn't worth it</p>",
        "id": 128847685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530302553
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> the perf results are quite interesting:</p>\n<p><a href=\"http://perf.rust-lang.org/compare.html?start=87ecf5442ced38a6253e670dd6d87c0c334b21fb&amp;end=ddc3f99bad126b9f5755177d82f651d8f91d8683&amp;stat=instructions%3Au\" target=\"_blank\" title=\"http://perf.rust-lang.org/compare.html?start=87ecf5442ced38a6253e670dd6d87c0c334b21fb&amp;end=ddc3f99bad126b9f5755177d82f651d8f91d8683&amp;stat=instructions%3Au\">http://perf.rust-lang.org/compare.html?start=87ecf5442ced38a6253e670dd6d87c0c334b21fb&amp;end=ddc3f99bad126b9f5755177d82f651d8f91d8683&amp;stat=instructions%3Au</a></p>\n<p>It seems like my local measurement was correct but misleading -- clap-rs <em>did</em> get slower (by 2.5%) but lots of stuff is way faster!</p>",
        "id": 128972170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547324
    },
    {
        "content": "<p>e.g., serde-check goes from a ratio of 1.33 to 1.2</p>",
        "id": 128972212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547394
    },
    {
        "content": "<p>seems like we should land it :)</p>",
        "id": 128972220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547422
    },
    {
        "content": "<p>though it may be interesting to experiment with further stuff</p>",
        "id": 128972229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547439
    },
    {
        "content": "<p>since it looks like it's just clap, it could be a bit of noise as well</p>",
        "id": 128972314,
        "sender_full_name": "lqd",
        "timestamp": 1530547538
    },
    {
        "content": "<p>could be, although I saw it too</p>",
        "id": 128972317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547544
    },
    {
        "content": "<p>it turns out that this version of clap is quite different from the current one</p>",
        "id": 128972366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547567
    },
    {
        "content": "<p>we should test with \"real clap\" too</p>",
        "id": 128972371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547573
    },
    {
        "content": "<p>this particular one is a historical artifact that used to cause some kind of perf pathology during MIR construction</p>",
        "id": 128972386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547590
    },
    {
        "content": "<p>yeah even though it's code from the real world, it was pinpointing a defect much like the other synthetized stress tests</p>",
        "id": 128972445,
        "sender_full_name": "lqd",
        "timestamp": 1530547658
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 128972682,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530547868
    },
    {
        "content": "<p>I'm inclined to r+, unless you want to cleanup the history <span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span></p>",
        "id": 128972762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547933
    },
    {
        "content": "<p>it needs a rebase anyway</p>",
        "id": 128972777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547948
    },
    {
        "content": "<p>I rebased <a href=\"https://github.com/rust-lang/rust/pull/51896\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51896\">https://github.com/rust-lang/rust/pull/51896</a> and r+'d it with p=1</p>",
        "id": 128972782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547952
    },
    {
        "content": "<p>since you were building on that</p>",
        "id": 128972783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547954
    },
    {
        "content": "<p>so hopefully it'll land in a few hours</p>",
        "id": 128972788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547962
    },
    {
        "content": "<p>(it's currently next in the queue)</p>",
        "id": 128972802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547978
    },
    {
        "content": "<p>Yes, let me clean history and fix conflicts. Will do that once I reach home :)</p>",
        "id": 128972890,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530548095
    },
    {
        "content": "<p>thanks for your work on this</p>",
        "id": 128972903,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530548116
    },
    {
        "content": "<blockquote>\n<p>thanks for your work on this</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  no, thank you, I just did what you instructed. I am very beginner in rust itself :)</p>",
        "id": 128976091,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530551690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> now that <a href=\"https://github.com/rust-lang/rust/pull/51869\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51869\">https://github.com/rust-lang/rust/pull/51869</a> has landed, shouldn't the IdxSet::clone_from  be a call to overwrite ?</p>",
        "id": 128980583,
        "sender_full_name": "lqd",
        "timestamp": 1530556728
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  checking</p>",
        "id": 128980854,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530557049
    },
    {
        "content": "<p>(yes, probably)</p>",
        "id": 128980868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530557071
    },
    {
        "content": "<p>left this review to point out the spot: <a href=\"https://github.com/rust-lang/rust/pull/51900#pullrequestreview-133736810\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51900#pullrequestreview-133736810\">https://github.com/rust-lang/rust/pull/51900#pullrequestreview-133736810</a></p>",
        "id": 128980921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530557153
    },
    {
        "content": "<p>(good catch <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>)</p>",
        "id": 128980958,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530557163
    },
    {
        "content": "<p>although I guess travis caught it too ;)</p>",
        "id": 128980974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530557172
    },
    {
        "content": "<p>I was about to say Travis did catch it before I did :)</p>",
        "id": 128980983,
        "sender_full_name": "lqd",
        "timestamp": 1530557187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> done!</p>",
        "id": 128981214,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530557473
    },
    {
        "content": "<p>jfyi <a href=\"https://github.com/rust-lang/rust/pull/51896\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51896\">https://github.com/rust-lang/rust/pull/51896</a> is pending on bors now</p>",
        "id": 128981222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530557503
    },
    {
        "content": "<p>so tonight/tomorrow you can rebase ;)</p>",
        "id": 128981227,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530557514
    },
    {
        "content": "<p>I dont' know what the cycle time is these days</p>",
        "id": 128981269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530557529
    },
    {
        "content": "<p>couple hours now IIRC</p>",
        "id": 128981297,
        "sender_full_name": "lqd",
        "timestamp": 1530557582
    },
    {
        "content": "<p>and it started 45mins ago, so not long now :)</p>",
        "id": 128981318,
        "sender_full_name": "lqd",
        "timestamp": 1530557623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116191\">@Pramod Bisht</span> ok go ahead and rebase :)</p>",
        "id": 128985189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530562933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> rebased with master.</p>",
        "id": 128985649,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530563507
    },
    {
        "content": "<p>r+</p>",
        "id": 128987370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530565476
    },
    {
        "content": "<p>Yes, let me clean history and fix conflicts. Will do that once I reach home :)</p>",
        "id": 129087177,
        "sender_full_name": "Pramod Bisht",
        "timestamp": 1530713570
    }
]