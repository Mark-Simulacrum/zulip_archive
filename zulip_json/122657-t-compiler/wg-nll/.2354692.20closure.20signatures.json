[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span> are you going to take a look at this?</p>",
        "id": 135208035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538677945
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  yes,  sounds interesting</p>",
        "id": 135208600,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1538678556
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span> I <em>think</em> it's blocking something else I'm working on. I can try to leave a few more tips if you like; I forget how much I wrote before</p>",
        "id": 135208934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538678932
    },
    {
        "content": "<p>additional information is always helpful, but it looks enough at least for beginning</p>",
        "id": 135209051,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1538679057
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I looked around, expected steps:<br>\n1. Store closure signatures in the tables in a new field<br>\n2. in MIR HAIR builder use it for unification during closure processing<br>\nI need some time to understand how it works because previously I didn't have a chance to touch this part of code</p>",
        "id": 135259961,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1538751622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span> that sounds correct, yes, let me know if there are particular things I should explain</p>",
        "id": 135261708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538753245
    },
    {
        "content": "<p>comments about the second step will be helpful because I need to check how this is implemented for functions</p>",
        "id": 135264809,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1538756591
    },
    {
        "content": "<p>ok so actually step 2 is a bit confused</p>",
        "id": 135265440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538757351
    },
    {
        "content": "<p>the MIR HAIR builder would simply <em>store</em> the user types somewhere in the <code>Mir</code> data structure (or elsewhere)</p>",
        "id": 135265482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538757364
    },
    {
        "content": "<p>and there is a step 3: extend NLL type checker to enforce them</p>",
        "id": 135265487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538757372
    },
    {
        "content": "<p>I will try to write up how it works now for some cases to show what I mean</p>",
        "id": 135265492,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538757378
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , I stuck a little with choosing a right type for storing closure signatures in the tables, I have three options now:</p>\n<ul>\n<li>FnSig</li>\n<li>PolyFnSig</li>\n<li>Ty maybe  CanonicalTy</li>\n</ul>\n<p>after a signature is  added in typeck/check/close.rs, it's inserted to tcx tables in <a href=\"http://writeback.rs\" target=\"_blank\" title=\"http://writeback.rs\">writeback.rs</a>, and I'am going to use it in <a href=\"http://unversal_region.rs\" target=\"_blank\" title=\"http://unversal_region.rs\">unversal_region.rs</a> <code>UniversalRegionsBuilder::build</code> inside <code>replace_bound_regions_with_nll_infer_vars</code> same way as for a common function. </p>\n<p>I'm not going to touch HAIR or MIR generation, but may be I missed something.</p>\n<p>But now I cannot find how to change 'UniversalRegionsBuilder::defining_ty<code> to returns closure </code>Ty`. It's not clear how to convert described above types. Or may be all approach for second part is wrong...</p>",
        "id": 135607197,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1539263845
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span></p>",
        "id": 135626464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539282253
    },
    {
        "content": "<p>hmm so I think that we want to be preserved a <code>PolyFnSig</code> — specifically the <code>supplied_sig</code> <a href=\"https://github.com/rust-lang/rust/blob/1c5e9c68ea6c76fe400528de17ebe03e338bac68/src/librustc_typeck/check/closure.rs#L533\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/1c5e9c68ea6c76fe400528de17ebe03e338bac68/src/librustc_typeck/check/closure.rs#L533\">returned here</a></p>",
        "id": 135627289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539283105
    },
    {
        "content": "<p>we would canonicalize it, presumably, to make a <code>Canonical&lt;PolyFnSig&gt;</code></p>",
        "id": 135627336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539283153
    },
    {
        "content": "<p>I would think we want to store that into the <a href=\"https://github.com/rust-lang/rust/blob/1c5e9c68ea6c76fe400528de17ebe03e338bac68/src/librustc/mir/mod.rs#L75\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/1c5e9c68ea6c76fe400528de17ebe03e338bac68/src/librustc/mir/mod.rs#L75\">MIR definition</a>, something like <code>user_supplied_sig: Option&lt;Canonical&lt;PolyFnSig&gt;&gt;&gt;</code></p>",
        "id": 135627366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539283199
    },
    {
        "content": "<p>then the NLL type-checker would read it from there</p>",
        "id": 135627408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539283204
    },
    {
        "content": "<p>but this is mostly because I want to try and make the MIR relatively self-contained; I <em>suppose</em> you could fetch it with a query instead</p>",
        "id": 135627420,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539283221
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> sorry but I cannot find a right way how to use a stored closure signature, I am tried to use it here <a href=\"https://github.com/rust-lang/rust/blob/2a5de33193b4a96af0af7faff2a8b6d6f1b5989f/src/librustc_mir/borrow_check/nll/universal_regions.rs#L584\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/2a5de33193b4a96af0af7faff2a8b6d6f1b5989f/src/librustc_mir/borrow_check/nll/universal_regions.rs#L584\">https://github.com/rust-lang/rust/blob/2a5de33193b4a96af0af7faff2a8b6d6f1b5989f/src/librustc_mir/borrow_check/nll/universal_regions.rs#L584</a> but the code expects a closure signature with arguments as a tuple, and I cannot find a right way how to convert it in my case or may be I just should make an other branch.</p>",
        "id": 135832655,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1539611973
    },
    {
        "content": "<p>hmm</p>",
        "id": 135841256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539619566
    },
    {
        "content": "<p>do you have a branch containing what you did so far <span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span>?</p>",
        "id": 135841270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539619582
    },
    {
        "content": "<p>yep, but it's contains planty of ugly <code>debug!</code> calls because i didn't plan to share it, please ignore it  - <a href=\"https://github.com/mikhail-m1/rust/commit/627ed91b1d75b7ee8e4850930b9339b21c08fc73\" target=\"_blank\" title=\"https://github.com/mikhail-m1/rust/commit/627ed91b1d75b7ee8e4850930b9339b21c08fc73\">https://github.com/mikhail-m1/rust/commit/627ed91b1d75b7ee8e4850930b9339b21c08fc73</a></p>",
        "id": 135842007,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1539620312
    },
    {
        "content": "<p>I'll take a look today</p>",
        "id": 135900726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539697533
    },
    {
        "content": "<p>thanks, I've amended the commit <a href=\"https://github.com/mikhail-m1/rust/commit/52847dfac566a4ffbb830aad92448f0791ef3a8c\" target=\"_blank\" title=\"https://github.com/mikhail-m1/rust/commit/52847dfac566a4ffbb830aad92448f0791ef3a8c\">https://github.com/mikhail-m1/rust/commit/52847dfac566a4ffbb830aad92448f0791ef3a8c</a> but it doesn't work</p>",
        "id": 135902388,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1539699123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span> so I had planned to do a bit of coding on this but I didn't get to it — I think though your problem is that you shouldn't (I don't thnk) be editing <code>universal_regions.rs</code> at all</p>",
        "id": 135932144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539726601
    },
    {
        "content": "<p>rather, I expect you to extract the user-provided fn sig <a href=\"https://github.com/rust-lang/rust/blob/8a7048b72b7e9499dfae3f946baa92fc9e62a6b8/src/librustc_mir/borrow_check/nll/type_check/input_output.rs#L30-L35\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/8a7048b72b7e9499dfae3f946baa92fc9e62a6b8/src/librustc_mir/borrow_check/nll/type_check/input_output.rs#L30-L35\">somewhere in this function</a></p>",
        "id": 135932199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539726642
    },
    {
        "content": "<p>and then to \"instantiate\" the canonical signature into variables and do the unification</p>",
        "id": 135932209,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539726655
    },
    {
        "content": "<p>though that last step will be easier once <a href=\"https://github.com/rust-lang/rust/pull/55093\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55093\">https://github.com/rust-lang/rust/pull/55093</a> lands</p>",
        "id": 135932220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539726669
    },
    {
        "content": "<p>Do you think anyone would object to me raising the priority on that PR?</p>",
        "id": 135932245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539726714
    },
    {
        "content": "<p>I guess everyone has work they're stressed about landing in time for RC2</p>",
        "id": 135932300,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539726743
    },
    {
        "content": "<p>Thanks, I will try it tomorrow. I can merge the PR to my branch.</p>",
        "id": 135932431,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1539726869
    },
    {
        "content": "<blockquote>\n<p>Do you think anyone would object to me raising the priority on that PR?</p>\n</blockquote>\n<p>I already did :)</p>",
        "id": 135932712,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539727164
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  it's interesting after rebase to <a href=\"https://github.com/rust-lang/rust/issues/55093\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55093\">#55093</a> by code just starts work. But I am trying to move it to <code>equate_inputs_and_outputs</code> from univeral_regions but I have the same problem, I don't know how to convert <code>PolyFnSig</code> to <code>Ty</code>.</p>",
        "id": 136004576,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1539814476
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span> so what we have to do is not to convert the polyfnsig into a type per se, but rather to (a) liberate the bound regions, yielding a <code>FnSig</code> (\"liberate\" meaning to replace them with suitable free regions) and then (b) relate the type of each argument from <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/sty/struct.FnSig.html#method.inputs\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/sty/struct.FnSig.html#method.inputs\">the <code>inputs</code> field</a> to the corresponding type of the MIR argument</p>",
        "id": 136030717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539855493
    },
    {
        "content": "<p>jfyi I may have a bit of time today and can take a look at a branch if you want (and/or hack on this)</p>",
        "id": 136030729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539855515
    },
    {
        "content": "<p>(this is listed as an RC2 blocker, but I wonder <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> if we should demote it..?)</p>",
        "id": 136067544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539892607
    },
    {
        "content": "<p>it will want to be backported but doesn't seem like it will be so terrible</p>",
        "id": 136067545,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539892620
    },
    {
        "content": "<p>Demotion .... seems okay ....</p>",
        "id": 136075824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539901442
    },
    {
        "content": "<p>sorry, but looks like it's better to reassign this issue to someone else, I tried to find a way how to fix it but I didn't have enough time and next week will be the same. Sorry again for a taken time</p>",
        "id": 136075906,
        "sender_full_name": "mikhail-m1",
        "timestamp": 1539901541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116925\">@mikhail-m1</span> np at all! I'll take a look</p>",
        "id": 136101821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539943758
    },
    {
        "content": "<p>posted <a href=\"https://github.com/rust-lang/rust/pull/55229\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55229\">https://github.com/rust-lang/rust/pull/55229</a></p>",
        "id": 136177144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1540055976
    }
]