[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I wrote up some mentoring instructions <a href=\"https://github.com/rust-lang/rust/issues/51641#issuecomment-398534351\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51641#issuecomment-398534351\">on issue #51641</a></p>",
        "id": 128326507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529440304
    },
    {
        "content": "<p>let me know if they make sense :)</p>",
        "id": 128326513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529440313
    },
    {
        "content": "<p>oh awesome thank you, I will surely need them :)</p>",
        "id": 128326562,
        "sender_full_name": "lqd",
        "timestamp": 1529440354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah makes sense :)</p>",
        "id": 128326799,
        "sender_full_name": "lqd",
        "timestamp": 1529440621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hello :) couple note/questions: <br>\n- I was going to 1st remove the quadratic loop like you suggested in the instructions, before looking at gathering information on what it fixes, and how to do that in another existing walk or else, is that ok ?<br>\n- do I need to do anything with <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/collect_writes.rs#L60-L61\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/collect_writes.rs#L60-L61\">these TODOs</a> in our new visitor ? copy these comments ?<br>\n- I assume I should put the visitor in borrow_check/mod.rs ?<br>\n- I planned on adding a method to the MirBorrowckContext to find the used muts, however it's divided into 3 impls in this file, should I just put my method in the 1st one ? :)<br>\n- my planned visitor looks like the following, does this match what you were expecting ?</p>\n<div class=\"codehilite\"><pre><span></span>struct FindUsedMutsVisitor&lt;&#39;visit, &#39;cx: &#39;visit, &#39;gcx: &#39;tcx, &#39;tcx: &#39;cx&gt; {\n    needles: FxHashSet&lt;Local&gt;,\n    mbcx: &amp;&#39;visit mut MirBorrowckCtxt&lt;&#39;cx, &#39;gcx, &#39;tcx&gt;,\n}\n</pre></div>\n\n\n<ul>\n<li>if the previous answer is yes, then the bulk of the work is done, and I'm seeing the numbers we expected on clap</li>\n</ul>",
        "id": 128363215,
        "sender_full_name": "lqd",
        "timestamp": 1529502314
    },
    {
        "content": "<p>first, I would put the new code in a submodule :)</p>",
        "id": 128363811,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529503047
    },
    {
        "content": "<blockquote>\n<p>before looking at gathering information on what it fixes, and how to do that in another existing walk or else, is that ok ?</p>\n</blockquote>\n<p>yes, definitely</p>",
        "id": 128363819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529503066
    },
    {
        "content": "<blockquote>\n<ul>\n<li>do I need to do anything with these TODOs in our new visitor ? copy these comments ?</li>\n</ul>\n</blockquote>\n<p>meh, just delete. Not sure why that's even there.</p>",
        "id": 128363865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529503086
    },
    {
        "content": "<blockquote>\n<ul>\n<li>I planned on adding a method to the MirBorrowckContext to find the used muts, however it's divided into 3 impls in this file, should I just put my method in the 1st one ? :)</li>\n</ul>\n</blockquote>\n<p>I'm not sure I understand.. I think the answer though is:</p>\n<ul>\n<li>You should make a new module and put visitor etc in there</li>\n<li>Add a \"wrapper method\" that creates the visitor and does the walk, which is the public thing from the file</li>\n</ul>\n<p>sort of:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// new_mod.rs</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">MirBorrowckCtxt</span><span class=\"o\">&lt;</span><span class=\"p\">..</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">gather_stuff</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Visitor</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Visitor</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">Visitor</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">MirVisitor</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Visitor</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 128363888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529503155
    },
    {
        "content": "<p>that visitor looks about right yes</p>",
        "id": 128363892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529503171
    },
    {
        "content": "<p>what I mean with the 3 impls is this: 1) <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L793\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L793\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L793</a> 2) <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L1394\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L1394\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L1394</a> and 3) <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L2139\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L2139\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L2139</a></p>",
        "id": 128363995,
        "sender_full_name": "lqd",
        "timestamp": 1529503312
    },
    {
        "content": "<p>so I was wondering why MirBorrowckCtxt was split in 3, but I guess it's for readability</p>",
        "id": 128364173,
        "sender_full_name": "lqd",
        "timestamp": 1529503523
    },
    {
        "content": "<p>I personally think <code>borrow_check/mod.rs</code> has grown way beyond the size it should have :)</p>",
        "id": 128366056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506090
    },
    {
        "content": "<p>but often we do divide up methods by \"theme\"</p>",
        "id": 128366062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506097
    },
    {
        "content": "<p>I tend to prefer do that in distinct modules</p>",
        "id": 128366065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506106
    },
    {
        "content": "<p>not within one file :)</p>",
        "id": 128366068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506109
    },
    {
        "content": "<p>my guess is that those 3 impls arose...organically, let's say</p>",
        "id": 128366074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506119
    },
    {
        "content": "<p>I think this code is somewhat in need of reorg</p>",
        "id": 128366077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506124
    },
    {
        "content": "<p>it's been evolving a lot and with a lot of distinct people doing PRs etc =)</p>",
        "id": 128366086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506133
    },
    {
        "content": "<p>:)</p>",
        "id": 128366096,
        "sender_full_name": "lqd",
        "timestamp": 1529506152
    },
    {
        "content": "<p>that said, no reason to add to it</p>",
        "id": 128366099,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506163
    },
    {
        "content": "<p>hence my suggestion to isolate your changes to a distinct module</p>",
        "id": 128366100,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506168
    },
    {
        "content": "<p>they seem like a coherent unit to me...</p>",
        "id": 128366105,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506175
    },
    {
        "content": "<p>would <code>used_muts.rs</code> be a good name ? so that maybe in the future we can move the rest of the used mut lint there ?</p>",
        "id": 128366108,
        "sender_full_name": "lqd",
        "timestamp": 1529506182
    },
    {
        "content": "<p>+1</p>",
        "id": 128366111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506186
    },
    {
        "content": "<p>yeah, something like that</p>",
        "id": 128366113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506191
    },
    {
        "content": "<p>I think in my ideal world there'd be a <code>used_mut</code> submodule with (probably) multiple further submodules</p>",
        "id": 128366164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506214
    },
    {
        "content": "<p>since I suspect there's enough complex logic that it merits it</p>",
        "id": 128366167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506220
    },
    {
        "content": "<p>but anyway</p>",
        "id": 128366170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529506226
    },
    {
        "content": "<p>yeah rn the module is 60 lines or so -- I think I'm almost done</p>",
        "id": 128366184,
        "sender_full_name": "lqd",
        "timestamp": 1529506274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I have to go now  but here is the PR <a href=\"https://github.com/rust-lang/rust/pull/51660\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51660\">https://github.com/rust-lang/rust/pull/51660</a></p>",
        "id": 128370205,
        "sender_full_name": "lqd",
        "timestamp": 1529511374
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I was wondering if we needed a perf run, so thanks for the try build :)</p>",
        "id": 128372208,
        "sender_full_name": "lqd",
        "timestamp": 1529514193
    },
    {
        "content": "<p>Don't need it but can't hurt.</p>",
        "id": 128372262,
        "sender_full_name": "simulacrum",
        "timestamp": 1529514256
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I left one minor nit but looks good</p>",
        "id": 128374936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529517952
    },
    {
        "content": "<p>oh the match on the PlaceContext ok</p>",
        "id": 128375348,
        "sender_full_name": "lqd",
        "timestamp": 1529518560
    },
    {
        "content": "<p>maybe there’s already a similar fn somewhere checking if a Place is an assignment ?</p>",
        "id": 128375599,
        "sender_full_name": "lqd",
        "timestamp": 1529518847
    },
    {
        "content": "<p>I feel like .. sort of maybe? check the liveness code perhaps?</p>",
        "id": 128375874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529519258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I was thinking of <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/liveness.rs#L229-L229\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/liveness.rs#L229-L229\">this fn</a></p>",
        "id": 128375928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529519304
    },
    {
        "content": "<p>thanks, I will check it out once I’m back to the computer</p>",
        "id": 128376497,
        "sender_full_name": "lqd",
        "timestamp": 1529519997
    },
    {
        "content": "<p>if I extracted matching <code>PlaceContext::Call</code> and <code>PlaceContext::Store</code> into a separate fn used by <code>collect_writes</code>, <code>used_muts</code>, and <code>liveness:categorize</code>, I wouldn't know where to keep <a href=\"https://github.com/rust-lang/rust/blob/637fd2e0487281adac99000602f5e74c3bf151a8/src/librustc_mir/util/liveness.rs#L239-L246\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/637fd2e0487281adac99000602f5e74c3bf151a8/src/librustc_mir/util/liveness.rs#L239-L246\">this comment</a> which seems important if in the future the success and unwind paths are handled differently ?</p>",
        "id": 128385092,
        "sender_full_name": "lqd",
        "timestamp": 1529530451
    },
    {
        "content": "<p>I can at the very least share the whole thing with <code>find_assignments</code> easily</p>",
        "id": 128385977,
        "sender_full_name": "lqd",
        "timestamp": 1529531728
    },
    {
        "content": "<p>maybe just do that for now... though I think you could just call the def/use categorizer as is</p>",
        "id": 128386040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529531773
    },
    {
        "content": "<p>and look for Defs</p>",
        "id": 128386044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529531776
    },
    {
        "content": "<p>and consider that to be an assignment</p>",
        "id": 128386046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529531780
    },
    {
        "content": "<p>and leave the comment where it is :)</p>",
        "id": 128386050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529531784
    },
    {
        "content": "<p>even if collect_writes didn't look for AsmOutput or Storage* ?</p>",
        "id": 128386083,
        "sender_full_name": "lqd",
        "timestamp": 1529531833
    },
    {
        "content": "<p>if so, <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 128386091,
        "sender_full_name": "lqd",
        "timestamp": 1529531857
    },
    {
        "content": "<p>(oh maybe you meant calling the categorizer in used_mut only)</p>",
        "id": 128386432,
        "sender_full_name": "lqd",
        "timestamp": 1529532304
    },
    {
        "content": "<blockquote>\n<p>even if collect_writes didn't look for AsmOutput or Storage* ?</p>\n</blockquote>\n<p>hmm, <code>AsmOutput</code> seems ok -- maybe even a bug that we were ignored it -- but the storage stuff is a bit questionable</p>",
        "id": 128408213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572346
    },
    {
        "content": "<p>tbh <code>StorageDead</code> and friends don't seem like a \"def\" or a \"use\"</p>",
        "id": 128408219,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572367
    },
    {
        "content": "<p>I think we don't really need collect_writes really, it might have been made for that loop mostly. Where <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L1873-L1875\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L1873-L1875\">it's used</a> it only needs the first location</p>",
        "id": 128408388,
        "sender_full_name": "lqd",
        "timestamp": 1529572648
    },
    {
        "content": "<p>what is <code>collect_writes</code>?</p>",
        "id": 128408485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572781
    },
    {
        "content": "<p>do you mean <code>find_assignments</code>?</p>",
        "id": 128408487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572786
    },
    {
        "content": "<p>yeah find_assignments, which is in  util/collect_writes.rs</p>",
        "id": 128408540,
        "sender_full_name": "lqd",
        "timestamp": 1529572813
    },
    {
        "content": "<p>hmm. maybe so. I'm not convinced that ignoring other writes is correct in that code...maybe it is...</p>",
        "id": 128408563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572848
    },
    {
        "content": "<p>but it seems like in general it's a footgun to walk ALL the IR</p>",
        "id": 128408572,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572861
    },
    {
        "content": "<p>yeah</p>",
        "id": 128408600,
        "sender_full_name": "lqd",
        "timestamp": 1529572915
    },
    {
        "content": "<p>I'd be ok with changing to <code>find_some_assignment</code> or something like that</p>",
        "id": 128408836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529573101
    },
    {
        "content": "<p>I'm not sure finding storage* locations in the single use of find_assignment will have no impact so I'm not sure what to do about that. I was in the meantime running the tests on using the categorizer only in the new gather_used_mut</p>",
        "id": 128408848,
        "sender_full_name": "lqd",
        "timestamp": 1529573133
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> btw  <a href=\"http://perf.rust-lang.org/compare.html?start=637fd2e0487281adac99000602f5e74c3bf151a8&amp;end=737c5cc95040e9efce65cb13a51a0df0f842cef4&amp;stat=instructions%3Au\" target=\"_blank\" title=\"http://perf.rust-lang.org/compare.html?start=637fd2e0487281adac99000602f5e74c3bf151a8&amp;end=737c5cc95040e9efce65cb13a51a0df0f842cef4&amp;stat=instructions%3Au\">http://perf.rust-lang.org/compare.html?start=637fd2e0487281adac99000602f5e74c3bf151a8&amp;end=737c5cc95040e9efce65cb13a51a0df0f842cef4&amp;stat=instructions%3Au</a></p>",
        "id": 128408944,
        "sender_full_name": "lqd",
        "timestamp": 1529573244
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> it's fine to just have two methods for now</p>",
        "id": 128408994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529573308
    },
    {
        "content": "<p>that is, we don't <em>have</em> to consolidate with the helper from liveness</p>",
        "id": 128408995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529573318
    },
    {
        "content": "<p>it feels like a separate PR</p>",
        "id": 128408997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529573323
    },
    {
        "content": "<p>ok yeah</p>",
        "id": 128408999,
        "sender_full_name": "lqd",
        "timestamp": 1529573330
    },
    {
        "content": "<p>also, nice results</p>",
        "id": 128409001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529573334
    },
    {
        "content": "<p>maybe as a later phase when we can consolidate into another walk</p>",
        "id": 128409005,
        "sender_full_name": "lqd",
        "timestamp": 1529573342
    },
    {
        "content": "<p>I tried removing the loop and it seemed like only <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/run-pass/issue-16671.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/run-pass/issue-16671.rs\">this test</a> failed</p>",
        "id": 128409014,
        "sender_full_name": "lqd",
        "timestamp": 1529573378
    },
    {
        "content": "<p>so something like a <code>is_place_assignment</code> in util/collect_writes.rs would be ok ?</p>",
        "id": 128409152,
        "sender_full_name": "lqd",
        "timestamp": 1529573583
    },
    {
        "content": "<p>sounds good</p>",
        "id": 128409639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529574306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I should also make this fn say AsmOutput is an assignment shouldn't I, here it's like a Store to me</p>",
        "id": 128411821,
        "sender_full_name": "lqd",
        "timestamp": 1529578330
    },
    {
        "content": "<p>so I did that and pushed the shared function to <a href=\"https://github.com/rust-lang/rust/pull/51660\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51660\">https://github.com/rust-lang/rust/pull/51660</a> :)</p>",
        "id": 128414684,
        "sender_full_name": "lqd",
        "timestamp": 1529583250
    },
    {
        "content": "<p>sweet, the PR landed</p>",
        "id": 128466843,
        "sender_full_name": "lqd",
        "timestamp": 1529664463
    },
    {
        "content": "<p>nice</p>",
        "id": 128474694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529676619
    }
]