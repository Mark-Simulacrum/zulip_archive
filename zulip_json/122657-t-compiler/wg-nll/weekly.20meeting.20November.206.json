[
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"491\">@WG-compiler-nll</span></p>",
        "id": 146892105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536324
    },
    {
        "content": "<p>sorry I'm a little late (and I failed to send a note earlier like I normally do)</p>",
        "id": 146892116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536342
    },
    {
        "content": "<p>so I don't know if we'll see <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> today, since they are busy at SPLASH</p>",
        "id": 146892163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536416
    },
    {
        "content": "<p>but I'm hoping there isn't too much that would need their attention anyway...</p>",
        "id": 146892230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536448
    },
    {
        "content": "<p>I went through the list of <a href=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage--ARI~s_vcluCqIAV279~5_vX8Ag-Em2cJrvxQMMFWLE7lE5Be\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage--ARI~s_vcluCqIAV279~5_vX8Ag-Em2cJrvxQMMFWLE7lE5Be\">NLL triage</a> topics earlier today, as you can see if you go look at the <a href=\"#narrow/stream/122657-wg-nll/subject/making.20plans\" title=\"#narrow/stream/122657-wg-nll/subject/making.20plans\">\"making plans\"</a> topic from earlier today</p>",
        "id": 146892259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536495
    },
    {
        "content": "<p>the main two things from that exercise are the following</p>",
        "id": 146892299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536541
    },
    {
        "content": "<p>1. who can/should we assign to resolve each of the <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AA-NLL+-label%3ANLL-deferred+-label%3ANLL-fixed-by-NLL+no%3Aassignee+milestone%3A%22Rust+2018+Release%22\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AA-NLL+-label%3ANLL-deferred+-label%3ANLL-fixed-by-NLL+no%3Aassignee+milestone%3A%22Rust+2018+Release%22\">two issues</a> that are currently on the Release milestone?</p>",
        "id": 146892364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536581
    },
    {
        "content": "<p>2. what P-level should we assign to \"[regression - rust2018]: unused_mut lint false positives on nightly\" <a href=\"https://github.com/rust-lang/rust/issues/55344\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55344\">#55344</a></p>",
        "id": 146892392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536607
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/54943\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54943\">#54943</a> doesn't apply to migrate mode</p>",
        "id": 146892398,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541536614
    },
    {
        "content": "<p>it doesn't?</p>",
        "id": 146892423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536634
    },
    {
        "content": "<p>things that compile in migrate mode and shouldn't seem like they apply to migrate mode, no?</p>",
        "id": 146892451,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536656
    },
    {
        "content": "<p>It doesn't compile in migrate mode, the same as with AST</p>",
        "id": 146892514,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541536690
    },
    {
        "content": "<p>(that is, my rule of thumb is that only issues that are NLL-complete get to go through the migration loophole) ... Or are you saying that since the migration mode does the old region checking, <a href=\"https://github.com/rust-lang/rust/issues/54943\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54943\">#54943</a> doesn't apply to it?</p>",
        "id": 146892524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536701
    },
    {
        "content": "<p>oh that's fantastic</p>",
        "id": 146892525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536702
    },
    {
        "content": "<p>woot</p>",
        "id": 146892527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536704
    },
    {
        "content": "<p>should it remain P-high ?</p>",
        "id": 146892574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536750
    },
    {
        "content": "<p>I glanced at the issues and didn't feel confident that I'd be able to make much headway on either.</p>",
        "id": 146892590,
        "sender_full_name": "davidtwco",
        "timestamp": 1541536765
    },
    {
        "content": "<p>oh man I even wrote a comment explaining all of this 3 weeks ago</p>",
        "id": 146892657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536805
    },
    {
        "content": "<p>It's probably higher priority that anything else NLL related that I currently have any plans to work on, if that's anything to go by.</p>",
        "id": 146892672,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541536818
    },
    {
        "content": "<p>okay I'm going to leave it as P-high</p>",
        "id": 146892703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536861
    },
    {
        "content": "<p>and I'll assign it to myself for now, to try to keep it properly on my radar</p>",
        "id": 146892825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541536960
    },
    {
        "content": "<p>I have to be up front though: I am going to go on leave once my twins are born, which will happen sometime in the next 5 to 10 days...</p>",
        "id": 146892965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537084
    },
    {
        "content": "<p>so anything that I take could quite likely get quickly unassigned from me</p>",
        "id": 146892978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537104
    },
    {
        "content": "<p>anyway,  I'll leave <a href=\"https://github.com/rust-lang/rust/issues/55511\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55511\">#55511</a> unassigned for now. Maybe I'll find time to look at it</p>",
        "id": 146892997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537126
    },
    {
        "content": "<p>The <em>other</em> topic then was what to do with \"[regression - rust2018]: unused_mut lint false positives on nightly\" <a href=\"https://github.com/rust-lang/rust/issues/55344\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55344\">#55344</a></p>",
        "id": 146893008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537144
    },
    {
        "content": "<p>personally I don't think it would be a disaster  if this takes a while to get addressed...</p>",
        "id": 146893091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537191
    },
    {
        "content": "<p>I could look into that.</p>",
        "id": 146893101,
        "sender_full_name": "davidtwco",
        "timestamp": 1541537208
    },
    {
        "content": "<p>I notice you're assigned, so only if you aren't already.</p>",
        "id": 146893112,
        "sender_full_name": "davidtwco",
        "timestamp": 1541537222
    },
    {
        "content": "<p>I think it would be good for you to take it</p>",
        "id": 146893141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537262
    },
    {
        "content": "<p>The only thing that we would fix is the lint?</p>",
        "id": 146893199,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541537288
    },
    {
        "content": "<p>I don't know</p>",
        "id": 146893208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537298
    },
    {
        "content": "<p>It depends on what strategy we take</p>",
        "id": 146893213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537307
    },
    {
        "content": "<p>Which requires some exploration of the options</p>",
        "id": 146893222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537321
    },
    {
        "content": "<p>one of the options I was considering was to have the various lints for the uses (or lack thereof) of a local variable not fire if the local variable's <em>declaration</em> is itself not reachable</p>",
        "id": 146893244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537356
    },
    {
        "content": "<p>(And maybe introduce a single new warning saying that the declaration is dead code.)</p>",
        "id": 146893326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537411
    },
    {
        "content": "<p>(at least, from what I can tell we <em>don't</em> do that today, and we could...)</p>",
        "id": 146893346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537432
    },
    {
        "content": "<p>But its also possible that any decision here would turn into a big bikeshed discussion. (with lots of stakeholders outside of NLL) :(</p>",
        "id": 146893355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537448
    },
    {
        "content": "<p>If we want to do more than that we should definitely have some idea before December</p>",
        "id": 146893366,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541537460
    },
    {
        "content": "<p>There's already an unreachable code lint</p>",
        "id": 146893377,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541537467
    },
    {
        "content": "<p>oh good point</p>",
        "id": 146893471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537532
    },
    {
        "content": "<p>I had misremembered and thought the unreachable code only complained about the assignment, but it does complain about the binding itself.</p>",
        "id": 146893489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537560
    },
    {
        "content": "<p>so maybe a 'fix\" here is easier than I thought:  make the unused_mut lint only fire if the declaration in question is also reachable (according to whatever logic the unreachable_code lint uses) ?</p>",
        "id": 146893533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537614
    },
    {
        "content": "<p>(here's my demo of it complaining about the binding itself: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=71bc31136387eed6ced2b3462d8494b8\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=71bc31136387eed6ced2b3462d8494b8\">play</a>)</p>",
        "id": 146893561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537642
    },
    {
        "content": "<p>There's also the issue of something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">sum_nan</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">assert_eq</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">assert_eq</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 146893688,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541537728
    },
    {
        "content": "<p>This would still be a \"regression\" in cases where the unreachable code itself does not contain any mutations of the local (and thus one might argue that the <code>unused_mut</code> lint \"should\" fire) ; as demonstratred here <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=0c80c87a3b0d9ac547528ee6dae4b872\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=0c80c87a3b0d9ac547528ee6dae4b872\">play</a></p>",
        "id": 146893705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>  your example still fires warning: variable does not need to be mutable under the 2015 edition.</p>",
        "id": 146893801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537814
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=46928cd7c01b70fd64bda318016c0bd0\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=46928cd7c01b70fd64bda318016c0bd0\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=46928cd7c01b70fd64bda318016c0bd0</a></p>",
        "id": 146893808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537820
    },
    {
        "content": "<p>Interesting</p>",
        "id": 146893856,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541537863
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> maybe part of the task for <a href=\"https://github.com/rust-lang/rust/issues/55344\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55344\">#55344</a> would be to engage with any potential stakeholders who work on these lints and get their input on what they think the \"right\" (or \"best\", or \"acceptable\") behavior is</p>",
        "id": 146893923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537891
    },
    {
        "content": "<p>Sure thing.</p>",
        "id": 146893945,
        "sender_full_name": "davidtwco",
        "timestamp": 1541537915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> yeah at this point I'm not sure I grok what is going on here</p>",
        "id": 146893947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541537918
    },
    {
        "content": "<p>okay well anyway I've managed to fill up 29 minutes with relative nonsense. :)</p>",
        "id": 146894057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541538002
    },
    {
        "content": "<p>Are there any topics you all wanted to discuss?</p>",
        "id": 146894116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541538016
    },
    {
        "content": "<p>No, I'll happily have another week not working on NLL compiler issues.</p>",
        "id": 146894314,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1541538165
    },
    {
        "content": "<p>okay then I'm going to call this meeting over. THanks you both for attending!</p>",
        "id": 146894613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541538384
    }
]