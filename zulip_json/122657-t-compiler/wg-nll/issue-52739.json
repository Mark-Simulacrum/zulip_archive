[
    {
        "content": "<p>I assume for <a href=\"https://github.com/rust-lang/rust/issues/52739\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52739\">#52739</a> (the example from the in-band-lifetimes topic) that this is experimenting with disabling some of the nice region errors?</p>",
        "id": 130355473,
        "sender_full_name": "davidtwco",
        "timestamp": 1532622059
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 130355492,
        "sender_full_name": "davidtwco",
        "timestamp": 1532622080
    },
    {
        "content": "<p>I also filed <a href=\"https://github.com/rust-lang/rust/issues/52742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52742\">https://github.com/rust-lang/rust/issues/52742</a></p>",
        "id": 130355510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> I think we should just disable the \"nice region errors\" altogether in NLL, at least as an experiment</p>",
        "id": 130355518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622116
    },
    {
        "content": "<p>I'd be curious to see the impact</p>",
        "id": 130355519,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622120
    },
    {
        "content": "<p>Sure thing.</p>",
        "id": 130355520,
        "sender_full_name": "davidtwco",
        "timestamp": 1532622122
    },
    {
        "content": "<p>Should I self-assign that issue too?</p>",
        "id": 130355572,
        "sender_full_name": "davidtwco",
        "timestamp": 1532622140
    },
    {
        "content": "<p>in particular, I think that maybe you can make a case that the <code>'1</code> errors are better even in cases where the nice region errors work perfectly -- the reason being consistency</p>",
        "id": 130355573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622140
    },
    {
        "content": "<p>sounds good</p>",
        "id": 130355576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622143
    },
    {
        "content": "<p>(but I'm not sure about)</p>",
        "id": 130355579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622149
    },
    {
        "content": "<p>I could imagine us wanting to port some of the \"nice regon error\" logic over to NLL in more restricted form</p>",
        "id": 130355617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622196
    },
    {
        "content": "<p>but first step is to turn them off and see the effects</p>",
        "id": 130355623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532622203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> here's the output from running all the UI tests without \"nice region errors\": <a href=\"https://gist.github.com/davidtwco/49400ddc324fcdd809eaed7886d153a7\" target=\"_blank\" title=\"https://gist.github.com/davidtwco/49400ddc324fcdd809eaed7886d153a7\">https://gist.github.com/davidtwco/49400ddc324fcdd809eaed7886d153a7</a></p>\n<p>There are certainly some cases where it's a straight improvement:</p>\n<div class=\"codehilite\"><pre><span></span>-   error[E0621]: explicit lifetime required in the type of `x`\n+   error: unsatisfied lifetime constraints\n8     --&gt; $DIR/impl-trait-captures.rs:21:5\n9      |\n10  LL | fn foo&lt;&#39;a, T&gt;(x: &amp;T) -&gt; impl Foo&lt;&#39;a&gt; {\n\n-      |               - consider changing the type of `x` to `&amp;ReEarlyBound(0, &#39;a) T`\n+      |                  - let&#39;s call the lifetime of this reference `&#39;1`\n12  LL |     x\n-      |     ^ lifetime `ReEarlyBound(0, &#39;a)` required\n+      |     ^ return requires that `&#39;1` must outlive `&#39;a`\n14\n15  error: aborting due to previous error\n16\n\n-   For more information about this error, try `rustc --explain E0621`.\n18\n</pre></div>\n\n\n<p>But there are others where I'm not sure. We can take a look and work out whether some of the nice region errors are worth keeping - I'm not great at deciding what is or isn't a good diagnostic.</p>",
        "id": 130413556,
        "sender_full_name": "davidtwco",
        "timestamp": 1532701489
    },
    {
        "content": "<p>I like the <em>concept</em> of \"let's call the lifetime of this reference <code>'1</code>\"; wonder if there's a slightly less informal phrasing...</p>",
        "id": 130414485,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1532702490
    },
    {
        "content": "<p>Removing <code>ReEarlyBound</code> is a strong improvement ;-)</p>",
        "id": 130414545,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1532702524
    },
    {
        "content": "<p>Wrote up some thoughts I have on the three different types of nice region error (as far as I can tell, that's how many there are) in this document:<br>\n<a href=\"https://paper.dropbox.com/doc/NLL-Nice-Region-Errors--AItgZNRfVxL1lME1ynRELQyAAQ-Ci1DqrXWuM1mVO0CMGkCS\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/NLL-Nice-Region-Errors--AItgZNRfVxL1lME1ynRELQyAAQ-Ci1DqrXWuM1mVO0CMGkCS\">https://paper.dropbox.com/doc/NLL-Nice-Region-Errors--AItgZNRfVxL1lME1ynRELQyAAQ-Ci1DqrXWuM1mVO0CMGkCS</a></p>",
        "id": 130434027,
        "sender_full_name": "davidtwco",
        "timestamp": 1532723449
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> that one you quoted isn't a real test, because it includes <code>-Z verbose</code> in the compile-flags, which is why we print the <code>ReEarlyBound</code></p>",
        "id": 130449598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532750436
    },
    {
        "content": "<p>iirc</p>",
        "id": 130449599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532750446
    },
    {
        "content": "<p>I'll skim the results; I think that the nice-error-messages (and to a lesser extent our new ones) also suffer from the problem sometimes of not giving you enough info. In particular, I've gotten suggests like \"consider changing the type of <code>tcx</code> to <code>TyCtxt&lt;'tcx, 'tcx, 'tcx&gt;</code> -- which I <em>know</em> is wrong, and I wish it would just tell me <em>why</em> it thinks I should do that</p>",
        "id": 130449650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532750541
    },
    {
        "content": "<p>Ah, should've noticed that.</p>",
        "id": 130457100,
        "sender_full_name": "davidtwco",
        "timestamp": 1532767097
    },
    {
        "content": "<p>this is an interesting one</p>\n<div class=\"codehilite\"><pre><span></span>4   LL |     &amp;*x\n5      |     ^^^\n6\n<span class=\"gd\">-   error[E0623]: lifetime mismatch</span>\n<span class=\"gi\">+   error: unsatisfied lifetime constraints</span>\n8     --&gt; $DIR/region-lbr1-does-not-outlive-ebr2.rs:19:5\n9      |\n<span class=\"gd\">-   LL | fn foo&lt;&#39;a, &#39;b&gt;(x: &amp;&#39;a u32, y: &amp;&#39;b u32) -&gt; &amp;&#39;b u32 {</span>\n<span class=\"gd\">-      |                   -------                 -------</span>\n<span class=\"gd\">-      |                   |</span>\n<span class=\"gd\">-      |                   this parameter and the return type are declared with different lifetimes...</span>\n14  LL |     &amp;*x\n<span class=\"gd\">-      |     ^^^ ...but data from `x` is returned here</span>\n<span class=\"gi\">+      |     ^^^ requires that `&#39;a` must outlive `&#39;b`</span>\n16\n17  error: aborting due to previous error\n18\n\n<span class=\"gd\">-   For more information about this error, try `rustc --explain E0623`.</span>\n20\n</pre></div>",
        "id": 130466963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532783542
    },
    {
        "content": "<p>that is the specific message where I think -- in general -- the new-style messages are superior, as they give more info</p>",
        "id": 130466975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532783569
    },
    {
        "content": "<p>though I think maybe a \"medley\" would be even better</p>",
        "id": 130466980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532783583
    },
    {
        "content": "<p>e.g.</p>\n<div class=\"codehilite\"><pre><span></span>-   error[E0623]: lifetime mismatch\n8     --&gt; $DIR/region-lbr1-does-not-outlive-ebr2.rs:19:5\n9      |\n    LL | fn foo&lt;&#39;a, &#39;b&gt;(x: &amp;&#39;a u32, y: &amp;&#39;b u32) -&gt; &amp;&#39;b u32 {\n       |                   -                       -\n       |                   |\n       |                   these two references have different lifetimes\n14  LL |     &amp;*x\n       |     ^^^ ...but data from `x` is returned here\n16\n17  error: aborting due to previous error\n18\n</pre></div>",
        "id": 130467043,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532783663
    },
    {
        "content": "<p>er, I don't know, in this case it doesn't matter so much. I am more thinking of cases though where the type is more complex</p>",
        "id": 130467056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532783683
    },
    {
        "content": "<p>alternatively, in the new style message, it might be nice if we would highlight the <code>'a</code> in the reference</p>",
        "id": 130467070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532783705
    },
    {
        "content": "<p>even though we have a proper name to use</p>",
        "id": 130467075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532783709
    },
    {
        "content": "<p>Yeah, for that example, new errors would be better if they highlighted the arguments like the nice region errors do.</p>",
        "id": 130470118,
        "sender_full_name": "davidtwco",
        "timestamp": 1532788104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what would you like me to do for this issue (and <a href=\"https://github.com/rust-lang/rust/issues/52742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52742\">#52742</a>)? - I've got time this week to work on a PR but not sure how we want to address this issue.</p>",
        "id": 130572188,
        "sender_full_name": "davidtwco",
        "timestamp": 1532950657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> I don't know exactly either. I was considering trying to re-implement the nice-region-errors but adjust them? I guess we have to study that gist of yours with the diff from turning them off and decide what to keep and what not</p>",
        "id": 130578814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1532957233
    }
]