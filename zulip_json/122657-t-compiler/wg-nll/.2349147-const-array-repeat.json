[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> btw... in <a href=\"https://github.com/rust-lang/rust/pull/57045\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/57045\">https://github.com/rust-lang/rust/pull/57045</a> <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>  used <code>MaybeUninit::uninitialized().into_inner()</code>to go from <code>MaybeUninit&lt;[MaybeUninit; N]&gt;</code> to <code>[MaybeUninit; N]</code> which made me think of <a href=\"https://github.com/rust-lang/rust/issues/49147\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49147\">https://github.com/rust-lang/rust/issues/49147</a>... which in turn is blocked on making MIR borrowck the default... Is this unblocked now?</p>",
        "id": 152338063,
        "sender_full_name": "centril",
        "timestamp": 1545406454
    },
    {
        "content": "<p>MIR-borrowck is only the default on 2018 edition.</p>",
        "id": 152338148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406544
    },
    {
        "content": "<p>I assume <a href=\"https://github.com/rust-lang/rust/issues/49147\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49147\">#49147</a> would have an effect on both 2015 and 2018 editions?</p>",
        "id": 152338211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406579
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  alright... so uhm; its unblocked for implementation on 2018 then? or should we wait before MIR-borrowck is extended to 2015 as well?</p>",
        "id": 152338230,
        "sender_full_name": "centril",
        "timestamp": 1545406609
    },
    {
        "content": "<p>yeah it would, but maybe we can experiment on 2018 only for now?</p>",
        "id": 152338237,
        "sender_full_name": "centril",
        "timestamp": 1545406621
    },
    {
        "content": "<p>(we do have other features that are only enabled when NLL is turned on. Namely <code>#![feature(bind_by_move_pattern_guards)]</code>; see PR <a href=\"https://github.com/rust-lang/rust/issues/54034\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54034\">#54034</a> )</p>",
        "id": 152338276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> haha; implemented 4 years later =P <span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 152338380,
        "sender_full_name": "centril",
        "timestamp": 1545406749
    },
    {
        "content": "<p>So, assuming 1. <a href=\"https://github.com/rust-lang/rust/issues/49147\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49147\">#49147</a> would continue to have its own feature gate and 2. <a href=\"https://github.com/rust-lang/rust/issues/49147\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49147\">#49147</a> is truly only blocked by NLL, then I would not be opposed to treating it analogously to <a href=\"https://github.com/rust-lang/rust/issues/54034\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54034\">#54034</a></p>",
        "id": 152338406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> btw... is <a href=\"https://github.com/rust-lang/rust/issues/54034\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54034\">#54034</a> stable on 2018?</p>",
        "id": 152338489,
        "sender_full_name": "centril",
        "timestamp": 1545406843
    },
    {
        "content": "<p>nope</p>",
        "id": 152338492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406849
    },
    {
        "content": "<p>it just suggests the feature gate</p>",
        "id": 152338496,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406855
    },
    {
        "content": "<p>there's a series of comments from me about this on <a href=\"https://github.com/rust-lang/rust/issues/15287\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/15287\">#15287</a></p>",
        "id": 152338526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406884
    },
    {
        "content": "<p>oh that reminds me</p>",
        "id": 152338546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406909
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/45600\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/45600\">#45600</a> is probably related to your in-progress RFC you pointed to earlier.</p>",
        "id": 152338611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406937
    },
    {
        "content": "<p>ill have a look</p>",
        "id": 152338643,
        "sender_full_name": "centril",
        "timestamp": 1545406973
    },
    {
        "content": "<p>(added corresponding link)</p>",
        "id": 152338644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545406974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> btw; isn't <a href=\"https://github.com/rust-lang/rust/issues/15287\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/15287\">https://github.com/rust-lang/rust/issues/15287</a> supposed to be tagged T-lang?</p>",
        "id": 152338661,
        "sender_full_name": "centril",
        "timestamp": 1545406992
    },
    {
        "content": "<p>The heart of <a href=\"https://github.com/rust-lang/rust/issues/45600\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/45600\">#45600</a> (as it currently stands) is that we reject this: </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">f</span>: <span class=\"nc\">Foo</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">Foo</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">ref</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>but there might not be a good motivation for rejecting it at this point.</p>",
        "id": 152338694,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545407035
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> btw; isn't <a href=\"https://github.com/rust-lang/rust/issues/15287\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/15287\">https://github.com/rust-lang/rust/issues/15287</a> supposed to be tagged T-lang?</p>\n</blockquote>\n<p>sure that sounds reasonable, given the current status.</p>",
        "id": 152338757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545407084
    },
    {
        "content": "<p>aight; adding</p>",
        "id": 152338765,
        "sender_full_name": "centril",
        "timestamp": 1545407096
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  re. <a href=\"https://github.com/rust-lang/rust/issues/15287\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/15287\">#15287</a> -- does it need to block on making NLL default on 2015 or could we stabilize to 2018 first and then backport?</p>",
        "id": 152338897,
        "sender_full_name": "centril",
        "timestamp": 1545407251
    },
    {
        "content": "<p>well one might claim it might be good to keep the set of features enabled by NLL somewhat contained until we've managed to release it more broadly</p>",
        "id": 152338998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545407366
    },
    {
        "content": "<p>(at least in migrate mode)</p>",
        "id": 152339001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545407371
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  yeah that's a reasonable objection</p>",
        "id": 152339015,
        "sender_full_name": "centril",
        "timestamp": 1545407388
    },
    {
        "content": "<p>But I don't actually have much preference one way or another.</p>",
        "id": 152339018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545407391
    },
    {
        "content": "<p>same</p>",
        "id": 152339021,
        "sender_full_name": "centril",
        "timestamp": 1545407397
    },
    {
        "content": "<p>added note to the comment to try to capture that alternative</p>",
        "id": 152339094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545407446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I'll nominate for lang.mtg.next to see what we want to do</p>",
        "id": 152339126,
        "sender_full_name": "centril",
        "timestamp": 1545407499
    }
]