[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> so in going through the polonius results, I'm encountering a number of test cases that don't seem to error in NLL mode, but I .. think they should.  Did you notice these before?</p>\n<p>Two examples:</p>\n<ul>\n<li><a href=\"http://regions-assoc-type-in-supertrait-outlives-container.rs\" target=\"_blank\" title=\"http://regions-assoc-type-in-supertrait-outlives-container.rs\">regions-assoc-type-in-supertrait-outlives-container.rs</a> (I edited the test somewhat to dodge the dead code issue)</li>\n<li><a href=\"http://regions-free-region-ordering-caller.rs\" target=\"_blank\" title=\"http://regions-free-region-ordering-caller.rs\">regions-free-region-ordering-caller.rs</a></li>\n</ul>",
        "id": 150844271,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928244
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>)</p>",
        "id": 150844278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928254
    },
    {
        "content": "<p>is there an issue about this?</p>",
        "id": 150844280,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928263
    },
    {
        "content": "<p>Do you mean NLL mode as in NLL compare mode (ie. migrate) or with actual NLL?</p>",
        "id": 150844336,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928307
    },
    {
        "content": "<p>actual NLL</p>",
        "id": 150844341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928322
    },
    {
        "content": "<p>I think in compare mode they .. probably still error</p>",
        "id": 150844351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928333
    },
    {
        "content": "<p>Just checking - I've tripped myself up more than once.</p>",
        "id": 150844352,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928336
    },
    {
        "content": "<p>actually</p>",
        "id": 150844360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928344
    },
    {
        "content": "<p>they don't</p>",
        "id": 150844364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928346
    },
    {
        "content": "<p>er, wait</p>",
        "id": 150844367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928355
    },
    {
        "content": "<p>in <em>migrate</em> they do</p>",
        "id": 150844370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928367
    },
    {
        "content": "<p>but not in NLL</p>",
        "id": 150844371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928370
    },
    {
        "content": "<p>(as expected, as these are region errors)</p>",
        "id": 150844372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928372
    },
    {
        "content": "<p>I may try to fix these during the plenary today</p>",
        "id": 150844380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928390
    },
    {
        "content": "<p>speaking of which, oh, shoot, I should go get breakfast</p>",
        "id": 150844403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543928403
    },
    {
        "content": "<p>links to save others time: <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/regions/regions-assoc-type-in-supertrait-outlives-container.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/regions/regions-assoc-type-in-supertrait-outlives-container.rs\">regions-assoc-type-in-supertrait-outlives-container.rs</a> and <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/regions/regions-free-region-ordering-caller.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/regions/regions-free-region-ordering-caller.rs\">regions-free-region-ordering-caller.rs</a></p>",
        "id": 150844463,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928456
    },
    {
        "content": "<p>I recognize that first test as something that changed (IIRC) on my type annot unreachable code branch.</p>",
        "id": 150844505,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928505
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>~/projects/rust/issue-54943 issue-54943* david@dtw-avendahl\n❯ ./build/x86_64-unknown-linux-gnu/stage2/bin/rustc -Z borrowck=mir -Z two-phase-borrows src/test/ui/regions/regions-assoc-type-in-supertrait-outlives-container.rs\nerror: unsatisfied lifetime constraints\n  --&gt; src/test/ui/regions/regions-assoc-type-in-supertrait-outlives-container.rs:52:13\n   |\n44 | fn with_assoc&lt;&#39;a,&#39;b&gt;() {\n   |               -- -- lifetime `&#39;b` defined here\n   |               |\n   |               lifetime `&#39;a` defined here\n...\n52 |     let _x: &amp;&#39;a WithAssoc&lt;TheType&lt;&#39;b&gt;&gt; = loop { };\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment requires that `&#39;b` must outlive `&#39;a`\n\nerror: aborting due to previous error\n</pre></div>",
        "id": 150844569,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928562
    },
    {
        "content": "<p>Now I think about it though, I think I expected that test to change and it didn't.</p>",
        "id": 150844598,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928601
    },
    {
        "content": "<p>I also get errors for the other test (on that branch, not sure if it is that branch's changes causing it).</p>",
        "id": 150844676,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928645
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>~/projects/rust/issue-54943 issue-54943* david@dtw-avendahl\n❯ ./build/x86_64-unknown-linux-gnu/stage2/bin/rustc -Z borrowck=mir -Z two-phase-borrows src/test/ui/regions/regions-free-region-ordering-caller.rs\n[...I removed some warnings here...]\nerror: unsatisfied lifetime constraints\n  --&gt; src/test/ui/regions/regions-free-region-ordering-caller.rs:18:12\n   |\n17 | fn call2&lt;&#39;a, &#39;b&gt;(a: &amp;&#39;a usize, b: &amp;&#39;b usize) {\n   |          --  -- lifetime `&#39;b` defined here\n   |          |\n   |          lifetime `&#39;a` defined here\n18 |     let z: Option&lt;&amp;&#39;b &amp;&#39;a usize&gt; = None;//~ ERROR E0623\n   |            ^^^^^^^^^^^^^^^^^^^^^ assignment requires that `&#39;a` must outlive `&#39;b`\n\nerror: unsatisfied lifetime constraints\n  --&gt; src/test/ui/regions/regions-free-region-ordering-caller.rs:23:12\n   |\n21 | fn call3&lt;&#39;a, &#39;b&gt;(a: &amp;&#39;a usize, b: &amp;&#39;b usize) {\n   |          --  -- lifetime `&#39;b` defined here\n   |          |\n   |          lifetime `&#39;a` defined here\n22 |     let y: Paramd&lt;&#39;a&gt; = Paramd { x: a };\n23 |     let z: Option&lt;&amp;&#39;b Paramd&lt;&#39;a&gt;&gt; = None;//~ ERROR E0623\n   |            ^^^^^^^^^^^^^^^^^^^^^^ assignment requires that `&#39;a` must outlive `&#39;b`\n\nerror: unsatisfied lifetime constraints\n  --&gt; src/test/ui/regions/regions-free-region-ordering-caller.rs:27:12\n   |\n26 | fn call4&lt;&#39;a, &#39;b&gt;(a: &amp;&#39;a usize, b: &amp;&#39;b usize) {\n   |          --  -- lifetime `&#39;b` defined here\n   |          |\n   |          lifetime `&#39;a` defined here\n27 |     let z: Option&lt;&amp;&#39;a &amp;&#39;b usize&gt; = None;//~ ERROR E0623\n   |            ^^^^^^^^^^^^^^^^^^^^^ assignment requires that `&#39;b` must outlive `&#39;a`\n\nerror: aborting due to 3 previous errors\n</pre></div>",
        "id": 150844739,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928738
    },
    {
        "content": "<p>Unless of course I'm misunderstanding what you are expecting.</p>",
        "id": 150844762,
        "sender_full_name": "davidtwco",
        "timestamp": 1543928761
    },
    {
        "content": "<p>That said, I can confirm that there are no errors at all on the playground: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=6c0099da705085a4a98ee1b108658dad\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=6c0099da705085a4a98ee1b108658dad\">regions-assoc-type-in-supertrait-outlives-container.rs</a> and <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=3256bb43bbdbfb00df4c7a9194effa2c\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015&amp;gist=3256bb43bbdbfb00df4c7a9194effa2c\">regions-free-region-ordering-caller.rs</a></p>",
        "id": 150845339,
        "sender_full_name": "davidtwco",
        "timestamp": 1543929374
    },
    {
        "content": "<blockquote>\n<p>Now I think about it though, I think I expected that test to change and it didn't.</p>\n</blockquote>\n<p>( I added a fix that makes it not dead code and it still does not error for me)</p>",
        "id": 150850268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543933434
    },
    {
        "content": "<p>do we have a bug for \"weak tests\"? I did a bit more detailed review and found that I would classify as \"weak\":</p>\n<ul>\n<li>ui/cleanup-rvalue-scopes-cf.rs</li>\n<li>ui/closure_promotion.rs</li>\n</ul>\n<p>sorry <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I can't remember :)</p>",
        "id": 150850541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1543933668
    },
    {
        "content": "<p>i don't think we have a dedicated bug anymore; the review project would say for sure</p>",
        "id": 150850608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543933695
    },
    {
        "content": "<p>let me go find the link for that</p>",
        "id": 150850612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543933699
    },
    {
        "content": "<p>diagnostic review project: <a href=\"https://github.com/rust-lang/rust/projects/10\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/projects/10\">https://github.com/rust-lang/rust/projects/10</a></p>",
        "id": 150850636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543933717
    },
    {
        "content": "<p>maybe this: <a href=\"https://github.com/rust-lang/rust/projects/10#column-3663841\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/projects/10#column-3663841\">https://github.com/rust-lang/rust/projects/10#column-3663841</a></p>",
        "id": 150850647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543933730
    },
    {
        "content": "<p>but I certainly don't object to making such a bug</p>",
        "id": 150850675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543933775
    },
    {
        "content": "<p>and there was this issue <a href=\"https://github.com/rust-lang/rust/issues/51025\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51025\">#51025</a></p>",
        "id": 150850757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543933826
    },
    {
        "content": "<p>but I think that (<a href=\"https://github.com/rust-lang/rust/issues/51025\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51025\">#51025</a>) was meant to just capture the cases I was able to identify at that time</p>",
        "id": 150850798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543933856
    },
    {
        "content": "<p>It's possible that I get errors on that branch because it isn't based on HEAD and not because of any changes it includes (which is more likely).</p>",
        "id": 150852170,
        "sender_full_name": "davidtwco",
        "timestamp": 1543934876
    }
]