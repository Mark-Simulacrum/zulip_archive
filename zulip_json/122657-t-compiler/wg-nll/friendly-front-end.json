[
    {
        "content": "<p>(branching off into a separate topic)@<strong>lqd</strong></p>",
        "id": 126556447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526329572
    },
    {
        "content": "<p>well, plausibly we could do something like souffle, but that's not <em>especially</em> friendly</p>",
        "id": 126556459,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526329606
    },
    {
        "content": "<p>I was thinking more like the input resembles a Rust program</p>",
        "id": 126556463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526329613
    },
    {
        "content": "<p>or a MIR dump</p>",
        "id": 126556464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526329614
    },
    {
        "content": "<p>oh I see :) I was just mentioning it since you had already done some work in that direction</p>",
        "id": 126556478,
        "sender_full_name": "lqd",
        "timestamp": 1526329635
    },
    {
        "content": "<p>but it's true that embedding a rust fragment à la chalk would be natural I think</p>",
        "id": 126556552,
        "sender_full_name": "lqd",
        "timestamp": 1526329713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> would we need a <code>kills(Loan)</code>kind of fact in statements, in addition to <code>outlives</code>/<code>borrow_region_at</code>/<code>invalidates</code> ?</p>",
        "id": 126834989,
        "sender_full_name": "lqd",
        "timestamp": 1526829364
    },
    {
        "content": "<p>I was also wondering how this needed to be integrated. I did the parser for the format you described this morning (but I'm not generating AllFacts yet) with lalrpop. So maybe, a subcrate like chalk does?</p>",
        "id": 126836357,
        "sender_full_name": "lqd",
        "timestamp": 1526832583
    },
    {
        "content": "<p>hum, I'm not sure at which statement point should we emit <code>invalidates</code> facts ?</p>",
        "id": 126846026,
        "sender_full_name": "lqd",
        "timestamp": 1526853985
    },
    {
        "content": "<p>Mostly the mid point, but the start point for some of the generator resume stuff. That might not matter for the \"friendly front-end\" though</p>",
        "id": 126846033,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526854043
    },
    {
        "content": "<p>(generator resume, not mid point. Mid point is important =))</p>",
        "id": 126846035,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526854059
    },
    {
        "content": "<p>My understanding is that the mid point is \"as the statement executes,\" and since it's the process of executing the statement that invalidates the fact  that's when you want to emit the invalidate</p>",
        "id": 126846075,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526854120
    },
    {
        "content": "<p>ok I'll just emit from the mid point for now, when we get to testing generator-like facts in the friendly front-end, we'll see :)</p>",
        "id": 126846076,
        "sender_full_name": "lqd",
        "timestamp": 1526854131
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span> That's what the code I added to rustc does, so if it's wrong we're wrong together <span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span></p>",
        "id": 126846083,
        "sender_full_name": "Reed Koser",
        "timestamp": 1526854198
    },
    {
        "content": "<p>little update: almost done on the frontend parsing and creating AllFacts — mostly missing the previous questions about <code>kill</code>and where to put everything. (oh, and I eyeballed it but will add tests when I know where to add them :)</p>",
        "id": 126848022,
        "sender_full_name": "lqd",
        "timestamp": 1526858509
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> would we need a <code>kills(Loan)</code>kind of fact in statements, in addition to <code>outlives</code>/<code>borrow_region_at</code>/<code>invalidates</code> ?</p>\n</blockquote>\n<p>yes.</p>",
        "id": 126870107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526905960
    },
    {
        "content": "<blockquote>\n<p>I was also wondering how this needed to be integrated. I did the parser for the format you described this morning (but I'm not generating AllFacts yet) with lalrpop. So maybe, a subcrate like chalk does?</p>\n</blockquote>\n<p>The reason that I separated chalk into two crates was because LALRPOP compile times were very painful back in the day. This is less true now with the table-based parser and incremental compilation. Still, it's fine to break the parser into its own crate if we want. Ultimately, I would expect this structure in the end, which is basically the same as chalk:</p>\n<ul>\n<li>polonius -- an executable crate that ties together the front-end and engine. Basically an elaborate mock-testing harness.<ul>\n<li>polonius-engine -- contains the engine, used as a lib by rustc</li>\n<li>polonius-parser -- optional, but contains the parser and maybe a bit of the front-end stuff</li>\n</ul>\n</li>\n</ul>",
        "id": 126870193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526906117
    },
    {
        "content": "<blockquote>\n<p>Mostly the mid point, but the start point for some of the generator resume stuff. That might not matter for the \"friendly front-end\" though</p>\n</blockquote>\n<p>that's a good point, I forgot that some events occur in the start point of statements. I was intending everything to come at the mid point. Maybe we should change the format of a statement to have an optional \"start\" — or maybe just a basic block — something like:</p>\n<div class=\"codehilite\"><pre><span></span>Statement := Effects | Effects &quot;/&quot; Effects\nEffects := ...\n</pre></div>\n\n\n<p>so you can write <code>invalidated(L0) / ...</code> and have the `invalidated appear in the start point, but otherwise you are just specifying things in the mid-point.</p>",
        "id": 126870251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526906201
    },
    {
        "content": "<p>yeah from what I could tell (but haven't checked in rustc, only in the polonius inputs; and also I might have misunderstood) <code>use</code> (to emit <code>region_live_at</code>) and <code>outlives</code> occur in both start and mid points ?</p>",
        "id": 126871398,
        "sender_full_name": "lqd",
        "timestamp": 1526907876
    },
    {
        "content": "<blockquote>\n<p>yeah from what I could tell (but haven't checked in rustc, only in the polonius inputs; and also I might have misunderstood) <code>use</code> (to emit <code>region_live_at</code>) and <code>outlives</code> occur in both start and mid points ?</p>\n</blockquote>\n<p>I think that <code>use</code> (which is not a fact) would be at mid points, but that will cause <code>region_live_at</code> at start points, yes</p>",
        "id": 126871424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526907949
    },
    {
        "content": "<p>I don't <em>think</em> we emit <code>outlives</code> at start points?</p>",
        "id": 126871426,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526907957
    },
    {
        "content": "<p>there are quite a number in clap IIRC</p>",
        "id": 126871537,
        "sender_full_name": "lqd",
        "timestamp": 1526908091
    },
    {
        "content": "<p>hmm. curious.</p>",
        "id": 126871560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908158
    },
    {
        "content": "<p>could be, not sure if it <em>should</em> be</p>",
        "id": 126871562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908171
    },
    {
        "content": "<p>oh</p>",
        "id": 126871563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908174
    },
    {
        "content": "<p>I think I know what those are</p>",
        "id": 126871565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908178
    },
    {
        "content": "<p>that's something else</p>",
        "id": 126871566,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> that is due to <a href=\"https://github.com/rust-lang-nursery/polonius/issues/24\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/24\">https://github.com/rust-lang-nursery/polonius/issues/24</a></p>",
        "id": 126871568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908189
    },
    {
        "content": "<p>I have a fix for that</p>",
        "id": 126871571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908191
    },
    {
        "content": "<p>I just haven't opened the PR</p>",
        "id": 126871572,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908194
    },
    {
        "content": "<p>because I've been too busy</p>",
        "id": 126871575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908197
    },
    {
        "content": "<p>or at least a tentative fix</p>",
        "id": 126871576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908200
    },
    {
        "content": "<p>should be another small win on clap actually</p>",
        "id": 126871629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908219
    },
    {
        "content": "<p>I think it reduces the number of outlives facts by 2</p>",
        "id": 126871630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908223
    },
    {
        "content": "<p>oh alright awesome</p>",
        "id": 126871632,
        "sender_full_name": "lqd",
        "timestamp": 1526908225
    },
    {
        "content": "<p>I should at least open a [WIP] PR on rustc</p>",
        "id": 126871666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908299
    },
    {
        "content": "<p>it degrades a few error msgs</p>",
        "id": 126871670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908309
    },
    {
        "content": "<p>that was the main problem?</p>",
        "id": 126871671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908312
    },
    {
        "content": "<p>maybe there was an ICE in one case, I can't recall</p>",
        "id": 126871673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908319
    },
    {
        "content": "<p>/me will rebase and find out</p>",
        "id": 126871674,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908321
    },
    {
        "content": "<p>there are some interesting language questions that get raised</p>",
        "id": 126871715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908332
    },
    {
        "content": "<p>that have to do with the basic premise of using liveness though</p>",
        "id": 126871718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908338
    },
    {
        "content": "<p>but I think that's orthogonal ... I have to write that up too ...</p>",
        "id": 126871721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526908349
    },
    {
        "content": "<p>so <code>use</code> only emits a <code>region_live_at</code>on start and that's it, the rest can be manually specified (once I remove my <code>outlives</code> derivation on Starts) with the mentioned \"/\" separator</p>",
        "id": 126871723,
        "sender_full_name": "lqd",
        "timestamp": 1526908369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I opened <a href=\"https://github.com/rust-lang/rust/pull/50938\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50938\">https://github.com/rust-lang/rust/pull/50938</a></p>",
        "id": 126872276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526909262
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> here it is <a href=\"https://github.com/rust-lang-nursery/polonius/pull/45\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/45\">https://github.com/rust-lang-nursery/polonius/pull/45</a> — as I'm not very familiar with LALRPOP, there might be a lot of things to improve</p>",
        "id": 126991423,
        "sender_full_name": "lqd",
        "timestamp": 1527102255
    },
    {
        "content": "<p>as for the question whether to hack on the PR or iterate in-tree, whichever you prefer ?</p>",
        "id": 127021238,
        "sender_full_name": "lqd",
        "timestamp": 1527155074
    },
    {
        "content": "<p>usually I like hacking in tree better, so others can \"join in\" and you don't have to do all the rebase pain</p>",
        "id": 127021349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155335
    },
    {
        "content": "<p>I'm not entirely sure what I think about the <code>use</code> vs <code>def</code> and how rustc should interact, but probably for now having a separate computation (that rustc maybe uses later) is probably the way to go — in particular if we compressed edges, then having datafrog do it might be better</p>",
        "id": 127021358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155394
    },
    {
        "content": "<p>I'm fine with hacking in tree as well :) do you want me at least to nest the Effects enum first ?</p>",
        "id": 127021528,
        "sender_full_name": "lqd",
        "timestamp": 1527155660
    },
    {
        "content": "<p>and this liveness computation could be indeed for <a href=\"https://github.com/rust-lang/rust/issues/51003\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51003\">https://github.com/rust-lang/rust/issues/51003</a> - I can do that, or Keith also, as they were looking to work with datafrog :D</p>",
        "id": 127021610,
        "sender_full_name": "lqd",
        "timestamp": 1527155861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I think having someone else to do liveness is even better :) (grow knowledge base)</p>",
        "id": 127021740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527156102
    },
    {
        "content": "<p>understood, let's go <span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> :)</p>",
        "id": 127021781,
        "sender_full_name": "lqd",
        "timestamp": 1527156131
    },
    {
        "content": "<p>until we have the computed liveness, we could also emit <code>region_live_at</code>manually at Start points</p>",
        "id": 127024803,
        "sender_full_name": "lqd",
        "timestamp": 1527162073
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> conceivably we could remove <code>use</code> and just have people write <code>region_live_at</code> manually to start .. awfully tedious though to get the start/end right .. so I guess you're saying we could special-case that ..? seems reasonable</p>",
        "id": 127026083,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527164288
    },
    {
        "content": "<p>I'm about to push an updated version with the nested Fact enum + comma-separated regions in <code>use</code></p>",
        "id": 127026103,
        "sender_full_name": "lqd",
        "timestamp": 1527164348
    },
    {
        "content": "<p>manual region_live_at it could be fine for smaller tests, and those would be of little interest</p>",
        "id": 127026155,
        "sender_full_name": "lqd",
        "timestamp": 1527164406
    },
    {
        "content": "<p>so I can guess we can land as is but still have to wait for the liveness computation to have our awesome tests ?</p>",
        "id": 127026163,
        "sender_full_name": "lqd",
        "timestamp": 1527164446
    },
    {
        "content": "<p>(I was really wishing to have some tests before landing leapfrog :)</p>",
        "id": 127026180,
        "sender_full_name": "lqd",
        "timestamp": 1527164473
    },
    {
        "content": "<blockquote>\n<p>so I can guess we can land as is but still have to wait for the liveness computation to have our awesome tests ?</p>\n</blockquote>\n<p>yeah, sounds good</p>",
        "id": 127026191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527164492
    },
    {
        "content": "<blockquote>\n<p>(I was really wishing to have some tests before landing leapfrog :)</p>\n</blockquote>\n<p>might make sense to wait until we get rustc integration going, or else keep leapfrog as a separate algorithm</p>",
        "id": 127026206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527164515
    },
    {
        "content": "<p>yup, separate algorithm was also proposed by Frank</p>",
        "id": 127026249,
        "sender_full_name": "lqd",
        "timestamp": 1527164538
    },
    {
        "content": "<p>the API is still on a branch in his repo, and maybe the exact API is not nailed down perfectly yet anyway</p>",
        "id": 127026279,
        "sender_full_name": "lqd",
        "timestamp": 1527164595
    },
    {
        "content": "<p>ofc the rebase didn't work, I'll reopen the PR later <span class=\"emoji emoji-1f62d\" title=\"sob\">:sob:</span></p>",
        "id": 127026720,
        "sender_full_name": "lqd",
        "timestamp": 1527165319
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"emoji emoji-1f62d\" title=\"sob\">:sob:</span> sorry GH didn't allow me to reopen so <a href=\"https://github.com/rust-lang-nursery/polonius/pull/48\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/48\">https://github.com/rust-lang-nursery/polonius/pull/48</a> -- I'll open issues for the specific points we talked about wrt use/def, liveness, etc afterwards</p>",
        "id": 127027716,
        "sender_full_name": "lqd",
        "timestamp": 1527166965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> it would've worked if you didn't close the PR btw</p>",
        "id": 127027741,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527167034
    },
    {
        "content": "<p>right</p>",
        "id": 127027791,
        "sender_full_name": "lqd",
        "timestamp": 1527167054
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"emoji emoji-1f62d\" title=\"sob\">:sob:</span> sorry GH didn't allow me to reopen so <a href=\"https://github.com/rust-lang-nursery/polonius/pull/48\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/48\">https://github.com/rust-lang-nursery/polonius/pull/48</a> -- I'll open issues for the specific points we talked about wrt use/def, liveness, etc afterwards</p>\n</blockquote>\n<p>...I maybe can re-open it?</p>",
        "id": 127027799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527167092
    },
    {
        "content": "<p>I don't think so, it's because of the force push</p>",
        "id": 127027932,
        "sender_full_name": "lqd",
        "timestamp": 1527167284
    },
    {
        "content": "<p>_while being closed_</p>",
        "id": 127027940,
        "sender_full_name": "lqd",
        "timestamp": 1527167294
    },
    {
        "content": "<p>otherwise it's fine ofc</p>",
        "id": 127027944,
        "sender_full_name": "lqd",
        "timestamp": 1527167313
    },
    {
        "content": "<p>the force is strong with this one</p>",
        "id": 127028015,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527167430
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> er I forgot about your PR for a while now :)</p>",
        "id": 127208526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518286
    },
    {
        "content": "<p>I see it's been pending</p>",
        "id": 127208529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518289
    },
    {
        "content": "<p>looks like it is still mergable though</p>",
        "id": 127208537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518308
    },
    {
        "content": "<p>er, not quite</p>",
        "id": 127208598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518410
    },
    {
        "content": "<p>just needs a rebase with the <code>Cargo.toml</code> etc</p>",
        "id": 127208600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527518419
    },
    {
        "content": "<p>Oh cool, if you think we can land as is, I’ll rebase either at the airport or tomorrow :)</p>",
        "id": 127208853,
        "sender_full_name": "lqd",
        "timestamp": 1527518869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> here you go, my daily rebase of <a href=\"https://github.com/rust-lang-nursery/polonius/pull/48\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/48\">https://github.com/rust-lang-nursery/polonius/pull/48</a> — straight from the airport <span class=\"emoji emoji-2708\" title=\"airplane\">:airplane:</span> :) definitely need to create issues about <code>def</code> + liveness computation (maybe someone at the impl days tomorrow will want to do it) but until I create it, I updated the PR's message to mention it still needs those, and link to the relevant comment of yours.</p>",
        "id": 127216898,
        "sender_full_name": "lqd",
        "timestamp": 1527532799
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> merged =)</p>",
        "id": 127216956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527532871
    },
    {
        "content": "<p>awesome thank you :D</p>",
        "id": 127216962,
        "sender_full_name": "lqd",
        "timestamp": 1527532894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> here's the PR I promised last night — <a href=\"https://github.com/rust-lang-nursery/polonius/pull/70\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/70\">https://github.com/rust-lang-nursery/polonius/pull/70</a></p>",
        "id": 127645753,
        "sender_full_name": "lqd",
        "timestamp": 1528274808
    }
]