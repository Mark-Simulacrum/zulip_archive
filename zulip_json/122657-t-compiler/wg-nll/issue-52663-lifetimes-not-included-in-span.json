[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> opened <a href=\"https://github.com/rust-lang/rust/issues/52973\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52973\">#52973</a> to address <a href=\"https://github.com/rust-lang/rust/issues/52663#issuecomment-409036656\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52663#issuecomment-409036656\">this diagnostic improvement</a>.</p>",
        "id": 130769684,
        "sender_full_name": "davidtwco",
        "timestamp": 1533204383
    },
    {
        "content": "<p>I left a comment, but I'll ask here: Do you think it would be feasible to highlight the specific uses of <code>'a</code> rather than the site where it is bound?</p>",
        "id": 130770548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533205950
    },
    {
        "content": "<p>I totally understand if figuring out which use(s) are the relevant ones is too difficult for the short term</p>",
        "id": 130770554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533205981
    },
    {
        "content": "<p>I'm not sure. It occurs to me that I misread the comment as \"highlight where this <code>'a</code> thing comes from\" rather than \"highlight why this <code>'a</code> thing is part of the error\".</p>",
        "id": 130770699,
        "sender_full_name": "davidtwco",
        "timestamp": 1533206253
    },
    {
        "content": "<p>I might have a idea how to work that out, not too sure, will experiment for a little bit.</p>",
        "id": 130770930,
        "sender_full_name": "davidtwco",
        "timestamp": 1533206598
    },
    {
        "content": "<p>Unless <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has any suggestions how I might go about working this out, I can't figure out from some brief experimentation how to do this <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>.</p>",
        "id": 130773055,
        "sender_full_name": "davidtwco",
        "timestamp": 1533209871
    },
    {
        "content": "<p>Okay that's fine. Lets just land this one and I'll open an issue for the longer-term feature request.</p>",
        "id": 130773104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533209899
    },
    {
        "content": "<p>I tried looking at the span of the region one constraint away but that wasn't quite what we were after I don't think.</p>",
        "id": 130773125,
        "sender_full_name": "davidtwco",
        "timestamp": 1533209953
    },
    {
        "content": "<p>In fact, had an idea, let me experiment a little more.</p>",
        "id": 130773261,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210127
    },
    {
        "content": "<p>okay, well I already r+'ed your PR</p>",
        "id": 130773298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210203
    },
    {
        "content": "<p>so now you're on a race with bors</p>",
        "id": 130773303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210209
    },
    {
        "content": "<p>but in my experience, bors tends to be the tortoise in these races.</p>",
        "id": 130773308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210223
    },
    {
        "content": "<p>:)</p>",
        "id": 130773309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I can have it highlight the argument (not the type of the argument just yet, but the argument name) where the lifetime is used rather than where the lifetime is defined in the generics - not sure if that's better?</p>",
        "id": 130773516,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210533
    },
    {
        "content": "<p>... hmm... no lets not do that</p>",
        "id": 130773536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210551
    },
    {
        "content": "<p>or at least, that sounds pretty fragile</p>",
        "id": 130773541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210558
    },
    {
        "content": "<p>especially when you have things like <code>where</code> clauses or bounds on type parameters, so the actual occurrecne of <code>'a</code> might be quite far from the relevant variable name, right?</p>",
        "id": 130773569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210600
    },
    {
        "content": "<p>Yeah, I'm not sure.</p>",
        "id": 130773648,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210649
    },
    {
        "content": "<p>For a test <a href=\"https://github.com/davidtwco/rust/blob/2488cb6b1027bf88e33dfdc7ce89472f5dc54714/src/test/ui/issue-10291.rs\" target=\"_blank\" title=\"https://github.com/davidtwco/rust/blob/2488cb6b1027bf88e33dfdc7ce89472f5dc54714/src/test/ui/issue-10291.rs\">like this one</a> (<a href=\"https://github.com/davidtwco/rust/blob/2488cb6b1027bf88e33dfdc7ce89472f5dc54714/src/test/ui/issue-10291.nll.stderr\" target=\"_blank\" title=\"https://github.com/davidtwco/rust/blob/2488cb6b1027bf88e33dfdc7ce89472f5dc54714/src/test/ui/issue-10291.nll.stderr\">nll.stderr</a>) what would you have it highlight ideally?</p>",
        "id": 130773666,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210684
    },
    {
        "content": "<p>/me is looking</p>",
        "id": 130773718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210728
    },
    {
        "content": "<p>The occurrence of <code>'x</code> in <code>x: &amp;'x isize</code>, I think.</p>",
        "id": 130773743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210786
    },
    {
        "content": "<p>Yeah, that's what I figured it would be.</p>",
        "id": 130773749,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210799
    },
    {
        "content": "<p>what's the alternative you're considering? Not any of the <code>'z</code>'s, right?</p>",
        "id": 130773751,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210800
    },
    {
        "content": "<p>I thought the same as you, the argument.</p>",
        "id": 130773757,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210820
    },
    {
        "content": "<p>I'm close to having that, it just doesn't have the type in the span currently, just the name.</p>",
        "id": 130773765,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210839
    },
    {
        "content": "<p>This is of course a case where highlighting the binding <code>&lt;'x&gt;</code> is a fine UX, since the whole line gets printed.</p>",
        "id": 130773767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210842
    },
    {
        "content": "<p>Oh, can we  not find the span of the type via the LocalDecl?</p>",
        "id": 130773808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210858
    },
    {
        "content": "<p>But yeah, it could fail in <code>where</code> clauses.</p>",
        "id": 130773813,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210862
    },
    {
        "content": "<p>yeah</p>",
        "id": 130773815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210868
    },
    {
        "content": "<p>you know</p>",
        "id": 130773819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210885
    },
    {
        "content": "<p><code>mir.local_decls[local].source_info.span</code> is just the name, not the type annotation.</p>",
        "id": 130773821,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210890
    },
    {
        "content": "<p>looking at the stderr for the AST-borrowck</p>",
        "id": 130773825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210895
    },
    {
        "content": "<p>it clearly does what you did</p>",
        "id": 130773830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210904
    },
    {
        "content": "<p>A quick glance didn't spot the type annotation span.</p>",
        "id": 130773834,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210907
    },
    {
        "content": "<p>That's exactly where I got it from.</p>",
        "id": 130773836,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210913
    },
    {
        "content": "<p>i.e. highlights the binding site</p>",
        "id": 130773839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210914
    },
    {
        "content": "<p>okay so lets not worry too much about this then</p>",
        "id": 130773842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210922
    },
    {
        "content": "<p>I like diagnostics because I can search for error messages and find out how it was done in AST or where it is done in MIR.</p>",
        "id": 130773847,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210935
    },
    {
        "content": "<p>Our primary goal is just to make sure we're not egregiously worse than AST-borrowck</p>",
        "id": 130773851,
        "sender_full_name": "pnkfelix",
        "timestamp": 1533210937
    },
    {
        "content": "<p>Alright, we can leave this as a potential future improvement then.</p>",
        "id": 130773893,
        "sender_full_name": "davidtwco",
        "timestamp": 1533210963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> there is code to identify the <code>'a</code> as part of the type that I wrote some time back</p>",
        "id": 130975220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533558153
    },
    {
        "content": "<p>it was targeting anonymous lifetimes but could with relative ease be repurposed to named lifetimes, I think</p>",
        "id": 130975229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533558166
    }
]