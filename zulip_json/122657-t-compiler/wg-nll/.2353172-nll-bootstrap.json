[
    {
        "content": "<p>I'm opening this topic to discuss <a href=\"https://github.com/rust-lang/rust/issues/53172\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53172\">#53172</a>. cc <span class=\"user-mention\" data-user-id=\"125142\">@Bernardo Meurer</span>, who is interested in doing some of the crates there.</p>",
        "id": 131068391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533675136
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ! I'm going to start with all the <code>liballoc</code> crates and see how it goes</p>",
        "id": 131068430,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533675187
    },
    {
        "content": "<p>surely start with librustc_mir <span class=\"emoji emoji-1f61b\" title=\"mischievous\">:mischievous:</span></p>",
        "id": 131068525,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533675292
    },
    {
        "content": "<p>Sure, but why do you say so?</p>",
        "id": 131068547,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533675322
    },
    {
        "content": "<p>because that is where the NLL implementation is, I suspect. =)</p>",
        "id": 131068553,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533675334
    },
    {
        "content": "<p>borrowckception!</p>",
        "id": 131068556,
        "sender_full_name": "lqd",
        "timestamp": 1533675340
    },
    {
        "content": "<p>Because it's the one I work on most</p>",
        "id": 131068620,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533675382
    },
    {
        "content": "<p>Ha! Alright!</p>",
        "id": 131068664,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533675433
    },
    {
        "content": "<p>I think between the ice and other fixes and (I think) Matthew's PR, bootstrapping should probably go smoothly :)</p>",
        "id": 131068674,
        "sender_full_name": "lqd",
        "timestamp": 1533675442
    },
    {
        "content": "<p>hum btw do we just want the nll feature flag here, or just on stage1 as we did last time we tried ?</p>",
        "id": 131069658,
        "sender_full_name": "lqd",
        "timestamp": 1533676583
    },
    {
        "content": "<p>(or say, not stage 0)</p>",
        "id": 131069681,
        "sender_full_name": "lqd",
        "timestamp": 1533676615
    },
    {
        "content": "<p>ah <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> good point</p>",
        "id": 131069868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533676831
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125142\">@Bernardo Meurer</span> you probably actually want <code>#![cfg_attr(not(stage0), feature(nll))]</code></p>",
        "id": 131069878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533676852
    },
    {
        "content": "<p>I think that <a href=\"https://github.com/rust-lang/rust/issues/52810\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52810\">#52810</a> and <a href=\"https://github.com/rust-lang/rust/issues/52834\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52834\">#52834</a> are the only issues that will block bootstrapping on the stage 0 compile, I think they affect one crate each (actually, I think one only affects a dependency).</p>",
        "id": 131069903,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533676907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> aren't both of them closed?</p>",
        "id": 131069953,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533676936
    },
    {
        "content": "<p>or are you saying \"with stage0 builds\"</p>",
        "id": 131069960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533676945
    },
    {
        "content": "<p>They didn't make beta</p>",
        "id": 131069962,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533676950
    },
    {
        "content": "<p>k</p>",
        "id": 131069963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533676954
    },
    {
        "content": "<p>Just got the compiler to build :)</p>",
        "id": 131070003,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677037
    },
    {
        "content": "<p>Hmm, do I need something else to run <code>x.py test</code>? Mine is failing with some missing files</p>",
        "id": 131070089,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677144
    },
    {
        "content": "<p><a href=\"https://gist.github.com/bemeurer/fd38ae4df8ffcf610f4e663869d32f8a\" target=\"_blank\" title=\"https://gist.github.com/bemeurer/fd38ae4df8ffcf610f4e663869d32f8a\">https://gist.github.com/bemeurer/fd38ae4df8ffcf610f4e663869d32f8a</a></p>",
        "id": 131070155,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> do you usually try this with x.py check as I did ? Should be way faster for Bernardo if they're doing a crate at a time</p>",
        "id": 131070156,
        "sender_full_name": "lqd",
        "timestamp": 1533677199
    },
    {
        "content": "<p>definitely use <code>./x.py check</code> !</p>",
        "id": 131070166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677213
    },
    {
        "content": "<p>I have quite a lot of server power :P</p>",
        "id": 131070182,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677252
    },
    {
        "content": "<p>wait, does <code>./x.py check</code> check also stage1 etc?</p>",
        "id": 131070196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677279
    },
    {
        "content": "<p>I updated <a href=\"https://github.com/rust-lang/rust/issues/53172#issue-348463765\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53172#issue-348463765\">https://github.com/rust-lang/rust/issues/53172#issue-348463765</a> with better instructions</p>",
        "id": 131070267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677342
    },
    {
        "content": "<p>What's stage0/stage1?</p>",
        "id": 131070270,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677343
    },
    {
        "content": "<p>I happened to be doing this in the background so I don't remember :/ I did a lot of regular stage2 builds though, but no tests</p>",
        "id": 131070277,
        "sender_full_name": "lqd",
        "timestamp": 1533677360
    },
    {
        "content": "<p>I ran <code>./x.py clean</code>, <code>RUSTFLAGS_STAGE_NOT_0='...' ./x.py build</code>, not that I'd recommend it.</p>",
        "id": 131070278,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533677361
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125142\">@Bernardo Meurer</span> <a href=\"https://rust-lang-nursery.github.io/rustc-guide/how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler\" target=\"_blank\" title=\"https://rust-lang-nursery.github.io/rustc-guide/how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler\">https://rust-lang-nursery.github.io/rustc-guide/how-to-build-and-run.html#running-xpy-and-building-a-stage1-compiler</a></p>",
        "id": 131070282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677382
    },
    {
        "content": "<p>take a look at that, which explains the background :)</p>",
        "id": 131070285,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677390
    },
    {
        "content": "<p>Woohoo, check pass</p>",
        "id": 131070286,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677392
    },
    {
        "content": "<p>I guess to be safe we can do <code>./x.py build --stage 1</code></p>",
        "id": 131070337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677410
    },
    {
        "content": "<p>um yeah</p>",
        "id": 131070348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677428
    },
    {
        "content": "<p>now that I think about it</p>",
        "id": 131070350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677430
    },
    {
        "content": "<p>oh yeah rustflags would fail for the dependencies</p>",
        "id": 131070352,
        "sender_full_name": "lqd",
        "timestamp": 1533677433
    },
    {
        "content": "<p><code>x.py check</code> doesn't produce an executable</p>",
        "id": 131070355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677435
    },
    {
        "content": "<p>so how could it possibly check stage1 =)</p>",
        "id": 131070365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677449
    },
    {
        "content": "<p>lol</p>",
        "id": 131070370,
        "sender_full_name": "lqd",
        "timestamp": 1533677455
    },
    {
        "content": "<p>heh</p>",
        "id": 131070375,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677463
    },
    {
        "content": "<p>All our dependencies worked when I tried.</p>",
        "id": 131070383,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533677472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> I was figuring we could add <code>#![feature]</code> gates so that we can actually commit them</p>",
        "id": 131070392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677489
    },
    {
        "content": "<p>but it's probably <em>worth</em> just trying the <code>RUSTFLAGS</code> thing and see what happens</p>",
        "id": 131070405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677504
    },
    {
        "content": "<p>maybe everything Just Works</p>",
        "id": 131070410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677515
    },
    {
        "content": "<p>don't need x.py test for sure though <span class=\"user-mention\" data-user-id=\"125142\">@Bernardo Meurer</span> in case you need a bit quicker turnaround</p>",
        "id": 131070472,
        "sender_full_name": "lqd",
        "timestamp": 1533677580
    },
    {
        "content": "<p>yes</p>",
        "id": 131070482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677590
    },
    {
        "content": "<p><code>./x.py build</code> or <code>./x.py build --stage 1</code> ought to suffice</p>",
        "id": 131070486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533677598
    },
    {
        "content": "<p>but at this point I myself would add the flag to half the crates in one go</p>",
        "id": 131070487,
        "sender_full_name": "lqd",
        "timestamp": 1533677603
    },
    {
        "content": "<p>instead of waiting 5-10 mins for each (but I had less server power)</p>",
        "id": 131070537,
        "sender_full_name": "lqd",
        "timestamp": 1533677653
    },
    {
        "content": "<p>I'm compiling on server with 2x Intel(R) Xeon(R) CPU E5-2630 v4</p>",
        "id": 131070630,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677769
    },
    {
        "content": "<p>God bless companies that let you use stuff for personal projects!</p>",
        "id": 131070640,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533677793
    },
    {
        "content": "<p>that reminds me that I wanted to try enabling parallel compilation</p>",
        "id": 131071129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533678350
    },
    {
        "content": "<p>I feel like I tried it without success once, but if so, I should try again and figure out why</p>",
        "id": 131071166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533678363
    },
    {
        "content": "<p>We don't have parallel compilation already?</p>",
        "id": 131071247,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533678518
    },
    {
        "content": "<p>nope</p>",
        "id": 131071493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533678878
    },
    {
        "content": "<p>I mean across crates yes</p>",
        "id": 131071497,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533678886
    },
    {
        "content": "<p>but within one crate, not</p>",
        "id": 131071498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533678888
    },
    {
        "content": "<p>there is experimental support for it though</p>",
        "id": 131071500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533678892
    },
    {
        "content": "<p>That would be really, really nice</p>",
        "id": 131071715,
        "sender_full_name": "Bernardo Meurer",
        "timestamp": 1533679154
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125142\">@Bernardo Meurer</span> how'd it go?</p>",
        "id": 131100320,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533725151
    },
    {
        "content": "<p>Hey <span class=\"emoji emoji-1f44b\" title=\"wave\">:wave:</span> I'll build <code>librustc_metadata</code> tonight and report back :)</p>",
        "id": 131137393,
        "sender_full_name": "memoryruins",
        "timestamp": 1533768899
    },
    {
        "content": "<p>The build was successful! Would a single PR for each indivdual crate be preferred, or would a PR with multiple commits, one per build passing crate, be acceptable after trying a few in succession? Next-up: <code>librustc_lint</code></p>",
        "id": 131141337,
        "sender_full_name": "memoryruins",
        "timestamp": 1533775057
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125246\">@memoryruins</span> I'd probably just have one commit if there's no changes for all crates, and if a crate has changes then isolate it into its own commit</p>",
        "id": 131143825,
        "sender_full_name": "simulacrum",
        "timestamp": 1533779168
    },
    {
        "content": "<p>Sounds good! stage1 successfully built with nll enabled on <code>librustc_lint</code> and <code>libgraphviz</code>.</p>",
        "id": 131145498,
        "sender_full_name": "memoryruins",
        "timestamp": 1533782020
    },
    {
        "content": "<p>For the kicks and to try multiple at once while I sleep, I'll see if it builds with nll enabled on <code>liballoc</code>, <code>liballoc_jemalloc</code>, <code>liballoc_system</code>, <code>librustc_borrowck</code>, <code>librustc_codegen_llvm</code>, and <code>librustc_codegen_utils</code></p>",
        "id": 131145557,
        "sender_full_name": "memoryruins",
        "timestamp": 1533782101
    },
    {
        "content": "<p>It hit an error while compiling stage1 of <code>librustc_codegen_llvm</code> <a href=\"https://gist.github.com/memoryruins/14a2aad7fc85d0429ae9e4240ec0dacb\" target=\"_blank\" title=\"https://gist.github.com/memoryruins/14a2aad7fc85d0429ae9e4240ec0dacb\">https://gist.github.com/memoryruins/14a2aad7fc85d0429ae9e4240ec0dacb</a></p>",
        "id": 131149535,
        "sender_full_name": "memoryruins",
        "timestamp": 1533788201
    },
    {
        "content": "<p>Trying the set again without the above.</p>",
        "id": 131149619,
        "sender_full_name": "memoryruins",
        "timestamp": 1533788378
    },
    {
        "content": "<p>They built! Opened a PR <a href=\"https://github.com/rust-lang/rust/pull/53211\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53211\">https://github.com/rust-lang/rust/pull/53211</a></p>",
        "id": 131152663,
        "sender_full_name": "memoryruins",
        "timestamp": 1533794316
    },
    {
        "content": "<p>more crates are building, didn't list these beforehand in here <a href=\"https://github.com/rust-lang/rust/pull/53214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53214\">https://github.com/rust-lang/rust/pull/53214</a></p>",
        "id": 131157838,
        "sender_full_name": "memoryruins",
        "timestamp": 1533802900
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125246\">@memoryruins</span> nice! I updated the tracking issue</p>",
        "id": 131161842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533808632
    },
    {
        "content": "<p>another chunk successfully builds locally :) <a href=\"https://github.com/rust-lang/rust/pull/53219\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53219\">https://github.com/rust-lang/rust/pull/53219</a></p>",
        "id": 131165380,
        "sender_full_name": "memoryruins",
        "timestamp": 1533812942
    },
    {
        "content": "<p>now to try some of these larger crates: hello <code>librustc</code>, <code>libcore</code>, and <code>data_structures</code></p>",
        "id": 131165936,
        "sender_full_name": "memoryruins",
        "timestamp": 1533813727
    },
    {
        "content": "<p>very nice</p>",
        "id": 131166113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533814066
    },
    {
        "content": "<p>I'm wondering whether this will affect bootstrap time, and how much to worry about (cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>).</p>\n<p>I guess the only real answer is \"land it and see\"</p>",
        "id": 131166168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533814137
    },
    {
        "content": "<p>wasn't it only a month ago that the last bootstrap was filled with unused mut warnings? y'all have done some incredible work since then.</p>",
        "id": 131166188,
        "sender_full_name": "memoryruins",
        "timestamp": 1533814194
    },
    {
        "content": "<p>I had that in mind as well, and so far the build times between stage0 and stage1 appear to be similar (no idea if thats a 'good' way to roughly judge it. first time i've built rustc haha)</p>",
        "id": 131166324,
        "sender_full_name": "memoryruins",
        "timestamp": 1533814346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125246\">@memoryruins</span> have you measured, or just \"feels similar\"?</p>",
        "id": 131168627,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533817521
    },
    {
        "content": "<p>still, even the latter is good =)</p>",
        "id": 131168629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533817524
    },
    {
        "content": "<p>stage0 vs stage1 is a decent, if not great comparison. Stage 0 is usually faster IIRC for unknown reasons.</p>\n<p>I'm not too worried about build times -- if we have perf down to ~5-10% over previous then realistically on Travis that moves the minimum up by ~2-3 minutes which we should be able to afford I think</p>",
        "id": 131169862,
        "sender_full_name": "simulacrum",
        "timestamp": 1533819072
    },
    {
        "content": "<p>And it'll encourage us to optimize performance :)</p>",
        "id": 131169868,
        "sender_full_name": "simulacrum",
        "timestamp": 1533819090
    },
    {
        "content": "<p>feels similar. the difference might end up more apparent when all of the crates are enabled altogether</p>",
        "id": 131170488,
        "sender_full_name": "memoryruins",
        "timestamp": 1533819736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125246\">@memoryruins</span> we should invetigate that one error</p>",
        "id": 131171735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821059
    },
    {
        "content": "<p>/me looks</p>",
        "id": 131171758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821096
    },
    {
        "content": "<p>This was the gist (for reference): <a href=\"https://gist.github.com/memoryruins/14a2aad7fc85d0429ae9e4240ec0dacb\" target=\"_blank\" title=\"https://gist.github.com/memoryruins/14a2aad7fc85d0429ae9e4240ec0dacb\">https://gist.github.com/memoryruins/14a2aad7fc85d0429ae9e4240ec0dacb</a></p>",
        "id": 131171784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821118
    },
    {
        "content": "<p>I think the error is legit... <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>, you around?</p>",
        "id": 131171979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821284
    },
    {
        "content": "<p>well wait</p>",
        "id": 131172017,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821352
    },
    {
        "content": "<p>er, yes, I think it's legit, iiuc</p>",
        "id": 131172038,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821401
    },
    {
        "content": "<p>an interesting example where enhanced error messages with more details would be quite nice</p>",
        "id": 131172089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821415
    },
    {
        "content": "<p>/me ponders trying to reduce it</p>",
        "id": 131172090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821419
    },
    {
        "content": "<p>I think the function called where the borrow is created (which I can't see the name of, and I can't check easily on a phone) has too strict a lifetime annotation on it. But it's an extern function written in C++, so I'm not completely sure.</p>",
        "id": 131172386,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533821759
    },
    {
        "content": "<p>reduced: <a href=\"https://play.rust-lang.org/?gist=6e22b15051f9a108d09f28a0b657f717&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=6e22b15051f9a108d09f28a0b657f717&amp;version=nightly&amp;mode=debug&amp;edition=2015\">https://play.rust-lang.org/?gist=6e22b15051f9a108d09f28a0b657f717&amp;version=nightly&amp;mode=debug&amp;edition=2015</a></p>",
        "id": 131172452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821794
    },
    {
        "content": "<p>yeah, I can't quite tell</p>",
        "id": 131172463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821807
    },
    {
        "content": "<p>there are Drops that free memory</p>",
        "id": 131172465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821810
    },
    {
        "content": "<p>also, the \"in later iteration of loop\" thing is totally wrong</p>",
        "id": 131172557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533821896
    },
    {
        "content": "<p>adding a <code>take()</code> method would fix the error, I think, and <em>seems</em> safe...?</p>",
        "id": 131172700,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533822071
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?gist=64c20d529ad49d5871417c391a8dbcde&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=64c20d529ad49d5871417c391a8dbcde&amp;version=nightly&amp;mode=debug&amp;edition=2015\">https://play.rust-lang.org/?gist=64c20d529ad49d5871417c391a8dbcde&amp;version=nightly&amp;mode=debug&amp;edition=2015</a></p>",
        "id": 131172703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533822074
    },
    {
        "content": "<p>like that <span class=\"emoji emoji-1f446\" title=\"point up\">:point_up:</span></p>",
        "id": 131172710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533822077
    },
    {
        "content": "<p>I'm gonna file a bug</p>",
        "id": 131172728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533822121
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/rust/issues/53221\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53221\">https://github.com/rust-lang/rust/issues/53221</a></p>",
        "id": 131172879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533822269
    },
    {
        "content": "<p>update -- the following crates build: <code>libcore</code>, <code>libprofiler_builtins</code>, <code>librustc</code>, <code>librustc_allocator</code>, <code>librustc_data_structures</code>, <code>libserialize</code>, <code>libsyntax</code>, and <code>libtest</code></p>",
        "id": 131177390,
        "sender_full_name": "memoryruins",
        "timestamp": 1533826525
    },
    {
        "content": "<p><code>libsyntax_ext</code> hits the following error <a href=\"https://gist.github.com/memoryruins/b5a05efbd217608ca010c1f2252ef5c6\" target=\"_blank\" title=\"https://gist.github.com/memoryruins/b5a05efbd217608ca010c1f2252ef5c6\">https://gist.github.com/memoryruins/b5a05efbd217608ca010c1f2252ef5c6</a></p>",
        "id": 131177410,
        "sender_full_name": "memoryruins",
        "timestamp": 1533826540
    },
    {
        "content": "<p>Does it need to be mutable? a.k.a. is it a NLL bug or NLL improvement?</p>",
        "id": 131177634,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1533826767
    },
    {
        "content": "<p>(you can usually tell by just removing the mut keyword)</p>",
        "id": 131177723,
        "sender_full_name": "simulacrum",
        "timestamp": 1533826829
    },
    {
        "content": "<p>it looks correct to me</p>",
        "id": 131177727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533826850
    },
    {
        "content": "<p>but yes <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>'s test sounds like the right thing to do :)</p>",
        "id": 131177747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533826870
    },
    {
        "content": "<p>That's an ambiguous answer <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  ;-)</p>",
        "id": 131177757,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1533826881
    },
    {
        "content": "<p>sorry, I mean NLL's warning looks correct</p>",
        "id": 131177765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533826894
    },
    {
        "content": "<p>the mut is not needed</p>",
        "id": 131177768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533826897
    },
    {
        "content": "<p>Is it possible old borrowck might require mut, thus there's no code that works on both?</p>",
        "id": 131177867,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1533826961
    },
    {
        "content": "<p>one way to find out!</p>",
        "id": 131178111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533827172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125246\">@memoryruins</span> you gonna try removing those annotations?</p>",
        "id": 131178125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533827207
    },
    {
        "content": "<p>I'll remove them and try it out after this batch builds :)</p>",
        "id": 131178282,
        "sender_full_name": "memoryruins",
        "timestamp": 1533827345
    },
    {
        "content": "<p>Removing the unnecessary mut annotation did the trick ^^ <a href=\"https://github.com/rust-lang/rust/pull/53230\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53230\">https://github.com/rust-lang/rust/pull/53230</a></p>",
        "id": 131193249,
        "sender_full_name": "memoryruins",
        "timestamp": 1533843434
    },
    {
        "content": "<p>I think libstd_unicode can be removed from the bootstrap list since it's now in libcore</p>",
        "id": 131193440,
        "sender_full_name": "memoryruins",
        "timestamp": 1533843679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125246\">@memoryruins</span> so <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <a href=\"https://github.com/rust-lang/rust/issues/53221#issuecomment-411886906\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53221#issuecomment-411886906\">left a comment here</a> suggesting where the problem may be with the LLVM crate</p>",
        "id": 131196102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533847256
    },
    {
        "content": "<p>think you could try applying that diff and see if makes the LLVM crate build?</p>",
        "id": 131196107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533847263
    },
    {
        "content": "<p>will do! If it builds, I'll add it to the part 4 PR</p>",
        "id": 131198321,
        "sender_full_name": "memoryruins",
        "timestamp": 1533850408
    },
    {
        "content": "<p>since travis caught an unused mut anyway</p>",
        "id": 131198327,
        "sender_full_name": "memoryruins",
        "timestamp": 1533850417
    },
    {
        "content": "<p>in one of the tests</p>",
        "id": 131198332,
        "sender_full_name": "memoryruins",
        "timestamp": 1533850424
    },
    {
        "content": "<p>I should really figure out how to get x.py check compiling tests too (--all-targets)</p>",
        "id": 131198379,
        "sender_full_name": "simulacrum",
        "timestamp": 1533850450
    },
    {
        "content": "<p>part 4 now passes on travis <span class=\"emoji emoji-1f980\" title=\"crab\">:crab:</span> <br>\ncodegen_llvm ran into an unused mut after eddy's suggestion (potentially progress)</p>\n<div class=\"codehilite\"><pre><span></span>error: variable does not need to be mutable\n  --&gt; librustc_codegen_llvm\\type_of.rs:92:25\n92 |                     let mut llty = Type::named_struct(cx, name);\n   |                         ----^^^^\n</pre></div>\n\n\n<p>I'll try building it again without the mut annotation and look into the last few crates tomorrow, unless if anyone wants to have a go at it while I'm away</p>",
        "id": 131204153,
        "sender_full_name": "memoryruins",
        "timestamp": 1533858941
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125142\">@Bernardo Meurer</span> any luck with bootstrapping <code>librustc_mir</code>?</p>",
        "id": 131204218,
        "sender_full_name": "memoryruins",
        "timestamp": 1533859029
    },
    {
        "content": "<p>let's try all the remaining crates all at once</p>",
        "id": 131223571,
        "sender_full_name": "memoryruins",
        "timestamp": 1533888730
    },
    {
        "content": "<p>does the parent stdsimd have a <a href=\"http://lib.rs\" target=\"_blank\" title=\"http://lib.rs\">lib.rs</a>? only one I saw was in the stdsimd/crates/stdsimd/src directory</p>",
        "id": 131223826,
        "sender_full_name": "memoryruins",
        "timestamp": 1533889075
    },
    {
        "content": "<p>not seeing a crate/lib.rs for libbacktrace, the directory is all .c/.h files. is the crate located elsewhere or would it be considered part of libstd's sys?</p>",
        "id": 131223830,
        "sender_full_name": "memoryruins",
        "timestamp": 1533889081
    },
    {
        "content": "<p>I'm not really familiar with those crates :(</p>",
        "id": 131224028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533889319
    },
    {
        "content": "<p>libbacktrace might be just C code</p>",
        "id": 131224070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533889330
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/libc\" target=\"_blank\" title=\"https://github.com/rust-lang/libc\">libc</a> and <a href=\"https://github.com/rust-lang-nursery/compiler-builtins\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/compiler-builtins\">compiler-builtins</a> are both external crates, so I'm guessing we wouldnt be able to add the feature flag to those</p>",
        "id": 131224248,
        "sender_full_name": "memoryruins",
        "timestamp": 1533889583
    },
    {
        "content": "<p>that leaves codegen_llvm, librustc_mir, and libstd ^^ (building now)</p>",
        "id": 131224283,
        "sender_full_name": "memoryruins",
        "timestamp": 1533889673
    },
    {
        "content": "<p>no it looks like builtins has not(stage0) flags too</p>",
        "id": 131224369,
        "sender_full_name": "memoryruins",
        "timestamp": 1533889784
    },
    {
        "content": "<p>it would just need to be a separate PR right?</p>",
        "id": 131224373,
        "sender_full_name": "memoryruins",
        "timestamp": 1533889798
    },
    {
        "content": "<p>probably? builtins might be a bit special :)</p>",
        "id": 131224689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533890272
    },
    {
        "content": "<p>it's probably good enough as is</p>",
        "id": 131224693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533890278
    },
    {
        "content": "<p>at some point we'll swap the \"default\" flag for everything</p>",
        "id": 131224732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533890286
    },
    {
        "content": "<p>the work you've already done gives me a lot of confidence this won't cause the compiler to fall over :)</p>",
        "id": 131224734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1533890300
    },
    {
        "content": "<p>pushed some commits to part 4. libstd, librustc_mir, and librustc_codegen_llvm build! eddyb's suggestion on changing the signature solved the error. just to check, builtins also successfully built locally</p>",
        "id": 131229657,
        "sender_full_name": "memoryruins",
        "timestamp": 1533897332
    },
    {
        "content": "<p>now to see if it passes on travis and it should be good to go</p>",
        "id": 131229660,
        "sender_full_name": "memoryruins",
        "timestamp": 1533897348
    },
    {
        "content": "<p>ayyy it passed</p>",
        "id": 131836451,
        "sender_full_name": "memoryruins",
        "timestamp": 1533922287
    }
]