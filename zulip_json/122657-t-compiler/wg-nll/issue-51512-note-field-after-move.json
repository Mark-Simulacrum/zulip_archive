[
    {
        "content": "<p>about <a href=\"https://github.com/rust-lang/rust/issues/51512\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51512\">https://github.com/rust-lang/rust/issues/51512</a></p>",
        "id": 128386519,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529532391
    },
    {
        "content": "<p>will probably tackle it tomorrow, but just read it and I have a quick question</p>",
        "id": 128386536,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529532428
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you mentioned moi and from there we can get the place</p>",
        "id": 128386543,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529532448
    },
    {
        "content": "<p>what I don't follow is that we get the moi from mois, so potentially we would get a lot of places, which one is the one we should use?</p>",
        "id": 128386599,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529532510
    },
    {
        "content": "<p>we would like to show more than one note per place?</p>",
        "id": 128386690,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529532634
    },
    {
        "content": "<p>I think this last phrase was confusing</p>",
        "id": 128387126,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529533408
    },
    {
        "content": "<p>I meant, more than one note, one per place, do we want that?</p>",
        "id": 128387127,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529533414
    },
    {
        "content": "<blockquote>\n<p>what I don't follow is that we get the moi from mois, so potentially we would get a lot of places, which one is the one we should use?</p>\n</blockquote>\n<p>probably all of them, or maybe just the first â€” basically, there could be many prior points that have moved the value</p>",
        "id": 128391703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529540620
    },
    {
        "content": "<p>e.g.,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"o\">!</span><span class=\"p\">[];</span><span class=\"w\"></span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span><span class=\"w\"></span>\n</pre></div>",
        "id": 128391748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529540642
    },
    {
        "content": "<p>here there are two <code>drop(v)</code> statements and either could have done it</p>",
        "id": 128391769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529540650
    },
    {
        "content": "<p>it seems reasonable to just show a label and info for the first thing in <code>mois</code> though</p>",
        "id": 128391778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529540661
    },
    {
        "content": "<p>any one would do</p>",
        "id": 128391779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529540663
    },
    {
        "content": "<p>ok</p>",
        "id": 128392172,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529541255
    },
    {
        "content": "<p>will try with the first</p>",
        "id": 128392173,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529541264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> to start discussing <a href=\"https://github.com/spastorino/rust/commit/e42b78abc10e7e04f2aad2eb22ed1b446cc6d7d6\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/e42b78abc10e7e04f2aad2eb22ed1b446cc6d7d6\">https://github.com/spastorino/rust/commit/e42b78abc10e7e04f2aad2eb22ed1b446cc6d7d6</a></p>",
        "id": 128397560,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529551885
    },
    {
        "content": "<p>I need to change the stderr modifications better</p>",
        "id": 128397565,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529551920
    },
    {
        "content": "<p>it's a bit late here but giving this a quick glance</p>",
        "id": 128397655,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529552048
    },
    {
        "content": "<p>this src/test/ui/borrowck/borrowck-box-insensitivity.nll.stderr seems correct now</p>",
        "id": 128397658,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529552056
    },
    {
        "content": "<p>unsure about this src/test/ui/borrowck/issue-41962.stderr looks weird to me</p>",
        "id": 128397673,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529552149
    },
    {
        "content": "<p>and this one src/test/ui/moves-based-on-type-match-bindings.nll.stderr seems correct now</p>",
        "id": 128397723,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529552225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ttyt</p>",
        "id": 128397725,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529552239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/spastorino/rust/commit/e42b78abc10e7e04f2aad2eb22ed1b446cc6d7d6#r29446019\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/e42b78abc10e7e04f2aad2eb22ed1b446cc6d7d6#r29446019\">take a look at my question here</a></p>",
        "id": 128408363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572585
    },
    {
        "content": "<p>actually i'll just paste it in zulip:</p>",
        "id": 128408374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572619
    },
    {
        "content": "<p>unrelated but I do wonder if we should break out of this loop after the first entry...</p>\n<p>The following example on stable:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">v</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"o\">!</span><span class=\"p\">[];</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>prints</p>\n<div class=\"codehilite\"><pre><span></span>error[E0382]: use of moved value: `v`\n  --&gt; src/main.rs:10:5\n   |\n5  |         drop(v);\n   |              - value moved here\n...\n10 |     v.len();\n   |     ^ value used here after move\n   |\n   = note: move occurs because `v` has type `std::vec::Vec&lt;u32&gt;`, which does not implement the `Copy` trait\n</pre></div>\n\n\n<p>with NLL it prints:</p>\n<div class=\"codehilite\"><pre><span></span>error[E0382]: borrow of moved value: `v`\n  --&gt; src/main.rs:12:5\n   |\n7  |         drop(v);\n   |              - value moved here\n8  |     } else {\n9  |         drop(v);\n   |              - value moved here\n...\n12 |     v.len();\n   |     ^ value borrowed here after move\n   |\n   = note: move occurs because `v` has type `std::vec::Vec&lt;u32&gt;`, which does not implement the `Copy` trait\n</pre></div>\n\n\n<p>I'm not sure it's an improvement to print both.</p>",
        "id": 128408380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529572632
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>                if moved_lp.has_downcast() {\n                    &quot;the value&quot;.to_string()\n                } else {\n                    format!(&quot;`{}`&quot;, self.loan_path_to_string(moved_lp))\n                },\n</pre></div>",
        "id": 128419707,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529590425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> this ^^^ is what you're talking about?</p>",
        "id": 128419711,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529590435
    },
    {
        "content": "<p>sounds roughly right; I think we had some existing function for this too? I have to look around</p>",
        "id": 128419974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529590785
    },
    {
        "content": "<p>it might cover a few more cases</p>",
        "id": 128419975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529590788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ast code ends calling this <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_borrowck/borrowck/mod.rs#L1351\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_borrowck/borrowck/mod.rs#L1351\">https://github.com/rust-lang/rust/blob/master/src/librustc_borrowck/borrowck/mod.rs#L1351</a></p>",
        "id": 128422510,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529593763
    },
    {
        "content": "<p>right, <code>librustc_borrowck</code> is the old borrow checker</p>",
        "id": 128423463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529594843
    },
    {
        "content": "<p>yes, but I meant, should we do something similar?</p>",
        "id": 128423694,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529595139
    },
    {
        "content": "<p>all that code is in the old borrowck</p>",
        "id": 128423698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529595147
    },
    {
        "content": "<p>we .. are doing something similar, aren't we?</p>",
        "id": 128423999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595597
    },
    {
        "content": "<p>do you mean, should we call the same helper fn?</p>",
        "id": 128424000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595602
    },
    {
        "content": "<p>oh I guess I see your question</p>",
        "id": 128424052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595614
    },
    {
        "content": "<p>well we don't have those data structures</p>",
        "id": 128424055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595619
    },
    {
        "content": "<p>let me look and see, I feel like there was a fn for this</p>",
        "id": 128424060,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595625
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> so I was thinking of <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/borrow_check/struct.MirBorrowckCtxt.html#method.describe_place\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/borrow_check/struct.MirBorrowckCtxt.html#method.describe_place\"><code>describe_place</code></a></p>",
        "id": 128424282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595936
    },
    {
        "content": "<p>however</p>",
        "id": 128424292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595951
    },
    {
        "content": "<p>it doesn't quite do what I think it should</p>",
        "id": 128424298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595956
    },
    {
        "content": "<p>in particular, <code>Downcast</code> doesn't seem to return <code>Err</code></p>",
        "id": 128424349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595976
    },
    {
        "content": "<p>but I think that's a bug in <code>describe_place</code></p>",
        "id": 128424351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529595980
    },
    {
        "content": "<p>yeah, we are already calling <code>describe_place</code> in the code I've committed</p>",
        "id": 128424365,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529595995
    },
    {
        "content": "<p>yeah so maybe the bug is more <em>that</em> code</p>",
        "id": 128424371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529596004
    },
    {
        "content": "<p>in particular <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_mir/borrow_check/error_reporting.rs.html#698\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_mir/borrow_check/error_reporting.rs.html#698\">this match arm seems wrong</a></p>",
        "id": 128424392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529596043
    },
    {
        "content": "<p>I think it should return <code>Err</code></p>",
        "id": 128424395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529596049
    },
    {
        "content": "<p>I see</p>",
        "id": 128424478,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529596129
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 128426055,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529598005
    },
    {
        "content": "<p>did you try that?</p>",
        "id": 128427386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529599988
    },
    {
        "content": "<p>let me paste the output</p>",
        "id": 128427635,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600308
    },
    {
        "content": "<p><a href=\"https://gist.github.com/spastorino/6f29aa8772c5de988df8d73190233dee\" target=\"_blank\" title=\"https://gist.github.com/spastorino/6f29aa8772c5de988df8d73190233dee\">https://gist.github.com/spastorino/6f29aa8772c5de988df8d73190233dee</a></p>",
        "id": 128427641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600324
    },
    {
        "content": "<p>well ... forget about the ones that are ICEing</p>",
        "id": 128427644,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600333
    },
    {
        "content": "<p>need to ignore those</p>",
        "id": 128427646,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600336
    },
    {
        "content": "<p>is that what you want?</p>",
        "id": 128427655,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600348
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>-error[E0382]: use of moved value: `maybe.0` (Mir)\n+error[E0382]: use of moved value: `_` (Mir)\n</pre></div>",
        "id": 128427665,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600372
    },
    {
        "content": "<p>is weird</p>",
        "id": 128427666,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600374
    },
    {
        "content": "<p>that is most certainly not what we want :P</p>",
        "id": 128427779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600518
    },
    {
        "content": "<p>I would expect just \"use of moved value\" I think</p>",
        "id": 128427835,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600553
    },
    {
        "content": "<p>:P</p>",
        "id": 128427836,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600553
    },
    {
        "content": "<p>unsure why is that happening</p>",
        "id": 128427847,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600581
    },
    {
        "content": "<p>let me investigate</p>",
        "id": 128427850,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600584
    },
    {
        "content": "<p>so ...</p>",
        "id": 128427933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600675
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@archlinux rust1 (error-note-field-after-move)]$ rustc +stage1 src/test/ui/borrowck/issue-41962.rs\nwarning: unused variable: `thing`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:21\n   |\n17 |         if let Some(thing) = maybe {\n   |                     ^^^^^ help: consider using `_thing` instead\n   |\n   = note: #[warn(unused_variables)] on by default\n\nerror[E0382]: use of partially moved value: `maybe`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:30\n   |\n17 |         if let Some(thing) = maybe {\n   |                     -----    ^^^^^ value used here after move\n   |                     |\n   |                     value moved here\n   |\n   = note: move occurs because the value has type `std::vec::Vec&lt;bool&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `(maybe as std::prelude::v1::Some).0`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:21\n   |\n17 |         if let Some(thing) = maybe {\n   |                     ^^^^^ value moved here in previous iteration of loop\n   |\n   = note: move occurs because the value has type `std::vec::Vec&lt;bool&gt;`, which does not implement the `Copy` trait\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0382`.\n</pre></div>",
        "id": 128427937,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600681
    },
    {
        "content": "<p>vs</p>",
        "id": 128427943,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600692
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@archlinux rust1 (error-note-field-after-move)]$ rustc +stage1 -Zborrowck=mir -Ztwo-phase-borrows src/test/ui/borrowck/issue-41962.rs\nwarning: unused variable: `thing`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:21\n   |\n17 |         if let Some(thing) = maybe {\n   |                     ^^^^^ help: consider using `_thing` instead\n   |\n   = note: #[warn(unused_variables)] on by default\n\nerror[E0382]: use of moved value: `maybe`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:9\n   |\n17 |           if let Some(thing) = maybe {\n   |           ^           ----- value moved here\n   |  _________|\n   | |\n18 | |         }\n   | |_________^ value used here after move\n   |\n   = note: move occurs because value has type `std::vec::Vec&lt;bool&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: borrow of moved value: `maybe`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:9\n   |\n17 |           if let Some(thing) = maybe {\n   |           ^           ----- value moved here\n   |  _________|\n   | |\n18 | |         }\n   | |_________^ value borrowed here after move\n   |\n   = note: move occurs because value has type `std::vec::Vec&lt;bool&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `maybe`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:16\n   |\n17 |         if let Some(thing) = maybe {\n   |                ^^^^^-----^\n   |                |    |\n   |                |    value moved here\n   |                value used here after move\n   |\n   = note: move occurs because value has type `std::vec::Vec&lt;bool&gt;`, which does not implement the `Copy` trait\n\nerror[E0382]: use of moved value: `_`\n  --&gt; src/test/ui/borrowck/issue-41962.rs:17:21\n   |\n17 |         if let Some(thing) = maybe {\n   |                     ^^^^^ value moved here in previous iteration of loop\n   |\n   = note: move occurs because value has type `std::vec::Vec&lt;bool&gt;`, which does not implement the `Copy` trait\n\nerror: aborting due to 4 previous errors\n\nFor more information about this error, try `rustc --explain E0382`.\n</pre></div>",
        "id": 128427946,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600696
    },
    {
        "content": "<p>NLL error displaying all that it's very confused</p>",
        "id": 128427965,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600714
    },
    {
        "content": "<p>I think, I'm with you about just showing the first one</p>",
        "id": 128427969,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600725
    },
    {
        "content": "<p>ok I'm prety confused</p>",
        "id": 128427971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600731
    },
    {
        "content": "<p>so, when you run in NLL mode,</p>",
        "id": 128427974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600736
    },
    {
        "content": "<p>anyway ... that's for another PR</p>",
        "id": 128427975,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600737
    },
    {
        "content": "<p>it dumps 4 errors?</p>",
        "id": 128427977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600739
    },
    {
        "content": "<p>that's the first problem I guess</p>",
        "id": 128427979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600743
    },
    {
        "content": "<p>yes</p>",
        "id": 128427980,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600743
    },
    {
        "content": "<p>I see, ok</p>",
        "id": 128427983,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600747
    },
    {
        "content": "<p>yeah and there's a mix of spans</p>",
        "id": 128427985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600753
    },
    {
        "content": "<p>some of which are just not great</p>",
        "id": 128427988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600757
    },
    {
        "content": "<p>well I agree that would be good to handle in follow up PRs</p>",
        "id": 128428029,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600768
    },
    {
        "content": "<p>would you just get the first one?</p>",
        "id": 128428037,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600791
    },
    {
        "content": "<p>probably</p>",
        "id": 128428063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600864
    },
    {
        "content": "<p>ideally with a different span</p>",
        "id": 128428064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600867
    },
    {
        "content": "<p>it's not great that we highlight the <code>if let</code></p>",
        "id": 128428068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600872
    },
    {
        "content": "<p>that will probably have to be tweaked in the MIR construction</p>",
        "id": 128428073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529600883
    },
    {
        "content": "<p>I guess the problem happens here <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/borrowck_errors.rs#L364\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/borrowck_errors.rs#L364\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/util/borrowck_errors.rs#L364</a></p>",
        "id": 128428147,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600957
    },
    {
        "content": "<p>moved_path is _</p>",
        "id": 128428163,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529600993
    },
    {
        "content": "<p>ahh I see</p>",
        "id": 128428225,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529601030
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/error_reporting.rs#L63\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/error_reporting.rs#L63\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/error_reporting.rs#L63</a></p>",
        "id": 128428240,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529601061
    },
    {
        "content": "<p>should we use value there?</p>",
        "id": 128428258,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529601096
    },
    {
        "content": "<p>ok, let me try something</p>",
        "id": 128428267,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529601113
    },
    {
        "content": "<blockquote>\n<p>should we use value there?</p>\n</blockquote>\n<p>I think that fn should probably take an <code>Option</code>, so we can leave off the <code>:</code> etc altogether</p>",
        "id": 128430119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529603513
    },
    {
        "content": "<p>that's exactly what I did</p>",
        "id": 128430166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603539
    },
    {
        "content": "<p>I'm just compiling this thing</p>",
        "id": 128430174,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603546
    },
    {
        "content": "<p>gonna send a diff when this finishes</p>",
        "id": 128430177,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603554
    },
    {
        "content": "<p>this ...</p>",
        "id": 128430202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603602
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>diff --git a/src/librustc_borrowck/borrowck/mod.rs b/src/librustc_borrowck/borrowck/mod.rs\nindex 684fd10c8c..500903c1c3 100644\n--- a/src/librustc_borrowck/borrowck/mod.rs\n+++ b/src/librustc_borrowck/borrowck/mod.rs\n@@ -680,7 +680,7 @@ impl&lt;&#39;a, &#39;tcx&gt; BorrowckCtxt&lt;&#39;a, &#39;tcx&gt; {\n                 let mut err = self.cannot_act_on_moved_value(use_span,\n                                                              verb,\n                                                              msg,\n-                                                             &amp;format!(&quot;{}&quot;, nl),\n+                                                             Some(format!(&quot;{}&quot;, nl)),\n                                                              Origin::Ast);\n                 let need_note = match lp.ty.sty {\n                     ty::TypeVariants::TyClosure(id, _) =&gt; {\ndiff --git a/src/librustc_mir/borrow_check/error_reporting.rs b/src/librustc_mir/borrow_check/error_reporting.rs\nindex 349e4ff933..0782d19d94 100644\n--- a/src/librustc_mir/borrow_check/error_reporting.rs\n+++ b/src/librustc_mir/borrow_check/error_reporting.rs\n@@ -72,7 +72,7 @@ impl&lt;&#39;cx, &#39;gcx, &#39;tcx&gt; MirBorrowckCtxt&lt;&#39;cx, &#39;gcx, &#39;tcx&gt; {\n                 span,\n                 desired_action.as_noun(),\n                 msg,\n-                &amp;self.describe_place(place).unwrap_or(&quot;_&quot;.to_owned()),\n+                self.describe_place(&amp;place),\n                 Origin::Mir,\n             );\n\n@@ -706,6 +706,7 @@ impl&lt;&#39;cx, &#39;gcx, &#39;tcx&gt; MirBorrowckCtxt&lt;&#39;cx, &#39;gcx, &#39;tcx&gt; {\n                     }\n                     ProjectionElem::Downcast(..) =&gt; {\n                         self.append_place_to_string(&amp;proj.base, buf, autoderef)?;\n+                        return Err(());\n                     }\n                     ProjectionElem::Field(field, _ty) =&gt; {\n                         autoderef = true;\ndiff --git a/src/librustc_mir/util/borrowck_errors.rs b/src/librustc_mir/util/borrowck_errors.rs\nindex d01b90ad26..a6dd32ce23 100644\n--- a/src/librustc_mir/util/borrowck_errors.rs\n+++ b/src/librustc_mir/util/borrowck_errors.rs\n@@ -356,12 +356,14 @@ pub trait BorrowckErrors&lt;&#39;cx&gt;: Sized + Copy {\n                                  use_span: Span,\n                                  verb: &amp;str,\n                                  optional_adverb_for_moved: &amp;str,\n-                                 moved_path: &amp;str,\n+                                 moved_path: Option&lt;String&gt;,\n                                  o: Origin)\n                                  -&gt; DiagnosticBuilder&lt;&#39;cx&gt;\n     {\n+        let moved_path = moved_path.map(|mp| format!(&quot;: `{}`&quot;, mp)).unwrap_or(&quot;&quot;.to_owned());\n+\n         let err = struct_span_err!(self, use_span, E0382,\n-                                   &quot;{} of {}moved value: `{}`{OGN}&quot;,\n+                                   &quot;{} of {}moved value{}{OGN}&quot;,\n                                    verb, optional_adverb_for_moved, moved_path, OGN=o);\n\n         self.cancel_if_wrong_origin(err, o)\n</pre></div>",
        "id": 128430205,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603606
    },
    {
        "content": "<p>is what I have for now</p>",
        "id": 128430206,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603609
    },
    {
        "content": "<p>and I guess now it's right</p>",
        "id": 128430213,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603617
    },
    {
        "content": "<p>let's see :)</p>",
        "id": 128430214,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529603618
    },
    {
        "content": "<p>looks good :)</p>",
        "id": 128430479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529603925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/51688\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688\">https://github.com/rust-lang/rust/pull/51688</a></p>",
        "id": 128431135,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529604624
    },
    {
        "content": "<p>review: <a href=\"https://github.com/rust-lang/rust/pull/51688#pullrequestreview-130936085\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688#pullrequestreview-130936085\">https://github.com/rust-lang/rust/pull/51688#pullrequestreview-130936085</a></p>",
        "id": 128431468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605039
    },
    {
        "content": "<p>had a question</p>",
        "id": 128431470,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605041
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/51688#discussion_r197231795\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688#discussion_r197231795\">https://github.com/rust-lang/rust/pull/51688#discussion_r197231795</a></p>",
        "id": 128431553,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605133
    },
    {
        "content": "<p>ok, r+ -- so, we can now talk about the duplicate problems</p>",
        "id": 128431743,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605343
    },
    {
        "content": "<p>I think just issuing the first error is what we want</p>",
        "id": 128431749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605361
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 128431751,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605362
    },
    {
        "content": "<p>but it sounded to me like you thought this might arise from just not iterating over all the <code>mois</code> elements or something</p>",
        "id": 128431760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605371
    },
    {
        "content": "<p>if so, I think that's not the case</p>",
        "id": 128431763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605375
    },
    {
        "content": "<p>no no</p>",
        "id": 128431774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605399
    },
    {
        "content": "<p>just getting the first thing that matches <code>if span == move_span {</code></p>",
        "id": 128431797,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605439
    },
    {
        "content": "<p>we need to break from the loop at that point</p>",
        "id": 128431840,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605450
    },
    {
        "content": "<p>ok wait</p>",
        "id": 128431882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605531
    },
    {
        "content": "<p>maybe I am confused actually</p>",
        "id": 128431886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605534
    },
    {
        "content": "<p>so first off I think your PR is not quite right then</p>",
        "id": 128431947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605565
    },
    {
        "content": "<p>er, no, never mind</p>",
        "id": 128431972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605601
    },
    {
        "content": "<p>I think I don't quite get what you mean</p>",
        "id": 128431978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605608
    },
    {
        "content": "<p>do you mean breaking at this point:</p>",
        "id": 128431985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605612
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/blob/fe264bb6f0aa7efb7be3432360edd1f8923c1f80/src/librustc_mir/borrow_check/error_reporting.rs#L88\" target=\"_blank\" title=\"https://github.com/spastorino/rust/blob/fe264bb6f0aa7efb7be3432360edd1f8923c1f80/src/librustc_mir/borrow_check/error_reporting.rs#L88\">https://github.com/spastorino/rust/blob/fe264bb6f0aa7efb7be3432360edd1f8923c1f80/src/librustc_mir/borrow_check/error_reporting.rs#L88</a></p>",
        "id": 128431997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605627
    },
    {
        "content": "<p>what I've said is wrong</p>",
        "id": 128431998,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605629
    },
    {
        "content": "<p>we need to call err.span_label twice in the else</p>",
        "id": 128432006,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605640
    },
    {
        "content": "<p>I think</p>",
        "id": 128432009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605647
    },
    {
        "content": "<p>I don't udnerstand</p>",
        "id": 128432011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605657
    },
    {
        "content": "<p>each time around the loop</p>",
        "id": 128432012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605660
    },
    {
        "content": "<p>adds just one \"labeled thing\" to the error</p>",
        "id": 128432013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605664
    },
    {
        "content": "<p>it is not responsible for printing 4 distinct errors</p>",
        "id": 128432015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605672
    },
    {
        "content": "<p>ok</p>",
        "id": 128432068,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605690
    },
    {
        "content": "<p>that has to be handled at a higher level</p>",
        "id": 128432072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605696
    },
    {
        "content": "<p>maybe I'm not understanding :D</p>",
        "id": 128432073,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605697
    },
    {
        "content": "<p>we want to not display those 4 distinct errors, right?</p>",
        "id": 128432095,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605720
    },
    {
        "content": "<p>and just display one?</p>",
        "id": 128432098,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605728
    },
    {
        "content": "<p>or did I get it wrong?</p>",
        "id": 128432102,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529605734
    },
    {
        "content": "<p>so earlier I wrote <a href=\"https://github.com/spastorino/rust/commit/e42b78abc10e7e04f2aad2eb22ed1b446cc6d7d6#r29446019\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/e42b78abc10e7e04f2aad2eb22ed1b446cc6d7d6#r29446019\">this comment that gives an example where the loop has more than one iteration</a></p>",
        "id": 128432119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605767
    },
    {
        "content": "<blockquote>\n<p>we want to not display those 4 distinct errors, right?</p>\n</blockquote>\n<p>correct</p>",
        "id": 128432125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605781
    },
    {
        "content": "<p>it's just that it's not that this <code>for moi in mois</code> loop is responsible for that</p>",
        "id": 128432132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605791
    },
    {
        "content": "<p>rather, the borrow check has an outer walk</p>",
        "id": 128432136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605796
    },
    {
        "content": "<p>checking all the accesses that occur in the MIR</p>",
        "id": 128432256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605894
    },
    {
        "content": "<p>and there are multiple cases that trigger an error here</p>",
        "id": 128432260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529605900
    },
    {
        "content": "<p>hmm ok, need to check this then</p>",
        "id": 128432557,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> after checking I don't see an obvious way to break out of the loop</p>",
        "id": 128432947,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606749
    },
    {
        "content": "<p>isn't this called several times the visitors?</p>",
        "id": 128432951,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606757
    },
    {
        "content": "<p>from what I've seen it all starts at visit_terminator_entry</p>",
        "id": 128433000,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606775
    },
    {
        "content": "<p>I don't think this loop is relevant at all</p>",
        "id": 128433004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606784
    },
    {
        "content": "<p>I'm confused</p>",
        "id": 128433007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606789
    },
    {
        "content": "<p>wait, what loop are you talking about ? :)</p>",
        "id": 128433009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606797
    },
    {
        "content": "<p>regardless, I don't think we want to do any breaking to fix the multiple duplicate error problem</p>",
        "id": 128433017,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606809
    },
    {
        "content": "<blockquote>\n<p>and there are multiple cases that trigger an error here</p>\n</blockquote>\n<p>^^^</p>",
        "id": 128433023,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606815
    },
    {
        "content": "<p>rather, I think we want to have some map (we have some already)</p>",
        "id": 128433027,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606819
    },
    {
        "content": "<p>and when we would report an error, we check for an entry in this map that suggests we already reported a \"similar\" erro</p>",
        "id": 128433034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606833
    },
    {
        "content": "<p>if so, we do not report the new one</p>",
        "id": 128433038,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606838
    },
    {
        "content": "<p>and just ignore it</p>",
        "id": 128433040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606840
    },
    {
        "content": "<p>I can show you some examples of this behavior</p>",
        "id": 128433042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606848
    },
    {
        "content": "<p>ahh ok</p>",
        "id": 128433044,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606848
    },
    {
        "content": "<p>I feel though like there <em>should</em> be some consolidation possible here</p>",
        "id": 128433050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606865
    },
    {
        "content": "<p>so you want to change err.span_label calls to something that adds on a map?</p>",
        "id": 128433082,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606882
    },
    {
        "content": "<p>and then on emit we do the right thing for this case?</p>",
        "id": 128433104,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529606908
    },
    {
        "content": "<p>e.g. we have <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L351-L364\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L351-L364\">these maps already</a></p>",
        "id": 128433107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606913
    },
    {
        "content": "<p>and <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L365-L367\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/mod.rs#L365-L367\">this one too</a></p>",
        "id": 128433118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529606932
    },
    {
        "content": "<p>ok</p>",
        "id": 128433636,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529607560
    },
    {
        "content": "<p><code>moved_error_reported</code> is never used</p>",
        "id": 128433933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529607912
    },
    {
        "content": "<p>I mean, only for debugging purposes</p>",
        "id": 128433937,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529607922
    },
    {
        "content": "<p>ok</p>",
        "id": 128434013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529607999
    },
    {
        "content": "<p>anyway, I can use it for my case, I guess</p>",
        "id": 128434025,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529608013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> about <a href=\"https://github.com/rust-lang/rust/pull/51688#issuecomment-399213060\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688#issuecomment-399213060\">https://github.com/rust-lang/rust/pull/51688#issuecomment-399213060</a></p>",
        "id": 128435758,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529610078
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>diff --git a/src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs b/src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs\nindex 3a7e4a1374..74a62566b1 100644\n--- a/src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs\n+++ b/src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs\n@@ -77,7 +77,7 @@ fn main() {\n         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n             Baz::X(value) =&gt; value\n             //[ast]~^ ERROR cannot use `e.0` because it was mutably borrowed\n-            //[mir]~^^ ERROR cannot use `e.0` because it was mutably borrowed\n+            //[mir]~^^ ERROR cannot use `_` because it was mutably borrowed\n         };\n         drop(x);\n     }\n@@ -120,7 +120,7 @@ fn main() {\n         match *e { //[mir]~ ERROR cannot use `*e` because it was mutably borrowed\n             Baz::X(value) =&gt; value\n             //[ast]~^ ERROR cannot use `e.0` because it was mutably borrowed\n-            //[mir]~^^ ERROR cannot use `e.0` because it was mutably borrowed\n+            //[mir]~^^ ERROR cannot use `_` because it was mutably borrowed\n         };\n         drop(x);\n     }\n@@ -201,12 +201,12 @@ fn main() {\n         match e { //[mir]~ ERROR cannot use `e` because it was mutably borrowed\n             E::A(ref ax) =&gt;\n                 //[ast]~^ ERROR cannot borrow `e.0` as immutable because `e` is also borrowed as mutable\n-                //[mir]~^^ ERROR cannot borrow `e.0` as immutable because it is also borrowed as mutable\n+                //[mir]~^^ ERROR cannot borrow `_` as immutable because it is also borrowed as mutable\n                 //[mir]~| ERROR cannot use `e` because it was mutably borrowed\n                 println!(&quot;e.ax: {:?}&quot;, ax),\n             E::B { x: ref bx } =&gt;\n                 //[ast]~^ ERROR cannot borrow `e.x` as immutable because `e` is also borrowed as mutable\n-                //[mir]~^^ ERROR cannot borrow `e.x` as immutable because it is also borrowed as mutable\n+                //[mir]~^^ ERROR cannot borrow `_` as immutable because it is also borrowed as mutable\n                 println!(&quot;e.bx: {:?}&quot;, bx),\n         }\n         drop(x);\ndiff --git a/src/test/ui/error-codes/E0657.stderr b/src/test/ui/error-codes/E0657.stderr\nindex 737ae3a163..df0234a766 100644\n--- a/src/test/ui/error-codes/E0657.stderr\n+++ b/src/test/ui/error-codes/E0657.stderr\n@@ -10,6 +10,8 @@ error[E0657]: `impl Trait` can only capture lifetimes bound at the fn or impl le\n LL |         -&gt; Box&lt;for&lt;&#39;a&gt; Id&lt;impl Lt&lt;&#39;a&gt;&gt;&gt;\n    |                                   ^^\n\n+#0 [typeck_tables_of] processing `free_fn_capture_hrtb_in_impl_trait`\n+#1 [type_of] processing `free_fn_capture_hrtb_in_impl_trait::{{exist-impl-Trait}}`\n error: aborting due to 2 previous errors\n\n For more information about this error, try `rustc --explain E0657`.\ndiff --git a/src/test/ui/impl_trait_projections.stderr b/src/test/ui/impl_trait_projections.stderr\nindex f6d58984ec..2802df1080 100644\n--- a/src/test/ui/impl_trait_projections.stderr\n+++ b/src/test/ui/impl_trait_projections.stderr\n@@ -30,6 +30,7 @@ LL | fn projection_is_disallowed(x: impl Iterator) -&gt; &lt;impl Iterator&gt;::Item {\n    |\n    = note: specify the type using the syntax `&lt;impl std::iter::Iterator as Trait&gt;::Item`\n\n+#0 [type_of] processing `projection_is_disallowed::{{exist-impl-Trait}}`\n error: aborting due to 5 previous errors\n\n Some errors occurred: E0223, E0667.\n</pre></div>",
        "id": 128435766,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529610094
    },
    {
        "content": "<p>and that would be wrong</p>",
        "id": 128435834,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529610155
    },
    {
        "content": "<p>will check these side effects</p>",
        "id": 128435838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529610172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> well yeah, the return Err in the Downcast is making this work like that</p>",
        "id": 128437019,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529611704
    },
    {
        "content": "<p>unsure what we can do about this</p>",
        "id": 128437024,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529611710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> hmm, yeah. I've always considered those errors pretty suboptimal</p>",
        "id": 128437749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612693
    },
    {
        "content": "<p>that is, they are displaying a path to the user that isn't something you could type</p>",
        "id": 128437756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612702
    },
    {
        "content": "<p>and there is no particular reason you should be able to guess what it means</p>",
        "id": 128437762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612708
    },
    {
        "content": "<p>so ... should I do the same?</p>",
        "id": 128437777,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529612740
    },
    {
        "content": "<p>I'm torn between saying \"we should match AST borrowck\" and \"we should improve on it\"</p>",
        "id": 128437778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> you don't happen to be around, do you? I'm curious as to your opinion there :)</p>",
        "id": 128437785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612755
    },
    {
        "content": "<p>well, I meant, what should I do then?</p>",
        "id": 128437832,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529612771
    },
    {
        "content": "<p>well first we should decide if we're trying to match AST or improve upon it :)</p>",
        "id": 128437842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612786
    },
    {
        "content": "<p>I guess that even if we were going to do the latter</p>",
        "id": 128437845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612792
    },
    {
        "content": "<p>I'm not sure if you were saying that the new behavior is wrong for this case or if I should ... ok</p>",
        "id": 128437846,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529612794
    },
    {
        "content": "<p>we'd probably prefer to do it in a separate PR</p>",
        "id": 128437850,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612798
    },
    {
        "content": "<p>sounds like we should make two copies of that darn \"describe-path\" fn</p>",
        "id": 128437853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612807
    },
    {
        "content": "<p>or have a parameter</p>",
        "id": 128437857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612811
    },
    {
        "content": "<p>ok</p>",
        "id": 128437859,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529612816
    },
    {
        "content": "<p>for how to treat downcasts</p>",
        "id": 128437860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612817
    },
    {
        "content": "<p>I'm not wild about that</p>",
        "id": 128437862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612821
    },
    {
        "content": "<p>but I think it's better</p>",
        "id": 128437869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612826
    },
    {
        "content": "<p>and anyway if we are going to match the AST, it does not use paths in some of these cases</p>",
        "id": 128437873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529612841
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/51688\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688\">https://github.com/rust-lang/rust/pull/51688</a> force pushed, it's ugly :/</p>",
        "id": 128440545,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529616081
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/51688\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688\">https://github.com/rust-lang/rust/pull/51688</a> force pushed, it's ugly :/</p>\n</blockquote>\n<p>specifically, you mean the <code>true</code>, <code>false</code>, business?</p>",
        "id": 128466152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529663319
    },
    {
        "content": "<p>(sorry <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> my PR has made yours conflict, I think because of its rustfmt commit)</p>",
        "id": 128466885,
        "sender_full_name": "lqd",
        "timestamp": 1529664512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I left a kind of <a href=\"https://github.com/rust-lang/rust/pull/51688#pullrequestreview-131147167\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688#pullrequestreview-131147167\">\"style nit\" suggestion</a> â€” what do you think?</p>",
        "id": 128467610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529665828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> no worries, ya, that's the bad thing of committing rustfmt changes</p>",
        "id": 128470469,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529670484
    },
    {
        "content": "<p>I'd like to be able to do something like <code>rustfmt file:88-100</code> or even <code>rustfmt file --git-diff-only</code></p>",
        "id": 128470485,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529670524
    },
    {
        "content": "<blockquote>\n<p>@Santiago Pastorino I left a kind of \"style nit\" suggestion â€” what do you think?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> makes sense</p>",
        "id": 128470566,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529670618
    },
    {
        "content": "<blockquote>\n<p>I'd like to be able to do something like <code>rustfmt file:88-100</code> or even <code>rustfmt file --git-diff-only</code></p>\n</blockquote>\n<p>I know @nrc was talking about adding the latter thing at some point.</p>",
        "id": 128471910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529672798
    },
    {
        "content": "<p>that would be a dream</p>",
        "id": 128471936,
        "sender_full_name": "qmx",
        "timestamp": 1529672852
    },
    {
        "content": "<p>mostly I just want to rustfmt all of rustc</p>",
        "id": 128472403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529673526
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> let's do it now :P</p>",
        "id": 128474239,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529676072
    },
    {
        "content": "<p>rustfmt everything and break all the PRs</p>",
        "id": 128474241,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529676081
    },
    {
        "content": "<p>:D</p>",
        "id": 128474243,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529676085
    },
    {
        "content": "<p>or make bors do it on every merge commit</p>",
        "id": 128474306,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529676135
    },
    {
        "content": "<p>yes...</p>",
        "id": 128474704,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529676636
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/51688\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51688\">https://github.com/rust-lang/rust/pull/51688</a> force pushed again</p>",
        "id": 128480960,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529684997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^^^ tests are green, unsure if you need to approve again or something</p>",
        "id": 128490116,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529696657
    },
    {
        "content": "<p>yes it needs to be r+'ed again any time a new commit is added, or the branch is force pushed</p>",
        "id": 128490677,
        "sender_full_name": "lqd",
        "timestamp": 1529697440
    },
    {
        "content": "<p>makes sense <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 128491866,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1529698814
    }
]