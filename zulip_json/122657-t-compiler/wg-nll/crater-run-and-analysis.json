[
    {
        "content": "<p>I was thinking that we ought to do a crater run with NLL enabled and then try to divvy up the work of analyzing the results -- I thought that e.g. folks like <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> might be interested in looking at places where NLL reports new errors and trying to decide if the code was broken to start or not.</p>",
        "id": 128477202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529679983
    },
    {
        "content": "<p>I am going to be away starting in about 22 minutes for the weekend, but maybe we can start in on this next week (or if people want to make steps in that direction independently, wfm).</p>\n<p>I imagine we would do the following:</p>\n<ul>\n<li>Create a branch where NLL is on by default</li>\n<li>Open a <code>[WIP]</code> PR</li>\n<li>Request a crater run</li>\n</ul>",
        "id": 128477229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529680033
    },
    {
        "content": "<p>my goal here is to try and unearth bugs earlier rather than later</p>",
        "id": 128477239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529680056
    },
    {
        "content": "<p>another similar goal would be trying to get rustc to bootstrap with NLL enabled and seeing what breaks</p>",
        "id": 128477245,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529680066
    },
    {
        "content": "<p>this could perhaps be done by adding <code>#![feature(nll)]</code> to every crate one by one</p>",
        "id": 128477252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1529680077
    },
    {
        "content": "<p>oh but for checking if bootstrapping works, only a x.py check would be enough right ? should go pretty fast</p>",
        "id": 128478652,
        "sender_full_name": "lqd",
        "timestamp": 1529682005
    },
    {
        "content": "<p>Yes, mostly -- there might be some parts (e.g., stdsimd/coresimd) that won't be checked via that approach, though. It's likely though that most issues can be resolved via x.py check.</p>",
        "id": 128478781,
        "sender_full_name": "simulacrum",
        "timestamp": 1529682212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> great, thank you</p>",
        "id": 128478877,
        "sender_full_name": "lqd",
        "timestamp": 1529682335
    },
    {
        "content": "<p>we might not want to commit these into master since presumably they'd slow down bootstrap (quite yet) but it'd be good to do a survey</p>",
        "id": 128478933,
        "sender_full_name": "simulacrum",
        "timestamp": 1529682365
    },
    {
        "content": "<p>hehe MIR-borrowck borrowcking AST-borrowck AKA the passing of the torch</p>",
        "id": 128480238,
        "sender_full_name": "lqd",
        "timestamp": 1529683984
    },
    {
        "content": "<blockquote>\n<p>folks like <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> might be interested in looking at places where NLL reports new errors</p>\n</blockquote>\n<p>Sure, but don't let me get in y'all critical path ;-)</p>",
        "id": 128667097,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530032294
    },
    {
        "content": "<p>well the point is</p>",
        "id": 128669185,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530035072
    },
    {
        "content": "<p>this is <strong>not</strong> on the criticial path</p>",
        "id": 128669189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530035079
    },
    {
        "content": "<p>and I'm looking to get a bit ahead of the game</p>",
        "id": 128669190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530035083
    },
    {
        "content": "<p>and start to \"parallelize\" the effort of finding problems</p>",
        "id": 128669196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530035090
    },
    {
        "content": "<p>then it might be a good fit for me</p>",
        "id": 128669457,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530035400
    },
    {
        "content": "<p>OK, I opened an issue about doing a crater run here: <a href=\"https://github.com/rust-lang/rust/issues/51827\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51827\">https://github.com/rust-lang/rust/issues/51827</a></p>\n<p>I'll add some mentoring instructions for how to make the <code>-Zborrowck=mir</code> default change.</p>\n<p>Now to find someone to run it. =)</p>",
        "id": 128684417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530052463
    },
    {
        "content": "<p>try build and we should be able to schedule quickly -- we don't even need to run tests I believe so should be a 3-4 day operation :)</p>",
        "id": 128685796,
        "sender_full_name": "simulacrum",
        "timestamp": 1530054445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Also, I think it might be better to do <code>#![cfg_attr(stage1, feature(nll))]</code> for now</p>",
        "id": 128685861,
        "sender_full_name": "simulacrum",
        "timestamp": 1530054535
    },
    {
        "content": "<p>That we can make sure the compiler doesn't regress and land things incrementally</p>",
        "id": 128685875,
        "sender_full_name": "simulacrum",
        "timestamp": 1530054565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> for bootstrap you mean ? rather than <code>RUSTFLAGS_STAGE_NOT_0</code>?</p>",
        "id": 128685937,
        "sender_full_name": "lqd",
        "timestamp": 1530054608
    },
    {
        "content": "<p>Yeah</p>",
        "id": 128685945,
        "sender_full_name": "simulacrum",
        "timestamp": 1530054650
    },
    {
        "content": "<p>/me hits <code>ctrl</code> and then <code>C</code></p>",
        "id": 128685957,
        "sender_full_name": "lqd",
        "timestamp": 1530054681
    },
    {
        "content": "<p>alright, thank you :)</p>",
        "id": 128685963,
        "sender_full_name": "lqd",
        "timestamp": 1530054707
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Well, if it works right away with RUSTFLAGS_STAGE_NOT_0, then great, but otherwise I would do this incrementally</p>",
        "id": 128685964,
        "sender_full_name": "simulacrum",
        "timestamp": 1530054707
    },
    {
        "content": "<p>absolutely</p>",
        "id": 128686019,
        "sender_full_name": "lqd",
        "timestamp": 1530054756
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I was reluctant to add that if it will regress bors cycle time</p>",
        "id": 128687951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530057767
    },
    {
        "content": "<p>we should measure</p>",
        "id": 128687954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530057769
    },
    {
        "content": "<p>but I like the idea of \"locking in\" crate by crate</p>",
        "id": 128687960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530057779
    },
    {
        "content": "<p>Yeah, but even for a PR that \"gets us ready\" it'll be nice to work through things</p>",
        "id": 128691361,
        "sender_full_name": "simulacrum",
        "timestamp": 1530063401
    },
    {
        "content": "<p>Plus NLL is looking faster by the day -- so it might not actually regress us all that much (i.e., be within margin of error anyway)</p>",
        "id": 128691363,
        "sender_full_name": "simulacrum",
        "timestamp": 1530063419
    },
    {
        "content": "<p>quick summary of background bootstrapping: 10-11 crates refuse to build, because of 1) a couple of known ICEs (incl the one that possibly stops futures from compiling), 2) I think that the \"unused mut\" lint is buggy in 1 or 2 usage patterns (eg w/ closures), 3) a simple but confusing (to me) piece of code which might be \"this should have been a warning before and is now warned by MIR borrowck\" 4) some correct new \"unused mut\" denied warnings 5) I'm still not done investigating, esp the errors (in 2 crates) actually about lifetimes and borrowing</p>",
        "id": 128728426,
        "sender_full_name": "lqd",
        "timestamp": 1530121419
    },
    {
        "content": "<p>nice!</p>",
        "id": 128728479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530121463
    },
    {
        "content": "<p>(3) sounds somewhat concerning, is that warning wording correct? I can't recall warnings from borrowck...</p>",
        "id": 128728509,
        "sender_full_name": "simulacrum",
        "timestamp": 1530121510
    },
    {
        "content": "<p>WIP summary which I'll eventually turn into something more usable is <a href=\"https://gist.github.com/lqd/e962785da3090718e0a64666cf237a27\" target=\"_blank\" title=\"https://gist.github.com/lqd/e962785da3090718e0a64666cf237a27\">here</a></p>",
        "id": 128728527,
        "sender_full_name": "lqd",
        "timestamp": 1530121546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> let me get you the repro</p>",
        "id": 128728528,
        "sender_full_name": "lqd",
        "timestamp": 1530121559
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?gist=bad0f50fef757aa9ba1499254b104fa2&amp;version=nightly&amp;mode=debug\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=bad0f50fef757aa9ba1499254b104fa2&amp;version=nightly&amp;mode=debug\">https://play.rust-lang.org/?gist=bad0f50fef757aa9ba1499254b104fa2&amp;version=nightly&amp;mode=debug</a> -&gt; this gives an unused mut warning under NLL -- and the two things I noted were: 1) NLL vs AST, and 2) move/non-move closure</p>",
        "id": 128728685,
        "sender_full_name": "lqd",
        "timestamp": 1530121723
    },
    {
        "content": "<p>ie, with a move closure either AST or MIR is right that the mut is unused</p>",
        "id": 128728788,
        "sender_full_name": "lqd",
        "timestamp": 1530121850
    },
    {
        "content": "<p>yeah I think there are some other reported bugs about the \"unused  mut\" lint</p>",
        "id": 128728789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530121851
    },
    {
        "content": "<p>I've seem some in closures where the mut is inferred, and others with I think mutable references (and sometimes closures are involved as well)</p>",
        "id": 128728818,
        "sender_full_name": "lqd",
        "timestamp": 1530121914
    },
    {
        "content": "<p>ah, unused mut, okay</p>",
        "id": 128728916,
        "sender_full_name": "simulacrum",
        "timestamp": 1530122029
    },
    {
        "content": "<p>I've never thought about if an assigned-to variable is moved into a <code>move</code> closure</p>",
        "id": 128729073,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530122279
    },
    {
        "content": "<p>I think I'm going to have to do a more thorough re-read of the used-mut code — it was kind of tricky to do, iirc, and I think there's probably some ways to make it simpler</p>",
        "id": 128729380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530122695
    },
    {
        "content": "<p>now that we have a first draft and some known flaws :)</p>",
        "id": 128729384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530122701
    },
    {
        "content": "<p>I’m not sure I reproduced the behavior of the rustc code accurately, and not just the warning; I’ve had real bugs that the unused mut warning noticed so it caught my eye but might be nothing</p>",
        "id": 128729563,
        "sender_full_name": "lqd",
        "timestamp": 1530122903
    },
    {
        "content": "<p>would we want to document cases where unused muts warnings were missed before, similarly to how we track \"fixed by MIR borrowck\" cases ? I'm looking at <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_resolve/resolve_imports.rs#L921\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_resolve/resolve_imports.rs#L921\">this one</a> specifically, and if I needed to reproduce it (extracting the code naively does not reproduce the missing unused mut warning without NLL) ?</p>",
        "id": 128739437,
        "sender_full_name": "lqd",
        "timestamp": 1530134777
    },
    {
        "content": "<p>if the warnings are legit -- that is, the mut really <strong>is</strong> unnecessary -- seems ok?</p>",
        "id": 128739810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530135237
    },
    {
        "content": "<p>it is unnecessary yeah AFAICT</p>",
        "id": 128739868,
        "sender_full_name": "lqd",
        "timestamp": 1530135261
    },
    {
        "content": "<p>ok, I'm not sure if we need to document it per se</p>",
        "id": 128739948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530135372
    },
    {
        "content": "<p>servo also builds with deny warnings, and they've been surprised about new warnings since it broke their build</p>",
        "id": 128740040,
        "sender_full_name": "lqd",
        "timestamp": 1530135516
    },
    {
        "content": "<p>but for something as big as NLL, this new warning seems relatively unimportant for sure</p>",
        "id": 128740075,
        "sender_full_name": "lqd",
        "timestamp": 1530135595
    },
    {
        "content": "<p>We make essentially <em>zero</em> guarantees about deny warnings; we try to stem breakage but I don't see this as unexpected</p>",
        "id": 128740131,
        "sender_full_name": "simulacrum",
        "timestamp": 1530135632
    },
    {
        "content": "<p>my opinion is that if you build with deny(warnings)...well :) then you want warnings to braek your build.</p>",
        "id": 128740135,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530135639
    },
    {
        "content": "<p>but we should offer nice ways to handle it in CI with lint capping</p>",
        "id": 128740139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530135653
    },
    {
        "content": "<p>in any case, we do aggressively fix and add lints...</p>",
        "id": 128740145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530135659
    },
    {
        "content": "<p>oh agreed, I was just checking :)</p>",
        "id": 128740155,
        "sender_full_name": "lqd",
        "timestamp": 1530135672
    },
    {
        "content": "<p>(updated the WIP gist, there's only the 4-5 lifetime errors to check/repro left to do tomorrow — and writeup, issues, etc)</p>",
        "id": 128745686,
        "sender_full_name": "lqd",
        "timestamp": 1530144063
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm having trouble reproducing the liballoc bootstrapping errors: extracting the 10-15 minimal types only yields warnings and not those errors. Specifically, <a href=\"https://github.com/rust-lang/rust/blob/master/src/liballoc/btree/map.rs#L150-L218\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/liballoc/btree/map.rs#L150-L218\">this code</a> seems to cause <a href=\"https://gist.github.com/lqd/e962785da3090718e0a64666cf237a27#file-nll-bootstrap-L1-L38\" target=\"_blank\" title=\"https://gist.github.com/lqd/e962785da3090718e0a64666cf237a27#file-nll-bootstrap-L1-L38\">these errors</a> apparently because of the interaction between the inner fn anonymous lifetime and its generic parameters. To clarify the error messages, since K &amp; V are also generic parameters in the outer fn, the errors point to the _inner_ fn's K &amp; V, clone_subtree</p>",
        "id": 128767628,
        "sender_full_name": "lqd",
        "timestamp": 1530186029
    },
    {
        "content": "<p>hmm</p>",
        "id": 128769529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530189058
    },
    {
        "content": "<p>these errors are caused by adding <code>#![feature(nll)]</code> to liballoc?</p>",
        "id": 128769544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530189077
    },
    {
        "content": "<p>well, probably <code>#![cfg_attr(not(stage0), feature(nll))]</code>?</p>",
        "id": 128769552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530189092
    },
    {
        "content": "<p>I can try to take a look</p>",
        "id": 128769553,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530189095
    },
    {
        "content": "<p>yes, lemme get you the cfg</p>",
        "id": 128769556,
        "sender_full_name": "lqd",
        "timestamp": 1530189116
    },
    {
        "content": "<p><code>#![cfg_attr(stage1, feature(nll))]</code></p>",
        "id": 128769598,
        "sender_full_name": "lqd",
        "timestamp": 1530189129
    },
    {
        "content": "<p>Oh, yeah, we'll want to change stage1 to not(stage0). Minor nit though :)</p>",
        "id": 128769673,
        "sender_full_name": "simulacrum",
        "timestamp": 1530189246
    },
    {
        "content": "<p>yeah when we enable it in the future indeed, as I was just looking for bootstrapping issues for now :)</p>",
        "id": 128769768,
        "sender_full_name": "lqd",
        "timestamp": 1530189420
    },
    {
        "content": "<p>I managed to minimize the bootstrap failure on <code>librustc_passes</code> though, it <a href=\"https://play.rust-lang.org/?gist=437ee47c710623d41f5c444f8a46b81f&amp;version=nightly&amp;mode=debug\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=437ee47c710623d41f5c444f8a46b81f&amp;version=nightly&amp;mode=debug\">looks cute</a> but probably we're already tracking something like it ?</p>",
        "id": 128782666,
        "sender_full_name": "lqd",
        "timestamp": 1530205769
    },
    {
        "content": "<p>well</p>",
        "id": 128782678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530205793
    },
    {
        "content": "<p>I do recall seing that</p>",
        "id": 128782680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530205795
    },
    {
        "content": "<p>I think that it is correct for us to reject it</p>",
        "id": 128782684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530205801
    },
    {
        "content": "<p>unless we choose to expand 2-phase borrows</p>",
        "id": 128782724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530205805
    },
    {
        "content": "<p>I think I proposed it somewhere, motivated by a similar example</p>",
        "id": 128782736,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530205814
    },
    {
        "content": "<p>there were similar examples with \"self / nested calls\" and others in our \"fixed by NLL\" category</p>",
        "id": 128782756,
        "sender_full_name": "lqd",
        "timestamp": 1530205848
    },
    {
        "content": "<p>in any case this one is super easy to fix in rustc (like all the valid unused mut lint warnings)</p>",
        "id": 128782853,
        "sender_full_name": "lqd",
        "timestamp": 1530205991
    },
    {
        "content": "<p>interesting, the liballoc errors I mentioned earlier could actually be linked to temporary lifetimes and tail expressions cases mentioned on discord (it's not the same error message and involves anonymous lifetimes as well <span class=\"emoji emoji-1f914\" title=\"thinking face\">:thinking_face:</span>)</p>",
        "id": 128815693,
        "sender_full_name": "lqd",
        "timestamp": 1530257353
    },
    {
        "content": "<p>hmm :(</p>",
        "id": 128818944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530263781
    },
    {
        "content": "<p>we may have to see if we can sneak in some changes here</p>",
        "id": 128818945,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530263787
    },
    {
        "content": "<p>I've not seriously thought about it</p>",
        "id": 128818947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530263794
    },
    {
        "content": "<p>(I could be very wrong ofc :3)</p>",
        "id": 128818969,
        "sender_full_name": "lqd",
        "timestamp": 1530263878
    },
    {
        "content": "<p>well I do notice it coming up a lot more now</p>",
        "id": 128819019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530263910
    },
    {
        "content": "<p>presumably the AST borrowck was just buggy :/</p>",
        "id": 128819021,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530263917
    },
    {
        "content": "<p>yeah :/</p>",
        "id": 128819651,
        "sender_full_name": "lqd",
        "timestamp": 1530265061
    },
    {
        "content": "<p>apart from these still a bit unclear, it seems all the other things were either known issues (some with fixes) or correct warnings, so still good news I think</p>",
        "id": 128819772,
        "sender_full_name": "lqd",
        "timestamp": 1530265263
    },
    {
        "content": "<p>since some of those ICEs apparently don't appear on master anymore, I'll update and try again</p>",
        "id": 128820134,
        "sender_full_name": "lqd",
        "timestamp": 1530265825
    },
    {
        "content": "<p>sounds good</p>",
        "id": 128820339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530266183
    },
    {
        "content": "<p>update: with some of the previous ICEs removed, I just found other cases of both correct and incorrect mut warnings; also got a weird broken MIR ICE which I had missed before but was already known from previous NLL bootstrapping attempts.</p>",
        "id": 128833658,
        "sender_full_name": "lqd",
        "timestamp": 1530285530
    },
    {
        "content": "<p>Are you filing (or going to file) issues on these things?</p>",
        "id": 128833979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530285909
    },
    {
        "content": "<p>yeah</p>",
        "id": 128833991,
        "sender_full_name": "lqd",
        "timestamp": 1530285937
    },
    {
        "content": "<p>most of them are already filed (some multiple times) so I've been tagging a couple and adding minimized repros</p>",
        "id": 128834004,
        "sender_full_name": "lqd",
        "timestamp": 1530285962
    },
    {
        "content": "<p>wrt the liballoc errors you might have had a patch fixing them before <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ? <a href=\"https://github.com/rust-lang/rust/issues/48224#issuecomment-365952037\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/48224#issuecomment-365952037\">https://github.com/rust-lang/rust/issues/48224#issuecomment-365952037</a></p>",
        "id": 128834058,
        "sender_full_name": "lqd",
        "timestamp": 1530286000
    },
    {
        "content": "<p>I'll summarize all this and report now on the issue we created at the last meeting</p>",
        "id": 128834091,
        "sender_full_name": "lqd",
        "timestamp": 1530286045
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> thank you so much for taking this on &lt;3 =)</p>",
        "id": 128838897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530291815
    },
    {
        "content": "<p>:) no problem!</p>",
        "id": 128838916,
        "sender_full_name": "lqd",
        "timestamp": 1530291842
    },
    {
        "content": "<p>I'm 99% done writing the \"report\", just trying to repro another unused mut warning, in case it's not one we already know</p>",
        "id": 128838965,
        "sender_full_name": "lqd",
        "timestamp": 1530291871
    },
    {
        "content": "<p>(I can publish right now and finish later if need be)</p>",
        "id": 128838974,
        "sender_full_name": "lqd",
        "timestamp": 1530291900
    },
    {
        "content": "<p>it's fine</p>",
        "id": 128839276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292294
    },
    {
        "content": "<p>I did have some patches for some crates</p>",
        "id": 128839277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530292294
    },
    {
        "content": "<p>ok I'm finally done <a href=\"https://github.com/rust-lang/rust/issues/51823#issuecomment-401423108\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51823#issuecomment-401423108\">https://github.com/rust-lang/rust/issues/51823#issuecomment-401423108</a></p>",
        "id": 128840552,
        "sender_full_name": "lqd",
        "timestamp": 1530293942
    },
    {
        "content": "<p>seems like we should prioritize some of those problems (e.g., <a href=\"https://github.com/rust-lang/rust/issues/51351\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51351\">https://github.com/rust-lang/rust/issues/51351</a>)</p>",
        "id": 128841064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530294604
    },
    {
        "content": "<p>yeah it looks interesting</p>",
        "id": 128841881,
        "sender_full_name": "lqd",
        "timestamp": 1530295474
    },
    {
        "content": "<p>ok <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I found my fixes for <a href=\"https://github.com/rust-lang/rust/issues/48224\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/48224\">https://github.com/rust-lang/rust/issues/48224</a></p>",
        "id": 128845112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299433
    },
    {
        "content": "<p>I will open a PR</p>",
        "id": 128845114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299436
    },
    {
        "content": "<p>sweet :)</p>",
        "id": 128845246,
        "sender_full_name": "lqd",
        "timestamp": 1530299583
    },
    {
        "content": "<p>so the problem was in the borrowck and not liballoc ?</p>",
        "id": 128845271,
        "sender_full_name": "lqd",
        "timestamp": 1530299638
    },
    {
        "content": "<p>no</p>",
        "id": 128845464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299880
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/51914\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51914\">https://github.com/rust-lang/rust/pull/51914</a></p>",
        "id": 128845505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530299884
    },
    {
        "content": "<p>I'm trying to find the issue where we were talking about expanding two-phase to cover that scenario you highlighted</p>",
        "id": 128845628,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300020
    },
    {
        "content": "<p>oh great</p>",
        "id": 128845631,
        "sender_full_name": "lqd",
        "timestamp": 1530300022
    },
    {
        "content": "<p>I did try adding such lifetimes to liballoc but I missed adding them to marker::Immut</p>",
        "id": 128845665,
        "sender_full_name": "lqd",
        "timestamp": 1530300079
    },
    {
        "content": "<p>that code is doing some complex stuff :)</p>",
        "id": 128845744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300162
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>, <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> — just to be sure, nobody made any movement towards a crater run yet, right?</p>",
        "id": 128845821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300264
    },
    {
        "content": "<p>(:) even extracting it didn't repro the error so I gave up)</p>",
        "id": 128845828,
        "sender_full_name": "lqd",
        "timestamp": 1530300277
    },
    {
        "content": "<p>I myself didn't no</p>",
        "id": 128845831,
        "sender_full_name": "lqd",
        "timestamp": 1530300282
    },
    {
        "content": "<p>also, <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> would you consider opening a PR adding <code>#![feature(nll)]</code> to the crates that worked to prevent further regressions?</p>",
        "id": 128845833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300291
    },
    {
        "content": "<p>not sure if we should or not</p>",
        "id": 128845835,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300295
    },
    {
        "content": "<p>but might be a good idea</p>",
        "id": 128845839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300299
    },
    {
        "content": "<p>this would slow down the build a bit I guess</p>",
        "id": 128845867,
        "sender_full_name": "lqd",
        "timestamp": 1530300356
    },
    {
        "content": "<p>that's the concern, yeah</p>",
        "id": 128845918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300377
    },
    {
        "content": "<p>not sure how much</p>",
        "id": 128845923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300384
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> do you know what the original source was from which you reduced <a href=\"https://play.rust-lang.org/?gist=9b797f941b3aa419991e15fd5a2d07a0&amp;version=nightly&amp;mode=debug\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=9b797f941b3aa419991e15fd5a2d07a0&amp;version=nightly&amp;mode=debug\">this example</a>?</p>",
        "id": 128845930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300399
    },
    {
        "content": "<p>I think so yes, I'll look at my notes</p>",
        "id": 128845954,
        "sender_full_name": "lqd",
        "timestamp": 1530300432
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>- librustc_passes: 1 error\nerror[E0502]: cannot borrow `*self.tables` as immutable because it is also borrowed as mutable\n   --&gt; librustc_passes/rvalue_promotion.rs:206:76\n    |\n206 |         euv::ExprUseVisitor::new(self, tcx, param_env, &amp;region_scope_tree, self.tables, None)\n    |         -------------------------------------------------------------------^^^^^^^^^^^-------\n    |         |                        |                                         |\n    |         |                        |                                         immutable borrow occurs here\n    |         |                        mutable borrow occurs here\n| borrow later used here\n</pre></div>\n\n\n<p>from <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_passes/rvalue_promotion.rs#L178-L215\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_passes/rvalue_promotion.rs#L178-L215\">here</a></p>",
        "id": 128846055,
        "sender_full_name": "lqd",
        "timestamp": 1530300557
    },
    {
        "content": "<p>thanks</p>",
        "id": 128846122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300630
    },
    {
        "content": "<p>I filed <a href=\"https://github.com/rust-lang/rust/issues/51915\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51915\">https://github.com/rust-lang/rust/issues/51915</a></p>",
        "id": 128846124,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300639
    },
    {
        "content": "<p>I have not done anything towards crater; I expected I'd just help read through results</p>",
        "id": 128846142,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530300672
    },
    {
        "content": "<p>that sounds right</p>",
        "id": 128846161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300697
    },
    {
        "content": "<p>I may try to make that branch then</p>",
        "id": 128846162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530300701
    },
    {
        "content": "<p>Re: adding the outlives to <code>BTreeMap</code> — I wonder if <em>anyone</em> adds the outlives annotations by default, or if we all wait for the compiler error</p>",
        "id": 128846439,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530301034
    },
    {
        "content": "<p>I certainly wait for the error</p>",
        "id": 128846452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301044
    },
    {
        "content": "<p>BUT in Rust 2018</p>",
        "id": 128846453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301046
    },
    {
        "content": "<p>they will be inferred</p>",
        "id": 128846454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301048
    },
    {
        "content": "<p>=)</p>",
        "id": 128846455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301050
    },
    {
        "content": "<p><code>#![feature(infer_struct_outlives)]</code> or something like that -- mostly works, but for a cross-crate issue</p>",
        "id": 128846459,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301066
    },
    {
        "content": "<p>oh nice</p>",
        "id": 128846464,
        "sender_full_name": "lqd",
        "timestamp": 1530301079
    },
    {
        "content": "<p><code>infer_struct_outlives</code> — but this isn't on a struct, it's on a function... ?</p>",
        "id": 128846525,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530301115
    },
    {
        "content": "<p>I don't know if it would have gotten this case</p>",
        "id": 128846628,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301206
    },
    {
        "content": "<p>don't remember the details</p>",
        "id": 128846630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301210
    },
    {
        "content": "<p>we already infer on functions anyway much of the time</p>",
        "id": 128846633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530301218
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Confirming that I have made no crater movement</p>",
        "id": 128849973,
        "sender_full_name": "simulacrum",
        "timestamp": 1530305638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Was enabling more benchmarks on perf.rlo -- the html5ever benchmark seems to exit with status code 1 with <code>--Zborrowck=mir</code> but no errors are reported, have you seen something like this before?</p>",
        "id": 128879095,
        "sender_full_name": "simulacrum",
        "timestamp": 1530362541
    },
    {
        "content": "<p>oh wow, no I don't think I have, however the broken MIR one could have a similar behaviour</p>",
        "id": 128879258,
        "sender_full_name": "lqd",
        "timestamp": 1530362818
    },
    {
        "content": "<p>even though it did have an error printed hum</p>",
        "id": 128879266,
        "sender_full_name": "lqd",
        "timestamp": 1530362866
    },
    {
        "content": "<p>I'll see if the old-ish build I have here has the same behaviour on html5ever</p>",
        "id": 128879381,
        "sender_full_name": "lqd",
        "timestamp": 1530363026
    },
    {
        "content": "<p>at the moment it's just killing my computer :) could it have been the OS killing the process, à la OOM-killer ?</p>",
        "id": 128879791,
        "sender_full_name": "lqd",
        "timestamp": 1530363760
    },
    {
        "content": "<p>hm, maybe</p>",
        "id": 128879849,
        "sender_full_name": "simulacrum",
        "timestamp": 1530363897
    },
    {
        "content": "<p>yeah I think that's what happened</p>",
        "id": 128879862,
        "sender_full_name": "simulacrum",
        "timestamp": 1530363944
    },
    {
        "content": "<p>we're going to have to look into that :)</p>",
        "id": 128880507,
        "sender_full_name": "lqd",
        "timestamp": 1530365133
    },
    {
        "content": "<p>after one or two minutes, rustc is using 10+ GB of memory (even on a month-old nightly)</p>",
        "id": 128880550,
        "sender_full_name": "lqd",
        "timestamp": 1530365187
    },
    {
        "content": "<blockquote>\n<p>using 10+ GB of memory</p>\n</blockquote>\n<div class=\"message_inline_image\"><a href=\"http://i0.kym-cdn.com/entries/icons/original/000/021/311/free.jpg\" target=\"_blank\" title=\"http://i0.kym-cdn.com/entries/icons/original/000/021/311/free.jpg\"><img src=\"https://uploads.zulipusercontent.net/ffdcb5b141250d0a0c4c8008315247a40df924c9/687474703a2f2f69302e6b796d2d63646e2e636f6d2f656e74726965732f69636f6e732f6f726967696e616c2f3030302f3032312f3331312f667265652e6a7067\"></a></div>",
        "id": 128882256,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530368369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Have you done any work on the crater run? If not I can probably get a run going...</p>",
        "id": 128926441,
        "sender_full_name": "simulacrum",
        "timestamp": 1530463976
    },
    {
        "content": "<p>no I haven't done anything</p>",
        "id": 128926488,
        "sender_full_name": "lqd",
        "timestamp": 1530464048
    },
    {
        "content": "<p>Okay, I'll try to get something going</p>",
        "id": 128926499,
        "sender_full_name": "simulacrum",
        "timestamp": 1530464161
    },
    {
        "content": "<p>awesome, thank you <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 128926538,
        "sender_full_name": "lqd",
        "timestamp": 1530464192
    },
    {
        "content": "<p>I didn't either, didn't quite have time</p>",
        "id": 128970666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530545840
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> did you end up doing anything here?</p>",
        "id": 128971883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547042
    },
    {
        "content": "<p>Yes, crater run is started -- ETA around 3 days, I think</p>",
        "id": 128971893,
        "sender_full_name": "simulacrum",
        "timestamp": 1530547067
    },
    {
        "content": "<p>awesome!</p>",
        "id": 128971951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547106
    },
    {
        "content": "<p>can you link the PR in <a href=\"https://github.com/rust-lang/rust/issues/51827\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51827\">https://github.com/rust-lang/rust/issues/51827</a> ?</p>",
        "id": 128971954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547116
    },
    {
        "content": "<p>or whatever the basis for the crater run is</p>",
        "id": 128971959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547122
    },
    {
        "content": "<p>It's not any specific PR, just a commit on master</p>",
        "id": 128971966,
        "sender_full_name": "simulacrum",
        "timestamp": 1530547135
    },
    {
        "content": "<p>ok; link to commit? :)</p>",
        "id": 128971980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547145
    },
    {
        "content": "<p>Yeah, sure</p>",
        "id": 128971982,
        "sender_full_name": "simulacrum",
        "timestamp": 1530547149
    },
    {
        "content": "<p>ty</p>",
        "id": 128971985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547152
    },
    {
        "content": "<p>or maybe give the diff</p>",
        "id": 128971987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547158
    },
    {
        "content": "<p>I'd just like some record for posterity</p>",
        "id": 128971993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530547164
    },
    {
        "content": "<p>(this is recorded in the crater spreadsheet, too); this run had 0 diff with rust-lang/rust because we ended up just using <code>RUSTFLAGS</code> instead of changing rustc itself to pass the borrowck arg</p>",
        "id": 128972102,
        "sender_full_name": "simulacrum",
        "timestamp": 1530547264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> fyi, crater run failed with an out of memory error</p>",
        "id": 129032894,
        "sender_full_name": "simulacrum",
        "timestamp": 1530634831
    },
    {
        "content": "<p>looking into it now</p>",
        "id": 129032900,
        "sender_full_name": "simulacrum",
        "timestamp": 1530634836
    },
    {
        "content": "<p>oh, hmm, didn't we find something that consumed tons of memory? I should investigate those extreme results...</p>",
        "id": 129032925,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530634862
    },
    {
        "content": "<p>ah, yes, <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> mentioned html5ever</p>",
        "id": 129032944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530634891
    },
    {
        "content": "<p>anyway, I'm going to see if I can just restart it -- if that works, great, if not I might be able to generate a report based on what happened already</p>",
        "id": 129033007,
        "sender_full_name": "simulacrum",
        "timestamp": 1530634925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> for tuple-stress, do we do --lib or --bin ? I can't tell</p>",
        "id": 129033054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635003
    },
    {
        "content": "<p>since html5ever is on <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> it might even be the cause of the OOM</p>",
        "id": 129033058,
        "sender_full_name": "lqd",
        "timestamp": 1530635007
    },
    {
        "content": "<p>for tuple stress I don't use either lib or bin</p>",
        "id": 129033115,
        "sender_full_name": "lqd",
        "timestamp": 1530635052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> There is only bin?</p>",
        "id": 129033127,
        "sender_full_name": "simulacrum",
        "timestamp": 1530635071
    },
    {
        "content": "<p>no, there is both</p>",
        "id": 129033130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635079
    },
    {
        "content": "<p>i.e. it's just one file?</p>",
        "id": 129033131,
        "sender_full_name": "simulacrum",
        "timestamp": 1530635083
    },
    {
        "content": "<p>at least in my directory</p>",
        "id": 129033134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635085
    },
    {
        "content": "<p>src/lib.rs exists</p>",
        "id": 129033138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635088
    },
    {
        "content": "<p>maybe I touched it</p>",
        "id": 129033139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635090
    },
    {
        "content": "<p>oh, I did :)</p>",
        "id": 129033140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635092
    },
    {
        "content": "<p>only main tho</p>",
        "id": 129033151,
        "sender_full_name": "lqd",
        "timestamp": 1530635104
    },
    {
        "content": "<p>right phew :)</p>",
        "id": 129033160,
        "sender_full_name": "lqd",
        "timestamp": 1530635112
    },
    {
        "content": "<p>/me remembers this dang test</p>",
        "id": 129033180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635152
    },
    {
        "content": "<p>can we do something special for constants/statics ? this thing is huge</p>",
        "id": 129033252,
        "sender_full_name": "lqd",
        "timestamp": 1530635192
    },
    {
        "content": "<p>yes, that's why it's in the test suite :)</p>",
        "id": 129033297,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635243
    },
    {
        "content": "<p>well, we've thought about specializing these exact sorts of huge constants</p>",
        "id": 129033303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635252
    },
    {
        "content": "<p>but that's fairly orthogonal from NLL</p>",
        "id": 129033308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635259
    },
    {
        "content": "<p>mostly we wanted to do that for memory consumption</p>",
        "id": 129033311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635264
    },
    {
        "content": "<p>(in principle we can do it, now that miri is all integrated etc)</p>",
        "id": 129033328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635276
    },
    {
        "content": "<p>anyway, I am going to <em>guess</em> that the problem is the \"for each block, iterate over each live variable\" setup</p>",
        "id": 129033375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635294
    },
    {
        "content": "<p>in particular, we keep the live variables in a bit set</p>",
        "id": 129033379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635300
    },
    {
        "content": "<p>(the MIR is huge I meant)</p>",
        "id": 129033384,
        "sender_full_name": "lqd",
        "timestamp": 1530635303
    },
    {
        "content": "<p>which does not support O(n) iteration really</p>",
        "id": 129033389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635309
    },
    {
        "content": "<p>well, point is, iteration is proportional to the total number of locals</p>",
        "id": 129033394,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635321
    },
    {
        "content": "<p>not the number <em>live</em> locals</p>",
        "id": 129033398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635324
    },
    {
        "content": "<p>but let me do my profile and see</p>",
        "id": 129033404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635335
    },
    {
        "content": "<p>oh, and there are 65k*2 locals at least</p>",
        "id": 129033422,
        "sender_full_name": "lqd",
        "timestamp": 1530635358
    },
    {
        "content": "<p>not sure if that hypothesis holds up</p>",
        "id": 129033511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635415
    },
    {
        "content": "<p>given the time spent in folding</p>",
        "id": 129033518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635419
    },
    {
        "content": "<p>I was wondering whether the SCC would impact here</p>",
        "id": 129033529,
        "sender_full_name": "lqd",
        "timestamp": 1530635432
    },
    {
        "content": "<p>not the PR I made I don't think</p>",
        "id": 129033538,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635450
    },
    {
        "content": "<p>doesn't affect liveness</p>",
        "id": 129033539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635456
    },
    {
        "content": "<p>oh yeah it was about regions</p>",
        "id": 129033567,
        "sender_full_name": "lqd",
        "timestamp": 1530635489
    },
    {
        "content": "<p>SCC seems to make the bad cases worse, loosely</p>",
        "id": 129033587,
        "sender_full_name": "simulacrum",
        "timestamp": 1530635514
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/nll-dashboard.html?commit=3fcccbf34a7af46ec467dc21c321db20994357ea&amp;stat=max-rss\" target=\"_blank\" title=\"https://perf.rust-lang.org/nll-dashboard.html?commit=3fcccbf34a7af46ec467dc21c321db20994357ea&amp;stat=max-rss\">https://perf.rust-lang.org/nll-dashboard.html?commit=3fcccbf34a7af46ec467dc21c321db20994357ea&amp;stat=max-rss</a> vs <a href=\"https://perf.rust-lang.org/nll-dashboard.html?commit=&amp;stat=max-rss\" target=\"_blank\" title=\"https://perf.rust-lang.org/nll-dashboard.html?commit=&amp;stat=max-rss\">https://perf.rust-lang.org/nll-dashboard.html?commit=&amp;stat=max-rss</a></p>",
        "id": 129033637,
        "sender_full_name": "simulacrum",
        "timestamp": 1530635526
    },
    {
        "content": "<p>this url's \"from\" commit is not the one we should be using to compare to the previous merge ? <a href=\"http://perf.rust-lang.org/compare.html?start=4faaf7e3359fa78bad2e8c54011e94ce8ac078c6&amp;end=3fcccbf34a7af46ec467dc21c321db20994357ea&amp;stat=instructions%3Au\" target=\"_blank\" title=\"http://perf.rust-lang.org/compare.html?start=4faaf7e3359fa78bad2e8c54011e94ce8ac078c6&amp;end=3fcccbf34a7af46ec467dc21c321db20994357ea&amp;stat=instructions%3Au\">http://perf.rust-lang.org/compare.html?start=4faaf7e3359fa78bad2e8c54011e94ce8ac078c6&amp;end=3fcccbf34a7af46ec467dc21c321db20994357ea&amp;stat=instructions%3Au</a></p>",
        "id": 129033696,
        "sender_full_name": "lqd",
        "timestamp": 1530635612
    },
    {
        "content": "<p>I loosely compared to master, but that might be wrong</p>",
        "id": 129033757,
        "sender_full_name": "simulacrum",
        "timestamp": 1530635653
    },
    {
        "content": "<p>I observed some similar things locally. Seems surprising. I'll have to investigate a bit more.</p>",
        "id": 129033777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635675
    },
    {
        "content": "<p>but also: the master status is looking pretty decent</p>",
        "id": 129033819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635717
    },
    {
        "content": "<p>yeah, memory is not bad</p>",
        "id": 129033837,
        "sender_full_name": "simulacrum",
        "timestamp": 1530635747
    },
    {
        "content": "<p>or, I see, that was just memory</p>",
        "id": 129033841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635753
    },
    {
        "content": "<p>:)</p>",
        "id": 129033843,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635756
    },
    {
        "content": "<p>I was like \"man when did we get to 105%!\"</p>",
        "id": 129033882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635764
    },
    {
        "content": "<p><span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span> oh noes</p>",
        "id": 129033898,
        "sender_full_name": "lqd",
        "timestamp": 1530635780
    },
    {
        "content": "<p>SCCs have positive impacts on inflate</p>",
        "id": 129033946,
        "sender_full_name": "lqd",
        "timestamp": 1530635846
    },
    {
        "content": "<p>but it seems like it doesn't for most of the others</p>",
        "id": 129033964,
        "sender_full_name": "lqd",
        "timestamp": 1530635877
    },
    {
        "content": "<p>yeah. I can't really see why that would be, I'll have to do more profiling locally</p>",
        "id": 129034015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530635902
    },
    {
        "content": "<p>crater run seems to have restarted successfully -- about 1/2 done loosely speaking</p>",
        "id": 129034358,
        "sender_full_name": "simulacrum",
        "timestamp": 1530636264
    },
    {
        "content": "<p>Crater run is done, currently uploading logs</p>",
        "id": 129080715,
        "sender_full_name": "simulacrum",
        "timestamp": 1530705674
    },
    {
        "content": "<p>However it looks like I messed up a little when hacking crater since both toolchains appear to have ran with NLL enabled</p>",
        "id": 129080798,
        "sender_full_name": "simulacrum",
        "timestamp": 1530705764
    },
    {
        "content": "<p>though that might be an artifact of reporting -- I'll try to determine that</p>",
        "id": 129080855,
        "sender_full_name": "simulacrum",
        "timestamp": 1530705804
    },
    {
        "content": "<p>Yeah okay crater isn't properly working with the same master commit it looks like</p>",
        "id": 129080959,
        "sender_full_name": "simulacrum",
        "timestamp": 1530705925
    },
    {
        "content": "<p>oh; can we salvage something out of the run or would we have to do another one ? (eg can we compare errors to another recent run)</p>",
        "id": 129081180,
        "sender_full_name": "lqd",
        "timestamp": 1530706203
    },
    {
        "content": "<p>I'm looking into it</p>",
        "id": 129081218,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706275
    },
    {
        "content": "<p>Technically the run is quite good -- sort of</p>",
        "id": 129081222,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706283
    },
    {
        "content": "<p>There's no regressions but many of the build failures are likely NLL related, though it's hard to tell. <a href=\"https://cargobomb-reports.s3.amazonaws.com/nll-1/index.html\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/nll-1/index.html\">https://cargobomb-reports.s3.amazonaws.com/nll-1/index.html</a> is the index page -- some logs won't be uploaded yet though</p>",
        "id": 129081271,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706325
    },
    {
        "content": "<p>I think I can salvage the run successfully</p>",
        "id": 129081332,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706438
    },
    {
        "content": "<p>But I'll wait for these logs to upload just in case</p>",
        "id": 129081378,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706454
    },
    {
        "content": "<p>the regressions would only be noticed if crater could compare to the other commit right ?</p>",
        "id": 129081381,
        "sender_full_name": "lqd",
        "timestamp": 1530706464
    },
    {
        "content": "<p>Yeah -- I think I can convince crater that we actually ran against a different commit; should be relatively easy to point it at a past PR run (well, master from that run)</p>",
        "id": 129081406,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706507
    },
    {
        "content": "<p>do you by any chance remember if 3432 failures is in the ballpark of recent master runs ?</p>",
        "id": 129081420,
        "sender_full_name": "lqd",
        "timestamp": 1530706541
    },
    {
        "content": "<p>I can look... I think.</p>",
        "id": 129081428,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706557
    },
    {
        "content": "<p>if not no worries, tricking crater into thinking we used another commit will take of it</p>",
        "id": 129081487,
        "sender_full_name": "lqd",
        "timestamp": 1530706591
    },
    {
        "content": "<p>last PR run has ~2000 build-fails <a href=\"https://cargobomb-reports.s3.amazonaws.com/pr-51762/index.html\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/pr-51762/index.html\">https://cargobomb-reports.s3.amazonaws.com/pr-51762/index.html</a></p>",
        "id": 129081488,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706592
    },
    {
        "content": "<p>awesome thank you</p>",
        "id": 129081527,
        "sender_full_name": "lqd",
        "timestamp": 1530706648
    },
    {
        "content": "<p>okay all logs uploaded, I'll try to hack crater now</p>",
        "id": 129081529,
        "sender_full_name": "simulacrum",
        "timestamp": 1530706651
    },
    {
        "content": "<p>until then I'll be looking at all the crates starting with an \"A\" -- there are \"NLL errors\" from the couple I've looked at, so likely I don't need to wait for the crater hack :)</p>",
        "id": 129081601,
        "sender_full_name": "lqd",
        "timestamp": 1530706753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> wait, was the run using 2 phase borrows ?</p>",
        "id": 129081936,
        "sender_full_name": "lqd",
        "timestamp": 1530707174
    },
    {
        "content": "<p>Unfortunately, no, because I only found out yesterday that's part of what we're shipping</p>",
        "id": 129081943,
        "sender_full_name": "simulacrum",
        "timestamp": 1530707197
    },
    {
        "content": "<p>:) ok good to know for everyone that some of the errors we can see in <a href=\"https://github.com/rust-lang/rust/issues/51372\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51372\">https://github.com/rust-lang/rust/issues/51372</a> esp <code>cannot borrow \"_\" as mutable because it is also borrowed as immutable</code> are normally no big deal</p>",
        "id": 129081989,
        "sender_full_name": "lqd",
        "timestamp": 1530707263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Should I kick off another run with two phase borrows immediately?</p>",
        "id": 129082183,
        "sender_full_name": "simulacrum",
        "timestamp": 1530707477
    },
    {
        "content": "<p>probably better to ask <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> :) I myself guess it couldn't hurt</p>",
        "id": 129082260,
        "sender_full_name": "lqd",
        "timestamp": 1530707604
    },
    {
        "content": "<p>I don't know what errors not having them could make, and I only saw the \"cannot borrow _\" once in the 10-20 I just opened now (but ofc they may exist here, I just can't tell from a glance)</p>",
        "id": 129082334,
        "sender_full_name": "lqd",
        "timestamp": 1530707650
    },
    {
        "content": "<blockquote>\n<p>wait, was the run using 2 phase borrows ?</p>\n</blockquote>\n<p>argh</p>",
        "id": 129082877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I think you should probably kick off another run, yes.</p>",
        "id": 129082889,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708192
    },
    {
        "content": "<p>that sucks :(</p>",
        "id": 129082891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708195
    },
    {
        "content": "<p>I've been wanting to change the sense of that flag forever</p>",
        "id": 129082899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708208
    },
    {
        "content": "<p>i.e., to make <code>-Zno-two-phase-borrows</code> =)</p>",
        "id": 129082901,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708214
    },
    {
        "content": "<p>since we want them on by default</p>",
        "id": 129082904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708219
    },
    {
        "content": "<p>/me wishes he had done that now :)</p>",
        "id": 129082908,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708229
    },
    {
        "content": "<p>I'm still slightly confused -- I thought two phase borrows didn't exist with old borrowck?</p>",
        "id": 129082911,
        "sender_full_name": "simulacrum",
        "timestamp": 1530708230
    },
    {
        "content": "<p>they don't</p>",
        "id": 129082920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708238
    },
    {
        "content": "<p>the flag has no effect if you are not using MIR borrowck</p>",
        "id": 129082958,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708243
    },
    {
        "content": "<p>hm, so we shouldn't see regressions because of it?</p>",
        "id": 129082979,
        "sender_full_name": "simulacrum",
        "timestamp": 1530708261
    },
    {
        "content": "<p>well MIR borrowck fixes a lot of bugs</p>",
        "id": 129082985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708280
    },
    {
        "content": "<p>however, a non-trivial percentage of those bugs</p>",
        "id": 129082994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708289
    },
    {
        "content": "<p>because of two phase borrows, I mean?</p>",
        "id": 129082997,
        "sender_full_name": "simulacrum",
        "timestamp": 1530708293
    },
    {
        "content": "<p>are STILL not errors because of 2-phase borrows</p>",
        "id": 129083000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708299
    },
    {
        "content": "<p>ah, hm, okay, that makes sense</p>",
        "id": 129083009,
        "sender_full_name": "simulacrum",
        "timestamp": 1530708308
    },
    {
        "content": "<p>no I mean that there are cases that -- without 2-phase borrows -- ought to be rejected (but we fail to do so)</p>",
        "id": 129083015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708315
    },
    {
        "content": "<p>but with 2-phase borrows ought to be accepted</p>",
        "id": 129083019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708321
    },
    {
        "content": "<p>Right, so we'll have \"false\" regressions</p>",
        "id": 129083026,
        "sender_full_name": "simulacrum",
        "timestamp": 1530708334
    },
    {
        "content": "<p>yeah</p>",
        "id": 129083028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708338
    },
    {
        "content": "<p>still actually it's kind of interesting to have data on that :)</p>",
        "id": 129083046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708348
    },
    {
        "content": "<p>silver lining</p>",
        "id": 129083048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708351
    },
    {
        "content": "<p>I wonder if we can start by screening for ICEs?</p>",
        "id": 129083093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708364
    },
    {
        "content": "<p>is that something we can automate?</p>",
        "id": 129083095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708369
    },
    {
        "content": "<p>(what format are crater results stored in...?)</p>",
        "id": 129083113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530708395
    },
    {
        "content": "<p>S3</p>",
        "id": 129083118,
        "sender_full_name": "simulacrum",
        "timestamp": 1530708400
    },
    {
        "content": "<p>I'll look into hunting for ICEs once I try to get regressions actually working and start the two phase borrows run</p>",
        "id": 129083135,
        "sender_full_name": "simulacrum",
        "timestamp": 1530708433
    },
    {
        "content": "<p>in the crater report, do we have the tested crate's commit in addition to its version, or if I needed to look at the code I should the get commit from ... somewhere on <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> if the GH doesn't have it tagged ?</p>",
        "id": 129083725,
        "sender_full_name": "lqd",
        "timestamp": 1530709245
    },
    {
        "content": "<p>or to ask differently, how can I reproduce the errors crater sees ? :)</p>",
        "id": 129083762,
        "sender_full_name": "lqd",
        "timestamp": 1530709277
    },
    {
        "content": "<p>It's just the <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> upload, so you can get the precise source code via <a href=\"https://gist.github.com/nikomatsakis/75e09ed314bea715e192ce226127d3c6\" target=\"_blank\" title=\"https://gist.github.com/nikomatsakis/75e09ed314bea715e192ce226127d3c6\">https://gist.github.com/nikomatsakis/75e09ed314bea715e192ce226127d3c6</a></p>",
        "id": 129083765,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> sweet, thanks a lot</p>",
        "id": 129083811,
        "sender_full_name": "lqd",
        "timestamp": 1530709322
    },
    {
        "content": "<p>Also, proper regression report is ready; should be able to extract and open index.html <a href=\"/user_uploads/4715/_gwSL0sK9gZupUuxnpq9vdqt/report.tar.gz\" target=\"_blank\" title=\"report.tar.gz\">report.tar.gz</a></p>",
        "id": 129083833,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709330
    },
    {
        "content": "<p>(file is tiny)</p>",
        "id": 129083834,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Okay, so to be sure, I need to pass <code>-Zborrowck=mir -Ztwo-phase-borrows</code>, and that's it, right?</p>",
        "id": 129083867,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709400
    },
    {
        "content": "<p>let me double check but I believe that is true :)</p>",
        "id": 129083887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709441
    },
    {
        "content": "<p>correct</p>",
        "id": 129083947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709466
    },
    {
        "content": "<p>okay, then I'll kick off a run that should hopefully not need fixing post run this time :)</p>",
        "id": 129083957,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Hm, do you happen to have an existing try build you think we could use for this? (I just need it to not cause regressions of its own)</p>",
        "id": 129084059,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709608
    },
    {
        "content": "<p>i.e. I need two commits that will be equivalent on master or on try</p>",
        "id": 129084071,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709625
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> yeah, I suppose so</p>",
        "id": 129084073,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709627
    },
    {
        "content": "<p>one of the recent PRs would probably do?</p>",
        "id": 129084081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709638
    },
    {
        "content": "<p>they are a <em>bit</em> outdated but...</p>",
        "id": 129084094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709651
    },
    {
        "content": "<p>I guess I can look ...</p>",
        "id": 129084097,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709661
    },
    {
        "content": "<p>maybe the build from here <a href=\"https://github.com/rust-lang/rust/pull/52007\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/52007\">https://github.com/rust-lang/rust/pull/52007</a> ?</p>",
        "id": 129084152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709688
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/commit/00bcc44fb92c28465c727881355c3235a56a4045\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/00bcc44fb92c28465c727881355c3235a56a4045\">https://github.com/rust-lang/rust/commit/00bcc44fb92c28465c727881355c3235a56a4045</a></p>",
        "id": 129084164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709702
    },
    {
        "content": "<p>parent is 1 day old: <a href=\"https://github.com/rust-lang/rust/commit/860d169474acabdc53b9a698f8ce02eba7e0daeb\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/860d169474acabdc53b9a698f8ce02eba7e0daeb\">https://github.com/rust-lang/rust/commit/860d169474acabdc53b9a698f8ce02eba7e0daeb</a></p>",
        "id": 129084172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709712
    },
    {
        "content": "<p>I can take two master commits too, if that helps</p>",
        "id": 129084204,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709767
    },
    {
        "content": "<p>well... I suppose any master commit is fine?</p>",
        "id": 129084264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709805
    },
    {
        "content": "<p>I'm not really clear on what you need :)</p>",
        "id": 129084276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709817
    },
    {
        "content": "<p>hm, I'll just use that PR I think</p>",
        "id": 129084277,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709817
    },
    {
        "content": "<p>I need two separate SHAs but the same underlying code, basically -- well, as close as \"same\"</p>",
        "id": 129084289,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709837
    },
    {
        "content": "<p>anyway, that PR's try build should be fine</p>",
        "id": 129084308,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709853
    },
    {
        "content": "<p>yeah</p>",
        "id": 129084312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709856
    },
    {
        "content": "<p>should be ok</p>",
        "id": 129084315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530709858
    },
    {
        "content": "<p>Time to look for ICEs</p>",
        "id": 129084319,
        "sender_full_name": "simulacrum",
        "timestamp": 1530709860
    },
    {
        "content": "<p>Okay, looks like 276 ICEs</p>",
        "id": 129086377,
        "sender_full_name": "simulacrum",
        "timestamp": 1530712480
    },
    {
        "content": "<p>(some might be duplicates)</p>",
        "id": 129086380,
        "sender_full_name": "simulacrum",
        "timestamp": 1530712491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> What's the best way to report these? Somehow deduplicate and open issues?</p>",
        "id": 129086407,
        "sender_full_name": "simulacrum",
        "timestamp": 1530712558
    },
    {
        "content": "<p>good question :)</p>",
        "id": 129086466,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530712615
    },
    {
        "content": "<p>I guess trying to deduplicate somehow would be a start -- maybe just group them by the panic message?</p>",
        "id": 129086471,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530712626
    },
    {
        "content": "<p>and/or location of the panic</p>",
        "id": 129086473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530712631
    },
    {
        "content": "<p>it seems like opening 276 ICEs is a bit overkill — maybe opening up one issue with a list...?</p>",
        "id": 129086479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530712650
    },
    {
        "content": "<p>hm, okay, location should work</p>",
        "id": 129086480,
        "sender_full_name": "simulacrum",
        "timestamp": 1530712650
    },
    {
        "content": "<p>as I'm going through the As, some of their dependencies fail, so anything else depending on:<br>\n- num-bigint-0.1.44<br>\n- pulldown-cmark-0.1.2<br>\n- crossbeam-channel-0.1.3<br>\nwill fail because of 2 phase borrows (bit of a PSA, and I'll try and doing this again if I stumble upon more)</p>",
        "id": 129086482,
        "sender_full_name": "lqd",
        "timestamp": 1530712654
    },
    {
        "content": "<p>depends how much we can group them I guess</p>",
        "id": 129086484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530712657
    },
    {
        "content": "<p>I think many are duplicates</p>",
        "id": 129086485,
        "sender_full_name": "simulacrum",
        "timestamp": 1530712658
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/52054\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52054\">https://github.com/rust-lang/rust/issues/52054</a> -- <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 129088331,
        "sender_full_name": "simulacrum",
        "timestamp": 1530714800
    },
    {
        "content": "<p>Looks like ~3 categories</p>",
        "id": 129088345,
        "sender_full_name": "simulacrum",
        "timestamp": 1530714823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> are there false positives ? there is no error <a href=\"https://cargobomb-reports.s3.amazonaws.com/nll-1/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/reg/africastalking_gateway-0.1.0/log.txt\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/nll-1/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/reg/africastalking_gateway-0.1.0/log.txt\">here</a> ?</p>",
        "id": 129088468,
        "sender_full_name": "lqd",
        "timestamp": 1530714929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  Less so false positive and more so probably an error in which directory the log was copied from -- you can see that log doesn't have MIR borrowck enabled</p>",
        "id": 129088557,
        "sender_full_name": "simulacrum",
        "timestamp": 1530715012
    },
    {
        "content": "<p>I also built that crate with NLL to make sure</p>",
        "id": 129088644,
        "sender_full_name": "lqd",
        "timestamp": 1530715083
    },
    {
        "content": "<p>hm, no idea then -- might be a false positive</p>",
        "id": 129088654,
        "sender_full_name": "simulacrum",
        "timestamp": 1530715102
    },
    {
        "content": "<p>yeah maybe, I'll just note it for later if we want/need to look more into it</p>",
        "id": 129088690,
        "sender_full_name": "lqd",
        "timestamp": 1530715162
    },
    {
        "content": "<p>oh it's some leftover artefacts that it builds here, the crate builds but one of its deps doesn't</p>",
        "id": 129088790,
        "sender_full_name": "lqd",
        "timestamp": 1530715245
    },
    {
        "content": "<p>so likely just wrong log indeed</p>",
        "id": 129088814,
        "sender_full_name": "lqd",
        "timestamp": 1530715273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> interesting, thanks! &lt;3</p>",
        "id": 129090075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530716746
    },
    {
        "content": "<p>/me sees the light at the end of the tunnel of As</p>",
        "id": 129093377,
        "sender_full_name": "lqd",
        "timestamp": 1530720967
    },
    {
        "content": "<p>quick analysis of those &lt;50 crates <a href=\"https://hackmd.io/s/H1x-c18cGm\" target=\"_blank\" title=\"https://hackmd.io/s/H1x-c18cGm\">https://hackmd.io/s/H1x-c18cGm</a></p>",
        "id": 129093390,
        "sender_full_name": "lqd",
        "timestamp": 1530720997
    },
    {
        "content": "<p>only 1442 to go :D</p>",
        "id": 129093411,
        "sender_full_name": "lqd",
        "timestamp": 1530721031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> It might be faster if you write a script or something to analyze them if the results are fairly methodical... I can give you all the regressed logs if you want</p>",
        "id": 129093469,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721101
    },
    {
        "content": "<p>in a tarball, that is</p>",
        "id": 129093474,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721107
    },
    {
        "content": "<p>interesting thought for sure</p>",
        "id": 129093490,
        "sender_full_name": "lqd",
        "timestamp": 1530721135
    },
    {
        "content": "<p>I think pietroalbini had some script too...</p>",
        "id": 129093508,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721165
    },
    {
        "content": "<p>some of the logs have the problems we mentioned</p>",
        "id": 129093512,
        "sender_full_name": "lqd",
        "timestamp": 1530721167
    },
    {
        "content": "<p>yeah I bet it must be very helpful to the infra-team and thus would be helpful to me :D</p>",
        "id": 129093574,
        "sender_full_name": "lqd",
        "timestamp": 1530721211
    },
    {
        "content": "<p>this is the script I used for the ICE hunt: <a href=\"https://gist.github.com/Mark-Simulacrum/2a3cf12527d541a29f66316c55ec54f8\" target=\"_blank\" title=\"https://gist.github.com/Mark-Simulacrum/2a3cf12527d541a29f66316c55ec54f8\">https://gist.github.com/Mark-Simulacrum/2a3cf12527d541a29f66316c55ec54f8</a></p>",
        "id": 129093611,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721265
    },
    {
        "content": "<p>If it looks helpful I can help guide you through setup; it basically just downloads the logs and does \"things\" to them</p>",
        "id": 129093626,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721296
    },
    {
        "content": "<p>even though the most mechanical task I had to do was filtering out the 2 phase borrow errors, as I have not really started trying to reproduce/minimize/understand the real errors I saw</p>",
        "id": 129093645,
        "sender_full_name": "lqd",
        "timestamp": 1530721321
    },
    {
        "content": "<p>oooh shiny</p>",
        "id": 129093704,
        "sender_full_name": "lqd",
        "timestamp": 1530721381
    },
    {
        "content": "<p>yeah looks helpful</p>",
        "id": 129093811,
        "sender_full_name": "lqd",
        "timestamp": 1530721555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Okay, so you'll want to download the inputs to it</p>",
        "id": 129093949,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721707
    },
    {
        "content": "<p>the 2 json files, which I'm guessing are different from the ones in your report tarball ?</p>",
        "id": 129093965,
        "sender_full_name": "lqd",
        "timestamp": 1530721738
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>wget https://cargobomb-reports.s3.amazonaws.com/nll-1/results.json -O results-nll-1.json\nwget http://cargobomb-reports.s3.amazonaws.com/pr-51762/results.json -O results-pr-51762.json\n</pre></div>",
        "id": 129093979,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721760
    },
    {
        "content": "<p>I think that should be all you need to run it... but if it breaks, I'll investigate</p>",
        "id": 129093994,
        "sender_full_name": "simulacrum",
        "timestamp": 1530721793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> thanks a lot! I've downloaded the inputs, I'll ping you if I have a problem but agreed seems like all I'd need. I might not do it right now :)</p>",
        "id": 129094084,
        "sender_full_name": "lqd",
        "timestamp": 1530721887
    },
    {
        "content": "<p>hum there are errors I saw in these crates' dependencies, but they themselves don't all appear as regressions</p>",
        "id": 129096484,
        "sender_full_name": "lqd",
        "timestamp": 1530725590
    },
    {
        "content": "<p>I think I'll continue by analyzing/minimizing more of the errors in the \"A\" crates I did earlier, before looking at more crates from the crater report (this can serve as a reminder for others, if they look at this, start from the crates beginning with a B -- even though most of the errors are probably in their dependencies unfortunately)</p>",
        "id": 129096490,
        "sender_full_name": "lqd",
        "timestamp": 1530725626
    },
    {
        "content": "<p>I'm gonna spend an hour looking at those ICEs</p>",
        "id": 129096533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530725699
    },
    {
        "content": "<blockquote>\n<p>broken MIR in DefId(0/0:2416 ~ syntex_syntax[45c6]::ext[0]::</p>\n</blockquote>\n<p>that is so curious</p>",
        "id": 129096609,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530725846
    },
    {
        "content": "<p>why on earth are we borrow checking syntex</p>",
        "id": 129096613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530725855
    },
    {
        "content": "<p><em>oh</em>, I know what that is</p>",
        "id": 129096614,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530725863
    },
    {
        "content": "<p>it's a known bug</p>",
        "id": 129096615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530725865
    },
    {
        "content": "<p>assigned to me, in fact :)</p>",
        "id": 129096619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530725877
    },
    {
        "content": "<p>ok, categorized the ICEs and linked them to open issues. One was not previously known.</p>",
        "id": 129097196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530726834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> this is a <a href=\"https://play.rust-lang.org/?gist=14e1e0c616b95e846e46fd4a322d8c06&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=14e1e0c616b95e846e46fd4a322d8c06&amp;version=nightly&amp;mode=debug&amp;edition=2015\">legit error</a> right ? it's from url 1.7.0 and prevents building 10-15 out of the 50 crates I've looked at</p>",
        "id": 129099364,
        "sender_full_name": "lqd",
        "timestamp": 1530730399
    },
    {
        "content": "<p>hmm</p>",
        "id": 129099430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730512
    },
    {
        "content": "<p>what do you mean by \"legit\"?</p>",
        "id": 129099432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730517
    },
    {
        "content": "<p>a valid error</p>",
        "id": 129099436,
        "sender_full_name": "lqd",
        "timestamp": 1530730537
    },
    {
        "content": "<p>like, the code should not compile?</p>",
        "id": 129099439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730546
    },
    {
        "content": "<p>I think yeah ?</p>",
        "id": 129099442,
        "sender_full_name": "lqd",
        "timestamp": 1530730553
    },
    {
        "content": "<p>it does seem correct</p>",
        "id": 129099485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730569
    },
    {
        "content": "<p>thanks to the drop, yes</p>",
        "id": 129099486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730571
    },
    {
        "content": "<p>took me a second to see that</p>",
        "id": 129099487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730576
    },
    {
        "content": "<p>I feel like there is a patched version of <code>url</code> that solves this?</p>",
        "id": 129099492,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730589
    },
    {
        "content": "<p>but I am wrong :)</p>",
        "id": 129099496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730600
    },
    {
        "content": "<p>really ? oh lol</p>",
        "id": 129099499,
        "sender_full_name": "lqd",
        "timestamp": 1530730607
    },
    {
        "content": "<p>no, I am mistaken, 1.7.0 seems to be the newest</p>",
        "id": 129099503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730617
    },
    {
        "content": "<p>there was some other crate with (iirc) a similar thing going on</p>",
        "id": 129099509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730625
    },
    {
        "content": "<p>the error is pretty bad :(</p>",
        "id": 129099514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730644
    },
    {
        "content": "<p>we should file a diagnostic bug on that</p>",
        "id": 129099517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730648
    },
    {
        "content": "<p>it's still like this in rust-url master btw</p>",
        "id": 129099520,
        "sender_full_name": "lqd",
        "timestamp": 1530730658
    },
    {
        "content": "<p>it is a bit obscure :)</p>",
        "id": 129099534,
        "sender_full_name": "lqd",
        "timestamp": 1530730682
    },
    {
        "content": "<p>it should say something about Drop, clearly</p>",
        "id": 129099572,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730698
    },
    {
        "content": "<p>I'll file an issue</p>",
        "id": 129099578,
        "sender_full_name": "lqd",
        "timestamp": 1530730722
    },
    {
        "content": "<p>the <em>easiest</em> fix would probably be to make it an <code>Option&lt;&amp;'a mut&gt;</code> in the crate</p>",
        "id": 129099580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730729
    },
    {
        "content": "<p>so you can <code>take()</code> it</p>",
        "id": 129099583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730736
    },
    {
        "content": "<p>(presuming of course that the Drop is needed)</p>",
        "id": 129099585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730741
    },
    {
        "content": "<p>I'll tell that to Simon :p</p>",
        "id": 129099592,
        "sender_full_name": "lqd",
        "timestamp": 1530730755
    },
    {
        "content": "<p>if you do:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">S</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">finish</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"na\">&#39;a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">url</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">p</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>you get a better error...but anyway.</p>",
        "id": 129099652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730822
    },
    {
        "content": "<p>at least it mentions Drop <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 129099666,
        "sender_full_name": "lqd",
        "timestamp": 1530730864
    },
    {
        "content": "<p>the reason is that just returning <code>self.url</code> implicitly reborrows</p>",
        "id": 129099674,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730895
    },
    {
        "content": "<p>so you get <code>&amp;mut self.url</code></p>",
        "id": 129099676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730899
    },
    {
        "content": "<p>I'm not sure why this leads to that precise error about temporaries</p>",
        "id": 129099681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730909
    },
    {
        "content": "<p>seems like a bug</p>",
        "id": 129099682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730913
    },
    {
        "content": "<p>oh but maybe we're already tracking this diagnostics issue, I'll need to check</p>",
        "id": 129099724,
        "sender_full_name": "lqd",
        "timestamp": 1530730937
    },
    {
        "content": "<p>oh, I guess it doesn't talk about temporaries</p>",
        "id": 129099730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730956
    },
    {
        "content": "<p>there may well be an issue, yes.</p>",
        "id": 129099733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530730964
    },
    {
        "content": "<p>the title of <a href=\"https://github.com/rust-lang/rust/issues/46634\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/46634\">https://github.com/rust-lang/rust/issues/46634</a> was promising</p>",
        "id": 129099977,
        "sender_full_name": "lqd",
        "timestamp": 1530731389
    },
    {
        "content": "<p>yeah, I thought of that one, but it seems to be distinct issue</p>",
        "id": 129100030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530731423
    },
    {
        "content": "<p>yeah, and I can't find a specific issue so I'll file it as \"Implicit reborrow hides error <code>Cannot move out of Struct with destructor</code>\" if that sounds good</p>",
        "id": 129100189,
        "sender_full_name": "lqd",
        "timestamp": 1530731643
    },
    {
        "content": "<p>sure</p>",
        "id": 129100295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530731859
    },
    {
        "content": "<p>(filed as <a href=\"https://github.com/rust-lang/rust/issues/52059\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52059\">https://github.com/rust-lang/rust/issues/52059</a>) now to talk to Simon about servo's crate</p>",
        "id": 129101066,
        "sender_full_name": "lqd",
        "timestamp": 1530732866
    },
    {
        "content": "<p>fixed_by_nll += 1; <a href=\"https://github.com/servo/rust-url/pull/454\" target=\"_blank\" title=\"https://github.com/servo/rust-url/pull/454\">https://github.com/servo/rust-url/pull/454</a></p>",
        "id": 129104356,
        "sender_full_name": "lqd",
        "timestamp": 1530737637
    },
    {
        "content": "<p>this feels like a workaround for the lack of GATs but the error is a bit obscure again <a href=\"https://play.rust-lang.org/?gist=ce6ac6b0e7db4be75fc3bcac57c6ba9c&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=ce6ac6b0e7db4be75fc3bcac57c6ba9c&amp;version=nightly&amp;mode=debug&amp;edition=2015\">https://play.rust-lang.org/?gist=ce6ac6b0e7db4be75fc3bcac57c6ba9c&amp;version=nightly&amp;mode=debug&amp;edition=2015</a> (extracted from specs 0.10) <span class=\"emoji emoji-1f615\" title=\"confused\">:confused:</span></p>",
        "id": 129136906,
        "sender_full_name": "lqd",
        "timestamp": 1530796428
    },
    {
        "content": "<p>also here's an alternative to niko's <code>cargo-curl</code> which also accepts the crate-version format that the crater report uses: <a href=\"https://gist.github.com/lqd/4a8af10389d10840d90655c109df5eac\" target=\"_blank\" title=\"https://gist.github.com/lqd/4a8af10389d10840d90655c109df5eac\">https://gist.github.com/lqd/4a8af10389d10840d90655c109df5eac</a></p>",
        "id": 129138240,
        "sender_full_name": "lqd",
        "timestamp": 1530797757
    },
    {
        "content": "<p>hmm, that seems like a bug to me <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 129138401,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530797902
    },
    {
        "content": "<p>specifically, I think the implied bounds computation may be messing up somehow</p>",
        "id": 129138412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530797915
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?gist=1cede31dc3f102bb779ae37607c719b0&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=1cede31dc3f102bb779ae37607c719b0&amp;version=nightly&amp;mode=debug&amp;edition=2015\">this variant has a clearer error message</a></p>",
        "id": 129138447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530797981
    },
    {
        "content": "<p>but I think we should infer a relationship between <code>'a</code> and <code>'b</code> from the argument type</p>",
        "id": 129138462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530798000
    },
    {
        "content": "<p>I forgot to mention there was something related to the bounds, that is specs does not have the T: 'a, but didn't show an error while this minimized version actually did</p>",
        "id": 129138520,
        "sender_full_name": "lqd",
        "timestamp": 1530798019
    },
    {
        "content": "<p>yes indeed a bit clearer, I also tried this</p>",
        "id": 129138578,
        "sender_full_name": "lqd",
        "timestamp": 1530798082
    },
    {
        "content": "<p>the empty named region was cute though</p>",
        "id": 129138588,
        "sender_full_name": "lqd",
        "timestamp": 1530798101
    },
    {
        "content": "<p>(so there might still be something else to extract from specs, more scaffolding causing some implied bounds to be missed)</p>",
        "id": 129138669,
        "sender_full_name": "lqd",
        "timestamp": 1530798164
    },
    {
        "content": "<p>this crater run is <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 129138764,
        "sender_full_name": "lqd",
        "timestamp": 1530798283
    },
    {
        "content": "<blockquote>\n<p>this crater run is <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>\n</blockquote>\n<p>in what sense? like, finding bugs?</p>",
        "id": 129138817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530798361
    },
    {
        "content": "<p>are you filing bugs or taking notes?</p>",
        "id": 129138858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530798365
    },
    {
        "content": "<p>ps thank you one million times :)</p>",
        "id": 129138869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530798374
    },
    {
        "content": "<p>(also, I think we should think about trying to advertise this as a wider effort? maybe?)</p>",
        "id": 129138887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530798395
    },
    {
        "content": "<p>finding bugs and issues both in borrowck and existing crates</p>",
        "id": 129138906,
        "sender_full_name": "lqd",
        "timestamp": 1530798420
    },
    {
        "content": "<p>I'm doing both, notes from yesterday are here <a href=\"https://hackmd.io/s/H1x-c18cGm\" target=\"_blank\" title=\"https://hackmd.io/s/H1x-c18cGm\">https://hackmd.io/s/H1x-c18cGm</a>, and I'll file this new issue soon</p>",
        "id": 129138943,
        "sender_full_name": "lqd",
        "timestamp": 1530798465
    },
    {
        "content": "<p>I just did a first pass on the \"As\" yesterday, and now sifting through the interesting errors</p>",
        "id": 129139007,
        "sender_full_name": "lqd",
        "timestamp": 1530798545
    },
    {
        "content": "<p>(and seeing that in those 50 crates, the dependencies were the source of errors, it made me worried that we might duplicate triaging efforts if we shard work by the first letter, and that realization also made me hope crater uses sccache or similar, otherwise it'll be compiling the same dependencies a lot ;)</p>",
        "id": 129139169,
        "sender_full_name": "lqd",
        "timestamp": 1530798707
    },
    {
        "content": "<p>I think it compiles things into a shared workspace, but I'm not sure. <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> might know.</p>",
        "id": 129139351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530798888
    },
    {
        "content": "<p>It does, but the order of compilation isn't the best I believe</p>",
        "id": 129139378,
        "sender_full_name": "simulacrum",
        "timestamp": 1530798921
    },
    {
        "content": "<p>We probably are also making Cargo somewhat unhappy since we put ~20,000 crates into the same target dir</p>",
        "id": 129139389,
        "sender_full_name": "simulacrum",
        "timestamp": 1530798940
    },
    {
        "content": "<p>sweet! (it was just a random thought anyway)</p>",
        "id": 129139404,
        "sender_full_name": "lqd",
        "timestamp": 1530798958
    },
    {
        "content": "<p>a good cargo stress test</p>",
        "id": 129139449,
        "sender_full_name": "lqd",
        "timestamp": 1530798966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I think we can take the crates and generate a graph from it if you want, should be able to help with the duplicated work problem -- at least for <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> crates that's easy</p>",
        "id": 129139471,
        "sender_full_name": "simulacrum",
        "timestamp": 1530798989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> roughly, how many GB is that target dir?</p>",
        "id": 129139483,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530798999
    },
    {
        "content": "<p>hm, the docs suggest that after a full run it's ~600 GB but I'm looking how the nll run is doing now</p>",
        "id": 129139541,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> could be interesting to graph out the regressions yeah; however: the errors I'm seeing only appear as regressions in dependent crates, they themselves don't seem to be in the report ? it could be because we massaged the report, or does that sound familiar ?</p>",
        "id": 129139563,
        "sender_full_name": "lqd",
        "timestamp": 1530799083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> It's possible we're skipping the dependent crates or something like that -- you can try and see if the dependent crate exists at all (e.g., enable all the tabs at the top of index.html)</p>",
        "id": 129139612,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> 35 GB at ~8000 crates tested out of the 20,000 we look at</p>",
        "id": 129139652,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799181
    },
    {
        "content": "<p>(this is for a check run, though)</p>",
        "id": 129139657,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> for example url 1.7.0 is indeed in build-fails but not in regressions</p>",
        "id": 129139729,
        "sender_full_name": "lqd",
        "timestamp": 1530799231
    },
    {
        "content": "<p>oh but it could be because of warnings</p>",
        "id": 129139766,
        "sender_full_name": "lqd",
        "timestamp": 1530799269
    },
    {
        "content": "<p>The report shows that in both the original run and later run it failed to build</p>",
        "id": 129139776,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799279
    },
    {
        "content": "<p>yeah and one of those 2 denies lints</p>",
        "id": 129139789,
        "sender_full_name": "lqd",
        "timestamp": 1530799297
    },
    {
        "content": "<p>right ?</p>",
        "id": 129139847,
        "sender_full_name": "lqd",
        "timestamp": 1530799327
    },
    {
        "content": "<p>Hm, no we cap lints at warn; the errors look like missing functions which feels odd...</p>",
        "id": 129139867,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799352
    },
    {
        "content": "<p>in the \"new toolchain\" but not the old one</p>",
        "id": 129139883,
        "sender_full_name": "lqd",
        "timestamp": 1530799374
    },
    {
        "content": "<p>url-1.7.0 is build fail in the old one too, <a href=\"https://cargobomb-reports.s3.amazonaws.com/pr-51762/01cc982e936120acb0424e41de14e42ba2d88c6f/reg/url-1.7.0\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/pr-51762/01cc982e936120acb0424e41de14e42ba2d88c6f/reg/url-1.7.0\">https://cargobomb-reports.s3.amazonaws.com/pr-51762/01cc982e936120acb0424e41de14e42ba2d88c6f/reg/url-1.7.0</a></p>",
        "id": 129139907,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799397
    },
    {
        "content": "<p>er, <a href=\"https://cargobomb-reports.s3.amazonaws.com/pr-51762/01cc982e936120acb0424e41de14e42ba2d88c6f/reg/url-1.7.0/log.txt\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/pr-51762/01cc982e936120acb0424e41de14e42ba2d88c6f/reg/url-1.7.0/log.txt\">https://cargobomb-reports.s3.amazonaws.com/pr-51762/01cc982e936120acb0424e41de14e42ba2d88c6f/reg/url-1.7.0/log.txt</a></p>",
        "id": 129139916,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799405
    },
    {
        "content": "<p>what I'm saying is, url-1.7.0 fails in the non-nll toolchain because of --cap-lints=forbid, while it fails in the NLL toolchain because of its lifetime bug</p>",
        "id": 129139988,
        "sender_full_name": "lqd",
        "timestamp": 1530799447
    },
    {
        "content": "<p>is that correct ?</p>",
        "id": 129139994,
        "sender_full_name": "lqd",
        "timestamp": 1530799460
    },
    {
        "content": "<p>no</p>",
        "id": 129140005,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799474
    },
    {
        "content": "<p>good :D</p>",
        "id": 129140014,
        "sender_full_name": "lqd",
        "timestamp": 1530799486
    },
    {
        "content": "<p>the log I linked is from the non-nll toolchain and has the assert function not found errors</p>",
        "id": 129140028,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799494
    },
    {
        "content": "<p>e.g. <code>Jun 27 14:06:10.335 INFO kablam! error[E0425]: cannot find function </code>assert_test_result<code> in module </code>self::test`</p>",
        "id": 129140037,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799504
    },
    {
        "content": "<p>how are those found only enabling NLL on the same master commit</p>",
        "id": 129140051,
        "sender_full_name": "lqd",
        "timestamp": 1530799524
    },
    {
        "content": "<p>it's possible the crate's tests are just failing in general</p>",
        "id": 129140058,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799541
    },
    {
        "content": "<p>spuriously maybe ?</p>",
        "id": 129140064,
        "sender_full_name": "lqd",
        "timestamp": 1530799553
    },
    {
        "content": "<p>This does not look like a spurious failure</p>",
        "id": 129140105,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799565
    },
    {
        "content": "<p>this seems strange</p>",
        "id": 129140110,
        "sender_full_name": "lqd",
        "timestamp": 1530799567
    },
    {
        "content": "<p>The assert_test_result function comes from libtest, I think</p>",
        "id": 129140238,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799709
    },
    {
        "content": "<p>I'll look at this crate again because I can't repro these errors with NLL disabled</p>",
        "id": 129140252,
        "sender_full_name": "lqd",
        "timestamp": 1530799724
    },
    {
        "content": "<p>I can reproduce locally too</p>",
        "id": 129140277,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799759
    },
    {
        "content": "<p><code>cargo check --all-targets</code> in the tarball reproduces</p>",
        "id": 129140279,
        "sender_full_name": "simulacrum",
        "timestamp": 1530799771
    },
    {
        "content": "<p>so it is the cfgs that I'm missing while reproducing</p>",
        "id": 129140290,
        "sender_full_name": "lqd",
        "timestamp": 1530799797
    },
    {
        "content": "<p>cargo test indeed fails to compile like expected</p>",
        "id": 129140440,
        "sender_full_name": "lqd",
        "timestamp": 1530799927
    },
    {
        "content": "<p>thankfully some other crate depended on its default target or I would have missed it</p>",
        "id": 129140497,
        "sender_full_name": "lqd",
        "timestamp": 1530800022
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> You generally want to do <code>--all-targets</code>.</p>",
        "id": 129140756,
        "sender_full_name": "simulacrum",
        "timestamp": 1530800229
    },
    {
        "content": "<p>Anyway, did you want that crate graph so you can eliminate children?</p>",
        "id": 129140769,
        "sender_full_name": "simulacrum",
        "timestamp": 1530800244
    },
    {
        "content": "<p>if you have one available sure :)</p>",
        "id": 129140837,
        "sender_full_name": "lqd",
        "timestamp": 1530800306
    },
    {
        "content": "<p>(but don't go out of your way to build it just for me)</p>",
        "id": 129140843,
        "sender_full_name": "lqd",
        "timestamp": 1530800320
    },
    {
        "content": "<p>I think I have some code that does it anyway, just need to pull it in for crater's regressions</p>",
        "id": 129140911,
        "sender_full_name": "simulacrum",
        "timestamp": 1530800394
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <a href=\"https://github.com/Mark-Simulacrum/crater-report-merge\" target=\"_blank\" title=\"https://github.com/Mark-Simulacrum/crater-report-merge\">https://github.com/Mark-Simulacrum/crater-report-merge</a> -- <a href=\"https://github.com/Mark-Simulacrum/crater-report-merge/blob/master/src/main.rs#L222-L225\" target=\"_blank\" title=\"https://github.com/Mark-Simulacrum/crater-report-merge/blob/master/src/main.rs#L222-L225\">https://github.com/Mark-Simulacrum/crater-report-merge/blob/master/src/main.rs#L222-L225</a> -- not sure how to format it better, right now it just dumps a wall of text at you</p>",
        "id": 129145195,
        "sender_full_name": "simulacrum",
        "timestamp": 1530804446
    },
    {
        "content": "<p>which for URL is quite long: dependents on url 1.7.0: 11498 crates, 11237 versions</p>",
        "id": 129145266,
        "sender_full_name": "simulacrum",
        "timestamp": 1530804496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> oh thanks a lot for this :)</p>",
        "id": 129145367,
        "sender_full_name": "lqd",
        "timestamp": 1530804607
    },
    {
        "content": "<p>(if anyone was interested about url's test story: <a href=\"https://github.com/servo/rust-url/pull/439\" target=\"_blank\" title=\"https://github.com/servo/rust-url/pull/439\">https://github.com/servo/rust-url/pull/439</a>)</p>",
        "id": 129145510,
        "sender_full_name": "lqd",
        "timestamp": 1530804782
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/rust/issues/52078\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52078\">https://github.com/rust-lang/rust/issues/52078</a> for the specs issue, I don't know what tags I should add so just A-NLL for now</p>",
        "id": 129145869,
        "sender_full_name": "lqd",
        "timestamp": 1530805204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> fyi, until we have a fix for the memory issue I think it will be somewhat painful to run crater</p>",
        "id": 129150210,
        "sender_full_name": "simulacrum",
        "timestamp": 1530810057
    },
    {
        "content": "<p>do you mean the one that effects html5ever?</p>",
        "id": 129150309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530810172
    },
    {
        "content": "<p>Yeah, there's a few other crates it affects (well, perhaps one)</p>",
        "id": 129150558,
        "sender_full_name": "simulacrum",
        "timestamp": 1530810513
    },
    {
        "content": "<p>do we have any idea what they are?</p>",
        "id": 129150995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530811043
    },
    {
        "content": "<p>I should probably prioritize that</p>",
        "id": 129150998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530811048
    },
    {
        "content": "<p>I have at least one idea that should ameliorate it</p>",
        "id": 129151001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530811059
    },
    {
        "content": "<p>I was hoping to mentor it out but maybe should just try to <em>do it</em></p>",
        "id": 129151009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530811071
    },
    {
        "content": "<p>I'd probably want to build on <a href=\"https://github.com/rust-lang/rust/pull/51987\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51987\">https://github.com/rust-lang/rust/pull/51987</a></p>",
        "id": 129151056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530811095
    },
    {
        "content": "<p>marksman_escape</p>",
        "id": 129151486,
        "sender_full_name": "simulacrum",
        "timestamp": 1530811668
    },
    {
        "content": "<blockquote>\n<p>14GB usage</p>\n</blockquote>",
        "id": 129151491,
        "sender_full_name": "simulacrum",
        "timestamp": 1530811676
    },
    {
        "content": "<blockquote>\n<p>I was hoping to mentor it out but maybe should just try to <em>do it</em></p>\n</blockquote>\n<p>so <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> — sorry I got distracted — actually maybe you want to work on trying to address <a href=\"https://github.com/rust-lang/rust/issues/52028\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52028\">https://github.com/rust-lang/rust/issues/52028</a> ?</p>",
        "id": 129153556,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813727
    },
    {
        "content": "<p>that said, we should at least discuss the other thing</p>",
        "id": 129153606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813783
    },
    {
        "content": "<p>let me go leave a few comments there, maybe file an issue</p>",
        "id": 129153619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813794
    },
    {
        "content": "<p>Is @nnethercote not working on that?</p>",
        "id": 129153628,
        "sender_full_name": "davidtwco",
        "timestamp": 1530813809
    },
    {
        "content": "<p>I don't think so...they were looking at <code>unroll_place</code>...</p>",
        "id": 129153711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813858
    },
    {
        "content": "<p>I was thinking <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> specifically of <a href=\"https://github.com/rust-lang/rust/issues/52028#issuecomment-402509289\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52028#issuecomment-402509289\">this idea</a></p>",
        "id": 129153759,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813934
    },
    {
        "content": "<p>let's open a thread I guess</p>",
        "id": 129153766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530813944
    },
    {
        "content": "<p>I'm working on triaging the run with a script — thanks to the awesome <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> — but in the meantime, here's another crate which takes a lot of RAM in my tests: <code>isolang-0.2.1</code>(again, 10G in a minute or so)</p>",
        "id": 129161836,
        "sender_full_name": "lqd",
        "timestamp": 1530821942
    },
    {
        "content": "<p>alrighty, progress update, I'm not 100% sure about all this but here goes — 1) I first separated in the report, the regressions with local errors from the ones whose errors are only in dependencies, <a href=\"https://hackmd.io/s/H1x-c18cGm#Automated-results-1\" target=\"_blank\" title=\"https://hackmd.io/s/H1x-c18cGm#Automated-results-1\">here</a> 2) out of those, I <code>cratesio-curled</code>ed my way to checking each of them for 2-phase-borrows (2PB in my linked notes) false positives (I'm not typing ariel's 2ΦB ever again :p), 3) I then did a first quick pass on those to clear the ones which didn't look like NLL-related (some liballoc shenanigans, etc) which you can see <a href=\"https://hackmd.io/s/H1x-c18cGm#Automated-results-2\" target=\"_blank\" title=\"https://hackmd.io/s/H1x-c18cGm#Automated-results-2\">here</a> 4) there are some crates with errors marked interesting to investigate later which I will do ... later ... before extracting from the report the regressions located in dependencies only</p>",
        "id": 129168325,
        "sender_full_name": "lqd",
        "timestamp": 1530829321
    },
    {
        "content": "<p>(we could make NLLbot with this: it downloads all crates and if one doesn't build with NLLs it opens an issue in its repo :)</p>",
        "id": 129168778,
        "sender_full_name": "lqd",
        "timestamp": 1530829888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <a href=\"https://github.com/pietroalbini/crater-tree\" target=\"_blank\" title=\"https://github.com/pietroalbini/crater-tree\">https://github.com/pietroalbini/crater-tree</a> is probably much better than my hacky tool</p>",
        "id": 129175401,
        "sender_full_name": "simulacrum",
        "timestamp": 1530839584
    },
    {
        "content": "<p>Crater run should be done tomorrow morning I think</p>",
        "id": 129179729,
        "sender_full_name": "simulacrum",
        "timestamp": 1530848040
    },
    {
        "content": "<p>oh thanks, yours worked fine</p>",
        "id": 129183536,
        "sender_full_name": "lqd",
        "timestamp": 1530855940
    },
    {
        "content": "<p>ok I'm see a 2PB ICE when trying to filter them from the report; it's likely we'll see it again in the new crater run</p>",
        "id": 129190598,
        "sender_full_name": "lqd",
        "timestamp": 1530867965
    },
    {
        "content": "<p>(it's the one <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> fixed but the run won't have this PR ofc)</p>",
        "id": 129190904,
        "sender_full_name": "lqd",
        "timestamp": 1530868509
    },
    {
        "content": "<p>am I misunderstanding this <a href=\"https://play.rust-lang.org/?gist=9c644f7e792ca4ae0d2ac0b3239e45ff&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=9c644f7e792ca4ae0d2ac0b3239e45ff&amp;version=nightly&amp;mode=debug&amp;edition=2015\">piece of code</a> (extracted from the fscmp crater failures) ?  is it normal that the second line compiles and the first doesn't ?</p>",
        "id": 129196582,
        "sender_full_name": "lqd",
        "timestamp": 1530877699
    },
    {
        "content": "<p>seems wacky to me:)</p>",
        "id": 129197322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530878722
    },
    {
        "content": "<p>same :)</p>",
        "id": 129197846,
        "sender_full_name": "lqd",
        "timestamp": 1530879436
    },
    {
        "content": "<p>the 1s line failing looks like a \"fixed by NLL\" case though (in the real crate it's not as useless as the version I minimized of course)</p>",
        "id": 129201246,
        "sender_full_name": "lqd",
        "timestamp": 1530883550
    },
    {
        "content": "<p>err, looking at it more, I'm confused and the 1st line should probably compile ?!</p>",
        "id": 129203649,
        "sender_full_name": "lqd",
        "timestamp": 1530886332
    },
    {
        "content": "<p>I think it should compile</p>",
        "id": 129203764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530886467
    },
    {
        "content": "<p>that's what I meant before :)</p>",
        "id": 129203770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530886474
    },
    {
        "content": "<p>right I confused myself :/</p>",
        "id": 129203846,
        "sender_full_name": "lqd",
        "timestamp": 1530886553
    },
    {
        "content": "<p>(as I couldn't find a similar issue, filed as <a href=\"https://github.com/rust-lang/rust/issues/52111\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52111\">https://github.com/rust-lang/rust/issues/52111</a>)</p>",
        "id": 129206827,
        "sender_full_name": "lqd",
        "timestamp": 1530889506
    },
    {
        "content": "<p>I'm going to throw that on the Edition Preview 2 milestone for now</p>",
        "id": 129207571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530890396
    },
    {
        "content": "<p>maybe we need an \"needs diagnosis\" label...</p>",
        "id": 129207622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530890413
    },
    {
        "content": "<p>as in \"we need to diagnose these issues\" ?</p>",
        "id": 129207851,
        "sender_full_name": "lqd",
        "timestamp": 1530890658
    },
    {
        "content": "<p>yes e.g. there are a few ICEs whose cause I do not know</p>",
        "id": 129207862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530890673
    },
    {
        "content": "<p>similarly I have no idea what is leading to that particular bug</p>",
        "id": 129207870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530890678
    },
    {
        "content": "<p>I feel like it's important to \"classify\" the error in order to assess how hard it will be to fix :)</p>",
        "id": 129207880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530890690
    },
    {
        "content": "<p>very true, as of now we don't have a whole lot of information on a small number of issues</p>",
        "id": 129207920,
        "sender_full_name": "lqd",
        "timestamp": 1530890746
    },
    {
        "content": "<p>and the results of the new crater run with 2PB should be ready soon, so maybe new issues we'll need to diagnose as well</p>",
        "id": 129208182,
        "sender_full_name": "lqd",
        "timestamp": 1530891037
    },
    {
        "content": "<p>I keep thinking  \"lead\" and \"peanut butter\" for \"2PB\"</p>",
        "id": 129208979,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530892001
    },
    {
        "content": "<p>I definitely think of PBJ</p>",
        "id": 129208987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530892010
    },
    {
        "content": "<p>makes it more amusing</p>",
        "id": 129208992,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530892018
    },
    {
        "content": "<p>btw is there a better/official acronym ?</p>",
        "id": 129209030,
        "sender_full_name": "lqd",
        "timestamp": 1530892067
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> New crater run done, 2342 regressions (this one will 2PB enabled) <a href=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/index.html\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/index.html\">https://cargobomb-reports.s3.amazonaws.com/nll-3/index.html</a> -- not sure why the number is higher than before this time around :/</p>",
        "id": 129211241,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894518
    },
    {
        "content": "<p>That's progress of a sort ;-)</p>",
        "id": 129211252,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530894544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> thank you</p>",
        "id": 129211264,
        "sender_full_name": "lqd",
        "timestamp": 1530894583
    },
    {
        "content": "<p>indeed an interesting question</p>",
        "id": 129211269,
        "sender_full_name": "lqd",
        "timestamp": 1530894601
    },
    {
        "content": "<p>It might be that we previously didn't detect all regressions or something like that</p>",
        "id": 129211329,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894620
    },
    {
        "content": "<p>could be</p>",
        "id": 129211358,
        "sender_full_name": "lqd",
        "timestamp": 1530894662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> how can I determine why a crate is skipped?</p>",
        "id": 129211365,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530894668
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> <a href=\"https://github.com/rust-lang-nursery/crater/blob/master/config.toml\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/crater/blob/master/config.toml\">https://github.com/rust-lang-nursery/crater/blob/master/config.toml</a> -- search for the name</p>",
        "id": 129211380,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894709
    },
    {
        "content": "<p>master wasn't especially different from the previous run ?</p>",
        "id": 129211386,
        "sender_full_name": "lqd",
        "timestamp": 1530894714
    },
    {
        "content": "<p>ah skipped is the blacklist maybe ?</p>",
        "id": 129211421,
        "sender_full_name": "lqd",
        "timestamp": 1530894723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Hm, not sure -- you can compare the commits, it might have been more recent</p>",
        "id": 129211437,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <code>twox-hash = { skip = true } #automatic</code> — so... what does \"automatic\" mean? <span class=\"emoji emoji-1f607\" title=\"innocent\">:innocent:</span></p>",
        "id": 129211441,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530894758
    },
    {
        "content": "<p>previous run was somewhat faulty since I think there may have been race conditions</p>",
        "id": 129211443,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894760
    },
    {
        "content": "<p>and  the OOMs were probably not helping</p>",
        "id": 129211449,
        "sender_full_name": "lqd",
        "timestamp": 1530894775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> Not sure. Maybe <a href=\"https://github.com/rust-lang-nursery/crater/blob/master/find-bad-crates.py\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/crater/blob/master/find-bad-crates.py\">https://github.com/rust-lang-nursery/crater/blob/master/find-bad-crates.py</a>?</p>",
        "id": 129211460,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894791
    },
    {
        "content": "<p>I'd like to make sure all of my crates <em>can</em> be tested, so I'm trying to figure out if I screwed something up</p>",
        "id": 129211484,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530894842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> It looks like it was added after it didn't pass 8 runs in <a href=\"https://github.com/rust-lang-nursery/crater/commit/cf95b1063aacc71ddd6af7386b658240720f5013\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/crater/commit/cf95b1063aacc71ddd6af7386b658240720f5013\">https://github.com/rust-lang-nursery/crater/commit/cf95b1063aacc71ddd6af7386b658240720f5013</a></p>\n<p>You can fairly easily run crater yourself on just that crate by adding it to the demo-crates list I think, I'd check if that works</p>",
        "id": 129211562,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894909
    },
    {
        "content": "<p>could I ask what those are at the bottom of the regressions, they look like weird versions ?</p>",
        "id": 129211572,
        "sender_full_name": "lqd",
        "timestamp": 1530894920
    },
    {
        "content": "<p>Generally it can be that crates with odd build scripts (e.g., writing files) are not quite right</p>",
        "id": 129211578,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894930
    },
    {
        "content": "<p>er, don't build</p>",
        "id": 129211582,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> You mean \"ubnt-intrepid.hyper-web-server.ac6165a6a2f30cb5cf6dc\"?</p>",
        "id": 129211586,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894953
    },
    {
        "content": "<p>That's a GitHub repo, ubnt-intrepid/hyper-web-server at that commit hash</p>",
        "id": 129211638,
        "sender_full_name": "simulacrum",
        "timestamp": 1530894973
    },
    {
        "content": "<p>yeah, alexcrichton.cargo-edit-locally.28605545a3ddf9b164d5 etc</p>",
        "id": 129211640,
        "sender_full_name": "lqd",
        "timestamp": 1530894975
    },
    {
        "content": "<p>searching <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> didn't seem to know about them</p>",
        "id": 129211669,
        "sender_full_name": "lqd",
        "timestamp": 1530895016
    },
    {
        "content": "<p>GH repos</p>",
        "id": 129211687,
        "sender_full_name": "simulacrum",
        "timestamp": 1530895044
    },
    {
        "content": "<p>so coming from crates depending on those specific git commits ?</p>",
        "id": 129211700,
        "sender_full_name": "lqd",
        "timestamp": 1530895071
    },
    {
        "content": "<p>no, we scan github too, and find rust projects there</p>",
        "id": 129211760,
        "sender_full_name": "simulacrum",
        "timestamp": 1530895122
    },
    {
        "content": "<p>oh ok I didn't know that</p>",
        "id": 129211770,
        "sender_full_name": "lqd",
        "timestamp": 1530895136
    },
    {
        "content": "<p>Yeah, that's pretty wild.</p>",
        "id": 129211898,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530895294
    },
    {
        "content": "<p>We need a mind blown emoji.</p>",
        "id": 129211954,
        "sender_full_name": "davidtwco",
        "timestamp": 1530895346
    },
    {
        "content": "<p>the github repos list is pretty old though...</p>",
        "id": 129213547,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530897267
    },
    {
        "content": "<p>and good luck triaging 2300+ regressions ;-)</p>",
        "id": 129213580,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530897314
    },
    {
        "content": "<p>thanks <span class=\"emoji emoji-1f631\" title=\"scream\">:scream:</span></p>",
        "id": 129213595,
        "sender_full_name": "lqd",
        "timestamp": 1530897339
    },
    {
        "content": "<p>I made the perhaps not-so-good decision of running crater-tree locally and am now waiting for good old fake binary cargos to be created</p>",
        "id": 129213604,
        "sender_full_name": "simulacrum",
        "timestamp": 1530897351
    },
    {
        "content": "<p>I might go back to my approach which generates the graph and update it to work better</p>",
        "id": 129213653,
        "sender_full_name": "simulacrum",
        "timestamp": 1530897368
    },
    {
        "content": "<p>LOL, crater-tree is everything but optimized</p>",
        "id": 129213664,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530897381
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <a href=\"https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b\" target=\"_blank\" title=\"https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b\">https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b</a></p>",
        "id": 129213713,
        "sender_full_name": "simulacrum",
        "timestamp": 1530897460
    },
    {
        "content": "<p>569 ICEs <a href=\"https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2\" target=\"_blank\" title=\"https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2\">https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2</a></p>",
        "id": 129213716,
        "sender_full_name": "lqd",
        "timestamp": 1530897463
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> nice, thanks! :)</p>",
        "id": 129213777,
        "sender_full_name": "lqd",
        "timestamp": 1530897513
    },
    {
        "content": "<p>Looks like ~445 root regressions in the <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> part of the regressions</p>",
        "id": 129213787,
        "sender_full_name": "simulacrum",
        "timestamp": 1530897543
    },
    {
        "content": "<p>is it sorted in a special way ?</p>",
        "id": 129213789,
        "sender_full_name": "lqd",
        "timestamp": 1530897543
    },
    {
        "content": "<p>no idea, this is crater-tree</p>",
        "id": 129213794,
        "sender_full_name": "simulacrum",
        "timestamp": 1530897550
    },
    {
        "content": "<p>nope, it's not sorted</p>",
        "id": 129213798,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530897560
    },
    {
        "content": "<p><span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span></p>",
        "id": 129213801,
        "sender_full_name": "lqd",
        "timestamp": 1530897564
    },
    {
        "content": "<p><code>grep -v '^|'</code> for the roots</p>",
        "id": 129213802,
        "sender_full_name": "simulacrum",
        "timestamp": 1530897567
    },
    {
        "content": "<p>(I think)</p>",
        "id": 129213807,
        "sender_full_name": "simulacrum",
        "timestamp": 1530897573
    },
    {
        "content": "<p>oh this is crater-tree returning regressions ?</p>",
        "id": 129213869,
        "sender_full_name": "lqd",
        "timestamp": 1530897616
    },
    {
        "content": "<p>yeah, that should be the crater-tree output</p>",
        "id": 129214008,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530897789
    },
    {
        "content": "<p>assuming all the <code>plugin_registrar</code> ICEs are the same, I don't _think_ there are new ones</p>",
        "id": 129214212,
        "sender_full_name": "lqd",
        "timestamp": 1530897984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> could you explain crater-tree's output a bit please ? (I have virtually no experience with crater or its results) -- here's how I understand it,  it is the dependency tree of the crates which regressed, in order to differentiate the regressions which happened because of a crate's code vs the ones which happened because of an upstream dependency ?</p>",
        "id": 129214573,
        "sender_full_name": "lqd",
        "timestamp": 1530898423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> exactly</p>",
        "id": 129214643,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530898481
    },
    {
        "content": "<p>awesome thank you <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 129214677,
        "sender_full_name": "lqd",
        "timestamp": 1530898522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> the report mentions 2342 regressions, and the crater-tree output simulacrum posted has 1995, is that expected ?</p>",
        "id": 129217696,
        "sender_full_name": "lqd",
        "timestamp": 1530902361
    },
    {
        "content": "<p>crater-tree doesn't support GitHub repos, so there are also 347 broken repos</p>",
        "id": 129217748,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530902407
    },
    {
        "content": "<p>hey all -- can I get a kind of update here on the status?</p>",
        "id": 129219645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530904864
    },
    {
        "content": "<p>seems like we got some results</p>",
        "id": 129219649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530904868
    },
    {
        "content": "<p>did we break down the ICEs like we did before?</p>",
        "id": 129219654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530904874
    },
    {
        "content": "<p>I looked at them, they look the same, and tagged the \"unexpected panics\" with the known issue they were</p>",
        "id": 129219971,
        "sender_full_name": "lqd",
        "timestamp": 1530905137
    },
    {
        "content": "<p>one of which has a fix in queue</p>",
        "id": 129219988,
        "sender_full_name": "lqd",
        "timestamp": 1530905156
    },
    {
        "content": "<p>but have not categorized the same way yet</p>",
        "id": 129220039,
        "sender_full_name": "lqd",
        "timestamp": 1530905189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2\" target=\"_blank\" title=\"https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2\">https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2</a></p>",
        "id": 129221734,
        "sender_full_name": "lqd",
        "timestamp": 1530907504
    },
    {
        "content": "<p>wow, thanks</p>",
        "id": 129221770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907543
    },
    {
        "content": "<p>double check it of course ;)</p>",
        "id": 129221853,
        "sender_full_name": "lqd",
        "timestamp": 1530907605
    },
    {
        "content": "<p>looks about right</p>",
        "id": 129222052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907818
    },
    {
        "content": "<p>no new ICEs, seems good</p>",
        "id": 129222053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530907822
    },
    {
        "content": "<p>yup that was a bit of a relief earlier</p>",
        "id": 129222075,
        "sender_full_name": "lqd",
        "timestamp": 1530907866
    },
    {
        "content": "<p>I'm currently trying to regenerate a root regression report (without GH repos for now) with links to logs and all that</p>",
        "id": 129222148,
        "sender_full_name": "lqd",
        "timestamp": 1530907946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Let me know if I can help</p>",
        "id": 129222965,
        "sender_full_name": "simulacrum",
        "timestamp": 1530908833
    },
    {
        "content": "<p>I should be good, you have already helped a lot :)</p>",
        "id": 129223044,
        "sender_full_name": "lqd",
        "timestamp": 1530908890
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> on second thought :) it's not a huge deal, but the crate versions are missing from the crater-tree output, so there are duplicates I cannot distinguish</p>",
        "id": 129224500,
        "sender_full_name": "lqd",
        "timestamp": 1530910452
    },
    {
        "content": "<p>Hm, that might be easy to add. I don't really want to rerun crater tree though -- I think I'll finish up my version :)</p>",
        "id": 129224534,
        "sender_full_name": "simulacrum",
        "timestamp": 1530910509
    },
    {
        "content": "<p>:D</p>",
        "id": 129224539,
        "sender_full_name": "lqd",
        "timestamp": 1530910518
    },
    {
        "content": "<p>what do you need the crate version though? if a crate failed multiple times you can just collapse them into one failure</p>",
        "id": 129224631,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530910629
    },
    {
        "content": "<p>I'll continue on my side, outputting the logs of all the versions of a root regression</p>",
        "id": 129224635,
        "sender_full_name": "lqd",
        "timestamp": 1530910638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I would have liked to distinguish the errors between versions, but as I said it's not a huge deal</p>",
        "id": 129224700,
        "sender_full_name": "lqd",
        "timestamp": 1530910697
    },
    {
        "content": "<p>I will do so manually after outputting all versions regardless :)</p>",
        "id": 129224711,
        "sender_full_name": "lqd",
        "timestamp": 1530910724
    },
    {
        "content": "<p>so ofc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> don't worry too much about it vs other things to do, enjoying life and so on</p>",
        "id": 129224851,
        "sender_full_name": "lqd",
        "timestamp": 1530910870
    },
    {
        "content": "<p>Somehow loading and working with Crater results is quite fun</p>",
        "id": 129224866,
        "sender_full_name": "simulacrum",
        "timestamp": 1530910894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  also, we <em>really</em> need a tool faster than crater-tree for this kind of stuff<br>\nanother run just finished, and that one has 7k regressions</p>",
        "id": 129224990,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530911035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> to be precise I wanted to also dinstiguish root regressions from regressions, so \"fusing\" part of the crater-tree output to the crater report. without versions I just know that a version that regressed has a crate in root regressions</p>",
        "id": 129225036,
        "sender_full_name": "lqd",
        "timestamp": 1530911051
    },
    {
        "content": "<p>and sorry, NLL is not the thing that broke the highest number of crates :P</p>",
        "id": 129225065,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530911096
    },
    {
        "content": "<p>oh wow, yeah the code simulacrum showed me was quite fast (can I call them <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> 's simulacra ?)</p>",
        "id": 129225077,
        "sender_full_name": "lqd",
        "timestamp": 1530911109
    },
    {
        "content": "<p>crater-tree is fairly slow IMO -- it does a lot of extra work I think</p>",
        "id": 129225111,
        "sender_full_name": "simulacrum",
        "timestamp": 1530911146
    },
    {
        "content": "<p>and you're most of the way there already</p>",
        "id": 129225166,
        "sender_full_name": "lqd",
        "timestamp": 1530911182
    },
    {
        "content": "<p>should soon become a cool new crater tool</p>",
        "id": 129225192,
        "sender_full_name": "lqd",
        "timestamp": 1530911223
    },
    {
        "content": "<p>yeah, with crater-tree I just chose the faster way to <em>implement</em> it, and that worked fine until today :P</p>",
        "id": 129225286,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530911344
    },
    {
        "content": "<p>for sure, I'm grateful to already have the root regressions it gave me <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 129225348,
        "sender_full_name": "lqd",
        "timestamp": 1530911404
    },
    {
        "content": "<p>by the way, we should have proper support for NLL runs next time, the PR for it is up</p>",
        "id": 129225368,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530911441
    },
    {
        "content": "<p>7k regressions is fun though :)</p>",
        "id": 129225380,
        "sender_full_name": "lqd",
        "timestamp": 1530911464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> quick question, an example 'ammonia' is a root regression: <a href=\"https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b#file-gistfile1-txt-L1713\" target=\"_blank\" title=\"https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b#file-gistfile1-txt-L1713\">https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b#file-gistfile1-txt-L1713</a> or am I misunderstanding the output ? but here's its log: <a href=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/ammonia-1.1.0/log.txt\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/ammonia-1.1.0/log.txt\">https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/ammonia-1.1.0/log.txt</a>, it fails because of url, so I might have misunderstood if it was a root ?</p>",
        "id": 129225677,
        "sender_full_name": "lqd",
        "timestamp": 1530911876
    },
    {
        "content": "<p>yeah, the root regression for that is the url crate</p>",
        "id": 129225885,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912091
    },
    {
        "content": "<p>it's not marked as such because the url crate is technically not a regression: it was already failing to build on the first toolchain</p>",
        "id": 129225941,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912126
    },
    {
        "content": "<p>ok understood thank you, so I will refilter those logs again to remove the ones without local errors</p>",
        "id": 129225982,
        "sender_full_name": "lqd",
        "timestamp": 1530912211
    },
    {
        "content": "<p>it might only happen because of url, but since it's a popular crate I suspect it will be necessary to filter them out</p>",
        "id": 129226044,
        "sender_full_name": "lqd",
        "timestamp": 1530912270
    },
    {
        "content": "<blockquote>\n<p>it's not marked as such because the url crate is technically not a regression: it was already failing to build on the first toolchain</p>\n</blockquote>\n<p>I wonder if we can instead say \"root build failure causes\"</p>",
        "id": 129226070,
        "sender_full_name": "simulacrum",
        "timestamp": 1530912321
    },
    {
        "content": "<p>i.e. generate a report that looks just at whether we failed to build</p>",
        "id": 129226076,
        "sender_full_name": "simulacrum",
        "timestamp": 1530912335
    },
    {
        "content": "<p>ultimately crate X only regressed because crate Y failed to build; fixing crate Y is the only way to fix crate X in this situation</p>",
        "id": 129226130,
        "sender_full_name": "simulacrum",
        "timestamp": 1530912366
    },
    {
        "content": "<p>what I'd really like to do is to do a diff of the errors instead of just checking if it builds, so we can catch regressions even on same-build-fail crates</p>",
        "id": 129226152,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912417
    },
    {
        "content": "<p>but that's a bit longer term than this</p>",
        "id": 129226164,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912428
    },
    {
        "content": "<p>Sure, that'd be better -- but it would make logs ~unreadable since we need json error then</p>",
        "id": 129226170,
        "sender_full_name": "simulacrum",
        "timestamp": 1530912437
    },
    {
        "content": "<p>And there's not currently a good way to go from JSON to human :/</p>",
        "id": 129226175,
        "sender_full_name": "simulacrum",
        "timestamp": 1530912451
    },
    {
        "content": "<p>sure there is, the json output includes the <code>rendered</code> field last time I checked</p>",
        "id": 129226182,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912470
    },
    {
        "content": "<p>ah, interesting</p>",
        "id": 129226225,
        "sender_full_name": "simulacrum",
        "timestamp": 1530912495
    },
    {
        "content": "<p>we can replace the json in the logs with the rendered field while we catch those errors</p>",
        "id": 129226238,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912513
    },
    {
        "content": "<p>but before there is craterbot to finish...</p>",
        "id": 129226257,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912557
    },
    {
        "content": "<p>how close is craterbot btw ? looked almost ready, and/or in review</p>",
        "id": 129226308,
        "sender_full_name": "lqd",
        "timestamp": 1530912619
    },
    {
        "content": "<p>it just needs the last PR to be merged (better-run-graph) before we can start trying it live, and aidanhs promised to review it before monday</p>",
        "id": 129226318,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912662
    },
    {
        "content": "<p>and that PR alone turns a 2 days check only run into only one day</p>",
        "id": 129226343,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530912705
    },
    {
        "content": "<p>niiiiice</p>",
        "id": 129226393,
        "sender_full_name": "lqd",
        "timestamp": 1530912742
    },
    {
        "content": "<p>ok now we're talking</p>",
        "id": 129226490,
        "sender_full_name": "lqd",
        "timestamp": 1530912880
    },
    {
        "content": "<p>in fact it is _so_ reduced I'm worried it's wrong :p <a href=\"https://hackmd.io/s/Bkqcxvazm\" target=\"_blank\" title=\"https://hackmd.io/s/Bkqcxvazm\">https://hackmd.io/s/Bkqcxvazm</a></p>",
        "id": 129226522,
        "sender_full_name": "lqd",
        "timestamp": 1530912945
    },
    {
        "content": "<p>well, just fix those and see if that did something in the next run</p>",
        "id": 129226585,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530913017
    },
    {
        "content": "<p>check-only runs will be really fast soon, so doing one or two extra won't be a problem ;)</p>",
        "id": 129226610,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530913046
    },
    {
        "content": "<p>lol if only I could \"just fix\" them, I'm not niko :p</p>",
        "id": 129226627,
        "sender_full_name": "lqd",
        "timestamp": 1530913072
    },
    {
        "content": "<p>:D</p>",
        "id": 129226681,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530913098
    },
    {
        "content": "<p>(some of these errors are from the previously triaged ICEs so I could filter them out as well; and some of the errors here were already triaged from the previous nll-1 run)</p>",
        "id": 129226736,
        "sender_full_name": "lqd",
        "timestamp": 1530913186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Do you think the \"tree\" aspect of the root regression finder is important? It's simpler to just say how many dependent crates there are...</p>",
        "id": 129226820,
        "sender_full_name": "simulacrum",
        "timestamp": 1530913241
    },
    {
        "content": "<p>well, yeah, the thing that matters is the root regressions, not the reverse deps, so the tree is not that important</p>",
        "id": 129226926,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530913376
    },
    {
        "content": "<p>(by the way, it's fun how we moved the crater dev discussions from nowhere to the nll chan :D)</p>",
        "id": 129226957,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1530913439
    },
    {
        "content": "<p>it is sometimes useful to know the <em>direct</em> dependencies</p>",
        "id": 129226982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530913443
    },
    {
        "content": "<p>because sometimes the only fix is to update those</p>",
        "id": 129226998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530913448
    },
    {
        "content": "<p>e.g. to use a newer version</p>",
        "id": 129227003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530913459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Hm, because the root isn't responding?</p>",
        "id": 129227013,
        "sender_full_name": "simulacrum",
        "timestamp": 1530913472
    },
    {
        "content": "<p>or because fixing required a breaking change to API</p>",
        "id": 129227016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530913482
    },
    {
        "content": "<p>ah, okay</p>",
        "id": 129227023,
        "sender_full_name": "simulacrum",
        "timestamp": 1530913486
    },
    {
        "content": "<p>often people don't backport fixes, too</p>",
        "id": 129227033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530913501
    },
    {
        "content": "<p>Maybe a O(n^3) algorithm isn't the right way to find root crates...</p>",
        "id": 129227621,
        "sender_full_name": "simulacrum",
        "timestamp": 1530914082
    },
    {
        "content": "<p>(slight aside: with the unused mut lint and liballoc PRs merged, I think we're 2 ICEs fixed away from being able to bootstrap with NLL! and both of those ICEs show up in the crater runs)</p>",
        "id": 129228792,
        "sender_full_name": "lqd",
        "timestamp": 1530915400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Could be broken, but <a href=\"https://gist.github.com/Mark-Simulacrum/5dada20317f73d4cf4dd71b8ae87de81\" target=\"_blank\" title=\"https://gist.github.com/Mark-Simulacrum/5dada20317f73d4cf4dd71b8ae87de81\">https://gist.github.com/Mark-Simulacrum/5dada20317f73d4cf4dd71b8ae87de81</a></p>",
        "id": 129230179,
        "sender_full_name": "simulacrum",
        "timestamp": 1530917331
    },
    {
        "content": "<p>oh already nice :)</p>",
        "id": 129230249,
        "sender_full_name": "lqd",
        "timestamp": 1530917426
    },
    {
        "content": "<p>should the logs point at the craterbomb-reports site ?</p>",
        "id": 129230250,
        "sender_full_name": "lqd",
        "timestamp": 1530917442
    },
    {
        "content": "<p>uh, they were supposed to, but I think I forgot that bit</p>",
        "id": 129230308,
        "sender_full_name": "simulacrum",
        "timestamp": 1530917532
    },
    {
        "content": "<p>regenerating...</p>",
        "id": 129230374,
        "sender_full_name": "simulacrum",
        "timestamp": 1530917696
    },
    {
        "content": "<p>btw I'm getting S3 access denied errors on some of the logs</p>",
        "id": 129230378,
        "sender_full_name": "lqd",
        "timestamp": 1530917704
    },
    {
        "content": "<p>to be precise, all of the ones with + in the crate names ;)</p>",
        "id": 129230404,
        "sender_full_name": "lqd",
        "timestamp": 1530917750
    },
    {
        "content": "<p>which should be escaped as %2B</p>",
        "id": 129230450,
        "sender_full_name": "lqd",
        "timestamp": 1530917806
    },
    {
        "content": "<p>example: google-drive3-cli-1.0.7+20171201, crater link <a href=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/google-drive3-cli-1.0.7+20171201/log.txt\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/google-drive3-cli-1.0.7+20171201/log.txt\">https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/google-drive3-cli-1.0.7+20171201/log.txt</a> but should be <a href=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/google-drive3-cli-1.0.7%2B20171201/log.txt\" target=\"_blank\" title=\"https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/google-drive3-cli-1.0.7%2B20171201/log.txt\">https://cargobomb-reports.s3.amazonaws.com/nll-3/00bcc44fb92c28465c727881355c3235a56a4045/reg/google-drive3-cli-1.0.7%2B20171201/log.txt</a></p>",
        "id": 129230460,
        "sender_full_name": "lqd",
        "timestamp": 1530917853
    },
    {
        "content": "<p>note that your crater-merge-report downloaded them fine, it's just in the html crater report that they fail</p>",
        "id": 129230529,
        "sender_full_name": "lqd",
        "timestamp": 1530917992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 129231011,
        "sender_full_name": "simulacrum",
        "timestamp": 1530918771
    },
    {
        "content": "<p>Need to replace + with %2B</p>",
        "id": 129231012,
        "sender_full_name": "simulacrum",
        "timestamp": 1530918778
    },
    {
        "content": "<p>right :)</p>",
        "id": 129231163,
        "sender_full_name": "lqd",
        "timestamp": 1530919020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <a href=\"https://gist.github.com/Mark-Simulacrum/22ee460c5ff2a6f64ee04b41fe638bc6\" target=\"_blank\" title=\"https://gist.github.com/Mark-Simulacrum/22ee460c5ff2a6f64ee04b41fe638bc6\">https://gist.github.com/Mark-Simulacrum/22ee460c5ff2a6f64ee04b41fe638bc6</a></p>",
        "id": 129231227,
        "sender_full_name": "simulacrum",
        "timestamp": 1530919096
    },
    {
        "content": "<p>niiice!</p>",
        "id": 129231247,
        "sender_full_name": "lqd",
        "timestamp": 1530919182
    },
    {
        "content": "<p>there are so many crates broken by url 1.7.0</p>",
        "id": 129231301,
        "sender_full_name": "lqd",
        "timestamp": 1530919251
    },
    {
        "content": "<p>680 crates depend on it, and those are super popular as well</p>",
        "id": 129231379,
        "sender_full_name": "lqd",
        "timestamp": 1530919408
    },
    {
        "content": "<p>d'oh</p>",
        "id": 129236233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1530927559
    },
    {
        "content": "<blockquote>\n<p>lol if only I could \"just fix\" them, I'm not niko :p</p>\n</blockquote>\n<p>Not yet, maybe...</p>",
        "id": 129260884,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1530977189
    },
    {
        "content": "<p>so update on crater:</p>\n<ul>\n<li>ICEs: the ones from the 2 runs have been triaged. <a href=\"https://github.com/rust-lang/rust/issues/52054\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52054\">nll-1</a> thoroughly by simulacrum and niko, <a href=\"https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2\" target=\"_blank\" title=\"https://gist.github.com/lqd/e9ef65a3f5eacdafdc3f0e16bf6bbbd2\">nll-3</a> quickly by me. (Maybe we could use a second pair on eyes to double check both the list and triage)</li>\n<li>root regressions : <a href=\"https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b\" target=\"_blank\" title=\"https://gist.github.com/Mark-Simulacrum/6a8c998ba184dcf0849863864aa3ac8b\">crater-tree's regressions</a> found 444 root regressions, while <a href=\"https://gist.github.com/Mark-Simulacrum/22ee460c5ff2a6f64ee04b41fe638bc6\" target=\"_blank\" title=\"https://gist.github.com/Mark-Simulacrum/22ee460c5ff2a6f64ee04b41fe638bc6\">this other one</a> 1588 root regressions (in the second report, each version of a crate's root regressions will be shown — that's interesting for automated scripting but not exactly different from the other). However, the root regressions don't differentiate the source of the error causing the regression (just that they used to build and now they don't), so the situation we have with the bugged url-1.7.0 (and possibly more) leaks into any of its dependents and there are a lot. Those errors are not actionable since they're not in the root regressions crate, so I tried so separate those again.</li>\n<li>root regressions with no errors from dependencies : <a href=\"https://hackmd.io/2sR4vloZQhC8arJkFOFyLA?both\" target=\"_blank\" title=\"https://hackmd.io/2sR4vloZQhC8arJkFOFyLA?both\">Here is what I came up with</a>. There's a little blurb at the top on how this list was generated. I've started on this by marking the ICEs, and the results I already had done on the nll-1 run. That's something which can be triaged, and hackmd is supposedly multi user.</li>\n<li>root regressions caused at least by an error in one of its dependencies : <a href=\"https://hackmd.io/VCYh_KdgQkO2O_45jWAxaw?both\" target=\"_blank\" title=\"https://hackmd.io/VCYh_KdgQkO2O_45jWAxaw?both\">Here is what I came up with</a>. I've marked the crate I dealt with before in nll-1 (url-1.7.0, and which accounts for the majority of the errors in this list). There are still about 20 other crates to triage. I've seen some of these in nll-1, and we have some issues filed already, so I will mark these tomorrow. The ones I remember were mostly around what could be seen as expansions to 2 phase borrows. However, I have not automated or checked if this list could be filtered again because of the known ICEs.</li>\n<li>root regressions with both errors in dependencies and in their own code: unknown at this time, and I'm not sure we can do this with certainty, as the build will usually fail because of the dependency error before even trying to build the dependent crate. (And I don't think there are logs in this state but I could be wrong). So there might be more things to discover (albeit in future crater runs)</li>\n<li>things I forgot : I might be wrong in the analyses before, so if anyone wants to spitball (starting tomorrow though) the thought process, double check results, etc it could also be useful I'm sure.</li>\n</ul>\n<p>This is all I have. Enjoy your Sunday everyone (and/or flights to Greece) :)</p>",
        "id": 129296264,
        "sender_full_name": "lqd",
        "timestamp": 1531050329
    },
    {
        "content": "<p>lol at minimizing errors in crates with dozens of </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">W</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Apply</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">W</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">GroupBy</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Block</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">V</span>: <span class=\"nb\">Clone</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">I</span>: <span class=\"nb\">Clone</span> <span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">C</span>: <span class=\"nb\">Clone</span> <span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">G</span>: <span class=\"na\">&#39;c</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Ord</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">W</span>: <span class=\"na\">&#39;c</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">In</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Block</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">FOut</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">W</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Out</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Block</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">W</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">...</span><span class=\"w\"></span>\n</pre></div>",
        "id": 129758117,
        "sender_full_name": "lqd",
        "timestamp": 1531755873
    },
    {
        "content": "<p>these are the SO questions I hate the most</p>",
        "id": 129758163,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531755920
    },
    {
        "content": "<p>and then there's the error hidden in layers of macros</p>",
        "id": 129762381,
        "sender_full_name": "lqd",
        "timestamp": 1531760058
    },
    {
        "content": "<p>I did leave the best ones for the end :3</p>",
        "id": 129762388,
        "sender_full_name": "lqd",
        "timestamp": 1531760068
    },
    {
        "content": "<p>\"Pokémon Gen3 save data\" <span class=\"emoji emoji-1f602\" title=\"joy\">:joy:</span></p>",
        "id": 129764249,
        "sender_full_name": "lqd",
        "timestamp": 1531762066
    },
    {
        "content": "<p>I don't what this is doing but it's awesome</p>",
        "id": 129764334,
        "sender_full_name": "lqd",
        "timestamp": 1531762122
    },
    {
        "content": "<p>funny:)</p>",
        "id": 129764469,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531762265
    },
    {
        "content": "<p>ok so I think they're \"all\" done bar one with thousands of lines of macros I couldn't untangle in an hour (and also the ones crater-tree ignores: the GH repos). Since some of the errors are weird or in a grey area between bugs and feature requests, it would be awesome if someone more knowledgeable about all these could do a pass over the results and reduced repros to correct my mistakes and things I didn't know or missed :)</p>",
        "id": 129765826,
        "sender_full_name": "lqd",
        "timestamp": 1531763871
    },
    {
        "content": "<p>amazing! awesome</p>",
        "id": 129766038,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1531764096
    },
    {
        "content": "<p>Hopefully you fix all those and all the github ones get fixed too ;-)</p>",
        "id": 129767023,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531765180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span>  don't forget some of those are definitely bugs in crates that AST borrowck let slip through :p</p>",
        "id": 129767149,
        "sender_full_name": "lqd",
        "timestamp": 1531765310
    },
    {
        "content": "<p>which was in a sense lucky for me; \"yay 300 regressions off the list\" ;)</p>",
        "id": 129767208,
        "sender_full_name": "lqd",
        "timestamp": 1531765375
    },
    {
        "content": "<p>The AST borrow-sometimes-checker</p>",
        "id": 129768002,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1531766240
    },
    {
        "content": "<p>so there are 2 main \"reports\", I'll first start with the one about the root regressions' dependencies <a href=\"https://hackmd.io/VCYh_KdgQkO2O_45jWAxaw?both\" target=\"_blank\" title=\"https://hackmd.io/VCYh_KdgQkO2O_45jWAxaw?both\">here</a>. These results contain both ICEs and errors spanning multiple versions of a crate (marked \"same errors as XXXX\"), so we can ignore all those. Then there are little bits of text for the others, some are \"this looks like the 2-phase-borrows expansion feature\" we just talked about, but others are less clear cut to me, so I've added a repro as well as why they seemed interesting/weird. For example \"this might be fixed-by-NLL\" or \"some outlives annotations are missing but I'm not sure if rustc should/will infer them\" or \"is this for NLL2/polonius rather than today\". The page might look big but that's like 25 crates, with the ICEs, multiple versions, known issues etc we mentioned, the ones needing a quick pass are maybe 8 total.</p>",
        "id": 129809444,
        "sender_full_name": "lqd",
        "timestamp": 1531829755
    },
    {
        "content": "<p>The second report is about the errors in root regressions which were really in the crates and not their dependencies <a href=\"https://hackmd.io/2sR4vloZQhC8arJkFOFyLA?both\" target=\"_blank\" title=\"https://hackmd.io/2sR4vloZQhC8arJkFOFyLA?both\">here</a>. 31 in total, &lt;10 to be ignored because of ICEs, known errors, and a couple of errors happening in multiple versions of crate, etc and is basically the same story as the previous report: a little blurb explaining what I thought the error was when I could, and repros. All in all mostly similar cases to the previous report, not exactly the same but where I wasn't sure, especially around the ones which feel correct to reject, or we're currently rejecting but maybe not in the future expanded 2ΦB, and the likes.</p>",
        "id": 129809763,
        "sender_full_name": "lqd",
        "timestamp": 1531830246
    },
    {
        "content": "<blockquote>\n<p>We probably are also making Cargo somewhat unhappy since we put ~20,000 crates into the same target dir</p>\n</blockquote>\n<p>I got into dev for Cargo in order to make crater faster... It was a furry yak. What percentage of a crater run is spent in cargo?</p>",
        "id": 129884877,
        "sender_full_name": "Eh2406",
        "timestamp": 1531934857
    },
    {
        "content": "<p>with Felix landing Niko's <a href=\"https://github.com/rust-lang/rust/issues/52731\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52731\">#52731</a> yesterday, it looks to me like all the ICEs encountered in the crater runs are fixed <span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span> so we could do another one soon (but we might hit another recent ICE that Oli and Matthew have been working on if we do it before their fix lands)</p>",
        "id": 130629103,
        "sender_full_name": "lqd",
        "timestamp": 1533025761
    },
    {
        "content": "<p>The ICE is fixed, but there will still be regressions from the additional errors.</p>",
        "id": 130637698,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1533036678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/issues/53426\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53426\">#53426</a> should be sufficient for another crater run right ?</p>",
        "id": 132236570,
        "sender_full_name": "lqd",
        "timestamp": 1534422912
    },
    {
        "content": "<p>I think so, kicked off a try build</p>",
        "id": 132237216,
        "sender_full_name": "simulacrum",
        "timestamp": 1534423546
    },
    {
        "content": "<p>awesome, thank you</p>",
        "id": 132237313,
        "sender_full_name": "lqd",
        "timestamp": 1534423634
    },
    {
        "content": "<p>I'm not sure this is the correct patch either btw, but it did seem to enable the MIR borrowck and 2PB in my tests</p>",
        "id": 132237443,
        "sender_full_name": "lqd",
        "timestamp": 1534423761
    },
    {
        "content": "<p>nice</p>",
        "id": 132241284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534428096
    },
    {
        "content": "<p>mostly I'm wondering about tests, as they will not pass by just enabling these default borrowck/2PB options, but I don't know if the try builds or crater require them ?</p>",
        "id": 132242626,
        "sender_full_name": "lqd",
        "timestamp": 1534429537
    },
    {
        "content": "<p>(the try build for the crater PR succeeded btw, it appears to match the instructions for <a href=\"https://github.com/rust-lang/rust/issues/53171\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53171\">#53171</a> -- I guess we'll need an final ok from <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> or <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and it should be good to go :)</p>",
        "id": 132247421,
        "sender_full_name": "lqd",
        "timestamp": 1534433818
    },
    {
        "content": "<p>I think it looks great</p>",
        "id": 132249083,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534435532
    },
    {
        "content": "<p>I don't know how to start crater though I've heard of things like <code>craterbot</code></p>",
        "id": 132249090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534435549
    },
    {
        "content": "<p>oh yeah I forgot about that :) it'll be for whenever the lovely people in the infra team have time :) (there might not even be a crater box available rn who knows)</p>",
        "id": 132249259,
        "sender_full_name": "lqd",
        "timestamp": 1534435717
    },
    {
        "content": "<p>the crater run is finished! <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426/index.html\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426/index.html\">962 \"regressions\"</a> — I'll start triaging later but just looking at 50 random results there's this very widespread ICE <code>scrape_region_constraints</code> which seems new to me (but then might be already tracked since I was away :)</p>",
        "id": 132351862,
        "sender_full_name": "lqd",
        "timestamp": 1534582963
    },
    {
        "content": "<p>there appear to be handful of recent issues with that ICE</p>",
        "id": 132352240,
        "sender_full_name": "memoryruins",
        "timestamp": 1534583681
    },
    {
        "content": "<p>crash: checking hyper with borrowck-migrate <a href=\"https://github.com/rust-lang/rust/issues/52992\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52992\">#52992</a> <a href=\"https://github.com/rust-lang/rust/issues/52992\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52992\">https://github.com/rust-lang/rust/issues/52992</a></p>",
        "id": 132352242,
        "sender_full_name": "memoryruins",
        "timestamp": 1534583696
    },
    {
        "content": "<p>Failed to compile hyper with NLL feature enabled <a href=\"https://github.com/rust-lang/rust/issues/53182\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53182\">#53182</a></p>",
        "id": 132352256,
        "sender_full_name": "memoryruins",
        "timestamp": 1534583721
    },
    {
        "content": "<p>it's good that we already track it, less surprises :) thank you</p>",
        "id": 132352549,
        "sender_full_name": "lqd",
        "timestamp": 1534584218
    },
    {
        "content": "<p>oh there's a 2nd ICE, <code>unresolved inference variable in outlives</code>on a couple crates; the rest (568 out of 962) are the <code>scrape_region_constraints</code> one</p>",
        "id": 132363475,
        "sender_full_name": "lqd",
        "timestamp": 1534602674
    },
    {
        "content": "<p>looks to me like the return of <a href=\"https://github.com/rust-lang/rust/issues/52057\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52057\">#52057</a> but in an even less probable situation than before — which I'll minimize next</p>",
        "id": 132364239,
        "sender_full_name": "lqd",
        "timestamp": 1534604147
    },
    {
        "content": "<p>here are the ICEs from the crater run <a href=\"https://github.com/rust-lang/rust/issues/53482\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53482\">#53482</a></p>",
        "id": 132381734,
        "sender_full_name": "lqd",
        "timestamp": 1534637675
    },
    {
        "content": "<p>good analysis :)</p>",
        "id": 132383249,
        "sender_full_name": "memoryruins",
        "timestamp": 1534641063
    },
    {
        "content": "<p>So between what crater reports as a \"regression\" and the ones which can appear in other crate's dependencies or crater \"errors\" or the blacklist etc, I think I have a tally that makes sense to me. </p>\n<p>982 regressions, 591 ICEs. 357 crates failing because of a dependency (grouped to 30 root regression crates, even though crater doesn't see all of them as regressions per se), 24 crates failing by themselves. (The astute calculist will notice it doesn't add up to 982 but 972). Compared to the previous reports, I have incorporated more errors from the github projects we track (but ofc those won't be available to <code>cargo-curl</code> or <code>cratesio-curl</code>). </p>\n<p>Here is the 24 crates <a href=\"https://hackmd.io/yK9YhE8-TGGA79tqOpkoCA?both\" target=\"_blank\" title=\"https://hackmd.io/yK9YhE8-TGGA79tqOpkoCA?both\">regression report</a> and the 30/357 crate's dependencies <a href=\"https://hackmd.io/ELjNXP76TpKPXZjUZvzBIg\" target=\"_blank\" title=\"https://hackmd.io/ELjNXP76TpKPXZjUZvzBIg\">regression report</a>. Of course, we've seen a lot of those in the previous 2 runs, but I have not yet incorporated the previous triaging results into these new reports, which is what I will do next.</p>",
        "id": 132412676,
        "sender_full_name": "lqd",
        "timestamp": 1534697058
    },
    {
        "content": "<p>A lot of those look like know soundness fixes.</p>",
        "id": 132412910,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1534697468
    },
    {
        "content": "<p>yeah, it doesn't look <em>that</em> different from the previous run, a good sign (I think :)</p>",
        "id": 132413065,
        "sender_full_name": "lqd",
        "timestamp": 1534697744
    },
    {
        "content": "<p>the number of ICE occurrences has gone up (slightly) but the kinds of ICEs have gone down, there's way less \"regressions\", etc</p>",
        "id": 132413138,
        "sender_full_name": "lqd",
        "timestamp": 1534697865
    },
    {
        "content": "<p>to make it less confusing I will merge the \"deps\" report into the crates one somehow later today (eg by taking logs from dependent crates instead for the ones where we \"don't have\" them) so use only the second one ;)</p>",
        "id": 132437968,
        "sender_full_name": "lqd",
        "timestamp": 1534748543
    },
    {
        "content": "<p>alright I'm out of time, so, update: I've merged the 2 reports into <a href=\"https://hackmd.io/yK9YhE8-TGGA79tqOpkoCA?both\" target=\"_blank\" title=\"https://hackmd.io/yK9YhE8-TGGA79tqOpkoCA?both\">the crates one</a>, and maybe 40 out the 45/27 are now done (they don't all have repros as some errors look similar or are too time consuming to minimize) and ready to be double-checked</p>",
        "id": 132463439,
        "sender_full_name": "lqd",
        "timestamp": 1534779689
    },
    {
        "content": "<p>unable to help double-checking until back in town end of week. enjoying staying updated on the progress, well done with the round-up!</p>",
        "id": 132468417,
        "sender_full_name": "memoryruins",
        "timestamp": 1534784988
    },
    {
        "content": "<p>does <a href=\"https://play.rust-lang.org/?gist=b6e2b7ba1f746b2a91f237cbe2892f74&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=b6e2b7ba1f746b2a91f237cbe2892f74&amp;version=nightly&amp;mode=debug&amp;edition=2015\">this</a> feel familiar to anyone or should I file an issue ? it's like 25% of the regressions in the crater run</p>",
        "id": 132511600,
        "sender_full_name": "lqd",
        "timestamp": 1534850309
    },
    {
        "content": "<p>Feels like that's the same as foo(&amp;mut self, bar(&amp;self))</p>",
        "id": 132515761,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534856658
    },
    {
        "content": "<p>Note it compiles with <code>    let mut w= [Gf256{}];</code></p>",
        "id": 132515829,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534856722
    },
    {
        "content": "<p>So I'm thinking it's some subtlety around <code>Index</code> desugaring or maybe the difference of \"built in\" indexing</p>",
        "id": 132515907,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534856795
    },
    {
        "content": "<p>that's basically what I thought as well, it seems close the the 2PB expansion feature request but not exactly the same, seems to involve indexing and operator overloading, so I don't know</p>",
        "id": 132516097,
        "sender_full_name": "lqd",
        "timestamp": 1534857004
    },
    {
        "content": "<p>in the meantime I'll leave it as is in the report and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> can weigh in when they have time to double check</p>",
        "id": 132516126,
        "sender_full_name": "lqd",
        "timestamp": 1534857044
    },
    {
        "content": "<p><code>*IndexMut::index_mut(&amp;mut w, 0) -= *Index::index(&amp;w, 0)</code> fails; hmm</p>",
        "id": 132516458,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534857382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I'd like to update <a href=\"https://github.com/nikomatsakis/nll-crater-run-results\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results\">https://github.com/nikomatsakis/nll-crater-run-results</a> with the latest crater run results... is there something I can read over to see the classifications you've done so far etc?</p>",
        "id": 132527012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868607
    },
    {
        "content": "<p>oops I had forgotten about that or could have a made a PR :/</p>",
        "id": 132527113,
        "sender_full_name": "lqd",
        "timestamp": 1534868720
    },
    {
        "content": "<p>no big thing</p>",
        "id": 132527122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868732
    },
    {
        "content": "<p>besides the ICE issue, there is <a href=\"https://hackmd.io/yK9YhE8-TGGA79tqOpkoCA?both\" target=\"_blank\" title=\"https://hackmd.io/yK9YhE8-TGGA79tqOpkoCA?both\">https://hackmd.io/yK9YhE8-TGGA79tqOpkoCA?both</a></p>",
        "id": 132527131,
        "sender_full_name": "lqd",
        "timestamp": 1534868754
    },
    {
        "content": "<blockquote>\n<p>does <a href=\"https://play.rust-lang.org/?gist=b6e2b7ba1f746b2a91f237cbe2892f74&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=b6e2b7ba1f746b2a91f237cbe2892f74&amp;version=nightly&amp;mode=debug&amp;edition=2015\">this</a> feel familiar to anyone or should I file an issue ? it's like 25% of the regressions in the crater run</p>\n</blockquote>\n<p>I believe this may be <a href=\"https://github.com/rust-lang/rust/issues/47349\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47349\">https://github.com/rust-lang/rust/issues/47349</a> (which is categorized as WONTFIX afaik)</p>",
        "id": 132527183,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868782
    },
    {
        "content": "<p>there may be some kind of 2PB expansion we can do but that's not clear</p>",
        "id": 132527198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868805
    },
    {
        "content": "<p>like <a href=\"https://github.com/rust-lang/rust/issues/51915\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51915\">https://github.com/rust-lang/rust/issues/51915</a></p>",
        "id": 132527226,
        "sender_full_name": "lqd",
        "timestamp": 1534868828
    },
    {
        "content": "<p>yeah but that alone wouldn't suffice</p>",
        "id": 132527233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868842
    },
    {
        "content": "<p>yeah</p>",
        "id": 132527249,
        "sender_full_name": "lqd",
        "timestamp": 1534868867
    },
    {
        "content": "<p>I think what happens here is that we first deref the <code>Vec&lt;T&gt;</code> to <code> [T]</code></p>",
        "id": 132527250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868868
    },
    {
        "content": "<p>and right <em>there</em> we do a mutable borrow</p>",
        "id": 132527252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868873
    },
    {
        "content": "<p>and <em>then</em> we index into the <code>[T]</code> (mutably)</p>",
        "id": 132527303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868892
    },
    {
        "content": "<p>so there is a whole bunch of stuff happening before we get to the reads</p>",
        "id": 132527314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868901
    },
    {
        "content": "<p>I think it's beyond what 2PB can achieve</p>",
        "id": 132527322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868907
    },
    {
        "content": "<p>perhaps some more advanced variant could do it</p>",
        "id": 132527326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868917
    },
    {
        "content": "<p>e.g., the \"phi\" borrows that arielby was proposing</p>",
        "id": 132527343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534868946
    },
    {
        "content": "<p>gluon_base and try_transform_mut seem fixed compared to before</p>",
        "id": 132527554,
        "sender_full_name": "lqd",
        "timestamp": 1534869187
    },
    {
        "content": "<p>the ICEs are <a href=\"https://github.com/rust-lang/rust/issues/53482\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53482\">here</a> btw</p>",
        "id": 132527755,
        "sender_full_name": "lqd",
        "timestamp": 1534869457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> ok so the hackmd document contains the rest, and the ICEs are in <a href=\"https://github.com/rust-lang/rust/issues/53482\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53482\">#53482</a>?</p>",
        "id": 132529720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872028
    },
    {
        "content": "<p>yeah, and I did <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/1\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/1\">https://github.com/nikomatsakis/nll-crater-run-results/pull/1</a> to start</p>",
        "id": 132529738,
        "sender_full_name": "lqd",
        "timestamp": 1534872072
    },
    {
        "content": "<p>oh nice!</p>",
        "id": 132529796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872130
    },
    {
        "content": "<p>is that complete?</p>",
        "id": 132529797,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872133
    },
    {
        "content": "<p>i.e., should I merge?</p>",
        "id": 132529798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872135
    },
    {
        "content": "<p>it's just updating a couple crates</p>",
        "id": 132529807,
        "sender_full_name": "lqd",
        "timestamp": 1534872148
    },
    {
        "content": "<p>not complete unfortunately, I was working on adding more which you could then double check and review</p>",
        "id": 132529819,
        "sender_full_name": "lqd",
        "timestamp": 1534872172
    },
    {
        "content": "<p>ie a lot of the crates in the hackmd doc are not in the repo yet, so I started by updating the ones which were in both</p>",
        "id": 132529933,
        "sender_full_name": "lqd",
        "timestamp": 1534872260
    },
    {
        "content": "<p>but it's mergeable I mean, those 3-4 crates are complete, it's just not the full run yet :)</p>",
        "id": 132530125,
        "sender_full_name": "lqd",
        "timestamp": 1534872496
    },
    {
        "content": "<p>would you rather I wait?</p>",
        "id": 132530166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872558
    },
    {
        "content": "<p>I can add what I did from the hackmd to this PR, I'd just need to know how you'd want to review/modify the results that wouldn't be 100% sure</p>",
        "id": 132530268,
        "sender_full_name": "lqd",
        "timestamp": 1534872628
    },
    {
        "content": "<p>for example the case we talked about earlier, maybe a different commit for those, and so on ?</p>",
        "id": 132530318,
        "sender_full_name": "lqd",
        "timestamp": 1534872706
    },
    {
        "content": "<p>I'm confused by the attr case</p>",
        "id": 132530399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872761
    },
    {
        "content": "<p>I thought I filed a bug for that...</p>",
        "id": 132530401,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872764
    },
    {
        "content": "<p>I was confused as well :)</p>",
        "id": 132530413,
        "sender_full_name": "lqd",
        "timestamp": 1534872781
    },
    {
        "content": "<p>/me feels disorganized</p>",
        "id": 132530425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872794
    },
    {
        "content": "<p>I searched for an issue mentioning attr while doing the doc and didn't seem to find any</p>",
        "id": 132530492,
        "sender_full_name": "lqd",
        "timestamp": 1534872878
    },
    {
        "content": "<p>(but travis messages contain \"attr\" so it makes search a bit hit and miss in this case :)</p>",
        "id": 132530497,
        "sender_full_name": "lqd",
        "timestamp": 1534872901
    },
    {
        "content": "<p>maybe I just forgot to file?</p>",
        "id": 132530498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872902
    },
    {
        "content": "<p>possible</p>",
        "id": 132530513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534872909
    },
    {
        "content": "<p>possible :)</p>",
        "id": 132530525,
        "sender_full_name": "lqd",
        "timestamp": 1534872929
    },
    {
        "content": "<p>or maybe tried it on a branch where it worked</p>",
        "id": 132530534,
        "sender_full_name": "lqd",
        "timestamp": 1534872961
    },
    {
        "content": "<p>I guess regarding this ICE: \"2. unresolved inference variable in outlives: _#3t\"</p>",
        "id": 132530817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873207
    },
    {
        "content": "<p>we should open a new issue</p>",
        "id": 132530824,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873212
    },
    {
        "content": "<p>I hate to reopen existing issues, too depressing</p>",
        "id": 132530828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873217
    },
    {
        "content": "<p>plus it looks a bit more involved (eg, possible impl Trait interaction) even if it manifests with the same ICE</p>",
        "id": 132530857,
        "sender_full_name": "lqd",
        "timestamp": 1534873270
    },
    {
        "content": "<p>right</p>",
        "id": 132530993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873419
    },
    {
        "content": "<p>ok, I opened another issue</p>",
        "id": 132530999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873424
    },
    {
        "content": "<p>I'll put the ones where I'm not sure in the top table, and feel free to move them down as \"correctly failing by MIR borrowck\"</p>",
        "id": 132531119,
        "sender_full_name": "lqd",
        "timestamp": 1534873536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> can you link attr to <a href=\"https://github.com/rust-lang/rust/issues/53569\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53569\">https://github.com/rust-lang/rust/issues/53569</a> in <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/1/files\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/1/files\">https://github.com/nikomatsakis/nll-crater-run-results/pull/1/files</a> ?</p>",
        "id": 132531190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873569
    },
    {
        "content": "<p>sure</p>",
        "id": 132531212,
        "sender_full_name": "lqd",
        "timestamp": 1534873598
    },
    {
        "content": "<p>I guess let me ask a different question :)</p>",
        "id": 132531240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873627
    },
    {
        "content": "<p>I want to go over these results</p>",
        "id": 132531241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873630
    },
    {
        "content": "<p>would you rather I go through the hackmd comment and leave comments?</p>",
        "id": 132531249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873638
    },
    {
        "content": "<p>I remember last time feeling a need to organize differently later on</p>",
        "id": 132531252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873645
    },
    {
        "content": "<p>but it is a handy way to do a first pass, I suppose</p>",
        "id": 132531255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873654
    },
    {
        "content": "<p>yeah maybe it can be a nice first pass, so that I can then incorporate those comments into the PR</p>",
        "id": 132531319,
        "sender_full_name": "lqd",
        "timestamp": 1534873715
    },
    {
        "content": "<p>k</p>",
        "id": 132531321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873718
    },
    {
        "content": "<p>all the  cases similar to <code>sprs-0.6.2</code> are what we talked about before and can be all marked as <a href=\"https://github.com/rust-lang/rust/issues/47349\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47349\">#47349</a> I think</p>",
        "id": 132531364,
        "sender_full_name": "lqd",
        "timestamp": 1534873789
    },
    {
        "content": "<p>another question that is worth thinking about</p>",
        "id": 132531420,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873811
    },
    {
        "content": "<p>is whether we want to make an effort to track WONTFIX so that later we can have some idea</p>",
        "id": 132531430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873831
    },
    {
        "content": "<p>seems like yes</p>",
        "id": 132531432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873834
    },
    {
        "content": "<p>e.g., it'd be very useful to know the \"classes\" of fixes we saw in the wild</p>",
        "id": 132531441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873843
    },
    {
        "content": "<p>so e.g. there is <a href=\"https://github.com/rust-lang/rust/issues/47349\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47349\">#47349</a></p>",
        "id": 132531445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873848
    },
    {
        "content": "<p>there is <code>foo(&amp;mut bar, ...)</code>, which you have been tagging as <a href=\"https://github.com/rust-lang/rust/issues/51915\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51915\">#51915</a> -- though I might draw finer distinctions</p>",
        "id": 132531464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873873
    },
    {
        "content": "<p>in particular between e.g. <code>foo(bar, ...)</code> (with an implicit reborrow) and the explicit form</p>",
        "id": 132531472,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873885
    },
    {
        "content": "<p>seems like it would be good to classify those</p>",
        "id": 132531483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873904
    },
    {
        "content": "<p>I guess by tagging with issues</p>",
        "id": 132531485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873908
    },
    {
        "content": "<p>(if nothing else, these might be cases where we also want specialized diagnostics)</p>",
        "id": 132531534,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534873926
    },
    {
        "content": "<p>agreed; (and maybe in the same vein we still have the run results without 2PB in case we want to see what the different \"levels\" of 2PB handling look like in the wild)</p>",
        "id": 132531543,
        "sender_full_name": "lqd",
        "timestamp": 1534873932
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> maybe I'll leave FIXME tags for things where it seems like some further work could be done (e.g., filing or finding a tracking issue for Fixed By NLL etc)</p>",
        "id": 132532257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534874686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah I think liner is weird</p>",
        "id": 132532259,
        "sender_full_name": "lqd",
        "timestamp": 1534874691
    },
    {
        "content": "<p>I think the error is <em>probably</em> legit</p>",
        "id": 132532350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534874788
    },
    {
        "content": "<p>specifically I think there is a bug in AST borrowck .. I guess I should go see if I can find it</p>",
        "id": 132532358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534874799
    },
    {
        "content": "<p>the repro surely was done for the previous run, I didn't notice the errors are probably different now for this crate</p>",
        "id": 132532380,
        "sender_full_name": "lqd",
        "timestamp": 1534874850
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> may recall... I think that AST borrowck though doesn't consider <code>match b { true, false }</code> to read <code>b</code>, which is clearly false</p>",
        "id": 132532451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534874924
    },
    {
        "content": "<p>or at least it doesn't under some circumstances</p>",
        "id": 132532457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534874933
    },
    {
        "content": "<p>yep, <a href=\"https://play.rust-lang.org/?gist=ac2a8a07e00d92032223408f1e4337b8&amp;version=stable&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=ac2a8a07e00d92032223408f1e4337b8&amp;version=stable&amp;mode=debug&amp;edition=2015\">example from playground</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">enum</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">V1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V2</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Foo</span>::<span class=\"n\">V1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">bar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Foo</span>::<span class=\"n\">V1</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">Foo</span>::<span class=\"n\">V2</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 132532485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534874986
    },
    {
        "content": "<p>that compiles with AST borrowck (!)</p>",
        "id": 132532486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534874992
    },
    {
        "content": "<p>but not with NLL</p>",
        "id": 132532540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875010
    },
    {
        "content": "<p>seems like <a href=\"https://github.com/rust-lang/rust/issues/27282\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/27282\">https://github.com/rust-lang/rust/issues/27282</a> <em>may</em> be the right issue, but that's really for a different problem</p>",
        "id": 132532543,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875024
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> in the repo you have \"wants a more aggressive 2PB\" is that the WONTFIX one like for <code>capnp</code> ?</p>",
        "id": 132532744,
        "sender_full_name": "lqd",
        "timestamp": 1534875300
    },
    {
        "content": "<p>probably... where did I write that?</p>",
        "id": 132532945,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875526
    },
    {
        "content": "<p>lower table, <code>extended-collections</code></p>",
        "id": 132533027,
        "sender_full_name": "lqd",
        "timestamp": 1534875617
    },
    {
        "content": "<p>maybe not since there is an issue hmm</p>",
        "id": 132533039,
        "sender_full_name": "lqd",
        "timestamp": 1534875656
    },
    {
        "content": "<p>maybe the WONTFIX for <code>capnp</code>in the hackmd doc might be one of those cases we mentioned where we can track them later</p>",
        "id": 132533128,
        "sender_full_name": "lqd",
        "timestamp": 1534875744
    },
    {
        "content": "<p>I guess I wish I had transcribed the log links =)</p>",
        "id": 132533225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875867
    },
    {
        "content": "<p>but yes looking at <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426/a5d98b025f62ace80fe9d2a15781f900fc42515e-alt/reg/extended-collections-0.2.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426/a5d98b025f62ace80fe9d2a15781f900fc42515e-alt/reg/extended-collections-0.2.0/log.txt\">the log here</a>, it looks like this comes from the <code>foo(&amp;mut bar, use(bar))</code> pattern</p>",
        "id": 132533243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875900
    },
    {
        "content": "<p>Really, I think we should file a tracking issue for .. hmm, what to call it</p>",
        "id": 132533267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875919
    },
    {
        "content": "<p>I think arielby's name was Ref2Φ</p>",
        "id": 132533276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875931
    },
    {
        "content": "<p>but I'd prefer something one can type in ASCII :P</p>",
        "id": 132533279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875936
    },
    {
        "content": "<p>:D</p>",
        "id": 132533283,
        "sender_full_name": "lqd",
        "timestamp": 1534875944
    },
    {
        "content": "<p>maybe just Ref2 :)</p>",
        "id": 132533294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875951
    },
    {
        "content": "<p>Ref2Phi2Furious</p>",
        "id": 132533330,
        "sender_full_name": "lqd",
        "timestamp": 1534875963
    },
    {
        "content": "<p>anyway, the point, a generalized form of 2PB that is integrated into the type system proper</p>",
        "id": 132533343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875967
    },
    {
        "content": "<p>it seems like the examples we see almost all fall into that category</p>",
        "id": 132533364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875988
    },
    {
        "content": "<p>rather than the <em>actual</em> expansion I had in mind for <a href=\"https://github.com/rust-lang/rust/issues/51915\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51915\">#51915</a></p>",
        "id": 132533368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534875996
    },
    {
        "content": "<p>so maybe we should just repurpose <a href=\"https://github.com/rust-lang/rust/issues/51915\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51915\">#51915</a>, I don't know</p>",
        "id": 132533375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876006
    },
    {
        "content": "<p>in particular here the extended-collections error in question:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"mi\">155</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                       </span><span class=\"n\">curr_node</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">mem</span>::<span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">______________________________________</span><span class=\"o\">-</span><span class=\"w\"></span>\n<span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"mi\">156</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">next_link</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"o\">--------------</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">mutable</span><span class=\"w\"> </span><span class=\"n\">borrow</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"mi\">157</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">next_link</span><span class=\"p\">.</span><span class=\"n\">next</span><span class=\"p\">).</span><span class=\"n\">get_pointer_mut</span><span class=\"p\">(</span><span class=\"n\">curr_height</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"o\">^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">second</span><span class=\"w\"> </span><span class=\"n\">mutable</span><span class=\"w\"> </span><span class=\"n\">borrow</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"mi\">158</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                     </span><span class=\"p\">).</span><span class=\"n\">next</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mi\">23</span>:<span class=\"mi\">13</span>:<span class=\"mf\">06.434</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"n\">kablam</span><span class=\"o\">!</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_____________________</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">borrow</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">later</span><span class=\"w\"> </span><span class=\"n\">iteration</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n</pre></div>",
        "id": 132533405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876035
    },
    {
        "content": "<p>(maybe we can link all the hackmd we've made in the repo, to at least have those until all the FIXMEs are done)</p>",
        "id": 132533485,
        "sender_full_name": "lqd",
        "timestamp": 1534876113
    },
    {
        "content": "<p>it seems like we basically have two common regressions—</p>",
        "id": 132533518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876183
    },
    {
        "content": "<p>this one (<a href=\"https://github.com/rust-lang/rust/issues/51915\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51915\">#51915</a>) and the fact that we correctly check <code>+=</code> now</p>",
        "id": 132533522,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876194
    },
    {
        "content": "<p>interestingly, <em>both</em> of those might be fixed by the same 2-phase borrow sort of thing</p>",
        "id": 132533564,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876203
    },
    {
        "content": "<p>hmm <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> this example may be a bug:</p>\n<p><a href=\"https://play.rust-lang.org/?gist=2d4da1787e06a75def402cfe1f9e544e&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=2d4da1787e06a75def402cfe1f9e544e&amp;version=nightly&amp;mode=debug&amp;edition=2015\">minimized</a></p>",
        "id": 132533645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876290
    },
    {
        "content": "<p>in particular because of this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"n\">parse_sess</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;a</span><span class=\"w\"> </span><span class=\"n\">ParseSess</span><span class=\"p\">,</span><span class=\"w\"></span>\n</pre></div>",
        "id": 132533663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876310
    },
    {
        "content": "<p>this implies that e.g. you could rewrite that code too</p>",
        "id": 132533667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876315
    },
    {
        "content": "<p>oh...</p>",
        "id": 132533717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876329
    },
    {
        "content": "<p><em>never mind</em> :)</p>",
        "id": 132533722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876332
    },
    {
        "content": "<p>I was going to say you could rewrite to <code>let parse_sess = cx.parse_sess;</code></p>",
        "id": 132533735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876345
    },
    {
        "content": "<p>but of course that <em>itself</em> would be an illegal access</p>",
        "id": 132533740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876352
    },
    {
        "content": "<p>presumably this same confusion is why the AST-based checker accepted it</p>",
        "id": 132533751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876364
    },
    {
        "content": "<p>ok I went through the whole hackmd doc</p>",
        "id": 132533776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876393
    },
    {
        "content": "<p>thanks a million times for doing this initial triage work <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> <span class=\"emoji emoji-1f451\" title=\"crown\">:crown:</span></p>",
        "id": 132533799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876412
    },
    {
        "content": "<p>so, so helpful</p>",
        "id": 132533802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534876417
    },
    {
        "content": "<p>awesome thank you! I'll incorporate the hackmd comments now</p>",
        "id": 132534001,
        "sender_full_name": "lqd",
        "timestamp": 1534876593
    },
    {
        "content": "<p>oh but I can link the WONTFIX cases to <a href=\"https://github.com/rust-lang/rust/issues/47349\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47349\">https://github.com/rust-lang/rust/issues/47349</a> as it's \"the diagnostics to guide users\" for cases which used to work IIUC</p>",
        "id": 132534235,
        "sender_full_name": "lqd",
        "timestamp": 1534876846
    },
    {
        "content": "<p>yes, seems good</p>",
        "id": 132534407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534877032
    },
    {
        "content": "<p>it's worth separating the cases anyway</p>",
        "id": 132534410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534877037
    },
    {
        "content": "<p>as there might be some targeted fix for one and not the other</p>",
        "id": 132534452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534877050
    },
    {
        "content": "<p>I'll reminimize <code>rs-graph-0.14.0</code> to show more specifically where the 2 borrowcks differ, otherwise it'll be tough to check if it's <a href=\"https://github.com/rust-lang/rust/issues/53121\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53121\">#53121</a></p>",
        "id": 132535043,
        "sender_full_name": "lqd",
        "timestamp": 1534877749
    },
    {
        "content": "<p>yep</p>",
        "id": 132535051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534877762
    },
    {
        "content": "<p>that'd be awesome</p>",
        "id": 132535089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534877765
    },
    {
        "content": "<p>need to write that auto minimization tool, like bugpoint ;-)</p>",
        "id": 132535102,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534877787
    },
    {
        "content": "<p>creduce works \"fine\"</p>",
        "id": 132535244,
        "sender_full_name": "lqd",
        "timestamp": 1534877929
    },
    {
        "content": "<p>Oh?</p>",
        "id": 132535277,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534877969
    },
    {
        "content": "<p>but it's super aggressive in reducing the names, making it a bit harder to link to the original crate</p>",
        "id": 132535282,
        "sender_full_name": "lqd",
        "timestamp": 1534877973
    },
    {
        "content": "<blockquote>\n<p>C-Reduce happens to do a pretty good job reducing the size of programs in languages other than C/C++, such as JavaScript and Rust.</p>\n</blockquote>",
        "id": 132535294,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534877994
    },
    {
        "content": "<p>huh, TIL</p>",
        "id": 132535298,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534877999
    },
    {
        "content": "<p>I wonder how useful reducing names actually is to finding bugs. Be nice if you could disable that</p>",
        "id": 132535354,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1534878023
    },
    {
        "content": "<p>I did use it for the one crate linking super generic code from hyper, futures, and tokio</p>",
        "id": 132535355,
        "sender_full_name": "lqd",
        "timestamp": 1534878024
    },
    {
        "content": "<p>but then renamed everything so it's easier to understand and closer to the crate</p>",
        "id": 132535365,
        "sender_full_name": "lqd",
        "timestamp": 1534878045
    },
    {
        "content": "<p>that was after a couple hours of reducing this case manually :)</p>",
        "id": 132535391,
        "sender_full_name": "lqd",
        "timestamp": 1534878089
    },
    {
        "content": "<p>(also it uses clang-format so it looks weird, maybe we can hook up rustfmt for it)</p>",
        "id": 132535452,
        "sender_full_name": "lqd",
        "timestamp": 1534878132
    },
    {
        "content": "<p>I was confused by <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426/a5d98b025f62ace80fe9d2a15781f900fc42515e-alt/reg/segment-tree-1.1.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426/a5d98b025f62ace80fe9d2a15781f900fc42515e-alt/reg/segment-tree-1.1.0/log.txt\">segment-tree</a> as it built fine on nightly</p>",
        "id": 132535512,
        "sender_full_name": "lqd",
        "timestamp": 1534878209
    },
    {
        "content": "<p>but probably I did something wrong instead</p>",
        "id": 132535576,
        "sender_full_name": "lqd",
        "timestamp": 1534878260
    },
    {
        "content": "<p>just in time for the meeting, I've pushed the missing results to <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/1\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/1\">https://github.com/nikomatsakis/nll-crater-run-results/pull/1</a> for all except rs-graph which I'll re-minimize before either opening a new pr or pushing to this one</p>",
        "id": 132536940,
        "sender_full_name": "lqd",
        "timestamp": 1534879888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> added a couple things, including the new rs-graph repros where the 2 borrowcks disagree <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/2\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/2\">https://github.com/nikomatsakis/nll-crater-run-results/pull/2</a></p>",
        "id": 132572841,
        "sender_full_name": "lqd",
        "timestamp": 1534937310
    },
    {
        "content": "<p>that was quick :)</p>",
        "id": 132572865,
        "sender_full_name": "lqd",
        "timestamp": 1534937386
    },
    {
        "content": "<p>/me looks</p>",
        "id": 132572869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534937394
    },
    {
        "content": "<p>living on the edge, merging before looking :)</p>",
        "id": 132572921,
        "sender_full_name": "lqd",
        "timestamp": 1534937423
    },
    {
        "content": "<p>I'll reminimize liner now</p>",
        "id": 132573012,
        "sender_full_name": "lqd",
        "timestamp": 1534937542
    },
    {
        "content": "<p>I think last time I minimized liner, using a _ pattern might have made things confusing (rather than contributing to my goal of not focusing on the match arms): that is, the errors didn't change between the 2 crater runs, and the 2 borrowcks differed on the minimal repro.</p>",
        "id": 132573710,
        "sender_full_name": "lqd",
        "timestamp": 1534938692
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?gist=7f96eeac405c6f2316fdc794c1631124&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=7f96eeac405c6f2316fdc794c1631124&amp;version=nightly&amp;mode=debug&amp;edition=2015\">This repro</a> is more truthful to the crate</p>",
        "id": 132573713,
        "sender_full_name": "lqd",
        "timestamp": 1534938713
    },
    {
        "content": "<p>but <a href=\"https://play.rust-lang.org/?gist=ccb6c558bf380bc7026074c958be3c7a&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=ccb6c558bf380bc7026074c958be3c7a&amp;version=nightly&amp;mode=debug&amp;edition=2015\">this one</a> with the _ pattern was tagged as <a href=\"https://github.com/rust-lang/rust/issues/53114\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53114\">#53114</a></p>",
        "id": 132573753,
        "sender_full_name": "lqd",
        "timestamp": 1534938749
    },
    {
        "content": "<p>(while I thought the errors looked legit)</p>",
        "id": 132573756,
        "sender_full_name": "lqd",
        "timestamp": 1534938778
    },
    {
        "content": "<p>thanks :)</p>",
        "id": 132573956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534939190
    },
    {
        "content": "<p>my take would be that the \"truthful\" repro is \"not a bug\"</p>",
        "id": 132573957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534939199
    },
    {
        "content": "<p>(though, incidentally, I think that the Ref2 proposal might accept it)</p>",
        "id": 132574001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534939210
    },
    {
        "content": "<p>(or some variants thereof)</p>",
        "id": 132574005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534939216
    },
    {
        "content": "<p>but <a href=\"https://github.com/rust-lang/rust/issues/53114\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53114\">#53114</a> may well be a bug :P</p>",
        "id": 132574006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534939225
    },
    {
        "content": "<p>sometimes lies are useful I guess</p>",
        "id": 132574008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534939229
    },
    {
        "content": "<p>I'll open another PR on your repo for the repro and moving them in the \"correct\" table</p>",
        "id": 132574011,
        "sender_full_name": "lqd",
        "timestamp": 1534939255
    },
    {
        "content": "<p>and here it is <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/3\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/3\">https://github.com/nikomatsakis/nll-crater-run-results/pull/3</a></p>",
        "id": 132574370,
        "sender_full_name": "lqd",
        "timestamp": 1534939846
    },
    {
        "content": "<p>ty &lt;3</p>",
        "id": 132576947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1534943486
    },
    {
        "content": "<p>np :)</p>",
        "id": 132577652,
        "sender_full_name": "lqd",
        "timestamp": 1534944288
    },
    {
        "content": "<p>/me realizes he still hasn't minimized the 2 remaining crates from the crater run <span class=\"emoji emoji-1f631\" title=\"scream\">:scream:</span></p>",
        "id": 132928799,
        "sender_full_name": "lqd",
        "timestamp": 1535475548
    },
    {
        "content": "<p><em>eek</em></p>",
        "id": 132928815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535475576
    },
    {
        "content": "<p>I didn't realize there were any left :)</p>",
        "id": 132928819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535475582
    },
    {
        "content": "<p>/me shouldn't have said anything</p>",
        "id": 132928829,
        "sender_full_name": "lqd",
        "timestamp": 1535475596
    },
    {
        "content": "<p>for reals centril's proptest-arbitrary + proptest is tough to do, I spent a \"couple\" hours on it and came up short so with new hope and energy and c-reduce I'll try to do so before the meeting (I was finishing automating the timing of the \"modern crate versions\")</p>",
        "id": 132929022,
        "sender_full_name": "lqd",
        "timestamp": 1535475725
    },
    {
        "content": "<p>this is what I mean, repro, not minimized <a href=\"https://play.rust-lang.org/?gist=c990af931ab56d93207efcade0ffd01b&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=c990af931ab56d93207efcade0ffd01b&amp;version=nightly&amp;mode=debug&amp;edition=2015\">https://play.rust-lang.org/?gist=c990af931ab56d93207efcade0ffd01b&amp;version=nightly&amp;mode=debug&amp;edition=2015</a></p>",
        "id": 132933209,
        "sender_full_name": "lqd",
        "timestamp": 1535480152
    },
    {
        "content": "<p><span class=\"emoji emoji-1f631\" title=\"scream\">:scream:</span></p>",
        "id": 132933277,
        "sender_full_name": "lqd",
        "timestamp": 1535480200
    },
    {
        "content": "<p>well.. that's not <em>terrible</em></p>",
        "id": 132933306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535480243
    },
    {
        "content": "<p>can we run the expanded form instead?</p>",
        "id": 132933323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535480260
    },
    {
        "content": "<p>the destination was not terrible but the journey was :p</p>",
        "id": 132933337,
        "sender_full_name": "lqd",
        "timestamp": 1535480277
    },
    {
        "content": "<p>heh</p>",
        "id": 132933417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535480316
    },
    {
        "content": "<p>by now probably yeah, I'll just throw it at c-reduce you never know :)</p>",
        "id": 132933429,
        "sender_full_name": "lqd",
        "timestamp": 1535480341
    },
    {
        "content": "<p>(c-reduce works on a single file)</p>",
        "id": 132933454,
        "sender_full_name": "lqd",
        "timestamp": 1535480381
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> ping me if you want to bounce around ideas on how to reduce. (As Niko says, the first step is often to work on an expanded form. My second step is often, or at least used to be, to employ “everybody loops”.)</p>",
        "id": 132934003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1535480991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> cool, thank you :) thankfully in my cases it's mostly about traits and bounds so I can remove all the methods and/or employ \"everybody-unimplementeds\"</p>",
        "id": 132934097,
        "sender_full_name": "lqd",
        "timestamp": 1535481079
    },
    {
        "content": "<p>Bah; why panic when you can diverge? ;)</p>",
        "id": 132934186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1535481154
    },
    {
        "content": "<p>the <code>proptest-arbitrary</code> minimized results in <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/4\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/4\">https://github.com/nikomatsakis/nll-crater-run-results/pull/4</a> look like <a href=\"https://github.com/rust-lang/rust/issues/53570\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53570\">#53570</a></p>",
        "id": 132992504,
        "sender_full_name": "lqd",
        "timestamp": 1535545358
    },
    {
        "content": "<p>ok, I should test if my fix fixes it</p>",
        "id": 132994331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535547464
    },
    {
        "content": "<p>ah yes, there's already a PR fixing this issue, nice</p>",
        "id": 132994504,
        "sender_full_name": "lqd",
        "timestamp": 1535547617
    },
    {
        "content": "<p>my branch does not fix the examples</p>",
        "id": 132998356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535551568
    },
    {
        "content": "<p>did we file  a bug for them?</p>",
        "id": 132998358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535551572
    },
    {
        "content": "<p>I think they are a separate — but perhaps similar — problem</p>",
        "id": 132998365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535551579
    },
    {
        "content": "<p>I've not dug into it more deeply yet</p>",
        "id": 132998367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535551583
    },
    {
        "content": "<p>I don't think we did no</p>",
        "id": 132998413,
        "sender_full_name": "lqd",
        "timestamp": 1535551652
    },
    {
        "content": "<p>I can do it and ref it in the PR if you want ?</p>",
        "id": 132998476,
        "sender_full_name": "lqd",
        "timestamp": 1535551684
    },
    {
        "content": "<p>would be good, thanks</p>",
        "id": 132998893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535552137
    },
    {
        "content": "<p><span class=\"emoji emoji-1f926\" title=\"face palm\">:face_palm:</span> <a href=\"https://github.com/rust-lang/rust/issues/53570\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53570\">#53570</a> is about closures and there were no closures in the minimized versions, sorry. I filed <a href=\"https://github.com/rust-lang/rust/issues/53789\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53789\">#53789</a> and updated the <code>nll-crater-run-results</code> PR</p>",
        "id": 133000238,
        "sender_full_name": "lqd",
        "timestamp": 1535553720
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> if those proptest-arbitrary cases are a duplicate of <a href=\"https://github.com/rust-lang/rust/issues/53121\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53121\">#53121</a> it'll be interesting to see why they differ wrt crate-type=lib ?</p>",
        "id": 133007909,
        "sender_full_name": "lqd",
        "timestamp": 1535560744
    },
    {
        "content": "<p>yeah, I forgot about that</p>",
        "id": 133008455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535561414
    },
    {
        "content": "<p>I finalized minimized <code>pom</code> from the crater run: is <a href=\"https://play.rust-lang.org/?gist=c6a5e5dcf99e04855350770b62528486&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=c6a5e5dcf99e04855350770b62528486&amp;version=nightly&amp;mode=debug&amp;edition=2015\">this playground example</a> an instance of <a href=\"https://github.com/rust-lang/rust/issues/53040\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53040\">#53040</a> ? and is this issue tracking the fact that the error \"returning this value requires that <code>'1</code> must outlive <code>'2</code>\" doesn't contain a note with the <code>'2</code> lifetime here ?</p>",
        "id": 133306503,
        "sender_full_name": "lqd",
        "timestamp": 1536062162
    },
    {
        "content": "<p>also I was wondering, now that type ascription support is more advanced, and the previous run's ICEs are fixed, if we'll need another crater run soon, maybe wait until more of the type ascription work lands ?  (and since I'm guessing the RC is super soon, it could be for some time during RC2 ?)</p>",
        "id": 133893616,
        "sender_full_name": "lqd",
        "timestamp": 1536852861
    },
    {
        "content": "<p>I'm mildly nervous about ascription causing ICEs or errors</p>",
        "id": 133895009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854210
    },
    {
        "content": "<p>so it seems good to run it</p>",
        "id": 133895010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854212
    },
    {
        "content": "<p>but it may indeed be that we can piggy back on the RC run</p>",
        "id": 133895017,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854222
    },
    {
        "content": "<p>although</p>",
        "id": 133895024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854226
    },
    {
        "content": "<p>I think that may not work for us</p>",
        "id": 133895027,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854231
    },
    {
        "content": "<p>beacuse it will be in migration mode</p>",
        "id": 133895030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854234
    },
    {
        "content": "<p>and we want to see errors, right?</p>",
        "id": 133895031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854237
    },
    {
        "content": "<p>seems like we should do our own run</p>",
        "id": 133895037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536854242
    },
    {
        "content": "<p>yeah good point</p>",
        "id": 133895044,
        "sender_full_name": "lqd",
        "timestamp": 1536854260
    },
    {
        "content": "<p>Craterbot allows anyone on the compiler team (which it gets through, I think, the GH team) to queue runs now :)</p>",
        "id": 133895047,
        "sender_full_name": "simulacrum",
        "timestamp": 1536854265
    },
    {
        "content": "<p>nice</p>",
        "id": 133895054,
        "sender_full_name": "lqd",
        "timestamp": 1536854282
    },
    {
        "content": "<p><a href=\"https://crater.rust-lang.org/\" target=\"_blank\" title=\"https://crater.rust-lang.org/\">https://crater.rust-lang.org/</a> is also a wonderful UI now</p>",
        "id": 133895144,
        "sender_full_name": "simulacrum",
        "timestamp": 1536854383
    },
    {
        "content": "<p>and wonderfully devoid of running experiments which we could take advantage of at any time :)</p>",
        "id": 133895224,
        "sender_full_name": "lqd",
        "timestamp": 1536854427
    },
    {
        "content": "<p>perfect timing :) would you mind opening the PR for a crater run again <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> ?</p>",
        "id": 133895760,
        "sender_full_name": "memoryruins",
        "timestamp": 1536854998
    },
    {
        "content": "<p>yeah I can take care of that, do we want it like soon or would we want more of the remaining ascription work to land first ?</p>",
        "id": 133895892,
        "sender_full_name": "lqd",
        "timestamp": 1536855111
    },
    {
        "content": "<p>I thnk all the ascription work that is going to land in near future has landed</p>",
        "id": 133896006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855222
    },
    {
        "content": "<p>the rest isn't even started yet</p>",
        "id": 133896009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855226
    },
    {
        "content": "<p>also, we believe it's mostly \"the details\"</p>",
        "id": 133896010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855232
    },
    {
        "content": "<p>but not the common cases</p>",
        "id": 133896011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855238
    },
    {
        "content": "<p>oh ok I'll take care of it now then</p>",
        "id": 133896080,
        "sender_full_name": "lqd",
        "timestamp": 1536855277
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/53426\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53426\">https://github.com/rust-lang/rust/pull/53426</a> is updated, and should be ready to be <code>try</code>-ed and then <code>craterbot</code>-ted</p>",
        "id": 133898219,
        "sender_full_name": "lqd",
        "timestamp": 1536857612
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/sl3l2f-40E44fHj060o_HrV5/screenshot.3561.png\" target=\"_blank\" title=\"screenshot.3561.png\">screenshot.3561.png</a> <br>\n<code>The actual stderr differed from the expected stderr.</code></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/sl3l2f-40E44fHj060o_HrV5/screenshot.3561.png\" target=\"_blank\" title=\"screenshot.3561.png\"><img src=\"/user_uploads/4715/sl3l2f-40E44fHj060o_HrV5/screenshot.3561.png\"></a></div>",
        "id": 133920550,
        "sender_full_name": "memoryruins",
        "timestamp": 1536882543
    },
    {
        "content": "<p>(if that's a screenshot of CI errors, the failing tests are expected, but the try run will succeed)</p>",
        "id": 133928744,
        "sender_full_name": "lqd",
        "timestamp": 1536894271
    },
    {
        "content": "<p>ah yea, it is haha (good to know!)</p>",
        "id": 133929272,
        "sender_full_name": "memoryruins",
        "timestamp": 1536895432
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> salut Felix :) could you ask bors for a try run on <a href=\"https://github.com/rust-lang/rust/pull/53426\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53426\">this PR</a> so we can later do the crater run ?</p>",
        "id": 133944394,
        "sender_full_name": "lqd",
        "timestamp": 1536922140
    },
    {
        "content": "<p>done</p>",
        "id": 133944427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536922195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> merci</p>",
        "id": 133944479,
        "sender_full_name": "lqd",
        "timestamp": 1536922223
    },
    {
        "content": "<p>btw we're good to go for the crater run on <a href=\"https://github.com/rust-lang/rust/issues/53426\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53426\">#53426</a>. However, since a run has already been made for this PR, it's likely the <code>name</code> parameter needs to be different for craterbot this time, I guess \"pr-53426-2\" or similar would be enough</p>",
        "id": 133951736,
        "sender_full_name": "lqd",
        "timestamp": 1536931522
    },
    {
        "content": "<p>okay lets see</p>",
        "id": 133952049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536931778
    },
    {
        "content": "<p>can you just save me time and tell me what to type into the comment? I  haven't used craterbot before and don't want to thrash trying to identify the correct values for e.g. start=master#f00ba5</p>",
        "id": 133952152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536931869
    },
    {
        "content": "<p>or should it be literally the same except for the name field?</p>",
        "id": 133952171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536931893
    },
    {
        "content": "<p>(same compared to <a href=\"https://github.com/rust-lang/rust/pull/53426#issuecomment-413696519\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53426#issuecomment-413696519\">https://github.com/rust-lang/rust/pull/53426#issuecomment-413696519</a> that is ...)</p>",
        "id": 133952183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536931909
    },
    {
        "content": "<p>I don't know either but can look it up :)</p>",
        "id": 133952185,
        "sender_full_name": "lqd",
        "timestamp": 1536931910
    },
    {
        "content": "<p>ah wait the <code>end</code> needs to point to the new try commit probably</p>",
        "id": 133952252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536931942
    },
    {
        "content": "<p>since I rebased over a more recent master I think it's going to be a different sha</p>",
        "id": 133952255,
        "sender_full_name": "lqd",
        "timestamp": 1536931943
    },
    {
        "content": "<p>yup</p>",
        "id": 133952263,
        "sender_full_name": "lqd",
        "timestamp": 1536931952
    },
    {
        "content": "<p>okay well if you give me a comment to write, I'll sanity-check it and then paste in.</p>",
        "id": 133952285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536931981
    },
    {
        "content": "<p>yeah I'm trying to understand how it works (I've never used it not have access) but I think I got it, just a sec</p>",
        "id": 133952325,
        "sender_full_name": "lqd",
        "timestamp": 1536932020
    },
    {
        "content": "<p>right, I understand that you and I are both thrashing</p>",
        "id": 133952330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536932038
    },
    {
        "content": "<p>my understanding is that it's <code>@craterbot run start=master#fccde0018a618eb6f45d2a3c97f629809994dff6 end=try#e3ede4ae5297558caacf160ecf523f3a5759f682 mode=check-only name=pr-53426-2</code> what do you think ?</p>",
        "id": 133952410,
        "sender_full_name": "lqd",
        "timestamp": 1536932113
    },
    {
        "content": "<p>e3ed being the merge of the try run, and fcc the parent master commit IIUC</p>",
        "id": 133952443,
        "sender_full_name": "lqd",
        "timestamp": 1536932147
    },
    {
        "content": "<p>we can also run that by the infra team for extra verification :)</p>",
        "id": 133952520,
        "sender_full_name": "lqd",
        "timestamp": 1536932195
    },
    {
        "content": "<p>lets give it a whirl</p>",
        "id": 133952782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536932468
    },
    {
        "content": "<p>though you left off the caps-lint=warn that was in <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> 's <a href=\"https://github.com/rust-lang/rust/pull/53426#issuecomment-413696519\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53426#issuecomment-413696519\">run</a></p>",
        "id": 133952874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536932538
    },
    {
        "content": "<p>interesting</p>",
        "id": 133952939,
        "sender_full_name": "lqd",
        "timestamp": 1536932608
    },
    {
        "content": "<p>I don't remember if it's needed <em>this time</em></p>",
        "id": 133952952,
        "sender_full_name": "lqd",
        "timestamp": 1536932626
    },
    {
        "content": "<p>oh</p>",
        "id": 133952963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536932636
    },
    {
        "content": "<p>would we be better off leaving that off for this run?</p>",
        "id": 133953014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536932657
    },
    {
        "content": "<p>I think it's likely you're right and we need it</p>",
        "id": 133953026,
        "sender_full_name": "lqd",
        "timestamp": 1536932680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125254\">@kennytm</span> if you have a second ^</p>",
        "id": 133953047,
        "sender_full_name": "lqd",
        "timestamp": 1536932699
    },
    {
        "content": "<p>default would be forbid</p>",
        "id": 133953063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1536932713
    },
    {
        "content": "<p>I would cap-lints to warn by default</p>",
        "id": 133953074,
        "sender_full_name": "simulacrum",
        "timestamp": 1536932727
    },
    {
        "content": "<p>unless you have some reason not to (though I don't know what that would be)</p>",
        "id": 133953078,
        "sender_full_name": "simulacrum",
        "timestamp": 1536932738
    },
    {
        "content": "<p>it's likely to not prevent the crates denying all warnings</p>",
        "id": 133953079,
        "sender_full_name": "lqd",
        "timestamp": 1536932739
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 133953134,
        "sender_full_name": "lqd",
        "timestamp": 1536932767
    },
    {
        "content": "<p>sweet</p>",
        "id": 133953299,
        "sender_full_name": "lqd",
        "timestamp": 1536932936
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"125254\">@kennytm</span></p>",
        "id": 133953321,
        "sender_full_name": "lqd",
        "timestamp": 1536932955
    },
    {
        "content": "<p>♪ the number of ICEs is zero ♫</p>",
        "id": 134006918,
        "sender_full_name": "lqd",
        "timestamp": 1537007714
    },
    {
        "content": "<p>woohoo!</p>",
        "id": 134007002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537007777
    },
    {
        "content": "<p>I was nervous about ascriptions adding more ICEs</p>",
        "id": 134007003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537007783
    },
    {
        "content": "<p>:)</p>",
        "id": 134007005,
        "sender_full_name": "lqd",
        "timestamp": 1537007792
    },
    {
        "content": "<p>and out of the previous 500-600 ICE instances, only 4 crates are unknown/new to us</p>",
        "id": 134007015,
        "sender_full_name": "lqd",
        "timestamp": 1537007816
    },
    {
        "content": "<p>I haven't yet looked at the errors in detail or tried to minimize (<a href=\"https://hackmd.io/LSqF054HSLecpHJe7H8K0g\" target=\"_blank\" title=\"https://hackmd.io/LSqF054HSLecpHJe7H8K0g\">WIP doc is here</a> until then and the nll-crater-results repo PRs which will follow)</p>",
        "id": 134007037,
        "sender_full_name": "lqd",
        "timestamp": 1537007872
    },
    {
        "content": "<p>I updated <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/4\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/4\">https://github.com/nikomatsakis/nll-crater-run-results/pull/4</a> and will work through the 4 new crates by next meeting</p>",
        "id": 134008696,
        "sender_full_name": "lqd",
        "timestamp": 1537011106
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> hey :) have you seen things like <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/master%23fccde0018a618eb6f45d2a3c97f629809994dff6/reg/opcua-server-0.3.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/master%23fccde0018a618eb6f45d2a3c97f629809994dff6/reg/opcua-server-0.3.0/log.txt\">this</a> or <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/opcua-server-0.3.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/opcua-server-0.3.0/log.txt\">this</a>: they are categorized \"SameBuildFail\", but there are no errors in the logs, is that familiar to you ?</p>",
        "id": 134009219,
        "sender_full_name": "lqd",
        "timestamp": 1537012080
    },
    {
        "content": "<p>wut</p>",
        "id": 134009268,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537012105
    },
    {
        "content": "<p>rustc returns that there is an error... let me try those locally</p>",
        "id": 134009271,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537012120
    },
    {
        "content": "<p>that is weird indeed</p>",
        "id": 134009276,
        "sender_full_name": "lqd",
        "timestamp": 1537012133
    },
    {
        "content": "<p>I'm trying locally as well</p>",
        "id": 134009292,
        "sender_full_name": "lqd",
        "timestamp": 1537012170
    },
    {
        "content": "<p>opcua-server 0.3.0 seems to build on a nightly from last week <span class=\"emoji emoji-1f914\" title=\"thinking\">:thinking:</span></p>",
        "id": 134009346,
        "sender_full_name": "lqd",
        "timestamp": 1537012286
    },
    {
        "content": "<p>wtf, it's building fine even with the run's toolchain</p>",
        "id": 134009446,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537012560
    },
    {
        "content": "<p>the plot thickens</p>",
        "id": 134009487,
        "sender_full_name": "lqd",
        "timestamp": 1537012598
    },
    {
        "content": "<p>let me start a crater run locally</p>",
        "id": 134009532,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537012708
    },
    {
        "content": "<p>maybe a spurious weirdness</p>",
        "id": 134009534,
        "sender_full_name": "lqd",
        "timestamp": 1537012727
    },
    {
        "content": "<p>it's strange if this is spurious and happened on both toolchains</p>",
        "id": 134009546,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537012771
    },
    {
        "content": "<p>but rustc reported some errors :/</p>",
        "id": 134009548,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537012781
    },
    {
        "content": "<p>rustc didn't want to share those errors with us</p>",
        "id": 134009553,
        "sender_full_name": "lqd",
        "timestamp": 1537012796
    },
    {
        "content": "<p>wtf, this is happening in my local crater run</p>",
        "id": 134009672,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537012998
    },
    {
        "content": "<p>progress :)</p>",
        "id": 134009676,
        "sender_full_name": "lqd",
        "timestamp": 1537013026
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/master%23fccde0018a618eb6f45d2a3c97f629809994dff6/reg/hyper-0.12.8/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/master%23fccde0018a618eb6f45d2a3c97f629809994dff6/reg/hyper-0.12.8/log.txt\">hyper</a> doesn't build on crater but that seems normal I guess ? it's missing  examples in the <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> package but they are referenced in Cargo.toml, we can see the failure just because of our --all-targets config</p>",
        "id": 134009963,
        "sender_full_name": "lqd",
        "timestamp": 1537013486
    },
    {
        "content": "<p>hmm, maybe we should directly strip missing examples</p>",
        "id": 134010166,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537013801
    },
    {
        "content": "<p>now, it would be really interesting to manage to reproduce the opcua failure outside of the docker container</p>",
        "id": 134010178,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537013834
    },
    {
        "content": "<p>true</p>",
        "id": 134010188,
        "sender_full_name": "lqd",
        "timestamp": 1537013880
    },
    {
        "content": "<p>does <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> remove parts of your crate when you publish (examples, benchmarks, etc) or this hyper case is probably an author error  (cargo.toml \"include\" doesn't include examples) ? or maybe this is something that can just happen and we may need to be more resilient of this kinds of cases in crater  ?</p>",
        "id": 134010368,
        "sender_full_name": "lqd",
        "timestamp": 1537014127
    },
    {
        "content": "<p>don't know</p>",
        "id": 134010517,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537014398
    },
    {
        "content": "<p>This may actually be my fault... <span class=\"emoji emoji-1f633\" title=\"embarrassed\">:embarrassed:</span></p>",
        "id": 134010522,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537014411
    },
    {
        "content": "<p>wow, so many tests, examples, benches that don't build</p>",
        "id": 134010523,
        "sender_full_name": "lqd",
        "timestamp": 1537014416
    },
    {
        "content": "<p>I know one of these crates used to ship many MB of test data</p>",
        "id": 134010531,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537014433
    },
    {
        "content": "<p>And it annoyed me so I removed it from the cargo package</p>",
        "id": 134010538,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537014459
    },
    {
        "content": "<p>I'm wondering whether having both check and check --all-targets separately would slow down things in crater</p>",
        "id": 134010540,
        "sender_full_name": "lqd",
        "timestamp": 1537014462
    },
    {
        "content": "<p>Since most people never want to run the tests / examples / etc. from the package</p>",
        "id": 134010581,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537014494
    },
    {
        "content": "<p>it makes sense that you did it, and only can impact us I think, eg on crater</p>",
        "id": 134010591,
        "sender_full_name": "lqd",
        "timestamp": 1537014576
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I was also wondering before, what kinds of cases were the \"Errors\" ? docker problems, OOMs, cargo having problems with lockfiles for some reason, things like that ? for instance <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/master%23fccde0018a618eb6f45d2a3c97f629809994dff6/reg/aquaengine-0.0.2/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-2/master%23fccde0018a618eb6f45d2a3c97f629809994dff6/reg/aquaengine-0.0.2/log.txt\">this</a> I don't know what to think</p>",
        "id": 134010676,
        "sender_full_name": "lqd",
        "timestamp": 1537014722
    },
    {
        "content": "<p>It also affects distro packagers who would run tests</p>",
        "id": 134010704,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537014766
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> the examples you mean ?</p>",
        "id": 134010714,
        "sender_full_name": "lqd",
        "timestamp": 1537014832
    },
    {
        "content": "<p>lemme see if I can find my commit, It might have been something else ;-)</p>",
        "id": 134010754,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537014851
    },
    {
        "content": "<p>(from hyper?)</p>",
        "id": 134010755,
        "sender_full_name": "lqd",
        "timestamp": 1537014855
    },
    {
        "content": "<p>Ah, no, <a href=\"https://github.com/carllerche/h2/pull/290\" target=\"_blank\" title=\"https://github.com/carllerche/h2/pull/290\">h2</a></p>\n<p>### Before</p>\n<p>Unpacked: 59M<br>\nCompressed: 5.4M</p>\n<p>### After</p>\n<p>Unpacked: 788K<br>\nCompressed: 133K</p>",
        "id": 134010821,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537015010
    },
    {
        "content": "<blockquote>\n<p>This will make people emo. </p>\n</blockquote>\n<p>That's you! <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 134010829,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537015055
    },
    {
        "content": "<p>lol</p>",
        "id": 134010830,
        "sender_full_name": "lqd",
        "timestamp": 1537015081
    },
    {
        "content": "<p>I was mostly wondering, 10% of the crates don't build for various reasons; if they don't break downstream that's good enough for me :)</p>",
        "id": 134010882,
        "sender_full_name": "lqd",
        "timestamp": 1537015153
    },
    {
        "content": "<p>like the futures crates don't build either, etc ¯\\_(ツ)_/¯</p>",
        "id": 134010928,
        "sender_full_name": "lqd",
        "timestamp": 1537015205
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> you shouldn't care about the \"errors\" section</p>",
        "id": 134015558,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537023861
    },
    {
        "content": "<p>those are crater errors I need to triage and fix, so they don't depend on the experiment</p>",
        "id": 134015570,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537023899
    },
    {
        "content": "<p>I just need the time to look into them a bit more :P</p>",
        "id": 134015583,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537023912
    },
    {
        "content": "<p>oh ok, thank you! :)</p>",
        "id": 134015585,
        "sender_full_name": "lqd",
        "timestamp": 1537023917
    },
    {
        "content": "<p>it was mostly out of curiosity</p>",
        "id": 134015592,
        "sender_full_name": "lqd",
        "timestamp": 1537023930
    },
    {
        "content": "<p>the problem with that is, I need to improve the logging to include in the report more stuff</p>",
        "id": 134015670,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537024043
    },
    {
        "content": "<p>at the moment just the error is not useful, and I need to log into the agent machines and grep the logs :P</p>",
        "id": 134015673,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537024060
    },
    {
        "content": "<p>understandable :) <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> thanks for the awesome job on crater, the bot, the UI, and more that you do</p>",
        "id": 134015793,
        "sender_full_name": "lqd",
        "timestamp": 1537024205
    },
    {
        "content": "<p>(update: the crater run was restarted as some, less than 200, logs have failed uploading)</p>",
        "id": 134064227,
        "sender_full_name": "lqd",
        "timestamp": 1537123917
    },
    {
        "content": "<p>the new run is finished, from a cursory glance I don't think these missing logs were NLL-related, but I'll check in more detail later</p>",
        "id": 134090365,
        "sender_full_name": "lqd",
        "timestamp": 1537176979
    },
    {
        "content": "<p>looked at it</p>",
        "id": 134090466,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537177157
    },
    {
        "content": "<p>the missing logs were too big to be uploaded, so they were missing before</p>",
        "id": 134090470,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537177173
    },
    {
        "content": "<p>probably in the samebuildfail or sametestpass categories</p>",
        "id": 134090524,
        "sender_full_name": "lqd",
        "timestamp": 1537177222
    },
    {
        "content": "<p>the only one that seems a \"regression\" is <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/cluLamansh-0.1.4/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/cluLamansh-0.1.4/log.txt\">cluLamansh</a>, but that's just <em>a lot</em> of warnings</p>",
        "id": 134090531,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537177236
    },
    {
        "content": "<p>(which means, it was the only one with test-pass on the first toolchain and error on the second one)</p>",
        "id": 134090558,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537177291
    },
    {
        "content": "<p>yeah, no errors</p>",
        "id": 134090559,
        "sender_full_name": "lqd",
        "timestamp": 1537177293
    },
    {
        "content": "<p>well, great :D</p>",
        "id": 134090566,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537177320
    },
    {
        "content": "<p>:)</p>",
        "id": 134090613,
        "sender_full_name": "lqd",
        "timestamp": 1537177333
    },
    {
        "content": "<p>it could be interesting to look at these warnings and diagnostics in case there are weird cases we don't know about, but today is not that day for me :p</p>",
        "id": 134090646,
        "sender_full_name": "lqd",
        "timestamp": 1537177409
    },
    {
        "content": "<blockquote>\n<p>wow, so many tests, examples, benches that don't build</p>\n</blockquote>\n<p>say more?</p>",
        "id": 134106296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537196594
    },
    {
        "content": "<blockquote>\n<p>understandable :) <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> thanks for the awesome job on crater, the bot, the UI, and more that you do</p>\n</blockquote>\n<p>also, yes, <span class=\"emoji emoji-1f44f\" title=\"clap\">:clap:</span></p>",
        "id": 134106313,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537196621
    },
    {
        "content": "<p>if you randomly look at the logs in the \"SameBuildFail\" category of the <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/full.html\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/full.html\">full report</a> you'll see a number of crates where tests, benchmarks, examples, don't build on crater, example: <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/aci_ppm-0.7.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/aci_ppm-0.7.0/log.txt\">this one</a>, or <a href=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/aes-0.2.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/pr-53426-3/try%23e3ede4ae5297558caacf160ecf523f3a5759f682/reg/aes-0.2.0/log.txt\">that one</a></p>",
        "id": 134107123,
        "sender_full_name": "lqd",
        "timestamp": 1537197463
    },
    {
        "content": "<p>two of the new crates in the crater run are of <a href=\"https://play.rust-lang.org/?gist=b61db3de15c2c0716d76d7e5df9abb02&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=b61db3de15c2c0716d76d7e5df9abb02&amp;version=nightly&amp;mode=debug&amp;edition=2015\">this form</a>, was it a bug in AST borrowck that it used to compile, or is it a bug in MIR borrowck that it does not ?</p>",
        "id": 134122180,
        "sender_full_name": "lqd",
        "timestamp": 1537213140
    },
    {
        "content": "<p>probably fixed-by-nll right?</p>",
        "id": 134122205,
        "sender_full_name": "lqd",
        "timestamp": 1537213177
    },
    {
        "content": "<p>Yes it's an AST borrowck bug. <em>goes to find issue</em></p>",
        "id": 134122370,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1537213355
    },
    {
        "content": "<p>/me starts humming Foo Fighters — My Hero</p>",
        "id": 134122405,
        "sender_full_name": "lqd",
        "timestamp": 1537213431
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/53432\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53432\">#53432</a></p>",
        "id": 134122741,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1537213826
    },
    {
        "content": "<p>yussss <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> thanks!!!</p>",
        "id": 134122746,
        "sender_full_name": "lqd",
        "timestamp": 1537213861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>  too bad it seems that a lot of hyper-based crates rely on it :)</p>",
        "id": 134122764,
        "sender_full_name": "lqd",
        "timestamp": 1537213915
    },
    {
        "content": "<p>That's seems to be true of all soundness bugs that are in the compiler long enough</p>",
        "id": 134122835,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1537213999
    },
    {
        "content": "<p>Especially when people have limited institution of when things are valid</p>",
        "id": 134122866,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1537214042
    },
    {
        "content": "<p>alright I think I'm basically done <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>: I updated <a href=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/4\" target=\"_blank\" title=\"https://github.com/nikomatsakis/nll-crater-run-results/pull/4\">https://github.com/nikomatsakis/nll-crater-run-results/pull/4</a> for the 4th run repros, and also added all the previous runs failing crates' logs (so this one commit kinda messes up the diff, do you want to review/check the other commits individually or want me to make a separate PR for these logs ?) I'll do one final pass over the results now to check I haven't forgotten anything</p>",
        "id": 134128606,
        "sender_full_name": "lqd",
        "timestamp": 1537220801
    },
    {
        "content": "<p>I dislike <a href=\"https://hackmd.io/Wn5iqR0MQmuPbzV_Ohjjow\" target=\"_blank\" title=\"https://hackmd.io/Wn5iqR0MQmuPbzV_Ohjjow\">this</a> very much: 22 crates marked as Regressed don't have logs, I think it's safe to say that at lest <em>some</em> of those are OOMs</p>",
        "id": 134135117,
        "sender_full_name": "lqd",
        "timestamp": 1537227659
    },
    {
        "content": "<p>eg <code>unic-ucd-name-0.7.0</code> == 12GB ram usage after 63s</p>",
        "id": 134135424,
        "sender_full_name": "lqd",
        "timestamp": 1537228151
    },
    {
        "content": "<p>(but njn has some in-progress <a href=\"https://github.com/rust-lang/rust/issues/52028#issuecomment-421944193\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52028#issuecomment-421944193\">work</a> to reduce NLL memory consumption in many perf.rlo benchmarks, and will be running some tests with e.g. this crate by tomorrow — it's likely that it will help, but maybe not completely fix these potential new issues, so we'll see how it goes :)</p>",
        "id": 134135991,
        "sender_full_name": "lqd",
        "timestamp": 1537228982
    },
    {
        "content": "<p>A person on SO was trying to build Rust code on a VPS with 256MB of RAM. lol 12G</p>",
        "id": 134138322,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537232685
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/52028#issuecomment-422235908\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52028#issuecomment-422235908\">update on njn's work</a> </p>\n<blockquote>\n<p>reduces its max-rss by 96%, from 29.1GB to 1.2GB<br>\n<span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>\n</blockquote>",
        "id": 134149764,
        "sender_full_name": "lqd",
        "timestamp": 1537254699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> there is currently a 1.5gb memory limit for builds</p>",
        "id": 134157545,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537266553
    },
    {
        "content": "<p>also, which are the flags you're using for NLL runs?</p>",
        "id": 134157548,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537266575
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I've also seen some not that big builds, but my thinking was that if crater runs multiple crates at once, the OOM killer might randomly kill one of the smaller processes first ? this could explain the non-huge crates from my list. But a 1.5GB limit explains the other more \"mundane\" ones at 1-2GB failures</p>",
        "id": 134157619,
        "sender_full_name": "lqd",
        "timestamp": 1537266668
    },
    {
        "content": "<p>the machine shouldn't run out of memory, we have 16gb and the sum of the limits for the 8 parallel containers is 12gb...</p>",
        "id": 134157668,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537266723
    },
    {
        "content": "<p>for the runs, the defaults are changed to automatically flip on -Zborrowck=mir and -Ztwo-phase-borrows</p>",
        "id": 134157669,
        "sender_full_name": "lqd",
        "timestamp": 1537266724
    },
    {
        "content": "<blockquote>\n<p>for the runs, the defaults are changed to automatically flip on -Zborrowck=mir and -Ztwo-phase-borrows</p>\n</blockquote>\n<p>great...</p>",
        "id": 134157696,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537266797
    },
    {
        "content": "<p>maybe the couple small ones from <a href=\"https://hackmd.io/Wn5iqR0MQmuPbzV_Ohjjow?both\" target=\"_blank\" title=\"https://hackmd.io/Wn5iqR0MQmuPbzV_Ohjjow?both\">the list</a> are random stuff, as these build locally without issues or high memory usage anyways; most of the others however are likely killed because of the limits</p>",
        "id": 134157699,
        "sender_full_name": "lqd",
        "timestamp": 1537266806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> so how should I review this PR?</p>",
        "id": 134168983,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280175
    },
    {
        "content": "<p>commit by commit?</p>",
        "id": 134168986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280179
    },
    {
        "content": "<p>also, thanks again for your work on this. invaluable.</p>",
        "id": 134168992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280186
    },
    {
        "content": "<p>yeah, commit by commit should work better, or I can remove the big logs one into another PR if need be</p>",
        "id": 134169020,
        "sender_full_name": "lqd",
        "timestamp": 1537280232
    },
    {
        "content": "<p>also...dear god...</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Chain</span><span class=\"o\">&lt;</span><span class=\"n\">P</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">P</span>: <span class=\"nc\">Parser</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Output</span><span class=\"o\">=</span><span class=\"n\">O</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Q</span>: <span class=\"nc\">Parser</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Output</span><span class=\"o\">=</span><span class=\"n\">U</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span>: <span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"n\">O</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Combinator</span><span class=\"o\">&lt;</span><span class=\"n\">Q</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">Parser</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Chain</span><span class=\"o\">&lt;</span><span class=\"n\">P</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">input</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;a</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">start</span>: <span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">U</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"mf\">0.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">).</span><span class=\"n\">and_then</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">).</span><span class=\"mf\">0.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 134169102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280295
    },
    {
        "content": "<p>from one of your repros :)</p>",
        "id": 134169106,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280301
    },
    {
        "content": "<p>there is at minimum a diagnostics issue there</p>",
        "id": 134169109,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280305
    },
    {
        "content": "<p>that was \"fun\" to repro :p</p>",
        "id": 134169124,
        "sender_full_name": "lqd",
        "timestamp": 1537280326
    },
    {
        "content": "<p>yeah I wanted to check whether the slight missing diagnostics was known to anyone or if we needed a new issue</p>",
        "id": 134169262,
        "sender_full_name": "lqd",
        "timestamp": 1537280451
    },
    {
        "content": "<p>well</p>",
        "id": 134169417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280570
    },
    {
        "content": "<p>ok so I looked at it more closely</p>",
        "id": 134169427,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280576
    },
    {
        "content": "<p>the diagnostics issue, I presume, is that the error just gives <code>'_</code> but we talk about a <code>'2</code>?</p>",
        "id": 134169440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280587
    },
    {
        "content": "<p>that seems clearly like a problem</p>",
        "id": 134169449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280596
    },
    {
        "content": "<p>yeah</p>",
        "id": 134169453,
        "sender_full_name": "lqd",
        "timestamp": 1537280600
    },
    {
        "content": "<p>I believe that the error itself is <em>legitimate</em> but <em>unfortunate</em></p>",
        "id": 134169456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280604
    },
    {
        "content": "<p>what's happening here is that, when you write the closure <code>|x: &amp;u8| { .. }</code></p>",
        "id": 134169464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280618
    },
    {
        "content": "<p>given that there is no \"expected type\" from context</p>",
        "id": 134169467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280624
    },
    {
        "content": "<p>we infer that the lifetime of <code>x</code> is local to the closure itself</p>",
        "id": 134169479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280635
    },
    {
        "content": "<p>and hence that the data cannot escape</p>",
        "id": 134169483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280638
    },
    {
        "content": "<p>(this error needs more improvement, but <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> has been iterating some on that...)</p>",
        "id": 134169530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280651
    },
    {
        "content": "<p>at least, I <em>think</em> this is the problem</p>",
        "id": 134169539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280662
    },
    {
        "content": "<p>we actually don't have a good way to annotate this type afaik</p>",
        "id": 134169548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280668
    },
    {
        "content": "<p>I think the bottom line is that using <code>&gt;&gt;</code> for this is a bad choice in rust :)</p>",
        "id": 134169568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280693
    },
    {
        "content": "<p>in any case, if you <a href=\"https://play.rust-lang.org/?gist=92455b30ff0d8b0b0cd838ec84e822da&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=92455b30ff0d8b0b0cd838ec84e822da&amp;version=nightly&amp;mode=debug&amp;edition=2015\">modify the example to have a named lifetime that we can talk about</a>, then it passes</p>",
        "id": 134169584,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280705
    },
    {
        "content": "<p>sorry, wrong link</p>",
        "id": 134169607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280726
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?gist=afecac3dc0c8f12a84209f52630db60b&amp;version=nightly&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=afecac3dc0c8f12a84209f52630db60b&amp;version=nightly&amp;mode=debug&amp;edition=2015\">passing version</a></p>",
        "id": 134169612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280732
    },
    {
        "content": "<p>that version contains </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">parser</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">v</span>:<span class=\"kp\">&amp;</span><span class=\"na\">&#39;a</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">]</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">to_vec</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n</pre></div>",
        "id": 134169618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280743
    },
    {
        "content": "<p>note the explicit <code>'a</code></p>",
        "id": 134169622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280746
    },
    {
        "content": "<p>I'm not sure why the old borrow checker didn't error out here</p>",
        "id": 134169629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280760
    },
    {
        "content": "<blockquote>\n<p>we actually don't have a good way to annotate this type afaik</p>\n</blockquote>\n<p>I've seen hacks like <code>fn enforce&lt;T: FnOnce(...)&gt;(f: T) -&gt; T</code> to apply complicated rules to closures</p>",
        "id": 134169686,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537280789
    },
    {
        "content": "<p>yes, you can do that</p>",
        "id": 134169697,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280817
    },
    {
        "content": "<p>note that I said a <em>good</em> way :)</p>",
        "id": 134169704,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280827
    },
    {
        "content": "<p>in any case, if you are doing that, you might as well make a method</p>",
        "id": 134169711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280837
    },
    {
        "content": "<p>so e.g. instead of <code>foo &gt;&gt; bar</code> something like <code>foo.and_then(bar)</code></p>",
        "id": 134169720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280846
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/a/46198877/155423\" target=\"_blank\" title=\"https://stackoverflow.com/a/46198877/155423\">https://stackoverflow.com/a/46198877/155423</a></p>",
        "id": 134169724,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537280852
    },
    {
        "content": "<p>there might be a fixed-by-nll issue we're tracking for this ?</p>",
        "id": 134169738,
        "sender_full_name": "lqd",
        "timestamp": 1537280866
    },
    {
        "content": "<p>I feel like we can probably minimize this further</p>",
        "id": 134169748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280880
    },
    {
        "content": "<p>let me see...</p>",
        "id": 134169789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280887
    },
    {
        "content": "<p>I don't know if there's an issue or not</p>",
        "id": 134169800,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537280902
    },
    {
        "content": "<p>as you can see the repros are not always <em>minimal</em></p>",
        "id": 134169917,
        "sender_full_name": "lqd",
        "timestamp": 1537281011
    },
    {
        "content": "<p>ok I went in detail over everything</p>",
        "id": 134170916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537282128
    },
    {
        "content": "<p>this is encouraging</p>",
        "id": 134170923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537282133
    },
    {
        "content": "<p>seems like no real \"new\" bugs?</p>",
        "id": 134170929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537282137
    },
    {
        "content": "<p>(but for the diagnostic issue)</p>",
        "id": 134170941,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537282148
    },
    {
        "content": "<p>I think yeah</p>",
        "id": 134170974,
        "sender_full_name": "lqd",
        "timestamp": 1537282202
    },
    {
        "content": "<p>I've also added the doc links to the PR desc if you wanted to check these notes</p>",
        "id": 134171029,
        "sender_full_name": "lqd",
        "timestamp": 1537282218
    },
    {
        "content": "<p>that is, apart from the couple crates which OOM, if you've been following <a href=\"#narrow/stream/122657-wg-nll/subject/crater-run-and-analysis/near/134135117\" title=\"#narrow/stream/122657-wg-nll/subject/crater-run-and-analysis/near/134135117\">this</a></p>",
        "id": 134171051,
        "sender_full_name": "lqd",
        "timestamp": 1537282249
    },
    {
        "content": "<p>hmm yes I saw that</p>",
        "id": 134171085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537282297
    },
    {
        "content": "<p>so we have to figure those out</p>",
        "id": 134171089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537282300
    },
    {
        "content": "<p>have you tried building them locally?</p>",
        "id": 134171094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537282304
    },
    {
        "content": "<p>yeah, I've all run them locally, the 20 or so</p>",
        "id": 134171101,
        "sender_full_name": "lqd",
        "timestamp": 1537282321
    },
    {
        "content": "<p>and njn's PR with a -96% max-rss is ready to r+</p>",
        "id": 134171155,
        "sender_full_name": "lqd",
        "timestamp": 1537282345
    },
    {
        "content": "<p>I don't know if they tested the second crate I saw yet, but we'll find out as soon as it lands I will recheck</p>",
        "id": 134171185,
        "sender_full_name": "lqd",
        "timestamp": 1537282387
    },
    {
        "content": "<p>that is <a href=\"https://github.com/rust-lang/rust/issues/54318\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54318\">#54318</a> which <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> reviewed earlier, but not r+ed yet, since those results were not available yet</p>",
        "id": 134171254,
        "sender_full_name": "lqd",
        "timestamp": 1537282443
    },
    {
        "content": "<p>I have not yet timed the only one of these 2 I can build, to see how longer it takes with NLL on, but will do so before tonight's meeting</p>",
        "id": 134171328,
        "sender_full_name": "lqd",
        "timestamp": 1537282553
    },
    {
        "content": "<p>(the other wants 29GB of ram ;)</p>",
        "id": 134171402,
        "sender_full_name": "lqd",
        "timestamp": 1537282593
    },
    {
        "content": "<p>bumped to p=1</p>",
        "id": 134171869,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537283067
    },
    {
        "content": "<p>(if there are crates that we want to find out how much RAM they use; and you don't have a machine with sufficient RAM to find that out; I have a 64GB machine that I can build stuff on to find out where they max out)</p>",
        "id": 134171877,
        "sender_full_name": "davidtwco",
        "timestamp": 1537283078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I guess I will file those diagnostic issues</p>",
        "id": 134171899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537283105
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> good to know for the future; thankfully it was only this one crate locally, and njn had found out this number. on crater the limit is 1.5GB so we're cutting it close often there)</p>",
        "id": 134171970,
        "sender_full_name": "lqd",
        "timestamp": 1537283172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> nll runs will be a lot easier soon :)</p>",
        "id": 134190625,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537302167
    },
    {
        "content": "<p><code>@craterbot run start=nightly-1970-01-01 end=nightly-1970-01-01+rustflags=\"-Zborrowck=mir -Ztwo-phase-borrows\"</code></p>",
        "id": 134190657,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1537302199
    },
    {
        "content": "<p>ah yes you were probably working on flag support :)</p>",
        "id": 134190659,
        "sender_full_name": "lqd",
        "timestamp": 1537302201
    },
    {
        "content": "<p>haha nice</p>",
        "id": 134190662,
        "sender_full_name": "lqd",
        "timestamp": 1537302205
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> nicely done <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 134190685,
        "sender_full_name": "lqd",
        "timestamp": 1537302235
    }
]