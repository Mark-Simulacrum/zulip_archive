[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> You said it should be safe to thread down the <code>hir::HirId</code>, right? As in attaching it to the <code>mir::LocalDecl</code> should not cause dep-graph to break?</p>",
        "id": 127605064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528210977
    },
    {
        "content": "<p>yes</p>",
        "id": 127605167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528211150
    },
    {
        "content": "<p><code>HirId</code> is \"incremental safe\"</p>",
        "id": 127605171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528211160
    },
    {
        "content": "<p>sorry to be such a pill about this, but I really would like to understand better. You are saying that you would not expect a diff like the one on this gist to cause the compile-fail errors also on that gist: <a href=\"https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b#file-thread-hir_id-diff\" target=\"_blank\" title=\"https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b#file-thread-hir_id-diff\">https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b#file-thread-hir_id-diff</a></p>",
        "id": 127616979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226009
    },
    {
        "content": "<p>To be clear, there are some other changes that were part of that range of commits; but these are the only ones that modified internal compiler data structures, and thus the only ones relevant to dep-graph...?</p>",
        "id": 127617058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226068
    },
    {
        "content": "<p>Is there some other step I need to also do in order to satisfy dep-graph's needs?</p>",
        "id": 127617066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226084
    },
    {
        "content": "<p>(To provide a bit more context: the new enum <code>BindingForm</code> and struct <code>VarBindingForm</code> are the things attached to the <code>LocalDecl.is_user_variable</code>, and that is the only place they arise. You can sort of see how they are used in the diff if you look at the <code>if let</code> in src/librustc_mir/borrow_check/mod.rs)</p>",
        "id": 127617177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I did not expect that</p>",
        "id": 127617417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528226559
    },
    {
        "content": "<p>I could imagine some changes to incremental tests</p>",
        "id": 127617431,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528226591
    },
    {
        "content": "<p>maybe I'll just put aside the threading-down the HirId approach for now</p>",
        "id": 127617435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226607
    },
    {
        "content": "<p>but the ICEs surprise me</p>",
        "id": 127617441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528226619
    },
    {
        "content": "<p>there's only so many large swaths of infrastructure that I want to revise at once</p>",
        "id": 127617443,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226621
    },
    {
        "content": "<p>fair :)</p>",
        "id": 127617445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528226625
    },
    {
        "content": "<p>/me is no pcwalton</p>",
        "id": 127617448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226635
    },
    {
        "content": "<p>^ above is stated with utmost admiration, of course</p>",
        "id": 127617493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226666
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 127617497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528226670
    },
    {
        "content": "<blockquote>\n<p>Is there some other step I need to also do in order to satisfy dep-graph's needs?</p>\n</blockquote>\n<p>do I perhaps need to encapsulate the fields that use <code>HirId</code> inside of <code>ClearCrossCrate</code> instances in some manner?</p>",
        "id": 127621463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528231151
    },
    {
        "content": "<p>(I just happened to notice a NodeId under <code>mir::VisibilityScopeInfo</code> but I am inferring that <code>ClearCrossCrate&lt;IndexVec&lt;VisibilityScopeIndex, VisibilityScopeInfo&gt;&gt;</code> is what is making that not break...)</p>",
        "id": 127621560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528231242
    },
    {
        "content": "<p>hmm. That's .. plausible actually.</p>",
        "id": 127622953,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528233025
    },
    {
        "content": "<p>but I don't think you should have to</p>",
        "id": 127622959,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528233030
    },
    {
        "content": "<p>do you have a <code>RUST_BACKTRACE</code> of what is ICEing?</p>",
        "id": 127622965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528233044
    },
    {
        "content": "<p>(sorry had to go afk to deal with Logan; will try to reproduce now)</p>",
        "id": 127624290,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528234954
    },
    {
        "content": "<p>but the ICE's are of index out of bound errors</p>",
        "id": 127624357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528235060
    },
    {
        "content": "<p>I know that is not helpful. :)</p>",
        "id": 127624359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528235076
    },
    {
        "content": "<p>(its more that I had at first assumed that a backtrace would not be useful. But now I am rethinking that assumption.)</p>",
        "id": 127624363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528235098
    },
    {
        "content": "<p>I added a backtrace to the same gist. <a href=\"https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b\" target=\"_blank\" title=\"https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b\">https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b</a></p>",
        "id": 127625043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528236177
    },
    {
        "content": "<p>i guess this might be relevant <a href=\"https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b#file-c-backtrace-txt-L27\" target=\"_blank\" title=\"https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b#file-c-backtrace-txt-L27\">https://gist.github.com/pnkfelix/e3e27cdfa0f536e6334ffa5e1edd199b#file-c-backtrace-txt-L27</a></p>",
        "id": 127625053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528236203
    },
    {
        "content": "<p>but I need to hit the sack now.</p>",
        "id": 127625223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528236463
    },
    {
        "content": "<p>your hypothesis about the \"cross-crate wrapper\" type (I forgot the name) might be correct, I think</p>",
        "id": 127628331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528241337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can you think of any reason not to #[derive(Copy)]<code> on </code>mir::ClearCrossCrate&lt;T&gt;` ?</p>",
        "id": 127647032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528277004
    },
    {
        "content": "<p>no</p>",
        "id": 127647299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528277433
    },
    {
        "content": "<p>Okay. It looks like adding <code>mir::ClearCrossCrate</code> around the state I'm adding to <code>mir::LocalDecl.is_user_variable</code> fixes the dep-graph problems I was having. Yay!</p>",
        "id": 127647742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528278221
    },
    {
        "content": "<p>interesting</p>",
        "id": 127647946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528278583
    },
    {
        "content": "<p>makes sense though, from the backtraces</p>",
        "id": 127647947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528278592
    },
    {
        "content": "<p>I don't understand what's wrong with <code>HirId</code> though</p>",
        "id": 127648005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528278652
    },
    {
        "content": "<p>based on my cursory understanding of the overall picture</p>",
        "id": 127648008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528278660
    },
    {
        "content": "<p><code>DefId</code> itself <em>is</em> stable, right?</p>",
        "id": 127648015,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528278668
    },
    {
        "content": "<p>(\"stable\" in the sense that it can be safely embedded in MIR data structures)</p>",
        "id": 127648017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1528278682
    },
    {
        "content": "<blockquote>\n<p><code>DefId</code> itself <em>is</em> stable, right?</p>\n</blockquote>\n<p>yes</p>",
        "id": 127653495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528288178
    },
    {
        "content": "<blockquote>\n<p>I don't understand what's wrong with <code>HirId</code> though</p>\n</blockquote>\n<p>if I had to guess, there is some code that is assuming (without asserting) that the <code>HirId</code> is local to the current crate? I agree that it seems sorta like a bug to me</p>",
        "id": 127653504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528288200
    },
    {
        "content": "<p>or perhaps it's that you are indexing into things that are not in the metadata otherwise...?</p>",
        "id": 127653551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528288216
    },
    {
        "content": "<p>I'm not entirely sure</p>",
        "id": 127653558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528288227
    }
]