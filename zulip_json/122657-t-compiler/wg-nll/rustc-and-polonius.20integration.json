[
    {
        "content": "<p>one last thing</p>",
        "id": 126750783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651592
    },
    {
        "content": "<p>maybe short</p>",
        "id": 126750786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651595
    },
    {
        "content": "<p>maybe not</p>",
        "id": 126750787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651596
    },
    {
        "content": "<p>ok</p>",
        "id": 126750792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651608
    },
    {
        "content": "<p>I've been chugging along on integration</p>",
        "id": 126750793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651609
    },
    {
        "content": "<p>ah right</p>",
        "id": 126750796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651614
    },
    {
        "content": "<p>you mentioned that</p>",
        "id": 126750798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651616
    },
    {
        "content": "<p>But I'm worried my plan may be flawed</p>",
        "id": 126750806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651622
    },
    {
        "content": "<p>My understanding is that polonius is meant to, \"replace\", both solving the region constraints <em>and</em> solving the borrowck dataflow</p>",
        "id": 126750856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651649
    },
    {
        "content": "<p>so I had been thinking</p>",
        "id": 126750864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651669
    },
    {
        "content": "<p>(and doing)</p>",
        "id": 126750865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651672
    },
    {
        "content": "<p>1. refactor the code a bit so that those two stages can actually be swapped out and polonius swapped in</p>",
        "id": 126750868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651688
    },
    {
        "content": "<p>2. implement swapping in polonius</p>",
        "id": 126750870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651694
    },
    {
        "content": "<p>but while refactoring the code, I noted</p>",
        "id": 126750872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651701
    },
    {
        "content": "<p>the actual <em>data structure</em> for the borrowck dataflow</p>",
        "id": 126750882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651712
    },
    {
        "content": "<p>is the <code>struct FlowAtLocation</code></p>",
        "id": 126750898,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651746
    },
    {
        "content": "<p>which wants want the ...</p>",
        "id": 126750946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651770
    },
    {
        "content": "<p>well I'm working my way toward convincing myself this isn't a big problem</p>",
        "id": 126750950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651781
    },
    {
        "content": "<p>but essentially</p>",
        "id": 126750952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651786
    },
    {
        "content": "<p>(on a related note, while chatting with <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> on another topic, I was debating about how we might want to do the integration as well, in particular which relation we would want to use)</p>",
        "id": 126750960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651799
    },
    {
        "content": "<p>the <code>struct FlowAtLocation</code> carries both the solved dataflow results</p>",
        "id": 126750961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651802
    },
    {
        "content": "<p>as well as the original gen/kill sets used</p>",
        "id": 126750965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651812
    },
    {
        "content": "<p>So i've been wondering/worrying</p>",
        "id": 126750983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651845
    },
    {
        "content": "<p>whether I'm taking the wrong tack</p>",
        "id": 126750985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651850
    },
    {
        "content": "<p>hold on, I'm gonna branch a new topic ;)</p>",
        "id": 126750986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651851
    },
    {
        "content": "<p>meh never mind</p>",
        "id": 126750997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651872
    },
    {
        "content": "<p>you can rename this ne</p>",
        "id": 126750998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651872
    },
    {
        "content": "<p>carry on</p>",
        "id": 126751000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651874
    },
    {
        "content": "<p>ok, well,</p>",
        "id": 126751044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651886
    },
    {
        "content": "<p>somehow</p>",
        "id": 126751045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651887
    },
    {
        "content": "<p>oh, wow</p>",
        "id": 126751062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651925
    },
    {
        "content": "<p>I won the race</p>",
        "id": 126751063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651926
    },
    {
        "content": "<p>neat</p>",
        "id": 126751064,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651927
    },
    {
        "content": "<p>not sure how you did that</p>",
        "id": 126751067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651932
    },
    {
        "content": "<p>but i'm impressed</p>",
        "id": 126751070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651933
    },
    {
        "content": "<p>its very cool</p>",
        "id": 126751072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651937
    },
    {
        "content": "<p>I guess you can \"split off\"?</p>",
        "id": 126751074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651942
    },
    {
        "content": "<p>you ca choose</p>",
        "id": 126751079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651945
    },
    {
        "content": "<p>that <em>is</em> very cool</p>",
        "id": 126751084,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651954
    },
    {
        "content": "<p>&lt;3 Zulip</p>",
        "id": 126751085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651957
    },
    {
        "content": "<p>ok, so, anyway:</p>",
        "id": 126751087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651961
    },
    {
        "content": "<p>whether to rename a single msg, all of the msgs, or all of the msgs inclduin and after the selected one</p>",
        "id": 126751088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651961
    },
    {
        "content": "<p>okay so</p>",
        "id": 126751093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651966
    },
    {
        "content": "<p>the whole point of this plan</p>",
        "id": 126751102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651984
    },
    {
        "content": "<p>did I tell you what I did  before?</p>",
        "id": 126751103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651992
    },
    {
        "content": "<p>I <em>think</em> it's related</p>",
        "id": 126751105,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651995
    },
    {
        "content": "<p>would be to minimize how much code I have to rewrite/dup[licate</p>",
        "id": 126751108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651997
    },
    {
        "content": "<p>You did tell me but I didn't look at it carefully</p>",
        "id": 126751154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652005
    },
    {
        "content": "<p>maybe that was a big mistake</p>",
        "id": 126751159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652011
    },
    {
        "content": "<p>I sort of jumped in with just getting the basics (debug flag, process spawning) going</p>",
        "id": 126751162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652025
    },
    {
        "content": "<p>and figured the rest would come naturally</p>",
        "id": 126751163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652036
    },
    {
        "content": "<p>so what I did was to extend the \"meta results\" type (I forget what it's called)</p>",
        "id": 126751170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652056
    },
    {
        "content": "<p>to carry the <code>borrow_live_at</code> tuples</p>",
        "id": 126751176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652065
    },
    {
        "content": "<p>this btw is a rebased commit: <a href=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c\">link</a></p>",
        "id": 126751192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652097
    },
    {
        "content": "<p>I'm trying to find the part in question</p>",
        "id": 126751237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652126
    },
    {
        "content": "<p>I guess the heart  of my question: Is it sensible to try to convert the output of polonius into an instance of a <code>struct FlowAtLocation</code></p>",
        "id": 126751244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652128
    },
    {
        "content": "<p>ah, <code>Flows</code> is the type I meant</p>",
        "id": 126751260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652153
    },
    {
        "content": "<p>I see</p>",
        "id": 126751264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652156
    },
    {
        "content": "<p>I did not do that</p>",
        "id": 126751265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652157
    },
    {
        "content": "<p>instead, I encapsulated (some of this may have landed, I forget) the access to the <code>borrows</code> field</p>",
        "id": 126751269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652166
    },
    {
        "content": "<p>ah i see</p>",
        "id": 126751273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652177
    },
    {
        "content": "<p>we basically only (need to) ask one question: what borrows are in scope at the location L?</p>",
        "id": 126751276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652181
    },
    {
        "content": "<p>you <em>removed</em> the <code>borrows: FlowAtLocation</code></p>",
        "id": 126751280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652186
    },
    {
        "content": "<p>and that is readily accessible from the tuples</p>",
        "id": 126751283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652186
    },
    {
        "content": "<p>yep</p>",
        "id": 126751285,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652189
    },
    {
        "content": "<p>okay</p>",
        "id": 126751287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652193
    },
    {
        "content": "<p>you may not want to do that :)</p>",
        "id": 126751288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652194
    },
    {
        "content": "<p>maybe the answer here</p>",
        "id": 126751289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652196
    },
    {
        "content": "<p>is to abstract over the two</p>",
        "id": 126751291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652200
    },
    {
        "content": "<p>via a trait</p>",
        "id": 126751292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652201
    },
    {
        "content": "<p>right</p>",
        "id": 126751293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652203
    },
    {
        "content": "<p>okay</p>",
        "id": 126751294,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652205
    },
    {
        "content": "<p>well, or a bool</p>",
        "id": 126751297,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652208
    },
    {
        "content": "<p>but yes</p>",
        "id": 126751298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652210
    },
    {
        "content": "<p>somehow</p>",
        "id": 126751299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652211
    },
    {
        "content": "<p>well</p>",
        "id": 126751301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652215
    },
    {
        "content": "<p>my hope</p>",
        "id": 126751302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652217
    },
    {
        "content": "<p>one tricky bit</p>",
        "id": 126751304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652219
    },
    {
        "content": "<p>that is not <em>too</em> tricky</p>",
        "id": 126751305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652223
    },
    {
        "content": "<p>is that I don't want a bunch of duplicated logic</p>",
        "id": 126751307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652227
    },
    {
        "content": "<p>is the generator code</p>",
        "id": 126751308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652228
    },
    {
        "content": "<p>in the borrow-checker</p>",
        "id": 126751309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652231
    },
    {
        "content": "<p>right, you shouldn't need that</p>",
        "id": 126751345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652243
    },
    {
        "content": "<p>what I meant is</p>",
        "id": 126751348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652245
    },
    {
        "content": "<p>a bool in <code>Flows</code></p>",
        "id": 126751353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652248
    },
    {
        "content": "<p>and basically a method like <code>borrows_at_location(...)</code></p>",
        "id": 126751357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652254
    },
    {
        "content": "<p>hmm about which thing to consult, I see</p>",
        "id": 126751359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652258
    },
    {
        "content": "<p>yes okay</p>",
        "id": 126751361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652263
    },
    {
        "content": "<p>actually you wuld probably want it o track the current location then</p>",
        "id": 126751362,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652264
    },
    {
        "content": "<p>(right now I think it doesn't)</p>",
        "id": 126751366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652272
    },
    {
        "content": "<p>I considered going that way but didn't</p>",
        "id": 126751367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652276
    },
    {
        "content": "<p>alright, that's enough for me to jump back in I think</p>",
        "id": 126751369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652282
    },
    {
        "content": "<p>I at least don't feel like I'm totally off base.</p>",
        "id": 126751371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652290
    },
    {
        "content": "<p>does <a href=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-5b4d01d26caf43976125ba0f877e78c0R613\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-5b4d01d26caf43976125ba0f877e78c0R613\">this link</a> work for you?</p>",
        "id": 126751372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652290
    },
    {
        "content": "<p>I just wanted to show you one bit</p>",
        "id": 126751373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652294
    },
    {
        "content": "<p>yes it does</p>",
        "id": 126751379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652302
    },
    {
        "content": "<p>there are two bits of code that call <code>with_outgoing_borrows</code></p>",
        "id": 126751386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652307
    },
    {
        "content": "<p>I rewrote them in terms of finding a point</p>",
        "id": 126751391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652318
    },
    {
        "content": "<p>which anyway I think is clearer</p>",
        "id": 126751392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652322
    },
    {
        "content": "<p>in the one case, it's a <code>Yield</code> terminator: and you basically want the borrows still live when we resume</p>",
        "id": 126751396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652333
    },
    {
        "content": "<p>in the other, it's a <code>Return</code> terminator, and the borrows live on entry suffice</p>",
        "id": 126751400,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652343
    },
    {
        "content": "<p>I don't know why it was using <code>with_outgoing_borrows</code> anyway except to be less efficient</p>",
        "id": 126751404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652353
    },
    {
        "content": "<p>I think ariel added that</p>",
        "id": 126751406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652361
    },
    {
        "content": "<p>which means there was probably a good reason</p>",
        "id": 126751445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652369
    },
    {
        "content": "<p>...</p>",
        "id": 126751446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652371
    },
    {
        "content": "<p>let me look</p>",
        "id": 126751450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652374
    },
    {
        "content": "<p>I can't imagine what it would be, but maybe. I think it's actively <em>wrong</em> in the new analysis tho</p>",
        "id": 126751453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652386
    },
    {
        "content": "<p>I mean...there is no point after the return anyway</p>",
        "id": 126751455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652393
    },
    {
        "content": "<p>but if there <em>was</em>, then e.g. the slot <code>_0</code> would be dead there</p>",
        "id": 126751460,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652399
    },
    {
        "content": "<p>and we don't want that</p>",
        "id": 126751461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652402
    },
    {
        "content": "<p>anyway, it doesn't matter</p>",
        "id": 126751463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652405
    },
    {
        "content": "<p>you'll see, I just wanted to answer that question</p>",
        "id": 126751465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652411
    },
    {
        "content": "<p>before it came up</p>",
        "id": 126751467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652412
    },
    {
        "content": "<p>I have to run now too</p>",
        "id": 126751470,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652416
    },
    {
        "content": "<p>but I agree with your assessment that if @arielb1 did it, there is prob a reason</p>",
        "id": 126751482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652431
    },
    {
        "content": "<p>ok</p>",
        "id": 126751493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652473
    },
    {
        "content": "<p>gotta run, ttyl</p>",
        "id": 126751502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652482
    },
    {
        "content": "<p>(ah, the specific case of generators was Zoxc)</p>",
        "id": 126751578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652576
    },
    {
        "content": "<p><a href=\"https://github.com/nikomatsakis/rust/commit/55c6c88782cfcce9b593c431200dad5f05bd9125\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rust/commit/55c6c88782cfcce9b593c431200dad5f05bd9125\">https://github.com/nikomatsakis/rust/commit/55c6c88782cfcce9b593c431200dad5f05bd9125</a></p>",
        "id": 126751587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652587
    },
    {
        "content": "<p>\"across yield\" may be the relevant thing there ...? They may have thought using the entry set would not suffice?</p>",
        "id": 126751641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652633
    },
    {
        "content": "<p>(now I'm just trying to read minds... via git logs ... not a good sign.)</p>",
        "id": 126751648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652651
    },
    {
        "content": "<p>for <em>yields</em> it makes sense</p>",
        "id": 126751661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652678
    },
    {
        "content": "<p>and in that case I used the resume point</p>",
        "id": 126751667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652688
    },
    {
        "content": "<p>oh okay, there's the other with Resume/Return/GeneratorDrop</p>",
        "id": 126751673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652718
    },
    {
        "content": "<p>that's on <a href=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-5b4d01d26caf43976125ba0f877e78c0R598\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-5b4d01d26caf43976125ba0f877e78c0R598\">this line</a></p>",
        "id": 126751677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526652721
    },
    {
        "content": "<p>and that's this: <a href=\"https://github.com/nikomatsakis/rust/commit/af8c2339cfb26363610899e6bffbd1913e83db08\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rust/commit/af8c2339cfb26363610899e6bffbd1913e83db08\">https://github.com/nikomatsakis/rust/commit/af8c2339cfb26363610899e6bffbd1913e83db08</a></p>",
        "id": 126751731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652745
    },
    {
        "content": "<p>in terms of what commit  added it</p>",
        "id": 126751739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652753
    },
    {
        "content": "<p>(right?)</p>",
        "id": 126751752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652773
    },
    {
        "content": "<p>okay really gotta go, shouldn't have taken the bait! :)</p>",
        "id": 126751792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526652811
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span>,  <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>, <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span>, <span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> or anyone else — are any of you interested in working on the rustc polonius I described? I think <em>somebody</em> should be on this. <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> you mentioned having free time on Friday, might be a good fit for that time... (That would also give a bit of time for <span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span>'s PRs to land...)</p>",
        "id": 126987204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097148
    },
    {
        "content": "<p>otherwise, I think we should probably put more energy into the <a href=\"#narrow/stream/122657-wg-nll/subject/diagnostics\" title=\"#narrow/stream/122657-wg-nll/subject/diagnostics\">diagnostics</a>, but we'll have to open more issues there</p>",
        "id": 126987221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097178
    },
    {
        "content": "<p>yep, I have the entire Friday for rust work</p>",
        "id": 126987228,
        "sender_full_name": "qmx",
        "timestamp": 1527097193
    },
    {
        "content": "<p>(and potentially the weekend also)</p>",
        "id": 126987232,
        "sender_full_name": "qmx",
        "timestamp": 1527097200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I can also help here</p>",
        "id": 126987295,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527097249
    },
    {
        "content": "<p>have plenty of time to do rustc</p>",
        "id": 126987298,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527097257
    },
    {
        "content": "<p>it's going to be tougher for me — I'm finishing the frontend now, and leaving for Rustfest on Friday</p>",
        "id": 126987315,
        "sender_full_name": "lqd",
        "timestamp": 1527097284
    },
    {
        "content": "<p>I guess we should break it into steps</p>",
        "id": 126987316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097288
    },
    {
        "content": "<p>I think I mentioned that we could start just by breaking out the <code>AllFacts</code> and having rustc generate that</p>",
        "id": 126987324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097301
    },
    {
        "content": "<p>we could even pair with <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> if needed</p>",
        "id": 126987328,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527097306
    },
    {
        "content": "<p>(right now, they each have their own copy of that same data structure)</p>",
        "id": 126987329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097308
    },
    {
        "content": "<p>I'd be happy to be around on Friday to consult, particualrly in the morning hours</p>",
        "id": 126987382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097333
    },
    {
        "content": "<p>this link describes the expected crate organization I believe ? <a href=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be#:uid=513600694358508882742191&amp;h2=General-overview\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be#:uid=513600694358508882742191&amp;h2=General-overview\">https://paper.dropbox.com/doc/Non-lexical-lifetimes-NLL-Triage-Em2cJrvxQMMFWLE7lE5Be#:uid=513600694358508882742191&amp;h2=General-overview</a>:</p>",
        "id": 126987388,
        "sender_full_name": "lqd",
        "timestamp": 1527097346
    },
    {
        "content": "<p>err, apart from it being the wrong paragraph :3</p>",
        "id": 126987406,
        "sender_full_name": "lqd",
        "timestamp": 1527097379
    },
    {
        "content": "<p>right so I guess the very first step is breaking out a <code>polonius-engine</code> crate that contains <code>AllFacts</code> and it's supporting things</p>",
        "id": 126987747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097779
    },
    {
        "content": "<p>maybe we should open up an issue on polonius for tracking this</p>",
        "id": 126987751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097784
    },
    {
        "content": "<p>oh, I am reminded that I wanted help landing <a href=\"https://github.com/rust-lang/rust/pull/50938\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/50938\">https://github.com/rust-lang/rust/pull/50938</a></p>",
        "id": 126987858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527097867
    },
    {
        "content": "<p>Niko, can I help you in some way with the removal of Location:All?</p>",
        "id": 126987890,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527097914
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang-nursery/polonius/issues/44\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/44\">https://github.com/rust-lang-nursery/polonius/issues/44</a> which contains the rustc-polonius integration steps</p>",
        "id": 126988013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527098040
    },
    {
        "content": "<p>broken down very fine-grain</p>",
        "id": 126988031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527098042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you could :) I'll open a new topic :)</p>",
        "id": 126988062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527098059
    },
    {
        "content": "<p>I'll probably have time to work on splitting Polonius up before Friday, assuming <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span>  doesn't mind =)</p>",
        "id": 126988101,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527098111
    },
    {
        "content": "<p>at least the first task can be completed before my refactor lands</p>",
        "id": 126988107,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527098121
    },
    {
        "content": "<p>sounds good</p>",
        "id": 126988108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527098124
    },
    {
        "content": "<p>in my ideal world, we'd actually get the first 1 or 2 done before Friday</p>",
        "id": 126988118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527098140
    },
    {
        "content": "<p>since they are minor</p>",
        "id": 126988121,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527098147
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span> should definitely be doable. Hopefully I'll get to it either tonight or tomorrow</p>",
        "id": 126988178,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527098180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> I don't mind :)</p>",
        "id": 126988313,
        "sender_full_name": "qmx",
        "timestamp": 1527098322
    },
    {
        "content": "<p>cool, I'll try to get a patch out either tonight or tomorrow then. I'll also have a lot of time to hack on rustc stuff over the weekend, we get Monday off =)</p>",
        "id": 126988447,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527098430
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> i'm guessing you want polonius to generate a library on top of a binary?</p>",
        "id": 126989003,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527099038
    },
    {
        "content": "<p>I was proposing that we have a shared subcrate called <code>polonius-engine</code> which will be that library</p>",
        "id": 126989034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527099089
    },
    {
        "content": "<p>(obligatory <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span> comment)</p>",
        "id": 126990360,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527100951
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/polonius/pull/46\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/46\">https://github.com/rust-lang-nursery/polonius/pull/46</a></p>",
        "id": 127010236,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527131957
    },
    {
        "content": "<p>Depending on what order this lands in, it'll invalidate all other PRs because I moved things so that the repo could become a cargo workspace</p>",
        "id": 127010241,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527131993
    },
    {
        "content": "<p>so either <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  or myself is going to have some cleanup to do =)</p>",
        "id": 127010554,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527132607
    },
    {
        "content": "<p><a href=\"https://www.youtube.com/watch?v=VQ1xHmQgXDM\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=VQ1xHmQgXDM\">https://www.youtube.com/watch?v=VQ1xHmQgXDM</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"VQ1xHmQgXDM\" href=\"https://www.youtube.com/watch?v=VQ1xHmQgXDM\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=VQ1xHmQgXDM\"><img src=\"https://i.ytimg.com/vi/VQ1xHmQgXDM/default.jpg\"></a></div>",
        "id": 127010622,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527132744
    },
    {
        "content": "<p>lol<br>\nIt's not a huge deal either way, I think <code>git</code> should be able to figure out some of it (if not all of it) since most things are just file renames</p>",
        "id": 127010652,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527132843
    },
    {
        "content": "<p>yeah I thought this reorg would impact my PRs as I also switched to a cargo workspace <span class=\"emoji emoji-1f642\" title=\"simple smile\">:simple_smile:</span> I thought we would leave the majority of the crate as-is — just moving AllFacts — to a structure similar to chalk's</p>",
        "id": 127014680,
        "sender_full_name": "lqd",
        "timestamp": 1527141730
    },
    {
        "content": "<p>Indeed, that's what my PR does. I believe the eventual goal is to move all the computation into polonius-engine, but that's somewhat blocked on <span class=\"user-mention\" data-user-id=\"116609\">@Frank McSherry</span>  getting Datafrog licensed, transferred to rust-lang-nursery, and up on <code>crates.io</code> to my knowledge =P. We took slightly different approaches to moving things to workspaces (I moved the frontend into its own folder, looks like you just added a <code>[workspace]</code> tag. The merge should be relatively painless though.</p>",
        "id": 127014841,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527142201
    },
    {
        "content": "<p>I'm not sure which PR makes the most sense to land first, but either way I'm willing to do the rebase. My impression is that you'll have time to get to it first though, so perhaps merging my PR and then yours, with you doing the rebase, makes more sense as that'll get work that depends on either unblocked faster. If you don't want to deal with the rebase, I would say merge your PR and then I'll rebase mine (probably around 7-8PM PDT) to include your changes</p>",
        "id": 127014941,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527142341
    },
    {
        "content": "<p>or I could just not move everything. If that's the route we want to go I can probably get that committed while waiting for my eggs to fry tomorrow morning ;)</p>",
        "id": 127014997,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527142460
    },
    {
        "content": "<p><span class=\"emoji emoji-1f642\" title=\"simple smile\">:simple_smile:</span> — It's fine, whichever merges first, I don't mind</p>",
        "id": 127015011,
        "sender_full_name": "lqd",
        "timestamp": 1527142535
    },
    {
        "content": "<p>I guess it'll be up to the gods <em>cough</em> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <em>cough</em> then</p>",
        "id": 127015051,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527142577
    },
    {
        "content": "<p>(it looks you need to fix the tests TravIs is unhappy)</p>",
        "id": 127015052,
        "sender_full_name": "lqd",
        "timestamp": 1527142602
    },
    {
        "content": "<p>haha <span class=\"emoji emoji-1f642\" title=\"simple smile\">:simple_smile:</span></p>",
        "id": 127015056,
        "sender_full_name": "lqd",
        "timestamp": 1527142625
    },
    {
        "content": "<p>oh I probably completely broke travis didn't I</p>",
        "id": 127015061,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527142637
    },
    {
        "content": "<p>probably just looking at the wrong folder to find the facts</p>",
        "id": 127015066,
        "sender_full_name": "lqd",
        "timestamp": 1527142667
    },
    {
        "content": "<p>yep, I broke all 2 tests</p>",
        "id": 127015068,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527142680
    },
    {
        "content": "<p>I redid my PR so that the repo structure ends up more like <code>chalk</code>'s. It should pass tests now, and I won't be breaking git history as badly</p>",
        "id": 127015605,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527143867
    },
    {
        "content": "<p>I think you have some leftover code in there ? I see some timely analysis</p>",
        "id": 127015708,
        "sender_full_name": "lqd",
        "timestamp": 1527144111
    },
    {
        "content": "<p>oh god that got picked up didn't it</p>",
        "id": 127015802,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527144347
    },
    {
        "content": "<p>that was me playing around with timely a few weeks ago and I guess it was left sitting in my tree</p>",
        "id": 127015842,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527144376
    },
    {
        "content": "<p>/me really needs to stop being so sloppy with patches...</p>",
        "id": 127015843,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527144386
    },
    {
        "content": "<p>I think I accidentally downgraded <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span> too, I'll fix those</p>",
        "id": 127015844,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527144407
    },
    {
        "content": "<p>should be fixed now. I really need to get in the habit of _carefully_ reviewing my own patches before sending them upstream</p>",
        "id": 127015989,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527144774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116106\">@Reed Koser</span> ok merged — I changed authors of both projects to \"The Rust Developers\", but maybe it should be \"The Polonius Developers\"...?</p>",
        "id": 127020833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154389
    },
    {
        "content": "<p>if we <em>really</em> wanted to go crazy with crates, we could make that <code>polonius-engine</code> crate be <code>polonius-facts</code> — then we could start in right now on splitting out the datafrog code into <code>polonius-engine</code>, which seems interesting (and rustc could just depend on <code>polonius-facts</code>)</p>",
        "id": 127020844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154440
    },
    {
        "content": "<p>but I don't know if that's worth it :)</p>",
        "id": 127020883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154448
    },
    {
        "content": "<p>well, alternatively, we can just try rewriting the datafrog code to be generic</p>",
        "id": 127020887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154461
    },
    {
        "content": "<p>I had put <code>authors = [\"Rust Compiler Team\", \"Polonius developers\"]</code> in the polonius-parser crate, I hope that's ok</p>",
        "id": 127021059,
        "sender_full_name": "lqd",
        "timestamp": 1527154787
    },
    {
        "content": "<p>(very similar to Chalk in any case)</p>",
        "id": 127021111,
        "sender_full_name": "lqd",
        "timestamp": 1527154812
    },
    {
        "content": "<p>yeah, seems also ok</p>",
        "id": 127021168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154939
    },
    {
        "content": "<p>it's not that important in the end :)</p>",
        "id": 127021169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154944
    },
    {
        "content": "<p>I guess it depends on whether we consider the polonius devs a distinct set from rust devs :)</p>",
        "id": 127021171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154954
    },
    {
        "content": "<p>so I missed around a bit with making stuff generic</p>",
        "id": 127021174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154971
    },
    {
        "content": "<p>it is pretty easy to do but we have to do a bit of cleanup:</p>",
        "id": 127021177,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154978
    },
    {
        "content": "<p>separating out the <code>dump</code> code for example — or else doing a more involved bit of genericity</p>",
        "id": 127021187,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527154994
    },
    {
        "content": "<p>I..oh I have a few more minutes, maybe I'll just keep hacking on this for fun</p>",
        "id": 127021195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155012
    },
    {
        "content": "<p>/me should probably be doing something else :)</p>",
        "id": 127021197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155028
    },
    {
        "content": "<p>nah, I don't have time to do this properly, i'll just stop; I'm not sure where <code>Dump</code> ought to go</p>",
        "id": 127021409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155433
    },
    {
        "content": "<p><a href=\"https://github.com/nikomatsakis/borrow-check/tree/generic-over-r-l-p\" target=\"_blank\" title=\"https://github.com/nikomatsakis/borrow-check/tree/generic-over-r-l-p\">https://github.com/nikomatsakis/borrow-check/tree/generic-over-r-l-p</a> in case you're curious</p>",
        "id": 127021418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155482
    },
    {
        "content": "<p>mostly just works fine</p>",
        "id": 127021422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155517
    },
    {
        "content": "<p>I think I would like to introduce a </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Atoms</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">type</span> <span class=\"nc\">Region</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">type</span> <span class=\"nc\">Loan</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">type</span> <span class=\"nc\">Point</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>and maybe have  that trait also contain enough stuff so that the dump code can operate</p>",
        "id": 127021470,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155578
    },
    {
        "content": "<p>in particular, the \"untern\" logic</p>",
        "id": 127021473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155584
    },
    {
        "content": "<p>seems like rustc would also want to be able to dump its results? maybe? or maybe not...</p>",
        "id": 127021479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155603
    },
    {
        "content": "<p>before I was integrating them into mir-dump, so maybe we should just pull the dump code out into polonius and make it not be generic</p>",
        "id": 127021489,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155618
    },
    {
        "content": "<p>(ok, that works)</p>",
        "id": 127021672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527155977
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> are you not a member of the org...?</p>",
        "id": 127021734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527156068
    },
    {
        "content": "<p>no, just an innocent bystander :3</p>",
        "id": 127021738,
        "sender_full_name": "lqd",
        "timestamp": 1527156082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> ok I think I will merge <a href=\"https://github.com/rust-lang-nursery/polonius/pull/47\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/47\">https://github.com/rust-lang-nursery/polonius/pull/47</a> then (I removed the stats option)</p>",
        "id": 127026254,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527164545
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span> (and then I'll rebase the frontend again :p)</p>",
        "id": 127026289,
        "sender_full_name": "lqd",
        "timestamp": 1527164621
    },
    {
        "content": "<p>hmm... how do you include external crates into rustc?</p>",
        "id": 127026370,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527164725
    },
    {
        "content": "<p>should we include them as git submodules?</p>",
        "id": 127026378,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527164744
    },
    {
        "content": "<p>wait nvm, we can definitely just import the crate via cargo</p>",
        "id": 127026558,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527165050
    },
    {
        "content": "<p>but i don't think polonius is published on <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> yet, so we'll have to use it as a git dependency</p>",
        "id": 127026570,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1527165074
    },
    {
        "content": "<blockquote>\n<p>but i don't think polonius is published on <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> yet, so we'll have to use it as a git dependency</p>\n</blockquote>\n<p>now that we have a polonius-engine we can push to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a></p>",
        "id": 127027360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527166372
    },
    {
        "content": "<p>No strong opinions on the authorship here, Rust Project and Polonius developers seems to make sense (since I don't think everyone that hacks on Polonius also hacks on rustc? I could be wrong though)</p>",
        "id": 127032593,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527173814
    },
    {
        "content": "<p>I view them both as part of the Rust umbrella :) but yeah</p>",
        "id": 127032626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527173877
    },
    {
        "content": "<p>in general I want to move towards rustc as a kind of a \"federation\" of projects in any case</p>",
        "id": 127032671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527173890
    },
    {
        "content": "<p>so e.g. chalk, polonius would be a part of rustc of course but carry their own distinct identities</p>",
        "id": 127032692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527173920
    },
    {
        "content": "<p>(as I understand it, this is sort of how servo development works)</p>",
        "id": 127032717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527173972
    },
    {
        "content": "<blockquote>\n<p>should be fixed now. I really need to get in the habit of _carefully_ reviewing my own patches before sending them upstream</p>\n</blockquote>\n<p>I use <code>git add -pu</code> to review before ever committing</p>",
        "id": 127033444,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527174952
    },
    {
        "content": "<p>Yeah, I have the tools. It's jus a matter of developing the muscle memory and mental fortitude to review my own patches without having my eyes glaze over =P</p>",
        "id": 127033598,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527175126
    },
    {
        "content": "<p>I've been writing code for 5 or 6 years, but it's only in the last 12 months or so that I've started collaborating on larger projects. Part of the reason I started working on Rust back in January was just to try and keep those skills sharp</p>",
        "id": 127033696,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527175234
    },
    {
        "content": "<p>Unfortunately the CS program I attend (and probably most others, at least in the US) tend to focus more on developing individual skill and not on how to be an effective member of a large software organization</p>",
        "id": 127033733,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527175295
    },
    {
        "content": "<p>I guess s/keep skills sharp/develop them at all honestly</p>",
        "id": 127033789,
        "sender_full_name": "Reed Koser",
        "timestamp": 1527175335
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> you were asking about tomorrow =) we have <a href=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/facts.rs\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/facts.rs\">extracted the <code>AllFacts</code> out now</a> into a subcrate <a href=\"https://github.com/rust-lang-nursery/polonius/tree/master/polonius-engine\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/tree/master/polonius-engine\">polonius-engine</a></p>",
        "id": 127035763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527177980
    },
    {
        "content": "<p>I think the next step was to make rustc use it</p>",
        "id": 127035767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527177993
    },
    {
        "content": "<p>currently our fact definition <a href=\"https://github.com/rust-lang/rust/blob/d022dd48cceaceffa931f87490c7921aa3c3f8b1/src/librustc_mir/borrow_check/nll/facts.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/d022dd48cceaceffa931f87490c7921aa3c3f8b1/src/librustc_mir/borrow_check/nll/facts.rs\">is here</a></p>",
        "id": 127035776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178025
    },
    {
        "content": "<p>we should be able to just add <code>polonius-engine</code> as a pre-req</p>",
        "id": 127035784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178045
    },
    {
        "content": "<p>this could be done today</p>",
        "id": 127035785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178047
    },
    {
        "content": "<p>should publish <code>polonius_engine</code> to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>...</p>",
        "id": 127035787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178057
    },
    {
        "content": "<p>the crate is named with dashes right?</p>",
        "id": 127035849,
        "sender_full_name": "qmx",
        "timestamp": 1527178094
    },
    {
        "content": "<p>/me always forgets the naming rules</p>",
        "id": 127035851,
        "sender_full_name": "qmx",
        "timestamp": 1527178102
    },
    {
        "content": "<p>heh :)</p>",
        "id": 127035853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178107
    },
    {
        "content": "<p>crate names with dashes</p>",
        "id": 127035857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178115
    },
    {
        "content": "<p>is my preference :)</p>",
        "id": 127035859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178119
    },
    {
        "content": "<p>though my true preference is to make <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> translate them silently</p>",
        "id": 127035866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178125
    },
    {
        "content": "<p>i.e., you give either <code>-</code> or <code>_</code>, you see <code>-</code></p>",
        "id": 127035870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178135
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/api-guidelines/issues/29\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/api-guidelines/issues/29\">https://github.com/rust-lang-nursery/api-guidelines/issues/29</a></p>",
        "id": 127035872,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178139
    },
    {
        "content": "<p>mandatory would be even better</p>",
        "id": 127035874,
        "sender_full_name": "qmx",
        "timestamp": 1527178142
    },
    {
        "content": "<p>I just don't want to have to think about it ever</p>",
        "id": 127035882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178150
    },
    {
        "content": "<p>but I want to see <code>-</code> :)</p>",
        "id": 127035884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178153
    },
    {
        "content": "<p>anyway, whatever..</p>",
        "id": 127035887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178157
    },
    {
        "content": "<p><code>cargo add</code> translates them</p>",
        "id": 127035888,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178162
    },
    {
        "content": "<p>but i agree with dashes</p>",
        "id": 127035893,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178175
    },
    {
        "content": "<p>there are some fights in which I am (thanfully) a bystander</p>",
        "id": 127035954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178225
    },
    {
        "content": "<p>and this is one :)</p>",
        "id": 127035963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178241
    },
    {
        "content": "<p>for now</p>",
        "id": 127035964,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178242
    },
    {
        "content": "<p>I forget what we decided re: authors</p>",
        "id": 127036036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178375
    },
    {
        "content": "<p>authors = [\"The Rust Project Developers\", \"Polonius Developers\"]</p>",
        "id": 127036042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178384
    },
    {
        "content": "<p>?</p>",
        "id": 127036045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178387
    },
    {
        "content": "<p>personally I feel polonius is a piece of the Rust project, so those are redundant, but it seems ok :)</p>",
        "id": 127036047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178413
    },
    {
        "content": "<p>(I was gonna push this crate to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>)</p>",
        "id": 127036051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178429
    },
    {
        "content": "<p>push it</p>",
        "id": 127036054,
        "sender_full_name": "qmx",
        "timestamp": 1527178434
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> about the integration let me know how can I help</p>",
        "id": 127036126,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527178538
    },
    {
        "content": "<p>or if I can help <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> in any way</p>",
        "id": 127036127,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527178556
    },
    {
        "content": "<p>I will push both polonius (executable) and polonius-engine (library)</p>",
        "id": 127036128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178558
    },
    {
        "content": "<p>the latter just to save the name :)</p>",
        "id": 127036130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178560
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> while you are doing housekeeping, you should add the Polonus quote and a nice Wikipedia link to the README <span class=\"emoji emoji-1f63b\" title=\"heart eyes cat\">:heart_eyes_cat:</span></p>",
        "id": 127036262,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178766
    },
    {
        "content": "<p>I kinda wanted people to google it for themselves :)</p>",
        "id": 127036334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178841
    },
    {
        "content": "<p>but I guess I wouldn't turn away a PR ;)</p>",
        "id": 127036335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178850
    },
    {
        "content": "<p>Subtle hint noted!</p>",
        "id": 127036341,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178866
    },
    {
        "content": "<p>oh, we can't publish <code>polonius</code> until <code>datafrog</code> is published</p>",
        "id": 127036343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178867
    },
    {
        "content": "<p>but <code>polonius-engine</code> is fine</p>",
        "id": 127036345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178873
    },
    {
        "content": "<p>Also, this thread title is \"polonus\" and you just said \"polonius\". May be worth 2x checking?</p>",
        "id": 127036356,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178911
    },
    {
        "content": "<p><a href=\"https://crates.io/crates/polonius-engine\" target=\"_blank\" title=\"https://crates.io/crates/polonius-engine\">https://crates.io/crates/polonius-engine</a></p>",
        "id": 127036402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178949
    },
    {
        "content": "<p>it is polonius</p>",
        "id": 127036405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527178962
    },
    {
        "content": "<p>whew</p>",
        "id": 127036407,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527178971
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can't you just publish datafrog and put <span class=\"user-mention\" data-user-id=\"116609\">@Frank McSherry</span> as an owner also?</p>",
        "id": 127036415,
        "sender_full_name": "qmx",
        "timestamp": 1527178991
    },
    {
        "content": "<p>so we save the name</p>",
        "id": 127036417,
        "sender_full_name": "qmx",
        "timestamp": 1527178997
    },
    {
        "content": "<p>I suppose I could :)</p>",
        "id": 127036418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179001
    },
    {
        "content": "<p>or I could just fork it or something</p>",
        "id": 127036421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179013
    },
    {
        "content": "<p>he seemed to indicate that he wants to transfer it over anyway</p>",
        "id": 127036424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179020
    },
    {
        "content": "<p>I could also make a dummy project</p>",
        "id": 127036427,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179040
    },
    {
        "content": "<p>to save the name ;)</p>",
        "id": 127036441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179043
    },
    {
        "content": "<p><code>sed -i /-engine// Cargo.toml &amp;&amp; cargo publish</code></p>",
        "id": 127036609,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527179307
    },
    {
        "content": "<p>indeed</p>",
        "id": 127036676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> so if you wanted to port rustc in prep for tomorrow I'd be in favor of that</p>",
        "id": 127036677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179454
    },
    {
        "content": "<p>do you know what I mean by that?</p>",
        "id": 127036678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179461
    },
    {
        "content": "<p>I guess ...</p>",
        "id": 127036695,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527179496
    },
    {
        "content": "<p>basically <a href=\"#narrow/stream/122657-wg-nll/subject/rustc-and-polonus.20integration/near/127035763\" title=\"#narrow/stream/122657-wg-nll/subject/rustc-and-polonus.20integration/near/127035763\">what I wrote here</a></p>",
        "id": 127036753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179559
    },
    {
        "content": "<p>for some reason the link does not navigate for me</p>",
        "id": 127036775,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527179596
    },
    {
        "content": "<p>yeah, link fail</p>",
        "id": 127036788,
        "sender_full_name": "qmx",
        "timestamp": 1527179624
    },
    {
        "content": "<p><a href=\"#narrow/stream/122657-wg-nll/subject/rustc-and-polonus.20integration/near/127035763\" title=\"#narrow/stream/122657-wg-nll/subject/rustc-and-polonus.20integration/near/127035763\">https://rust-lang.zulipchat.com/#narrow/stream/122657-wg-nll/subject/rustc-and-polonus.20integration/near/127035763</a></p>",
        "id": 127036846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179668
    },
    {
        "content": "<p>curious</p>",
        "id": 127036851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179673
    },
    {
        "content": "<p>at 12:06pm :)</p>",
        "id": 127036861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527179688
    },
    {
        "content": "<p>the links does not work for me</p>",
        "id": 127036942,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527179773
    },
    {
        "content": "<p>any of them</p>",
        "id": 127036943,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527179775
    },
    {
        "content": "<p>it may be a Firefox plugin or something</p>",
        "id": 127036948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527179784
    },
    {
        "content": "<p>anyway ... will tackle that</p>",
        "id": 127036976,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527179860
    },
    {
        "content": "<p>yea, link does not work</p>",
        "id": 127037047,
        "sender_full_name": "qmx",
        "timestamp": 1527179956
    },
    {
        "content": "<p>huh, that's a big minus for Zulip :)</p>",
        "id": 127037101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527180005
    },
    {
        "content": "<p>and also the time for me is 1.06pm :P</p>",
        "id": 127037114,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527180031
    },
    {
        "content": "<p>clearly it should auto-translate things that look like times between timezones</p>",
        "id": 127037135,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527180076
    },
    {
        "content": "<p>hehehe</p>",
        "id": 127037144,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527180098
    },
    {
        "content": "<p><a href=\"https://crates.io/crates/datafrog\" target=\"_blank\" title=\"https://crates.io/crates/datafrog\">https://crates.io/crates/datafrog</a></p>",
        "id": 127041377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527185650
    },
    {
        "content": "<p>it's a thing :)</p>",
        "id": 127041381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527185653
    },
    {
        "content": "<p>as is <a href=\"https://crates.io/crates/polonius\" target=\"_blank\" title=\"https://crates.io/crates/polonius\">https://crates.io/crates/polonius</a></p>",
        "id": 127041510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527185809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> asked me over privmsg:</p>\n<blockquote>\n<p>is rustc currently using a thing similar to IntererTables and that stuff in Polonius?</p>\n</blockquote>\n<p>you shouldn't need that stuff</p>",
        "id": 127042037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527186412
    },
    {
        "content": "<p>or maybe I'm not sure 100% sure what you mean</p>",
        "id": 127042047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527186424
    },
    {
        "content": "<p>but the goal of that stuff was to convert strings into integers</p>",
        "id": 127042053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527186431
    },
    {
        "content": "<p>but in rustc the types are already small integers...</p>",
        "id": 127042056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527186437
    },
    {
        "content": "<p>...and the dumping code I think already has some logic for converting them  to strings that I guess can be used just fine?</p>",
        "id": 127042063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527186453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> back</p>",
        "id": 127044754,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527189654
    },
    {
        "content": "<p>I see</p>",
        "id": 127044758,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527189658
    },
    {
        "content": "<p>I needed to implement Atom</p>",
        "id": 127044773,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527189684
    },
    {
        "content": "<p>but yeah, I can make stuff simpler</p>",
        "id": 127044778,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527189696
    },
    {
        "content": "<p>just return self</p>",
        "id": 127044833,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527189743
    },
    {
        "content": "<p>isn't there already an index() method for RegionVid and such</p>",
        "id": 127044914,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527189867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> yes not sure what it's called though</p>",
        "id": 127046240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527191666
    },
    {
        "content": "<p>you wrote the dang macro <span class=\"emoji emoji-1f61b\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 127046243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527191673
    },
    {
        "content": "<p>yes</p>",
        "id": 127046245,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191683
    },
    {
        "content": "<p>newindex_something</p>",
        "id": 127046247,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191686
    },
    {
        "content": "<p>newindex_idx</p>",
        "id": 127046249,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191694
    },
    {
        "content": "<p>I think maybe <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you have to import the <code>Idx</code> trait</p>",
        "id": 127046275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527191747
    },
    {
        "content": "<p>to do what?</p>",
        "id": 127046278,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191760
    },
    {
        "content": "<p>to have index() available?</p>",
        "id": 127046322,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191770
    },
    {
        "content": "<p>gain access to the method</p>",
        "id": 127046326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527191773
    },
    {
        "content": "<p>yeap, anyway there are other issues</p>",
        "id": 127046336,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191788
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>69 | impl Atom for RegionVid {\n   | ^^^^^^^^^^^^^^^^^^^^^^^ impl doesn&#39;t use types inside crate\n</pre></div>",
        "id": 127046358,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191827
    },
    {
        "content": "<p>ah yeah that's annoying, you have to move the impl into <code>librustc</code></p>",
        "id": 127046434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527191902
    },
    {
        "content": "<p>but we can do that</p>",
        "id": 127046436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527191905
    },
    {
        "content": "<p>but also if I bring index in scope to have it available on RegionVid then I need to implement index :P</p>",
        "id": 127046437,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191906
    },
    {
        "content": "<p><code>RegionVid</code> does implement <code>Idx</code></p>",
        "id": 127046449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527191918
    },
    {
        "content": "<blockquote>\n<p>ah yeah that's annoying, you have to move the impl into <code>librustc</code></p>\n</blockquote>\n<p>yes, I was doing that</p>",
        "id": 127046454,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191928
    },
    {
        "content": "<blockquote>\n<p><code>RegionVid</code> does implement <code>Idx</code></p>\n</blockquote>\n<p>and what do you mean by that?</p>",
        "id": 127046465,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527191944
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <a href=\"https://github.com/rust-lang/rust/blob/07465222ca9454d7c274908424a5e084710efd7e/src/librustc/ty/sty.rs#L1166-L1170\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/07465222ca9454d7c274908424a5e084710efd7e/src/librustc/ty/sty.rs#L1166-L1170\">I mean this</a></p>",
        "id": 127046535,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192004
    },
    {
        "content": "<p>yes, I know that, unsure what are you trying to say :P</p>",
        "id": 127046579,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192072
    },
    {
        "content": "<p>doing use Idx make index() available</p>",
        "id": 127046592,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192100
    },
    {
        "content": "<blockquote>\n<p>but also if I bring index in scope to have it available on RegionVid then I need to implement index :P</p>\n</blockquote>\n<p>you wrote this</p>",
        "id": 127046600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192114
    },
    {
        "content": "<p>I'm confused what you meant by \"implement index\"</p>",
        "id": 127046606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192120
    },
    {
        "content": "<p>well better said ... I need to implement Atom trait which requires an index method</p>",
        "id": 127046665,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192149
    },
    {
        "content": "<p>and I already have one but I'm not implementing the trait</p>",
        "id": 127046678,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192168
    },
    {
        "content": "<p>there's where I'm lacking of basic Rust knowledge</p>",
        "id": 127046704,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192207
    },
    {
        "content": "<p>hehe</p>",
        "id": 127046706,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192209
    },
    {
        "content": "<p>in this kind of cases there are a lot of solutions unsure what's possible in Rust</p>",
        "id": 127046721,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192231
    },
    {
        "content": "<p>I think maybe the confusion is because two traits have methods with the same name?</p>",
        "id": 127046726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192241
    },
    {
        "content": "<p>yes</p>",
        "id": 127046771,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192247
    },
    {
        "content": "<p>I see. That's not really important.</p>",
        "id": 127046774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192252
    },
    {
        "content": "<p>though may impact your ability to write <code>foo.index()</code></p>",
        "id": 127046779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192265
    },
    {
        "content": "<p>you can write <code>Idx::index(foo)</code></p>",
        "id": 127046781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192271
    },
    {
        "content": "<p>if you want to specify which trait method is called</p>",
        "id": 127046786,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192282
    },
    {
        "content": "<p>I see that's fine</p>",
        "id": 127046803,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192310
    },
    {
        "content": "<p>thanks</p>",
        "id": 127046806,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192323
    },
    {
        "content": "<blockquote>\n<p>though may impact your ability to write <code>foo.index()</code></p>\n</blockquote>\n<p>because of ambiguity</p>",
        "id": 127046809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527192331
    },
    {
        "content": "<p>yep</p>",
        "id": 127046811,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192338
    },
    {
        "content": "<p>make complete sense</p>",
        "id": 127046813,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527192341
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0599]: no function or associated item named `default` found for type `polonius_engine::AllFacts&lt;rustc::ty::RegionVid, dataflow::move_paths::indexes::BorrowIndex, borrow_check::location::LocationIndex&gt;` in the current scope\n   --&gt; librustc_mir/borrow_check/nll/mod.rs:101:14\n    |\n101 |         Some(AllFacts::default())\n    |              ^^^^^^^^^^^^^^^^^ function or associated item not found in `polonius_engine::AllFacts&lt;rustc::ty::RegionVid, dataflow::move_paths::indexes::BorrowIndex, borrow_check::location::LocationIndex&gt;`\n    |\n    = note: the method `default` exists but the following trait bounds were not satisfied:\n            `polonius_engine::AllFacts&lt;rustc::ty::RegionVid, dataflow::move_paths::indexes::BorrowIndex, borrow_check::location::LocationIndex&gt; : std::default::Default`\n\nerror[E0609]: no field `universal_region` on type `&amp;mut _`\n   --&gt; librustc_mir/borrow_check/nll/mod.rs:108:14\n    |\n108 |             .universal_region\n    |              ^^^^^^^^^^^^^^^^\n\nerror: aborting due to 2 previous errors\n</pre></div>",
        "id": 127048591,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527194489
    },
    {
        "content": "<p>two errors to go ... I need to leave for a while will continue later</p>",
        "id": 127048600,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527194501
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I guess we didn't <code>#[derive(Default)]</code> — we should do that :)</p>",
        "id": 127049147,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195293
    },
    {
        "content": "<p>if you like, you can make these edits locally and temporary redirect rustc</p>",
        "id": 127049154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195306
    },
    {
        "content": "<p>this is what I usually do</p>",
        "id": 127049158,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195310
    },
    {
        "content": "<p>basically clone polonius somewhere and edit the <code>Cargo.toml</code> to just be a <code>path</code> dependency</p>",
        "id": 127049161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195320
    },
    {
        "content": "<p>hey</p>",
        "id": 127049162,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195321
    },
    {
        "content": "<p>back</p>",
        "id": 127049163,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195322
    },
    {
        "content": "<p>that's the easiest thing to do</p>",
        "id": 127049165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195324
    },
    {
        "content": "<p>AllFacts has Default derived</p>",
        "id": 127049171,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195350
    },
    {
        "content": "<p>the thing is ...</p>",
        "id": 127049211,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195364
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>  = note: the method `default` exists but the following trait bounds were not satisfied:\n            `polonius_engine::AllFacts&lt;rustc::ty::RegionVid, dataflow::move_paths::indexes::BorrowIndex, borrow_check::location::LocationIndex&gt; : std::default::Default`\n</pre></div>",
        "id": 127049218,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195371
    },
    {
        "content": "<p>I guess all the indexes need to derive default and it's ok to do it</p>",
        "id": 127049223,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> oh, that's a bug</p>",
        "id": 127049233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195407
    },
    {
        "content": "<p>we should not derive default</p>",
        "id": 127049234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195411
    },
    {
        "content": "<p>but rather write our own impl</p>",
        "id": 127049235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195413
    },
    {
        "content": "<p>those types should not require <code>Default</code> and I would rather they didn't</p>",
        "id": 127049243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195425
    },
    {
        "content": "<p>ok</p>",
        "id": 127049248,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195435
    },
    {
        "content": "<p>because it's not sensible to have a \"default\" region vid</p>",
        "id": 127049249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195435
    },
    {
        "content": "<p>(what region do you mean?)</p>",
        "id": 127049253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195441
    },
    {
        "content": "<p>right</p>",
        "id": 127049255,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195446
    },
    {
        "content": "<p>makes sense</p>",
        "id": 127049257,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195448
    },
    {
        "content": "<p>if we modify <code>polonius-engine</code> and write the default-impl ourselves, we'll find we don't need those types to have <code>Default</code></p>",
        "id": 127049259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195466
    },
    {
        "content": "<p>because e.g. <code>Vec&lt;R&gt;</code> implements <code>Default</code> even if <code>R</code> does not</p>",
        "id": 127049262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195472
    },
    {
        "content": "<p>I see</p>",
        "id": 127049266,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195479
    },
    {
        "content": "<p>it's annoying that there is no way to make <code>#[derive]</code> understand that</p>",
        "id": 127049307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195488
    },
    {
        "content": "<p>makes sense</p>",
        "id": 127049308,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195489
    },
    {
        "content": "<p>there was an RFC for it</p>",
        "id": 127049309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195491
    },
    {
        "content": "<p>not sure what has happened with it</p>",
        "id": 127049314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195494
    },
    {
        "content": "<p>might be good to push on it :)</p>",
        "id": 127049317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527195504
    },
    {
        "content": "<p>:)</p>",
        "id": 127049338,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527195561
    },
    {
        "content": "<p>I have the thing working</p>",
        "id": 127051350,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198182
    },
    {
        "content": "<p><span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 127051371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527198212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> first we need this <a href=\"https://github.com/rust-lang-nursery/polonius/pull/49\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/49\">https://github.com/rust-lang-nursery/polonius/pull/49</a></p>",
        "id": 127051433,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198262
    },
    {
        "content": "<p>and then ... are we going to depend on polonius from github? or are you releasing a new version?</p>",
        "id": 127051445,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198280
    },
    {
        "content": "<p>nice!</p>",
        "id": 127051473,
        "sender_full_name": "qmx",
        "timestamp": 1527198333
    },
    {
        "content": "<blockquote>\n<p>and then ... are we going to depend on polonius from github? or are you releasing a new version?</p>\n</blockquote>\n<p>I'll release a new version</p>",
        "id": 127051480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527198347
    },
    {
        "content": "<p>ok</p>",
        "id": 127051485,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198355
    },
    {
        "content": "<p>and let me know so I can change the code and open a PR on rustc</p>",
        "id": 127051534,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> we can continue tomorrow pairing if <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has something else we can do</p>",
        "id": 127051545,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198390
    },
    {
        "content": "<blockquote>\n<p>and let me know so I can change the code and open a PR on rustc</p>\n</blockquote>\n<p>I'll do it right now</p>",
        "id": 127051556,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527198418
    },
    {
        "content": "<p>I know there are tons of things to do, but I prefer to ask so we tackle what you consider more urgent</p>",
        "id": 127051576,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198445
    },
    {
        "content": "<p>I'm wrapping up dayjob stuff now, do we have a gameplan for tomorrow?</p>",
        "id": 127051587,
        "sender_full_name": "qmx",
        "timestamp": 1527198481
    },
    {
        "content": "<p>that's what I'm asking Niko :)</p>",
        "id": 127051633,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198503
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> what's your time schedule for tomorrow?</p>",
        "id": 127051638,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198516
    },
    {
        "content": "<p>well ... let's talk about this details in private so we don't bother the rest</p>",
        "id": 127051643,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198526
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> published v0.1.1</p>",
        "id": 127051758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527198679
    },
    {
        "content": "<p>I think that should be semver compatible :)</p>",
        "id": 127051762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527198686
    },
    {
        "content": "<p>already assumed 0.1.1 :P</p>",
        "id": 127051766,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198702
    },
    {
        "content": "<p>was winning time meanwhile you were pushing</p>",
        "id": 127051767,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198711
    },
    {
        "content": "<p>this is so exciting <span class=\"emoji emoji-203c\" title=\"double exclamation mark\">:double_exclamation_mark:</span></p>",
        "id": 127051822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527198747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/51047\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51047\">https://github.com/rust-lang/rust/pull/51047</a></p>",
        "id": 127051948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198918
    },
    {
        "content": "<p>pushed so you can start seeing it but I've rebased and I'm compiling again</p>",
        "id": 127051956,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198935
    },
    {
        "content": "<p>should be good but ...</p>",
        "id": 127051961,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527198940
    },
    {
        "content": "<p>thing is ok</p>",
        "id": 127052745,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527200010
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you have to add the crate to <a href=\"https://github.com/rust-lang/rust/blob/master/src/tools/tidy/src/deps.rs#L58-L59\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/tools/tidy/src/deps.rs#L58-L59\">the whitelist</a></p>",
        "id": 127053969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527202021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> done!</p>",
        "id": 127054349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527202625
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> gotta run but I delegated to you so — once travis is green — you can do <code>@bors r=nikomatsakis</code></p>",
        "id": 127054516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527202875
    },
    {
        "content": "<p>ok</p>",
        "id": 127054583,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527202980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what can we do with @qmx? how can we continue?</p>",
        "id": 127054598,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527203000
    },
    {
        "content": "<p>if you're leaving don't worry but let us know when you're back later/tomorrow</p>",
        "id": 127054603,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527203015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> see the steps <a href=\"https://github.com/rust-lang-nursery/polonius/issues/44\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/44\">laid out in #44</a></p>",
        "id": 127054670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527203108
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127054674,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527203120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> saw you r+, <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127057570,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527208325
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span>, morning =)</p>",
        "id": 127078924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527251336
    },
    {
        "content": "<p>morning</p>",
        "id": 127078997,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251453
    },
    {
        "content": "<p>will wait a bit for Douglas so we can start</p>",
        "id": 127079005,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251465
    },
    {
        "content": "<p>there's no rush, I can have breakfast before :P</p>",
        "id": 127079009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251477
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>move the Output and datafrog code into polonius-engine\n    hopefully the datafrog version we need is in crates.io by then\n</pre></div>",
        "id": 127079013,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251494
    },
    {
        "content": "<p>first task would be to move Output with Algorithm from cli module and datafrog to polonius-engine</p>",
        "id": 127079057,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251523
    },
    {
        "content": "<p>datafrog is already published if I'm not wrong</p>",
        "id": 127079066,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251532
    },
    {
        "content": "<p>so that should be easy</p>",
        "id": 127079070,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251536
    },
    {
        "content": "<p>yes, that's right</p>",
        "id": 127079082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527251554
    },
    {
        "content": "<p>and I already made the <code>Output</code> code generic</p>",
        "id": 127079088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527251565
    },
    {
        "content": "<p>so in principle should be straightforward</p>",
        "id": 127079092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527251573
    },
    {
        "content": "<blockquote>\n<p>and I already made the <code>Output</code> code generic</p>\n</blockquote>\n<p>so even easier :)</p>",
        "id": 127079101,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527251589
    },
    {
        "content": "<p>I'm here</p>",
        "id": 127080446,
        "sender_full_name": "qmx",
        "timestamp": 1527253695
    },
    {
        "content": "<p>o/</p>",
        "id": 127080716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527254068
    },
    {
        "content": "<p>not sure where <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> is</p>",
        "id": 127080719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527254074
    },
    {
        "content": "<p>but did the first step of moving <code>Output</code> into <code>polonius-engine</code> make sense to you?</p>",
        "id": 127080724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527254089
    },
    {
        "content": "<p>reading, will tell in a few minutes :P</p>",
        "id": 127080738,
        "sender_full_name": "qmx",
        "timestamp": 1527254107
    },
    {
        "content": "<p>yea, makes sense</p>",
        "id": 127080950,
        "sender_full_name": "qmx",
        "timestamp": 1527254378
    },
    {
        "content": "<p>here</p>",
        "id": 127081369,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527254909
    },
    {
        "content": "<p>so what have you done so far?</p>",
        "id": 127081645,
        "sender_full_name": "qmx",
        "timestamp": 1527255288
    },
    {
        "content": "<p>so ... there's the PR from yesterday</p>",
        "id": 127081779,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527255492
    },
    {
        "content": "<p>and we need to start moving things</p>",
        "id": 127081780,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527255500
    },
    {
        "content": "<p>hold on ...</p>",
        "id": 127081781,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527255503
    },
    {
        "content": "<p>we can start, let me ping you in private</p>",
        "id": 127081797,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527255526
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0658]: `crate` visibility modifier is experimental (see issue #45388)                                                                                                                                │······\n  --&gt; polonius-engine/src/output/mod.rs:93:5                                                                                                                                                                │······\n   |                                                                                                                                                                                                        │······\n93 |     crate fn regions_live_at(&amp;self, location: Point) -&gt; &amp;[Region] {                                                                                                                                    │······\n   |     ^^^^^                                                                                                                                                                                              │······\n   |                                                                                                                                                                                                        │······\n   = help: add #![feature(crate_visibility_modifier)] to the crate attributes to enable\n</pre></div>",
        "id": 127083200,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^^^</p>",
        "id": 127083202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257357
    },
    {
        "content": "<p>this is happening besides we already added the feature</p>",
        "id": 127083206,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257367
    },
    {
        "content": "<p>is there something else to do?</p>",
        "id": 127083208,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257371
    },
    {
        "content": "<p>you probably added it wrong</p>",
        "id": 127083212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527257377
    },
    {
        "content": "<p>:P</p>",
        "id": 127083214,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257382
    },
    {
        "content": "<p>though not obviously so :)</p>",
        "id": 127083262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527257409
    },
    {
        "content": "<p>we added the thing on polonius-engine/src/lib.rs</p>",
        "id": 127083265,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257419
    },
    {
        "content": "<p>I don't know what else would be needed... that <em>should</em> be enough :)</p>",
        "id": 127083267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527257426
    },
    {
        "content": "<p><code>#![feature(crate_visibility_modifier)]</code></p>",
        "id": 127083268,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257427
    },
    {
        "content": "<p>ok</p>",
        "id": 127083269,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257433
    },
    {
        "content": "<p>let's see</p>",
        "id": 127083270,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257434
    },
    {
        "content": "<p>spying on your ssh session, it looks like you are getting other errors too?</p>",
        "id": 127083339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527257531
    },
    {
        "content": "<p>maybe you just need to add more feature gates?</p>",
        "id": 127083341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527257538
    },
    {
        "content": "<p>you could probably just lift the ones from <code>polonius/src/main.rs</code></p>",
        "id": 127083343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527257546
    },
    {
        "content": "<p>just copy them all</p>",
        "id": 127083345,
        "sender_full_name": "qmx",
        "timestamp": 1527257551
    },
    {
        "content": "<p>figured</p>",
        "id": 127083346,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257551
    },
    {
        "content": "<p>the issue was that the thing was below doc comments</p>",
        "id": 127083350,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257566
    },
    {
        "content": "<p>we were getting a warning</p>",
        "id": 127083351,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527257571
    },
    {
        "content": "<p>oh, I thought it might be something weird like that</p>",
        "id": 127083512,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527257814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> output/tracking.rs is not implemented in a generic way</p>",
        "id": 127084135,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527258651
    },
    {
        "content": "<p>what is that?</p>",
        "id": 127084141,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527258659
    },
    {
        "content": "<p>I don't even remember what tracking is about</p>",
        "id": 127084143,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527258661
    },
    {
        "content": "<p>maybe just delete it:)</p>",
        "id": 127084152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527258668
    },
    {
        "content": "<p>:D</p>",
        "id": 127084157,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527258673
    },
    {
        "content": "<p>I think that may be related to the tracking on in- and out-degrees?</p>",
        "id": 127084161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527258677
    },
    {
        "content": "<p>yea, that was for finding the degree counts</p>",
        "id": 127084163,
        "sender_full_name": "qmx",
        "timestamp": 1527258679
    },
    {
        "content": "<p>let me check</p>",
        "id": 127084164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527258679
    },
    {
        "content": "<p>if so, I killed that code</p>",
        "id": 127084167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527258682
    },
    {
        "content": "<p>because it no longer seemed esp. relevant</p>",
        "id": 127084174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527258687
    },
    {
        "content": "<p><span class=\"emoji emoji-1f52a\" title=\"kitchen knife\">:kitchen_knife:</span></p>",
        "id": 127084175,
        "sender_full_name": "qmx",
        "timestamp": 1527258690
    },
    {
        "content": "<p>ok</p>",
        "id": 127084181,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527258694
    },
    {
        "content": "<p>I was about to say that :) I had missed we could remove it in the review; this and the histo crate dependency etc</p>",
        "id": 127084192,
        "sender_full_name": "lqd",
        "timestamp": 1527258713
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127084254,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527258761
    },
    {
        "content": "<p>so, we are confused about something right now</p>",
        "id": 127085441,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260168
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/polonius/blob/master/src/dump.rs#L227\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/blob/master/src/dump.rs#L227\">https://github.com/rust-lang-nursery/polonius/blob/master/src/dump.rs#L227</a></p>",
        "id": 127085444,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260170
    },
    {
        "content": "<p>ok</p>",
        "id": 127085455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260196
    },
    {
        "content": "<p>and</p>",
        "id": 127085468,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260218
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/facts.rs#L44\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/facts.rs#L44\">https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/facts.rs#L44</a></p>",
        "id": 127085469,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260219
    },
    {
        "content": "<p>I understand from rustc point of view</p>",
        "id": 127085481,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260241
    },
    {
        "content": "<p>but why do polonius redefine Atom?</p>",
        "id": 127085486,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260250
    },
    {
        "content": "<p>I mean, it's clear how to do in rustc + polonius-engine</p>",
        "id": 127085489,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260261
    },
    {
        "content": "<p>but unsure what are we trying to do in polonius</p>",
        "id": 127085495,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260269
    },
    {
        "content": "<p>it's just that in polonius we should don't care about polonius-engine's Atom and roll our own?</p>",
        "id": 127085543,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260300
    },
    {
        "content": "<p>oh, they are just independent traits</p>",
        "id": 127085544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260300
    },
    {
        "content": "<p>I should have renamed the <code>Atom</code> in polonius</p>",
        "id": 127085549,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260309
    },
    {
        "content": "<p>but I don't know why this impacts you</p>",
        "id": 127085554,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260312
    },
    {
        "content": "<p>that dump code should not be in the engine</p>",
        "id": 127085556,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260316
    },
    {
        "content": "<p>in fact, I specifically moved it out from the <code>output</code> module for that reason</p>",
        "id": 127085559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260324
    },
    {
        "content": "<p>yeah, it's not</p>",
        "id": 127085566,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260332
    },
    {
        "content": "<p>maybe we did some use wrong or something</p>",
        "id": 127085578,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260346
    },
    {
        "content": "<p>(well, I should have renamed it or otherwise refactored)</p>",
        "id": 127085580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260348
    },
    {
        "content": "<p>let me see all again</p>",
        "id": 127085582,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260352
    },
    {
        "content": "<p>/me peeks</p>",
        "id": 127085593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527260366
    },
    {
        "content": "<p>fixed</p>",
        "id": 127085776,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260548
    },
    {
        "content": "<p>Region, Loan, Point in dump_output in src/dump.rs  need to be bound to polonius_engine:Atom</p>",
        "id": 127085784,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260579
    },
    {
        "content": "<p>but we have to Atom</p>",
        "id": 127085788,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260584
    },
    {
        "content": "<p>that's why the confusion</p>",
        "id": 127085793,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527260590
    },
    {
        "content": "<p>ok I don't understand but seems fine =)</p>",
        "id": 127086148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527261019
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang-nursery/polonius/pull/52\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/52\">https://github.com/rust-lang-nursery/polonius/pull/52</a></p>",
        "id": 127087501,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527262793
    },
    {
        "content": "<p>we need to fix this <a href=\"https://github.com/rust-lang-nursery/polonius/pull/52/files#diff-dba02791b4baf8a328939029ac920005R51\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/52/files#diff-dba02791b4baf8a328939029ac920005R51\">https://github.com/rust-lang-nursery/polonius/pull/52/files#diff-dba02791b4baf8a328939029ac920005R51</a></p>",
        "id": 127087562,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527262828
    },
    {
        "content": "<p>we can continue a bit more but opening the PR so you can check how goes :)</p>",
        "id": 127087572,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527262843
    },
    {
        "content": "<p>I'll do that on a follow-up PR</p>",
        "id": 127087575,
        "sender_full_name": "qmx",
        "timestamp": 1527262846
    },
    {
        "content": "<p>looks pretty good, left one nit</p>",
        "id": 127087602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527262881
    },
    {
        "content": "<p>I've dropped the changes on a follow-up PR since <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> stepped out for a bit</p>",
        "id": 127088295,
        "sender_full_name": "qmx",
        "timestamp": 1527263689
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/polonius/pull/53\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/53\">https://github.com/rust-lang-nursery/polonius/pull/53</a></p>",
        "id": 127088314,
        "sender_full_name": "qmx",
        "timestamp": 1527263709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> merged!</p>",
        "id": 127088461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527263898
    },
    {
        "content": "<p><span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 127088487,
        "sender_full_name": "qmx",
        "timestamp": 1527263965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> added a tick to the task here <a href=\"https://github.com/rust-lang-nursery/polonius/issues/44\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/44\">https://github.com/rust-lang-nursery/polonius/issues/44</a></p>",
        "id": 127089250,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527265040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> should we continue porting the stuff now to rustc?</p>",
        "id": 127089254,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527265061
    },
    {
        "content": "<p>we need to fix the enums hack from previous PR and then we can continue</p>",
        "id": 127089304,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527265091
    },
    {
        "content": "<p>I'm working on fixing the enum thing now</p>",
        "id": 127089311,
        "sender_full_name": "qmx",
        "timestamp": 1527265111
    },
    {
        "content": "<p>share the thing so I can join you :)</p>",
        "id": 127089326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527265198
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> should we continue porting the stuff now to rustc?</p>\n</blockquote>\n<p>go for it!</p>",
        "id": 127090699,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527267154
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127090897,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527267424
    },
    {
        "content": "<p>we are fixing the hack</p>",
        "id": 127090901,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527267434
    },
    {
        "content": "<p>and will continue with that in a little while</p>",
        "id": 127090906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527267446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> another one <a href=\"https://github.com/rust-lang-nursery/polonius/pull/54\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/54\">https://github.com/rust-lang-nursery/polonius/pull/54</a></p>",
        "id": 127091079,
        "sender_full_name": "qmx",
        "timestamp": 1527267628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> merged</p>",
        "id": 127091117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527267713
    },
    {
        "content": "<p>I'm moving to rustc integration now</p>",
        "id": 127091161,
        "sender_full_name": "qmx",
        "timestamp": 1527267730
    },
    {
        "content": "<p>are you going to do a polonius release?</p>",
        "id": 127091167,
        "sender_full_name": "qmx",
        "timestamp": 1527267749
    },
    {
        "content": "<p>I can yeah</p>",
        "id": 127091493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527268241
    },
    {
        "content": "<p>I'll go ahead and call this 0.2.0</p>",
        "id": 127091500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527268247
    },
    {
        "content": "<p>even though it's probably semver-compatible</p>",
        "id": 127091501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527268253
    },
    {
        "content": "<p>ok</p>",
        "id": 127091525,
        "sender_full_name": "qmx",
        "timestamp": 1527268315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> done <a href=\"https://crates.io/crates/polonius-engine\" target=\"_blank\" title=\"https://crates.io/crates/polonius-engine\">https://crates.io/crates/polonius-engine</a></p>",
        "id": 127091650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527268465
    },
    {
        "content": "<p><span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 127091675,
        "sender_full_name": "qmx",
        "timestamp": 1527268523
    },
    {
        "content": "<p>building a fresh rust</p>",
        "id": 127091677,
        "sender_full_name": "qmx",
        "timestamp": 1527268533
    },
    {
        "content": "<p>will be afk for a bit (fyi)</p>",
        "id": 127091763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527268645
    },
    {
        "content": "<p>ok</p>",
        "id": 127091765,
        "sender_full_name": "qmx",
        "timestamp": 1527268649
    },
    {
        "content": "<p>I'm reading your integration commit here, but will probably need some walkthrough when you're back</p>",
        "id": 127092933,
        "sender_full_name": "qmx",
        "timestamp": 1527270555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> we are starting with <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span></p>",
        "id": 127093739,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527271645
    },
    {
        "content": "<p>we are basing the work on my current unmerged PR about AllFacts</p>",
        "id": 127093744,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527271658
    },
    {
        "content": "<p>I guess this is the way to go</p>",
        "id": 127093748,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527271672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I'm back now :)</p>",
        "id": 127096354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275081
    },
    {
        "content": "<p>¿qué pása?</p>",
        "id": 127096358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275090
    },
    {
        "content": "<p>I don't know how to say it in Portuguese but I hope Spanish's close enough ;)</p>",
        "id": 127096367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275101
    },
    {
        "content": "<p>also I think I got the accents wrong</p>",
        "id": 127096373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275105
    },
    {
        "content": "<p>oh well :)</p>",
        "id": 127096374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275107
    },
    {
        "content": "<p>so what's up?</p>",
        "id": 127096377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275108
    },
    {
        "content": "<p>that was spanish</p>",
        "id": 127096378,
        "sender_full_name": "qmx",
        "timestamp": 1527275109
    },
    {
        "content": "<p>:)</p>",
        "id": 127096382,
        "sender_full_name": "qmx",
        "timestamp": 1527275113
    },
    {
        "content": "<p>I'm aware :)</p>",
        "id": 127096384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275115
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> speaks Spanish</p>",
        "id": 127096388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275121
    },
    {
        "content": "<p>yep, he's really good at it! I'm definitely not :P</p>",
        "id": 127096391,
        "sender_full_name": "qmx",
        "timestamp": 1527275136
    },
    {
        "content": "<p>so I'm reading your <a href=\"https://github.com/rust-lang/rust/compare/master...nikomatsakis:nll-alias-analysis-with-differential-dataflow?expand=1\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/compare/master...nikomatsakis:nll-alias-analysis-with-differential-dataflow?expand=1\">branch</a> diff</p>",
        "id": 127096393,
        "sender_full_name": "qmx",
        "timestamp": 1527275156
    },
    {
        "content": "<p>and having a hard time following all the changes there</p>",
        "id": 127096434,
        "sender_full_name": "qmx",
        "timestamp": 1527275164
    },
    {
        "content": "<blockquote>\n<p>yep, he's really good at it! I'm definitely not :P</p>\n</blockquote>\n<p>heh. One of the things that amuses me about learning a foreign language is that basically the best complement you can have is that you are indistinguishable from the average person</p>",
        "id": 127096435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275168
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>yep, he's really good at it! I'm definitely not :P</p>\n</blockquote>\n<p>heh. One of the things that amuses me about learning a foreign language is that basically the best complement you can have is that you are indistinguishable from the average person</p>\n</blockquote>\n<p>so true <span class=\"emoji emoji-1f602\" title=\"joy\">:joy:</span></p>",
        "id": 127096451,
        "sender_full_name": "qmx",
        "timestamp": 1527275199
    },
    {
        "content": "<p>ok, what have you done so far?</p>",
        "id": 127096461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275206
    },
    {
        "content": "<p>want to maybe try to pair briefly?</p>",
        "id": 127096465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275213
    },
    {
        "content": "<p>(or just chat over Zulip, either wfm)</p>",
        "id": 127096475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275228
    },
    {
        "content": "<p>pairing would be nice</p>",
        "id": 127096487,
        "sender_full_name": "qmx",
        "timestamp": 1527275267
    },
    {
        "content": "<p>ok gimme 2 min</p>",
        "id": 127096496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527275279
    },
    {
        "content": "<p>k</p>",
        "id": 127096539,
        "sender_full_name": "qmx",
        "timestamp": 1527275289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> you around?</p>",
        "id": 127098793,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527278448
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> needed to leave for a while, I'm back</p>",
        "id": 127098917,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527278634
    },
    {
        "content": "<p>did you already paired?</p>",
        "id": 127098932,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527278642
    },
    {
        "content": "<p>yeah we made a video I plan to upload</p>",
        "id": 127099261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527279104
    },
    {
        "content": "<p>cool</p>",
        "id": 127099320,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527279165
    },
    {
        "content": "<p>did you finish the task?</p>",
        "id": 127099325,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527279173
    },
    {
        "content": "<p>I was kind of tackling it also</p>",
        "id": 127099328,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527279178
    },
    {
        "content": "<p>heh no but we sketched out the steps :)</p>",
        "id": 127099330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527279181
    },
    {
        "content": "<p>cool</p>",
        "id": 127099338,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527279187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> wanna continue with me?</p>",
        "id": 127099353,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527279212
    },
    {
        "content": "<p>can't wait for your PR to land <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 127099358,
        "sender_full_name": "qmx",
        "timestamp": 1527279222
    },
    {
        "content": "<p>hehe I can give you some time to rest :P</p>",
        "id": 127099360,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527279226
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> what I recommended to <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> was that — roughly at the spot where we presently dump out the NLL facts to disk — we would do the polonius computation (this is in <code>nll::compute_regions()</code>). The resulting <code>Output</code> would be returned (not stored in the <code>RegionInferenceContext</code>)</p>",
        "id": 127100899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281463
    },
    {
        "content": "<p>we would then put that <code>Output</code> into the <code>Flows</code> data structure that currently stores the <code>borrows</code> set</p>",
        "id": 127100905,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281480
    },
    {
        "content": "<p>yes I was looking exactly at compute_regions</p>",
        "id": 127100908,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281492
    },
    {
        "content": "<p>and (if the switch is enabled) use it instead to answer the functions <code>borrows_live_at</code> and <code>with_outgoing_borrows</code></p>",
        "id": 127100909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281497
    },
    {
        "content": "<p>this is somewhat different from what I did in my commit, but similar</p>",
        "id": 127100911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281503
    },
    {
        "content": "<p>right now compute_regions returns ...</p>",
        "id": 127100963,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281568
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>) -&gt; (\n    RegionInferenceContext&lt;&#39;tcx&gt;,\n    Option&lt;ClosureRegionRequirements&lt;&#39;gcx&gt;&gt;,\n) {\n</pre></div>",
        "id": 127100965,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281573
    },
    {
        "content": "<p>yeah you would return a 3rd thing</p>",
        "id": 127100975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281583
    },
    {
        "content": "<p>you mean to add another thing to that tuple?</p>",
        "id": 127100976,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281585
    },
    {
        "content": "<p>:D</p>",
        "id": 127100980,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281588
    },
    {
        "content": "<p>beautiful :P</p>",
        "id": 127100984,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281595
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is this somewhat the same we discussed on the call?</p>",
        "id": 127100992,
        "sender_full_name": "qmx",
        "timestamp": 1527281613
    },
    {
        "content": "<p>or something different?</p>",
        "id": 127100996,
        "sender_full_name": "qmx",
        "timestamp": 1527281623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> I think it's the same, I'm trying to catch up :)</p>",
        "id": 127101039,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> same</p>",
        "id": 127101041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281650
    },
    {
        "content": "<p>still need to see the video when is up</p>",
        "id": 127101045,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281656
    },
    {
        "content": "<p>encoding just finished</p>",
        "id": 127101047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281664
    },
    {
        "content": "<p>take your time to have lunch</p>",
        "id": 127101048,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281664
    },
    {
        "content": "<p>so now I'm worried about overlap</p>",
        "id": 127101049,
        "sender_full_name": "qmx",
        "timestamp": 1527281665
    },
    {
        "content": "<p>are you working on this thing now?</p>",
        "id": 127101054,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281680
    },
    {
        "content": "<p>yup, adding the flag atm, but I'll have to stop for getting lunch :P</p>",
        "id": 127101089,
        "sender_full_name": "qmx",
        "timestamp": 1527281745
    },
    {
        "content": "<p>(waaaay past overdue :P)</p>",
        "id": 127101094,
        "sender_full_name": "qmx",
        "timestamp": 1527281752
    },
    {
        "content": "<p>ahh thought we were going to pair</p>",
        "id": 127101141,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281769
    },
    {
        "content": "<p>I wasn't coding was waiting for you</p>",
        "id": 127101147,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281780
    },
    {
        "content": "<p>no worries, you can continue with the task</p>",
        "id": 127101149,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281790
    },
    {
        "content": "<p>I will try to do something else</p>",
        "id": 127101151,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281797
    },
    {
        "content": "<p>the pairing with niko was a walkthrough of all those codepaths</p>",
        "id": 127101167,
        "sender_full_name": "qmx",
        "timestamp": 1527281825
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127101232,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527281886
    },
    {
        "content": "<p>jfyi video with <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> is going to be at youtube at <a href=\"https://youtu.be/EM_j4suuA1Y\" target=\"_blank\" title=\"https://youtu.be/EM_j4suuA1Y\">https://youtu.be/EM_j4suuA1Y</a></p>",
        "id": 127101272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527281991
    },
    {
        "content": "<p>in case you want to review something :)</p>",
        "id": 127101332,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527282026
    },
    {
        "content": "<p>I'm not sure where to catalog and list these videos :)</p>",
        "id": 127101335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527282042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> creating a channel and or a playlist?</p>",
        "id": 127101574,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527282395
    },
    {
        "content": "<p>I guess, I don't know what those things are :) though I can guess ;)</p>",
        "id": 127101582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527282413
    },
    {
        "content": "<p>/me not very YouTube savvy apparently</p>",
        "id": 127101585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527282419
    },
    {
        "content": "<p>hehehe</p>",
        "id": 127101595,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527282432
    },
    {
        "content": "<p>you know what is a borrow checker but you don't what's a playlist? :P</p>",
        "id": 127101602,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527282450
    },
    {
        "content": "<p>confirm:)</p>",
        "id": 127101691,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527282576
    },
    {
        "content": "<p>I only ever used youtube by getting a link :)</p>",
        "id": 127101708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527282594
    },
    {
        "content": "<p>I understand there are other .. things .. on there ..</p>",
        "id": 127101752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527282604
    },
    {
        "content": "<p>:)</p>",
        "id": 127101755,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527282605
    },
    {
        "content": "<p>ok I made a <a href=\"https://www.youtube.com/playlist?list=PLCQVvhKUrTN9VfaQx2AyOSAstwENaGkYA\" target=\"_blank\" title=\"https://www.youtube.com/playlist?list=PLCQVvhKUrTN9VfaQx2AyOSAstwENaGkYA\">rustc pair programming playlist</a> :)</p>",
        "id": 127102340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527283551
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so we've managed to do all the steps but pass the polonius output into <code>FlowState</code></p>",
        "id": 127109225,
        "sender_full_name": "qmx",
        "timestamp": 1527295754
    },
    {
        "content": "<p>ok</p>",
        "id": 127109226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527295770
    },
    {
        "content": "<p><a href=\"http://github.com/qmx/rust/tree/use_polonius_Output\" target=\"_blank\" title=\"http://github.com/qmx/rust/tree/use_polonius_Output\">http://github.com/qmx/rust/tree/use_polonius_Output</a></p>",
        "id": 127109231,
        "sender_full_name": "qmx",
        "timestamp": 1527295784
    },
    {
        "content": "<p>is it really important for now to pass through FlowState?</p>",
        "id": 127109277,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527295812
    },
    {
        "content": "<p>I guess we could land something and then try to refactor</p>",
        "id": 127109280,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527295829
    },
    {
        "content": "<p>it doesn't have to go into flow state</p>",
        "id": 127109288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527295860
    },
    {
        "content": "<p>maybe that's why you stored it initially inside the <code>MirBorrowContext</code></p>",
        "id": 127109289,
        "sender_full_name": "qmx",
        "timestamp": 1527295861
    },
    {
        "content": "<p>what problem are you hitting exactly?</p>",
        "id": 127109294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527295866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> one thing ... in your changes you changed how each_borrow_involving_path works</p>",
        "id": 127109299,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527295882
    },
    {
        "content": "<p>not knowing how/where to store the polonius output</p>",
        "id": 127109300,
        "sender_full_name": "qmx",
        "timestamp": 1527295886
    },
    {
        "content": "<p>you were suggesting to do the same and use polonius output there</p>",
        "id": 127109306,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527295916
    },
    {
        "content": "<p>this is changing in the way things will work</p>",
        "id": 127109347,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527295934
    },
    {
        "content": "<p>are you doing that because is exactly equivalent?</p>",
        "id": 127109348,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527295943
    },
    {
        "content": "<p>I mean, from the top of my head I don't know what is this function actually checking</p>",
        "id": 127109352,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527295974
    },
    {
        "content": "<p>if we don't store it inside <code>FlowState</code>, how can we reach it later inside <code>borrows_in_scope(Location)</code>?</p>",
        "id": 127109354,
        "sender_full_name": "qmx",
        "timestamp": 1527295979
    },
    {
        "content": "<p>right — acutally I gotta run to put my daughter to bed — but you could either put it in the <code>MirBorrowckCtxt</code>, as I did in the commit, or the flow state</p>",
        "id": 127109357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527295985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> if you don't put it in there, you have to not call that routine, basically</p>",
        "id": 127109360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527295999
    },
    {
        "content": "<p>I think it shouldn't be hard to put it in the flow-state though...</p>",
        "id": 127109361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296008
    },
    {
        "content": "<p>I'll try now on <code>MirBorrowCtx</code></p>",
        "id": 127109362,
        "sender_full_name": "qmx",
        "timestamp": 1527296009
    },
    {
        "content": "<p>but maybe try on the mir borrowck ctxt first</p>",
        "id": 127109366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296016
    },
    {
        "content": "<p>(since there is the model from that commit)</p>",
        "id": 127109367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296022
    },
    {
        "content": "<p>anyway bbl</p>",
        "id": 127109368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296026
    },
    {
        "content": "<p>k, thanks</p>",
        "id": 127109369,
        "sender_full_name": "qmx",
        "timestamp": 1527296030
    },
    {
        "content": "<p>ok back</p>",
        "id": 127109657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296543
    },
    {
        "content": "<p>I figured that my question was silly :)</p>",
        "id": 127109658,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296572
    },
    {
        "content": "<p>the answer is things are equivalent</p>",
        "id": 127109659,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296582
    },
    {
        "content": "<p>just in case asking</p>",
        "id": 127109664,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296587
    },
    {
        "content": "<p>(do you have a textmate session or something?)</p>",
        "id": 127109671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296599
    },
    {
        "content": "<p>because I'm not 100% what polonius is not covering</p>",
        "id": 127109672,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296622
    },
    {
        "content": "<p>actually we were pairing with qmx but then we splitted work</p>",
        "id": 127109716,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296663
    },
    {
        "content": "<p>I'm trying to investigate and help him</p>",
        "id": 127109717,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296678
    },
    {
        "content": "<p>maybe tomorrow we can pair again</p>",
        "id": 127109719,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296684
    },
    {
        "content": "<p>unsure</p>",
        "id": 127109721,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296685
    },
    {
        "content": "<p>I was mentioned to him — not sure if this is how you split it — that if you have the <code>Output</code></p>",
        "id": 127109723,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296700
    },
    {
        "content": "<p>it makes sense to augment the output from <code>-Zdump-mir</code></p>",
        "id": 127109731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296713
    },
    {
        "content": "<p>with the derived tuples at each point</p>",
        "id": 127109732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296721
    },
    {
        "content": "<p>(which that PR also does...)</p>",
        "id": 127109733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296724
    },
    {
        "content": "<p>er, that commit</p>",
        "id": 127109735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296728
    },
    {
        "content": "<p>ok</p>",
        "id": 127109736,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296735
    },
    {
        "content": "<p>would be a sort of independent thing</p>",
        "id": 127109737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296742
    },
    {
        "content": "<p>I think Douglas figured this thing out</p>",
        "id": 127109774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296767
    },
    {
        "content": "<p>I'm also have something on my machine</p>",
        "id": 127109778,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> so this is the <code>flow_state</code> type, <code>Flows</code> (<a href=\"https://github.com/rust-lang/rust/blob/990d8aa743b1dda3cc0f68fe09524486261812c6/src/librustc_mir/borrow_check/flows.rs#L28\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/990d8aa743b1dda3cc0f68fe09524486261812c6/src/librustc_mir/borrow_check/flows.rs#L28\">here</a>)</p>",
        "id": 127109779,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296780
    },
    {
        "content": "<p>when we can, we can sync again</p>",
        "id": 127109780,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296785
    },
    {
        "content": "<p>one problem might be that <code>borrows_in_scope</code> presently returns an <code>impl Iterator</code></p>",
        "id": 127109783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296811
    },
    {
        "content": "<p>which is sometimes a pain when you want to return two different kinds of iterators</p>",
        "id": 127109784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296822
    },
    {
        "content": "<p>we could change it to a \"callback\" form</p>",
        "id": 127109790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296828
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> so this is the <code>flow_state</code> type, <code>Flows</code> (<a href=\"https://github.com/rust-lang/rust/blob/990d8aa743b1dda3cc0f68fe09524486261812c6/src/librustc_mir/borrow_check/flows.rs#L28\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/990d8aa743b1dda3cc0f68fe09524486261812c6/src/librustc_mir/borrow_check/flows.rs#L28\">here</a>)</p>\n</blockquote>\n<p>why did you mention this?</p>",
        "id": 127109794,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296844
    },
    {
        "content": "<p>where it invokes a closure with each <code>Borrow</code>Index`</p>",
        "id": 127109795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296848
    },
    {
        "content": "<p>and take a closure as callback?</p>",
        "id": 127109796,
        "sender_full_name": "qmx",
        "timestamp": 1527296849
    },
    {
        "content": "<p>I may be missing something :)</p>",
        "id": 127109797,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527296850
    },
    {
        "content": "<p>boom</p>",
        "id": 127109798,
        "sender_full_name": "qmx",
        "timestamp": 1527296862
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I was just jumping back to what <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> asked earlier</p>",
        "id": 127109799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296864
    },
    {
        "content": "<p>I've managed to get the output inside <code>MirBorrowCtx</code></p>",
        "id": 127109846,
        "sender_full_name": "qmx",
        "timestamp": 1527296940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">borrows_in_scope</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">location</span>: <span class=\"nc\">PointIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">each_borrow</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">FnMut</span><span class=\"p\">(</span><span class=\"n\">BorrowIndex</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">polonius</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">borrow</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">polonius</span><span class=\"p\">.</span><span class=\"n\">errors_at</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">each_borrow</span><span class=\"p\">(</span><span class=\"n\">borrow</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">borrows</span><span class=\"p\">.</span><span class=\"n\">iter_incoming</span><span class=\"p\">().</span><span class=\"n\">for_each</span><span class=\"p\">(</span><span class=\"n\">each_borrow</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 127109849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296945
    },
    {
        "content": "<p>oh, ok</p>",
        "id": 127109852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296952
    },
    {
        "content": "<p>at least the build didn't break so far :P</p>",
        "id": 127109853,
        "sender_full_name": "qmx",
        "timestamp": 1527296953
    },
    {
        "content": "<p>(still running)</p>",
        "id": 127109854,
        "sender_full_name": "qmx",
        "timestamp": 1527296959
    },
    {
        "content": "<p>er, I guess the main method is still <code>borrow_live_at</code>?</p>",
        "id": 127109858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527296997
    },
    {
        "content": "<p>I think the closure version might be easier to deal with</p>",
        "id": 127109859,
        "sender_full_name": "qmx",
        "timestamp": 1527297001
    },
    {
        "content": "<p>I thought we landed a PR that changed that</p>",
        "id": 127109880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297002
    },
    {
        "content": "<p>but I see <a href=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/output/mod.rs#L77-L82\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/output/mod.rs#L77-L82\">this</a></p>",
        "id": 127109902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297014
    },
    {
        "content": "<p>hmmm</p>",
        "id": 127109908,
        "sender_full_name": "qmx",
        "timestamp": 1527297041
    },
    {
        "content": "<p>oh, no we did change it</p>",
        "id": 127109913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297064
    },
    {
        "content": "<p>the <code>Output</code> type just wasn't reorganized it seems</p>",
        "id": 127109917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297070
    },
    {
        "content": "<p>in this PR <a href=\"https://github.com/rust-lang-nursery/polonius/pull/42/\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/42/\">https://github.com/rust-lang-nursery/polonius/pull/42/</a></p>",
        "id": 127109918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297076
    },
    {
        "content": "<p>the \"main\" type is <code>potential_errors</code></p>",
        "id": 127109919,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297081
    },
    {
        "content": "<p>which is now misnamed</p>",
        "id": 127109920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297084
    },
    {
        "content": "<p>the main <em>field</em> that is</p>",
        "id": 127109921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297089
    },
    {
        "content": "<p>should just be <code>errors</code>, not <code>potential_errors</code></p>",
        "id": 127109922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297095
    },
    {
        "content": "<p>so now every change in mir is taking ~7 minutes to build</p>",
        "id": 127109925,
        "sender_full_name": "qmx",
        "timestamp": 1527297116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> if you just want to know if it builds, I suggest <code>./x.py check</code></p>",
        "id": 127109964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297142
    },
    {
        "content": "<p>it's way faster</p>",
        "id": 127109965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297143
    },
    {
        "content": "<p>I tend to iterate with that</p>",
        "id": 127109966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297146
    },
    {
        "content": "<p><code>RUST_BACKTRACE=full ./x.py build -i --stage 1 --keep-stage 0 src/libstd</code></p>",
        "id": 127109968,
        "sender_full_name": "qmx",
        "timestamp": 1527297151
    },
    {
        "content": "<p>until I am ready to run tests</p>",
        "id": 127109969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297156
    },
    {
        "content": "<p><code>./x.py check</code> what does it do?</p>",
        "id": 127109971,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527297175
    },
    {
        "content": "<p>it just checks if it compiles or not</p>",
        "id": 127109975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297181
    },
    {
        "content": "<p>I've forgot about it</p>",
        "id": 127109976,
        "sender_full_name": "qmx",
        "timestamp": 1527297182
    },
    {
        "content": "<p>but doens't produce teh binary</p>",
        "id": 127109980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297186
    },
    {
        "content": "<p>that's awesome</p>",
        "id": 127109983,
        "sender_full_name": "qmx",
        "timestamp": 1527297188
    },
    {
        "content": "<p>ok</p>",
        "id": 127109984,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527297193
    },
    {
        "content": "<p>makes sense</p>",
        "id": 127109986,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527297199
    },
    {
        "content": "<p>that said, if all your changes are local to <code>librustc_mir</code>, there's not as much advantage, since you could just kill the build once that succeeds</p>",
        "id": 127109988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297203
    },
    {
        "content": "<p>but with check you don't have to remember to do so</p>",
        "id": 127109992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297218
    },
    {
        "content": "<p>but if you e.g. edit <code>librustc</code></p>",
        "id": 127109999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297238
    },
    {
        "content": "<p>and want to work through the ramifications through the various crates</p>",
        "id": 127110037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297247
    },
    {
        "content": "<p><code>x.py check</code> is a real winner</p>",
        "id": 127110041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297253
    },
    {
        "content": "<p>true</p>",
        "id": 127110049,
        "sender_full_name": "qmx",
        "timestamp": 1527297302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> well I think either putting it in <code>MirBorrowckCtxt</code> or <code>FlowState</code> is fine</p>",
        "id": 127110100,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297383
    },
    {
        "content": "<p>I'd love to have a <code>rustfmt</code> that would only format lines you changed</p>",
        "id": 127110103,
        "sender_full_name": "qmx",
        "timestamp": 1527297402
    },
    {
        "content": "<p>vs re-doing the whole file</p>",
        "id": 127110105,
        "sender_full_name": "qmx",
        "timestamp": 1527297410
    },
    {
        "content": "<p>lol I was looking at the wrong struct, that's why it was so hard to put it inside <code>FlowState</code></p>",
        "id": 127110152,
        "sender_full_name": "qmx",
        "timestamp": 1527297526
    },
    {
        "content": "<p>will move it there</p>",
        "id": 127110155,
        "sender_full_name": "qmx",
        "timestamp": 1527297535
    },
    {
        "content": "<p>d'oh</p>",
        "id": 127110163,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297569
    },
    {
        "content": "<p>I think rustfmt <em>can</em> do that, but editors aren't using it very well</p>",
        "id": 127110165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297585
    },
    {
        "content": "<p>not sure tho</p>",
        "id": 127110169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297601
    },
    {
        "content": "<p>also RLS worked inside rustc for a while, it was glorious - then it crashed badly :P</p>",
        "id": 127110216,
        "sender_full_name": "qmx",
        "timestamp": 1527297627
    },
    {
        "content": "<p>heh</p>",
        "id": 127110217,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297653
    },
    {
        "content": "<p>never dared try</p>",
        "id": 127110224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297667
    },
    {
        "content": "<p>we are you able to get it working @qmx?</p>",
        "id": 127110283,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527297842
    },
    {
        "content": "<p>have the thing compiling here</p>",
        "id": 127110322,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527297852
    },
    {
        "content": "<p>ok I'm off to bed soon — if you all have any last-minute questions let me know soon :)</p>",
        "id": 127110324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527297879
    },
    {
        "content": "<p>anyway I need to leave now but if you’re available tomorrow we can pair or something</p>",
        "id": 127110325,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527297892
    },
    {
        "content": "<p>yea, I'm trying to move it to <code>FlowState</code></p>",
        "id": 127110333,
        "sender_full_name": "qmx",
        "timestamp": 1527297926
    },
    {
        "content": "<p>have a good night y'all, I'll still hack for a little bit more</p>",
        "id": 127110335,
        "sender_full_name": "qmx",
        "timestamp": 1527297936
    },
    {
        "content": "<p>@qmx what do you have by now? wanna continue pairing?</p>",
        "id": 127127205,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527339130
    },
    {
        "content": "<p>or how can we continue? maybe split in some way?</p>",
        "id": 127127261,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527339258
    },
    {
        "content": "<p>I'm in a bad spot for pairing now</p>",
        "id": 127129616,
        "sender_full_name": "qmx",
        "timestamp": 1527344201
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span>, how can we split the task?</p>",
        "id": 127129874,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527344796
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  that's where I'm getting stuck:</p>\n<div class=\"codehilite\"><pre><span></span>error[E0412]: cannot find type `PointIndex` in this scope\n  --&gt; librustc_mir/borrow_check/flows.rs:64:48\n   |\n64 |     crate fn borrows_in_scope(&amp;self, location: PointIndex, each_borrow: impl FnMut(BorrowIndex)) {\n   |                                                ^^^^^^^^^^ not found in this scope\n\nerror[E0308]: mismatched types\n  --&gt; librustc_mir/borrow_check/flows.rs:66:76\n   |\n66 |             for borrow in polonius.regions_live_at(location) { each_borrow(borrow) }\n   |                                                                            ^^^^^^ expected struct `dataflow::move_paths::indexe\ns::BorrowIndex`, found reference\n   |\n   = note: expected type `dataflow::move_paths::indexes::BorrowIndex`\n              found type `&amp;rustc::ty::RegionVid`\n</pre></div>\n\n\n<p>lemme unpack this<br>\n1)  you mentioned that I should use <code>polonius.errors</code> or something like this - and mentioned that probable_errors wasn't a good name - shall I go and cut a PR for polonius-engine with those changes? Was the field the expected way of accessing this data?  </p>\n<p>2)  I can't find <code>PointIndex</code> anywhere, did you meant another type?</p>\n<p>3) I need the <code>MirBorrowCtx</code> inside <code>FlowState::borrows_in_scope</code> for resolving the indexes - is it ok if I capture it via closure?</p>",
        "id": 127129931,
        "sender_full_name": "qmx",
        "timestamp": 1527344912
    },
    {
        "content": "<p>changes are in <a href=\"https://github.com/qmx/rust/tree/use_polonius_Output\" target=\"_blank\" title=\"https://github.com/qmx/rust/tree/use_polonius_Output\">this branch</a></p>",
        "id": 127130074,
        "sender_full_name": "qmx",
        "timestamp": 1527345145
    },
    {
        "content": "<p>1) I think we need to provide a method in polonius-engine similar to regions_live_at(location) but that returns potential_errors and change the name from potential_errors to errors</p>",
        "id": 127130314,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527345593
    },
    {
        "content": "<p>2) I think it's LocationIndex what you need</p>",
        "id": 127130315,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527345601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> didn't have much time and I'm with the baby but I did this <a href=\"https://github.com/rust-lang-nursery/polonius/pull/56\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/56\">https://github.com/rust-lang-nursery/polonius/pull/56</a> I think we would need something like this so we can do <code>output.errors_at(location)</code> from rustc</p>",
        "id": 127132280,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527349507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> I was rebasing your work on top of master</p>",
        "id": 127134191,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527353768
    },
    {
        "content": "<p>there are some conflicts</p>",
        "id": 127134193,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527353776
    },
    {
        "content": "<p>do you want me to push what I have?</p>",
        "id": 127134194,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527353786
    },
    {
        "content": "<p>I should have said ... rebasing because my PR landed</p>",
        "id": 127134201,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527353849
    },
    {
        "content": "<p>probably better to rebase than continue because otherwise would generate more conflicts</p>",
        "id": 127134204,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527353874
    },
    {
        "content": "<p>if you already rebased plese push it somewhere, otherwise I'll rebase</p>",
        "id": 127134316,
        "sender_full_name": "qmx",
        "timestamp": 1527354072
    },
    {
        "content": "<p>yep</p>",
        "id": 127134560,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527354629
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/commits/make_borrowck_use_output\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commits/make_borrowck_use_output\">https://github.com/spastorino/rust/commits/make_borrowck_use_output</a></p>",
        "id": 127134561,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527354630
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127134563,
        "sender_full_name": "qmx",
        "timestamp": 1527354644
    },
    {
        "content": "<p>left out the wip commit</p>",
        "id": 127134564,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527354649
    },
    {
        "content": "<p>but I guess you can put my branch in yours again and add that on top :)</p>",
        "id": 127134569,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527354673
    },
    {
        "content": "<p>yea, I'll take care of that</p>",
        "id": 127134571,
        "sender_full_name": "qmx",
        "timestamp": 1527354688
    },
    {
        "content": "<p>actually have added your wip commit</p>",
        "id": 127134762,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527355097
    },
    {
        "content": "<p>it needed a little change</p>",
        "id": 127134764,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527355104
    },
    {
        "content": "<p>take a look at the stuff and feel free to get what you need or throw away :)</p>",
        "id": 127134769,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527355146
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I've pushed a couple of fixes on top of the last qmx commit here <a href=\"https://github.com/spastorino/rust/commits/make_borrowck_use_output\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commits/make_borrowck_use_output\">https://github.com/spastorino/rust/commits/make_borrowck_use_output</a></p>",
        "id": 127179942,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462181
    },
    {
        "content": "<p>I think the thing is almost there</p>",
        "id": 127179947,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462190
    },
    {
        "content": "<p>couldn't spend any time during the weekend on this thing, just had a couple of minutes and could fix the stuff you see on the last commit</p>",
        "id": 127179949,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462225
    },
    {
        "content": "<p>anyway it's giving some compiling errors as I think <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> predicted</p>",
        "id": 127179951,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462242
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0308]: `if let` arms have incompatible types\n  --&gt; librustc_mir/borrow_check/flows.rs:65:9\n   |\n65 | /         if let Some(polonius) = self.polonius_output {\n66 | |             polonius.borrows_in_scope_at(location)\n67 | |         } else {\n68 | |             self.borrows.iter_incoming()\n69 | |         }\n   | |_________^ expected reference, found struct `std::iter::Peekable`\n   |\n   = note: expected type `&amp;[dataflow::move_paths::indexes::BorrowIndex]`\n              found type `std::iter::Peekable&lt;rustc_data_structures::indexed_set::Iter&lt;&#39;_, dataflow::move_paths::indexes::BorrowIndex&gt;&gt;`\nnote: `if let` arm with an incompatible type\n  --&gt; librustc_mir/borrow_check/flows.rs:67:16\n   |\n67 |           } else {\n   |  ________________^\n68 | |             self.borrows.iter_incoming()\n69 | |         }\n   | |_________^\n\nerror: aborting due to previous error\n</pre></div>",
        "id": 127179988,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462245
    },
    {
        "content": "<p>Niko suggested to use callbacks for that but in order to use callbacks with the new code I think it needs a tiny refactor</p>",
        "id": 127179995,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462272
    },
    {
        "content": "<p>couldn't look into that but tomorrow I can continue with this</p>",
        "id": 127179996,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462284
    },
    {
        "content": "<p>if <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> want we can pair again and try to finish this</p>",
        "id": 127179997,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527462299
    },
    {
        "content": "<p>Sure, tomorrow is rust day again <span class=\"emoji emoji-1f980\" title=\"crab\">:crab:</span></p>",
        "id": 127180203,
        "sender_full_name": "qmx",
        "timestamp": 1527462816
    },
    {
        "content": "<p>hey y'all — I'm around today, didn't really have access to a computer last few days, it turned out</p>",
        "id": 127198884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527502291
    },
    {
        "content": "<p>is <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>'s branch still the latest thing?</p>",
        "id": 127198886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527502304
    },
    {
        "content": "<p>Regarding the diffs in <a href=\"https://github.com/spastorino/rust/commit/14ff76a3ca8f8c7b55adcae5823414eb377ffec4\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/14ff76a3ca8f8c7b55adcae5823414eb377ffec4\">this HEAD commit</a>:</p>\n<ul>\n<li>Using <code>LocationIndex</code> is correct. If needed, it can be imported from <a href=\"https://github.com/rust-lang/rust/blob/68e0e58df7669d548861751e9f710f85dfc39958/src/librustc_mir/borrow_check/location.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/68e0e58df7669d548861751e9f710f85dfc39958/src/librustc_mir/borrow_check/location.rs\">borrow_check::location</a>. The different is that <code>LocationIndex</code> can refer to either the start or mid point of a <code>Location</code>; it's also the way that the facts from Polonius are organized. I was confused with the name and thought i had called it <code>PointIndex</code> (maybe we should rename it...).</li>\n<li>Hmm, I see why <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> was converting back to returning an <code>impl  Iterator</code>, but we'll have to overcome the challenge of returning two distinct types. </li>\n</ul>\n<p>Maybe the best option is to add a dependency on the <a href=\"https://docs.rs/either/1.5.0/either/enum.Either.html\" target=\"_blank\" title=\"https://docs.rs/either/1.5.0/either/enum.Either.html\"><code>Either</code></a> crate. This... seems like a harmless enough crate to rely on. Then we could change the method body to:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">borrows_in_scope</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">location</span>: <span class=\"nc\">LocationIndex</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">Iterator</span><span class=\"o\">&lt;</span><span class=\"n\">Item</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">BorrowIndex</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"na\">&#39;_</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">polonius</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">polonius_output</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">Either</span>::<span class=\"n\">Left</span><span class=\"p\">(</span><span class=\"n\">polonius</span><span class=\"p\">.</span><span class=\"n\">borrows_in_scope_at</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">Either</span>::<span class=\"n\">Right</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">borrows</span><span class=\"p\">.</span><span class=\"n\">iter_incoming</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 127199238,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527502918
    },
    {
        "content": "<blockquote>\n<p>hey y'all — I'm around today, didn't really have access to a computer last few days, it turned out</p>\n</blockquote>\n<p>no worries, I only had a few minutes during the weekend</p>",
        "id": 127200070,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527504315
    },
    {
        "content": "<p>(technically, today is a holiday too, but I was planning to work at least somewhat to try and get on top of things)</p>",
        "id": 127200076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527504349
    },
    {
        "content": "<blockquote>\n<p>is <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>'s branch still the latest thing?</p>\n</blockquote>\n<p>is the last thing, yeah</p>",
        "id": 127200079,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527504357
    },
    {
        "content": "<blockquote>\n<p>(technically, today is a holiday too, but I was planning to work at least somewhat to try and get on top of things)</p>\n</blockquote>\n<p>what happens today in US?</p>",
        "id": 127200124,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527504385
    },
    {
        "content": "<p>\"Memorial Day\" — officially for remembering those who died in war. Or, more commonly, to have a BBQ and enjoy summer weather.</p>",
        "id": 127200142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527504436
    },
    {
        "content": "<p>Today it's raining, though, and I don't eat meat :)</p>",
        "id": 127200147,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527504455
    },
    {
        "content": "<p>hehehe</p>",
        "id": 127200188,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527504486
    },
    {
        "content": "<blockquote>\n<p>Using LocationIndex is correct. If needed, it can be imported from borrow_check::location. The different is that LocationIndex can refer to either the start or mid point of a Location; it's also the way that the facts from Polonius are organized. I was confused with the name and thought i had called it PointIndex (maybe we should rename it...).</p>\n</blockquote>\n<p>did you mention this for some reason?</p>",
        "id": 127200339,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527504730
    },
    {
        "content": "<p>I mean, what's in the code is right or I understood your comment wrong?</p>",
        "id": 127200349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527504774
    },
    {
        "content": "<blockquote>\n<p>I mean, what's in the code is right or I understood your comment wrong?</p>\n</blockquote>\n<p>your code is correct</p>",
        "id": 127200535,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505108
    },
    {
        "content": "<p>I was just confirming that :)</p>",
        "id": 127200536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505113
    },
    {
        "content": "<p>ok</p>",
        "id": 127200537,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527505114
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127200538,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527505118
    },
    {
        "content": "<p>Either ... hehe, sounds useful for this case</p>",
        "id": 127200539,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527505128
    },
    {
        "content": "<p>had no idea such a thing existed</p>",
        "id": 127200540,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527505138
    },
    {
        "content": "<p>I guess the purpose is for cases like this?</p>",
        "id": 127200546,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527505150
    },
    {
        "content": "<p>README doesn't say the motivation for the existence of this thing</p>",
        "id": 127200595,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527505218
    },
    {
        "content": "<blockquote>\n<p>I guess the purpose is for cases like this?</p>\n</blockquote>\n<p>it is one purpose, at least</p>",
        "id": 127200652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505335
    },
    {
        "content": "<p>yeah the docs are not great</p>",
        "id": 127200653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505341
    },
    {
        "content": "<p>but if you look at <a href=\"https://docs.rs/either/1.5.0/either/enum.Either.html\" target=\"_blank\" title=\"https://docs.rs/either/1.5.0/either/enum.Either.html\">https://docs.rs/either/1.5.0/either/enum.Either.html</a> you will see it has an impl of <code>Iterator</code></p>",
        "id": 127200656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505362
    },
    {
        "content": "<p><a href=\"https://docs.rs/either/1.5.0/either/enum.Either.html#impl-Iterator\" target=\"_blank\" title=\"https://docs.rs/either/1.5.0/either/enum.Either.html#impl-Iterator\">https://docs.rs/either/1.5.0/either/enum.Either.html#impl-Iterator</a></p>",
        "id": 127200660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527505378
    },
    {
        "content": "<p>ahh I see</p>",
        "id": 127200872,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527505771
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0271]: type mismatch resolving `&lt;either::Either&lt;std::slice::Iter&lt;&#39;_, dataflow::move_paths::indexes::BorrowIndex&gt;, std::iter::Peekable&lt;rustc_data_structures::indexed_set::Iter&lt;&#39;_, dataflow::move_paths::indexes::BorrowIndex&gt;&gt;&gt; as std::iter::Iterator&gt;::Item == dataflow::move_paths::indexes::BorrowIndex`\n  --&gt; librustc_mir/borrow_check/flows.rs:65:66\n   |\n65 |     crate fn borrows_in_scope(&amp;self, location: LocationIndex) -&gt; impl Iterator&lt;Item = BorrowIndex&gt; + &#39;_ {\n   |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected reference, found struct `dataflow::move_paths::indexes::BorrowIndex`\n   |\n   = note: expected type `&amp;dataflow::move_paths::indexes::BorrowIndex`\n              found type `dataflow::move_paths::indexes::BorrowIndex`\n   = note: the return type of a function must have a statically known size\n\nerror[E0271]: type mismatch resolving `&lt;std::iter::Peekable&lt;rustc_data_structures::indexed_set::Iter&lt;&#39;_, dataflow::move_paths::indexes::BorrowIndex&gt;&gt; as std::iter::Iterator&gt;::Item == &amp;dataflow::move_paths::indexes::BorrowIndex`\n  --&gt; librustc_mir/borrow_check/flows.rs:65:66\n   |\n65 |     crate fn borrows_in_scope(&amp;self, location: LocationIndex) -&gt; impl Iterator&lt;Item = BorrowIndex&gt; + &#39;_ {\n   |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `dataflow::move_paths::indexes::BorrowIndex`, found reference\n   |\n   = note: expected type `dataflow::move_paths::indexes::BorrowIndex`\n              found type `&amp;dataflow::move_paths::indexes::BorrowIndex`\n   = note: required because of the requirements on the impl of `std::iter::Iterator` for `either::Either&lt;std::slice::Iter&lt;&#39;_, dataflow::move_paths::indexes::BorrowIndex&gt;, std::iter::Peekable&lt;rustc_data_structures::indexed_set::Iter&lt;&#39;_, dataflow::move_paths::indexes::BorrowIndex&gt;&gt;&gt;`\n   = note: the return type of a function must have a statically known size\n</pre></div>",
        "id": 127201737,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527507148
    },
    {
        "content": "<p>can you send me the source? :)</p>",
        "id": 127201751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507159
    },
    {
        "content": "<p><a href=\"https://github.com/spastorino/rust/commits/make_borrowck_use_output\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commits/make_borrowck_use_output\">https://github.com/spastorino/rust/commits/make_borrowck_use_output</a></p>",
        "id": 127201802,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527507263
    },
    {
        "content": "<p>just added the Either thing on top of what we talked about</p>",
        "id": 127201819,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527507318
    },
    {
        "content": "<p>yeah; so the problem is that your iterators — or at least some of them — are yielding up <code>&amp;BorrowIndex</code> and not <code>BorrowIndex</code></p>",
        "id": 127201825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507337
    },
    {
        "content": "<p>I suspect the problem is <a href=\"https://github.com/spastorino/rust/commit/2cf481cfbd125057f5f1bd62d238e5b590bbf512#diff-c465d57c1fa45544d4293399e34ce2ccR67\" target=\"_blank\" title=\"https://github.com/spastorino/rust/commit/2cf481cfbd125057f5f1bd62d238e5b590bbf512#diff-c465d57c1fa45544d4293399e34ce2ccR67\">the new one</a> :)</p>",
        "id": 127201831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507356
    },
    {
        "content": "<p>in particular <code>.iter()</code> over a <code>Vec&lt;T&gt;</code> (or any other collection) will yield up <code>&amp;T</code></p>",
        "id": 127201878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507383
    },
    {
        "content": "<p>to fix, just add <code>.cloned()</code></p>",
        "id": 127201880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507388
    },
    {
        "content": "<p><code>.iter().cloned()</code></p>",
        "id": 127201882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507391
    },
    {
        "content": "<p>you can <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\" target=\"_blank\" title=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\">read more about <code>.cloned()</code> in rustdoc</a></p>",
        "id": 127201887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507417
    },
    {
        "content": "<p>/me senses a good blog post topic</p>",
        "id": 127201896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527507434
    },
    {
        "content": "<p>:)</p>",
        "id": 127201899,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527507442
    },
    {
        "content": "<p>yeah have seen all this</p>",
        "id": 127201902,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527507451
    },
    {
        "content": "<p>this thing is compiling now</p>",
        "id": 127202208,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527507911
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127202209,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527507915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> nice!</p>",
        "id": 127203050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527509388
    },
    {
        "content": "<p>gonna run tests</p>",
        "id": 127203115,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527509520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang-nursery/polonius/pull/56\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/56\">https://github.com/rust-lang-nursery/polonius/pull/56</a></p>",
        "id": 127203302,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527509776
    },
    {
        "content": "<p>we can call that from rustc</p>",
        "id": 127203303,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527509786
    },
    {
        "content": "<p>not sure if you've seen the PR</p>",
        "id": 127203307,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527509792
    },
    {
        "content": "<p>I was actually thinking that the callback version would have nothing as return</p>",
        "id": 127203368,
        "sender_full_name": "qmx",
        "timestamp": 1527509945
    },
    {
        "content": "<p>brb, will sync with Douglas when ... hehe :)</p>",
        "id": 127203371,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527509957
    },
    {
        "content": "<p>was writing this and you showed up</p>",
        "id": 127203372,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527509970
    },
    {
        "content": "<p>we are connected :P</p>",
        "id": 127203375,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527509989
    },
    {
        "content": "<p>Will ping once properly cafffeinated</p>",
        "id": 127203516,
        "sender_full_name": "qmx",
        "timestamp": 1527510217
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> we replaced the callbacks with an iterator using <code>Either</code>, which solves the same problem but perhaps more nicely</p>",
        "id": 127204454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527511825
    },
    {
        "content": "<p>how do you pass -Zpolonius to tests?</p>",
        "id": 127204461,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527511850
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ RUST_BACKTRACE=full RUSTFLAGS=-Zpolonius ./x.py test --stage 1 --incremental src/test/{ui,run-pass,compile-fail}\nUpdating only changed submodules\nSubmodules updated in 0.03 seconds\n    Finished dev [unoptimized] target(s) in 0.24s\nBuilding stage0 std artifacts (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn&#39;t exit successfully: `/home/santiago/src/oss/rust1/build/bootstrap/debug/rustc - --crate-name ___ --print=file-names -Zpolonius --target x86_64-unknown-linux-gnu --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro` (exit code: 101)\n--- stderr\nerror: unknown debugging option: `polonius`\n</pre></div>",
        "id": 127204466,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527511864
    },
    {
        "content": "<p>gonna be back in a bit but wanted to leave this thing running :)</p>",
        "id": 127204470,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527511877
    },
    {
        "content": "<p>I mentioned this when talking to <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> — I don't think there is a nice way, actually, you probably have to add a compare-mode to the test harness</p>",
        "id": 127204482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527511909
    },
    {
        "content": "<p>ok</p>",
        "id": 127204536,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527511952
    },
    {
        "content": "<p>and the other thing I wanted to talk about is <a href=\"https://github.com/rust-lang-nursery/polonius/pull/56\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/56\">https://github.com/rust-lang-nursery/polonius/pull/56</a> and change to use errors_at in rustc</p>",
        "id": 127204545,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527511985
    },
    {
        "content": "<p>I'm not sure if current code make sense if you want to use errors_at</p>",
        "id": 127204560,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527512026
    },
    {
        "content": "<p>in particular</p>",
        "id": 127204561,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527512030
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    crate fn borrows_in_scope(&amp;self, location: LocationIndex) -&gt; impl Iterator&lt;Item = BorrowIndex&gt; + &#39;_ {\n        if let Some(ref polonius) = self.polonius_output {\n            Either::Left(polonius.borrows_in_scope_at(location).iter().cloned())\n        } else {\n            Either::Right(self.borrows.iter_incoming())\n        }\n    }\n</pre></div>",
        "id": 127204600,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527512055
    },
    {
        "content": "<p>would be returning errors in the if part and borrows in the else part</p>",
        "id": 127204603,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527512074
    },
    {
        "content": "<p>well I guess we can do that if before calling borrows_in_scope</p>",
        "id": 127204604,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527512095
    },
    {
        "content": "<p>leave borrows_in_scope at it was</p>",
        "id": 127204606,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527512102
    },
    {
        "content": "<p>and use polonius output in the caller or something like that</p>",
        "id": 127204621,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527512131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> if you want help with the compare-mode stuff, I might be able to help</p>",
        "id": 127204886,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527512621
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127205379,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527513427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> wanna do this with me?</p>",
        "id": 127205383,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527513437
    },
    {
        "content": "<p>will be available in ~ 20mins</p>",
        "id": 127205385,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527513445
    },
    {
        "content": "<p>sure</p>",
        "id": 127205390,
        "sender_full_name": "qmx",
        "timestamp": 1527513466
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127205438,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527513498
    },
    {
        "content": "<p>will be back in ~ 20</p>",
        "id": 127205439,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527513504
    },
    {
        "content": "<p>I'm back-ish now</p>",
        "id": 127205558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527513730
    },
    {
        "content": "<p>(fyi)</p>",
        "id": 127205560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527513733
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> back</p>",
        "id": 127206860,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527515927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> are you available to start with this?</p>",
        "id": 127206884,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527515983
    },
    {
        "content": "<p>yup, looking at your branch now</p>",
        "id": 127206976,
        "sender_full_name": "qmx",
        "timestamp": 1527516113
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127206978,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516121
    },
    {
        "content": "<p>I added one commit</p>",
        "id": 127207018,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516129
    },
    {
        "content": "<p>then squashed with yours</p>",
        "id": 127207023,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516142
    },
    {
        "content": "<p>we could fix the history to make a PR at some point</p>",
        "id": 127207027,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516159
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> wait what was this about <code>errors_at</code> or whatever?</p>",
        "id": 127207040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516191
    },
    {
        "content": "<p><a href=\"#narrow/stream/122657-wg-nll/subject/rustc-and-polonius.20integration/near/127204545\" title=\"#narrow/stream/122657-wg-nll/subject/rustc-and-polonius.20integration/near/127204545\">https://rust-lang.zulipchat.com/#narrow/stream/122657-wg-nll/subject/rustc-and-polonius.20integration/near/127204545</a></p>",
        "id": 127207048,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516219
    },
    {
        "content": "<p>9.53am my time, I think it's 8.53am your time</p>",
        "id": 127207053,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516234
    },
    {
        "content": "<p>ok. sadly links don't really work here for some reason.</p>",
        "id": 127207092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516244
    },
    {
        "content": "<blockquote>\n<p>and the other thing I wanted to talk about is <a href=\"https://github.com/rust-lang-nursery/polonius/pull/56\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/56\">https://github.com/rust-lang-nursery/polonius/pull/56</a> and change to use errors_at in rustc</p>\n</blockquote>\n<p>starts at this point ^</p>",
        "id": 127207097,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516254
    },
    {
        "content": "<p>ok I see</p>",
        "id": 127207102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516269
    },
    {
        "content": "<p>just scroll up a bit</p>",
        "id": 127207103,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516271
    },
    {
        "content": "<blockquote>\n<p>would be returning errors in the if part and borrows in the else part</p>\n</blockquote>\n<p>yes, that's right, and I believe it makes sense.</p>",
        "id": 127207108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516299
    },
    {
        "content": "<p>yeah, sorry, as I said on private, don't want to insist but right now it's impossible to follow for me, I can't imagine how is for you that follow way more than I do :)</p>",
        "id": 127207118,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516309
    },
    {
        "content": "<p>well I mean you are pointing out a real inconsistency</p>",
        "id": 127207119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516310
    },
    {
        "content": "<p>however</p>",
        "id": 127207121,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516315
    },
    {
        "content": "<p>the reason it makes sense is that we are basically interested only in borrows that lead to errors</p>",
        "id": 127207126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516327
    },
    {
        "content": "<p>it might make sense to rename the methods</p>",
        "id": 127207127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516331
    },
    {
        "content": "<p>this is a case where -- eventually -- polonius can be more efficient</p>",
        "id": 127207130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516340
    },
    {
        "content": "<p>basically right now we do something like:</p>",
        "id": 127207133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516344
    },
    {
        "content": "<p>yea, let's rename this for the sake of clarity</p>",
        "id": 127207136,
        "sender_full_name": "qmx",
        "timestamp": 1527516347
    },
    {
        "content": "<p>or at least comment heavily</p>",
        "id": 127207139,
        "sender_full_name": "qmx",
        "timestamp": 1527516361
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>for point P in all_points() {\n  for loan L in scope at P {\n    if is_error(L, P) {\n      report_error(L, P);\n    }\n  }\n}\n</pre></div>",
        "id": 127207182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516389
    },
    {
        "content": "<p>however with polonius to generate the <code>Invalidates</code> facts, we've already figured out some parts of that</p>",
        "id": 127207185,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516403
    },
    {
        "content": "<p>you mean <code>borrows_in_scope</code> to <code>possible_errors_in_scope</code> or something like that?</p>",
        "id": 127207187,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516407
    },
    {
        "content": "<p>in particular we know which loans <em>would be errors</em> if they are in scope</p>",
        "id": 127207188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516413
    },
    {
        "content": "<p>that's what the <code>Invalidates</code> facts represent</p>",
        "id": 127207190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516417
    },
    {
        "content": "<p>so eventually we could just do</p>",
        "id": 127207191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516423
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>for (L, P) in errors {\n    report_error(L, P);\n}\n</pre></div>",
        "id": 127207198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516437
    },
    {
        "content": "<p>yes errors in polonius and possible errors when not in polonius</p>",
        "id": 127207199,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516441
    },
    {
        "content": "<p>but for now it's harmless enough to do</p>\n<div class=\"codehilite\"><pre><span></span>for point P in all_points() {\n  for L in errors at P {\n    if is_error(L, P) { // always true\n      report_error(L, P);\n    }\n  }\n}\n</pre></div>",
        "id": 127207203,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516476
    },
    {
        "content": "<p>yeah, <code>possible_errors_in_scope_at(...)</code> or whatever seems ok</p>",
        "id": 127207246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516508
    },
    {
        "content": "<p>yep so your last snippet would match just leaving things as they are renaming to ... exactly</p>",
        "id": 127207248,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516518
    },
    {
        "content": "<p>and calling errors_at</p>",
        "id": 127207249,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516522
    },
    {
        "content": "<p>well to call errors_at we need you to merge the PR and then to release :)</p>",
        "id": 127207255,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516537
    },
    {
        "content": "<p>or we could point the thing to github so we don't bother you everytime we need something like this</p>",
        "id": 127207266,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516559
    },
    {
        "content": "<p>what you prefer :)</p>",
        "id": 127207268,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516572
    },
    {
        "content": "<p>I think we kinda wanted to avoid git dependencies</p>",
        "id": 127207273,
        "sender_full_name": "qmx",
        "timestamp": 1527516594
    },
    {
        "content": "<p>yeah, we do, but <code>Either</code> is tiny ;)</p>",
        "id": 127207315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516604
    },
    {
        "content": "<p>I don't really know how to draw the line here</p>",
        "id": 127207320,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516614
    },
    {
        "content": "<p>on the one hand I dont' want to re-invent the wheel, on the other I don't want to go crazy cloning the world</p>",
        "id": 127207327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516635
    },
    {
        "content": "<p>isn't <code>Either</code> a crate already?</p>",
        "id": 127207332,
        "sender_full_name": "qmx",
        "timestamp": 1527516658
    },
    {
        "content": "<p>right</p>",
        "id": 127207334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516662
    },
    {
        "content": "<p>I maybe answering the wrong thing :)</p>",
        "id": 127207341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516669
    },
    {
        "content": "<p>I thought you were reacting to using the <code>Either</code> crate</p>",
        "id": 127207343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516676
    },
    {
        "content": "<p>and I'm saying that I think we might as well use it</p>",
        "id": 127207345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516681
    },
    {
        "content": "<p>though in general I try to avoid adding deps</p>",
        "id": 127207348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516687
    },
    {
        "content": "<p>no, I'm talking about you merging <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> 's PR on polonius and cutting another release</p>",
        "id": 127207355,
        "sender_full_name": "qmx",
        "timestamp": 1527516707
    },
    {
        "content": "<p>:)</p>",
        "id": 127207356,
        "sender_full_name": "qmx",
        "timestamp": 1527516709
    },
    {
        "content": "<p>oh :)</p>",
        "id": 127207357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516714
    },
    {
        "content": "<p>yes I can do that</p>",
        "id": 127207393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516723
    },
    {
        "content": "<p>we should avoid a git dep</p>",
        "id": 127207396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516725
    },
    {
        "content": "<p>though if you want to just make a git dep to keep hacking while I do so</p>",
        "id": 127207403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516735
    },
    {
        "content": "<p>seems fine</p>",
        "id": 127207404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516736
    },
    {
        "content": "<p>we can always cut a final release just before landing</p>",
        "id": 127207405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516741
    },
    {
        "content": "<p>we're kinda ready for a PR if I'm understanding correctly</p>",
        "id": 127207408,
        "sender_full_name": "qmx",
        "timestamp": 1527516761
    },
    {
        "content": "<p>point is, there may be more ;)</p>",
        "id": 127207411,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516771
    },
    {
        "content": "<p>anyway I merged the PD</p>",
        "id": 127207413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516776
    },
    {
        "content": "<p>point taken</p>",
        "id": 127207414,
        "sender_full_name": "qmx",
        "timestamp": 1527516776
    },
    {
        "content": "<p>and I can happily issue a release, it's no big deal</p>",
        "id": 127207416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516780
    },
    {
        "content": "<p>(I don't personally see the point of using <code>Either</code>; isn't that a trivial enum to write, and more readable since you can choose names that have meaning tailored to the usage?</p>",
        "id": 127207423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527516800
    },
    {
        "content": "<blockquote>\n<p>though if you want to just make a git dep to keep hacking while I do so</p>\n</blockquote>\n<p>yes I was referring to this, not to keep it as a long term thing</p>",
        "id": 127207424,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516801
    },
    {
        "content": "<p>whatever works better for you</p>",
        "id": 127207426,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516808
    },
    {
        "content": "<p>Maybe I'm missing some benefit encoded in the <code>either</code> crate</p>",
        "id": 127207427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527516827
    },
    {
        "content": "<p><code>impl&lt;L: Iterator, R: Iterator&gt; Iterator for Either&lt;L, R&gt;</code></p>",
        "id": 127207474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516849
    },
    {
        "content": "<p>I agree pnkfelix I think</p>",
        "id": 127207475,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516857
    },
    {
        "content": "<p>we can rewrite that code, but why?</p>",
        "id": 127207478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516860
    },
    {
        "content": "<p>indeed, the reason that <code>Either</code> exists is precisely to encode this basically :) it got pulled out of itertools so that rayon could depend on it (and only it)</p>",
        "id": 127207482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516886
    },
    {
        "content": "<p>we don't rewrite we just copy and paste <span class=\"emoji emoji-1f602\" title=\"joy\">:joy:</span></p>",
        "id": 127207484,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> oh it has something special when the two have the same Iterator::Item? (Yoiu left that detail out I think)</p>",
        "id": 127207491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527516908
    },
    {
        "content": "<p>sure :)</p>",
        "id": 127207493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516908
    },
    {
        "content": "<p>but if it's a common thing that people use maybe is worth leaving the dep</p>",
        "id": 127207499,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527516922
    },
    {
        "content": "<p>I think it requires them to have the same <code>Item</code></p>",
        "id": 127207501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516926
    },
    {
        "content": "<p>(otherwise ... it wouldn't make sense...?)</p>",
        "id": 127207502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527516937
    },
    {
        "content": "<p>I feel torn overall. I like the idea of rustc \"playing nice\" with the ecosystem, as I said, and using stuff that makes sense. But I don't want us to go crazy and pull in a bunch of big, unvettable deps.</p>",
        "id": 127207510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516958
    },
    {
        "content": "<blockquote>\n<p>(otherwise ... it wouldn't make sense...?)</p>\n</blockquote>\n<p>yeah, not really, though I guess you <em>could</em> yield up <code>Either&lt;L::Item, R::Item&gt;</code> as your item.  But I think nobody wants that in practice.</p>",
        "id": 127207563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527516985
    },
    {
        "content": "<p>in practice it's really useful for <code>-&gt; impl Iterator&lt;Item = ..&gt;</code>, when you might have multiple ways to fulfill it</p>",
        "id": 127207570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517004
    },
    {
        "content": "<blockquote>\n<p>I feel torn overall. I like the idea of rustc \"playing nice\" with the ecosystem, as I said, and using stuff that makes sense. But I don't want us to go crazy and pull in a bunch of big, unvettable deps.</p>\n</blockquote>\n<p>to complete this thought: this seems like a sample case that exists and hence is easy to vet (and I trust bluss)</p>",
        "id": 127207581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517027
    },
    {
        "content": "<p>Oh true, I wonder what the category theorists would say is \"more natural\"</p>",
        "id": 127207587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517035
    },
    {
        "content": "<p>I wouldn't be surprised if bluss were happy to move to rust-lang-nursery, tbh</p>",
        "id": 127207588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517041
    },
    {
        "content": "<p>anyway if in this case the <code>Left</code> and <code>Right</code> do indeed have <code>Iterator</code>s with the same <code>Item</code>, then I retract my objection to using the <code>either</code> crate here.</p>",
        "id": 127207649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517116
    },
    {
        "content": "<p>what other usage in practice you see the either crate having?</p>",
        "id": 127207714,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517203
    },
    {
        "content": "<p>I mean, not talking inside rustc, talking in general</p>",
        "id": 127207727,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517214
    },
    {
        "content": "<p>this is the primary usage :) but it is also used in itertools in some cases where you are gluing two sources together</p>",
        "id": 127207744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517260
    },
    {
        "content": "<p>can't remember what</p>",
        "id": 127207809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517326
    },
    {
        "content": "<p>I know though that several times in rustc I have wanted the ability to return either A <em>or</em> B for iterators</p>",
        "id": 127207819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517347
    },
    {
        "content": "<p>exactly like this case</p>",
        "id": 127207821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517349
    },
    {
        "content": "<p>I usually just workaround it some other way because I've been too lazy to add the <code>either</code> crate as a dep ;)</p>",
        "id": 127207826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517364
    },
    {
        "content": "<p>do you think it's good to cut a PR with what we have already?</p>",
        "id": 127207840,
        "sender_full_name": "qmx",
        "timestamp": 1527517384
    },
    {
        "content": "<p>have you tried it on any tests yet? :) like, by hand?</p>",
        "id": 127207849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517397
    },
    {
        "content": "<p>but yes, I think it's basically at <em>roughly</em> the right spot</p>",
        "id": 127207853,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517414
    },
    {
        "content": "<p>we can cover the rest in review I suppose</p>",
        "id": 127207854,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517419
    },
    {
        "content": "<p>I would like to see the <code>compare-mode</code> tests so we can actually test it</p>",
        "id": 127207857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517433
    },
    {
        "content": "<p>I would be entirely happy if <code>-Z polonius</code> landed before <code>compare-mode</code></p>",
        "id": 127207900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517464
    },
    {
        "content": "<p>gonna work on the compare-mode now</p>",
        "id": 127207905,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517481
    },
    {
        "content": "<p>just seems like it's like a 1-line diff to add :)</p>",
        "id": 127207906,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517482
    },
    {
        "content": "<p><code>compare-mode</code> support itself seems pretty easy to add. The hard part will be the tests</p>",
        "id": 127207908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517489
    },
    {
        "content": "<p>right, I don't feel the need to add <em>those</em></p>",
        "id": 127207909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517497
    },
    {
        "content": "<p>(and even there, you could just bless them all)</p>",
        "id": 127207910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517498
    },
    {
        "content": "<p>I see, maybe you do want to add them</p>",
        "id": 127207916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517508
    },
    {
        "content": "<p>I can add the mode and run by hand then</p>",
        "id": 127207921,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517514
    },
    {
        "content": "<p>what we <em>don't</em> want to do</p>",
        "id": 127207923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517517
    },
    {
        "content": "<p>is accidentally turn on compare-mode=polonius in bors</p>",
        "id": 127207926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517529
    },
    {
        "content": "<p>one problem with compare-mode as is</p>",
        "id": 127207927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517529
    },
    {
        "content": "<p>is that it compares against the \"default\"</p>",
        "id": 127207929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517537
    },
    {
        "content": "<p>whereas I would prefer for polonius to compare against \"nll\" :)</p>",
        "id": 127207933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517544
    },
    {
        "content": "<p>I wonder how hard that would be to change</p>",
        "id": 127207935,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517547
    },
    {
        "content": "<p>oh... hmm...</p>",
        "id": 127207936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517550
    },
    {
        "content": "<p>now that I think about the complications I think I agree with <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> that we should land the PR w/o compare-mode first</p>",
        "id": 127207988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517571
    },
    {
        "content": "<p>or at least open it</p>",
        "id": 127207989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517573
    },
    {
        "content": "<p>but maybe compare-mode is the next logical thing to hack on ...</p>",
        "id": 127207995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517588
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I imagine what you mean is that we want a fallback chain</p>",
        "id": 127208031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517646
    },
    {
        "content": "<p>good, I'll cut a PR then</p>",
        "id": 127208047,
        "sender_full_name": "qmx",
        "timestamp": 1527517671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> where we would search first if test.polonius.stderr exists, use it. If not, look for test.nll.stderr. And then finally test.stderr</p>",
        "id": 127208049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517674
    },
    {
        "content": "<p>I could probably whip something up</p>",
        "id": 127208093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> remind me, does your PR include mir-dump integration?</p>",
        "id": 127208095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517690
    },
    {
        "content": "<p>no</p>",
        "id": 127208101,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517701
    },
    {
        "content": "<p>I think we need to add that</p>",
        "id": 127208106,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517706
    },
    {
        "content": "<p>once the basic <code>-Z polonius</code> (with or without <code>--compare-mode=polonius</code>) lands</p>",
        "id": 127208108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1527517708
    },
    {
        "content": "<p>ok, so I think there are at least 2 (independent) things to potentially follow up on then</p>",
        "id": 127208112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517718
    },
    {
        "content": "<p>and probably change to use errors_at</p>",
        "id": 127208113,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517722
    },
    {
        "content": "<p>compare-mode + MIr-dump integration</p>",
        "id": 127208117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517723
    },
    {
        "content": "<p>seems good</p>",
        "id": 127208118,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517730
    },
    {
        "content": "<p>then we should just change to errors_at?</p>",
        "id": 127208122,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517737
    },
    {
        "content": "<p>fyi <a href=\"https://github.com/rust-lang-nursery/polonius/pull/57\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/57\">https://github.com/rust-lang-nursery/polonius/pull/57</a></p>",
        "id": 127208125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517744
    },
    {
        "content": "<p>or do you prefer to land it this way and then change to errors_at later?</p>",
        "id": 127208133,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517748
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> do you mean the method on <code>Flows</code> or whatever?</p>",
        "id": 127208144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517775
    },
    {
        "content": "<p>if so, I think we should rename before landing</p>",
        "id": 127208145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517780
    },
    {
        "content": "<p>yes</p>",
        "id": 127208147,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517784
    },
    {
        "content": "<p>ok</p>",
        "id": 127208148,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517785
    },
    {
        "content": "<p>going to do this</p>",
        "id": 127208149,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517791
    },
    {
        "content": "<p>and we can cut the PR</p>",
        "id": 127208151,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517795
    },
    {
        "content": "<p>will be just a couple of minutes</p>",
        "id": 127208193,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517807
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> published</p>",
        "id": 127208229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527517906
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127208275,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517932
    },
    {
        "content": "<p>compiling the changes :)</p>",
        "id": 127208277,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527517941
    },
    {
        "content": "<p>so ... I'm hitting one issue</p>",
        "id": 127208775,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527518754
    },
    {
        "content": "<p>we had a <code>&amp;[Loan]</code> thing and now have a <code>Cow&lt;'_, Vec&lt;Loan&gt;&gt;</code></p>",
        "id": 127208833,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527518818
    },
    {
        "content": "<p>hitting Rust newbies problems :D</p>",
        "id": 127208845,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527518844
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0597]: borrowed value does not live long enough\n  --&gt; librustc_mir/borrow_check/flows.rs:67:26\n   |\n67 |             Either::Left(polonius.errors_at(location).iter().cloned())\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n68 |         } else {\n   |         - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 65:5...\n  --&gt; librustc_mir/borrow_check/flows.rs:65:5\n   |\n65 | /     crate fn borrows_in_scope(&amp;self, location: LocationIndex) -&gt; impl Iterator&lt;Item = BorrowIndex&gt; + &#39;_ {\n66 | |         if let Some(ref polonius) = self.polonius_output {\n67 | |             Either::Left(polonius.errors_at(location).iter().cloned())\n68 | |         } else {\n69 | |             Either::Right(self.borrows.iter_incoming())\n70 | |         }\n71 | |     }\n   | |_____^\n\nerror: aborting due to previous error\n</pre></div>",
        "id": 127208847,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527518845
    },
    {
        "content": "<p>I don't understand what's going on very well because the data comes from the same place so unsure what's happening with lifetimes and what <code>Cow</code> changes</p>",
        "id": 127208928,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527518954
    },
    {
        "content": "<p>try <code>into_iter</code> and not <code>iter</code></p>",
        "id": 127208981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519003
    },
    {
        "content": "<p>this is <em>definitely</em> a good blog post (and probably something we should improve error messages for)</p>",
        "id": 127208996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519022
    },
    {
        "content": "<p>what's going on is that <code>errors_at</code> is returning a temporary (the <code>Cow</code>) which <em>maybe</em> owns some data</p>",
        "id": 127209019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519068
    },
    {
        "content": "<p>when you invoke <code>iter()</code>, it borrows the thing you are iterating over — so when you return that iterator, it is still borrowing from the stack</p>",
        "id": 127209031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519094
    },
    {
        "content": "<p>this worked out before because you had a <code>&amp;[]</code> you were iterating over, which was always borrowed</p>",
        "id": 127209036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519104
    },
    {
        "content": "<p>but now the <code>Cow</code> maybe owns it</p>",
        "id": 127209039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519108
    },
    {
        "content": "<blockquote>\n<p>when you invoke <code>iter()</code>, it borrows the thing you are iterating over — so when you return that iterator, it is still borrowing from the stack</p>\n</blockquote>\n<p>ahh I see</p>",
        "id": 127209040,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519113
    },
    {
        "content": "<p>so you get an error because you would be dropping the <code>Cow</code> while still iterating over it</p>",
        "id": 127209078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519123
    },
    {
        "content": "<p>using <code>into_iter</code> avoids that borrow</p>",
        "id": 127209088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519138
    },
    {
        "content": "<p>that said, <code>Cow</code> may not implement <code>into_iter</code>...?</p>",
        "id": 127209091,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519145
    },
    {
        "content": "<p>so this may not actually work</p>",
        "id": 127209093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519153
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0507]: cannot move out of borrowed content\n  --&gt; librustc_mir/borrow_check/flows.rs:67:26\n   |\n67 |             Either::Left(polonius.errors_at(location).into_iter())\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0507`.\nerror: Could not compile `rustc_mir`.\n</pre></div>",
        "id": 127209096,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519158
    },
    {
        "content": "<p>yeah hmm I wonder what's the right way to do this</p>",
        "id": 127209102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519170
    },
    {
        "content": "<p>:)</p>",
        "id": 127209103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519172
    },
    {
        "content": "<p>(why are we returning <code>Cow</code> anyway?)</p>",
        "id": 127209105,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519180
    },
    {
        "content": "<p>oh, we shouldn't be :)</p>",
        "id": 127209119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519207
    },
    {
        "content": "<p>that's the simple fix</p>",
        "id": 127209120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519210
    },
    {
        "content": "<p>I'll open a PR to show you what I mean ;)</p>",
        "id": 127209125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519218
    },
    {
        "content": "<p>yep</p>",
        "id": 127209132,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519240
    },
    {
        "content": "<p>I guessed we should always return a borrow from polonius-engine</p>",
        "id": 127209174,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519250
    },
    {
        "content": "<p>I saw there are a lot of cases doing Vec::default() so owning the thing and using Cow for that purposes</p>",
        "id": 127209181,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519274
    },
    {
        "content": "<p>also, we should not be assering <code>dump_enabled</code></p>",
        "id": 127209182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519276
    },
    {
        "content": "<p>if this is the primary output, then <code>dump_enabled</code> should not have to be true</p>",
        "id": 127209183,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519284
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127209185,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519292
    },
    {
        "content": "<p>to be honest that part I just copy pasted the whole thing :P</p>",
        "id": 127209187,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519302
    },
    {
        "content": "<p>now that I'm think I guess we should always borrow stuff from there</p>",
        "id": 127209193,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519317
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/polonius/pull/59\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/59\">https://github.com/rust-lang-nursery/polonius/pull/59</a></p>",
        "id": 127209255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> well slices are a bit .. special</p>",
        "id": 127209269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519427
    },
    {
        "content": "<p>hehe yes, makes a lot of sense</p>",
        "id": 127209272,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519429
    },
    {
        "content": "<p>yeah</p>",
        "id": 127209275,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519435
    },
    {
        "content": "<p>that is, you can make an empty slice <code>&amp;[]</code> with any lifetime because it is a compile-time constant</p>",
        "id": 127209276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519440
    },
    {
        "content": "<p>the other things return hashmaps and so forth</p>",
        "id": 127209278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519444
    },
    {
        "content": "<p>they require a <code>Cow</code></p>",
        "id": 127209279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519448
    },
    {
        "content": "<p>ahhhh</p>",
        "id": 127209282,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519454
    },
    {
        "content": "<p>though eventually they should not</p>",
        "id": 127209283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519456
    },
    {
        "content": "<p>yeah so you can't do the same trick for the rest</p>",
        "id": 127209286,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519467
    },
    {
        "content": "<p>(that is, eventually we should be able to execute <code>HashMap::new</code> at compile time to get a constant, but we can't yet)</p>",
        "id": 127209287,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519471
    },
    {
        "content": "<p>anyway it's easier if you don't need <code>Cow</code></p>",
        "id": 127209289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519481
    },
    {
        "content": "<p>yes</p>",
        "id": 127209328,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519486
    },
    {
        "content": "<p>makes a lot of sense</p>",
        "id": 127209331,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519489
    },
    {
        "content": "<p>you need to cut another release :P</p>",
        "id": 127209333,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519493
    },
    {
        "content": "<p>0.3.0 wasted :P</p>",
        "id": 127209342,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519525
    },
    {
        "content": "<p>heh see this is why I said we ought to work off master first ;)</p>",
        "id": 127209348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519543
    },
    {
        "content": "<p>(no big thing)</p>",
        "id": 127209368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519569
    },
    {
        "content": "<p>yes and I agree</p>",
        "id": 127209423,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519618
    },
    {
        "content": "<p>if you want I can make the thing point to master until we are in a stable point</p>",
        "id": 127209432,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I landed the changes on master, if you want to try that first</p>",
        "id": 127209623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519892
    },
    {
        "content": "<p>I can also issue a new release though</p>",
        "id": 127209630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527519904
    },
    {
        "content": "<p>can try with master</p>",
        "id": 127209690,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527519994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> the thing compiled</p>",
        "id": 127210993,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527521967
    },
    {
        "content": "<p>you want me to provide a PR depending on github? or you want now the cut the release?</p>",
        "id": 127210999,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527521981
    },
    {
        "content": "<p>I'll cut the release <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 127211222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527522314
    },
    {
        "content": "<p>done</p>",
        "id": 127211239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527522346
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a></p>",
        "id": 127211434,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527522700
    },
    {
        "content": "<p>nice job <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span></p>",
        "id": 127211516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527522824
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so ... didn't get quite correct if you wanted to do something about compare or not</p>",
        "id": 127211579,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527522894
    },
    {
        "content": "<p>and what about dump_mir</p>",
        "id": 127211583,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527522900
    },
    {
        "content": "<p>but I'm ready to start something else on top of this</p>",
        "id": 127211606,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527522930
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I think <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and I were saying let's do the compare-mode in a separate PR</p>",
        "id": 127211670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523051
    },
    {
        "content": "<p>but I think it's a good thing to get started with</p>",
        "id": 127211673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523055
    },
    {
        "content": "<p>cool</p>",
        "id": 127211676,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527523068
    },
    {
        "content": "<p>better to do that or dump-mir?</p>",
        "id": 127211677,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527523075
    },
    {
        "content": "<p>if I had my druthers, you would do compare-mode and <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> would do dump-mir :)</p>",
        "id": 127211719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523103
    },
    {
        "content": "<p>or vice versa :)</p>",
        "id": 127211720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523105
    },
    {
        "content": "<p>because both seem imp't</p>",
        "id": 127211721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523109
    },
    {
        "content": "<p>but really either is good</p>",
        "id": 127211725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523126
    },
    {
        "content": "<p>sounds good</p>",
        "id": 127211792,
        "sender_full_name": "qmx",
        "timestamp": 1527523213
    },
    {
        "content": "<p>tell me more about dump-mir</p>",
        "id": 127211798,
        "sender_full_name": "qmx",
        "timestamp": 1527523231
    },
    {
        "content": "<p>well the idea is to take the add'l bits of <code>Output</code> and integrate them into the <code>-Zdump-mir</code> output</p>",
        "id": 127211812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523290
    },
    {
        "content": "<blockquote>\n<p>because both seem imp't</p>\n</blockquote>\n<p>to clarify: both seem imp't, and yet they seem like nicely splittable tasks</p>",
        "id": 127211815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523304
    },
    {
        "content": "<p>right now I thikn the <code>Output</code> data is mostly organized by <code>Point</code></p>",
        "id": 127211866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523336
    },
    {
        "content": "<p>this is because it's a useful way to \"read\" it as a human</p>",
        "id": 127211877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523348
    },
    {
        "content": "<p>so when you say additional data, is all the contents of the hashmaps?</p>",
        "id": 127211896,
        "sender_full_name": "qmx",
        "timestamp": 1527523397
    },
    {
        "content": "<p>is there an expected format for dumping all that info?</p>",
        "id": 127211898,
        "sender_full_name": "qmx",
        "timestamp": 1527523406
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> if you look at <a href=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-cce7509357d5dcbb2c3bd87102f77005R162\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-cce7509357d5dcbb2c3bd87102f77005R162\">my old commit</a>, you can see what I was doing before</p>",
        "id": 127211990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523540
    },
    {
        "content": "<p>it's kind of up to you</p>",
        "id": 127211994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523543
    },
    {
        "content": "<p>the format I mean</p>",
        "id": 127211998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523548
    },
    {
        "content": "<p>in particular <a href=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-cce7509357d5dcbb2c3bd87102f77005R275\" target=\"_blank\" title=\"https://github.com/nikomatsakis/rust/commit/5656960ea0b62624341a10c175ab9d154a5fe94c#diff-cce7509357d5dcbb2c3bd87102f77005R275\">down here</a>, when we dump out a given location,</p>",
        "id": 127212041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523569
    },
    {
        "content": "<p>I was also going over the start/mid points associated with it,</p>",
        "id": 127212042,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523583
    },
    {
        "content": "<p>and dumping out the related tuples</p>",
        "id": 127212045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527523586
    },
    {
        "content": "<p>aaaah, now it makes more sense</p>",
        "id": 127212054,
        "sender_full_name": "qmx",
        "timestamp": 1527523635
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127212055,
        "sender_full_name": "qmx",
        "timestamp": 1527523640
    },
    {
        "content": "<blockquote>\n<p>what other usage in practice you see the either crate having?</p>\n</blockquote>\n<p>Futures, for the same reason. Although I think they reimplemented it internally <span class=\"emoji emoji-1f937\" title=\"shrug\">:shrug:</span></p>",
        "id": 127212107,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527523732
    },
    {
        "content": "<p>probably unaware of the crate</p>",
        "id": 127212324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527524129
    },
    {
        "content": "<p>or just didn't feel like adding the dep I guess</p>",
        "id": 127212370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527524189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> there are tidy errors, fixes here <a href=\"https://github.com/qmx/rust/compare/make_borrowck_use_output...qmx:fix-tidy?expand=1\" target=\"_blank\" title=\"https://github.com/qmx/rust/compare/make_borrowck_use_output...qmx:fix-tidy?expand=1\">https://github.com/qmx/rust/compare/make_borrowck_use_output...qmx:fix-tidy?expand=1</a></p>",
        "id": 127213480,
        "sender_full_name": "qmx",
        "timestamp": 1527526500
    },
    {
        "content": "<p>already pushed</p>",
        "id": 127213531,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527526573
    },
    {
        "content": "<p>(The 51133 PR fails CI because of tidy and I think the <span class=\"emoji emoji-1f438\" title=\"frog\">:frog:</span> whitelisting)</p>",
        "id": 127213532,
        "sender_full_name": "lqd",
        "timestamp": 1527526574
    },
    {
        "content": "<p>yeah, I've already pushed fixes</p>",
        "id": 127213533,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527526588
    },
    {
        "content": "<p>awesome</p>",
        "id": 127213538,
        "sender_full_name": "qmx",
        "timestamp": 1527526614
    },
    {
        "content": "<p>:) (sorry, backlogging on my phone)</p>",
        "id": 127213539,
        "sender_full_name": "lqd",
        "timestamp": 1527526615
    },
    {
        "content": "<p>no worries, thanks for letting me know :)</p>",
        "id": 127213548,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527526636
    },
    {
        "content": "<p>gonna read the log of this channel now :)</p>",
        "id": 127213550,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527526651
    },
    {
        "content": "<blockquote>\n<p>if I had my druthers, you would do compare-mode and <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> would do dump-mir :)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span>  sounds like a plan</p>",
        "id": 127213613,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527526752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> have you tried this PR on some inputs?</p>",
        "id": 127215353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527530248
    },
    {
        "content": "<p>e.g., did you try running on <code>issue-47680.rs</code> from the polonius repo etc?</p>",
        "id": 127215354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527530256
    },
    {
        "content": "<p>it looks basically right to me</p>",
        "id": 127215355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527530260
    },
    {
        "content": "<p>i think I'll build and try it out though</p>",
        "id": 127215365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527530273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yes, I've tried it</p>",
        "id": 127215893,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531118
    },
    {
        "content": "<p>let me run it again for you</p>",
        "id": 127215931,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531123
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@archlinux oss]$ rustc +stage1 polonius/inputs/issue-47680/issue-47680.rs\nerror[E0499]: cannot borrow `*temp` as mutable more than once at a time\n  --&gt; polonius/inputs/issue-47680/issue-47680.rs:13:15\n   |\n13 |         match temp.maybe_next() {\n   |               ^^^^\n   |               |\n   |               mutable borrow starts here in previous iteration of loop\n   |               borrow later used here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0499`.\n[santiago@archlinux oss]$ rustc +stage1 -Zpolonius polonius/inputs/issue-47680/issue-47680.rs\n[santiago@archlinux oss]$\n</pre></div>",
        "id": 127215946,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I presume that test has <code>#![feature(nll)]</code>?</p>",
        "id": 127216006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527531265
    },
    {
        "content": "<p>if so, nice!</p>",
        "id": 127216007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527531266
    },
    {
        "content": "<p>yes</p>",
        "id": 127216083,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531395
    },
    {
        "content": "<p>can we do something like <code>#![feature(nll, polonius)]</code></p>",
        "id": 127216161,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531510
    },
    {
        "content": "<p>or something like that?</p>",
        "id": 127216163,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531515
    },
    {
        "content": "<p>unsure if makes sense</p>",
        "id": 127216165,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531521
    },
    {
        "content": "<p>would be a temporary thing</p>",
        "id": 127216168,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527531525
    },
    {
        "content": "<p>we could... but yeah I'm not sure if it makes sense</p>",
        "id": 127216185,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527531551
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> seems like <a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a> is green, needs an r+</p>",
        "id": 127225225,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527550035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> interestingly, my local runs reveal a number of tests passing that ought not to — the failures look very familiar. But I don't think it's the fault of the integration, more that it's revealing bugs in polonius. One thing I was thinking: we should add a way to select the polonius algorithm. I was considering maybe an environment var? <code>RUSTC_POLONIUS_ALGORITHM=naive</code> or something? (Something rustc could check)</p>",
        "id": 127225854,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527551460
    },
    {
        "content": "<p>or we could make it <code>-Zpolonius=foo</code>, but that makes compare-mode more complex</p>",
        "id": 127225859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527551473
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span>)</p>",
        "id": 127225860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527551478
    },
    {
        "content": "<p>yes</p>",
        "id": 127225912,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527551584
    },
    {
        "content": "<p>I can add that tomorrow I guess</p>",
        "id": 127225915,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527551599
    },
    {
        "content": "<p>will ping you tomorrow</p>",
        "id": 127225916,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527551607
    },
    {
        "content": "<p>I'm gonna r+ as is since the queue is kinda empty right now</p>",
        "id": 127226221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527552274
    },
    {
        "content": "<p>can always do as a follow up</p>",
        "id": 127226226,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527552304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> you can see my comment earler in this thread</p>",
        "id": 127240182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582086
    },
    {
        "content": "<p>but actually before that</p>",
        "id": 127240190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582111
    },
    {
        "content": "<p>there is some work needed on polonius side</p>",
        "id": 127240191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582116
    },
    {
        "content": "<p>nothing too major :)</p>",
        "id": 127240230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582127
    },
    {
        "content": "<p>I think we need some function to take an algorithm string and select an algorithm</p>",
        "id": 127240238,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582147
    },
    {
        "content": "<p>currently we have two definitions of the <code>Algorithm</code> enum, <a href=\"https://github.com/rust-lang-nursery/polonius/blob/5b6a3bcaec2984419d16d5a36622b425ee2cd5ef/src/cli.rs#L13-L30\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/blob/5b6a3bcaec2984419d16d5a36622b425ee2cd5ef/src/cli.rs#L13-L30\">one of them in the cli interface</a> and <a href=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/output/mod.rs#L20-L25\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/blob/master/polonius-engine/src/output/mod.rs#L20-L25\">one in the engine itself</a></p>",
        "id": 127240258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582217
    },
    {
        "content": "<p>I think we should just have one — in the engine</p>",
        "id": 127240260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582221
    },
    {
        "content": "<p>and it should have a <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\"><code>FromStr</code> impl</a></p>",
        "id": 127240263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582228
    },
    {
        "content": "<p>used by the CLI</p>",
        "id": 127240268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582240
    },
    {
        "content": "<p>I'm not 100% sure what is needed to make clap integration work mega smoothly but presumably it is possible</p>",
        "id": 127240309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582251
    },
    {
        "content": "<p>(this is what that <code>arg_enum!</code> macro does)</p>",
        "id": 127240317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582266
    },
    {
        "content": "<p><a href=\"https://docs.rs/clap/2.31.2/clap/macro.arg_enum.html\" target=\"_blank\" title=\"https://docs.rs/clap/2.31.2/clap/macro.arg_enum.html\">docs for <code>arg_enum!</code></a></p>",
        "id": 127240343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582338
    },
    {
        "content": "<p>(we could then add another variant to do comparisons)</p>",
        "id": 127240348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527582349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I will try to fix this the selection of the algorithm.</p>",
        "id": 127240495,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527582553
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> think you or <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> would have time to rebase <a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a> ? if not, I can do it</p>",
        "id": 127243462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527587547
    },
    {
        "content": "<p>in fact, maybe I just <em>will</em> do it</p>",
        "id": 127243468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527587565
    },
    {
        "content": "<p>seeing as the queue is kinda empty right now :)</p>",
        "id": 127243471,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527587572
    },
    {
        "content": "<p>(force pushed)</p>",
        "id": 127243547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527587660
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> A pull request that removes<code>AlgorithmOpt</code> enum: <a href=\"https://github.com/rust-lang-nursery/polonius/pull/60\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/60\">https://github.com/rust-lang-nursery/polonius/pull/60</a>. I have also added an option to select the algorithm via <code>POLONIUS_ALGORITHM</code> environment variable.</p>",
        "id": 127244677,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527589796
    },
    {
        "content": "<p>Next steps: add <code>Compare</code> to the <code>Algorithm</code> enum that compares errors reported by <code>DatafrogOpt</code> with the ones reported by <code>Naive</code>. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what you would like to happen when computed errors differ? Panic with <code>bug!</code>?</p>",
        "id": 127245022,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527590394
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> think you or <span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> would have time to rebase <a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a> ? if not, I can do it</p>\n</blockquote>\n<p>rebased</p>",
        "id": 127247646,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527594934
    },
    {
        "content": "<p>oh, niko did it already</p>",
        "id": 127247653,
        "sender_full_name": "qmx",
        "timestamp": 1527594949
    },
    {
        "content": "<p>ahh ok</p>",
        "id": 127247654,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527594953
    },
    {
        "content": "<p>nevermind then</p>",
        "id": 127247656,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527594956
    },
    {
        "content": "<p>...and we're back to the bottom of the queue <span class=\"emoji emoji-1f622\" title=\"cry\">:cry:</span></p>",
        "id": 127247709,
        "sender_full_name": "qmx",
        "timestamp": 1527595018
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> no more :)</p>",
        "id": 127248527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527596275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> how goes btw ?</p>",
        "id": 127248798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527596612
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> </p>\n<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> how goes btw ?</p>\n</blockquote>\n<p>Currently writing the code that compares errors returned by Naïve and Optimized.</p>",
        "id": 127249384,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527597491
    },
    {
        "content": "<p>I am thinking to report differences via <code>error!</code> and then <code>panic!</code>.</p>",
        "id": 127249397,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527597533
    },
    {
        "content": "<p>seems fine for now; we could also make the computation return a <code>Result</code></p>",
        "id": 127249474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527597614
    },
    {
        "content": "<p>If computation returned a <code>Result</code>, I would expect that result to be either the borrow checking succeeded or a list of borrow errors.</p>",
        "id": 127249583,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527597824
    },
    {
        "content": "<p>In other words, I think that it would be confusing API to use <code>Err</code> to indicate a bug.</p>",
        "id": 127249634,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527597872
    },
    {
        "content": "<p>well, you might expect that, but that doesn't have to be what it is ;)</p>",
        "id": 127249636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527597875
    },
    {
        "content": "<p>but I think panic is fine for now</p>",
        "id": 127249645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527597905
    },
    {
        "content": "<p>and .. probably the right thing</p>",
        "id": 127249654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527597919
    },
    {
        "content": "<p>argh <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a> needs rebase again</p>",
        "id": 127250724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527599381
    },
    {
        "content": "<p>it's just Cargo.lock conflicts I think</p>",
        "id": 127250728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527599391
    },
    {
        "content": "<p>are you able to do it?</p>",
        "id": 127250729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527599392
    },
    {
        "content": "<p>ohh saw you were pinging me here</p>",
        "id": 127251570,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600403
    },
    {
        "content": "<p>starting to read this :)</p>",
        "id": 127251573,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what happened now <a href=\"https://github.com/rust-lang/rust/pull/51133#issuecomment-392775090\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133#issuecomment-392775090\">https://github.com/rust-lang/rust/pull/51133#issuecomment-392775090</a> ?</p>",
        "id": 127251747,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> looks like an error when merging the cargo.lock ?</p>",
        "id": 127251768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600692
    },
    {
        "content": "<blockquote>\n<p>[00:01:16] error: failed to parse lock file at: /checkout/src/Cargo.lock</p>\n</blockquote>",
        "id": 127251772,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600703
    },
    {
        "content": "<p>usually what I do when there is a Cargo.lock conflict is to rerun <code>x.py</code></p>",
        "id": 127251813,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600726
    },
    {
        "content": "<p>which will re-generate it</p>",
        "id": 127251816,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600731
    },
    {
        "content": "<p>I usually kill it before it gets too far :)</p>",
        "id": 127251817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600736
    },
    {
        "content": "<p>you may need to do that</p>",
        "id": 127251818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600741
    },
    {
        "content": "<p>though I don't see any obvious problem</p>",
        "id": 127251829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600784
    },
    {
        "content": "<p>but I get the same error locally</p>",
        "id": 127251885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527600880
    },
    {
        "content": "<p>yes</p>",
        "id": 127251898,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600918
    },
    {
        "content": "<p>was surprised that git rebase master didn't fail</p>",
        "id": 127251901,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600929
    },
    {
        "content": "<p>I mean, it was what I did when merging</p>",
        "id": 127251905,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600952
    },
    {
        "content": "<p>checkout the lock and rerun x.py</p>",
        "id": 127251906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600959
    },
    {
        "content": "<p>but this last merge conflicts didn't conflict locally and for some reason did the wrong thing</p>",
        "id": 127251952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600975
    },
    {
        "content": "<p>anyway ... fixing it</p>",
        "id": 127251954,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600979
    },
    {
        "content": "<p>I just pushed a fix..</p>",
        "id": 127251979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527601026
    },
    {
        "content": "<p>(sorry, race condition)</p>",
        "id": 127251988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527601032
    },
    {
        "content": "<p>it seems like something went wrong with rustc-hash</p>",
        "id": 127251990,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527601036
    },
    {
        "content": "<p>hehe</p>",
        "id": 127251991,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527601038
    },
    {
        "content": "<p>no worries</p>",
        "id": 127251993,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527601041
    },
    {
        "content": "<p>the way I fixed was: <code>git checkout $(git merge-base rust-lang/master HEAD) Cargo.lock</code> and then rerun <code>x.py build</code></p>",
        "id": 127252005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527601071
    },
    {
        "content": "<p>which generated that diff :)</p>",
        "id": 127252008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527601074
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127252052,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527601093
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I have opened a pull request: <a href=\"https://github.com/rust-lang-nursery/polonius/pull/64\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/64\">https://github.com/rust-lang-nursery/polonius/pull/64</a>.</p>",
        "id": 127255129,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527605000
    },
    {
        "content": "<p>I need to catch my train now, I'll address issues tomorrow morning (if you have any).</p>",
        "id": 127255141,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527605038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I guess we need to mark the last checkbox here <a href=\"https://github.com/rust-lang-nursery/polonius/issues/44\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/issues/44\">https://github.com/rust-lang-nursery/polonius/issues/44</a></p>",
        "id": 127261505,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527612765
    },
    {
        "content": "<blockquote>\n<p>Rustc has DatafrogOpt <a href=\"https://github.com/rust-lang/rust/blob/20af72b943527d584df4b99e157262f9b297b3e4/src/librustc_mir/borrow_check/nll/mod.rs#L159-L162\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/20af72b943527d584df4b99e157262f9b297b3e4/src/librustc_mir/borrow_check/nll/mod.rs#L159-L162\">hard coded</a>. We could change it to something like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">algorithm</span>: <span class=\"nc\">Algorithm</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">env</span>::<span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s\">&quot;POLONIUS_ALGORITHM&quot;</span><span class=\"p\">).</span><span class=\"n\">unwrap_or</span><span class=\"p\">(</span><span class=\"s\">&quot;DatafrogOpt&quot;</span><span class=\"p\">).</span><span class=\"n\">into</span><span class=\"p\">();</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>However, for that we need a new version of polonius-engine to be released and it probably would make sense to land first all PRs that are currently in flight.</p>\n</blockquote>\n<p>I think we should do this. What is in flight that we ought to wait for?</p>",
        "id": 127311865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527692562
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> and <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>)</p>",
        "id": 127311877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527692575
    },
    {
        "content": "<p>issuing a new version of polonius is easy enough</p>",
        "id": 127311888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527692587
    },
    {
        "content": "<p>I think it needs this <a href=\"https://github.com/rust-lang-nursery/polonius/pull/64\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/64\">https://github.com/rust-lang-nursery/polonius/pull/64</a> ?</p>",
        "id": 127312074,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527692770
    },
    {
        "content": "<p>can check better a bit later</p>",
        "id": 127312078,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527692775
    },
    {
        "content": "<p>or maybe just compare-mode ? otherwise #51133 has landed yesterday (maybe that was the only one we do need)</p>",
        "id": 127312097,
        "sender_full_name": "lqd",
        "timestamp": 1527692808
    },
    {
        "content": "<blockquote>\n<p>I think it needs this <a href=\"https://github.com/rust-lang-nursery/polonius/pull/64\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/64\">https://github.com/rust-lang-nursery/polonius/pull/64</a> ?</p>\n</blockquote>\n<p>I just merged that :)</p>",
        "id": 127312194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527692894
    },
    {
        "content": "<blockquote>\n<p>I think we should do this. What is in flight that we ought to wait for?</p>\n</blockquote>\n<p>I can implement this now.</p>",
        "id": 127312214,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527692915
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>I think it needs this <a href=\"https://github.com/rust-lang-nursery/polonius/pull/64\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/64\">https://github.com/rust-lang-nursery/polonius/pull/64</a> ?</p>\n</blockquote>\n<p>I just merged that :)</p>\n</blockquote>\n<p>It seems that I did something stupid, which caused this pull request to result in a merge error and non-compiling code.</p>",
        "id": 127314252,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695171
    },
    {
        "content": "<p>My attempt to fix it: <a href=\"https://github.com/rust-lang-nursery/polonius/pull/66\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/66\">https://github.com/rust-lang-nursery/polonius/pull/66</a>.</p>",
        "id": 127314256,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695186
    },
    {
        "content": "<p>By the way, don't we have CI enabled for the Polonius repository to prevent such errors?</p>",
        "id": 127314284,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695242
    },
    {
        "content": "<p>we do <span class=\"emoji emoji-1f914\" title=\"thinking face\">:thinking_face:</span> that is weird</p>",
        "id": 127314366,
        "sender_full_name": "lqd",
        "timestamp": 1527695318
    },
    {
        "content": "<p>well, it tests pre-merge I think</p>",
        "id": 127314404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527695389
    },
    {
        "content": "<p>rarely makes a difference</p>",
        "id": 127314408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527695396
    },
    {
        "content": "<p>but sometimes it does!</p>",
        "id": 127314409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527695399
    },
    {
        "content": "<p>I've debated about setting up bors-ng or some such thing</p>",
        "id": 127314460,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527695408
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> we no longer need the <code>variants</code> fn?</p>",
        "id": 127314478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527695441
    },
    {
        "content": "<blockquote>\n<p>or maybe just compare-mode ? otherwise #51133 has landed yesterday (maybe that was the only one we do need)</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/51138\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51138\">https://github.com/rust-lang/rust/pull/51138</a></p>",
        "id": 127314549,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527695523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  We do need the <code>variants</code>fn, and we do have one: <a href=\"https://github.com/rust-lang-nursery/polonius/pull/66/files#diff-29826c0b0a8116137a1af9348ecacac9R30\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/66/files#diff-29826c0b0a8116137a1af9348ecacac9R30\">https://github.com/rust-lang-nursery/polonius/pull/66/files#diff-29826c0b0a8116137a1af9348ecacac9R30</a></p>",
        "id": 127314562,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695540
    },
    {
        "content": "<p>if you're referring to that didn't land yet</p>",
        "id": 127314563,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527695540
    },
    {
        "content": "<p>Currently,  in the Polonius master we have two of them.</p>",
        "id": 127314577,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695579
    },
    {
        "content": "<p>Sorry, for the mess.</p>",
        "id": 127314656,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695643
    },
    {
        "content": "<p>no worries, I should have done my due diligence before merging :)</p>",
        "id": 127314668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527695667
    },
    {
        "content": "<p>I merged #66, <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span></p>",
        "id": 127314684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527695696
    },
    {
        "content": "<p>Cool, I am testing locally <a href=\"https://github.com/vakaras/rust/commit/e08b0b1d44c7f8345b33e20fdda5484acc37515d\" target=\"_blank\" title=\"https://github.com/vakaras/rust/commit/e08b0b1d44c7f8345b33e20fdda5484acc37515d\">my code</a> that allows choosing Polonius algorithm via env variable against Polonius master.</p>",
        "id": 127314824,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695858
    },
    {
        "content": "<p>Once I am convinced that it works, I will open a pull request.</p>",
        "id": 127314907,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527695937
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/pull/51138\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51138\">https://github.com/rust-lang/rust/pull/51138</a></p>",
        "id": 127317760,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527700024
    },
    {
        "content": "<p>force pushed again, because there were merge conflicts after something was merged on master</p>",
        "id": 127317773,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527700053
    },
    {
        "content": "<p>it need to be r+ again, right?</p>",
        "id": 127317828,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527700091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> errors in <a href=\"https://github.com/rust-lang/rust/pull/51138\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51138\">https://github.com/rust-lang/rust/pull/51138</a></p>",
        "id": 127318311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527700700
    },
    {
        "content": "<p>will check</p>",
        "id": 127318774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527701297
    },
    {
        "content": "<p>unsure how this happened</p>",
        "id": 127318821,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527701367
    },
    {
        "content": "<p>checking</p>",
        "id": 127318824,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527701372
    },
    {
        "content": "<p>my changes are lost, I have no idea what's going on with <code>git rebase</code> yesterday something similar happened</p>",
        "id": 127318919,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527701457
    },
    {
        "content": "<p>anyway fixing it</p>",
        "id": 127318922,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527701461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> it should be fine now</p>",
        "id": 127319378,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527701893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> I guess that <a href=\"https://github.com/rust-lang/rust/pull/51246\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51246\">https://github.com/rust-lang/rust/pull/51246</a> needs a new release of polonius?</p>",
        "id": 127369652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527783148
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 127370557,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527784300
    },
    {
        "content": "<p>I'll just make it 0.5.0</p>",
        "id": 127371494,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527785559
    },
    {
        "content": "<p>I can't be bothered to tell if this is semver compat or what</p>",
        "id": 127371495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527785565
    },
    {
        "content": "<p>presumably not since we are modifying enums etc</p>",
        "id": 127371509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527785590
    },
    {
        "content": "<p>below 1.0 doesn't matter :P</p>",
        "id": 127371762,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527785915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> would need to change Cargo.toml and Cargo.lock now from that PR</p>",
        "id": 127371775,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527785937
    },
    {
        "content": "<blockquote>\n<p>I'll just make it 0.5.0</p>\n</blockquote>\n<p>Thank you!</p>",
        "id": 127371891,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527786092
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> would need to change Cargo.toml and Cargo.lock now from that PR</p>\n</blockquote>\n<p>Updating…</p>",
        "id": 127371895,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527786100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> published</p>",
        "id": 127372282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527786635
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> published</p>\n</blockquote>\n<p>Thanks! I have updated the pull request. However, I am still compiling to test if it works.</p>",
        "id": 127372306,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527786673
    },
    {
        "content": "<p>Should take around 30 minutes.</p>",
        "id": 127372313,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527786696
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Selecting the algorithm seems to work:</p>\n<div class=\"codehilite\"><pre><span></span>POLONIUS_ALGORITHM=compare RUST_LOG=rustc_mir::borrow_check::nll=trace  ./x.py test --stage 1 --compare-mode polonius -- src/test/ui/nll/issue-47680.rs\n...\nstderr:\n------------------------------------------\n INFO 2018-05-31T17:35:31Z: rustc_mir::borrow_check::nll: Using Polonius algorithm: Compare\n INFO 2018-05-31T17:35:31Z: rustc_mir::borrow_check::nll: Using Polonius algorithm: Compare\n\n------------------------------------------\n...\n</pre></div>",
        "id": 127373639,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527788298
    },
    {
        "content": "<p>However, I still have not found a way how to get logs from <code>polonius_engine</code>.</p>",
        "id": 127373648,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527788332
    },
    {
        "content": "<p>(This command <code>POLONIUS_ALGORITHM=compare RUST_LOG=polonius_engine::output=trace  ./x.py test --stage 1 --compare-mode polonius -- src/test/ui/nll/issue-47680.rs</code> does not output anything.)</p>",
        "id": 127373756,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527788514
    },
    {
        "content": "<blockquote>\n<p>(This command <code>POLONIUS_ALGORITHM=compare RUST_LOG=polonius_engine::output=trace  ./x.py test --stage 1 --compare-mode polonius -- src/test/ui/nll/issue-47680.rs</code> does not output anything.)</p>\n</blockquote>\n<p>huh, that's confusing</p>",
        "id": 127373801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527788540
    },
    {
        "content": "<p>maybe we should ping sfackler</p>",
        "id": 127373804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527788548
    },
    {
        "content": "<blockquote>\n<p>maybe we should ping sfackler</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Just to be clear: by anything I mean that it does not output any logs from <code>polonius_engine</code>.</p>",
        "id": 127374021,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527788785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> btw <a href=\"https://github.com/rust-lang/rust/pull/51246\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51246\">https://github.com/rust-lang/rust/pull/51246</a> is ready for r+ right ?</p>",
        "id": 127540041,
        "sender_full_name": "lqd",
        "timestamp": 1528110784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I have addressed the Niko comment about log levels, so yes.</p>",
        "id": 127540696,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1528112149
    },
    {
        "content": "<p>sweet <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 127540733,
        "sender_full_name": "lqd",
        "timestamp": 1528112163
    },
    {
        "content": "<p>(btw if people end up using this PR to compare between the different polonius variants, please note that <code>-a compare</code> compares _errors_ today, not <code>borrow_live_at</code> which we know can differ between Naive and Opt, and that Naive doesn't produce errors today)</p>",
        "id": 127547986,
        "sender_full_name": "lqd",
        "timestamp": 1528123411
    },
    {
        "content": "<p>I thought we fixed that</p>",
        "id": 127548066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528123514
    },
    {
        "content": "<p>that is, fixed Naive to produce errors?</p>",
        "id": 127548068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1528123519
    },
    {
        "content": "<p>IIRC it was both Opt and LocInsensitive</p>",
        "id": 127548085,
        "sender_full_name": "lqd",
        "timestamp": 1528123561
    },
    {
        "content": "<p>but ia0 did have a branch when he worked during the impl days IIRC</p>",
        "id": 127548148,
        "sender_full_name": "lqd",
        "timestamp": 1528123609
    },
    {
        "content": "<p>which was <a href=\"https://github.com/ia0/polonius/commit/f6398b278c5542368faf1de748cc8c62dc1ba350\" target=\"_blank\" title=\"https://github.com/ia0/polonius/commit/f6398b278c5542368faf1de748cc8c62dc1ba350\">here</a></p>",
        "id": 127548234,
        "sender_full_name": "lqd",
        "timestamp": 1528123702
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> what was your x.py test command line for when you generated the list of -Zpolonius failures ? .ie. how does one add the -Zpolonius ? :D</p>",
        "id": 127606896,
        "sender_full_name": "lqd",
        "timestamp": 1528213373
    },
    {
        "content": "<p>what I did at that time was to change the code locally :)</p>",
        "id": 127606970,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528213479
    },
    {
        "content": "<p>haha</p>",
        "id": 127607000,
        "sender_full_name": "lqd",
        "timestamp": 1528213522
    },
    {
        "content": "<p>but now we merged my PR and <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span>'s one I guess we can do --compare-mode polonius</p>",
        "id": 127607011,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1528213537
    },
    {
        "content": "<p>nice, I'll try that then, when my build is finished</p>",
        "id": 127607097,
        "sender_full_name": "lqd",
        "timestamp": 1528213618
    }
]