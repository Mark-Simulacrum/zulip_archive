[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> if you want to chat, I'm around now btw</p>",
        "id": 126747222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526647620
    },
    {
        "content": "<p>okay I'll be ready in a minute</p>",
        "id": 126747242,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526647666
    },
    {
        "content": "<p>okay, few more delays but here now.</p>",
        "id": 126747569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648097
    },
    {
        "content": "<p>we doing this via Zulip, or via some video chat system?</p>",
        "id": 126747579,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648113
    },
    {
        "content": "<p>either way</p>",
        "id": 126747581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648118
    },
    {
        "content": "<p>might as well chat over zulip I guess</p>",
        "id": 126747583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648125
    },
    {
        "content": "<p>won't be able to include digressions about James Bond over zulip</p>",
        "id": 126747587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648136
    },
    {
        "content": "<p>oh, you <em>can</em></p>",
        "id": 126747589,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648142
    },
    {
        "content": "<p>/me found a new podcast</p>",
        "id": 126747593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648155
    },
    {
        "content": "<p>:)</p>",
        "id": 126747594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648159
    },
    {
        "content": "<p>Anyway</p>",
        "id": 126747595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648161
    },
    {
        "content": "<p>well, so, what I wanted to say is that I was talking to aturon about the Rust 2018 Edition plans overall</p>",
        "id": 126747642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648182
    },
    {
        "content": "<p>and when I step back for second</p>",
        "id": 126747645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648190
    },
    {
        "content": "<p>if we consider location-invariant NLL</p>",
        "id": 126747651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648207
    },
    {
        "content": "<p>it is essentially \"feature complete\", from a certain perspective :)</p>",
        "id": 126747657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648222
    },
    {
        "content": "<p>heh</p>",
        "id": 126747661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648226
    },
    {
        "content": "<p>it still needs polish: perf isn't where we'd like it to be, and diagnostics are uncertain</p>",
        "id": 126747667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648239
    },
    {
        "content": "<p>plus there are some lingering soundness bugs</p>",
        "id": 126747668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648244
    },
    {
        "content": "<p>Thats with an r+ on the changes to MIR codegen for match?</p>",
        "id": 126747670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648246
    },
    {
        "content": "<p>yes, assuming that</p>",
        "id": 126747671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648251
    },
    {
        "content": "<p>diagnostics are the big remaining thing I bet, okay</p>",
        "id": 126747675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648263
    },
    {
        "content": "<p>which reminds me that I was thinking more about that RFC, and wanted to double check what you were thinking, but that's a topic for another day :)</p>",
        "id": 126747677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648269
    },
    {
        "content": "<p>but interesting to decide whehter that would trump further perforamcne investgation</p>",
        "id": 126747680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648279
    },
    {
        "content": "<p>right, so, from a risk management perspective</p>",
        "id": 126747681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648279
    },
    {
        "content": "<blockquote>\n<p>but interesting to decide whehter that would trump further perforamcne investgation</p>\n</blockquote>\n<p>I did some profiling this morning, but let's revisit it in a sec</p>",
        "id": 126747723,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648291
    },
    {
        "content": "<p>anyway, from a risk mgmt perspetive, Rust 2018 could ship with NLL if we solved diagnostics + perf</p>",
        "id": 126747732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648311
    },
    {
        "content": "<p>er, with \"location-insensitive NLL\"</p>",
        "id": 126747735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648319
    },
    {
        "content": "<p>heh</p>",
        "id": 126747736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648321
    },
    {
        "content": "<p>needs a snappier name</p>",
        "id": 126747737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648326
    },
    {
        "content": "<p>and then we could follow up with an improved precision analysis at some point :)</p>",
        "id": 126747745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648344
    },
    {
        "content": "<p>this is  basically the same conclusion you and I reached</p>",
        "id": 126747749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648353
    },
    {
        "content": "<p>but I am re-reaching it :)</p>",
        "id": 126747750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648356
    },
    {
        "content": "<p>might be good to have a succinct summary of which cases it regressed</p>",
        "id": 126747752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648360
    },
    {
        "content": "<p>or</p>",
        "id": 126747754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648366
    },
    {
        "content": "<p>hm</p>",
        "id": 126747755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648368
    },
    {
        "content": "<p>do you mean, where does location sensitive matter?</p>",
        "id": 126747756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648374
    },
    {
        "content": "<p>I was going to say \"for the release notes\"</p>",
        "id": 126747757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648377
    },
    {
        "content": "<p>yeah</p>",
        "id": 126747759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648381
    },
    {
        "content": "<p>but actually</p>",
        "id": 126747760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648383
    },
    {
        "content": "<p>who cares</p>",
        "id": 126747761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648385
    },
    {
        "content": "<p>both of those :)</p>",
        "id": 126747762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648390
    },
    {
        "content": "<p>why draw attention to our short comings!</p>",
        "id": 126747763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648392
    },
    {
        "content": "<p>the answer is roughly \"the <code>get_default</code> example\"</p>",
        "id": 126747764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648398
    },
    {
        "content": "<p>specifically, cases where you take a borrow and return it</p>",
        "id": 126747814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648406
    },
    {
        "content": "<p>but only conditionally</p>",
        "id": 126747819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648416
    },
    {
        "content": "<p>and along other paths, the borrow ends</p>",
        "id": 126747822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648422
    },
    {
        "content": "<p>right, you removed that test outright</p>",
        "id": 126747828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648434
    },
    {
        "content": "<p>yeah</p>",
        "id": 126747833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648444
    },
    {
        "content": "<p>there are other examples I think</p>",
        "id": 126747834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648447
    },
    {
        "content": "<p>it doesn't <em>have</em> to leave the fn</p>",
        "id": 126747836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648450
    },
    {
        "content": "<p>but I think in practice that's where this arises the most</p>",
        "id": 126747839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648455
    },
    {
        "content": "<p>probably vec-push-ref too</p>",
        "id": 126747841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648461
    },
    {
        "content": "<p>vec-push-ref is this one:</p>",
        "id": 126747851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648471
    },
    {
        "content": "<p>hmm did we not have a NLL unit test for vec-push-ref in the rust repo</p>",
        "id": 126747861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648506
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>fn foo() {\n  let mut v = vec![];\n  let p = 22;\n  let x = &amp;p;\n  if true {\n    v.push(x);\n  } else {\n    //  in here, `p` is not borrowed\n  }\n  use(v);\n}\n</pre></div>",
        "id": 126747865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648515
    },
    {
        "content": "<blockquote>\n<p>hmm did we not have a NLL unit test for vec-push-ref in the rust repo</p>\n</blockquote>\n<p>I was just wondering the same</p>",
        "id": 126747917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648529
    },
    {
        "content": "<p>oh hmm</p>",
        "id": 126747918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648531
    },
    {
        "content": "<p>should double check</p>",
        "id": 126747920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648541
    },
    {
        "content": "<p>or maybe it still works for some reason</p>",
        "id": 126747923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648545
    },
    {
        "content": "<p>(I don't think we  could have, becasue your PR did not touch any such test)</p>",
        "id": 126747925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648550
    },
    {
        "content": "<p>I will have to check</p>",
        "id": 126747929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648558
    },
    {
        "content": "<p>oh that's a solid alteratnive theory</p>",
        "id": 126747930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648560
    },
    {
        "content": "<p>:)</p>",
        "id": 126747933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648563
    },
    {
        "content": "<p>anyway I definitely agree that — for our own purposes —</p>",
        "id": 126747936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648572
    },
    {
        "content": "<p>a good write-up of which patterns we support</p>",
        "id": 126747940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648575
    },
    {
        "content": "<p>and which we expect to support in the future</p>",
        "id": 126747943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648579
    },
    {
        "content": "<p>is a good idea</p>",
        "id": 126747944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648580
    },
    {
        "content": "<p>but not maybe <em>top</em> priority</p>",
        "id": 126747955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648587
    },
    {
        "content": "<p>anyway, so the question then comes to how to divide up the effort between \"polish location insensitive\" vs \"continue pushing on the newer analysis\"</p>",
        "id": 126747966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648612
    },
    {
        "content": "<p>yeah. Improving the expected user experience</p>",
        "id": 126747967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648613
    },
    {
        "content": "<p>takes priority over documenting the far-future expectations</p>",
        "id": 126747973,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648626
    },
    {
        "content": "<p>I of course want to ensure we do the latter ... but <span class=\"user-mention\" data-user-id=\"116010\">@Aaron Turon</span>  pointed out that, really, would it be so bad if we didn't? I am forced to admit that .. it doesn't matter that much</p>",
        "id": 126747981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648640
    },
    {
        "content": "<p>Well, if we have volunteers excited about working on the latter</p>",
        "id": 126748027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648660
    },
    {
        "content": "<p>then let them?</p>",
        "id": 126748029,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648661
    },
    {
        "content": "<p>yeah so roughly that is what I felt like:</p>",
        "id": 126748031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648682
    },
    {
        "content": "<p>let's you + I (at least) focus on polish</p>",
        "id": 126748033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648688
    },
    {
        "content": "<p>hopefully we can pull in people to focus on the top priority items, even if they are new people</p>",
        "id": 126748034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648689
    },
    {
        "content": "<p>and try to spin up tasks</p>",
        "id": 126748035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648691
    },
    {
        "content": "<p>yeah I'm down with that</p>",
        "id": 126748037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648699
    },
    {
        "content": "<p>and others can choose to do whichever strikes their fancy</p>",
        "id": 126748044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648707
    },
    {
        "content": "<p>I suispect e.g. <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> might be up for tackling some polish-like tasks :)</p>",
        "id": 126748049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648741
    },
    {
        "content": "<p>/me waves to <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span></p>",
        "id": 126748051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648752
    },
    {
        "content": "<p>I would like to try to see how much further I can go with rustc integration before next tuesday mtg</p>",
        "id": 126748089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648763
    },
    {
        "content": "<p>I certainly could do that.</p>",
        "id": 126748096,
        "sender_full_name": "davidtwco",
        "timestamp": 1526648768
    },
    {
        "content": "<p>yeah I still think rustc integration is key</p>",
        "id": 126748102,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648792
    },
    {
        "content": "<p>otherwise I feel like Polonius can't make progress</p>",
        "id": 126748106,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648799
    },
    {
        "content": "<p>I do have some high-level Q's for you on that topic</p>",
        "id": 126748116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648828
    },
    {
        "content": "<p>but lets tie off this discussion first</p>",
        "id": 126748117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648833
    },
    {
        "content": "<p>ok so, we could turn to a bit more detailed look at what polish means</p>",
        "id": 126748128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648859
    },
    {
        "content": "<p>maybe need to actually do that review of the ui/*.nll.stderr files?</p>",
        "id": 126748181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648898
    },
    {
        "content": "<p>yeah, I saw two things:</p>",
        "id": 126748188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648910
    },
    {
        "content": "<p>categorize into \"soundness bug\", \"ux bug\", \"all is well\" ?</p>",
        "id": 126748195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648918
    },
    {
        "content": "<p>1. look at a profile (I'm doing that)<br>\n2. review the stderr files</p>",
        "id": 126748201,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526648927
    },
    {
        "content": "<p>oh right, polish include perf issues</p>",
        "id": 126748207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648941
    },
    {
        "content": "<p>okay lets talk about the profile first then</p>",
        "id": 126748224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526648961
    },
    {
        "content": "<blockquote>\n<p>okay lets talk about the profile first tehn</p>\n</blockquote>\n<p>ok so here is what I see</p>",
        "id": 126748288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649005
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>lunch-box. perf focus -F 99 &#39;{rustc_mir}&#39; --tree-callees --min-percent 10 --relative | c++filt\nMatcher    : {rustc_mir}\nMatches    : 2268\nNot Matches: 2802\nPercentage : 100\nTime       : 22.91s at 99 Hz\n\nTree\n| matched `{rustc_mir}` (100% total, 1% self)\n: | rustc_mir::borrow_check::nll::compute_regions (33% total, 0% self)\n: : | rustc_mir::borrow_check::nll::type_check::type_check_internal (29% total, 0% self)\n: : : | rustc_mir::borrow_check::nll::type_check::type_check::{{closure}} (10% total, 0% self)\n: : : : | rustc_mir::borrow_check::nll::type_check::liveness::generate (10% total, 1% self)\n: | rustc::infer::InferCtxtBuilder::enter (29% total, 0% self)\n: : | rustc::ty::context::tls::with_related_context (29% total, 0% self)\n: : : | rustc_mir::borrow_check::do_mir_borrowck (29% total, 0% self)\n: : : : | &lt;rustc_mir::dataflow::at_location::FlowAtLocation&lt;BD&gt; as rustc_mir::dataflow::at_location::FlowsAtLocation&gt;::reconstruct_statement_effect (19% total, 0% self)\n: | rustc_mir::dataflow::do_dataflow (25% total, 0% self)\n: : | _ZN9rustc_mir8dataflow5impls7borrows7Borrows35kill_loans_out_of_scope_at_location17h0e83141d89a6718dE.llvm.6243250854293542925 (12% total, 1% self)\n: : : | rustc_mir::borrow_check::nll::region_infer::RegionInferenceContext::region_contains_point (11% total, 2% self)\n: : | &lt;rustc_mir::dataflow::impls::borrows::Borrows&lt;&#39;a, &#39;gcx, &#39;tcx&gt; as rustc_mir::dataflow::BitDenotation&gt;::statement_effect (10% total, 0% self)\n: : : | _ZN9rustc_mir8dataflow5impls7borrows7Borrows35kill_loans_out_of_scope_at_location17h0e83141d89a6718dE.llvm.6243250854293542925 (10% total, 0% self)\n</pre></div>",
        "id": 126748302,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649023
    },
    {
        "content": "<p>let me summarize what you are looking at</p>",
        "id": 126748308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649033
    },
    {
        "content": "<p>first off, that's clap :)</p>",
        "id": 126748309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649036
    },
    {
        "content": "<p>those %ages are the %age of total time <em>just for borrowck</em></p>",
        "id": 126748318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649048
    },
    {
        "content": "<p>first observation:</p>",
        "id": 126748335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649058
    },
    {
        "content": "<p>region propagation is not on there</p>",
        "id": 126748345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649065
    },
    {
        "content": "<p>you would see it under <code>compute_regions</code></p>",
        "id": 126748348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649070
    },
    {
        "content": "<p>but making things location invariant basically removed it from the profile</p>",
        "id": 126748352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649078
    },
    {
        "content": "<p>therefore, <em>just</em> doing SEME alone wouldn't help much</p>",
        "id": 126748354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649085
    },
    {
        "content": "<p>wait</p>",
        "id": 126748356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649088
    },
    {
        "content": "<p>now i'm confused</p>",
        "id": 126748357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649093
    },
    {
        "content": "<p>or okay</p>",
        "id": 126748361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649101
    },
    {
        "content": "<p>I would see it <em>under</em> compute_regions</p>",
        "id": 126748364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649105
    },
    {
        "content": "<p>never mind then</p>",
        "id": 126748369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649108
    },
    {
        "content": "<p>okay so <code>type_check_internal</code> is where all the time in <code>compute_regions</code> is going, right?</p>",
        "id": 126748425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649142
    },
    {
        "content": "<p>here is a more concise variant:</p>\n<div class=\"codehilite\"><pre><span></span>lunch-box. perf focus -F 99 &#39;{do_mir_borrowck}&#39; --tree-callees --min-percent 10 --tree-max-depth 2 --relative | c++filt\nMatcher    : {do_mir_borrowck}\nMatches    : 2086\nNot Matches: 2984\nPercentage : 100\nTime       : 21.07s at 99 Hz\n\nTree\n| matched `{do_mir_borrowck}` (100% total, 0% self)\n: | rustc_mir::borrow_check::nll::compute_regions (36% total, 0% self)\n: : | rustc_mir::borrow_check::nll::type_check::type_check_internal (31% total, 0% self) [...]\n: | rustc_mir::dataflow::do_dataflow (27% total, 0% self)\n: : | _ZN9rustc_mir8dataflow5impls7borrows7Borrows35kill_loans_out_of_scope_at_location17h0e83141d89a6718dE.llvm.6243250854293542925 (13% total, 1% self) [...]\n: : | &lt;rustc_mir::dataflow::impls::borrows::Borrows&lt;&#39;a, &#39;gcx, &#39;tcx&gt; as rustc_mir::dataflow::BitDenotation&gt;::statement_effect (11% total, 0% self) [...]\n: | &lt;rustc_mir::dataflow::at_location::FlowAtLocation&lt;BD&gt; as rustc_mir::dataflow::at_location::FlowsAtLocation&gt;::reconstruct_statement_effect (21% total, 0% self)\n: : | &lt;rustc_mir::dataflow::impls::borrows::Borrows&lt;&#39;a, &#39;gcx, &#39;tcx&gt; as rustc_mir::dataflow::BitDenotation&gt;::statement_effect (10% total, 0% self) [...]\n: : | _ZN9rustc_mir8dataflow5impls7borrows7Borrows35kill_loans_out_of_scope_at_location17h0e83141d89a6718dE.llvm.6243250854293542925 (10% total, 1% self) [...]\n</pre></div>",
        "id": 126748432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649154
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> right</p>",
        "id": 126748435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649159
    },
    {
        "content": "<p>and, within there</p>",
        "id": 126748441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649165
    },
    {
        "content": "<p>well some of it is some closure :)I have to see what that is</p>",
        "id": 126748449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649183
    },
    {
        "content": "<p>and the rest is the liveness computation</p>",
        "id": 126748452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649186
    },
    {
        "content": "<p>I haven't drilled down  deeper there</p>",
        "id": 126748453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649192
    },
    {
        "content": "<p>that said, most of the work on liveness is</p>",
        "id": 126748455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649202
    },
    {
        "content": "<p>well, I don't know, but it's probably figuring out the dropck types</p>",
        "id": 126748458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649209
    },
    {
        "content": "<p>that's what it was before</p>",
        "id": 126748467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649222
    },
    {
        "content": "<p>I have to see if there is a smarter way to do that (I suspect .. maybe)</p>",
        "id": 126748473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649237
    },
    {
        "content": "<p>but you're saying that's hurting us more under NLL than it does under AST-borrowck ?</p>",
        "id": 126748474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649238
    },
    {
        "content": "<p>yeah, I'm not 100% sure why</p>",
        "id": 126748516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649251
    },
    {
        "content": "<p>hmm.</p>",
        "id": 126748519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649255
    },
    {
        "content": "<p>any idea how much more?</p>",
        "id": 126748523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649265
    },
    {
        "content": "<p>there were reasons that were fixed</p>",
        "id": 126748524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649265
    },
    {
        "content": "<p>but I don't know what the new reasons are</p>",
        "id": 126748525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649270
    },
    {
        "content": "<p>mm I don't know I can try to find out</p>",
        "id": 126748528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649279
    },
    {
        "content": "<p>that said, it's interesting to look at the rest of the profile too</p>",
        "id": 126748530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649287
    },
    {
        "content": "<p>right</p>",
        "id": 126748532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649290
    },
    {
        "content": "<p>e.g. 27% is <code>do_dataflow</code></p>",
        "id": 126748533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649292
    },
    {
        "content": "<p>I jut don't want us wasting time trying to optimize something</p>",
        "id": 126748535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649300
    },
    {
        "content": "<p>of that a whopping 13% is killing loans :)</p>",
        "id": 126748536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649300
    },
    {
        "content": "<p>that is already known to also be slow under AST-borrowck</p>",
        "id": 126748544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649307
    },
    {
        "content": "<p>(i mean, it'd be great to make both faster)</p>",
        "id": 126748551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649313
    },
    {
        "content": "<p>yeah, I will try to compare</p>",
        "id": 126748552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649314
    },
    {
        "content": "<p>but last time I looked, and I forget the details <em>why</em>, it was harder in NLL that AST</p>",
        "id": 126748560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649326
    },
    {
        "content": "<p>okay</p>",
        "id": 126748568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649341
    },
    {
        "content": "<p>so, rest of profile</p>",
        "id": 126748573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649346
    },
    {
        "content": "<p>I will try to get a better answer why that is though :P</p>",
        "id": 126748574,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649346
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 126748577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649352
    },
    {
        "content": "<p><code>reconstruct_statement_effect</code> is the other big one</p>",
        "id": 126748583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649360
    },
    {
        "content": "<p>yeah. let me go skim over those two</p>",
        "id": 126748664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649429
    },
    {
        "content": "<p>I wrote them (or some version of them) so maybe I have some insight into their slowness</p>",
        "id": 126748685,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649450
    },
    {
        "content": "<p>it may just be that we are calling it a lot?</p>",
        "id": 126748701,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649466
    },
    {
        "content": "<p>perf can also give pretty detailed look</p>",
        "id": 126748703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649478
    },
    {
        "content": "<p>e.g., per line</p>",
        "id": 126748705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649480
    },
    {
        "content": "<p>so that <em>might</em> show something</p>",
        "id": 126748743,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649485
    },
    {
        "content": "<p>we also haven't made any attempt to adjust the order we visit the Basic blocks, right?</p>",
        "id": 126748770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649521
    },
    {
        "content": "<p>i.e. isn't RPO supposed to actually perform better on the average?</p>",
        "id": 126748788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649544
    },
    {
        "content": "<p>maybe that is not worth attacking first</p>",
        "id": 126748794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649554
    },
    {
        "content": "<p>(oh and of course that depends on the analysis direction...)</p>",
        "id": 126748809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649581
    },
    {
        "content": "<p>we have not, but .. probably not?</p>",
        "id": 126748810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649583
    },
    {
        "content": "<p>as an aside, it's instructive to look at <span class=\"user-mention\" data-user-id=\"116609\">@Frank McSherry</span>'s datafrog</p>",
        "id": 126748822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649598
    },
    {
        "content": "<p>we might get wins from using that for these other computations too</p>",
        "id": 126748867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649608
    },
    {
        "content": "<p>it works rather differently but seems to be pretty fast :)</p>",
        "id": 126748873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649614
    },
    {
        "content": "<p>anyway I don't quite know what to get out of this yet</p>",
        "id": 126748880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649630
    },
    {
        "content": "<p>we need to do more of a deep dive probably</p>",
        "id": 126748881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649637
    },
    {
        "content": "<p>I could imagine splitting up the two problems</p>",
        "id": 126748883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649643
    },
    {
        "content": "<p>or even 3</p>",
        "id": 126748886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649650
    },
    {
        "content": "<p>that is:</p>",
        "id": 126748887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649652
    },
    {
        "content": "<ul>\n<li><code>liveness::generate</code> (probably me)</li>\n<li><code>kill_loans_out_of_scope</code></li>\n<li><code>reconstruct_statement_effect</code></li>\n</ul>",
        "id": 126748907,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649677
    },
    {
        "content": "<p>those are the 3 hot spots</p>",
        "id": 126748910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649680
    },
    {
        "content": "<p>I'm not sure in each case whether we want to optimize the <em>function itself</em> or the <em>way we are using it</em></p>",
        "id": 126748914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649697
    },
    {
        "content": "<p>usually the latter pays more than the former :)</p>",
        "id": 126748916,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649702
    },
    {
        "content": "<p>...but it depends :)</p>",
        "id": 126748921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649711
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span>, are you interested in trying to do some <a href=\"#narrow/stream/122657-wg-nll/subject/making-more-plans/near/126748887\" title=\"#narrow/stream/122657-wg-nll/subject/making-more-plans/near/126748887\">performance optimization</a>?)</p>",
        "id": 126749154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649896
    },
    {
        "content": "<p>I'm actually a little surprised that statement_effect shows up in profile</p>",
        "id": 126749171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649907
    },
    {
        "content": "<p>because the intention, if I remember right</p>",
        "id": 126749177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649917
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> actually, looking a bit more closely...</p>",
        "id": 126749196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649948
    },
    {
        "content": "<p>is that you should be calling that O(#stmt) times: Once to build the gen-kill sets</p>",
        "id": 126749198,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649952
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm happy to try anything.</p>",
        "id": 126749202,
        "sender_full_name": "davidtwco",
        "timestamp": 1526649956
    },
    {
        "content": "<p><code>kill_loans_out_of_scope_at_location</code> is hotter than I thought</p>",
        "id": 126749204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649960
    },
    {
        "content": "<p>and a second time after Dataflow is solved, to actually do precise analysis within eac basic block</p>",
        "id": 126749248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649969
    },
    {
        "content": "<p>overall it accounts for 22% of <strong>total execution time</strong> (not just borrowck)</p>",
        "id": 126749249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649970
    },
    {
        "content": "<p>borrowck is 41%</p>",
        "id": 126749255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649987
    },
    {
        "content": "<p>so that's fully <strong>half</strong></p>",
        "id": 126749257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649991
    },
    {
        "content": "<p>hmm</p>",
        "id": 126749259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526649995
    },
    {
        "content": "<p>kind of ridiculous</p>",
        "id": 126749260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526649995
    },
    {
        "content": "<p>ah, it goes over every borrow</p>",
        "id": 126749278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650029
    },
    {
        "content": "<p>we call that function a lot</p>",
        "id": 126749279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650032
    },
    {
        "content": "<p>yeah I mean I remember I wrote it quick-n-dirty</p>",
        "id": 126749287,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650042
    },
    {
        "content": "<p>well</p>",
        "id": 126749288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650044
    },
    {
        "content": "<p>O(n) times again</p>",
        "id": 126749290,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650048
    },
    {
        "content": "<p>i.e. it should not be part of the iterative dataflow solving</p>",
        "id": 126749299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650070
    },
    {
        "content": "<p>well</p>",
        "id": 126749308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650080
    },
    {
        "content": "<p>but it <em>is</em> part of the walk we do later</p>",
        "id": 126749345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650083
    },
    {
        "content": "<p>i.e., as we walk down the list of statements</p>",
        "id": 126749352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650086
    },
    {
        "content": "<p>if I'm not mistaken</p>",
        "id": 126749356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650089
    },
    {
        "content": "<p>that is, it may be the reason that <code>reconstruct_statement_effect</code> is so expensive</p>",
        "id": 126749364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650099
    },
    {
        "content": "<p>sure</p>",
        "id": 126749366,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650100
    },
    {
        "content": "<p>I guess part of my problem</p>",
        "id": 126749370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650112
    },
    {
        "content": "<p>is that I don't know how many iterations dataflow is taking to converge</p>",
        "id": 126749375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650122
    },
    {
        "content": "<p>in the bad cases</p>",
        "id": 126749378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650129
    },
    {
        "content": "<p>indeed it is called by the various <code>_effect</code> routines</p>",
        "id": 126749387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650140
    },
    {
        "content": "<p>so my initial thinking of \"where is the dataflow solving taking up time\"</p>",
        "id": 126749392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650146
    },
    {
        "content": "<p>may be an incorrect intuition</p>",
        "id": 126749396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650151
    },
    {
        "content": "<p>I can probably tell you that</p>",
        "id": 126749403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650159
    },
    {
        "content": "<p>that is, I can look where the <code>effect</code> functions are being called from</p>",
        "id": 126749410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650167
    },
    {
        "content": "<p>well</p>",
        "id": 126749473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650206
    },
    {
        "content": "<p>is walk_cfg in the profile?</p>",
        "id": 126749476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650211
    },
    {
        "content": "<p>it appears that they are called about 2/3 directly from <code>do_mir_borrowck</code> (or something inlined into it) and 1/3 from <code>do_dataflow</code></p>",
        "id": 126749482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650238
    },
    {
        "content": "<p>walk-cfg is not in the profile</p>",
        "id": 126749487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650251
    },
    {
        "content": "<p>okay</p>",
        "id": 126749497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650262
    },
    {
        "content": "<p>because <code>fn dataflow </code> is in two parts</p>",
        "id": 126749507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650269
    },
    {
        "content": "<p><code>build_sets()</code> makes the entry gen and kill  sets</p>",
        "id": 126749513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650278
    },
    {
        "content": "<p>but it is not iterative</p>",
        "id": 126749523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650293
    },
    {
        "content": "<p>and then <code>propagate()</code> does the iterative solution to the dataflow eqns.</p>",
        "id": 126749540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650310
    },
    {
        "content": "<p>so my guess is that you'll see <code>build_sets()</code> in the profile.</p>",
        "id": 126749598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650332
    },
    {
        "content": "<p>just because that construction is so darn expensive?</p>",
        "id": 126749610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650345
    },
    {
        "content": "<p>mm 0%</p>",
        "id": 126749612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650356
    },
    {
        "content": "<p>but sometimes inlining makes that misleading</p>",
        "id": 126749615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650362
    },
    {
        "content": "<p>hmm</p>",
        "id": 126749616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650366
    },
    {
        "content": "<p>or else my tool is broken somehow ;)</p>",
        "id": 126749633,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650382
    },
    {
        "content": "<p>but it seems to be yielding coherent results</p>",
        "id": 126749641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650387
    },
    {
        "content": "<p>is your full stack trace showing the call chain to<code> _effect</code> visible somewhere?</p>",
        "id": 126749661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@David Wood</span> well this seems pretty important; I'm not 100% sure what to do yet, it's going to bear some digging around.</p>",
        "id": 126749662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650415
    },
    {
        "content": "<blockquote>\n<p>is your full stack trace showing the call chain to<code> _effect</code> visible somewhere?</p>\n</blockquote>\n<p>I can paste it</p>",
        "id": 126749667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650425
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>lunch-box. perf focus -F 99 &#39;{statement_effect}&#39; --tree-callers | c++filt\nMatcher    : {statement_effect}\nMatches    : 696\nNot Matches: 4374\nPercentage : 13\nTime       : 7.03s at 99 Hz\n\nTree\n| matched `{statement_effect}` (13% total, 0% self)\n: | rustc_mir::borrow_check::do_mir_borrowck (8% total, 0% self)\n: : | rustc::ty::context::tls::with_related_context (8% total, 0% self)\n: : : | rustc::infer::InferCtxtBuilder::enter (8% total, 0% self)\n: : : : | rustc_mir::borrow_check::mir_borrowck (8% total, 0% self)\n: : : : : | [unknown] (8% total, 8% self)\n: : : : : | rustc::ty::maps::&lt;impl rustc::ty::maps::config::QueryConfig&lt;&#39;tcx&gt; for rustc::ty::maps::queries::mir_borrowck&lt;&#39;tcx&gt;&gt;::compute (0% total, 0% self)\n: : : : : : | [unknown] (0% total, 0% self)\n: | rustc_mir::dataflow::do_dataflow (4% total, 0% self)\n: : | rustc_mir::borrow_check::do_mir_borrowck (4% total, 0% self)\n: : : | rustc::ty::context::tls::with_related_context (4% total, 0% self)\n: : : : | [unknown] (4% total, 4% self)\n: : : : | rustc::infer::InferCtxtBuilder::enter (0% total, 0% self)\n: : : : : | [unknown] (0% total, 0% self)\n: | rustc_mir::dataflow::do_dataflow (0% total, 0% self)\n: : | rustc_mir::borrow_check::do_mir_borrowck (0% total, 0% self)\n: : : | rustc::ty::context::tls::with_related_context (0% total, 0% self)\n: : : : | rustc::infer::InferCtxtBuilder::enter (0% total, 0% self)\n: : : : : | [unknown] (0% total, 0% self)\n</pre></div>",
        "id": 126749722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650443
    },
    {
        "content": "<p>oh I see, it looks like a direct call from <code>do_dataflow</code> to <code>xxx_effect</code>, right?</p>",
        "id": 126749733,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650451
    },
    {
        "content": "<p>yes</p>",
        "id": 126749736,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650456
    },
    {
        "content": "<p>yeah that sounds like inlining to me</p>",
        "id": 126749740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650461
    },
    {
        "content": "<p>sometimes I go and add <code>#[inline(never)]</code></p>",
        "id": 126749744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650466
    },
    {
        "content": "<p>when doing this sort of thing</p>",
        "id": 126749748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650469
    },
    {
        "content": "<p>to various big fns</p>",
        "id": 126749750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650471
    },
    {
        "content": "<p>where inlining looks unlikely to be profitable</p>",
        "id": 126749753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650475
    },
    {
        "content": "<p>LLVM really likes to inline</p>",
        "id": 126749756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650479
    },
    {
        "content": "<p>anyway, I suspect we should spin off a distinct thread focused on this and carry on independently</p>",
        "id": 126749777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650509
    },
    {
        "content": "<p>and turn to the diagnostics topic?</p>",
        "id": 126749782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650515
    },
    {
        "content": "<p>okay sure</p>",
        "id": 126749786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650518
    },
    {
        "content": "<p>ok...</p>",
        "id": 126749860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650586
    },
    {
        "content": "<p>so as for diagnostics</p>",
        "id": 126749862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650593
    },
    {
        "content": "<p>I guess the main job is that we need to categorize?</p>",
        "id": 126749867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650598
    },
    {
        "content": "<p>yeah whoops that's a task I failed to follow up on</p>",
        "id": 126749891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650650
    },
    {
        "content": "<p>how many such files are there anyway</p>",
        "id": 126749903,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650651
    },
    {
        "content": "<p>answer: 169</p>",
        "id": 126749919,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650675
    },
    {
        "content": "<p>I see 171</p>",
        "id": 126749965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650689
    },
    {
        "content": "<p>ok</p>",
        "id": 126749968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650691
    },
    {
        "content": "<p>but close enough</p>",
        "id": 126749970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650693
    },
    {
        "content": "<p>well, yeah</p>",
        "id": 126749971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650695
    },
    {
        "content": "<p>this is some random branch of mine</p>",
        "id": 126749973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650698
    },
    {
        "content": "<p>after this meeting I have to go run errands</p>",
        "id": 126749984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650726
    },
    {
        "content": "<p>otherwise I'd offer to immediately make the todo list or this</p>",
        "id": 126749988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650739
    },
    {
        "content": "<p>well it's easy enough to massage those into a todo list</p>",
        "id": 126750006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650771
    },
    {
        "content": "<p>I can do that</p>",
        "id": 126750008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650772
    },
    {
        "content": "<p>the thing I'm mostly interested in</p>",
        "id": 126750011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650776
    },
    {
        "content": "<p>is <em>how</em> we expect to categorize</p>",
        "id": 126750014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650782
    },
    {
        "content": "<p>i.e., are there a fixed set of buckets?</p>",
        "id": 126750019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650791
    },
    {
        "content": "<p>I think you had a sample before</p>",
        "id": 126750022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650795
    },
    {
        "content": "<p>\"soundness bug\", \"ux bug\", \"all is well\"</p>",
        "id": 126750121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650881
    },
    {
        "content": "<p>hmm</p>",
        "id": 126750189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650930
    },
    {
        "content": "<p>(of course deviation from AST-borrowck does not immediately imply a bug. )</p>",
        "id": 126750190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650931
    },
    {
        "content": "<p>sounds decent :)</p>",
        "id": 126750193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650933
    },
    {
        "content": "<p>we may want one more category?</p>",
        "id": 126750198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650939
    },
    {
        "content": "<p>can you think of more categories?</p>",
        "id": 126750201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650940
    },
    {
        "content": "<p>or maybe that's a good start</p>",
        "id": 126750202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650942
    },
    {
        "content": "<p>I can imagine wanting to drill into ux bug a bit more</p>",
        "id": 126750206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650948
    },
    {
        "content": "<p>or subdivisions of interest?</p>",
        "id": 126750207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650950
    },
    {
        "content": "<p>okay</p>",
        "id": 126750211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650953
    },
    {
        "content": "<p>e.g., \"MY EYES\" vs \"meh\"</p>",
        "id": 126750212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650954
    },
    {
        "content": "<p>yes</p>",
        "id": 126750214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650956
    },
    {
        "content": "<p>maybe like \"wrong span\" vs \"totally illegible\"</p>",
        "id": 126750219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526650965
    },
    {
        "content": "<p>missing suggestions and tips will be a common thing</p>",
        "id": 126750224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650976
    },
    {
        "content": "<p>but I'm not sure we want to categorize in this way</p>",
        "id": 126750236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650981
    },
    {
        "content": "<p>that is, it might be more like <em>how important is that suggestion/span/etc</em></p>",
        "id": 126750243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526650990
    },
    {
        "content": "<p>(that's kind of a judgement call, obviously)</p>",
        "id": 126750249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651000
    },
    {
        "content": "<p>I kind of like just weighing importance, as you put it in \"MY EYES\" vs \"meh\"</p>",
        "id": 126750253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651009
    },
    {
        "content": "<p>yeah</p>",
        "id": 126750258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651014
    },
    {
        "content": "<p>yeah its subjective, but okay</p>",
        "id": 126750260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651017
    },
    {
        "content": "<p>I think that might be best</p>",
        "id": 126750261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651017
    },
    {
        "content": "<p>seems like that is ultimately what matters</p>",
        "id": 126750264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651021
    },
    {
        "content": "<p>I guess subjectivity is troublesome</p>",
        "id": 126750266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651023
    },
    {
        "content": "<p>well it's just a first scratch</p>",
        "id": 126750270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651029
    },
    {
        "content": "<p>because that means it may be hard to delegrate?</p>",
        "id": 126750271,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651029
    },
    {
        "content": "<p>I mean we get the most important</p>",
        "id": 126750274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651034
    },
    {
        "content": "<p>then we go to the rest</p>",
        "id": 126750276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651036
    },
    {
        "content": "<p>and re-triage</p>",
        "id": 126750277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651037
    },
    {
        "content": "<p>rinse, repeat until we run out of time <span class=\"emoji emoji-1f389\" title=\"party popper\">:party_popper:</span></p>",
        "id": 126750320,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651046
    },
    {
        "content": "<p>well</p>",
        "id": 126750322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651051
    },
    {
        "content": "<p>how do we catch cases erroneously categorized as \"meh\"</p>",
        "id": 126750331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651065
    },
    {
        "content": "<p>in the second pass?</p>",
        "id": 126750339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651073
    },
    {
        "content": "<p>without reviewing  all UX bugs all the time?</p>",
        "id": 126750340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651075
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 126750345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651080
    },
    {
        "content": "<p>I guess i'm imagining we don't :)</p>",
        "id": 126750350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651090
    },
    {
        "content": "<p>hmm  I guess if there are a finite number of passes</p>",
        "id": 126750351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651094
    },
    {
        "content": "<p>until we've dealt with the rest</p>",
        "id": 126750352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651095
    },
    {
        "content": "<p>then its not really an issue, okay</p>",
        "id": 126750355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651101
    },
    {
        "content": "<p>or maybe somebody reports it separately and we decide to promote</p>",
        "id": 126750364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651105
    },
    {
        "content": "<p>ultimately i'm not that worried, I feel like the main thing is we have to pick some stuff to focus on <em>somehow</em></p>",
        "id": 126750371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651116
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 126750379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651136
    },
    {
        "content": "<p>oh there is one more .... maybe work item ...</p>",
        "id": 126750431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651164
    },
    {
        "content": "<p>we probably should port more (all?) compile-fail tests to <code>ui/</code></p>",
        "id": 126750447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651182
    },
    {
        "content": "<p>in order that they get subject to this .nll.stderr thing</p>",
        "id": 126750452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651195
    },
    {
        "content": "<p>or is that a waste of effort ?</p>",
        "id": 126750458,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651205
    },
    {
        "content": "<p>hmm</p>",
        "id": 126750478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651245
    },
    {
        "content": "<p>not sure</p>",
        "id": 126750479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651246
    },
    {
        "content": "<p>it would probably (vastly?) increase the workload in terms of number of .nll.stderr files to review</p>",
        "id": 126750481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651247
    },
    {
        "content": "<p>but maybe we put it off :)</p>",
        "id": 126750482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651249
    },
    {
        "content": "<p>idea:</p>",
        "id": 126750487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651253
    },
    {
        "content": "<p>schedule 30 min or 1 hour</p>",
        "id": 126750488,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651258
    },
    {
        "content": "<p>maybe monday</p>",
        "id": 126750491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651259
    },
    {
        "content": "<p>to do this together</p>",
        "id": 126750495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651263
    },
    {
        "content": "<p>i.e., to get started</p>",
        "id": 126750502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651270
    },
    {
        "content": "<p>see if we can come up with criteria</p>",
        "id": 126750505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651274
    },
    {
        "content": "<p>I suspect after we do a few</p>",
        "id": 126750508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651277
    },
    {
        "content": "<p>you first since there's only ~170</p>",
        "id": 126750509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651278
    },
    {
        "content": "<p>it'll be clearer</p>",
        "id": 126750510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651278
    },
    {
        "content": "<p>oh</p>",
        "id": 126750552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651285
    },
    {
        "content": "<p>I see now</p>",
        "id": 126750556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651287
    },
    {
        "content": "<p>there aren't <em>that</em> many, it's true</p>",
        "id": 126750560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651296
    },
    {
        "content": "<p>you're not intending that we finish in that time frame</p>",
        "id": 126750565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651299
    },
    {
        "content": "<p>necessarily</p>",
        "id": 126750568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651300
    },
    {
        "content": "<p>right</p>",
        "id": 126750571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651302
    },
    {
        "content": "<p>just that we better understand the task at hand</p>",
        "id": 126750573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651307
    },
    {
        "content": "<p>yeah I figured after we do like 5-10</p>",
        "id": 126750576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651314
    },
    {
        "content": "<p>okay. I'm good with that plan, I think.</p>",
        "id": 126750577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651316
    },
    {
        "content": "<p>we can do it live over zulip even and others can kibbitz if they like :)</p>",
        "id": 126750585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651327
    },
    {
        "content": "<p>beautful</p>",
        "id": 126750598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651353
    },
    {
        "content": "<p>make a separate topic for each .nll.stderr file. ;)</p>",
        "id": 126750604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651370
    },
    {
        "content": "<p>okay</p>",
        "id": 126750608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651378
    },
    {
        "content": "<p>so that's performance and diagnostics</p>",
        "id": 126750611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651385
    },
    {
        "content": "<p>(let me go schedule a meeting for monday now, let you decide whether it works for you)</p>",
        "id": 126750660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651406
    },
    {
        "content": "<p>I think (my) monday morning is basically free</p>",
        "id": 126750673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1526651425
    },
    {
        "content": "<p>oh</p>",
        "id": 126750674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651428
    },
    {
        "content": "<p>monday is a holiday here. Logan's daycare is closed</p>",
        "id": 126750678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651435
    },
    {
        "content": "<p>The evening might work</p>",
        "id": 126750687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651458
    },
    {
        "content": "<p>would you be around at 1pm your time?</p>",
        "id": 126750699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651483
    },
    {
        "content": "<p>(then again, maybe this is not a good subject matter for a 10pm meeting)</p>",
        "id": 126750711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651506
    },
    {
        "content": "<p>or wait</p>",
        "id": 126750713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651509
    },
    {
        "content": "<p>time zone math!</p>",
        "id": 126750715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651515
    },
    {
        "content": "<p>I'll just put something down and let you react to it</p>",
        "id": 126750761,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651540
    },
    {
        "content": "<p>okay</p>",
        "id": 126750780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1526651589
    },
    {
        "content": "<p>One thing in the context of error messages: Ideally NLL will reduce the total number of compiler errors that people get. You could say that a (temporary) regression in the quality of the errors they do get will be amortized by less overall errors experienced.</p>",
        "id": 126836515,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1526832916
    }
]