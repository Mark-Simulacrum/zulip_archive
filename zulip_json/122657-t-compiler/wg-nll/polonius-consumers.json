[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Have you decided what you would like to do with Polonius naïve implementation? I am asking because for our Viper verifier it would be much easier to consume the output of a less optimized version.</p>",
        "id": 127220383,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527539701
    },
    {
        "content": "<p>On the other hand, if we tried to consume the optimized version, we would need to come up with its (at least informal) soundness proof, which, probably, would be quite useful…</p>",
        "id": 127220491,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527539968
    },
    {
        "content": "<p>JFYI: in both cases, we would need access to <code>subset</code> and <code>borrow_live_at</code> facts.</p>",
        "id": 127220604,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527540206
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Have you decided what you would like to do with Polonius naïve implementation? I am asking because for our Viper verifier it would be much easier to consume the output of a less optimized version.</p>\n</blockquote>\n<p>I intend to keep the naive version around permanently as the \"canonical\" rules — then the optimizer would be intendd to be equal, and any discrepancy is likely a bug</p>",
        "id": 127221330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527541730
    },
    {
        "content": "<p>I'm not sure if that fulfills your requirements or not =)</p>",
        "id": 127221342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527541756
    },
    {
        "content": "<blockquote>\n<p>I intend to keep the naive version around permanently as the \"canonical\" rules — then the optimizer would be intendd to be equal, and any discrepancy is likely a bug</p>\n</blockquote>\n<p>Then just hook up quickcheck to test that arbitrary inputs are always equal...</p>",
        "id": 127221489,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1527542038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> I had that in mind too...</p>",
        "id": 127221552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527542136
    },
    {
        "content": "<p>though I'm not sure how good quicktest would be at finding discrepancies</p>",
        "id": 127221556,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527542152
    },
    {
        "content": "<p>maybe</p>",
        "id": 127221557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527542153
    },
    {
        "content": "<blockquote>\n<p>I'm not sure if that fulfills your requirements or not =)</p>\n</blockquote>\n<p>Yes, this sounds good. We just need a way to invoke Polonius naïve and obtain computed facts. Would it be acceptable for you to have a query that allows obtaining <code>AllFacts</code> and have a Polonius to expose a function that accepts <code>AllFacts</code> and returns <code>subset</code> with <code>loan_live_at</code>?</p>",
        "id": 127239189,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527580284
    },
    {
        "content": "<blockquote>\n<p>I intend to keep the naive version around permanently as the \"canonical\" rules — then the optimizer would be intendd to be equal, and any discrepancy is likely a bug</p>\n</blockquote>\n<p>So, for this, we need to extend the test compare mode to support comparing the optimized Polonius algorithm with the naïve one, right?</p>",
        "id": 127239628,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527581098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Is this something you are already working on? I think that implementing this would be a nice opportunity for me to get familiar with the integration code. <span class=\"emoji emoji-263a\" title=\"relaxed\">:relaxed:</span></p>",
        "id": 127239640,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527581160
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> well, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and I had been discussing the idea of having a way to select the algorithm that rustc uses as an extension to <a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a>; maybe we could add that, and then add an algorithm to polonius that compares naive-to-opt</p>",
        "id": 127239950,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527581708
    },
    {
        "content": "<blockquote>\n<p>though I'm not sure how good quicktest would be at finding discrepancies</p>\n</blockquote>\n<p>I think we could try to adapt something like <a href=\"https://www.youtube.com/watch?v=x4JUUlO9XGY&amp;index=4&amp;list=PLn9KV9ACrihipDiOuU8uEDNLuoMjmmLlX\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=x4JUUlO9XGY&amp;index=4&amp;list=PLn9KV9ACrihipDiOuU8uEDNLuoMjmmLlX\">this</a>.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"x4JUUlO9XGY\" href=\"https://www.youtube.com/watch?v=x4JUUlO9XGY&amp;index=4&amp;list=PLn9KV9ACrihipDiOuU8uEDNLuoMjmmLlX\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=x4JUUlO9XGY&amp;index=4&amp;list=PLn9KV9ACrihipDiOuU8uEDNLuoMjmmLlX\"><img src=\"https://i.ytimg.com/vi/x4JUUlO9XGY/default.jpg\"></a></div>",
        "id": 127240031,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527581845
    },
    {
        "content": "<p>yes</p>",
        "id": 127240038,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527581872
    },
    {
        "content": "<p>if things get more advanced, we could also contact them</p>",
        "id": 127240082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1527581891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> </p>\n<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> well, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and I had been discussing the idea of having a way to select the algorithm that rustc uses as an extension to <a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a>; maybe we could add that, and then add an algorithm to polonius that compares naive-to-opt</p>\n</blockquote>\n<p>Sounds good.  Please let me know if I could help to implement this.</p>",
        "id": 127240168,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527582049
    },
    {
        "content": "<blockquote>\n<p>if things get more advanced, we could also contact them</p>\n</blockquote>\n<p>JFYI: Zhendong Su is <a href=\"https://www.ethz.ch/en/news-and-events/eth-news/news/2017/12/ten-professors-appointed.html\" target=\"_blank\" title=\"https://www.ethz.ch/en/news-and-events/eth-news/news/2017/12/ten-professors-appointed.html\">moving to ETH</a>.</p>",
        "id": 127240349,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527582354
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> I've done the basics of this, happy to share with you and letting you continue with the rest if you want</p>",
        "id": 127251691,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527600592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Could you specify more precisely what you mean by <strong>this</strong>?</p>",
        "id": 127251903,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527600946
    },
    {
        "content": "<p>Do you mean changes on the Rustc side to enable comparing Polonius with NLL?</p>",
        "id": 127251995,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527601045
    },
    {
        "content": "<p>I was talking about this PR <a href=\"https://github.com/rust-lang/rust/pull/51138\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51138\">https://github.com/rust-lang/rust/pull/51138</a></p>",
        "id": 127252163,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527601287
    },
    {
        "content": "<p>consider the last 3 commits</p>",
        "id": 127252165,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527601292
    },
    {
        "content": "<p>because it's on top of <a href=\"https://github.com/rust-lang/rust/pull/51133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/51133\">https://github.com/rust-lang/rust/pull/51133</a></p>",
        "id": 127252166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527601305
    },
    {
        "content": "<p>talking about the compare-mode</p>",
        "id": 127252168,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527601314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Thanks!</p>",
        "id": 127252379,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527601576
    },
    {
        "content": "<p>JFYI:  I have added an option to choose the Polonius algorithm with an environment variable (<a href=\"https://github.com/rust-lang-nursery/polonius/pull/60\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/60\">pull request</a>) and now I am working on comparing the reported errors.</p>",
        "id": 127252620,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527601890
    },
    {
        "content": "<p>will take a look in a bit :)</p>",
        "id": 127252899,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527602232
    },
    {
        "content": "<p>left some comments take a look to see if makes sense to you :)</p>",
        "id": 127253253,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527602660
    },
    {
        "content": "<blockquote>\n<p>left some comments take a look to see if makes sense to you :)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Thanks! Fixed.</p>",
        "id": 127255098,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527604936
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> have you seen a comment I left (or try to) about match here <a href=\"https://github.com/rust-lang-nursery/polonius/pull/64\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/polonius/pull/64\">https://github.com/rust-lang-nursery/polonius/pull/64</a> ?</p>",
        "id": 127257459,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527607836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I have seen your comment that you tried to leave a comment <span class=\"emoji emoji-263a\" title=\"relaxed\">:relaxed:</span>. I'll try to replace <code>match</code> with <code>if else</code>.</p>",
        "id": 127263949,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527615979
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> just in case :), take my comments as a suggestion, I'm not the one accepting stuff on rustc <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 127264031,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1527616085
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> just in case :), take my comments as a suggestion, I'm not the one accepting stuff on rustc <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>\n</blockquote>\n<p>Your suggestions make a lot of sense to me so far. <span class=\"emoji emoji-263a\" title=\"relaxed\">:relaxed:</span></p>",
        "id": 127264512,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1527616738
    }
]