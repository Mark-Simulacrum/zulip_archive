[
    {
        "content": "<p>I have a decent but not great understanding of this, and also am not a lawyer - please let me know if I got something wrong or this is the wrong place to ask. As I understand it, the output of rustdoc is a derivative work of the crate's source code, which might be eg MIT licensed. However, I could not find licensing information for the crate source included anywhere in the output. Furthermore, lots of projects upload their generated documentation to the web and/or a github site without modification, so the licensing information is not included there either (<a href=\"http://docs.rs\">docs.rs</a> attaches metadata to stuff, and so I believe is unaffected) - this would seem to be a violation of almost all licenses (including MIT &amp; Apache 2). Is there some reason I am missing that makes this a non-issue? If not, has this been discussed before?</p>\n<p>This is even a concern for single-author crates, because rustdoc builds documentation for dependencies as well. Taking serde as an example of a crate with a separate docs webpage (it was the first one that I could find, sorry for picking on it): Obviously this is not a single author crate, so potential problems from the above paragraph remain. But even if it was, <a href=\"http://docs.serde.rs\">docs.serde.rs</a> also exposes <a href=\"https://docs.serde.rs/proc_macro2/\">the documentation for</a> <code>proc_macro2</code> (I assume unintentionally), so that too becomes a concern. With this case especially, I cannot really imagine that this is license compliant, because the <code>proc_macro2</code>MIT license is - again, as best I can tell - nowhere to be found either on the site, in any link reachable from the site, or even in the repository from which the site was generated. (cc <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> who co-owns this) The dependency case could be fixed by generating with <code>--no-deps</code>, but 1) that is not very ergonomic if the public API includes types from other crates and 2) it is not stated anywhere I could find that this may be necessary for licensing reasons.</p>",
        "id": 266201214,
        "sender_full_name": "Jake",
        "timestamp": 1640635724
    },
    {
        "content": "<p>Compiled code has the same problem, by the way. The licensing information is not automatically copied and often lost when binaries are distributed. Traditional GNU/Linux distributions solve this by shipping the source of everything, which includes the required copyright notices. I don't know of any other way to achieve full compliance with notification requirements. I think few developers realize how onerous these notification requirements are at scale, for those who think they cannot ship complete source code.</p>\n<p>In the rustdoc context, maybe a case can be made that the authors have waived the notification requirements by not including the notice in parts that <em>are</em> copied over into the output by rustdoc.</p>",
        "id": 266203370,
        "sender_full_name": "Florian Weimer",
        "timestamp": 1640637752
    },
    {
        "content": "<p>This is what makes the MIT license a not-great option in nearly all circumstances.</p>",
        "id": 266203489,
        "sender_full_name": "Lokathor",
        "timestamp": 1640637876
    },
    {
        "content": "<p>LLVM has the LLVM Exception as part of it's license for this reason. So does Cranelift. GCC has the runtime library exception.</p>",
        "id": 266204542,
        "sender_full_name": "bjorn3",
        "timestamp": 1640638834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395545\">Florian Weimer</span> <a href=\"#narrow/stream/231349-t-core.2Flicensing/topic/Licenses.20of.20rustdoc.20output/near/266203370\">said</a>:</p>\n<blockquote>\n<p>Compiled code has the same problem, by the way. The licensing information is not automatically copied and often lost when binaries are distributed. Traditional GNU/Linux distributions solve this by shipping the source of everything, which includes the required copyright notices. I don't know of any other way to achieve full compliance with notification requirements. I think few developers realize how onerous these notification requirements are at scale, for those who think they cannot ship complete source code.</p>\n</blockquote>\n<p>The other way this is solved is lots of major apps include a way to view the licenses of dependencies in the compiled output. For example, on Firefox you can go to \"about Firefox\" and hit licensing information to see those details.</p>\n<blockquote>\n<p>In the rustdoc context, maybe a case can be made that the authors have waived the notification requirements by not including the notice in parts that <em>are</em> copied over into the output by rustdoc.</p>\n</blockquote>\n<p>This is almost certainly not the case, and even if such an argument could be made this sounds like it would be very bad for the ecosystem, as now I can't turn a comment into a doc comment without contacting the person who wrote the original comment and asking for permission.</p>",
        "id": 266204738,
        "sender_full_name": "Jake",
        "timestamp": 1640639013
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/231349-t-core.2Flicensing/topic/Licenses.20of.20rustdoc.20output/near/266204542\">said</a>:</p>\n<blockquote>\n<p>LLVM has the LLVM Exception as part of it's license for this reason. So does Cranelift. GCC has the runtime library exception.</p>\n</blockquote>\n<p>For GCC, you need to check the parts you link in. Some parts are under non-FSF copyright and are not covered by the run-time library exception. And if you use an LLVM-based compiler with the GCC run-time libraries, you need to double-check that the run-time library exception still applies. It's complicated, which is why I think that shipping source code is the only way to deal with this. (LLVM is still undergoing relicensing, so it's not clear whether the additional permissions already apply.)</p>\n<p>Maybe rustdoc should put the entire source code (not the Rust sources) and offer it for download.</p>",
        "id": 266209525,
        "sender_full_name": "Florian Weimer",
        "timestamp": 1640643296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/231349-t-core.2Flicensing/topic/Licenses.20of.20rustdoc.20output/near/266203489\">said</a>:</p>\n<blockquote>\n<p>This is what makes the MIT license a not-great option in nearly all circumstances.</p>\n</blockquote>\n<p>So this is getting slightly off-topic, but this conversation happened to come up in the community discord yesterday and a number of people felt that, despite the practical problems it causes, the attribution requirement persisting in compiled versions of their code was something that was important to them as open source library developers. I'm personally fairly sympathetic to that viewpoint to be honest (\"if I put in the work to write the code, you can at least put in the work to make sure I get credit\" or something like that)</p>",
        "id": 266271781,
        "sender_full_name": "Jake",
        "timestamp": 1640708317
    },
    {
        "content": "<p>If you feel that way then you should release your code that way.</p>",
        "id": 266275223,
        "sender_full_name": "Lokathor",
        "timestamp": 1640711199
    },
    {
        "content": "<p>Yeah, this is a very personal choice of course</p>",
        "id": 266275400,
        "sender_full_name": "Jake",
        "timestamp": 1640711377
    }
]