[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> , let's move our conversations from privmsg to here :)</p>",
        "id": 211560412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333375
    },
    {
        "content": "<p><span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> sure thing !</p>",
        "id": 211560440,
        "sender_full_name": "blitzerr",
        "timestamp": 1601333402
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> the thing is that we are considering nodes as dead if they are dead *<em>on entry</em></p>",
        "id": 211560454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333403
    },
    {
        "content": "<p>but we really want dead on <strong>exit</strong></p>",
        "id": 211560490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333408
    },
    {
        "content": "<p>so what we should do is in the <code>check_expr</code> function -- I forget the exact name, it's like <code>check_expr_with_Expectations_and_whatever</code></p>",
        "id": 211560508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333423
    },
    {
        "content": "<p>towards the end it updates the <code>self.diverges</code> setting</p>",
        "id": 211560517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333434
    },
    {
        "content": "<p>and that is the place where we want to say \"if the new value is <em>diverges</em>, then this is a dead expresion\" -- we should come up with a better name, something that reflects the sense of \"dead on exit\"</p>",
        "id": 211560543,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333464
    },
    {
        "content": "<p>I'm thinking \"dead_or_diverging_expr\" -- i.e., an expression that diverges or one that is dead to begin with</p>",
        "id": 211560559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333480
    },
    {
        "content": "<p>so we can check if it is <code>DivergesAlways</code> or <code>DivergesWarned</code> or whatever and add the <code>hir_id</code> to that set if so</p>",
        "id": 211560581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601333506
    },
    {
        "content": "<p>That sounds reasonable.</p>",
        "id": 211560679,
        "sender_full_name": "blitzerr",
        "timestamp": 1601333570
    },
    {
        "content": "<p>So, my action items as we discussed:</p>\n<ol>\n<li>Make the lint, allow by default so that lib-core passes.</li>\n<li>Make a list of failures that libcore compilation hit and add those as new test cases.</li>\n<li>extract out the before exit section into a function of its own.</li>\n<li>Move the addition to the dead_nodes list in this section</li>\n</ol>",
        "id": 211560816,
        "sender_full_name": "blitzerr",
        "timestamp": 1601333676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 211560823,
        "sender_full_name": "blitzerr",
        "timestamp": 1601333686
    },
    {
        "content": "<p>So item 2 might be tricky, <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span></p>",
        "id": 211611180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601381035
    },
    {
        "content": "<p>I think I would start by just using the <code>weird-exprs.rs</code> testcase -- let's see if we can get that test to be accepted</p>",
        "id": 211611264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601381061
    },
    {
        "content": "<p>minimizing failing tests from libcore is always hard</p>",
        "id": 211611293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601381087
    },
    {
        "content": "<p>that said, it would be good to have a test that we know reflects this case in real code, so we can be sure we've addressed it</p>",
        "id": 211611550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601381267
    },
    {
        "content": "<p>Sounds good <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>. will try to get the other points in the list.</p>",
        "id": 211614351,
        "sender_full_name": "blitzerr",
        "timestamp": 1601383017
    },
    {
        "content": "<p>my hunch <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> is that the weird-exprs test, once it works, will also fix the libcore example</p>",
        "id": 211616147,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601384117
    },
    {
        "content": "<p>That makes sense. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hopefully adding to dead_nodes towards the end will fix it all <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 211616439,
        "sender_full_name": "blitzerr",
        "timestamp": 1601384274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> So,<br>\nI added this line:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">         </span><span class=\"c1\">// Any expression that produces a value of type `!` must have diverged</span>\n<span class=\"w\">         </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"p\">.</span><span class=\"n\">is_never</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">diverges</span><span class=\"p\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">diverges</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Diverges</span>::<span class=\"n\">always</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">.</span><span class=\"n\">span</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"o\">+</span><span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">dead_nodes</span><span class=\"p\">.</span><span class=\"n\">borrow_mut</span><span class=\"p\">().</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">.</span><span class=\"n\">hir_id</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">         </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>Al all tests now started to fail <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 211710291,
        "sender_full_name": "blitzerr",
        "timestamp": 1601435104
    },
    {
        "content": "<p>Its inside func <code>check_expr_with_expectation</code> in file <code>expr.rs</code>.</p>",
        "id": 211710361,
        "sender_full_name": "blitzerr",
        "timestamp": 1601435173
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> that is the wrong line :)</p>",
        "id": 211776650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601479395
    },
    {
        "content": "<p>also, can you link to where you added it...</p>",
        "id": 211776731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601479426
    },
    {
        "content": "<p>lol ! Let me send my changes upstream so that you have the exact line.</p>",
        "id": 211778576,
        "sender_full_name": "blitzerr",
        "timestamp": 1601480111
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  Its <a href=\"https://github.com/rust-lang/rust/pull/74535/files#diff-635b28f19e86863f9d886d3b9a7beaa7R207\">this one</a></p>",
        "id": 211778943,
        "sender_full_name": "blitzerr",
        "timestamp": 1601480254
    }
]