[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Turns out the reason my question was unclear is that I was confused.  I think my trouble was just that <code>!</code> coerces to anything, but other uninhabited things don't (<code>Result&lt;!,!&gt;</code>, in my case).  So it wasn't anything special about the arm, just <code>!</code> being magical.</p>\n<p>I ran into it in in making a PoC for a new <code>Try</code> design:<br>\n<a href=\"https://github.com/rust-lang/rust/compare/master...scottmcm:do-or-do-not#diff-d8b2567155c41af008a45dc756c28463c57f205a95ca8ed18d6fb07b4b4a08bdR405\">https://github.com/rust-lang/rust/compare/master...scottmcm:do-or-do-not#diff-d8b2567155c41af008a45dc756c28463c57f205a95ca8ed18d6fb07b4b4a08bdR405</a></p>\n<p>That code used to work because the arm was <code>!</code>, so coerced to whatever, but with the change it became <code>Result&lt;!, !&gt;</code>, which <em>doesn't</em> coerce to anything, and thus needed the looks-pointless-at-face-value <code>.map_err(|x| x)</code>.</p>",
        "id": 220030226,
        "sender_full_name": "scottmcm",
        "timestamp": 1608060721
    },
    {
        "content": "<p>In other words it boiled down to our old enemy \"there's no <code>impl From&lt;!&gt;</code> for all types\".</p>",
        "id": 220030378,
        "sender_full_name": "scottmcm",
        "timestamp": 1608060779
    },
    {
        "content": "<p>Update here: the new <code>?</code> desugar is now in nightly, so the associated potential breakage from stabilizing <code>!</code> is no longer an issue.</p>",
        "id": 239469389,
        "sender_full_name": "scottmcm",
        "timestamp": 1621447176
    },
    {
        "content": "<p>That's exciting</p>",
        "id": 239556192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621500873
    }
]