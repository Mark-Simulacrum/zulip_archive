[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 215013037,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998191
    },
    {
        "content": "<p>hey</p>",
        "id": 215013087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998209
    },
    {
        "content": "<p>so</p>",
        "id": 215013089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998211
    },
    {
        "content": "<p>I am trying to page back in</p>",
        "id": 215013099,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998214
    },
    {
        "content": "<p>I think we were stuck trying to isolate the problem, basically?</p>",
        "id": 215013124,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998223
    },
    {
        "content": "<p>Ya, we example we constructed wasn't issuing warning</p>",
        "id": 215013186,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998244
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/78051\">https://github.com/rust-lang/rust/pull/78051</a> -&gt; initial PR</p>",
        "id": 215013274,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998271
    },
    {
        "content": "<p>so</p>",
        "id": 215013629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998433
    },
    {
        "content": "<p>one option is to try and debug it from without extracting to an example</p>",
        "id": 215013647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998444
    },
    {
        "content": "<p>Did you by any chance push the changes you made to the example ?</p>",
        "id": 215013722,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998480
    },
    {
        "content": "<p>but also</p>",
        "id": 215013725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998480
    },
    {
        "content": "<p>weren't we having problems with librustc</p>",
        "id": 215013756,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998484
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"128294\">blitzerr</span> <a href=\"#narrow/stream/259160-t-lang.2Fproject-never-type/topic/meeting.202020-oct-29/near/215013722\">said</a>:</p>\n<blockquote>\n<p>Did you by any chance push the changes you made to the example ?</p>\n</blockquote>\n<p>uh...</p>",
        "id": 215013782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998494
    },
    {
        "content": "<p>I don't think I have any \"unpushed\" changes</p>",
        "id": 215013839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998523
    },
    {
        "content": "<p>which is the example file?</p>",
        "id": 215013843,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998525
    },
    {
        "content": "<p><a href=\"http://panic_macro_fallback.rs\">panic_macro_fallback.rs</a></p>",
        "id": 215013930,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998569
    },
    {
        "content": "<p>I can share the screen on how far we got ..</p>",
        "id": 215013974,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998594
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![feature(never_type_fallback)]</span><span class=\"w\"></span>\n<span class=\"cp\">#![deny(fall_back_to_never_type)]</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">Error</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">_x</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">panic</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"unexpected getentropy error: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Error</span>::<span class=\"n\">last_os_error</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap_or</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">foo</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 215014101,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998629
    },
    {
        "content": "<p>yeah ok I remember this didn't work</p>",
        "id": 215014119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998638
    },
    {
        "content": "<p>right <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 215014151,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998654
    },
    {
        "content": "<p>I don't seem to even have that file locally</p>",
        "id": 215014195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998678
    },
    {
        "content": "<p>/me confused</p>",
        "id": 215014235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998693
    },
    {
        "content": "<p>well no matter</p>",
        "id": 215014242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998695
    },
    {
        "content": "<p>no worries !</p>",
        "id": 215014267,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998705
    },
    {
        "content": "<p>so what I rthink we can do</p>",
        "id": 215014375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998737
    },
    {
        "content": "<p>I'm trying to reproduce the error from CI</p>",
        "id": 215014389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998745
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/78051/checks?check_run_id=1268608116#step:24:1348\">this one</a></p>",
        "id": 215014403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998753
    },
    {
        "content": "<p>ok, I can</p>",
        "id": 215014422,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998765
    },
    {
        "content": "<p>have you done so?</p>",
        "id": 215014430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998767
    },
    {
        "content": "<p>if you run <code>x.py build --stage 2</code> you will see it</p>",
        "id": 215014447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998773
    },
    {
        "content": "<p>also, if you prefer, we could use Zoom</p>",
        "id": 215014456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998776
    },
    {
        "content": "<p>though I've been on zoom all day so I don't mind zulip a bit )</p>",
        "id": 215014485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998787
    },
    {
        "content": "<p>I am on zoom</p>",
        "id": 215014575,
        "sender_full_name": "blitzerr",
        "timestamp": 1603998840
    },
    {
        "content": "<p>oh ok lemme join</p>",
        "id": 215014635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1603998849
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> before I push these edits</p>",
        "id": 215019264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604001264
    },
    {
        "content": "<p>I'm .. huh -- I'm actually a bit surprised our micro test didn't work but</p>",
        "id": 215019303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604001287
    },
    {
        "content": "<p>maybe we can play around with it a bit more now and see if we can get the standalone example</p>",
        "id": 215019322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604001298
    },
    {
        "content": "<p>for those following along (e.g., <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> I know you were curious), we kind of got the lint \"working as expected\" but we are now finding some amount of false warnings that we may or may not be able to figure out a way to fix</p>",
        "id": 215019384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604001325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> I think I found a test</p>",
        "id": 215035747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604009961
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![deny(fall_back_to_never_type)]</span><span class=\"w\"></span>\n<span class=\"cp\">#![allow(unreachable_code)]</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">Error</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_x</span>: <span class=\"nc\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"unexpected getentropy error: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Error</span>::<span class=\"n\">last_os_error</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">foo</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 215035753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604009964
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  ohh wow ! Its simpler that what we had the other day</p>",
        "id": 215037509,
        "sender_full_name": "blitzerr",
        "timestamp": 1604011141
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![feature(never_type_fallback)]</span><span class=\"w\"></span>\n<span class=\"cp\">#![deny(fall_back_to_never_type)]</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">Error</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">_x</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">panic</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"unexpected getentropy error: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Error</span>::<span class=\"n\">last_os_error</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap_or</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">foo</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 215037546,
        "sender_full_name": "blitzerr",
        "timestamp": 1604011177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  The difference would be we were not assigning the return of lambda to a variable ?</p>",
        "id": 215037655,
        "sender_full_name": "blitzerr",
        "timestamp": 1604011243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> yes I can explain why...</p>",
        "id": 215096082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604065663
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I am listening .. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 215149379,
        "sender_full_name": "blitzerr",
        "timestamp": 1604091462
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I have updated the <a href=\"https://github.com/rust-lang/rust/pull/78051\">PR</a>.</p>",
        "id": 215178402,
        "sender_full_name": "blitzerr",
        "timestamp": 1604128180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  There are some <a href=\"https://github.com/rust-lang/rust/pull/78051/checks?check_run_id=1336169292\">test failures</a>, but I didn't want to fix them as in all likelihood, we may not be checking in this lint.</p>",
        "id": 215199966,
        "sender_full_name": "blitzerr",
        "timestamp": 1604162908
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> that I will take a stab at writing up some of the problems we encountered</p>",
        "id": 215325572,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604327546
    },
    {
        "content": "<p>I saw your notes. It is great.</p>",
        "id": 215344508,
        "sender_full_name": "blitzerr",
        "timestamp": 1604335326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  now that we have std and core compiling, we need to do the crater check and that will be the end of it ?</p>",
        "id": 215344615,
        "sender_full_name": "blitzerr",
        "timestamp": 1604335385
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> that would certainly be useful data</p>",
        "id": 215349333,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604337344
    },
    {
        "content": "<p>we probably should fix those two cases in rustc</p>",
        "id": 215349370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604337357
    },
    {
        "content": "<p>which we can do readily enough</p>",
        "id": 215349379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604337360
    },
    {
        "content": "<p>er, by \"fix\" I mean</p>",
        "id": 215349454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604337373
    },
    {
        "content": "<p>edit the source to not get warnings anymore</p>",
        "id": 215349464,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604337377
    },
    {
        "content": "<p>so that it builds :)</p>",
        "id": 215349478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604337381
    },
    {
        "content": "<p>I'd separate that into a WIP commit or something though</p>",
        "id": 215349495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604337389
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/259160-t-lang.2Fproject-never-type/topic/meeting.202020-oct-29/near/215349370\">said</a>:</p>\n<blockquote>\n<p>we probably should fix those two cases in rustc</p>\n</blockquote>\n<p>That's already been taken care of last week. <a href=\"https://github.com/rust-lang/rust/pull/78051/commits/d95cc41f806aae86b4d2dbed7e91f29c9a6d2a3f\">This Pr</a> has it.</p>",
        "id": 215369327,
        "sender_full_name": "blitzerr",
        "timestamp": 1604346517
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span aria-label=\"point of information\" class=\"emoji emoji-261d\" role=\"img\" title=\"point of information\">:point_of_information:</span></p>",
        "id": 215369335,
        "sender_full_name": "blitzerr",
        "timestamp": 1604346525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> ok I might push a slightly different version but seems good</p>",
        "id": 215369618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1604346697
    },
    {
        "content": "<p>sounds good <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 215370087,
        "sender_full_name": "blitzerr",
        "timestamp": 1604346949
    }
]