[
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/92733\">#92733</a> got merged without all the tests being run. Here's its merge commit: <a href=\"https://github.com/rust-lang/rust/commit/90e092f69f0d97b05a6d2b6acbde224c898fa9ce\">90e092f69f0d97b05a6d2b6acbde224c898fa9ce</a>. As you can see, it says <code>r=&lt;try&gt;</code>.</p>\n<p>Here are the steps that made this happen (it wasn't intentional, although I was somewhat concerned it could cause bors to glitch):</p>\n<ol>\n<li>Post comment with <code>@bors r+</code></li>\n<li>Post comment with <code>@bors r- @bors try @rust-timer queue</code></li>\n<li>Post comment with <code>@bors r+</code></li>\n</ol>\n<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 267489671,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641843897
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span></p>",
        "id": 267489679,
        "sender_full_name": "simulacrum",
        "timestamp": 1641843904
    },
    {
        "content": "<p>I suspect the best thing to do is to push a revert direct to master, but not sure</p>",
        "id": 267489715,
        "sender_full_name": "simulacrum",
        "timestamp": 1641843922
    },
    {
        "content": "<p>uff</p>",
        "id": 267489760,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641843950
    },
    {
        "content": "<p>I'd send a revert as a normal PR</p>",
        "id": 267489855,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641843990
    },
    {
        "content": "<p>(we could also force push dropping this commit, but that seems worse, I guess)</p>",
        "id": 267489862,
        "sender_full_name": "simulacrum",
        "timestamp": 1641843993
    },
    {
        "content": "<p>I mean, the PR itself should be good</p>",
        "id": 267489876,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844001
    },
    {
        "content": "<p>the commit being on master at all is going to cause pain all over the place</p>",
        "id": 267489883,
        "sender_full_name": "simulacrum",
        "timestamp": 1641844004
    },
    {
        "content": "<p>true</p>",
        "id": 267489905,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844014
    },
    {
        "content": "<p>I guess it just won't have proper artifacts</p>",
        "id": 267489913,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844016
    },
    {
        "content": "<p>e.g., perf, triagebot, etc. all are going to need special cases</p>",
        "id": 267489916,
        "sender_full_name": "simulacrum",
        "timestamp": 1641844017
    },
    {
        "content": "<p>ok it was 6 minutes ago</p>",
        "id": 267489956,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844040
    },
    {
        "content": "<p>force push it away</p>",
        "id": 267489961,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844042
    },
    {
        "content": "<p>ok, will do</p>",
        "id": 267490009,
        "sender_full_name": "simulacrum",
        "timestamp": 1641844064
    },
    {
        "content": "<p>Luckily I noticed right away :)</p>",
        "id": 267490016,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844070
    },
    {
        "content": "<p>thanks for the quick ping <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 267490034,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844081
    },
    {
        "content": "<p>it wouldn't have resulted in a release as the release process would've crashed with all the components but x86 linux missing</p>",
        "id": 267490118,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844108
    },
    {
        "content": "<p>dropped from origin/master</p>",
        "id": 267490125,
        "sender_full_name": "simulacrum",
        "timestamp": 1641844113
    },
    {
        "content": "<p>but still</p>",
        "id": 267490132,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844115
    },
    {
        "content": "<p>thanks mark</p>",
        "id": 267490136,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844117
    },
    {
        "content": "<p>(someone should reopen a new PR)</p>",
        "id": 267490155,
        "sender_full_name": "simulacrum",
        "timestamp": 1641844131
    },
    {
        "content": "<p>Yep, just commented on the PR</p>",
        "id": 267490199,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844157
    },
    {
        "content": "<p>Also, could this have messed up the PR currently having CI run?</p>",
        "id": 267490220,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844168
    },
    {
        "content": "<p>In terms of its merge-base</p>",
        "id": 267490258,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844186
    },
    {
        "content": "<p>oh yeah</p>",
        "id": 267490259,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844186
    },
    {
        "content": "<p>that'd merge the commit back in</p>",
        "id": 267490271,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844193
    },
    {
        "content": "<p>retry it to let it pick the new master</p>",
        "id": 267490274,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844195
    },
    {
        "content": "<p>Although that PR started being tested before the problem commit landed</p>",
        "id": 267490342,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844218
    },
    {
        "content": "<p>Maybe worth retrying just in case?</p>",
        "id": 267490358,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844226
    },
    {
        "content": "<p>yeah</p>",
        "id": 267490372,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844236
    },
    {
        "content": "<p>it's 6 minutes of lost CI anyway</p>",
        "id": 267490386,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844242
    },
    {
        "content": "<p>As in, yes, retry it?</p>",
        "id": 267490422,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844259
    },
    {
        "content": "<p>yes</p>",
        "id": 267490428,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641844263
    },
    {
        "content": "<p>Done</p>",
        "id": 267490578,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844325
    },
    {
        "content": "<p>More info in case it helps to fix the bug:</p>\n<p>When I checked the merge queue after step 2, I didn't see the PR listed as having a try run. But I also noticed that the try GitHub Action was still running (which usually happens when a try run is cancelled).</p>",
        "id": 267490627,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641844367
    },
    {
        "content": "<p>I think it's just that bors has the state \"none|trying|autoing\" and the commit it's waiting for a response on</p>",
        "id": 267493431,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641845607
    },
    {
        "content": "<p>so with the r+ you changed the trying to autoing</p>",
        "id": 267493440,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641845614
    },
    {
        "content": "<p>and when it received the update for the try run being finished it matched that commit message with the row for autoing</p>",
        "id": 267493550,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641845658
    },
    {
        "content": "<p>So maybe a stopgap fix would be to disallow state changes from trying to autoing?</p>",
        "id": 267495158,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641846500
    },
    {
        "content": "<p>In some ways, I'm kind of surprised this hasn't happened (or hasn't been noticed) before. I'd imagine people sometimes do a perf run and then r+ before the perf run finishes for whatever reason...</p>",
        "id": 267495248,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641846575
    },
    {
        "content": "<p>yeah I'd prevent r+ing if the PR is trying</p>",
        "id": 267495824,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1641846873
    },
    {
        "content": "<p>I thought that was already the case -- I think there's code for this, at least. But it might be for the other way around only (no \"try\" after r+), I guess.</p>",
        "id": 267495879,
        "sender_full_name": "simulacrum",
        "timestamp": 1641846907
    },
    {
        "content": "<p>Yeah, bors doesn't let you try after r+</p>",
        "id": 267496122,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641847031
    },
    {
        "content": "<p>I was just talking about this here: <a href=\"#narrow/stream/131828-t-compiler/topic/bors.3A.20stop.20prioritizing.20old.20PRs.20over.20new.20PRs/near/267476753\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/bors.3A.20stop.20prioritizing.20old.20PRs.20over.20new.20PRs/near/267476753</a></p>\n<p>Now I know why it's barred <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 267496207,
        "sender_full_name": "Noah Lev",
        "timestamp": 1641847078
    },
    {
        "content": "<p>It looks like this still needs to be fixed in bors?</p>",
        "id": 270856215,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1644105584
    },
    {
        "content": "<p>I'm just going off the fact that rust-lang/homu master hasn't been updated since November.</p>",
        "id": 270856282,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1644105613
    },
    {
        "content": "<p>I don't feel qualified to fix it, but I thought I should bring it up, given the potential scale of the disruption.</p>",
        "id": 270856376,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1644105721
    },
    {
        "content": "<p>It's not all that common to trigger, and bors isn't too easy to modify</p>",
        "id": 270856760,
        "sender_full_name": "simulacrum",
        "timestamp": 1644106340
    }
]