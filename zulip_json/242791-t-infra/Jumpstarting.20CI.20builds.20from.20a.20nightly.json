[
    {
        "content": "<p>I’d like to be able to download the nightlies for aarch64-apple-darwin and then run whatever tests we would have run in CI. Ideally without rebuilding the compiler again, but otherwise minimizing repeated effort. </p>\n<p>This would allow us to have a little peace of mind that this platform is working.</p>",
        "id": 213647198,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602933440
    },
    {
        "content": "<p>Is there any relevant trick?</p>",
        "id": 213647356,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602933682
    },
    {
        "content": "<p>You can set <code>rustc</code> and <code>cargo</code> in <code>cargo.toml</code> and then run <code>COMPILETEST_FORCE_STAGE0=1 ./x.py test --stage 0 src/test</code>.</p>",
        "id": 213649942,
        "sender_full_name": "bjorn3",
        "timestamp": 1602938189
    },
    {
        "content": "<p>Excellent, thank you. I’ll give that a shot later today hopefully. If it works, I’ll try to set up a cronjob on our DTK.</p>",
        "id": 213650986,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602939874
    },
    {
        "content": "<p><em>that's</em> whose using stage0 tests</p>",
        "id": 213651729,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602940972
    },
    {
        "content": "<p>Ok that makes sense, you're using nightly for stage 0 instead of beta</p>",
        "id": 213651736,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602940988
    },
    {
        "content": "<p>Glad I added the override <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 213651740,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602940998
    },
    {
        "content": "<p>Hmm I wonder if there's a way to detect that automatically so you don't need the override</p>",
        "id": 213651797,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602941044
    },
    {
        "content": "<p>yes, there is</p>",
        "id": 213655984,
        "sender_full_name": "simulacrum",
        "timestamp": 1602947102
    },
    {
        "content": "<p>local_rebuild on Builder/Build</p>",
        "id": 213655996,
        "sender_full_name": "simulacrum",
        "timestamp": 1602947130
    },
    {
        "content": "<p>can be set manually via config or automatically detected here <a href=\"https://github.com/Mark-Simulacrum/rust/blob/e2efec89764f4ee68cc9f537eda722d2fb830bba/src/bootstrap/lib.rs#L450-L453\">https://github.com/Mark-Simulacrum/rust/blob/e2efec89764f4ee68cc9f537eda722d2fb830bba/src/bootstrap/lib.rs#L450-L453</a></p>",
        "id": 213656040,
        "sender_full_name": "simulacrum",
        "timestamp": 1602947172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> so if I download a nightly, check out the matching version, set it as my rustc/cargo, then run <code>./x.py test --stage 0 src/test</code>?</p>\n<p>I’m not following exactly which override is being discussed.</p>",
        "id": 213658095,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602950486
    },
    {
        "content": "<p>COMPILETEST_FORCE_STAGE0 is the discussion</p>",
        "id": 213658104,
        "sender_full_name": "simulacrum",
        "timestamp": 1602950506
    },
    {
        "content": "<p>it'll tell you  to set it</p>",
        "id": 213658106,
        "sender_full_name": "simulacrum",
        "timestamp": 1602950513
    },
    {
        "content": "<p>(but you can preemptively do so of course)</p>",
        "id": 213658108,
        "sender_full_name": "simulacrum",
        "timestamp": 1602950520
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>Hmm I wonder if there's a way to detect that automatically so you don't need the override</p>\n</blockquote>\n<p>yes, there is</p>\n</blockquote>\n<p>So is this a theoretical way to detect the override or a ”it should detect it today“?</p>",
        "id": 213658251,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602950691
    },
    {
        "content": "<p>it should detect it (just another condition for the if) but doesn't right now</p>",
        "id": 213658358,
        "sender_full_name": "simulacrum",
        "timestamp": 1602950833
    },
    {
        "content": "<p>I would accept a PR.</p>",
        "id": 213658360,
        "sender_full_name": "simulacrum",
        "timestamp": 1602950835
    },
    {
        "content": "<p><code>no rules matched src/test/</code>, but using <code>... src/test/ui</code> does trigger something to happen. Does that not do All The Tests?</p>",
        "id": 213681291,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602985056
    },
    {
        "content": "<p>Oh, this isn't what I wanted...</p>\n<div class=\"codehilite\"><pre><span></span><code>Building LLVM for aarch64-apple-darwin\n</code></pre></div>",
        "id": 213681302,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602985081
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>COMPILETEST_FORCE_STAGE0=1 ../x.py test --stage 0 src/test/ui\n</code></pre></div>",
        "id": 213681354,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602985132
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/242791-t-infra/topic/Jumpstarting.20CI.20builds.20from.20a.20nightly/near/213681302\">said</a>:</p>\n<blockquote>\n<p>Oh, this isn't what I wanted...</p>\n<div class=\"codehilite\"><pre><span></span><code>Building LLVM for aarch64-apple-darwin\n</code></pre></div>\n\n\n</blockquote>\n<p>try setting download-ci-llvm = true? It doesn't work on MacOS but since you're not actually linking to LLVM it might work</p>",
        "id": 213681539,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602985345
    },
    {
        "content": "<p>I might need LLVM if I do codegen tests (which I assume would be part of CI)</p>",
        "id": 213681732,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602985571
    },
    {
        "content": "<blockquote>\n<p>try setting download-ci-llvm = true? It doesn't work on MacOS but since you're not actually linking to LLVM it might work</p>\n</blockquote>\n<p>No good :-( Tries to eagerly download it</p>",
        "id": 213681770,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602985654
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/242791-t-infra/topic/Jumpstarting.20CI.20builds.20from.20a.20nightly/near/213681732\">said</a>:</p>\n<blockquote>\n<p>I might need LLVM if I do codegen tests (which I assume would be part of CI)</p>\n</blockquote>\n<p>right, but you don't need to <em>link</em> it</p>",
        "id": 213682108,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602986046
    },
    {
        "content": "<p>you only need to link it for stage1, and you're testing stage 0</p>",
        "id": 213682116,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602986056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/242791-t-infra/topic/Jumpstarting.20CI.20builds.20from.20a.20nightly/near/213681770\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>try setting download-ci-llvm = true? It doesn't work on MacOS but since you're not actually linking to LLVM it might work</p>\n</blockquote>\n<p>No good :-( Tries to eagerly download it</p>\n</blockquote>\n<p>oh ... does it not exist at all? :/</p>",
        "id": 213682124,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602986074
    },
    {
        "content": "<p>I don't think it does for non-Linux platforms</p>",
        "id": 213682327,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602986341
    },
    {
        "content": "<p>looks like its just llvm though.</p>",
        "id": 213683462,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602987980
    },
    {
        "content": "<p>Hmm, some failures, but I don't see why.</p>\n<p>expected:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the trait bound `NoToSocketAddrs: ToSocketAddrs` is not satisfied\n  --&gt; $DIR/trait-suggest-deferences-issue-39029.rs:16:37\n   |\nLL |     let _errors = TcpListener::bind(&amp;bad);\n   |                                     ^^^^\n   |                                     |\n   |                                     the trait `ToSocketAddrs` is not implemented for `NoToSocketAddrs`\n   |                                     help: consider adding dereference here: `&amp;*bad`\n   |\n  ::: $SRC_DIR/std/src/net/tcp.rs:LL:COL\n   |\nLL |     pub fn bind&lt;A: ToSocketAddrs&gt;(addr: A) -&gt; io::Result&lt;TcpListener&gt; {\n   |                    ------------- required by this bound in `TcpListener::bind`\n   |\n   = note: required because of the requirements on the impl of `ToSocketAddrs` for `&amp;NoToSocketAddrs`\n</code></pre></div>\n\n\n<p>actual:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0277]: the trait bound `NoToSocketAddrs: ToSocketAddrs` is not satisfied\n  --&gt; $DIR/trait-suggest-deferences-issue-39029.rs:16:37\n   |\nLL |     let _errors = TcpListener::bind(&amp;bad);\n   |                                     ^^^^\n   |                                     |\n   |                                     the trait `ToSocketAddrs` is not implemented for `NoToSocketAddrs`\n   |                                     help: consider adding dereference here: `&amp;*bad`\n   |\n   = note: required because of the requirements on the impl of `ToSocketAddrs` for `&amp;NoToSocketAddrs`\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>",
        "id": 213683986,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1602988977
    },
    {
        "content": "<p>it's missing the second diagnostic:</p>\n<div class=\"codehilite\"><pre><span></span><code>  ::: $SRC_DIR/std/src/net/tcp.rs:LL:COL\n   |\nLL |     pub fn bind&lt;A: ToSocketAddrs&gt;(addr: A) -&gt; io::Result&lt;TcpListener&gt; {\n   |                    ------------- required by this bound in `TcpListener::bind`\n</code></pre></div>",
        "id": 213684199,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602989378
    },
    {
        "content": "<p>probably because you built stage0 from an old version of master</p>",
        "id": 213684202,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602989389
    },
    {
        "content": "<p>this is why you needed an override in the first place, because the source you built from doesn't match the tests</p>",
        "id": 213684245,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602989408
    },
    {
        "content": "<p>(alternatively you can just ignore the failure)</p>",
        "id": 213684249,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602989443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/242791-t-infra/topic/Jumpstarting.20CI.20builds.20from.20a.20nightly/near/213684249\">said</a>:</p>\n<blockquote>\n<p>(alternatively you can just ignore the failure)</p>\n</blockquote>\n<p>Well, it's not alone:</p>\n<div class=\"codehilite\"><pre><span></span><code>test result: FAILED. 10707 passed; 97 failed; 135 ignored; 0 measured; 0 filtered out\n</code></pre></div>",
        "id": 213703020,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603021751
    },
    {
        "content": "<p>Which tests failed?</p>",
        "id": 213703036,
        "sender_full_name": "bjorn3",
        "timestamp": 1603021802
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>failures:\n    [ui] ui/abi/variadic-ffi.rs\n    [ui] ui/associated-type-bounds/bad-bounds-on-assoc-in-trait.rs\n    [ui] ui/associated-type-bounds/bounds-on-assoc-in-trait.rs\n    [ui] ui/associated-types/defaults-wf.rs\n    [ui] ui/associated-types/trait-with-supertraits-needing-sized-self.rs\n    [ui] ui/async-await/issue-72442.rs\n    [ui] ui/bad/bad-sized.rs\n    [ui] ui/binop/binop-consume-args.rs\n    [ui] ui/binop/binop-move-semantics.rs\n    [ui] ui/closures/closure-move-sync.rs\n    [ui] ui/codemap_tests/tab_3.rs\n    [ui] ui/const-generics/const-argument-if-length.rs#full\n    [ui] ui/consts/const-size_of-cycle.rs\n    [ui] ui/consts/const-unwrap.rs\n    [ui] ui/consts/const_unsafe_unreachable_ub.rs\n    [ui] ui/consts/miri_unleashed/drop.rs\n    [ui] ui/consts/offset_from_ub.rs\n    [ui] ui/consts/offset_ub.rs\n    [ui] ui/consts/ptr_comparisons.rs\n    [ui] ui/copy-a-resource.rs\n    [ui] ui/derives/derive-assoc-type-not-impl.rs\n    [ui] ui/derives/derives-span-Eq-enum-struct-variant.rs\n    [ui] ui/derives/derives-span-Eq-enum.rs\n    [ui] ui/derives/derives-span-Eq-struct.rs\n    [ui] ui/derives/derives-span-Eq-tuple-struct.rs\n    [ui] ui/derives/derives-span-Hash-enum-struct-variant.rs\n    [ui] ui/derives/derives-span-Hash-enum.rs\n    [ui] ui/derives/derives-span-Hash-struct.rs\n    [ui] ui/derives/derives-span-Hash-tuple-struct.rs\n    [ui] ui/derives/deriving-meta-unknown-trait.rs\n    [ui] ui/error-codes/E0004-2.rs\n    [ui] ui/error-codes/E0005.rs\n    [ui] ui/error-codes/E0297.rs\n    [ui] ui/feature-gates/feature-gate-associated_type_bounds.rs\n    [ui] ui/feature-gates/feature-gate-exhaustive-patterns.rs\n    [ui] ui/generator/sized-yield.rs\n    [ui] ui/hygiene/panic-location.rs\n    [ui] ui/impl-trait/impl-generic-mismatch.rs\n    [ui] ui/imports/extern-prelude-extern-crate-restricted-shadowing.rs\n    [ui] ui/in-band-lifetimes/mismatched_trait_impl-2.rs\n    [ui] ui/interior-mutability/interior-mutability.rs\n    [ui] ui/issues/issue-17546.rs\n    [ui] ui/issues/issue-20433.rs\n    [ui] ui/issues/issue-21160.rs\n    [ui] ui/issues/issue-27033.rs\n    [ui] ui/issues/issue-2823.rs\n    [ui] ui/issues/issue-31173.rs\n    [ui] ui/issues/issue-38857.rs\n    [ui] ui/issues/issue-60283.rs\n    [ui] ui/issues/issue-61108.rs\n    [ui] ui/issues/issue-64559.rs\n    [ui] ui/issues/issue-69725.rs\n    [ui] ui/issues/issue-70724-add_type_neq_err_label-unwrap.rs\n    [ui] ui/issues/issue-7607-1.rs\n    [ui] ui/lint/lint-const-item-mutation.rs\n    [ui] ui/macros/macro-name-typo.rs\n    [ui] ui/macros/macro-path-prelude-fail-3.rs\n    [ui] ui/macros/unknown-builtin.rs\n    [ui] ui/malformed/malformed-derive-entry.rs\n    [ui] ui/mismatched_types/issue-36053-2.rs\n    [ui] ui/mismatched_types/issue-74918-missing-lifetime.rs\n    [ui] ui/moves/move-fn-self-receiver.rs\n    [ui] ui/moves/moves-based-on-type-access-to-field.rs\n    [ui] ui/moves/moves-based-on-type-exprs.rs\n    [ui] ui/no-capture-arc.rs\n    [ui] ui/no-reuse-move-arc.rs\n    [ui] ui/no-send-res-ports.rs\n    [ui] ui/non-copyable-void.rs\n    [ui] ui/noncopyable-class.rs\n    [ui] ui/parser/issue-62894.rs\n    [ui] ui/pattern/usefulness/match-arm-statics-2.rs\n    [ui] ui/pattern/usefulness/match-privately-empty.rs\n    [ui] ui/pattern/usefulness/non-exhaustive-match.rs\n    [ui] ui/proc-macro/parent-source-spans.rs\n    [ui] ui/proc-macro/resolve-error.rs\n    [ui] ui/range/range-1.rs\n    [ui] ui/recursion/issue-38591-non-regular-dropck-recursion.rs\n    [ui] ui/recursion/recursive-types-are-not-uninhabited.rs\n    [ui] ui/resolve/levenshtein.rs\n    [ui] ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.rs\n    [ui] ui/stability-in-private-module.rs\n    [ui] ui/suggestions/attribute-typos.rs\n    [ui] ui/suggestions/expected-boxed-future-isnt-pinned.rs\n    [ui] ui/suggestions/imm-ref-trait-object.rs\n    [ui] ui/suggestions/mut-borrow-needed-by-trait.rs\n    [ui] ui/traits/assoc_type_bound_with_struct.rs\n    [ui] ui/traits/trait-alias/trait-alias-object-fail.rs\n    [ui] ui/traits/trait-suggest-deferences-issue-39029.rs\n    [ui] ui/traits/trait-suggest-where-clause.rs\n    [ui] ui/type_length_limit.rs\n    [ui] ui/uninhabited/uninhabited-matches-feature-gated.rs\n    [ui] ui/union/union-derive-clone.rs\n    [ui] ui/union/union-derive-eq.rs\n    [ui] ui/unique-object-noncopyable.rs\n    [ui] ui/unique-pinned-nocopy.rs\n    [ui] ui/unop-move-semantics.rs\n    [ui] ui/wf/wf-impl-self-type.rs\n</code></pre></div>",
        "id": 213703079,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603021821
    },
    {
        "content": "<p>That is a wide variety of failed tests.</p>",
        "id": 213703085,
        "sender_full_name": "bjorn3",
        "timestamp": 1603021860
    },
    {
        "content": "<p>AFAICT, I'm at the matching version:</p>\n<div class=\"codehilite\"><pre><span></span><code>% grep &#39;rustc =&#39; config.toml\nrustc = &#39;/Users/shepmaster/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/rustc&#39;\n\n % /Users/shepmaster/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/rustc --version --verbose\nrustc 1.49.0-nightly (e3051d8c2 2020-10-16)\nbinary: rustc\ncommit-hash: e3051d8c24467b54c81da9d9ad70a3e82e106ec1\ncommit-date: 2020-10-16\nhost: aarch64-apple-darwin\nrelease: 1.49.0-nightly\nLLVM version: 11.0\n\n% git show\ncommit e3051d8c24467b54c81da9d9ad70a3e82e106ec1 (HEAD)\nMerge: 5a51185fd46 001fcd96d5b\nAuthor: bors &lt;bors@rust-lang.org&gt;\nDate:   Fri Oct 16 20:43:27 2020 +0000\n\n    Auto merge of #78028 - JohnTitor:rollup-jt3hikb, r=JohnTitor\n\n    Rollup of 10 pull requests\n</code></pre></div>",
        "id": 213703099,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603021904
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/242791-t-infra/topic/Jumpstarting.20CI.20builds.20from.20a.20nightly/near/213703085\">said</a>:</p>\n<blockquote>\n<p>That is a wide variety of failed tests.</p>\n</blockquote>\n<p>Right? And the one I picked to look at didn't seem to fail for a platform-specific reason.</p>",
        "id": 213703154,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603021962
    },
    {
        "content": "<p>And it's seemingly not all the tests, so it's not like I've completely misconfigured it.</p>",
        "id": 213703169,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603021988
    },
    {
        "content": "<p>Let's hope it is not a bunch of miscompilations. It took me quite a while to figure out that cg_clif couldn't bootstrap rustc due 128bit integer miscompilations. It just gave me random miri errors that didn't make any sense. Once it fixed those and a few other bugs cg_clif could bootstrap rustc just fine.</p>",
        "id": 213703244,
        "sender_full_name": "bjorn3",
        "timestamp": 1603022109
    },
    {
        "content": "<p>I suppose I should do a full native build and test to rule out the usage of nightly.</p>",
        "id": 213703293,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603022208
    },
    {
        "content": "<p>Yeah. hmm. <code> ../x.py test --stage 1 src/test/ui</code> with no overrides ends in </p>\n<div class=\"codehilite\"><pre><span></span><code>failures:\n    [ui] ui/abi/variadic-ffi.rs\n\ntest result: FAILED. 10803 passed; 1 failed; 135 ignored; 0 measured; 0 filtered out\n</code></pre></div>",
        "id": 213708749,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603031352
    },
    {
        "content": "<p>What is the error?</p>",
        "id": 213709580,
        "sender_full_name": "bjorn3",
        "timestamp": 1603032574
    },
    {
        "content": "<p>That specific error is probably a real thing (and I’ll ask about it in <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a> once I have a chance to look at it / debug it)</p>",
        "id": 213712796,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603037011
    },
    {
        "content": "<p>But I still don’t understand why using a nightly with the same source revision produces different test results.</p>",
        "id": 213712863,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1603037074
    }
]