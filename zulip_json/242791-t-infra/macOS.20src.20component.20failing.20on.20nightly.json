[
    {
        "content": "<p>Installing the rust src component is currently consistently failing for me on nightly. Not sure where is the best place for this.<br>\n<a href=\"https://github.com/XAMPPRocky/tokei/pull/592/checks?check_run_id=897514803\">https://github.com/XAMPPRocky/tokei/pull/592/checks?check_run_id=897514803</a></p>\n<div class=\"codehilite\"><pre><span></span><code>info: syncing channel updates for &#39;nightly-x86_64-apple-darwin&#39;\ninfo: latest update on 2020-07-22, rust version 1.47.0-nightly (8ad7bc3f4 2020-07-21)\ninfo: downloading component &#39;cargo&#39;\ninfo: downloading component &#39;rust-std&#39;\ninfo: downloading component &#39;rustc&#39;\ninfo: installing component &#39;cargo&#39;\ninfo: Defaulting to 500.0 MiB unpack ram\ninfo: installing component &#39;rust-std&#39;\ninfo: installing component &#39;rustc&#39;\ninfo: default toolchain set to &#39;nightly-x86_64-apple-darwin&#39;\n\n  nightly-x86_64-apple-darwin installed - rustc 1.47.0-nightly (8ad7bc3f4 2020-07-21)\n\ninfo: downloading component &#39;rust-std&#39; for &#39;aarch64-apple-ios&#39;\ninfo: installing component &#39;rust-std&#39; for &#39;aarch64-apple-ios&#39;\ninfo: Defaulting to 500.0 MiB unpack ram\ninfo: downloading component &#39;rust-src&#39;\ninfo: installing component &#39;rust-src&#39;\ninfo: Defaulting to 500.0 MiB unpack ram\ninfo: rolling back changes\nerror: tar entry kind &#39;Symlink&#39; is not supported\nerror: couldn&#39;t install the `rust-src` component\ncaused by: `&quot;rustup&quot; &quot;component&quot; &quot;add&quot; &quot;rust-src&quot; &quot;--toolchain&quot; &quot;nightly-x86_64-apple-darwin&quot;` failed with exit code: Some(1)\n</code></pre></div>",
        "id": 204674913,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1595428955
    },
    {
        "content": "<p>known bug</p>",
        "id": 204675073,
        "sender_full_name": "simulacrum",
        "timestamp": 1595429037
    },
    {
        "content": "<p>should be fixed next nightly</p>",
        "id": 204675099,
        "sender_full_name": "simulacrum",
        "timestamp": 1595429043
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74578\">https://github.com/rust-lang/rust/pull/74578</a></p>",
        "id": 204675152,
        "sender_full_name": "simulacrum",
        "timestamp": 1595429066
    },
    {
        "content": "<p>I'm starting to wonder if rustup should just make that a warning and skip the entry rather than fail the install.  We added that check for security reasons because there should never be symlinks in the tarballs as they can't be represented on all host platforms.</p>",
        "id": 204675397,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1595429173
    },
    {
        "content": "<p>For similar reasons we ban device nodes.</p>",
        "id": 204675457,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1595429199
    },
    {
        "content": "<p>Why can't the tarballs resolve the symlinks?</p>",
        "id": 204675469,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595429207
    },
    {
        "content": "<p>Well, I suppose we could write a symlink resolution tool and then make a copy on the filesystem but that seems a bit risky to me.  Better to ban them outright.  We could add a check to the tarball build process in r-l/r if we wanted to make sure this can't happen again.</p>",
        "id": 204675750,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1595429337
    },
    {
        "content": "<p>yeah we should ban earlier that's all</p>",
        "id": 204675806,
        "sender_full_name": "simulacrum",
        "timestamp": 1595429359
    },
    {
        "content": "<p>I think verifying that the generated tarballs don't have bad things in should be a step we do in CI of r-l/r</p>",
        "id": 204675866,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1595429388
    },
    {
        "content": "<p>To be clear, I mean</p>\n<div class=\"codehilite\"><pre><span></span><code>-h, --dereference\n    don&#39;t archive symlinks; archive the files they point to\n</code></pre></div>",
        "id": 204675974,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595429430
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> yeah that's what I meant</p>",
        "id": 204675979,
        "sender_full_name": "simulacrum",
        "timestamp": 1595429434
    },
    {
        "content": "<p>you'd still have the checks that the tarball doesn't have symlinks</p>",
        "id": 204676007,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595429446
    },
    {
        "content": "<p>DItto it'd be nice if we could notice getting close to the unpack sanity limit in rustup. (individual files may not exceed a built-in sanity limit size or rustup refuses to unpack it)</p>",
        "id": 204676019,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1595429454
    },
    {
        "content": "<p>(for reference, right now, that limit is 200_000_000 bytes)</p>",
        "id": 204676120,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1595429514
    },
    {
        "content": "<p>When I get a chance, I plan to add a check somewhere that there aren't any symlinks.  If there is ever a situation in the future where there is a symlink that is needed, we can add the equivalent of <code>dereference</code>, but I think that should be done carefully since that might not be what is expected, and may cause subtle problems, or cause substantial duplication.</p>",
        "id": 204682621,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595432236
    }
]