[
    {
        "content": "<p>I sometimes see test failures in CI that give a panic or similar, mentioning to set RUST_BACKTRACE=1 for a backtrace. Would it make sense for us to set RUST_BACKTRACE=1 in CI, at least for tests that aren't specifically testing the output of a backtrace? (We'd probably have to fix up a few tests, or unset it for a few tests, but that seems worth doing in order to get better error messages from CI.)</p>",
        "id": 269835049,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643427664
    },
    {
        "content": "<p>We already set it on the PR builder (<a href=\"https://github.com/rust-lang/rust/blob/cbaeec14f90b59a91a6b0f17fc046c66fa811892/src/ci/github-actions/ci.yml#L440\">https://github.com/rust-lang/rust/blob/cbaeec14f90b59a91a6b0f17fc046c66fa811892/src/ci/github-actions/ci.yml#L440</a>), so I imagine setting it elsewhere could be done. Not sure how useful it is since most builders don't have debug info, or whether we'd encounter some overhead from setting it</p>",
        "id": 269835821,
        "sender_full_name": "simulacrum",
        "timestamp": 1643428621
    },
    {
        "content": "<p>Huh. I had a CI failure that just gave a panic with no backtrace.</p>",
        "id": 269835920,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643428754
    },
    {
        "content": "<p>Digging it up...</p>",
        "id": 269835922,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643428765
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/runs/4986893650#step:26:14328\">https://github.com/rust-lang/rust/runs/4986893650#step:26:14328</a></p>",
        "id": 269835936,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643428788
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;ArrayVec: capacity exceeded in extend/from_iter&#39;, /cargo/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.7.0/src/arrayvec.rs:988:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n</code></pre></div>\n<p>Would have been helpful to know where that panic came from. I did end up finding and fixing it, but a backtrace would have helped there.</p>",
        "id": 269836025,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643428823
    },
    {
        "content": "<p>Huh. We set it on the PR builder, but for some reason only on auto branch CI - not on the PR CI <a href=\"https://github.com/rust-lang/rust/blob/cbaeec14f90b59a91a6b0f17fc046c66fa811892/src/ci/github-actions/ci.yml#L291\">https://github.com/rust-lang/rust/blob/cbaeec14f90b59a91a6b0f17fc046c66fa811892/src/ci/github-actions/ci.yml#L291</a></p>",
        "id": 269860631,
        "sender_full_name": "simulacrum",
        "timestamp": 1643458458
    },
    {
        "content": "<p>Would it make sense to set it there too? Happy to send a PR.</p>",
        "id": 269875251,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643475280
    },
    {
        "content": "<p>I think we should try setting it across all builders, probably in src/ci/run.sh, except for one of them (so we don't depend on it being set in tests and such).</p>",
        "id": 269876500,
        "sender_full_name": "simulacrum",
        "timestamp": 1643476597
    },
    {
        "content": "<p>Or, blanket set it for tests in bootstrap and/or compiletest.</p>",
        "id": 269876529,
        "sender_full_name": "simulacrum",
        "timestamp": 1643476632
    },
    {
        "content": "<p>Doing it for just both llvm-12 builders is problematic I think since there's likely to be some tests running differently <em>just</em> on those builders.</p>",
        "id": 269876564,
        "sender_full_name": "simulacrum",
        "timestamp": 1643476676
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/242791-t-infra/topic/RUST_BACKTRACE.3D1.20in.20CI.3F/near/269876529\">said</a>:</p>\n<blockquote>\n<p>Or, blanket set it for tests in bootstrap and/or compiletest.</p>\n</blockquote>\n<p>That seems like a good idea, so that people also get backtraces when running tests locally, not just in CI.</p>",
        "id": 269878359,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643478816
    },
    {
        "content": "<p>We should be a little careful though - for libtest-style tests, collecting backtraces may slow down should panic tests a good deal, which would be unfortunate.</p>",
        "id": 269878535,
        "sender_full_name": "simulacrum",
        "timestamp": 1643478995
    },
    {
        "content": "<p>Ideally, the test suite could re-run failed tests with RUST_BACKTRACE=1 if and only if they panic.</p>",
        "id": 269878686,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643479166
    },
    {
        "content": "<p>But that seems harder.</p>",
        "id": 269878691,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643479173
    },
    {
        "content": "<p>For compiletest, panics should be rare, so it should be fine there. For libtest, we can probably adjust the panic hook to turn on backtraces with some threading through of state, I suppose.</p>",
        "id": 269879398,
        "sender_full_name": "simulacrum",
        "timestamp": 1643479864
    },
    {
        "content": "<p>Well, for now, setting it in compiletest seems like an improvement.</p>",
        "id": 269879669,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643480206
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/93460\">https://github.com/rust-lang/rust/pull/93460</a></p>",
        "id": 269880585,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643481286
    },
    {
        "content": "<p>(We'll have to see if that breaks any expected test output.)</p>",
        "id": 269880600,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643481307
    },
    {
        "content": "<p>Short of getting a full backtrace is the issue that the location that they reported in arrayvec wasn't actually relevant?</p>",
        "id": 269941576,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643559730
    },
    {
        "content": "<p>I'm wondering if this is something that should have track caller on it.</p>",
        "id": 269941593,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643559759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> <a href=\"https://github.com/bluss/arrayvec/issues/212\">https://github.com/bluss/arrayvec/issues/212</a> :)</p>",
        "id": 269946192,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643565268
    },
    {
        "content": "<p>Already going that route too, but I also thought backtraces would be useful.</p>",
        "id": 269946213,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643565300
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 269946986,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643566172
    }
]