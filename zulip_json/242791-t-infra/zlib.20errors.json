[
    {
        "content": "<p>Just a heads up, I'm trying to investigate the zlib errors. They seem to be hitting the i686 builders.  Tracking on <a href=\"https://github.com/rust-lang/cargo/issues/8517\">https://github.com/rust-lang/cargo/issues/8517</a></p>",
        "id": 204816139,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595519864
    },
    {
        "content": "<p>Closing the tree, all PRs seem to be failing.</p>",
        "id": 204819874,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595521492
    },
    {
        "content": "<p>I'm thinking, this will probably take a while to diagnose and fix.  I'm going to suggest switching the builders to use <code>git-fetch-with-cli</code> temporarily.  I'll look at setting up a PR for that.</p>",
        "id": 204820006,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595521559
    },
    {
        "content": "<p>Posted <a href=\"https://github.com/rust-lang/rust/pull/74689\">https://github.com/rust-lang/rust/pull/74689</a>.</p>",
        "id": 204823917,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595523415
    },
    {
        "content": "<p><code>error: gnutls_handshake() failed: A TLS fatal alert has been received. while accessing https://github.com/rust-lang/crates.io-index/info/refs</code></p>\n<p>Been searching around, and finding lots of people hitting that error message, but all for different reasons (bad drivers, bad certificates, etc.).  Anyone have any ideas?</p>\n<p>I'm able to repro pretty easily on GHA, but I have not been able to repro locally.</p>",
        "id": 204834945,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595528746
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> one thought I had is that maybe we can patch cargo (or whoever is linked in) to provide our own zlib?</p>",
        "id": 204835310,
        "sender_full_name": "simulacrum",
        "timestamp": 1595528891
    },
    {
        "content": "<p>Hmm, there should be an alert-type that comes with the fatal-error. I guess gnutls/git doesn't log it :-(</p>\n<p>If I had to speculate _wildly_, it'd be that it's the TCP stream getting half closed, leading to truncation mid TLS record, leading to an alert that the stream was truncated early.</p>",
        "id": 204835343,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1595528909
    },
    {
        "content": "<p>That error was from git itself (the command-line).  I think this is unrelated to cargo.</p>",
        "id": 204835387,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595528935
    },
    {
        "content": "<p>I guess it's plausible this is the same failure</p>",
        "id": 204835457,
        "sender_full_name": "simulacrum",
        "timestamp": 1595528964
    },
    {
        "content": "<p>the zlib error you were getting before being caused by early truncation also makes sense to me</p>",
        "id": 204835517,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1595528992
    },
    {
        "content": "<p>just expressed differently</p>",
        "id": 204835520,
        "sender_full_name": "simulacrum",
        "timestamp": 1595528993
    },
    {
        "content": "<p>hm, i'm more perplexed, because it only seems to affect i686.  My current theory is that libgit2 is initializing the bare repo in some strange way.  Testing with just <code>git fetch</code> doesn't repro.  I was able to repro with cargo as far back as 1.43.</p>",
        "id": 204837666,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595529870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> you've managed to get something deterministically failing?</p>",
        "id": 204840814,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595531277
    },
    {
        "content": "<p>Yea, just run this on GHA:</p>\n<div class=\"codehilite\"><pre><span></span><code>        rustup install beta-i686-unknown-linux-gnu\n        cargo new foo\n        cd foo\n        echo &#39;log = &quot;0.4.11&quot;&#39; &gt;&gt; Cargo.toml\n        cargo +beta-i686-unknown-linux-gnu fetch\n</code></pre></div>",
        "id": 204841064,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595531395
    },
    {
        "content": "<p>It doesn't really matter which release, as long as it is i686</p>",
        "id": 204841160,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595531419
    },
    {
        "content": "<p>This is on an x86-64 host though?</p>",
        "id": 204841260,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1595531475
    },
    {
        "content": "<p>yea</p>",
        "id": 204841279,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595531491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> hm ok something is different for me</p>",
        "id": 204844245,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533063
    },
    {
        "content": "<p>that's not failing</p>",
        "id": 204844249,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533066
    },
    {
        "content": "<p>if you set <code>CARGO_HOME</code> to a blank dir does it fail?</p>",
        "id": 204844266,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533074
    },
    {
        "content": "<p>I'm curious if this only fails on incremental updates</p>",
        "id": 204844276,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533080
    },
    {
        "content": "<p>I ran <code>ls -l</code> in <code>~/.cargo/</code>, and the <code>registry</code> directory is empty on GHA.</p>",
        "id": 204844423,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533162
    },
    {
        "content": "<p>(that was one of my first ideas)</p>",
        "id": 204844452,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533178
    },
    {
        "content": "<p>oh I se, I'm executing locally, not on GHA</p>",
        "id": 204844456,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533180
    },
    {
        "content": "<p>Yea, I can't repro locally.</p>",
        "id": 204844471,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533189
    },
    {
        "content": "<p>they probably have a different network setup than my home</p>",
        "id": 204844477,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533192
    },
    {
        "content": "<p>This is also really strange, I got this from the logs:</p>\n<div class=\"codehilite\"><pre><span></span><code>attempting GitHub fast path for https://api.github.com/repos/rust-lang/crates.io-index/commits/HEAD\nfailed to check github reference &#39;refs/remotes/origin/HEAD&#39; not found; class=Reference (4); code=NotFound (-3)\n</code></pre></div>\n\n\n<p>How can that be \"not found\"?</p>",
        "id": 204844786,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533347
    },
    {
        "content": "<p>If you're running a 32-bit cargo, when it shells out to <code>git</code>, does it use a 64-bit git? (i.e. invoking git should be identical between i686 and x86-64)</p>",
        "id": 204844895,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1595533417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> that's an empty checkout, right?</p>",
        "id": 204844989,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533453
    },
    {
        "content": "<p>so the ref isn't present locally?</p>",
        "id": 204845000,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> hm this didn't fail on CI for me?</p>",
        "id": 204845058,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533491
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton/cfg-if/commit/239e998b97f7a5a725a0bb4d402341fb0f217969\">https://github.com/alexcrichton/cfg-if/commit/239e998b97f7a5a725a0bb4d402341fb0f217969</a></p>",
        "id": 204845089,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533508
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130046\">Alex Gaynor</span> <a href=\"#narrow/stream/242791-t-infra/topic/zlib.20errors/near/204844895\">said</a>:</p>\n<blockquote>\n<p>If you're running a 32-bit cargo, when it shells out to <code>git</code>, does it use a 64-bit git? (i.e. invoking git should be identical between i686 and x86-64)</p>\n</blockquote>\n<p>It uses bundled libgit.</p>",
        "id": 204845327,
        "sender_full_name": "mati865",
        "timestamp": 1595533648
    },
    {
        "content": "<p>the failure rate isn't 100%, though for me it is close.</p>",
        "id": 204845331,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533651
    },
    {
        "content": "<p>re: git.  <span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> it failed when using git-fetch-with-cli too, so it wasn't libgit in that case.</p>",
        "id": 204845363,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533674
    },
    {
        "content": "<p>it just shells out to \"git\", so whatever is installed on the system (64-bit).</p>",
        "id": 204845415,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533688
    },
    {
        "content": "<p>I compared the 32-bit bare repo init with the 64-bit, and it was the same.</p>",
        "id": 204845465,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595533722
    },
    {
        "content": "<p>So somehow <code>git</code> is behaving differently depending on if it's being <code>execve</code>'d from a 32-bit or 64-bit process? <span aria-label=\"explosion\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"explosion\">:explosion:</span>  There's got to be something else going on, because that'd just be too much.</p>",
        "id": 204845498,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1595533747
    },
    {
        "content": "<p>one thing I'm curious to test is <a href=\"https://github.com/alexcrichton/cfg-if/commit/6039f9d13db313f23b8eafac60d2fa7496a24eec\">https://github.com/alexcrichton/cfg-if/commit/6039f9d13db313f23b8eafac60d2fa7496a24eec</a>, but I can't get this to fail on CI :(</p>",
        "id": 204845615,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533804
    },
    {
        "content": "<p>3/3 successes so far for me on your repro steps</p>",
        "id": 204845645,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595533819
    },
    {
        "content": "<p>So it cannot be git if 64 bit binary gives the same error.</p>",
        "id": 204845689,
        "sender_full_name": "mati865",
        "timestamp": 1595533850
    },
    {
        "content": "<p>hm, it's not failing for me now.  maybe it only fails before noon <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 204846980,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595534542
    },
    {
        "content": "<p>so the last issue this came up in was in libgit2 where it had something to do with huge packets and their buffer sizes</p>",
        "id": 204847104,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534639
    },
    {
        "content": "<p>it sounded like there was just a bug in how the data from the network was fed in</p>",
        "id": 204847162,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534651
    },
    {
        "content": "<p>if that's the case then this could be highly susceptible to network differences, and if it's spurious it could have to do with caching</p>",
        "id": 204847189,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534666
    },
    {
        "content": "<p>like at some point their internal network may cache like a huge packet, but then later it caches a smaller version (or something like that)</p>",
        "id": 204847226,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534691
    },
    {
        "content": "<p>only 32-bit likely indicates there's more bugs and such in libgit2?</p>",
        "id": 204847280,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534718
    },
    {
        "content": "<p>it'll be next-to-impossible to fix unless we can debug though :(</p>",
        "id": 204847298,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534728
    },
    {
        "content": "<p>that doesn't really explain why it failed with <code>net.git-fetch-with-cli</code></p>",
        "id": 204847308,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595534733
    },
    {
        "content": "<p>ideally we'd get like an rr capture and replay that locally</p>",
        "id": 204847309,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534734
    },
    {
        "content": "<p>that is also true</p>",
        "id": 204847325,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534741
    },
    {
        "content": "<p>was that reproducible?</p>",
        "id": 204847331,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534745
    },
    {
        "content": "<p>I only tried once.</p>",
        "id": 204847396,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595534770
    },
    {
        "content": "<p>I was trying to make a rust program that would simulate calling <code>git</code> as a process, but it's not failing now. <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 204847436,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595534801
    },
    {
        "content": "<p>this may also just be a bug in github caching?</p>",
        "id": 204847509,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534854
    },
    {
        "content": "<p>I'm totally lost</p>",
        "id": 204847535,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595534866
    },
    {
        "content": "<p>caching oddity seems like a prime suspect</p>",
        "id": 204847658,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595534933
    },
    {
        "content": "<p>But why it only appears on 32 bit builders <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 204847679,
        "sender_full_name": "mati865",
        "timestamp": 1595534949
    },
    {
        "content": "<p>There's a seperate cache for each builder, right? Maybe something got corrupted in the 32-bit builder.</p>",
        "id": 204847716,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1595534982
    },
    {
        "content": "<p>strange.  I'm going to reopen the tree, since I can't repro anymore.  If it happens again, I'll try to investigate more.</p>",
        "id": 204848003,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595535135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> I just saw this error in backtrace-rs's CI</p>",
        "id": 205504622,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128538
    },
    {
        "content": "<p>according to <a href=\"https://github.com/rust-lang/backtrace-rs/pull/367#issuecomment-666488573\">https://github.com/rust-lang/backtrace-rs/pull/367#issuecomment-666488573</a></p>",
        "id": 205504649,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128551
    },
    {
        "content": "<p>(I reran the builds though which trumped things)</p>",
        "id": 205504664,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128559
    },
    {
        "content": "<p>I believe it was gnu32 having issues</p>",
        "id": 205504687,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128570
    },
    {
        "content": "<p>Thanks.  I just reproduced on my test repo using  1.46 beta i686-linux-gnu</p>",
        "id": 205505504,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596129077
    },
    {
        "content": "<p>Hm, caught a failure with <code>CARGO_HTTP_DEBUG</code>.  Nothing interesting other than the failure was on a different IP.</p>",
        "id": 205507040,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596130011
    },
    {
        "content": "<p>Out of 10 runs, 2 failed with ip <code>140.82.114.4</code>, 8 succeeded at IPs <code>140.82.112.3 140.82.112.4 140.82.113.3 140.82.113.4</code>.</p>",
        "id": 205507355,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596130192
    },
    {
        "content": "<p>I'm able to repro locally by redirecting <a href=\"http://github.com\">github.com</a> to that IP.</p>",
        "id": 205509294,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596131180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> you were able to reproduce with the CLI locally using that IP?</p>",
        "id": 205511131,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596132090
    },
    {
        "content": "<p>if that's the case we should probably raise this with some support ticket with them</p>",
        "id": 205511175,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596132108
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> Yes.</p>",
        "id": 205512592,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596132700
    },
    {
        "content": "<p>I'd like to figure out exactly why, it still seems to only fail with i686.</p>",
        "id": 205512616,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596132713
    },
    {
        "content": "<p>Instrumented libgit2.  The error is Z_BUF_ERROR</p>",
        "id": 205512628,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596132722
    },
    {
        "content": "<p>The documentation in zlib.h is...nicely verbose, but takes a bit to read it all. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 205512731,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596132762
    },
    {
        "content": "<p>heh yeah you're not kidding</p>",
        "id": 205512833,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596132825
    },
    {
        "content": "<p>this doesn't seem to confirm though about how the x86_64 command line (presumably) failed to clone?</p>",
        "id": 205512863,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596132840
    },
    {
        "content": "<p>yea, I don't know.  I can't repro with the command-line against that IP, but cargo i686 is very reproducible (100%).</p>",
        "id": 205513011,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596132881
    },
    {
        "content": "<p>also if you still can, I'd recommend capturing an <code>rr</code> trace</p>",
        "id": 205513022,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596132893
    },
    {
        "content": "<p>to assist in debugging later</p>",
        "id": 205513036,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596132898
    },
    {
        "content": "<p>I think you can also share that so others can repro too</p>",
        "id": 205513090,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596132925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> <code>AMD CPUs not supported.</code> for <code>rr</code> <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 205513652,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596133162
    },
    {
        "content": "<p>got a command line for me?</p>",
        "id": 205513680,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596133173
    },
    {
        "content": "<p>I can try to capture locally</p>",
        "id": 205513696,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596133178
    },
    {
        "content": "<p>I run <code>CARGO_HOME=chome cargo +beta-i686-unknown-linux-gnu fetch</code> in a project with a single dependency.</p>",
        "id": 205513828,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596133224
    },
    {
        "content": "<p>I have <code>140.82.114.4 github.com</code> in <code>/etc/hosts</code></p>",
        "id": 205513853,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596133238
    },
    {
        "content": "<p>oh right rr chokes for me on 32-bit processes</p>",
        "id": 205513978,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596133299
    },
    {
        "content": "<p>dang, it has stopped reproducing.  One thing I noticed is that <a href=\"https://github.com/libgit2/libgit2/blob/a83fd5107879d18b31ff8173ea062136256321be/src/pack.c#L847\">this line</a> in libgit2 doesn't check for an error return value.  I'm trying to figure out how that function can end up with the <code>Z_BUF_ERROR</code> state.  <code>Z_BUF_ERROR</code> isn't supposed to be fatal, and this loop looks a little suspicious.</p>",
        "id": 205517890,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596135289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> I think I have a repro!  I found a copy of the troublesome index.  Check out <a href=\"https://github.com/ehuss/zlib-repro\">https://github.com/ehuss/zlib-repro</a> and follow instructions in README.  The index fails to clone on i686, but succeeds with x86_64.</p>",
        "id": 205541380,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596149179
    },
    {
        "content": "<p>nice! I'll try to help digging in to this tomorrow. This looks like it's probably good enough to send to upstream libgit2/libgit2 as well</p>",
        "id": 205544528,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596151927
    },
    {
        "content": "<p>(once we reduce it to just C in play and also using the libgit2 build system)</p>",
        "id": 205544536,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596151937
    },
    {
        "content": "<p>it looks like this was hit again <a href=\"https://github.com/rust-lang/rust/pull/75037#issuecomment-668840895\">here</a></p>",
        "id": 205973212,
        "sender_full_name": "tmandry",
        "timestamp": 1596583689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> see the discussion in <a href=\"#narrow/stream/242791-t-infra/topic/CI\">https://rust-lang.zulipchat.com/#narrow/stream/242791-t-infra/topic/CI</a>.  We squashed the index about an hour ago, which should clear it up.</p>",
        "id": 205973377,
        "sender_full_name": "Eric Huss",
        "timestamp": 1596583847
    },
    {
        "content": "<p>ah I missed that somehow, thanks</p>",
        "id": 205973416,
        "sender_full_name": "tmandry",
        "timestamp": 1596583892
    },
    {
        "content": "<p>It looks like the zlib errors were not fixed, I've noticed a few PRs recently that have failed on 32-bit jobs.  If anyone notices one of these errors, can you ping me right away?  I'd like to try to catch the index in the broken state for further analysis.  I'm really confused, because I double checked that <code>beta-2020-10-16-i686-unknown-linux-gnu</code> had fixed the issue, and it passes the tests that I have.</p>",
        "id": 214792282,
        "sender_full_name": "Eric Huss",
        "timestamp": 1603855074
    },
    {
        "content": "<p>Specifically, any CI job that displays the error <code>error inflating zlib stream; class=Zlib</code></p>",
        "id": 214792359,
        "sender_full_name": "Eric Huss",
        "timestamp": 1603855160
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/242791-t-infra/topic/zlib.20errors/near/214792359\">said</a>:</p>\n<blockquote>\n<p>Specifically, any CI job that displays the error <code>error inflating zlib stream; class=Zlib</code></p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/75671#issuecomment-717369192\">https://github.com/rust-lang/rust/pull/75671#issuecomment-717369192</a></p>",
        "id": 214793084,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603856037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Thanks, that's one of the ones I saw earlier. Unfortunately it's a bit too late, as the index changes frequently. The window to catch it is unfortunately kinda small.</p>",
        "id": 214794510,
        "sender_full_name": "Eric Huss",
        "timestamp": 1603857962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> <a href=\"#narrow/stream/246057-t-cargo/topic/pinging.20for.20zlib.20error\">https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/pinging.20for.20zlib.20error</a></p>",
        "id": 215265181,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604268974
    }
]