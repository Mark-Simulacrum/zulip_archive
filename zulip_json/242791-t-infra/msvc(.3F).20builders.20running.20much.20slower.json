[
    {
        "content": "<p>I noticed CI times were back up to ~4 hours and after some investigation it seems like the primary culprit is the dist-x86_64-msvc-alt builder, which seems to have somehow lost a bunch of parallelism several times over the last few months:</p>\n<p><a href=\"/user_uploads/4715/qEZ-Q5MHXUG7zaExQq6Lnmqa/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/qEZ-Q5MHXUG7zaExQq6Lnmqa/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/qEZ-Q5MHXUG7zaExQq6Lnmqa/image.png\"></a></div>",
        "id": 272615740,
        "sender_full_name": "simulacrum",
        "timestamp": 1645390549
    },
    {
        "content": "<p>the -alt builder in particular has really dropped, but the non-alt builder is also not doing too great</p>",
        "id": 272615790,
        "sender_full_name": "simulacrum",
        "timestamp": 1645390568
    },
    {
        "content": "<p>I'll try to spend some time investigating but wanted to start a thread in case someone has seen this elsewhere and has some immediate thoughts</p>",
        "id": 272615814,
        "sender_full_name": "simulacrum",
        "timestamp": 1645390604
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/93800\">https://github.com/rust-lang/rust/pull/93800</a> seems to be the most recent loss -- but that PR doesn't have anything obvious to do with msvc</p>",
        "id": 272616527,
        "sender_full_name": "simulacrum",
        "timestamp": 1645391243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> what was the CI step extraction script/page you had again?</p>",
        "id": 272616743,
        "sender_full_name": "simulacrum",
        "timestamp": 1645391451
    },
    {
        "content": "<p><a href=\"https://gist.github.com/pietroalbini/5be40788e4d7c8e44c06121b4da0b0ab\">https://gist.github.com/pietroalbini/5be40788e4d7c8e44c06121b4da0b0ab</a></p>",
        "id": 272616761,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1645391477
    },
    {
        "content": "<p>thanks</p>",
        "id": 272616772,
        "sender_full_name": "simulacrum",
        "timestamp": 1645391494
    },
    {
        "content": "<p>both stage 0 and stage 1 rustc step parallelism dropped by ~20% after that PR</p>",
        "id": 272616997,
        "sender_full_name": "simulacrum",
        "timestamp": 1645391745
    },
    {
        "content": "<p>std build parallelism largely unchanged, so seems like the problem is presumably some kind of pathological code inside rustc in terms of IR verification or so?</p>",
        "id": 272617083,
        "sender_full_name": "simulacrum",
        "timestamp": 1645391827
    },
    {
        "content": "<p>that is (I guess) msvc specific</p>",
        "id": 272617166,
        "sender_full_name": "simulacrum",
        "timestamp": 1645391893
    },
    {
        "content": "<p>or at least windows -- it looks like we don't actually have a mingw-alt builder</p>",
        "id": 272617207,
        "sender_full_name": "simulacrum",
        "timestamp": 1645391955
    },
    {
        "content": "<p>I filed <a href=\"https://github.com/rust-lang/rust/pull/94195\">https://github.com/rust-lang/rust/pull/94195</a> to experiment with a revert</p>",
        "id": 272617421,
        "sender_full_name": "simulacrum",
        "timestamp": 1645392200
    },
    {
        "content": "<p>going to see if I can figure out <em>which</em> crate caused the increase</p>",
        "id": 272617425,
        "sender_full_name": "simulacrum",
        "timestamp": 1645392208
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ rg &#39;.*RUSTC-TIMING\\] (\\S+) test:(false|true) (.*)$&#39; --replace &#39;$3 $2 $1&#39; good.log | sort -rn | head\n1240.363 false rustc_driver\n1108.160 false rustc_driver\n368.223 false rustc_query_impl\n341.553 false rustc_middle\n340.834 false rustc_query_impl\n322.604 false rustc_resolve\n308.015 false rustc_passes\n306.273 false rustc_trait_selection\n298.735 false rustc_metadata\n295.064 false rustc_codegen_ssa\n\n$ rg &#39;.*RUSTC-TIMING\\] (\\S+) test:(false|true) (.*)$&#39; --replace &#39;$3 $2 $1&#39; bad.log | sort -rn | head\n4419.596 false rustc_middle\n4191.318 false rustc_middle\n989.570 false rustc_driver\n985.791 false rustc_driver\n421.908 false rustc_query_impl\n334.079 false rustc_trait_selection\n333.512 false rustc_query_impl\n327.128 false rustc_passes\n309.755 false rustc_resolve\n284.912 false rustc_traits\n</code></pre></div>",
        "id": 272617534,
        "sender_full_name": "simulacrum",
        "timestamp": 1645392340
    },
    {
        "content": "<p>rustc_middle seems pretty clearly at the heart of the problem, moving from ~340 -&gt; 4000 seconds</p>",
        "id": 272617596,
        "sender_full_name": "simulacrum",
        "timestamp": 1645392374
    },
    {
        "content": "<p>That PR did touch some code in rustc_middle, which is at least a positive sign in some senes</p>",
        "id": 272617645,
        "sender_full_name": "simulacrum",
        "timestamp": 1645392453
    },
    {
        "content": "<p>Any ideas why there are jumps around Jan 1 and Jan 30?</p>",
        "id": 272618038,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645392881
    },
    {
        "content": "<p>no</p>",
        "id": 272618153,
        "sender_full_name": "simulacrum",
        "timestamp": 1645393020
    },
    {
        "content": "<p>those appear on other builders too, iirc</p>",
        "id": 272618161,
        "sender_full_name": "simulacrum",
        "timestamp": 1645393026
    },
    {
        "content": "<p>all msvc builders:</p>\n<p><a href=\"/user_uploads/4715/JZdBuKc5nWJLxsdgYhDjNNhz/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/JZdBuKc5nWJLxsdgYhDjNNhz/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/JZdBuKc5nWJLxsdgYhDjNNhz/image.png\"></a></div><p>looks like drops on those dates in dist-x86_64-msvc, dist-aarch64-msvc, and dist-x86_64-msvc-alt</p>",
        "id": 272618300,
        "sender_full_name": "simulacrum",
        "timestamp": 1645393171
    },
    {
        "content": "<p>I think the big jump on Jan 30 was due to <a href=\"https://github.com/rust-lang/rust/issues/93482\">#93482</a> which bumped to bootstrap compiler.</p>",
        "id": 272621741,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645397039
    },
    {
        "content": "<p>The big jump on jan 1 started around <a href=\"https://github.com/rust-lang/rust/issues/92455\">#92455</a>.  Not sure if that is a likely culprit.  Being on jan 1 seems conspicuous, as it could just as well be a change on GitHub's side.</p>",
        "id": 272621920,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645397215
    },
    {
        "content": "<p>Deploying something new on Jan 1st wouldn't be my first choice, but I agree it seems plausible, though not really expected</p>",
        "id": 272622709,
        "sender_full_name": "simulacrum",
        "timestamp": 1645398050
    },
    {
        "content": "<p>(given this is cpu parallelism which in theory shouldn't really be affected by GitHub things)</p>",
        "id": 272622738,
        "sender_full_name": "simulacrum",
        "timestamp": 1645398071
    },
    {
        "content": "<p>I'm able to reproduce the extreme regression of rustc_middle locally.  From a stack trace, it seems to be busy somewhere in LTO</p>",
        "id": 272627540,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645403556
    },
    {
        "content": "<p>From what I can tell, the only required option is <code>parallel-compiler=true</code></p>",
        "id": 272630134,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645406718
    },
    {
        "content": "<p>Unfortunately building with debuginfo-level=1 seems to unstick it.  That makes it difficult to get a stack trace.</p>",
        "id": 272630461,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645407146
    },
    {
        "content": "<p>Ah interesting</p>",
        "id": 272630758,
        "sender_full_name": "simulacrum",
        "timestamp": 1645407551
    },
    {
        "content": "<p>Well, hopefully we can just revert the most recent fault patch</p>",
        "id": 272630773,
        "sender_full_name": "simulacrum",
        "timestamp": 1645407582
    },
    {
        "content": "<p>Here's a backtrace of where I happened to interrupt it after running for several minutes.</p>\n<div class=\"codehilite\"><pre><span></span><code>rustc_driver_ee39cd910b981af1!llvm::colorEHFunclets+0x13e\nrustc_driver_ee39cd910b981af1!llvm::LoopSafetyInfo::computeBlockColors+0x6c\nrustc_driver_ee39cd910b981af1!llvm::LICMPass::run+0x609\nrustc_driver_ee39cd910b981af1!llvm::LICMPass::run+0xaa\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::Loop,llvm::LICMPass,llvm::PreservedAnalyses,llvm::Analysis Manager&lt;llvm::Loop,llvm::LoopStandardAnalysisResults &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr64&gt;::run+0x1b\nrustc_driver_ee39cd910b981af1!llvm::PassManager&lt;llvm::Loop,llvm::AnalysisManager&lt;llvm::Loop,llvm::LoopStandardAnalysis Results &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr64&gt;::runSinglePass&lt;llvm::Loop,std::unique_ptr&lt;llvm::detail::PassConcept&lt;llvm::Loop,llvm::AnalysisManager&lt;llvm::Loop,llvm::LoopStandardAnalysisResults &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr 64&gt;,std::default_delete&lt;llvm::detail::PassConcept&lt;llvm::Loop,llvm::AnalysisManager&lt;llvm::Loop,llvm::LoopStandardAnalysisResults &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr64&gt; &gt; &gt; &gt;+0x15c\nrustc_driver_ee39cd910b981af1!llvm::PassManager&lt;llvm::Loop,llvm::AnalysisManager&lt;llvm::Loop,llvm::LoopStandardAnalysis Results &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr64&gt;::runWithoutLoopNestPasses+0x114\nrustc_driver_ee39cd910b981af1!llvm::PassManager&lt;llvm::Loop,llvm::AnalysisManager&lt;llvm::Loop,llvm::LoopStandardAnalysis Results &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr64&gt;::run+0x41\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::Loop,llvm::PassManager&lt;llvm::Loop,llvm::AnalysisManager&lt;llvm::Loop,llvm::LoopStandardAnalysisResults &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr64&gt;,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Loop,llvm::LoopStandardAnalysisResults &amp; __ptr64&gt;,llvm::LoopStandardAnalysisResults &amp; __ptr64,llvm::LPMUpdater &amp; __ptr64&gt;::run+0x1b\nrustc_driver_ee39cd910b981af1!llvm::FunctionToLoopPassAdaptor::run+0x5a9\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::Function,llvm::FunctionToLoopPassAdaptor,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt; &gt;::run+0x11\nrustc_driver_ee39cd910b981af1!llvm::PassManager&lt;llvm::Function,llvm::AnalysisManager&lt;llvm::Function&gt; &gt;::run+0x1b3\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::Function,llvm::PassManager&lt;llvm::Function,llvm::AnalysisManager&lt;llvm::Function&gt; &gt;,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt; &gt;::run+0x11\nrustc_driver_ee39cd910b981af1!llvm::CGSCCToFunctionPassAdaptor::run+0x34f\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC,llvm::CGSCCToFunctionPassAdaptor,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC,llvm::LazyCallGraph &amp; __ptr64&gt;,llvm::LazyCallGraph &amp; __ptr64,llvm::CGSCCUpdateResult &amp; __ptr64&gt;::run+0x1b\nrustc_driver_ee39cd910b981af1!llvm::PassManager&lt;llvm::LazyCallGraph::SCC,llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC,llvm::LazyCallGraph &amp; __ptr64&gt;,llvm::LazyCallGraph &amp; __ptr64,llvm::CGSCCUpdateResult &amp; __ptr64&gt;::run+0x271\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC,llvm::PassManager&lt;llvm::LazyCallGraph::SCC,llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC,llvm::LazyCallGraph &amp; __ptr64&gt;,llvm::LazyCallGraph &amp; __ptr64,llvm::CGSCCUpdateResult &amp; __ptr64&gt;,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC,llvm::LazyCallGraph &amp; __ptr64&gt;,llvm::LazyCallGraph &amp; __ptr64,llvm::CGSCCUpdateResult &amp; __ptr64&gt;::run+0x1b\nrustc_driver_ee39cd910b981af1!llvm::DevirtSCCRepeatedPass::run+0x13a\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC,llvm::DevirtSCCRepeatedPass,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC,llvm::LazyCallGraph &amp; __ptr64&gt;,llvm::LazyCallGraph &amp; __ptr64,llvm::CGSCCUpdateResult &amp; __ptr64&gt;::run+0x1b\nrustc_driver_ee39cd910b981af1!llvm::ModuleToPostOrderCGSCCPassAdaptor::run+0xaf4\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::Module,llvm::ModuleToPostOrderCGSCCPassAdaptor,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Module&gt; &gt;::run+0x11\nrustc_driver_ee39cd910b981af1!llvm::PassManager&lt;llvm::Module,llvm::AnalysisManager&lt;llvm::Module&gt; &gt;::run+0x1dc\nrustc_driver_ee39cd910b981af1!llvm::ModuleInlinerWrapperPass::run+0x1ae\nrustc_driver_ee39cd910b981af1!llvm::detail::PassModel&lt;llvm::Module,llvm::ModuleInlinerWrapperPass,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Module&gt; &gt;::run+0x11\nrustc_driver_ee39cd910b981af1!llvm::PassManager&lt;llvm::Module,llvm::AnalysisManager&lt;llvm::Module&gt; &gt;::run+0x1dc\nrustc_driver_ee39cd910b981af1!LLVMRustOptimizeWithNewPassManager+0x1f1e\nrustc_driver_ee39cd910b981af1!RNvNtNtCs6SNynvbAJdk_18rustc_codegen_llvm4back5write35optimize_with_new_llvm_pass_manager+0x3d3\nrustc_driver_ee39cd910b981af1!RNvNtNtCs6SNynvbAJdk_18rustc_codegen_llvm4back3lto16run_pass_manager.llvm.3418372231631649475+0xeb\nrustc_driver_ee39cd910b981af1!RNvXs1_Cs6SNynvbAJdk_18rustc_codegen_llvmNtB5_18LlvmCodegenBackendNtNtNtCsbp3SflIICtV_17\nrustc_codegen_ssa6traits5write19WriteBackendMethods13optimize_thin+0x1fed\nrustc_driver_ee39cd910b981af1!RNvMs_NtNtCsbp3SflIICtV_17rustc_codegen_ssa4back3ltoINtB4_16LtoModuleCodegenNtCs6SNynvbAJdk_18rustc_codegen_llvm18LlvmCodegenBackendE8optimizeB1e_+0x2d\nrustc_driver_ee39cd910b981af1!RINvNtNtCsbp3SflIICtV_17rustc_codegen_ssa4back5write17execute_work_itemNtCs6SNynvbAJdk_18rustc_codegen_llvm18LlvmCodegenBackendEB19_+0x2cf\nrustc_driver_ee39cd910b981af1!RINvNtNtCs7aJtBMv7B6j_3std10sys_common9backtrace28___rust_begin_short_backtraceNCINvXs0_Cs6SNynvbAJdk_18rustc_codegen_llvmNtB1o_18LlvmCodegenBackendNtNtNtCsbp3SflIICtV_17rustc_codegen_ssa6traits7backend19ExtraBackendMethods18spawn_named_threadNCINvNtNtB2s_4back5write10spawn_workB1W_E0uE0uEB1o_+0x123\nrustc_driver_ee39cd910b981af1!RINvNtCs2x5CUVA4D6k_4core3ptr13drop_in_placeINtNtNtCsbp3SflIICtV_17rustc_codegen_ssa4back5write7MessageNtCs6SNynvbAJdk_18rustc_codegen_llvm18LlvmCodegenBackendEEB1F_.llvm.15806222262414795940+0x10a4\nstd_55fdef28d7a196c8!alloc::boxed::impl$44::call_once+0xb\nstd_55fdef28d7a196c8!alloc::boxed::impl$44::call_once+0x16\nstd_55fdef28d7a196c8!std::sys::windows::thread::impl$0::new::thread_start+0x4c\nKERNEL32!BaseThreadInitThunk+0x14\nntdll!RtlUserThreadStart+0x21\n</code></pre></div>",
        "id": 272631322,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645408255
    },
    {
        "content": "<p>And after a few minutes, it's still in <code>computeBlockColors</code></p>",
        "id": 272631432,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645408389
    },
    {
        "content": "<p>I can dump the temp files if anyone wants to dig into why it is taking so long, otherwise I'm probably not going to look any further.  I don't really know anything about debugging llvm issues.</p>",
        "id": 272631741,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645408732
    },
    {
        "content": "<p>I think we'll revert the PR for now and leave it until someone spends the time to investigate, the try builds indicate that should work</p>",
        "id": 272634334,
        "sender_full_name": "simulacrum",
        "timestamp": 1645411582
    },
    {
        "content": "<p>I posted a revert, no particular r? but could use a relatively quick review to get CI times back down -- <a href=\"https://github.com/rust-lang/rust/pull/94205\">https://github.com/rust-lang/rust/pull/94205</a></p>",
        "id": 272635241,
        "sender_full_name": "simulacrum",
        "timestamp": 1645412480
    }
]