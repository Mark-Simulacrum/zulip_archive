[
    {
        "content": "<p>I'm trying to build rustc with a custom configuration and I <em>think</em> I found a problem in rustbuild</p>",
        "id": 246198602,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626425192
    },
    {
        "content": "<p>according to <a href=\"https://github.com/rust-lang/rust/blob/057050a95bdfc5849a893208c53c7b2a081c6808/config.toml.example#L260-L271\"><code>config.toml.example</code></a>, if I have this configuration:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[build]</span>\n<span class=\"n\">extended</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">tools</span> <span class=\"o\">=</span> <span class=\"k\">[\"cargo\"]</span>\n</code></pre></div>\n<p>and I run <code>./x.py dist</code>, only rustc + rustdoc + cargo should be built, and clippy/rustfmt/etc should <em>not</em></p>",
        "id": 246198782,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626425313
    },
    {
        "content": "<p>that seems to work as expected for both <code>./x.py build</code> and <code>./x.py install</code>, as both of those use <code>should_run()</code> to disable themselves by default if <code>!extended</code> or the tool is not present in <code>tools</code></p>",
        "id": 246198843,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626425391
    },
    {
        "content": "<p>the <code>extended</code> step in <code>./x.py dist</code> seems to ignore the <code>tools</code> key completely though, except for <code>rustc-demangler</code></p>",
        "id": 246198938,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626425453
    },
    {
        "content": "<p>things in <code>dist.rs</code> also seem to be using <code>assert!(config.extended)</code> to prevent running <code>./x.py dist src/tools/clippy</code> manually if one were to chose to do so, instead of just returning <code>false</code> in <code>should_run()</code></p>",
        "id": 246199005,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626425508
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is my understanding here correct? I'm happy to send patches to fix those if it's not the intended behavior (or update the docs if it is)</p>",
        "id": 246199061,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626425529
    },
    {
        "content": "<p>I think it's not the intended behavior, there's an extensive collection of issues I'd guess about this - the tools key in general isn't too well integrated (particularly in dist)</p>",
        "id": 246211668,
        "sender_full_name": "simulacrum",
        "timestamp": 1626435215
    },
    {
        "content": "<p>I don't really recall why/what extended is for, it feels like something we should maybe get rid of though. (Just require listing tools or not instead).</p>",
        "id": 246211771,
        "sender_full_name": "simulacrum",
        "timestamp": 1626435267
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/242791-t-infra/topic/x.2Epy.20dist.20and.20tools/near/246211771\">said</a>:</p>\n<blockquote>\n<p>I don't really recall why/what extended is for, it feels like something we should maybe get rid of though. (Just require listing tools or not instead).</p>\n</blockquote>\n<p><code>extended</code> is both a toggle for \"build non-rustc and non-rustdoc tools\" and also produces the \"combined\" tarball</p>",
        "id": 246213145,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626436344
    },
    {
        "content": "<p>Hm, seems like it might be good to integrate that with tools = - to avoid having tools listed but extended off. I think we could probably always produce the combined tarball, just sometimes it'll be empty. (Or skip production if it ends up empty)</p>",
        "id": 246213952,
        "sender_full_name": "simulacrum",
        "timestamp": 1626436926
    },
    {
        "content": "<p>ok opened <a href=\"https://github.com/rust-lang/rust/pull/87282\">https://github.com/rust-lang/rust/pull/87282</a> fixing this</p>",
        "id": 246461958,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1626705006
    }
]