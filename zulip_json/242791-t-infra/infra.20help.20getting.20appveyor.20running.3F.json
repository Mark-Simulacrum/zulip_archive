[
    {
        "content": "<p>I'd like to get appveyor running on <a href=\"https://github.com/rust-lang/libz-sys\">https://github.com/rust-lang/libz-sys</a>, and it doesn't currently appear to be. (I don't think it's been working since the repository was moved from <a href=\"https://github.com/alexcrichton/libz-sys\">https://github.com/alexcrichton/libz-sys</a> .)</p>",
        "id": 207054085,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597551684
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"217588\" href=\"/#narrow/stream/217588-project-leads-.28public.29/topic/infra.20help.20getting.20appveyor.20running.3F\">#project leads (public) &gt; infra help getting appveyor running?</a> by <span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span></p>",
        "id": 207054571,
        "sender_full_name": "Notification Bot",
        "timestamp": 1597552569
    },
    {
        "content": "<p>The project has an <code>appveyor.yml</code> already, but appveyor doesn't check each commit or PR.</p>",
        "id": 207054592,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597552624
    },
    {
        "content": "<p>(Separate from that, I'd certainly welcome PRs switching away from appveyor to the preferred Windows CI solution, but for now, there's a working appveyor configuration I'd like to use.)</p>",
        "id": 207055345,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597554095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I can write a PR switching to GitHub actions.</p>",
        "id": 207061394,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597566240
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/libz-sys/pull/67\">https://github.com/rust-lang/libz-sys/pull/67</a></p>",
        "id": 207075005,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597590339
    },
    {
        "content": "<p>Thanks! That will need some tweaking, because the vcpkg stuff is supposed to be a different variant in the matrix for Windows, tested separately from the non-vcpkg case.</p>",
        "id": 207076831,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597593305
    },
    {
        "content": "<p>But that looks great, thank you!</p>",
        "id": 207076836,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597593321
    },
    {
        "content": "<p>Also, the failure on Windows is legitimate.</p>",
        "id": 207076844,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597593337
    },
    {
        "content": "<p>That's why I needed to CI working for windows, and why I'm glad I didn't ship a release until then.</p>",
        "id": 207076889,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597593374
    },
    {
        "content": "<p>Yeah, I wanted to make sure MSVC worked before adding variants.  <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Let me know once it's fixed and I can update the PR.</p>",
        "id": 207080008,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597598428
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> Will do, and thanks! Shouldn't take long...</p>",
        "id": 207080020,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597598477
    },
    {
        "content": "<p>Currently awaiting the fix in <a href=\"https://github.com/zlib-ng/zlib-ng/pull/721\">https://github.com/zlib-ng/zlib-ng/pull/721</a></p>",
        "id": 207084116,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597604206
    },
    {
        "content": "<p>The need for that fix looks unfortunate. IIUC since Windows is LLP64 that PR will reduce input and output files to 4 GiB.</p>",
        "id": 207084761,
        "sender_full_name": "mati865",
        "timestamp": 1597604770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> It is unfortunate, but it's part of the zlib ABI.</p>",
        "id": 207084858,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597604918
    },
    {
        "content": "<p>Is zlib-ng ABI compatible with zlib?</p>",
        "id": 207084949,
        "sender_full_name": "mati865",
        "timestamp": 1597604984
    },
    {
        "content": "<p>It is when you're in zlib-compat mode.</p>",
        "id": 207084971,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597604991
    },
    {
        "content": "<p>Ok, thanks.</p>",
        "id": 207085015,
        "sender_full_name": "mati865",
        "timestamp": 1597605016
    },
    {
        "content": "<p>There's a non-zlib-compatible API, and it uses appropriately sized types everywhere.</p>",
        "id": 207085018,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597605029
    },
    {
        "content": "<p>Also, it's possible to work with &gt;4GB files in the stock zlib interface. Just avoid the <code>gz*</code> functions entirely, read/write files yourself, and then use inflate/deflate in buffers.</p>",
        "id": 207085052,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597605078
    },
    {
        "content": "<p><code>flate2</code> will work just fine with arbitrarily-sized files, for instance.</p>",
        "id": 207085061,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597605096
    },
    {
        "content": "<p>Good to know!</p>",
        "id": 207085120,
        "sender_full_name": "mati865",
        "timestamp": 1597605136
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> I've fixed the issues on Windows. Would you mind updating the PR?</p>",
        "id": 207097600,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597624996
    },
    {
        "content": "<p>Will do</p>",
        "id": 207110386,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597645502
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Do you also want to test other variants on macOS or Linux too or just Windows?</p>",
        "id": 207110454,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597645571
    },
    {
        "content": "<p>Testing other variants on all platforms would be great.</p>",
        "id": 207110512,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597645680
    },
    {
        "content": "<p>Each platform should test plain and zlib-ng on stable/beta/nightly. Then there are the few odd cases outside of that matrix, as appear in the current CI files.</p>",
        "id": 207110576,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597645747
    },
    {
        "content": "<p>Please let me know if I have to do anything in the repository to enable all this, other than merge your PR. I haven't used GHA before.</p>",
        "id": 207110876,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597646151
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> Thank you so much for all your help.</p>",
        "id": 207110918,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597646174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> All that should be required is merging the PR.</p>",
        "id": 207117641,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597652407
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> Around?</p>",
        "id": 207148490,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597673534
    },
    {
        "content": "<p>I do not understand what's going on with the windows build now. Cannot find the library to link? That doesn't make sense.</p>",
        "id": 207149926,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597674316
    },
    {
        "content": "<p>Well I'm getting that error on other platforms too so that makes me think it's just not finding zlib.</p>",
        "id": 207152747,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597675778
    },
    {
        "content": "<p>It worked fine in Travis...</p>",
        "id": 207156792,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597677688
    },
    {
        "content": "<p>Oh. I see. It appears to be failing primarily in the --all-features build.</p>",
        "id": 207157986,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597678278
    },
    {
        "content": "<p>So that's an issue, but not necessarily a new issue.</p>",
        "id": 207157987,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597678278
    },
    {
        "content": "<p>That wasn't being tested before.</p>",
        "id": 207157988,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597678278
    },
    {
        "content": "<p>I'll give a shot at fixing that.</p>",
        "id": 207157989,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597678278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> I saw the invite to your repository. Is that just so I can see the actions logs directly?</p>",
        "id": 207159251,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597678883
    },
    {
        "content": "<p>Well I figure it would make it easier to test in case. I can fix the all features thing.</p>",
        "id": 207159479,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597678999
    },
    {
        "content": "<p>I'm testing a little as well, in joshtriplett/libz-sys on the github-actions-test branch.</p>",
        "id": 207160065,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597679254
    },
    {
        "content": "<p>/me continues to be baffled.</p>",
        "id": 207161696,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680018
    },
    {
        "content": "<p>Let's see. All the musl builds are failing for some msyterious reason involving <code>putc</code>, <code>fputc</code>, and similar; I'm going to disable those for now because that wasn't tested before and debugging it isn't a today problem.</p>",
        "id": 207161958,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680146
    },
    {
        "content": "<p>I don't understand why the 32-bit -windows-gnu build fails with an inability to find the compiler.</p>",
        "id": 207162456,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680385
    },
    {
        "content": "<p>rustc ships gcc for linking, but its not necessarily made available for <code>cc</code>-the-crate IIRC?</p>",
        "id": 207162602,
        "sender_full_name": "nagisa",
        "timestamp": 1597680466
    },
    {
        "content": "<p>I have hit the same issue in the past: <a href=\"https://github.com/rust-lang/stacker/blob/master/.github/workflows/stacker.yml#L43\">https://github.com/rust-lang/stacker/blob/master/.github/workflows/stacker.yml#L43</a></p>",
        "id": 207162712,
        "sender_full_name": "nagisa",
        "timestamp": 1597680509
    },
    {
        "content": "<p>Sigh.</p>",
        "id": 207162946,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680616
    },
    {
        "content": "<p>The only one I'm really <em>bothered</em> by, as a can't-ship-until-fixed issue, is:</p>\n<blockquote>\n<p>= note: LINK : fatal error LNK1181: cannot open input file 'z.lib'</p>\n</blockquote>",
        "id": 207163111,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680700
    },
    {
        "content": "<p>(The second most important is testing on 32-bit Windows, but if I can't test 32-bit windows-gnu but I <em>can</em> test 32-bit windows-msvc it won't be the end of the world for me.)</p>",
        "id": 207163367,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680843
    },
    {
        "content": "<p>how do you install/build that?</p>",
        "id": 207163443,
        "sender_full_name": "nagisa",
        "timestamp": 1597680874
    },
    {
        "content": "<p><code>z.lib</code>? In the case that's failing, it's being built with the <code>cmake</code> crate.</p>",
        "id": 207163556,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680939
    },
    {
        "content": "<p><a href=\"https://github.com/joshtriplett/libz-sys/runs/994352811?check_suite_focus=true\">https://github.com/joshtriplett/libz-sys/runs/994352811?check_suite_focus=true</a></p>",
        "id": 207163609,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680961
    },
    {
        "content": "<p>Scroll to the bottom of the failing section.</p>",
        "id": 207163665,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597680977
    },
    {
        "content": "<p>Here's the whole function that does the build in that case:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">build_zlib_ng</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">install_dir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cmake</span>::<span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s\">&quot;src/zlib-ng&quot;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">define</span><span class=\"p\">(</span><span class=\"s\">&quot;BUILD_SHARED_LIBS&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;OFF&quot;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">define</span><span class=\"p\">(</span><span class=\"s\">&quot;ZLIB_COMPAT&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;ON&quot;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">define</span><span class=\"p\">(</span><span class=\"s\">&quot;WITH_GZFILEOP&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;ON&quot;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">includedir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">install_dir</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s\">&quot;include&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">libdir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">install_dir</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s\">&quot;lib&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;cargo:rustc-link-search=native={}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">libdir</span><span class=\"p\">.</span><span class=\"n\">to_str</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;cargo:rustc-link-lib=z&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;cargo:root={}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">install_dir</span><span class=\"p\">.</span><span class=\"n\">to_str</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;cargo:include={}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">includedir</span><span class=\"p\">.</span><span class=\"n\">to_str</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 207163700,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681002
    },
    {
        "content": "<p>...oh.</p>",
        "id": 207163942,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681108
    },
    {
        "content": "<p>Hrm, testing something...</p>",
        "id": 207163955,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681114
    },
    {
        "content": "<p>According to the cmake docs, apparently you're supposed to point rustc-link-search to the directory <code>.build()</code> returns, not a subdirectory of it? Let's see how that goes.</p>",
        "id": 207164212,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681254
    },
    {
        "content": "<p>yeah never had to interact with the <code>cmake</code> crate so far <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 207164506,
        "sender_full_name": "nagisa",
        "timestamp": 1597681401
    },
    {
        "content": "<p>the only other comment I have is that you want to <code>#[link(name=\"z\")]</code> over the extern block in your actual crate, if you haven’t already, which makes <code>rustc-link-lib</code> superfluous.</p>",
        "id": 207164634,
        "sender_full_name": "nagisa",
        "timestamp": 1597681455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> There are other cases where that won't work, I think.</p>",
        "id": 207164671,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681481
    },
    {
        "content": "<p>Not all branches of <code>build.rs</code> print that line.</p>",
        "id": 207164712,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> x86_64-apple-darwin is doing this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Warning: `cross` does not provide a Docker image for target x86_64-apple-darwin, specify a custom image in `Cross.toml`. Falling back to `cargo` on the host.\n</code></pre></div>",
        "id": 207164933,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681624
    },
    {
        "content": "<p>hm, I can’t think of the cases where <code>#[link(name)]</code> does not replace <code>rustc-link-lib</code>, but you definitely want former. Without that rustc is unable to track dependencies and you can run into <a href=\"https://github.com/rust-lang/rust/issues/65610\">https://github.com/rust-lang/rust/issues/65610</a></p>",
        "id": 207164952,
        "sender_full_name": "nagisa",
        "timestamp": 1597681635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> Any idea what that's about? It looks like it's just doing a host build.</p>",
        "id": 207164958,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681638
    },
    {
        "content": "<p>you don’t want to use cross with gha, but ci.yml does attempt it</p>",
        "id": 207165122,
        "sender_full_name": "nagisa",
        "timestamp": 1597681710
    },
    {
        "content": "<p>Huh. OK. So that bit of the template should just be dropped?</p>",
        "id": 207165182,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681735
    },
    {
        "content": "<p>yeah. I would also probably use the rust_toolchain action instead of installing manually, but that's up to you if you want to spend time cleaning it up.</p>",
        "id": 207165247,
        "sender_full_name": "nagisa",
        "timestamp": 1597681766
    },
    {
        "content": "<p>(<a href=\"https://github.com/marketplace/actions/rust-toolchain\">https://github.com/marketplace/actions/rust-toolchain</a>)</p>",
        "id": 207165285,
        "sender_full_name": "nagisa",
        "timestamp": 1597681784
    },
    {
        "content": "<p>/me is not a GHA expert, or even a GHA novice.</p>",
        "id": 207165394,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681816
    },
    {
        "content": "<p>Well, now <em>all</em> of the Windows builds fail, so, consistency? :)</p>",
        "id": 207165534,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681889
    },
    {
        "content": "<blockquote>\n<p>error: could not find native static library <code>z</code>, perhaps an -L flag is missing?</p>\n</blockquote>",
        "id": 207165536,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597681891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> GHA decided not to add MinGW compiler to the path by default. See <a href=\"https://github.com/rust-lang/libz-sys/pull/67#discussion_r471450253\">https://github.com/rust-lang/libz-sys/pull/67#discussion_r471450253</a> and also add <code>${msys2Path}/mingw64/bin</code> for 64 bit job and <code>${msys2Path}/mingw32/bin</code> for 32 bit job.</p>",
        "id": 207165952,
        "sender_full_name": "mati865",
        "timestamp": 1597682101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> You can totally use cross with gha, it’s how tokei is tested and deployed.</p>",
        "id": 207165982,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597682120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> Interesting. Why does the 64-bit compiler work out of the box, then, but the 32-bit one doesn't?</p>",
        "id": 207166014,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682139
    },
    {
        "content": "<p>No idea, maybe they have changed their mind and added 64 bit compiler to the PATH only?<br>\nCan I see the log?</p>",
        "id": 207166117,
        "sender_full_name": "mati865",
        "timestamp": 1597682179
    },
    {
        "content": "<p>Oh, wait. Are you saying that the 64-bit compiler may just be working because of the choco install line (which I hadn't removed yet)?</p>",
        "id": 207166250,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682259
    },
    {
        "content": "<p>Here's the current (experimental) run: <a href=\"https://github.com/joshtriplett/libz-sys/actions/runs/212344387\">https://github.com/joshtriplett/libz-sys/actions/runs/212344387</a></p>",
        "id": 207166277,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682276
    },
    {
        "content": "<p>I don't use choco for installing MSYS2 so I have no idea what it does but yes, sounds possible.</p>",
        "id": 207166345,
        "sender_full_name": "mati865",
        "timestamp": 1597682303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I mean it’s intentional to fallback to cargo because you wouldn’t need cross for that.</p>",
        "id": 207166362,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597682315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> What's the right way in GHA to add those directories to the PATH? Do you have a sample where you do that?</p>",
        "id": 207166431,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> Then why does it try to use cross for that target?</p>",
        "id": 207166457,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682375
    },
    {
        "content": "<p>Because it’s less work in the script to have cross figure that out. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 207166615,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597682451
    },
    {
        "content": "<p>Ah.</p>",
        "id": 207166667,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682480
    },
    {
        "content": "<p>We could also only support what you can build and test with cargo, it would be simpler.</p>",
        "id": 207167001,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597682656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I always use bash (even on Windows) so I'd just <code>export PATH=/c/msys64/mingw32/bin:/c/msys64/usr/bin:$PATH</code> and <code>export PATH=/c/msys64/mingw64/bin:/c/msys64/usr/bin:$PATH</code>.<br>\nRusts CI however does it like that <a href=\"https://github.com/rust-lang/rust/blob/e8876ae2c11f341565059b900eeae1254a9accf1/src/ci/shared.sh#L107\">https://github.com/rust-lang/rust/blob/e8876ae2c11f341565059b900eeae1254a9accf1/src/ci/shared.sh#L107</a>, also the path here is mixed style so <code>\"c:/msys64/mingw32/bin\"</code>.</p>",
        "id": 207167042,
        "sender_full_name": "mati865",
        "timestamp": 1597682684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> That's probably a good idea. I don't think there's much value in cross-compiling for various Linux and BSD targets and similar if they're not actually going to get tested.</p>",
        "id": 207167115,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682724
    },
    {
        "content": "<p>OK, regardless of where I point the search path, I keep getting</p>\n<div class=\"codehilite\"><pre><span></span><code>error: could not find native static library `z`, perhaps an -L flag is missing?\n</code></pre></div>\n\n\n<p>on all Windows platforms. That makes me think it was only work before because it found a system library, and now it's failing because it's forced to try to find the <em>static</em> library it was supposed to find, and it never could.</p>",
        "id": 207167139,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682741
    },
    {
        "content": "<p>Well some are tested, some are build only.</p>",
        "id": 207167230,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597682770
    },
    {
        "content": "<p>Are the non-x86 ones being tested?</p>",
        "id": 207167319,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682818
    },
    {
        "content": "<p>AFAIK in Rust linking static library searches only system default directories, when you use <code>static-nobundle</code> it will take the library from target dir.</p>",
        "id": 207167326,
        "sender_full_name": "mati865",
        "timestamp": 1597682821
    },
    {
        "content": "<p>Alternatively you can add search dir if using <code>static</code>.</p>",
        "id": 207167389,
        "sender_full_name": "mati865",
        "timestamp": 1597682853
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> I did add a search dir.</p>",
        "id": 207167422,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682872
    },
    {
        "content": "<p>With <code>cargo:rustc-link-search=native=</code>.</p>",
        "id": 207167505,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597682899
    },
    {
        "content": "<p>I can test locally on Windows tomorrow.</p>",
        "id": 207167533,
        "sender_full_name": "mati865",
        "timestamp": 1597682913
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"219696\">XAMPPRocky</span> <a href=\"#narrow/stream/242791-t-infra/topic/infra.20help.20getting.20appveyor.20running.3F/near/207165982\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> You can totally use cross with gha, it’s how tokei is tested and deployed.</p>\n</blockquote>\n<p>you can but for macOS you don’t need to.</p>",
        "id": 207167591,
        "sender_full_name": "nagisa",
        "timestamp": 1597682949
    },
    {
        "content": "<p>Either way, I’ll simplify the ci setup in a bit.</p>",
        "id": 207167621,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597682968
    },
    {
        "content": "<p>Oh, I think I remember now.<br>\nAzure Pipelines/GHA had 64 bit MinGW installed by chocolatey. Later on they decided to include full MSYS2 but didn't add it to the PATH.</p>",
        "id": 207167924,
        "sender_full_name": "mati865",
        "timestamp": 1597683132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119581\">@mati865</span> I'm becoming increasingly convinced that the best CI system would be one where you get <em>nothing</em> by default that you don't install, so that if something is installed weirdly, it's always your own fault. :)</p>",
        "id": 207168033,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597683195
    },
    {
        "content": "<p>I don't want a mysterious CI image that <em>usually</em> has everything I might want.</p>",
        "id": 207168053,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597683213
    },
    {
        "content": "<p>I want a system that runs <em>exactly</em> what I tell it to, because the only thing I <em>don't</em> have and need is access to random architectures and OSes.</p>",
        "id": 207168088,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597683237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> if I don't open PR to tweak stacker CI tomorrow feel free to ping me.<br>\n<span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> we don't live in a perfect world.</p>",
        "id": 207168206,
        "sender_full_name": "mati865",
        "timestamp": 1597683294
    },
    {
        "content": "<p>I'm aware. I'm also working on fixing it, and learning a great deal today that'll inform that. :)</p>",
        "id": 207168395,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597683391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> I don't think <code>--no-features</code> is an option; it's <code>--no-default-features</code>.</p>",
        "id": 207169363,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597683962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> fwiw they publish the list of software included with the runners. <a href=\"https://docs.github.com/en/actions/reference/software-installed-on-github-hosted-runners\">https://docs.github.com/en/actions/reference/software-installed-on-github-hosted-runners</a></p>",
        "id": 207169540,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597684066
    },
    {
        "content": "<p>On the bright side, it <em>does</em> look like musl works.</p>",
        "id": 207170907,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597684811
    },
    {
        "content": "<p>I <em>still</em> don't understand what's going on with Windows. I'm going to try getting a directory listing after the failed build.</p>",
        "id": 207171150,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597684932
    },
    {
        "content": "<p>...and that explains it.</p>",
        "id": 207173055,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597685782
    },
    {
        "content": "<blockquote>\n<p>target/x86_64-pc-windows-msvc/debug/build/libz-sys-af4e3d3a8f4ce1a3/out/lib/zlibd.lib</p>\n</blockquote>",
        "id": 207173062,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597685785
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>if(WIN32)\n    set_target_properties(${ZLIB_INSTALL_LIBRARIES} PROPERTIES OUTPUT_NAME zlib${SUFFIX})\nelse()\n    # On unix-like platforms the library is almost always called libz\n    set_target_properties(${ZLIB_INSTALL_LIBRARIES} PROPERTIES OUTPUT_NAME z${SUFFIX})\nendif()\n</code></pre></div>",
        "id": 207174164,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597686202
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>if(MSVC)\n    set(CMAKE_DEBUG_POSTFIX &quot;d&quot;)\n</code></pre></div>",
        "id": 207174222,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597686228
    },
    {
        "content": "<p>Welp, there's the origin of a substantial amount of wasted time.</p>",
        "id": 207174314,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597686244
    },
    {
        "content": "<p>I appreciate all the help from everyone. I'm going to spend some time trying to get the Windows build working.</p>",
        "id": 207175562,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597686817
    },
    {
        "content": "<p>Managed to get this working; waiting on the final GHA build to confirm before merging it.</p>",
        "id": 207213721,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597712089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> I'd like to squash this down to one commit, rather than the many iterations needed to get this right. I'd also like to give you credit for doing 90% of the work here. Any objection to a commit with you listed as the author, with myself in <code>Co-authored-by</code>? I feel like that's more accurate than the other way around. :)</p>",
        "id": 207213838,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597712246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> That's totally fine with me.</p>",
        "id": 207226707,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1597731373
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> Awesome.</p>",
        "id": 207231976,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597736881
    },
    {
        "content": "<p>I just shipped libz-sys 1.1.0, with zlib-ng support. Thanks for all the help; the CI was critical to make sure it worked on all platforms.</p>",
        "id": 207232068,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597736914
    }
]