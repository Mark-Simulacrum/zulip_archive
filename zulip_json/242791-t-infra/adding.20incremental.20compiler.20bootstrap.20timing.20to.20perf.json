[
    {
        "content": "<p>Would anyone mind if I drive adding data to perf about compiler bootstrap times for incremental rebuilds? Do I need to put up an MCP or something for such a change?</p>",
        "id": 231708166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616619869
    },
    {
        "content": "<p>I would suggest filing an issue on rustc-perf and cc'ing me, that's the MCP level we have for that service right now :)</p>\n<p>I think we'll likely want to try and 'just add it', we'll see if we run into too long queue times as a result though.</p>",
        "id": 231711489,
        "sender_full_name": "simulacrum",
        "timestamp": 1616621263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> If you're adding more information about compiler bootstrap, would you consider also adding max-rss numbers?</p>",
        "id": 231712592,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616621651
    },
    {
        "content": "<p>It'd be helpful for noticing that something substantially reduces or increases memory usage.</p>",
        "id": 231712646,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616621671
    },
    {
        "content": "<p>Absolutely; that was part of why I added a stat for that to our config.toml</p>",
        "id": 231712824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616621750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> you wouldn’t happen to know why getrusage seems so broken on Mac OS X, would you?</p>",
        "id": 231712964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616621792
    },
    {
        "content": "<p>Not off the top of my head. Broken how?</p>",
        "id": 231723389,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616627088
    },
    {
        "content": "<p>It occasionally gives complete nonsense results</p>",
        "id": 231729316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616630939
    },
    {
        "content": "<p>like terabytes of max-rss</p>",
        "id": 231729321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616630945
    },
    {
        "content": "<p>this <em>might</em> only happen with GET_RUSAGE_CHILDREN, I’d have to double-check my experiments</p>",
        "id": 231729338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616630965
    },
    {
        "content": "<p>(the nonsense goes in all directions, not just up. It might be some weird accumulation error leading to an overflow bug.)</p>",
        "id": 231729413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616631007
    },
    {
        "content": "<p>Are you calling it directly, or are you calling it through a library that handles the FFI?</p>",
        "id": 231753547,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616653862
    },
    {
        "content": "<p>directly</p>",
        "id": 231801066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616679406
    },
    {
        "content": "<p>I think I can find it easily, hold on</p>",
        "id": 231801092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616679419
    },
    {
        "content": "<p>this: <a href=\"https://github.com/rust-lang/rust/blob/master/src/bootstrap/bin/rustc.rs#L300\">https://github.com/rust-lang/rust/blob/master/src/bootstrap/bin/rustc.rs#L300</a></p>",
        "id": 231801194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616679464
    },
    {
        "content": "<p>(though I'm actually not certain if my comment there was correct, about whether RUSAGE_CHILDREN actually captures the max-rss <em>recusively</em> over grand-children etc.)</p>",
        "id": 231801317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616679499
    },
    {
        "content": "<p>I do see one problem in that code.</p>",
        "id": 231980027,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616771130
    },
    {
        "content": "<p>The handling of divisor needs parentheses.</p>",
        "id": 231980085,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616771145
    },
    {
        "content": "<p>It isn't actually dividing maxrss by 1024.</p>",
        "id": 231980173,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616771165
    },
    {
        "content": "<p>Hm, that would likely map <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s terabytes to gigabytes, which seems much more reasonable :)</p>",
        "id": 231980383,
        "sender_full_name": "simulacrum",
        "timestamp": 1616771239
    },
    {
        "content": "<p>Also, according to the manpage from apple, it's in kb, not bytes.</p>",
        "id": 231980725,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616771358
    },
    {
        "content": "<p>i think the mishandling of the value to be in bytes and not kb (despite the manpage) is a wellknown bug in Mac OS X</p>",
        "id": 232019576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616786903
    },
    {
        "content": "<p>but the point is well-taken</p>",
        "id": 232019615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616786938
    },
    {
        "content": "<p>anyway I’ll post a fix</p>",
        "id": 232019703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616786993
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/242791-t-infra/topic/adding.20incremental.20compiler.20bootstrap.20timing.20to.20perf/near/232019576\">said</a>:</p>\n<blockquote>\n<p>i think the mishandling of the value to be in bytes and not kb (despite the manapge) is a wellknown bug in Mac OS X</p>\n</blockquote>\n<p>See e.g. <a href=\"https://unix.stackexchange.com/questions/30940/getrusage-system-call-what-is-maximum-resident-set-size#comment572789_30940\">https://unix.stackexchange.com/questions/30940/getrusage-system-call-what-is-maximum-resident-set-size#comment572789_30940</a></p>",
        "id": 232019808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616787026
    },
    {
        "content": "<p>and I’ll maybe post some concrete examples of what I am talking about, after I make the fix.</p>",
        "id": 232019867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616787048
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/242791-t-infra/topic/adding.20incremental.20compiler.20bootstrap.20timing.20to.20perf/near/231980085\">said</a>:</p>\n<blockquote>\n<p>The handling of divisor needs parentheses.</p>\n</blockquote>\n<p>also, let me just add, <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 232023658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1616788819
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> You might consider pulling in the <code>num-integer</code> crate, and using its <code>div_ceil</code> method, rather than open-coding a divide-and-round-up operation.</p>",
        "id": 232038932,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616796768
    },
    {
        "content": "<p>Also, thanks for clarifying; how silly of me to assume that Apple would have fixed their manpages to match the actual behavior...</p>",
        "id": 232039127,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616796900
    },
    {
        "content": "<p>We almost certainly don't want to do that in bootstrap, I imagine the crate would add some compile time and a dependency or two, seems unfortunate. I wish we had a nice way to prevent that cost from being felt, and bootstrap isn't too light today, but I think open-coding or putting in std is what I'd suggest :)</p>",
        "id": 232039130,
        "sender_full_name": "simulacrum",
        "timestamp": 1616796901
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Ah, I wasn't making the connection that this is in <em>bootstrap</em>. Agreed, minimizing dependencies there is preferable.</p>",
        "id": 232039178,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616796928
    },
    {
        "content": "<p>As an aside, I'd happily accept a PR adding <code>div_ceil</code> to std... :)</p>",
        "id": 232039210,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616796956
    }
]