[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> I think it was you that mentioned the low CPU utilization -- I think you were right, it is fishy, but I suspect our cpu util script is just broken on hyperthreads on apple, or something like that</p>",
        "id": 270120865,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670015
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/xheA_aD02D6hv4We0E-Jbv_d/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/xheA_aD02D6hv4We0E-Jbv_d/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/xheA_aD02D6hv4We0E-Jbv_d/image.png\"></a></div>",
        "id": 270120967,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670056
    },
    {
        "content": "<p>this is the current chart for x86_64-apple builder (3 cores on the builders)</p>",
        "id": 270121015,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670070
    },
    {
        "content": "<p>locally, I wrote a simple script that just loops adding to burn CPU, and it looks like on my 4c/8t macbook, our script considers each 'physical' core to contribute 1/4 of the cpu time (i.e., one thread spinning gives me 75% metric)</p>",
        "id": 270121096,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670110
    },
    {
        "content": "<p>1/4th = 75%? o.O</p>",
        "id": 270121332,
        "sender_full_name": "The 8472",
        "timestamp": 1643670212
    },
    {
        "content": "<p>well, it's idle time</p>",
        "id": 270121363,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670223
    },
    {
        "content": "<p>so 75% is the expected 'physical core utilization'</p>",
        "id": 270121381,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670231
    },
    {
        "content": "<p>er, non-utilization</p>",
        "id": 270121443,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670242
    },
    {
        "content": "<p>ah</p>",
        "id": 270121477,
        "sender_full_name": "The 8472",
        "timestamp": 1643670254
    },
    {
        "content": "<p>(the graph script subtracts the csv data from 100)</p>",
        "id": 270121487,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670260
    },
    {
        "content": "<p>given the builders have 3 cores according to sysstat or w/e I don't really know how those map onto physical hardware</p>",
        "id": 270121836,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670416
    },
    {
        "content": "<p>but my guess is the script is not looking at all 3, though hard to be sure</p>",
        "id": 270121859,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670428
    },
    {
        "content": "<p>the 70% usage figure is still... weird</p>",
        "id": 270121894,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670444
    },
    {
        "content": "<p>on linux we don't seem to have that problem -- 6 threads on my 6c/12t computer is reported at 50%</p>",
        "id": 270122242,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670593
    },
    {
        "content": "<p>I don't have a windows computer to test that.</p>",
        "id": 270122302,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670602
    },
    {
        "content": "<p>maybe we should do the opposite? instead of recording the idle time record the active cpu-seconds per second? on a 3-core machine it would then ideally be 300% that way it doesn't get confused by physical vs. virtual core accounting.</p>",
        "id": 270122716,
        "sender_full_name": "The 8472",
        "timestamp": 1643670775
    },
    {
        "content": "<p>hm</p>",
        "id": 270122785,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670804
    },
    {
        "content": "<p>I think the code for macOS is just not reading anything at all from the virtual cores, so to speak</p>",
        "id": 270122920,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670863
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/498eeb72f590e518e19746b346be53713689e207/src/ci/cpu-usage-over-time.py#L136\">https://github.com/rust-lang/rust/blob/498eeb72f590e518e19746b346be53713689e207/src/ci/cpu-usage-over-time.py#L136</a></p>",
        "id": 270122987,
        "sender_full_name": "simulacrum",
        "timestamp": 1643670905
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/questions/20471920/how-to-get-total-cpu-idle-time-in-objective-c-c-on-os-x\">https://stackoverflow.com/questions/20471920/how-to-get-total-cpu-idle-time-in-objective-c-c-on-os-x</a><br>\nmaybe try <code>host_statistics</code>?</p>",
        "id": 270123656,
        "sender_full_name": "The 8472",
        "timestamp": 1643671234
    },
    {
        "content": "<p>let me rewrite that into python...</p>",
        "id": 270124101,
        "sender_full_name": "simulacrum",
        "timestamp": 1643671477
    },
    {
        "content": "<p>gah, need to figure out where these values are coming from, looks like my xcode is out of date and I don't have the relevant files installed</p>",
        "id": 270124804,
        "sender_full_name": "simulacrum",
        "timestamp": 1643671924
    },
    {
        "content": "<p>will try later.</p>",
        "id": 270124815,
        "sender_full_name": "simulacrum",
        "timestamp": 1643671928
    },
    {
        "content": "<p>ok, so I tried the host_statistics this morning</p>",
        "id": 270229491,
        "sender_full_name": "simulacrum",
        "timestamp": 1643729369
    },
    {
        "content": "<p>I'm seeing pretty.. weird behavior</p>",
        "id": 270229506,
        "sender_full_name": "simulacrum",
        "timestamp": 1643729375
    },
    {
        "content": "<p>need to investigate some more, but it looks like it <em>very slowly</em> approaches real CPU usage -- probably my code has some bug that's causing it to be inaccurate?</p>",
        "id": 270229617,
        "sender_full_name": "simulacrum",
        "timestamp": 1643729407
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"w\">  </span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/sysctl.h&gt;</span><span class=\"cp\"></span>\n<span class=\"w\">  </span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/types.h&gt;</span><span class=\"cp\"></span>\n<span class=\"w\">  </span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;mach/mach.h&gt;</span><span class=\"cp\"></span>\n<span class=\"w\">  </span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;mach/processor_info.h&gt;</span><span class=\"cp\"></span>\n<span class=\"w\">  </span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;mach/mach_host.h&gt;</span><span class=\"cp\"></span>\n<span class=\"w\">  </span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\"></span>\n<span class=\"w\">  </span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;unistd.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"w\">  </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"n\">totalSystemTime</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"n\">totalUserTime</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"n\">totalIdleTime</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">sample</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">sample</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">kern_return_t</span><span class=\"w\"> </span><span class=\"n\">kr</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">mach_msg_type_number_t</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">host_cpu_load_info_data_t</span><span class=\"w\"> </span><span class=\"n\">r_load</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">      </span><span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"n\">totalSystemTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">totalUserTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">totalIdleTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">      </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">HOST_CPU_LOAD_INFO_COUNT</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">kr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">host_statistics</span><span class=\"p\">(</span><span class=\"n\">mach_host_self</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">HOST_CPU_LOAD_INFO</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">r_load</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">count</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">kr</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">KERN_SUCCESS</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"oops: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mach_error_string</span><span class=\"p\">(</span><span class=\"n\">kr</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">      </span><span class=\"n\">sample</span><span class=\"o\">-&gt;</span><span class=\"n\">totalSystemTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_load</span><span class=\"p\">.</span><span class=\"n\">cpu_ticks</span><span class=\"p\">[</span><span class=\"n\">CPU_STATE_SYSTEM</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">sample</span><span class=\"o\">-&gt;</span><span class=\"n\">totalUserTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_load</span><span class=\"p\">.</span><span class=\"n\">cpu_ticks</span><span class=\"p\">[</span><span class=\"n\">CPU_STATE_USER</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">r_load</span><span class=\"p\">.</span><span class=\"n\">cpu_ticks</span><span class=\"p\">[</span><span class=\"n\">CPU_STATE_NICE</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">sample</span><span class=\"o\">-&gt;</span><span class=\"n\">totalIdleTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_load</span><span class=\"p\">.</span><span class=\"n\">cpu_ticks</span><span class=\"p\">[</span><span class=\"n\">CPU_STATE_IDLE</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">print_sample</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">sample</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sample</span><span class=\"o\">-&gt;</span><span class=\"n\">totalSystemTime</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">sample</span><span class=\"o\">-&gt;</span><span class=\"n\">totalUserTime</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">sample</span><span class=\"o\">-&gt;</span><span class=\"n\">totalIdleTime</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">one_percent</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"o\">/</span><span class=\"mf\">100.0f</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Idle: %f</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">double</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">sample</span><span class=\"o\">-&gt;</span><span class=\"n\">totalIdleTime</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">one_percent</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Starting...</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"w\"> </span><span class=\"n\">samples</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">samples</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]);</span><span class=\"w\"></span>\n\n<span class=\"w\">      </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"c1\">// Sample into the next slot on each cycle</span>\n<span class=\"w\">          </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">sample1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">samples</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">sample2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">samples</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">sample2</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"w\"> </span><span class=\"n\">delta</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">delta</span><span class=\"p\">.</span><span class=\"n\">totalSystemTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sample2</span><span class=\"o\">-&gt;</span><span class=\"n\">totalSystemTime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">sample1</span><span class=\"o\">-&gt;</span><span class=\"n\">totalSystemTime</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">delta</span><span class=\"p\">.</span><span class=\"n\">totalUserTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sample2</span><span class=\"o\">-&gt;</span><span class=\"n\">totalUserTime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">sample1</span><span class=\"o\">-&gt;</span><span class=\"n\">totalUserTime</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">delta</span><span class=\"p\">.</span><span class=\"n\">totalIdleTime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sample2</span><span class=\"o\">-&gt;</span><span class=\"n\">totalIdleTime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">sample1</span><span class=\"o\">-&gt;</span><span class=\"n\">totalIdleTime</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">print_sample</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">delta</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"n\">memcpy</span><span class=\"p\">(</span><span class=\"n\">sample2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sample1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">cpusample</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 270229932,
        "sender_full_name": "simulacrum",
        "timestamp": 1643729525
    },
    {
        "content": "<p>memcpy'd the wrong direction....</p>",
        "id": 270230680,
        "sender_full_name": "simulacrum",
        "timestamp": 1643729775
    },
    {
        "content": "<p>ok, so I have a C impl that works well, now will need to try to get it working on the python code</p>",
        "id": 270231041,
        "sender_full_name": "simulacrum",
        "timestamp": 1643729870
    },
    {
        "content": "<p>ok, put up <a href=\"https://github.com/rust-lang/rust/pull/93657\">https://github.com/rust-lang/rust/pull/93657</a></p>",
        "id": 270756272,
        "sender_full_name": "simulacrum",
        "timestamp": 1644000424
    },
    {
        "content": "<p>x86_64-apple:</p>\n<p><a href=\"/user_uploads/4715/NeBucxZR0EgeLNbmNM6EBP2-/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/NeBucxZR0EgeLNbmNM6EBP2-/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/NeBucxZR0EgeLNbmNM6EBP2-/image.png\"></a></div>",
        "id": 270895313,
        "sender_full_name": "simulacrum",
        "timestamp": 1644161297
    },
    {
        "content": "<p>so looks like we are actually mostly using the CPU fully on at least this apple builder, not too much slack left (unlike the previous 70% conclusion)</p>",
        "id": 270895326,
        "sender_full_name": "simulacrum",
        "timestamp": 1644161325
    },
    {
        "content": "<p>Better data is still good, even if it's not the data we hoped for.</p>",
        "id": 270895900,
        "sender_full_name": "The 8472",
        "timestamp": 1644162162
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I put up <a href=\"https://github.com/rust-lang/rust/pull/93862\">https://github.com/rust-lang/rust/pull/93862</a> to split the x86_64-apple builder up -- given the CPU data above it doesn't seem like we're going to get any internal parallelism wins really.</p>",
        "id": 271458814,
        "sender_full_name": "simulacrum",
        "timestamp": 1644511602
    },
    {
        "content": "<p>I'll take a look shortly</p>",
        "id": 271459039,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1644511676
    },
    {
        "content": "<p>and I agree splitting is the only way to go</p>",
        "id": 271459050,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1644511682
    },
    {
        "content": "<p>(well, shortly =&gt; today)</p>",
        "id": 271459089,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1644511688
    },
    {
        "content": "<p>yeah, just don't want to make it sit too long and I know you mentioned your inbox is overloaded -- no rush</p>",
        "id": 271459160,
        "sender_full_name": "simulacrum",
        "timestamp": 1644511718
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  Merged in under 3 hours!!!<br>\n<a href=\"/user_uploads/4715/_29QWgMHcMl4QN1_kgj6_8qQ/image.png\">image.png</a> <br>\nThat's amazing!!<br>\nThanks so much Mark :D <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/_29QWgMHcMl4QN1_kgj6_8qQ/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/_29QWgMHcMl4QN1_kgj6_8qQ/image.png\"></a></div>",
        "id": 271611999,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1644601546
    },
    {
        "content": "<p>We should be around 2 hours and 20-25 minutes on merges, in part due to the splitting but also GHA getting faster in the last week or so by a good bit</p>",
        "id": 271628199,
        "sender_full_name": "simulacrum",
        "timestamp": 1644609197
    },
    {
        "content": "<p>the drop on x86_64-apple at the end is all GHA (and it reproduces across other macos builders too):</p>\n<p><a href=\"/user_uploads/4715/5C1tLubXBs38jzinhScO6NP6/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/5C1tLubXBs38jzinhScO6NP6/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/5C1tLubXBs38jzinhScO6NP6/image.png\"></a></div>",
        "id": 271628358,
        "sender_full_name": "simulacrum",
        "timestamp": 1644609278
    },
    {
        "content": "<p>I guess the last dip (in the utilization chart) is the dist step, building the gz archives? Maybe that's still worth optimizing</p>",
        "id": 271628650,
        "sender_full_name": "The 8472",
        "timestamp": 1644609425
    },
    {
        "content": "<p>yeah, maybe. not sure.</p>",
        "id": 271629348,
        "sender_full_name": "simulacrum",
        "timestamp": 1644609732
    },
    {
        "content": "<p>fwiw, new graph:</p>\n<p><a href=\"/user_uploads/4715/gleSfJ3oQFEWyvlHel0cKe2I/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/gleSfJ3oQFEWyvlHel0cKe2I/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/gleSfJ3oQFEWyvlHel0cKe2I/image.png\"></a></div>",
        "id": 271630029,
        "sender_full_name": "simulacrum",
        "timestamp": 1644610045
    },
    {
        "content": "<p>I'm going to go ahead and move a couple more things over to x86_64-apple-2, since it looks like that's taking 1h30m, which is much smaller</p>",
        "id": 271631182,
        "sender_full_name": "simulacrum",
        "timestamp": 1644610661
    },
    {
        "content": "<p>oh is there an announcement on GHA getting an upgrade or something? :)</p>",
        "id": 271631401,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1644610788
    },
    {
        "content": "<p>Or was this just something for the rust-lang org?</p>",
        "id": 271631466,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1644610813
    },
    {
        "content": "<p>I suspect it's just bringing online a new pool spreading out load or something similarly behind the scenes</p>",
        "id": 271631532,
        "sender_full_name": "simulacrum",
        "timestamp": 1644610869
    },
    {
        "content": "<p>Also we might want to consider reducing the bors-run-timeout limit now...?<br>\nI think it was like 4 hours or 4 hours 20 minutes previously, maybe it makes sense to reduced it to something between 3 hours or 3hours 30 minś? :)</p>",
        "id": 271631611,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1644610917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/242791-t-infra/topic/apple.20ci.20cpu-usage/near/271630029\">said</a>:</p>\n<blockquote>\n<p>fwiw, new graph:</p>\n<p><a href=\"/user_uploads/4715/gleSfJ3oQFEWyvlHel0cKe2I/image.png\">image.png</a></p>\n</blockquote>\n<p>wow that's quite the improvement :)</p>",
        "id": 271631757,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1644610990
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"217864\">matthiaskrgr</span> <a href=\"#narrow/stream/242791-t-infra/topic/apple.20ci.20cpu-usage/near/271631611\">said</a>:</p>\n<blockquote>\n<p>Also we might want to consider reducing the bors-run-timeout limit now...?<br>\nI think it was like 4 hours or 4 hours 20 minutes previously, maybe it makes sense to reduced it to something between 3 hours or 3hours 30 minś? :)</p>\n</blockquote>\n<p>yeah, we can probably drop it now</p>",
        "id": 271633001,
        "sender_full_name": "simulacrum",
        "timestamp": 1644611618
    },
    {
        "content": "<p>let me switch to graphing max rather than median</p>",
        "id": 271633010,
        "sender_full_name": "simulacrum",
        "timestamp": 1644611624
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/2_feBd1etINGoII5FXIJQhkl/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/2_feBd1etINGoII5FXIJQhkl/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/2_feBd1etINGoII5FXIJQhkl/image.png\"></a></div>",
        "id": 271633097,
        "sender_full_name": "simulacrum",
        "timestamp": 1644611655
    },
    {
        "content": "<p>yeah so max looks like we'll be around the 3 hour mark pretty safely</p>",
        "id": 271633128,
        "sender_full_name": "simulacrum",
        "timestamp": 1644611667
    },
    {
        "content": "<p>put up a PR to drop the max time - <a href=\"https://github.com/rust-lang/homu/pull/163\">https://github.com/rust-lang/homu/pull/163</a></p>",
        "id": 271633975,
        "sender_full_name": "simulacrum",
        "timestamp": 1644612004
    },
    {
        "content": "<p>hit 10 PRs/day merged for the first time since September :)</p>",
        "id": 271842768,
        "sender_full_name": "simulacrum",
        "timestamp": 1644852949
    }
]