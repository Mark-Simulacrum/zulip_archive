[
    {
        "content": "<p><a href=\"/user_uploads/4715/2et_Qmk0Eg8Uq1GlTXNNPIE3/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/2et_Qmk0Eg8Uq1GlTXNNPIE3/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/2et_Qmk0Eg8Uq1GlTXNNPIE3/image.png\"></a></div><p>My query is <code>sum(playground_request_duration_seconds_count{edition != \"\"}) by (edition)</code>. I thought that Prometheus would automatically handle counter resets and increment the value. However, the server restart last night seems to have reset the graph. What piece am I missing?</p>",
        "id": 239587088,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621515844
    },
    {
        "content": "<p>For now I've changed to a rate view, but I'd like the cumulative view as well, eventually.</p>",
        "id": 239591672,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621517597
    },
    {
        "content": "<p>For certain functions that care about counter vs. gauge prometheus documentation for the operator will specify it like such:</p>\n<blockquote>\n<p>delta should only be used with gauges.</p>\n</blockquote>\n<p>I'm not sure what your query is trying to achieve though, but I think what is happening in your case is that after the reset your scale is way lower than before the reset.</p>",
        "id": 239593310,
        "sender_full_name": "nagisa",
        "timestamp": 1621518228
    },
    {
        "content": "<p>(i.e. you're summing the count, and so right after the restart your graph would show values in orders of 1000s and before the restart probably in millions)</p>",
        "id": 239593486,
        "sender_full_name": "nagisa",
        "timestamp": 1621518287
    },
    {
        "content": "<p>In this case I'd say that perhaps you may want a different kind of visualization if the goal is to present the ratio between different editions being used.</p>",
        "id": 239593652,
        "sender_full_name": "nagisa",
        "timestamp": 1621518352
    },
    {
        "content": "<p><code>sum_over_time</code> or <code>increase</code> may help too?</p>",
        "id": 239593931,
        "sender_full_name": "nagisa",
        "timestamp": 1621518464
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/242791-t-infra/topic/prometheus.20counter.20over.20restart/near/239587088\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/4715/2et_Qmk0Eg8Uq1GlTXNNPIE3/image.png\">image.png</a> </p>\n<p>My query is <code>sum(playground_request_duration_seconds_count{edition != \"\"}) by (edition)</code>. I thought that Prometheus would automatically handle counter resets and increment the value. However, the server restart last night seems to have reset the graph. What piece am I missing?</p>\n</blockquote>\n<p>my understanding is that prometheus itself does not handle counter resets on the underlying storage, it's up to the functions you're using to handle it on their own</p>",
        "id": 239594114,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621518526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/242791-t-infra/topic/prometheus.20counter.20over.20restart/near/239593652\">said</a>:</p>\n<blockquote>\n<p>In this case I'd say that perhaps you may want a different kind of visualization if the goal is to present the ratio between different editions being used.</p>\n</blockquote>\n<p>yeah, <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> on this I'd use an <code>increase</code> over an hour or so</p>",
        "id": 239595714,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519169
    },
    {
        "content": "<p>increase over 1 hour vs per-second rate<br>\n<a href=\"/user_uploads/4715/e6sYMD-R2-2C6uxW_GdwTmAQ/2021-05-20-15-58-58.png\">2021-05-20-15-58-58.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/e6sYMD-R2-2C6uxW_GdwTmAQ/2021-05-20-15-58-58.png\" title=\"2021-05-20-15-58-58.png\"><img src=\"/user_uploads/4715/e6sYMD-R2-2C6uxW_GdwTmAQ/2021-05-20-15-58-58.png\"></a></div>",
        "id": 239595752,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519183
    },
    {
        "content": "<p>IMO we don't get that many requests making per-second rate useful</p>",
        "id": 239595892,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519221
    },
    {
        "content": "<p>What bothers me about the rates is the nonsense decimals. I'd rather it show integers.</p>",
        "id": 239596135,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621519283
    },
    {
        "content": "<p>I mean, rate is accurate</p>",
        "id": 239596392,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519361
    },
    {
        "content": "<p>it's the number of requests every second</p>",
        "id": 239596411,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519367
    },
    {
        "content": "<p>I didn't claim it was wrong.</p>",
        "id": 239596432,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621519374
    },
    {
        "content": "<p><span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> yeah, for play's scale we should definitely use either <code>increase(metric[1m])</code> or <code>increase(metric[1h])</code></p>",
        "id": 239596582,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519419
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/242791-t-infra/topic/prometheus.20counter.20over.20restart/near/239593652\">said</a>:</p>\n<blockquote>\n<p>In this case I'd say that perhaps you may want a different kind of visualization if the goal is to present the ratio between different editions being used.</p>\n</blockquote>\n<p>This may indeed be the ticket. I'm not 100% sure what I want to see, even.</p>",
        "id": 239596709,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621519448
    },
    {
        "content": "<p>the screenshot I posted uses 1h to have more \"smooth\" graphs, 1m has integers but it's still a lot noisy</p>",
        "id": 239596724,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519453
    },
    {
        "content": "<p>Looking forward to that Grafana update to get <code>$rate__interval</code> or whatever</p>",
        "id": 239596825,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621519487
    },
    {
        "content": "<p>I think <code>$rate__interval</code> will still give you decimal places in rates</p>",
        "id": 239597173,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1621519617
    },
    {
        "content": "<p>sure, but it helps with losing the graph when zooming</p>",
        "id": 239597235,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621519642
    },
    {
        "content": "<p><code>$__rate_interval</code>. If there's a desire to update grafana in near future for this, I would recommend doing so sooner rather than later â€“ that same update introduces new implementations of certain panels, which tend to change the look&amp;feel of the dashboards significantly and don't mesh well with the old panels.</p>",
        "id": 239621566,
        "sender_full_name": "nagisa",
        "timestamp": 1621528522
    },
    {
        "content": "<p>There's also a significant change to how panels are composed I think, which for somebody used to the old thing takes some getting used to.</p>",
        "id": 239621713,
        "sender_full_name": "nagisa",
        "timestamp": 1621528571
    },
    {
        "content": "<p>Yeah, I'm using some of the new panels locally to give \"big number\" overviews, which is nice.</p>",
        "id": 239639478,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621535877
    },
    {
        "content": "<p>Just gotta wait quietly for the update to be scheduled.</p>",
        "id": 239639575,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1621535907
    }
]