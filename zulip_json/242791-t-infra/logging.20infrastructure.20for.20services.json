[
    {
        "content": "<p>So, we have Prometheus for metrics; do we have a solution for logging?</p>\n<blockquote>\n<p>Complementing metrics are event logs, which tend to be more delayed and have fewer pieces of information, but no cardinality limitations.</p>\n</blockquote>\n<p>Some back-of-the-envelope calculations show that I <em>might</em> be pushing the limits of cardinality for the playground metrics I want to add. I think I'll still go forward with it for now to get a handle on the current problem, but might dial it back down later when we have figured things out.</p>\n<p>Do we have a nice way of aggregating application logs and gleaming information out of them?</p>",
        "id": 236971745,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879132
    },
    {
        "content": "<p>Not that I know of, but while I don't know the details I'd be surprised if you're actually pushing cardinality limits or anything like that</p>",
        "id": 236971846,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879197
    },
    {
        "content": "<p>and if you are, then the better solution is likely to split up the metrics into different names, I suspect.</p>",
        "id": 236971978,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879310
    },
    {
        "content": "<p>I believe the cardinality will be 3,810,240</p>",
        "id": 236972002,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879335
    },
    {
        "content": "<p>that seems.. indeed high</p>",
        "id": 236972014,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879351
    },
    {
        "content": "<p>what are you storing?</p>",
        "id": 236972015,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879354
    },
    {
        "content": "<p>That's maximum, I'm sure the actual will be less</p>",
        "id": 236972017,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879356
    },
    {
        "content": "<p>e.g. certain combinations cannot possibly happen</p>",
        "id": 236972028,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879372
    },
    {
        "content": "<p>hm well in practice I'd guess your cardinality is like, a couple dozen?</p>",
        "id": 236972125,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879432
    },
    {
        "content": "<p>it's worth noting that I would personally start with <em>less</em> rather than more, but ultimately it may not matter that much</p>",
        "id": 236972153,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879455
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/242791-t-infra/topic/logging.20infrastructure.20for.20services/near/236971978\">said</a>:</p>\n<blockquote>\n<p>and if you are, then the better solution is likely to split up the metrics into different names, I suspect.</p>\n</blockquote>\n<p>I don't know how that would help. As I understand it, ultimately each unique label set makes a different metric, under the hood.</p>",
        "id": 236972173,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879471
    },
    {
        "content": "<p>sure, I mean, like, ultimately you need to track what you need to track. but your max cardinality would surely go down if you're not multiplying llvm by rustfmt etc</p>",
        "id": 236972195,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879510
    },
    {
        "content": "<p>I guess that's a matter of max theoretical vs actual then. e.g. is <code>thing{llvm=\"yes\", asm=\"\"} thing{llvm=\"\", asm=\"yes\"}</code> any different from <code>thing_llvm{} </code>thing_asm{}` in practice.</p>",
        "id": 236972338,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879616
    },
    {
        "content": "<p>I don't know in terms of underlying storage but I'd sort of guess no, or at least, not enough to matter</p>",
        "id": 236972390,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879646
    },
    {
        "content": "<p>theoretically the first would allow for cardinality of 4, but two of those wouldn't happen</p>",
        "id": 236972438,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879665
    },
    {
        "content": "<p>but the second is potentially easier to deal with in grafana</p>",
        "id": 236972441,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879667
    },
    {
        "content": "<p>in any case, that seems off - i would expect build_kind = {llvm,asm,rustc,miri,...}</p>",
        "id": 236972464,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879694
    },
    {
        "content": "<p>not sure if just bad example</p>",
        "id": 236972466,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879700
    },
    {
        "content": "<p>sigh. I thought Pietro said the opposite, which is why I rewrote the metrics a third time.</p>",
        "id": 236972471,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879704
    },
    {
        "content": "<p>just a quick example</p>",
        "id": 236972480,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879713
    },
    {
        "content": "<p>hmm</p>",
        "id": 236972508,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879729
    },
    {
        "content": "<p>labels as booleans seems bad, basically, is my intuition</p>",
        "id": 236972529,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879753
    },
    {
        "content": "<p>Here's the dump of my local dev after clicking a bit <a href=\"https://gist.github.com/shepmaster/139e95d35ccb74caf6da30adc1d510d5\">https://gist.github.com/shepmaster/139e95d35ccb74caf6da30adc1d510d5</a></p>",
        "id": 236972531,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879756
    },
    {
        "content": "<p>I would probably move the meta endpoints (which never have most of the labels set) to their own 'metric'</p>",
        "id": 236972621,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879814
    },
    {
        "content": "<p>at the very least, it seems odd to have no channel but the channel embedded in endpoint name</p>",
        "id": 236972640,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879838
    },
    {
        "content": "<p>ah, though I see, MetaVersionRustfmt</p>",
        "id": 236972649,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879853
    },
    {
        "content": "<p>yeah anyway, this dump seems ok to start with, we can always iterate</p>",
        "id": 236972667,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879869
    },
    {
        "content": "<p>ultimately it's no big deal to try things I suspect</p>",
        "id": 236972676,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879881
    },
    {
        "content": "<p>There's a (closed?) PR that consolidates all the meta into one endpoint that I should merge someday anyway.</p>",
        "id": 236972741,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879922
    },
    {
        "content": "<p>Because you almost always want all of them, and that reduces the roundtrips</p>",
        "id": 236972765,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619879957
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 236972770,
        "sender_full_name": "simulacrum",
        "timestamp": 1619879967
    },
    {
        "content": "<p>Say that I did something totally stupid and flooded prometheus with billions of bad data — is there a \"delete these things but keep everything else\" solution to that?</p>",
        "id": 236972900,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619880121
    },
    {
        "content": "<p>hm</p>",
        "id": 236973132,
        "sender_full_name": "simulacrum",
        "timestamp": 1619880319
    },
    {
        "content": "<p>not that I know of, in some sense</p>",
        "id": 236973137,
        "sender_full_name": "simulacrum",
        "timestamp": 1619880325
    },
    {
        "content": "<p>I guess we have some recent-ish backups, or so</p>",
        "id": 236973151,
        "sender_full_name": "simulacrum",
        "timestamp": 1619880345
    },
    {
        "content": "<p>but we can also have the metrics endpoint exposed and not immediately attach prometheus, so you can just look at the http results (obviously can test locally too)</p>",
        "id": 236973218,
        "sender_full_name": "simulacrum",
        "timestamp": 1619880387
    },
    {
        "content": "<p>the number of metrics should, I expect, be pretty much static - if not, then usually something is off</p>",
        "id": 236973230,
        "sender_full_name": "simulacrum",
        "timestamp": 1619880409
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/242791-t-infra/topic/logging.20infrastructure.20for.20services/near/236972900\">said</a>:</p>\n<blockquote>\n<p>Say that I did something totally stupid and flooded prometheus with billions of bad data — is there a \"delete these things but keep everything else\" solution to that?</p>\n</blockquote>\n<p>prometheus has an api to delete metrics</p>",
        "id": 236973779,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1619880940
    },
    {
        "content": "<p>Ok, if either of you want to review, it's up a <a href=\"https://github.com/integer32llc/rust-playground/pull/714\">https://github.com/integer32llc/rust-playground/pull/714</a>. I can't run CI now because rustfmt is missing from nightly, so no immediate rush.</p>",
        "id": 236976183,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619881915
    }
]