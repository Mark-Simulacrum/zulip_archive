[
    {
        "content": "<p>Yeah Jack and I have been working on a new bors implementation in (in Rust) over the past handful of months since we were beginning to be unhappy with homu. The goal was to simplify some things, make the UX easier to use and hopefully at the end make it more debuggable</p>",
        "id": 201853347,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593008550
    },
    {
        "content": "<p>unfortunately zulip doesn't have \"{foo} is typing...\" :(</p>",
        "id": 201853349,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008551
    },
    {
        "content": "<p>Jack mentioned that it may be something that you folks would be interesting in?</p>",
        "id": 201853380,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593008568
    },
    {
        "content": "<p>that'd be super useful! you're not the only ones unhappy with homu :)</p>",
        "id": 201853475,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008610
    },
    {
        "content": "<p>ah! I remember talking to someone about this effort a while ago back on discord and I feel like it was one of you?</p>",
        "id": 201853595,
        "sender_full_name": "Aidan Hobson Sayers",
        "timestamp": 1593008646
    },
    {
        "content": "<p>code is at <a href=\"https://github.com/bmwill/bors-rs\">https://github.com/bmwill/bors-rs</a> if you want to take a peek</p>\n<p>it has much more integration with modern GitHub. For example, it uses a project board to reify the queue.</p>",
        "id": 201853615,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593008654
    },
    {
        "content": "<p>this is very exciting</p>",
        "id": 201853622,
        "sender_full_name": "Aidan Hobson Sayers",
        "timestamp": 1593008656
    },
    {
        "content": "<p>(name suggestions also welcome, we were too lazy and just refer to it as newbors)</p>",
        "id": 201853716,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593008693
    },
    {
        "content": "<p>romu? :D</p>",
        "id": 201853726,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008697
    },
    {
        "content": "<p>The code currently lives at <a href=\"https://github.com/bmwill/bors-rs\">https://github.com/bmwill/bors-rs</a><br>\nI still need to go through and add some documentation and such but for our simple purposes in libra its almost at a point where we can switch over to to from homu</p>",
        "id": 201853812,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593008732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> did you base your implementation on servo's fork or rust's fork?</p>",
        "id": 201853840,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008745
    },
    {
        "content": "<p>At a high level its based on servo's fork, though it looks quite different at this point</p>",
        "id": 201853980,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593008796
    },
    {
        "content": "<p>From scratch it seems: <a href=\"https://github.com/bmwill/bors-rs/commit/4af25673e0ff7075aa696a8c205526c218850659\">https://github.com/bmwill/bors-rs/commit/4af25673e0ff7075aa696a8c205526c218850659</a></p>",
        "id": 201853981,
        "sender_full_name": "bjorn3",
        "timestamp": 1593008797
    },
    {
        "content": "<p>I'm most familiar with Servo's fork, but I do look at the branch diffs on the Rust fork occasionally. Servo's fork is what we use for Libra right now.</p>",
        "id": 201854019,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593008814
    },
    {
        "content": "<p>based functionally, yeah its a from scratch impl</p>",
        "id": 201854028,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593008817
    },
    {
        "content": "<p>yeah, I meant more from where you took inspiration for the functionality</p>",
        "id": 201854061,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008832
    },
    {
        "content": "<p>we have a bunch of custom stuff in our fork nowadays</p>",
        "id": 201854122,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008858
    },
    {
        "content": "<p>what's the best way forward here? should I just open a bunch of issues for every custom thing we have on your repo?</p>",
        "id": 201854227,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008892
    },
    {
        "content": "<p>If people are interested, we'd love to start adding some of the needed features for use in rust-lang repos. We have a bunch of stuff to add for Libra that is more advanced than what bors did (which is what motivated us to write it).</p>",
        "id": 201854253,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593008906
    },
    {
        "content": "<p>sounds cool!</p>",
        "id": 201854321,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1593008936
    },
    {
        "content": "<p>That sounds like a reasonable way to start. Perhaps some kind of indication of priority would be helpful too.</p>",
        "id": 201854344,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593008945
    },
    {
        "content": "<p>I'd also be interested to hear what some of your issues with homu are as thats almost as important as your feature requests</p>",
        "id": 201854369,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593008956
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span>  our main issue is that most of the times we restart it, the state gets all messed up</p>",
        "id": 201854421,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593008989
    },
    {
        "content": "<p>...and that it's written in python without any test, making any change on it terrifying <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 201854512,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009017
    },
    {
        "content": "<p>Yeah i'm still need to figure out the best way to better test all the functionality...its difficult when you sort of rely on an online service</p>",
        "id": 201854643,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593009063
    },
    {
        "content": "<p>having a type system is already something <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 201854678,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009079
    },
    {
        "content": "<p>speaking as someone who uses homu at work - it just constantly gets stuck or ignores events, and it's completely opaque what's going on behind the scenes to make that happen. missed event? stuck in a bad state? who knows!</p>",
        "id": 201854736,
        "sender_full_name": "Aidan Hobson Sayers",
        "timestamp": 1593009105
    },
    {
        "content": "<p>The state getting messed up was also an issue we had, so right now all of the needed state is stored on Github via labels and such so that upon restart its easy to resume <em>most</em> of the state</p>",
        "id": 201854837,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593009132
    },
    {
        "content": "<p>Yes, we have the same problems. One issue we hopefully have solved is that many people refuse to look at the queue, and are always wondering why their PR is stuck, and it just turns out they are 5th in the queue.</p>",
        "id": 201854856,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593009141
    },
    {
        "content": "<p>lol here people look <em>too much</em> at the queue <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 201854900,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009163
    },
    {
        "content": "<p>We've now run into failed webhook at CircleCI, so obviously we're going to need to occasional poling of the state just to make sure it doesn't collapse when a webhook goes awry.</p>",
        "id": 201854943,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593009182
    },
    {
        "content": "<p>when you gaze into the queue, it also gazes into you</p>",
        "id": 201854987,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1593009197
    },
    {
        "content": "<p>newbors also emotes on all the commands, so you always know whether it understood.</p>",
        "id": 201855039,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593009223
    },
    {
        "content": "<p>oh that sounds excellent</p>",
        "id": 201855187,
        "sender_full_name": "Aidan Hobson Sayers",
        "timestamp": 1593009275
    },
    {
        "content": "<p>might see if I can get this working at work...</p>",
        "id": 201855215,
        "sender_full_name": "Aidan Hobson Sayers",
        "timestamp": 1593009291
    },
    {
        "content": "<p>We've also had issues with new people not knowing how to send commands or interact with bors so now it'll give you a help message if you do something wrong or <code>/help</code> <a href=\"https://github.com/bors-test/bors-test/pull/20#issuecomment-641628824\">https://github.com/bors-test/bors-test/pull/20#issuecomment-641628824</a></p>",
        "id": 201855285,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593009329
    },
    {
        "content": "<p>excellent!</p>",
        "id": 201855314,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1593009349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117568\">@Aidan Hobson Sayers</span> As i mentioned the documentation is kinda sparse atm since I was really the only one ever running stuff so if you do want to do that I can try and take some time and write up a short setup guide</p>",
        "id": 201855434,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593009402
    },
    {
        "content": "<p>We've had a few repos trying it out, and it seems to be functioning well. I know Brandon has a bunch of feedback he's been integrating. Give it a whirl and let us know what you'd like to see. I suspect most of your ideas will be useful to us as well.</p>",
        "id": 201855452,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593009413
    },
    {
        "content": "<p>Am I correct that it only support normal-priority/high-priority and not arbitrary priority numbers?</p>",
        "id": 201855533,
        "sender_full_name": "bjorn3",
        "timestamp": 1593009456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> no hurry - probably won't get to it for a while</p>",
        "id": 201855704,
        "sender_full_name": "Aidan Hobson Sayers",
        "timestamp": 1593009520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> Yes, It did support arbitrary priority numbers but I switch that out for something more visible/easy to show in Github's UI<br>\nAnd actually atm it only supports no priority and High-proiority, though folks want at least a low-priority</p>",
        "id": 201855805,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593009572
    },
    {
        "content": "<p>Also github projects are horrible when you have a lot of PR's. The usable space is just ~70% of the screen height.</p>",
        "id": 201855842,
        "sender_full_name": "bjorn3",
        "timestamp": 1593009587
    },
    {
        "content": "<p>I told Brandon I thought we need at least 3 (low, normal, high). We often have dep updates that are low. Most PRs would go normal, and special things or security fixes would jump the queue. We'll probably also want some ability to force jump the queue for emergencies, but not sure that is generally useful outside of our project.</p>",
        "id": 201855918,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593009609
    },
    {
        "content": "<p>we usually use a bunch of different priorities here</p>",
        "id": 201855966,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009629
    },
    {
        "content": "<p>it's not unlikely to see like 4 or 5 different priority numbers in the queue</p>",
        "id": 201855992,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009643
    },
    {
        "content": "<p>Can you give an example of 4-5 different priorities? I know there are some special things for Rust since cycle time is so high</p>",
        "id": 201856123,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593009704
    },
    {
        "content": "<p>Yeah our project doesn't have near the number of PRs as rust does, so I can see how maybe a project board wouldn't work so well when you have a ton of things, though it does make it easy to see, without leaving github, where you're PR is</p>",
        "id": 201856339,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593009784
    },
    {
        "content": "<p>that usually happens when there are problems with CI, so we have the tree closed to every PR with a priority of less than 1000, with a fix at p=1000, occasionally a release PR at p=500, then rollups at p={number of PRs in the rollup} and finally some important PRs at p=1</p>",
        "id": 201856425,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> I'm wondering, how do you create rollups with the github board?</p>",
        "id": 201856459,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009839
    },
    {
        "content": "<p>We don't currently use rollups so that's not something that's even implemented atm</p>",
        "id": 201856561,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593009878
    },
    {
        "content": "<p>That's a good question. I assume we can link them all easily enough, but visualizing it might take another column.</p>",
        "id": 201856677,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593009925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"235180\">@Jack Moffitt</span> hmm, and how would you choose which PRs to include in the rollup?</p>",
        "id": 201856735,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593009952
    },
    {
        "content": "<p>homu just does rollup+ and rollup- right? I assume there would be asimilar command in newbors. /rollup</p>",
        "id": 201856882,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593010002
    },
    {
        "content": "<p>Does homu allow multiple simultaneous rollups?</p>",
        "id": 201856905,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593010011
    },
    {
        "content": "<p>so, the current setup is the following:</p>\n<ul>\n<li>reviewers hint whether the PR is safe to rollup with <code>rollup</code>, and whether a PR can't be rolled up with <code>rollup=never</code></li>\n<li>a person goes to the homu dashboard, checkes the boxes of all the PRs they want to include in a rollup, and they click \"create rollup\"</li>\n</ul>",
        "id": 201857089,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010087
    },
    {
        "content": "<p>multiple rollups are often created at the same time, and the people that do rollups regularly include PRs not marked as <code>rollup</code></p>",
        "id": 201857161,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010120
    },
    {
        "content": "<p>btw <span class=\"user-mention\" data-user-id=\"235180\">@Jack Moffitt</span> <span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span>, can we continue this discussion outside the meeting? mostly so people not interested in bors can log off :)</p>",
        "id": 201857290,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010197
    },
    {
        "content": "<p>(\"outside the meeting\" is just moving to a different topic)</p>",
        "id": 201857349,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010208
    },
    {
        "content": "<p>Yep sounds good :)</p>",
        "id": 201857350,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593010209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> <span class=\"user-mention\" data-user-id=\"235180\">@Jack Moffitt</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 201857411,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010235
    },
    {
        "content": "<p>I'm wondering, to have a faster discussion, should we setup a call with the two of you, interested members of the infrastructure team and people who do rollups?</p>",
        "id": 201857575,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010308
    },
    {
        "content": "<p>Rollups are something that take a little bit more interaction, given you have someone manually creating the rollups, so it would probably need to take some more thought in getting the UX right</p>",
        "id": 201857698,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593010347
    },
    {
        "content": "<p>managementy point: I think most of that bors discussion should be moved into the other topic now (and ideally done so sooner)</p>",
        "id": 201857740,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593010374
    },
    {
        "content": "<p>And yeah setting up a call would be a good idea</p>",
        "id": 201857788,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593010399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> done!</p>",
        "id": 201858029,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010509
    },
    {
        "content": "<p>Also one more thing to note about the current implementation, it merges PRs via Rebasing (since that was the requirement for our project) though adding a new merge strategy shouldn't be too hard</p>",
        "id": 201858255,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593010591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> ok! I'll schedule a thing soon</p>",
        "id": 201858271,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010599
    },
    {
        "content": "<p>Sounds good! Thanks</p>",
        "id": 201858330,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593010626
    },
    {
        "content": "<p>also <span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span>, there is a thing that we implemented that could be useful for you to implement ASAP, if you want to rely on it</p>",
        "id": 201858372,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010643
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> What would that be?</p>",
        "id": 201858437,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593010670
    },
    {
        "content": "<p>basically, we have a bunch of tooling that relies on the artifacts from try builds, such as crater and perf</p>",
        "id": 201858444,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010671
    },
    {
        "content": "<p>to simplify integration, a while ago we implemented \"structured comments\": every time bors sends a comment, it also includes a JSON representation of such comment. For example:</p>\n<div class=\"codehilite\"><pre><span></span><code>&lt;!-- homu: {&quot;type&quot;:&quot;TryBuildCompleted&quot;,&quot;builders&quot;:{&quot;checks-azure&quot;:&quot;https://dev.azure.com/rust-lang/e71b0ddf-dd27-435a-873c-e30f86eea377/_build/results?buildId=31371&quot;},&quot;merge_sha&quot;:&quot;38f031dba70e2d2ebd0484ffc5d7a659ab15d245&quot;} --&gt;\n</code></pre></div>",
        "id": 201858648,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010737
    },
    {
        "content": "<p>then, our bots receive webhooks for comments posted on PRs, and when they notice a structured comment for bors (for example) they start the perf run</p>",
        "id": 201858732,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010777
    },
    {
        "content": "<p>I'm thinking that implementing them really soon could be beneficial because you could rely on them to synchronize the state</p>",
        "id": 201858866,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010817
    },
    {
        "content": "<p>i.e. for every action bors includes all the state needed to replay what happened in the structured comment, and during synchronization you fetch all the comments on the PR and rebuild the state</p>",
        "id": 201859014,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010881
    },
    {
        "content": "<p>Oh that's nifty, so effectively the data is sent twice once in a human readable format and once in a more machine readable format? Or is that json comment contain all the state?</p>",
        "id": 201859026,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593010886
    },
    {
        "content": "<p>it sends the data twice</p>",
        "id": 201859052,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010899
    },
    {
        "content": "<p>we're not currently relying on this to synchronize, but we had a person that tried to implement it in the current homu codebase</p>",
        "id": 201859179,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010945
    },
    {
        "content": "<p>and the proof of concept was successful, we just never got around merging it (the author lost interested and nobody had time to review a thousands lines of code Python PR)</p>",
        "id": 201859221,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593010971
    },
    {
        "content": "<p>Yeah that would work, one potential snag is that it would require that you comment every time state changes. This is what homu does today but I had folks give feedback that they wanted bors to be quieter. So its maybe something that we could balance</p>",
        "id": 201859496,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> hmm, what about doing both?</p>",
        "id": 201859543,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011106
    },
    {
        "content": "<p>we post comments with both json and text when bots needs to integrate</p>",
        "id": 201859597,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011129
    },
    {
        "content": "<p>and we store the full state of the PR in the top-level comment, signed with HMAC or something</p>",
        "id": 201859646,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011149
    },
    {
        "content": "<p>Ah yeah, editting the toplevel comment would work</p>",
        "id": 201859731,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011174
    },
    {
        "content": "<p>Editing comments is definitely an underrated automation tool :)</p>",
        "id": 201859798,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593011212
    },
    {
        "content": "<p>you get a webhook on edit too</p>",
        "id": 201859841,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011226
    },
    {
        "content": "<p>but that's probably not the right place to key your bots off of :P</p>",
        "id": 201859863,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011244
    },
    {
        "content": "<p>(I mean an edited top-level comment)</p>",
        "id": 201859891,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011263
    },
    {
        "content": "<p>I mean, it <em>could</em> work (cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>)</p>",
        "id": 201859917,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011275
    },
    {
        "content": "<p>but yeah</p>",
        "id": 201860020,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011307
    },
    {
        "content": "<p>you would just need to filter out on who edited it, bors or the author or someone else</p>",
        "id": 201860030,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011310
    },
    {
        "content": "<p>but still, that's a great idea to be able to store all the state on github</p>",
        "id": 201860074,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011329
    },
    {
        "content": "<p>well we need the payload in the top-level comment to be signed anyway</p>",
        "id": 201860076,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011330
    },
    {
        "content": "<p>agreed</p>",
        "id": 201860162,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011374
    },
    {
        "content": "<p>but yeah, if y'all want to do this it's better to do it as soon as possible :D</p>",
        "id": 201860208,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011397
    },
    {
        "content": "<p>i sort of side-stepped that issue since all state we currently use is just stored via Github Review or a label, but if we need anything more complex then that's 100% the way to do it</p>",
        "id": 201860351,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011476
    },
    {
        "content": "<p>yeah, it'd solve having arbitrary priorities</p>",
        "id": 201860406,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011507
    },
    {
        "content": "<p>Yep!</p>",
        "id": 201860605,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011601
    },
    {
        "content": "<p>Anyway I'm excited to hear that theres some interest :)</p>",
        "id": 201860967,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593011738
    },
    {
        "content": "<p>yep, this is super interesting!</p>",
        "id": 201861083,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011764
    },
    {
        "content": "<p>I'll send a doodle for a call in the next couple of days</p>",
        "id": 201861111,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011773
    },
    {
        "content": "<p>I think editing the top-level comment is a bad thing for two reasons: First of there is an html comment added that the PR author may not understand and remove. Second if the PR author clicks the edit button and then bors edits the top-level comment, then clicking update comment will revert the html comment back to the old state.</p>",
        "id": 201861117,
        "sender_full_name": "bjorn3",
        "timestamp": 1593011777
    },
    {
        "content": "<p>both are solved by including the edit timestamp in the signed data. bors can always rebootstrap the state if the comment diesppears or becomes invalid</p>",
        "id": 201861493,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593011941
    },
    {
        "content": "<p>(well i guess it depends of if you are creating new state unknown anywhere else there or not)</p>",
        "id": 201861556,
        "sender_full_name": "Jack Moffitt",
        "timestamp": 1593011968
    },
    {
        "content": "<p>an alternative would be for bors to always send a comment to all PRs</p>",
        "id": 201861583,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593011982
    },
    {
        "content": "<p>as soon as they're opened</p>",
        "id": 201861608,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593012000
    },
    {
        "content": "<p>Maybe edit the highfive comment?</p>",
        "id": 201861677,
        "sender_full_name": "bjorn3",
        "timestamp": 1593012014
    },
    {
        "content": "<p>we don't have highfive in all the repos using bors</p>",
        "id": 201861700,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593012027
    },
    {
        "content": "<p>and it could be used to both store the JSON state, and to provide information about the PR</p>",
        "id": 201861718,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593012035
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/242791-t-infra/topic/bors-rs/near/201861700\">said</a>:</p>\n<blockquote>\n<p>we don't have highfive in all the repos using bors</p>\n</blockquote>\n<p>Then you can fallback to posting a comment from bors.</p>",
        "id": 201861790,
        "sender_full_name": "bjorn3",
        "timestamp": 1593012079
    },
    {
        "content": "<p>This is why i punted on this to start with and just went with labels for the simple things. I think using a single comment from bors would be the right thing to do to both store the state of the PR as well as show more detailed info about the PR</p>",
        "id": 201875461,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593018375
    },
    {
        "content": "<blockquote>\n<p>show more detailed info about the PR</p>\n</blockquote>\n<p>And links/text to how to use bors, etc. I'm a big fan of dependabot's examples:</p>\n<p><a href=\"/user_uploads/4715/s4TlufU3Csye4gSEbvNfWWBy/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/s4TlufU3Csye4gSEbvNfWWBy/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/s4TlufU3Csye4gSEbvNfWWBy/image.png\"></a></div>",
        "id": 201882412,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593021730
    },
    {
        "content": "<p>I prepared a doodle for a call to discuss bors-rs and how it could help the rust project, as a replacement for homu:<br>\n<a href=\"https://doodle.com/poll/5fvpc6q75bpwzwx7\">https://doodle.com/poll/5fvpc6q75bpwzwx7</a></p>",
        "id": 202079542,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593171721
    },
    {
        "content": "<p>pinging some interested parties<br>\nbors-rs: <span class=\"user-mention\" data-user-id=\"235180\">@Jack Moffitt</span> <span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span><br>\ninfra: <span class=\"user-group-mention\" data-user-group-id=\"2943\">@T-infra</span><br>\nrollups: <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span></p>",
        "id": 202079651,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593171823
    },
    {
        "content": "<p>if someone else is interested to talk about homu feel free to join in the doodle</p>",
        "id": 202079719,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593171858
    },
    {
        "content": "<p>Out of curiosity, the comparisons being made in this thread are to homu, but aside from being written in Rust how does bors-rs compare to bors-ng which has been around for the past few years and is actively maintained? <a href=\"https://github.com/bors-ng/bors-ng\">https://github.com/bors-ng/bors-ng</a></p>",
        "id": 202081791,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1593173585
    },
    {
        "content": "<p>bors-ng is a github app, which means that it can't merge across changes to github actions workflows. Everybody has to rebase their PR after a github actions workflow is changed. It also doesn't give any error message. It just silently fails. <a href=\"https://github.com/bors-ng/bors-ng/issues/806\">https://github.com/bors-ng/bors-ng/issues/806</a>. It also doesn't seem to have a publicly viewable queue.</p>",
        "id": 202083167,
        "sender_full_name": "bjorn3",
        "timestamp": 1593174600
    },
    {
        "content": "<p>I'd kinda prefer to keep using homu instead of moving to bors-ng: we have unique needs and we often need to implement features we'll only need ourselves, so having the bot being written in a language people in the infrastructure team know how to use and deploy is crucial</p>",
        "id": 202083353,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593174722
    },
    {
        "content": "<p>in the last weeks i did share the homu repository to a person who is comfortable working with python, but they still found the codebase challenging to work with. Rewriting would make it easier to target rust's needs at this point which are niche enough to be kept separate from bors-ng imo</p>",
        "id": 202084115,
        "sender_full_name": "DPC",
        "timestamp": 1593175221
    },
    {
        "content": "<p>yeah, the homu codebase is a mess</p>",
        "id": 202084539,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593175471
    },
    {
        "content": "<p>also, <span class=\"user-mention silent\" data-user-id=\"315222\">Brandon Williams</span> is already doing the rewrite in rust anyway</p>",
        "id": 202084568,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593175491
    },
    {
        "content": "<p>(for libra)</p>",
        "id": 202084574,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593175500
    },
    {
        "content": "<blockquote>\n<p>bors-ng is a github app, which means that it can't merge across changes to github actions workflows.</p>\n</blockquote>\n<p>Right, but I don't see how bors-rs is solving this problem, as the problem is with GitHub. GitHub doesn't want you to use OAuth apps for bors style services, hence why bors-ng is a GitHub App. This situation doesn't change with the switch. </p>\n<blockquote>\n<p>I'd kinda prefer to keep using homu instead of moving to bors-ng: we have unique needs and we often need to implement features we'll only need ourselves, so having the bot being written in a language people in the infrastructure team know how to use and deploy is crucial</p>\n<p>also, Brandon Williams is already doing the rewrite in rust anyway</p>\n</blockquote>\n<p>Well to be clear I'm not advocating for bors-ng as a alternative, and my preference is for sticking to homu for the near term. I just think we should cautious on any kind of replacement on key infra tools like bors, especially doing multiple in parallel. We still haven't transitioned away from highfive.</p>\n<p>I don't mean to impugn anyone's programming skills, but rewrites can fail, and require a lot of iteration before they're usually ready to be used in production. I think  discussing what future bors would be like is great, I just think calling it a replacement is pre-mature.</p>",
        "id": 202087823,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1593177402
    },
    {
        "content": "<blockquote>\n<p>Right, but I don't see how bors-rs is solving this problem, as the problem is with GitHub. GitHub doesn't want you to use OAuth apps for bors style services, hence why bors-ng is a GitHub App. This situation doesn't change with the switch. </p>\n</blockquote>\n<p>My understanding is that bors-rs is not a github app, but an OAuth integration, so we won't have this problem.</p>",
        "id": 202088156,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593177571
    },
    {
        "content": "<blockquote>\n<p>Well to be clear I'm not advocating for bors-ng as a alternative, and my preference is for sticking to homu for the near term. I just think we should cautious on any kind of replacement on key infra tools like bors, especially doing multiple in parallel. We still haven't transitioned away from highfive.</p>\n<p>I don't mean to impugn anyone's programming skills, but rewrites can fail, and require a lot of iteration before they're usually ready to be used in production. I think discussing what future bors would be like is great, I just think calling it a replacement is pre-mature.</p>\n</blockquote>\n<p>Well, I think having this discussion right now is going to be really productive. bors-rs is not being done explicitly for the Rust project, but by the Libra team at Facebook: they use homu currently, and they have the same problems we have ourselves (really bad reliability and a codebase in a bad state that makes changes hard). They're doing the rewrite regardless, but they're open to also implementing the stuff we need (<span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>) to better support us if we end up switching to it in the future.</p>",
        "id": 202089431,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593178174
    },
    {
        "content": "<blockquote>\n<p>My understanding is that bors-rs is not a github app, but an OAuth integration, so we won't have this problem.</p>\n</blockquote>\n<p>Well by problem I meant is that GitHub doesn't want people to make OAuth apps for bors type apps, and GitHub has been slowly pushing people away from OAuth for anything but personal apps. So we could have the problem with GitHub Actions  forced on us regardless of whether we use bors-rs, bors-ng, or homu, it's just not a problem currently.</p>",
        "id": 202089584,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1593178248
    },
    {
        "content": "<p>I don't think the plan of bors-rs is to provide a hosted service for everyone like bors-ng is doing, so I think it can be considered a \"personal\" app.</p>",
        "id": 202089691,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593178314
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/242791-t-infra/topic/bors-rs/near/202083167\">said</a>:</p>\n<blockquote>\n<p>bors-ng is a github app, which means that it can't merge across changes to github actions workflows. Everybody has to rebase their PR after a github actions workflow is changed. It also doesn't give any error message. It just silently fails. <a href=\"https://github.com/bors-ng/bors-ng/issues/806\">https://github.com/bors-ng/bors-ng/issues/806</a>. It also doesn't seem to have a publicly viewable queue.</p>\n</blockquote>\n<p>bors-ng <em>does</em> give error messages when CI failed. I dont know about the other things though.</p>",
        "id": 202092869,
        "sender_full_name": "RalfJ",
        "timestamp": 1593179656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/242791-t-infra/topic/bors-rs/near/202089691\">said</a>:</p>\n<blockquote>\n<p>I don't think the plan of bors-rs is to provide a hosted service for everyone like bors-ng is doing, so I think it can be considered a \"personal\" app.</p>\n</blockquote>\n<p>also dont you have contacts in the GHA team? they might actually listen to the rust infra team on matters such as this :)</p>",
        "id": 202093150,
        "sender_full_name": "RalfJ",
        "timestamp": 1593179781
    },
    {
        "content": "<p>well, I do</p>",
        "id": 202093230,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593179831
    },
    {
        "content": "<p>like, that's not the main reason I wouldn't go with bors-ng</p>",
        "id": 202093256,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593179848
    },
    {
        "content": "<p>re: meeting, I am pretty pressed on time until a deadline in about 2 weeks. but also I think DPC and Manish know the rollup pains better than I do so I dont think I could add many new perspectives to that discussion.</p>",
        "id": 202093266,
        "sender_full_name": "RalfJ",
        "timestamp": 1593179853
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 202093314,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593179872
    },
    {
        "content": "<p>my main request would be to experiment with automatic rollups, or at least making bors actually understand rollups as a concept (beyond an assistant to create them)</p>",
        "id": 202093527,
        "sender_full_name": "RalfJ",
        "timestamp": 1593179946
    },
    {
        "content": "<p>but then, I think y'all know better than me if that would really work for us and/or if it will be needed :D</p>",
        "id": 202093591,
        "sender_full_name": "RalfJ",
        "timestamp": 1593179970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> you can leave me your opinions in a message or something and I can raise them :P</p>",
        "id": 202095424,
        "sender_full_name": "DPC",
        "timestamp": 1593180751
    },
    {
        "content": "<p>I dont think I have many thoughts beyond what I said above -- \"consider (more) automated rollups\" -- and the <a href=\"https://github.com/rust-lang/homu/issues?q=is%3Aissue+is%3Aopen+involves%3ARalfJung\">homu issues that I opened/commented</a></p>",
        "id": 202098176,
        "sender_full_name": "RalfJ",
        "timestamp": 1593182056
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> So I've talked with Jack/Brandon about bors-rs before. bors-ng is roughly feature-equivalent to homu, but bors-rs brings a _lot_ of stuff to the table. I believe they're looking into autorollups and such. I forget the details but I remember coming out of that conversation feeling \"whoa i want this\".</p>",
        "id": 202107674,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1593186579
    },
    {
        "content": "<p>bors-ng has autorollups</p>",
        "id": 202107750,
        "sender_full_name": "bjorn3",
        "timestamp": 1593186606
    },
    {
        "content": "<p>actually it seems like bors-rs doesn't have this yet</p>",
        "id": 202110527,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1593187974
    },
    {
        "content": "<p>Yeah bors-rs doesn't even have rollups yet simply because libra doesn't use rollups so I haven't needed to implement it yet. Though jack and I have talked about autorollups as well as optimistically testing subsequent things in the queue (instead of just the head)</p>",
        "id": 202581337,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593616494
    },
    {
        "content": "<blockquote>\n<p>but rewrites can fail, and require a lot of iteration before they're usually ready to be used in production.</p>\n</blockquote>\n<p>I 100% agree with this. rewrites are hard and i've already had to do a fair bit of iteration in order to get something workable for us. This is made worse by the fact that homu doesn't have any tests that I know of so other than observing the behavior of homu its hard to get functional parity. I've tried to limit the scope of what we're rewritting in order to get something out the door that is usable for our needs</p>",
        "id": 202582024,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593616844
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> idk if you've had a chance to look at any of the bors-rs stuff, but you might be interested in the github client I ended up writing. I started working (and had most of what i needed from my implementation) on this prior to seeing your work on <a href=\"https://github.com/XAMPPRocky/octocrab\">https://github.com/XAMPPRocky/octocrab</a>. From my cursory look at octocrab it seems like they are structured similarly, although its easy to tell octocrab has had a lot more polish.</p>",
        "id": 202583164,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593617387
    },
    {
        "content": "<p>I did actually look at it. I had to look at the git history because a lot of it was so similar. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 202583424,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1593617518
    },
    {
        "content": "<p>I had intentions of releasing it for others to use, though this was before you released octocrab. At this point it may be worth me looking at the delta between what you've done and what I've done and contributing the difference to octocrab</p>",
        "id": 202584101,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593617898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Has there been any sort of consensus on a time for a meeting yet?</p>",
        "id": 202584363,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593618053
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> either tomorrow at 15 utc or friday at 16 utc</p>",
        "id": 202584455,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593618106
    },
    {
        "content": "<p>I'd <em>strongly</em> prefer friday, but I see <span class=\"user-mention\" data-user-id=\"235180\">@Jack Moffitt</span> isn't available then</p>",
        "id": 202584513,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593618124
    },
    {
        "content": "<p>so if we can move it to friday I'd be thrilled</p>",
        "id": 202584622,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593618194
    },
    {
        "content": "<p>Friday is a holiday at FB (since the 4th is on a saturday) so that may be why. I'm technically on leave atm so everyday is the same to me :)</p>",
        "id": 202584648,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593618216
    },
    {
        "content": "<p>oh</p>",
        "id": 202584658,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593618223
    },
    {
        "content": "<p>that'd explain it</p>",
        "id": 202584755,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593618264
    },
    {
        "content": "<p>maybe he can do something next week? Let me check (or better yet poke him to look at this)</p>",
        "id": 202584785,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593618283
    },
    {
        "content": "<p>Might be worth it to look at scheduling something for next week after the holiday if we can't get ahold of everyone</p>",
        "id": 202586181,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1593618860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> <span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> <span class=\"user-mention\" data-user-id=\"235180\">@Jack Moffitt</span> <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> sent an invite!</p>",
        "id": 202599778,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593625214
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315222\">@Brandon Williams</span> <span class=\"user-mention\" data-user-id=\"235180\">@Jack Moffitt</span> <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span>  invited y'all to <a href=\"https://github.com/bors-rs\">https://github.com/bors-rs</a></p>",
        "id": 202823438,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593796408
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2943\">@T-infra</span> me, <span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> and <span class=\"user-mention silent\" data-user-id=\"120823\">DPC</span> had a call with <span class=\"user-mention silent\" data-user-id=\"315222\">Brandon Williams</span> and <span class=\"user-mention silent\" data-user-id=\"235180\">Jack Moffitt</span> on bors-rs, and it was really productive! To followup on it, I created the <a href=\"https://github.com/bors-rs\">https://github.com/bors-rs</a> organization, where the new project will be stored. Y'all should soon receive an invite to join it from rust-lang-owner <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 202826059,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593798764
    },
    {
        "content": "<p>do i get an invite? <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 202827586,
        "sender_full_name": "DPC",
        "timestamp": 1593800284
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> done</p>",
        "id": 202828759,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1593801590
    },
    {
        "content": "<p>thanks <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 202829235,
        "sender_full_name": "DPC",
        "timestamp": 1593802152
    },
    {
        "content": "<p>Assuming no one is in any sort of rush I'll plan on migrating over what I have when I'm back from leave in another week or so</p>",
        "id": 203214530,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1594163480
    },
    {
        "content": "<p>Thanks for creating the org!</p>",
        "id": 203214533,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1594163489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> There wouldn’t happen to be minutes would there? 🙂</p>",
        "id": 203242568,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594196649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> unfortunately I don't think anyone from our side took them</p>",
        "id": 203242590,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1594196689
    },
    {
        "content": "<p>most of the call was the infra team explaining how we use bors and how it could be integrated with bors-rs</p>",
        "id": 203242619,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1594196715
    },
    {
        "content": "<p>the most impactful thing we decided was to create the bors-rs org to have a place we can collaborate without messing with the libra org perms</p>",
        "id": 203242656,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1594196757
    },
    {
        "content": "<p>if you have specific questions I'm happy to answer them though!</p>",
        "id": 203242716,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1594196778
    },
    {
        "content": "<p>No, I was mostly just curious. Thanks for summarising!</p>",
        "id": 203243020,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1594197021
    },
    {
        "content": "<p>Could I join the party? I'm intrested in this as one of rollupers (and Python is a pain for me too :P)</p>",
        "id": 203244162,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1594197881
    },
    {
        "content": "<p>We should have taken minutes, its a mistake that I won't repeat. I do have a short list of bullet points of features that would need to be implemented for use within the rust project.</p>",
        "id": 204584052,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1595355902
    },
    {
        "content": "<p>Also, i'm back from leave so I'll try and do the code migration to the bors-rs org within the next couple days</p>",
        "id": 204584211,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1595355974
    },
    {
        "content": "<p>in a related note I'll be on vacation the next two weeks :P</p>",
        "id": 204584398,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1595356077
    },
    {
        "content": "<p>After thats finished my first priority is probably going to be migrating the libra project from using homu to bors-rs</p>",
        "id": 204584499,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1595356111
    },
    {
        "content": "<p>haha I hope you enjoy your vacation, mine was a much needed break :)</p>",
        "id": 204584582,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1595356159
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"315222\">Brandon Williams</span> <a href=\"#narrow/stream/242791-t-infra/topic/bors-rs/near/204584052\">said</a>:</p>\n<blockquote>\n<p>We should have taken minutes, its a mistake that I won't repeat. I do have a short list of bullet points of features that would need to be implemented for use within the rust project.</p>\n</blockquote>\n<p>it'd be great if you could share it via hackmd or something else, or create an issue on the repo so that everyone can see and discuss it :)</p>",
        "id": 204611426,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1595371491
    },
    {
        "content": "<p>Yep that's my plan for today, to get the new repo setup and make those bullet points into issues. I'll comment here once I get that done</p>",
        "id": 204670755,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1595427208
    },
    {
        "content": "<p>sweet</p>",
        "id": 204670888,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1595427265
    },
    {
        "content": "<p>Ok I pushed the code to <a href=\"https://github.com/bors-rs/bors\">https://github.com/bors-rs/bors</a> and documented the points discussed in the meeting <a href=\"https://github.com/bors-rs/bors/issues/1\">https://github.com/bors-rs/bors/issues/1</a></p>",
        "id": 204698118,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1595439582
    },
    {
        "content": "<p>Thought I'd give a short update here for anyone interested:</p>\n<ul>\n<li>We've migrated all libra repositories off of using homu to bors-rs and things have been running pretty smoothly for the last couple of weeks.</li>\n<li>Added a queue page, essentially identical to homu's, so that the queue for a repo can be easily seen not using a GH project board. This doesn't allow for rollups yet (we'd probably first need to implement a 'merge' merge strategy instead of the rebase one currently used) but it supports \"syncing\" PRs. Its not setup to do Auth through Github just yet so anyone can just click the button to do a sync. This isn't an issue for us right now though since to access those pages for our instance of Bors you have to be behind a VPN.</li>\n<li>Added the equivalent of the <code>try</code> command in order to canary the merging of a PR</li>\n</ul>\n<p>Up next I'm looking at making Bors a pseudo Github App like homu is to 1) enable auth for syncing, etc and 2) investigate if this allows for easy \"installing\" of the App onto new repos, eliminating the need to setup a webhook for each and every repo you want Bors to manage,  turning that step into a single button press.</p>",
        "id": 206476720,
        "sender_full_name": "Brandon Williams",
        "timestamp": 1597074484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> could I also get an invite? it'd be nice if I could edit the TODO list on the issue</p>",
        "id": 206823240,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1597329789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span> invited</p>",
        "id": 206918774,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1597403592
    },
    {
        "content": "<p>thanks!</p>",
        "id": 206920595,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1597405300
    },
    {
        "content": "<p>Just curious if there was any progress in the idea of using bors-rs sometime in the future. Is that still on the table, or were the needs of rust-lang not aligned well enough?</p>",
        "id": 238914659,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621101366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/242791-t-infra/topic/bors-rs/near/238914659\">said</a>:</p>\n<blockquote>\n<p>Just curious if there was any progress in the idea of using bors-rs sometime in the future. Is that still on the table, or were the needs of rust-lang not aligned well enough?</p>\n</blockquote>\n<p>I think we just don't have enough hands</p>",
        "id": 239950269,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1621775267
    }
]