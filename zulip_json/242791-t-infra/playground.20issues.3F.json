[
    {
        "content": "<p>Does the playground have issues lately? I regularly get my runs killed.</p>",
        "id": 231593446,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1616571166
    },
    {
        "content": "<p>Everything looks reasonably OK in terms of cpu and memory; I don't think we currently track success and lack thereof though, so that may have changed. <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> likely can give a better assessment there than I, but I'm not particularly aware of any problems.</p>",
        "id": 231623843,
        "sender_full_name": "simulacrum",
        "timestamp": 1616588563
    },
    {
        "content": "<p>I do think it's something that's been happening more frequently — <a href=\"https://github.com/integer32llc/rust-playground/issues/668\">https://github.com/integer32llc/rust-playground/issues/668</a></p>",
        "id": 231627780,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616590461
    },
    {
        "content": "<p>Based on my own anecdata as well.</p>",
        "id": 231627813,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616590478
    },
    {
        "content": "<p>Like <strong>simulacrum</strong>  mentioned, whenever I've poked at the CPU / memory stats, nothing seems wildly off.</p>",
        "id": 231627884,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616590511
    },
    {
        "content": "<p>We do not track success/failure (although that's in my long term goals list; but I don't even know what data collector to use). The best we have is an access log.</p>",
        "id": 231628060,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616590574
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do we have a dashboard or anything that tracks machine-level stats over time? If so, we could see if the playground server has been getting more and more traffic (read: CPU usage) or anything.</p>",
        "id": 231628199,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616590628
    },
    {
        "content": "<p>We do for CPU and memory, though history is currently just two weeks. It doesn't look like there's been any spike though and we're generally at an average of around 40-50% CPU, though with short peaks of up to 100%</p>",
        "id": 231628386,
        "sender_full_name": "simulacrum",
        "timestamp": 1616590693
    },
    {
        "content": "<p>IIRC, the docker container we launch imposes memory limits, maybe we should relax those a bit? The memory statistics I can see suggest we have plenty of headroom right now</p>",
        "id": 231628513,
        "sender_full_name": "simulacrum",
        "timestamp": 1616590746
    },
    {
        "content": "<p>I believe SIGKILL is how memory oom usually shows up in docker</p>",
        "id": 231628561,
        "sender_full_name": "simulacrum",
        "timestamp": 1616590770
    },
    {
        "content": "<p>If it were memory spikes I would expect it to be consistently killed though :/ this is only happening sometimes</p>",
        "id": 231631312,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616591797
    },
    {
        "content": "<p>Well, it depends on how the oom killing in docker works. If it's not an edge-trigger but rather polling, I could easily see the detection <em>usually</em> going unnoticed, as it slips by in just under the polling timer firing</p>",
        "id": 231638744,
        "sender_full_name": "simulacrum",
        "timestamp": 1616594608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20issues.3F/near/231631312\">said</a>:</p>\n<blockquote>\n<p>If it were memory spikes I would expect it to be consistently killed though :/ this is only happening sometimes</p>\n</blockquote>\n<p>Hm, I'm not sure. Given that I see this immediately, i think there's some credibility to that  theory.</p>",
        "id": 231690480,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1616612531
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20issues.3F/near/231628513\">said</a>:</p>\n<blockquote>\n<p>IIRC, the docker container we launch imposes memory limits, maybe we should relax those a bit? The memory statistics I can see suggest we have plenty of headroom right now</p>\n</blockquote>\n<p>I see this on examples of all sizes, especially without any external crates or so, so i'm not sure it's a headroom problem.</p>",
        "id": 231690607,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1616612584
    },
    {
        "content": "<p>(I think we always build with all external crates due to how playground is setup). but yeah, hard to say</p>",
        "id": 231691195,
        "sender_full_name": "simulacrum",
        "timestamp": 1616612833
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do we track memory usage of rustc and or cargo over time? Maybe it’s a matter of just using more little by little and now it’s bumping into our caps.</p>",
        "id": 231790703,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675003
    },
    {
        "content": "<p>We track rustc, I don't think we've had any major changes lately though. <a href=\"https://perf.rust-lang.org/?start=&amp;end=&amp;absolute=true&amp;stat=max-rss\">https://perf.rust-lang.org/?start=&amp;end=&amp;absolute=true&amp;stat=max-rss</a></p>",
        "id": 231790768,
        "sender_full_name": "simulacrum",
        "timestamp": 1616675038
    },
    {
        "content": "<p>Maybe cargo has, though.</p>",
        "id": 231790788,
        "sender_full_name": "simulacrum",
        "timestamp": 1616675042
    },
    {
        "content": "<p>There’s also things like <a href=\"https://github.com/integer32llc/rust-playground/issues/608\">https://github.com/integer32llc/rust-playground/issues/608</a></p>",
        "id": 231790844,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675058
    },
    {
        "content": "<p>But I think we should raise the cap (how was it chosen?) and see if that helps things; we seem to have plenty of headroom right now so there's little risk to doing so I imagine?</p>",
        "id": 231790859,
        "sender_full_name": "simulacrum",
        "timestamp": 1616675071
    },
    {
        "content": "<p>Where we already ran out of memory for bigger things.</p>",
        "id": 231790885,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675088
    },
    {
        "content": "<blockquote>\n<p>how was it chosen?</p>\n</blockquote>\n<p>xkcd-random.png</p>",
        "id": 231791139,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675193
    },
    {
        "content": "<p>Probably focusing on my little t2.micro instance</p>",
        "id": 231791215,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675227
    },
    {
        "content": "<p><a href=\"https://github.com/integer32llc/rust-playground/blob/d03009c20002b21d76f2f01b1efdd2749a0559f1/ui/src/sandbox.rs#L450\">https://github.com/integer32llc/rust-playground/blob/d03009c20002b21d76f2f01b1efdd2749a0559f1/ui/src/sandbox.rs#L450</a></p>",
        "id": 231791280,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675270
    },
    {
        "content": "<p>256 MB should be enough for anybody</p>",
        "id": 231791341,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675286
    },
    {
        "content": "<p>Maybe I’ll make it into an environment variable tonight.</p>",
        "id": 231792139,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1616675686
    },
    {
        "content": "<p>Memory-related seems likely:</p>\n<div class=\"codehilite\"><pre><span></span><code>~# dmesg | grep &#39;out of memory: Killed process&#39; | wc\n     53     901    9937\n</code></pre></div>",
        "id": 233126125,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1617585545
    },
    {
        "content": "<p>rustfmt is finally building, so the Playground CI is flowing again. I've doubled the memory limits (512 RAM, 640 swap), so let's watch and hope! <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 234338957,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618325301
    },
    {
        "content": "<p>I do note that the playground only has 2 cores and the load average is at <code>6.83, 6.77, 4.8</code>. Do we know how easily the number of cores could be changed?</p>",
        "id": 234510985,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618411598
    },
    {
        "content": "<p>Maybe it's time to finally have a pool of playground servers</p>",
        "id": 234511045,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618411622
    },
    {
        "content": "<p>I don't think we would need to jump to a pool; moving playground to a slightly larger server might make sense, but ultimately it's not clear to me that is necessary right now</p>",
        "id": 234511573,
        "sender_full_name": "simulacrum",
        "timestamp": 1618411799
    },
    {
        "content": "<p>the load has looked pretty constant</p>",
        "id": 234511638,
        "sender_full_name": "simulacrum",
        "timestamp": 1618411807
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/sLapxDPGKJ8xne2Hs5Pc-u1U/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/sLapxDPGKJ8xne2Hs5Pc-u1U/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/sLapxDPGKJ8xne2Hs5Pc-u1U/image.png\"></a></div>",
        "id": 234511668,
        "sender_full_name": "simulacrum",
        "timestamp": 1618411818
    },
    {
        "content": "<p>that's the last 7 days cpu</p>",
        "id": 234511689,
        "sender_full_name": "simulacrum",
        "timestamp": 1618411824
    },
    {
        "content": "<p>(which is actually really interesting why core 0 and core 1 are always ... the same)</p>",
        "id": 234511733,
        "sender_full_name": "simulacrum",
        "timestamp": 1618411841
    },
    {
        "content": "<p>I feel like that... can't be right. How can the load average be &gt;2 (now: <code>3.30, 3.86, 4.51</code>) on a two core machine but the CPU looks pretty well below 50%</p>",
        "id": 234524444,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618415462
    },
    {
        "content": "<p>But, top does say</p>\n<div class=\"codehilite\"><pre><span></span><code>%Cpu(s): 22.7 us, 11.9 sy,  0.0 ni, 64.6 id,  0.7 wa,  0.0 hi,  0.0 si,  0.2 st\n</code></pre></div>",
        "id": 234525003,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618415670
    },
    {
        "content": "<p>The \"load\" is not the amount of running tasks, but the amount of tasks that is running and the amount of tasks waiting to be scheduled combined. So for example if on a single core processor one task is running and 10 are waiting to be scheduled next, the load is 11.</p>",
        "id": 234531986,
        "sender_full_name": "bjorn3",
        "timestamp": 1618418200
    },
    {
        "content": "<p>Right, but why would there be processes wanting to run but the CPU not at 100% (aka not running them)?</p>",
        "id": 234549437,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618424523
    },
    {
        "content": "<p>Waiting on disk i/o for example?</p>",
        "id": 234549855,
        "sender_full_name": "simulacrum",
        "timestamp": 1618424687
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/uLqSqfCVYv7uIBKaTxBxO2uU/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/uLqSqfCVYv7uIBKaTxBxO2uU/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/uLqSqfCVYv7uIBKaTxBxO2uU/image.png\"></a></div>",
        "id": 234549909,
        "sender_full_name": "simulacrum",
        "timestamp": 1618424714
    },
    {
        "content": "<p>Hmm; if that's the case, then improving speed would be better suited to trying to reduce disk IO costs</p>",
        "id": 234550242,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618424839
    },
    {
        "content": "<p>But I don't generally see anything as <code>D</code> when watching via top</p>",
        "id": 234550497,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618424938
    },
    {
        "content": "<p>The playground is Ubuntu 18 and an older docker, so it's always possible that newer versions have improved perf as well</p>",
        "id": 234550603,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618424990
    },
    {
        "content": "<p>Yeah, we should upgrade the machine regardless (just to a newer AMI)</p>",
        "id": 234550935,
        "sender_full_name": "simulacrum",
        "timestamp": 1618425116
    },
    {
        "content": "<p>What’s that process look like? Is it “just” a config change and reboot?</p>",
        "id": 234554015,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618426382
    },
    {
        "content": "<p>Someday we will get something automated that I can also use for my playground instance.</p>",
        "id": 234554124,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618426423
    },
    {
        "content": "<p>Hm, it's probably easier to just provision an entirely new instance - I think it usually wants to swap out the disk used, for example</p>",
        "id": 234554130,
        "sender_full_name": "simulacrum",
        "timestamp": 1618426425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you know if this is feasible:</p>\n<blockquote>\n<p>something automated that I can also use for my playground instance</p>\n</blockquote>\n<p>Something I could put into simpleinfra (or in the playground repo itself...) but also target my own machines / EC2 credentials. That way I could try out the config for <code>play.integer32.com</code> and ensure that it's the same as the real playground.</p>",
        "id": 234556249,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618427161
    },
    {
        "content": "<p>I'ven't done enough with terraform to gauge such a thing</p>",
        "id": 234556338,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618427183
    },
    {
        "content": "<p>We have some ansible scripts which seem better suited to the configuration; terraform to my knowledge is not well suited to configuring instances post boot</p>",
        "id": 234556410,
        "sender_full_name": "simulacrum",
        "timestamp": 1618427215
    },
    {
        "content": "<p>But you could do something like what we have for the monitoring instance</p>",
        "id": 234556447,
        "sender_full_name": "simulacrum",
        "timestamp": 1618427228
    },
    {
        "content": "<p>(and bastion, I think)</p>",
        "id": 234556485,
        "sender_full_name": "simulacrum",
        "timestamp": 1618427240
    },
    {
        "content": "<p>terraform == make the machine; ansible == set up the machine?</p>",
        "id": 234556832,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618427377
    },
    {
        "content": "<p>I have a smidgen of ansible experience, but it was a few years ago now :-)</p>",
        "id": 234557038,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618427455
    },
    {
        "content": "<p>yeah, that's my understanding</p>",
        "id": 234557082,
        "sender_full_name": "simulacrum",
        "timestamp": 1618427473
    },
    {
        "content": "<blockquote>\n<p>Waiting on disk i/o for example?</p>\n</blockquote>\n<p>Newer kernels have <code>/proc/pressure/io</code> for that. Recent versions of <code>htop</code> can also be configured to show that. Or just <code>watch cat /proc/pressure/*</code>. It's better than looking at load averages since it splits IO, CPU and memory subsystem contention.</p>",
        "id": 234568711,
        "sender_full_name": "The 8472",
        "timestamp": 1618431880
    },
    {
        "content": "<p>we should definitely use ansible to configure the playground instance</p>",
        "id": 234574966,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1618434205
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> I'm wondering, what is running on the playground machine and how is play deployed?</p>",
        "id": 234575159,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1618434252
    },
    {
        "content": "<p>if it's just a docker image behind nginx it'd be actually really simple to port it to ansible, as we already have roles ready for all of that</p>",
        "id": 234575297,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1618434294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20issues.3F/near/234568711\">said</a>:</p>\n<blockquote>\n<p><code>watch cat /proc/pressure/*</code></p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><code>tail  /proc/pressure/*\n==&gt; /proc/pressure/cpu &lt;==\nsome avg10=31.54 avg60=17.47 avg300=22.47 total=497882726599\n\n==&gt; /proc/pressure/io &lt;==\nsome avg10=1.21 avg60=0.88 avg300=0.99 total=35939772899\nfull avg10=0.39 avg60=0.40 avg300=0.40 total=19590670619\n\n==&gt; /proc/pressure/memory &lt;==\nsome avg10=0.00 avg60=0.00 avg300=0.00 total=477442351\nfull avg10=0.00 avg60=0.00 avg300=0.00 total=179537271\n</code></pre></div>",
        "id": 234580117,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618435931
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20issues.3F/near/234575297\">said</a>:</p>\n<blockquote>\n<p>if it's just a docker image behind nginx it'd be actually really simple to port it to ansible, as we already have roles ready for all of that</p>\n</blockquote>\n<p>Oh you sweet summer child.</p>\n<p>\"Deploying\" is a cronjob that runs every X (15?) minutes, running <code>docker pull</code> for the stable/beta/nightly/miri/rustfmt/clippy containers and syncing the assets and server binary from a S3 bucket -&gt; local. It then restarts the server (whether or not anything changed).</p>\n<p>Original server setup <em>should</em> basically be \"install docker, create a file-backed partition for the temporary files, create a daemon, configure nginx to forward to the server\"</p>",
        "id": 234581053,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1618436387
    },
    {
        "content": "<p>a prometheus node_exporter has a enabled-by-default module for pressure information. And there's a <a href=\"https://grafana.com/grafana/dashboards/12949\">dashboard</a> by yours truly</p>",
        "id": 234586123,
        "sender_full_name": "nagisa",
        "timestamp": 1618438992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> could we have the playground itself be inside a docker container?</p>",
        "id": 234586568,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1618439278
    }
]