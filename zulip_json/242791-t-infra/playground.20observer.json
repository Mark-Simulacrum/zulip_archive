[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you think it would be a good/bad/useless idea for the playground web server to also be a jobserver? That way if only a single request is being processed, it could make use of both CPUs on the instance.</p>",
        "id": 270979687,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1644241541
    },
    {
        "content": "<p>I wouldn't expect it to be that helpful, the compiler itself is pretty single threaded on short files</p>",
        "id": 270979896,
        "sender_full_name": "simulacrum",
        "timestamp": 1644241655
    },
    {
        "content": "<p>And it's probably a pain to actually do that well across the docker boundary - it's hard to sandbox jobserver protocol in a way that guarantees tokens are returned to the pool.</p>",
        "id": 270979991,
        "sender_full_name": "simulacrum",
        "timestamp": 1644241702
    },
    {
        "content": "<p>Shouldn't the scheduler already take care of it? new cgroup for each container and the default CPU weight -&gt; even split if both are competing for cycles but ability to use all cores when they're unused</p>",
        "id": 270987221,
        "sender_full_name": "The 8472",
        "timestamp": 1644244823
    },
    {
        "content": "<p>assuming it doesn't spawn more containers than cores</p>",
        "id": 270989595,
        "sender_full_name": "The 8472",
        "timestamp": 1644245855
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20observer/near/270989595\">said</a>:</p>\n<blockquote>\n<p>assuming it doesn't spawn more containers than cores</p>\n</blockquote>\n<p>This is not true currently. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> It's something that I'm looking into addressing.</p>",
        "id": 271016476,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1644256448
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20observer/near/270987221\">said</a>:</p>\n<blockquote>\n<p>Shouldn't the scheduler already take care of it? new cgroup for each container and the default CPU weight -&gt; even split if both are competing for cycles but ability to use all cores when they're unused</p>\n</blockquote>\n<p>There's also things like <a href=\"https://github.com/integer32llc/rust-playground/blob/master/compiler/base/Cargo.toml#L7\">https://github.com/integer32llc/rust-playground/blob/master/compiler/base/Cargo.toml#L7</a></p>",
        "id": 271016687,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1644256523
    }
]