[
    {
        "content": "<p>Hi folks! I'm not sure if this is quite the right place to ask this, but it was the best fit I could find. For... reasons, I'm working in an environment where I build rustc from source on aarch64 but am using llvm-tools-preview as installed through rustup. This has run me into an interesting issue where running the profraw files from source-based coverage through llvm-profdata gives me a lot of</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">profile</span><span class=\"w\"> </span><span class=\"n\">uses</span><span class=\"w\"> </span><span class=\"n\">zlib</span><span class=\"w\"> </span><span class=\"n\">compression</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">profile</span><span class=\"w\"> </span><span class=\"n\">reader</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">built</span><span class=\"w\"> </span><span class=\"n\">without</span><span class=\"w\"> </span><span class=\"n\">zlib</span><span class=\"w\"> </span><span class=\"n\">support</span><span class=\"w\"></span>\n</code></pre></div>\n<p>errors. From what I've been able to discern, this is happening because my from-source rustc, is built with libz support, but llvm-tools is built without. I also have the same situation on x86_64, but there everything works fine, which suggests that the x86_64 llvm-tools _is_ build with libz.</p>\n<p>I _think_ the issue is that the aarch64 Dockerfile doesn't install libz whereas the x86_64 one does (compare <a href=\"https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile#L35\">https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile#L35</a> and <a href=\"https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src/ci/docker/host-aarch64/aarch64-gnu/Dockerfile#L3\">https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src/ci/docker/host-aarch64/aarch64-gnu/Dockerfile#L3</a>). Is this an oversight or an intentional decision?</p>",
        "id": 277311119,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1648746104
    },
    {
        "content": "<p>Pretty sure it's an oversight</p>",
        "id": 277349696,
        "sender_full_name": "simulacrum",
        "timestamp": 1648766566
    },
    {
        "content": "<p>IIRC it's optional in llvm even when you ask for it or something like that, and we have a really bad story for \"all our dist builds should do this\"</p>",
        "id": 277349769,
        "sender_full_name": "simulacrum",
        "timestamp": 1648766626
    },
    {
        "content": "<p>Oh, yeah, it's entirely optional in LLVM, but it does manifest in weird ways when we build with it on one platform but not others. Opened a PR fixing it + explaining a bit more what can go wrong: <a href=\"https://github.com/rust-lang/rust/pull/95545\">https://github.com/rust-lang/rust/pull/95545</a></p>",
        "id": 277352339,
        "sender_full_name": "Jon Gjengset",
        "timestamp": 1648768413
    }
]