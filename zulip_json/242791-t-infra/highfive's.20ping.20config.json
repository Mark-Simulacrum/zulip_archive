[
    {
        "content": "<p>I should've set the ping config for highfive on the libc repo: <a href=\"https://github.com/rust-lang/highfive/commit/e14e13c3928063d94398424c07ebd401be8c4f3f\">https://github.com/rust-lang/highfive/commit/e14e13c3928063d94398424c07ebd401be8c4f3f</a><br>\nbut it doesn't seem to work well (semarie should be pinged on this PR): <a href=\"https://github.com/rust-lang/libc/pull/2164\">https://github.com/rust-lang/libc/pull/2164</a><br>\nShould a person be a member of the org or am I missing something?</p>",
        "id": 237944977,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1620469440
    },
    {
        "content": "<p>I think it is a bug in highfive.  The following I think should fix it:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/highfive/newpr.py b/highfive/newpr.py</span>\n<span class=\"gh\">index 386f9cd..661eb3b 100644</span>\n<span class=\"gd\">--- a/highfive/newpr.py</span>\n<span class=\"gi\">+++ b/highfive/newpr.py</span>\n<span class=\"gu\">@@ -315,13 +315,12 @@ class HighfiveHandler(object):</span>\n         \"\"\"\n         Get the list of people to mention.\n         \"\"\"\n<span class=\"gd\">-        dirs = self.repo_config.get('dirs', {})</span>\n         mentions = self.repo_config.get('mentions', {})\n\n         to_mention = set()\n         # If there's directories with specially assigned groups/users\n         # inspect the diff to find the directory with the most additions\n<span class=\"gd\">-        if dirs:</span>\n<span class=\"gi\">+        if mentions:</span>\n             cur_dir = None\n             for line in diff.split('\\n'):\n                 if line.startswith(\"diff --git \"):\n</code></pre></div>",
        "id": 237971809,
        "sender_full_name": "Eric Huss",
        "timestamp": 1620494781
    },
    {
        "content": "<p>Or maybe this to reduce the rightwards drift:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/highfive/newpr.py b/highfive/newpr.py</span>\n<span class=\"gh\">index 386f9cd..7ac9731 100644</span>\n<span class=\"gd\">--- a/highfive/newpr.py</span>\n<span class=\"gi\">+++ b/highfive/newpr.py</span>\n<span class=\"gu\">@@ -315,39 +315,39 @@ class HighfiveHandler(object):</span>\n         \"\"\"\n         Get the list of people to mention.\n         \"\"\"\n<span class=\"gd\">-        dirs = self.repo_config.get('dirs', {})</span>\n         mentions = self.repo_config.get('mentions', {})\n<span class=\"gi\">+        if not mentions:</span>\n<span class=\"gi\">+            return []</span>\n\n         to_mention = set()\n         # If there's directories with specially assigned groups/users\n         # inspect the diff to find the directory with the most additions\n<span class=\"gd\">-        if dirs:</span>\n<span class=\"gd\">-            cur_dir = None</span>\n<span class=\"gd\">-            for line in diff.split('\\n'):</span>\n<span class=\"gd\">-                if line.startswith(\"diff --git \"):</span>\n<span class=\"gd\">-                    # update cur_dir</span>\n<span class=\"gd\">-                    cur_dir = None</span>\n<span class=\"gd\">-                    parts = line[line.find(\" b/\") + len(\" b/\"):].split(\"/\")</span>\n<span class=\"gd\">-                    if not parts:</span>\n<span class=\"gd\">-                        continue</span>\n<span class=\"gd\">-                    cur_dir = \"/\".join(parts[:2])</span>\n<span class=\"gd\">-                    full_dir = \"/\".join(parts)</span>\n<span class=\"gi\">+        cur_dir = None</span>\n<span class=\"gi\">+        for line in diff.split('\\n'):</span>\n<span class=\"gi\">+            if line.startswith(\"diff --git \"):</span>\n<span class=\"gi\">+                # update cur_dir</span>\n<span class=\"gi\">+                cur_dir = None</span>\n<span class=\"gi\">+                parts = line[line.find(\" b/\") + len(\" b/\"):].split(\"/\")</span>\n<span class=\"gi\">+                if not parts:</span>\n<span class=\"gi\">+                    continue</span>\n<span class=\"gi\">+                cur_dir = \"/\".join(parts[:2])</span>\n<span class=\"gi\">+                full_dir = \"/\".join(parts)</span>\n\n<span class=\"gd\">-                    # A few heuristics to get better reviewers</span>\n<span class=\"gd\">-                    if cur_dir.startswith('src/librustc'):</span>\n<span class=\"gd\">-                        cur_dir = 'src/librustc'</span>\n<span class=\"gd\">-                    if cur_dir == 'src/test':</span>\n<span class=\"gd\">-                        cur_dir = None</span>\n<span class=\"gd\">-                    if len(full_dir) &gt; 0:</span>\n<span class=\"gd\">-                        for entry in mentions:</span>\n<span class=\"gd\">-                            # Check if this entry is a prefix</span>\n<span class=\"gd\">-                            eparts = entry.split(\"/\")</span>\n<span class=\"gd\">-                            if (len(eparts) &lt;= len(parts) and</span>\n<span class=\"gd\">-                                all(a==b for a,b in zip(parts, eparts))</span>\n<span class=\"gd\">-                            ):</span>\n<span class=\"gd\">-                                to_mention.add(entry)</span>\n<span class=\"gd\">-                            elif entry.endswith('.rs') and full_dir.endswith(entry):</span>\n<span class=\"gd\">-                                to_mention.add(entry)</span>\n<span class=\"gi\">+                # A few heuristics to get better reviewers</span>\n<span class=\"gi\">+                if cur_dir.startswith('src/librustc'):</span>\n<span class=\"gi\">+                    cur_dir = 'src/librustc'</span>\n<span class=\"gi\">+                if cur_dir == 'src/test':</span>\n<span class=\"gi\">+                    cur_dir = None</span>\n<span class=\"gi\">+                if len(full_dir) &gt; 0:</span>\n<span class=\"gi\">+                    for entry in mentions:</span>\n<span class=\"gi\">+                        # Check if this entry is a prefix</span>\n<span class=\"gi\">+                        eparts = entry.split(\"/\")</span>\n<span class=\"gi\">+                        if (len(eparts) &lt;= len(parts) and</span>\n<span class=\"gi\">+                            all(a==b for a,b in zip(parts, eparts))</span>\n<span class=\"gi\">+                        ):</span>\n<span class=\"gi\">+                            to_mention.add(entry)</span>\n<span class=\"gi\">+                        elif entry.endswith('.rs') and full_dir.endswith(entry):</span>\n<span class=\"gi\">+                            to_mention.add(entry)</span>\n\n         mention_list = []\n         for mention in to_mention:\n</code></pre></div>",
        "id": 237971862,
        "sender_full_name": "Eric Huss",
        "timestamp": 1620494872
    },
    {
        "content": "<p>Thanks for investigating it! <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span>  Would you mind sending a PR? I'm not sure if I have some time to take a look and send it currently :(</p>",
        "id": 238162069,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1620660707
    },
    {
        "content": "<p>fyi: pr is posted <a href=\"https://github.com/rust-lang/highfive/pull/336\">https://github.com/rust-lang/highfive/pull/336</a>, thanks for your insight :)</p>",
        "id": 239973801,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1621799271
    },
    {
        "content": "<p>gah, sorry I didn't respond! This got lost in the shuffle, thanks for finishing it up.</p>",
        "id": 240057184,
        "sender_full_name": "Eric Huss",
        "timestamp": 1621865859
    }
]