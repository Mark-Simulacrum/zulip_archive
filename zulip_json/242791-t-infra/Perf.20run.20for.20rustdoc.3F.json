[
    {
        "content": "<p>I know there are perf runs for the compiler, do those cover rustdoc as well? or is there a separate perf command for rustdoc? I have a feeling <a href=\"https://github.com/rust-lang/rust/pull/73566\">https://github.com/rust-lang/rust/pull/73566</a> will affect perf a lot but I'm not sure if it will be better or worse.</p>",
        "id": 201508752,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592701954
    },
    {
        "content": "<p>perf does not support rustdoc today (and there's not a great way to get perf for rustdoc through automated tooling). You could plausibly try it out yourself on some group of crates (say, std, core, winapi, serde)</p>",
        "id": 201509015,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702399
    },
    {
        "content": "<p>I'd personally be willing to take a PR adding a rustdoc mode to perf though as an opt-in thing</p>",
        "id": 201509061,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702434
    },
    {
        "content": "<p>neat! where would I make the PR to, is perf in-tree?</p>",
        "id": 201509069,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592702463
    },
    {
        "content": "<p>no, <a href=\"https://github.com/rust-lang/rustc-perf/\">https://github.com/rust-lang/rustc-perf/</a></p>",
        "id": 201509088,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702501
    },
    {
        "content": "<p>you probably want to take a look at collector, and to start just add it as one of the ways of gathering perf (you can grep for say cachegrind)</p>",
        "id": 201509132,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702532
    },
    {
        "content": "<p>or I guess, actually, no</p>",
        "id": 201509143,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702552
    },
    {
        "content": "<p>we'll want to add a dedicated buildkind (like check/debug/opt), called doc</p>",
        "id": 201509148,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702566
    },
    {
        "content": "<p>iirc that's a buildkind but it might be a runkind, I don't have the sources at the moment</p>",
        "id": 201509155,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702582
    },
    {
        "content": "<p>and that would be by default off</p>",
        "id": 201509218,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702667
    },
    {
        "content": "<p>I imagine once you have that added it'd be not too hard to pull that support through (probably just following compiler errors) and then you can run perf locally via something like <code>./target/release/collector --db rustdoc.db --filter hyper -- bench_local --rustc ~/.rustup/bin/toolchains/stage1/bin/rustdoc --cargo ~/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo --id stage1</code></p>",
        "id": 201509304,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702803
    },
    {
        "content": "<p>(The filter is of course optional, but you probably want it to speed up iterations initially)</p>",
        "id": 201509320,
        "sender_full_name": "simulacrum",
        "timestamp": 1592702847
    },
    {
        "content": "<p><code>RunKind</code> is {Full, IncrementalFull, IncrementalUnchanged, IncrementalPatched} so I think I want BuildKind</p>",
        "id": 201509828,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592703565
    },
    {
        "content": "<p>Yep</p>",
        "id": 201509888,
        "sender_full_name": "simulacrum",
        "timestamp": 1592703636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> FWIW I plan to dedicate an hour or two at least to perf tomorrow, so if you get partway please do post a PR (or all the way of course is fine too :)</p>",
        "id": 201509906,
        "sender_full_name": "simulacrum",
        "timestamp": 1592703694
    },
    {
        "content": "<p>the readme for <code>collector</code> seems to be out of date, it builds fine on stable</p>",
        "id": 201509953,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592703728
    },
    {
        "content": "<p>btw I won't have much time to work on this today or tomorrow so don't wait on me for changes to perf</p>",
        "id": 201510419,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592704612
    },
    {
        "content": "<p>Nightly is mainly because we used to rely on nightly cargo for compat with master builds, but I think that's no longer true). Regardless, our CI doesn't test stable though we do try to keep compat.</p>",
        "id": 201539569,
        "sender_full_name": "simulacrum",
        "timestamp": 1592754161
    },
    {
        "content": "<p>I'm not quite sure what I should do in <code>run_rustc</code></p>",
        "id": 202160543,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593220722
    },
    {
        "content": "<p>I can only add arguments, not change the command being run, which is hardcoded to <code>rustc</code></p>",
        "id": 202160545,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593220734
    },
    {
        "content": "<p>oh hold on I think I can modify <code>subcommand</code></p>",
        "id": 202160573,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593220785
    },
    {
        "content": "<p>modifying subcommand did not do what I wanted</p>\n<div class=\"codehilite\"><pre><span></span><code>$ RUST_LOG=debug $CARGO_TARGET_DIR/release/collector --db rustdoc.db --filter hyper -- bench_local --rustc ~/.rustup/bin/toolchains/stage1/bin/rustdoc --cargo ~/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo --id stage1\nerror: The subcommand &#39;bench_local&#39; wasn&#39;t recognized\n    Did you mean &#39;bench_local&#39;?\n\nIf you believe you received this message in error, try re-running with &#39;collector -- bench_local&#39;\n\nUSAGE:\n    collector --db &lt;db&gt; --filter &lt;filter&gt;\n</code></pre></div>",
        "id": 202161586,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593222448
    },
    {
        "content": "<p>wait that happens without my changes too</p>",
        "id": 202161714,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593222663
    },
    {
        "content": "<p>I'm very confused</p>",
        "id": 202161718,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593222668
    },
    {
        "content": "<p>ok the command line that worked on master was</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo +nightly build --release &amp;&amp; RUST_LOG=debug $CARGO_TARGET_DIR/release/collector --db rustc.db --filter hyper bench_local --rustc $RUSTUP_HOME/toolchains/stage1/bin/rustc --cargo $RUSTUP_HOME/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo rustc\n</code></pre></div>",
        "id": 202162097,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593223157
    },
    {
        "content": "<p>passing rustdoc instead of rustc gives</p>\n<div class=\"codehilite\"><pre><span></span><code>stderr=error: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn&#39;t exit successfully: `/home/joshua/.local/lib/cargo/target/release/rustc-fake - --crate-name ___ --print=file-names --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=cfg` (exit code: 1)\n--- stderr\nerror: Unrecognized option: &#39;print&#39;\n</code></pre></div>",
        "id": 202162109,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593223173
    },
    {
        "content": "<p>maybe collector should take a directory instead of a binary so it can call <code>rustc --print=cfg</code> even when profiling rustdoc</p>",
        "id": 202162327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593223477
    },
    {
        "content": "<p>I tried not telling it that rustdoc was rustc and that got me a little further</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo +nightly build --release &amp;&amp; rm -f rustdoc.db &amp;&amp; RUST_BACKTRACE=1 RUST_LOG=debug $CARGO_TARGET_DIR/release/collector --db rustdoc.db --filter hyper bench_local --rustc $RUSTUP_HOME/toolchains/stage1/bin/rustc --cargo $RUSTUP_HOME/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo --builds Doc rustdoc\n[2020-06-27T02:29:43Z DEBUG collector::execute] &quot;/home/joshua/.local/lib/rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo&quot; &quot;doc&quot; &quot;--manifest-path&quot; &quot;Cargo.toml&quot; &quot;-p&quot; &quot;file:///tmp/.tmpItLuQ9#hyper:0.13.0-alpha.4&quot; &quot;--&quot; &quot;--wrap-rustc-with&quot; &quot;perf-stat&quot;\nFailed to benchmark hyper-2, recorded: expected success, got exit code: 1\n\nstderr=error: Found argument &#39;--wrap-rustc-with&#39; which wasn&#39;t expected, or isn&#39;t valid in this context\n\nUSAGE:\n    cargo doc --manifest-path &lt;PATH&gt; --package &lt;SPEC&gt;...\n</code></pre></div>",
        "id": 202163403,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593225191
    },
    {
        "content": "<p>oh ugh there's a <code>rustc-fake</code> but there's no <code>rustdoc-fake</code></p>",
        "id": 202163468,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593225283
    },
    {
        "content": "<p>what is rustc-fake used for?</p>",
        "id": 202163470,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593225287
    },
    {
        "content": "<p>I tried setting the <code>RUSTDOC</code> env var but no dice</p>",
        "id": 202163732,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593225686
    },
    {
        "content": "<p>it looks like cargo is giving this error <em>before spawning rustdoc</em></p>",
        "id": 202164964,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593227930
    },
    {
        "content": "<p>I'm so confused, maybe I should use RUSTDOCFLAGS instead</p>",
        "id": 202164967,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593227944
    },
    {
        "content": "<p>yay that got me a different error!</p>",
        "id": 202165126,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593228238
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error: the generated executable for the input file &quot;/home/joshua/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.10/src/lib.rs&quot; conflicts with the existing directory &quot;/tmp/.tmpPp0ha0/target/doc&quot;\n\nerror: aborting due to previous error\n\nthread &#39;main&#39; panicked at &#39;assertion failed: status.success()&#39;, collector/src/bin/rustc-fake.rs:56:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nerror: Could not document `cfg-if`\n</code></pre></div>",
        "id": 202165164,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593228250
    },
    {
        "content": "<p>the issue I think is <code>rustc-fake</code> is being rustc, not rustdoc. I need to split the two apart</p>",
        "id": 202165541,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593229055
    },
    {
        "content": "<p>right, so that gave me</p>\n<div class=\"codehilite\"><pre><span></span><code>error: Unrecognized option: &#39;emit&#39;\n\nerror: could not compile `unicode-xid`.\n\nTo learn more, run the command again with --verbose.\nwarning: build failed, waiting for other jobs to finish...\n</code></pre></div>\n\n\n<p>but also <em>at the same time</em></p>\n<div class=\"codehilite\"><pre><span></span><code>error: the generated executable for the input file &quot;/home/joshua/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.10/src/lib.rs&quot; conflicts with the existing directory &quot;/tmp/.tmpFuZc0k/target/doc&quot;\n\nerror: aborting due to previous error\n</code></pre></div>\n\n\n<p>which is an error from rustc. So I'm very confused.</p>",
        "id": 202166163,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593230260
    },
    {
        "content": "<p>oh I might have figured it out - environment variables are global within a process, so if cargo invokes both <code>rustc</code> and <code>rustdoc</code> then since I hacked <code>ACTUALLY_RUSTDOC=1</code> rustc-fake will <em>always</em> think it's rustdoc</p>",
        "id": 202166478,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593230855
    },
    {
        "content": "<p>oops I had a different bug, now it consistently gives the 'emit' error</p>",
        "id": 202166635,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593231192
    },
    {
        "content": "<p>hey it might be working :D</p>",
        "id": 202167396,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593232508
    },
    {
        "content": "<p><a href=\"https://github.com/jyn514/rustc-perf/tree/rustdoc\">https://github.com/jyn514/rustc-perf/tree/rustdoc</a></p>",
        "id": 202167447,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593232567
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-perf/pull/675\">https://github.com/rust-lang/rustc-perf/pull/675</a></p>",
        "id": 202190082,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1593270215
    }
]