[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> any idea what exactly this footnote means in platform-support.md?</p>\n<blockquote>\n<p>These targets are only available on macOS.</p>\n</blockquote>",
        "id": 211164190,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600968730
    },
    {
        "content": "<p><code>i686-apple-darwin</code> and <code>x86_64-apple-darwin</code> are <strong>not</strong> marked with that footnote</p>",
        "id": 211164320,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600968800
    },
    {
        "content": "<p>I also really want to put <code>?</code> for the host column, as <code>rustc</code> is present but cargo isn't</p>",
        "id": 211164529,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600968899
    },
    {
        "content": "<p>But:</p>\n<blockquote>\n<ul>\n<li>host: A ✓ indicates that <code>rustc</code> and <code>cargo</code> can run on the host platform.</li>\n</ul>\n</blockquote>",
        "id": 211164557,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600968910
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> I wrote that.  Those targets are only available from macOS hosts because they require the SDK to exist.  That is, it is not possible to use <code>--target aarch64-apple-ios</code> on linux.  However, the darwin targets don't need the SDK.</p>",
        "id": 211185459,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600979190
    },
    {
        "content": "<p>How hard would it be to get cargo to also build?</p>",
        "id": 211185491,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600979205
    },
    {
        "content": "<p>The Darwin targets don’t need the SDK? How is that possible?</p>",
        "id": 211185651,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600979296
    },
    {
        "content": "<p>Not “hard”, just getting things flowing. <a href=\"https://github.com/alexcrichton/openssl-src-rs/issues/72\">https://github.com/alexcrichton/openssl-src-rs/issues/72</a></p>",
        "id": 211186135,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600979544
    },
    {
        "content": "<p>Hm, not sure.  Maybe it's just an artifact of how the target is defined.  The iOS-based targets need to specify <code>-isysroot</code>, and that is determined when rustc is built.  Maybe the darwin targets have a default or somehow implicitly figure it out?</p>",
        "id": 211186227,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600979595
    },
    {
        "content": "<p>Hm, so I'm looking a little closely, and I think that note is incorrect. Those targets work if the SDKROOT environment variable is set.</p>",
        "id": 211187003,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600980036
    },
    {
        "content": "<p>Which is also what is needed to cross compile x86 &lt;-&gt; aarch64</p>",
        "id": 211187249,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600980173
    },
    {
        "content": "<p>Yea, I'll think about how to fix the note.  The problem is that there is a test to validate that the table is up-to-date, and <code>rustc</code> pretends those targets don't exist if SDKROOT is not set properly (and thus the test would fail on linux).</p>",
        "id": 211187703,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600980476
    },
    {
        "content": "<p>I’m going to leave the note off the aarch64 Darwin target.</p>",
        "id": 211188336,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600980815
    },
    {
        "content": "<p>I think that is correct.  It mostly just matters if the test passes (<code>./x.py test src/tools/tier-check</code> if you want to run it locally, it should automatically run in the PR builder)</p>",
        "id": 211189016,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600981201
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/242791-t-infra/topic/These.20targets.20are.20only.20available.20on.20macOS/near/211185459\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> I wrote that.  Those targets are only available from macOS hosts because they require the SDK to exist.  That is, it is not possible to use <code>--target aarch64-apple-ios</code> on linux.  However, the darwin targets don't need the SDK.</p>\n</blockquote>\n<p>I think this is just a bug really <a href=\"https://github.com/rust-lang/rust/issues/76584\">https://github.com/rust-lang/rust/issues/76584</a></p>",
        "id": 211191924,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600982785
    },
    {
        "content": "<p>if you specify an SDKROOT it works fine</p>",
        "id": 211191931,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600982795
    },
    {
        "content": "<p>even if it's completely empty</p>",
        "id": 211191944,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600982803
    },
    {
        "content": "<p>Yea, the current behavior is a little odd.  I'll probably change the test to set SDKROOT to something. It looks like it has to be an existing, absolute path that is not <code>/</code>.</p>",
        "id": 211194218,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600984354
    },
    {
        "content": "<p>ideally we'd fix the bug in rustc so everyone benefits :/</p>",
        "id": 211194287,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600984424
    },
    {
        "content": "<p>Well, I’d expect that you can’t actually (cross) compile without the SDK.</p>",
        "id": 211196911,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600986245
    },
    {
        "content": "<p>Which is why I was surprised by the note in the first place.</p>",
        "id": 211196946,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600986291
    },
    {
        "content": "<p>It feels like the equivalent of “you can’t compile on Windows without the build tools” or “Linux without glibc “</p>",
        "id": 211197021,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600986361
    },
    {
        "content": "<p>Yea, the note is just wrong.  But I think at least rustdoc should work without the SDK.</p>",
        "id": 211197063,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600986372
    },
    {
        "content": "<p>I know these aren’t exact equivalents</p>",
        "id": 211197069,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600986379
    },
    {
        "content": "<p>or anything that doesn't need to link</p>",
        "id": 211197091,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600986397
    },
    {
        "content": "<p>Right, it shouldn't error until codegen</p>",
        "id": 211198288,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600987292
    },
    {
        "content": "<p>Rather than immediately exiting when it parses the target</p>",
        "id": 211198306,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600987307
    },
    {
        "content": "<p>hm I am not sure we can do that</p>",
        "id": 211198970,
        "sender_full_name": "simulacrum",
        "timestamp": 1600987675
    },
    {
        "content": "<p>I think we rely on LLVM at least a little for some of the triple -&gt; cfg pieces decoding, though maybe I'm misremembering</p>",
        "id": 211199032,
        "sender_full_name": "simulacrum",
        "timestamp": 1600987697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I think in this case, it would just avoid adding <code>-isysroot</code> to <code>pre_link_args</code> if SDKROOT is not defined (instead of raising an error)</p>",
        "id": 211199097,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600987761
    },
    {
        "content": "<p>Seems plausible! I guess that's probably the only dep</p>",
        "id": 211199144,
        "sender_full_name": "simulacrum",
        "timestamp": 1600987798
    },
    {
        "content": "<p>I don't know what the error message would look like when linking failed, so I would experiment with that to see if there is some way to generate a good error</p>",
        "id": 211199190,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600987805
    },
    {
        "content": "<p>ah, just found <a href=\"https://github.com/rust-lang/rust/issues/36156\">https://github.com/rust-lang/rust/issues/36156</a>.</p>",
        "id": 211199653,
        "sender_full_name": "Eric Huss",
        "timestamp": 1600988107
    },
    {
        "content": "<p>I posted a fix at <a href=\"https://github.com/rust-lang/rust/pull/77202\">https://github.com/rust-lang/rust/pull/77202</a></p>",
        "id": 211310929,
        "sender_full_name": "Eric Huss",
        "timestamp": 1601064288
    },
    {
        "content": "<p>I'm pulling your PR into a branch I'm testing the next step in aarch64-apple-darwin and will be doing a try build, so I'll let you know if anything exciting breaks</p>",
        "id": 211360838,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1601127951
    },
    {
        "content": "<p>Thanks for the rapid fix</p>",
        "id": 211360883,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1601127973
    },
    {
        "content": "<p>Although \"not thanks\" for the pending merge conflict you are going to cause me :-)</p>",
        "id": 211360888,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1601127987
    }
]