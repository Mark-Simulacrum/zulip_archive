[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> fyi I'm splitting up <code>promote-release</code> out of the RCS repository and adding a way to run it locally without becoming crazy</p>",
        "id": 209393429,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1599575176
    },
    {
        "content": "<p>okay</p>",
        "id": 209393450,
        "sender_full_name": "simulacrum",
        "timestamp": 1599575185
    },
    {
        "content": "<p>the ideal outcome is that to run a release locally you can do:</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo build\ndocker-compose up\ndocker-compose run local start\n</code></pre></div>\n\n\n<p>and you'd get a release at <code>http://localhost:9000/dist</code></p>",
        "id": 209393662,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1599575280
    },
    {
        "content": "<p>wait, why do we need a web server</p>",
        "id": 209393975,
        "sender_full_name": "simulacrum",
        "timestamp": 1599575398
    },
    {
        "content": "<p>and docker? promote-release was rather simple</p>",
        "id": 209394063,
        "sender_full_name": "simulacrum",
        "timestamp": 1599575419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> well, promote-release would still be a normal rust binary, with very little changes to it</p>",
        "id": 209416274,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1599585069
    },
    {
        "content": "<p>but to test it locally without aws creds you need to at least have minio locally and configured properly, and a disposable gpg key</p>",
        "id": 209416317,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1599585090
    },
    {
        "content": "<p>Ah, okay, I see</p>",
        "id": 209416351,
        "sender_full_name": "simulacrum",
        "timestamp": 1599585104
    },
    {
        "content": "<p>and all of that is way easier to setup with docker :)</p>",
        "id": 209416364,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1599585110
    },
    {
        "content": "<p>Then seems fine</p>",
        "id": 209416369,
        "sender_full_name": "simulacrum",
        "timestamp": 1599585111
    },
    {
        "content": "<p>the web server is just minio :)</p>",
        "id": 209416466,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1599585139
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> would you be up to review some PRs to promote-release?</p>",
        "id": 210014648,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600094494
    },
    {
        "content": "<p>I'm good merging the code to master myself, but I kinda prefer all code landing there to be reviewed by another person</p>",
        "id": 210014701,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600094519
    },
    {
        "content": "<p>(this PR is mostly busywork, 2015-&gt;2018, \"custom <code>try!</code>\"-&gt;anyhow, toml::Value-&gt;serde::Deserialize)</p>",
        "id": 210014829,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600094555
    },
    {
        "content": "<p>yes I can do that</p>",
        "id": 210015467,
        "sender_full_name": "simulacrum",
        "timestamp": 1600094781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/promote-release/pull/1\">https://github.com/rust-lang/promote-release/pull/1</a></p>",
        "id": 210016792,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600095237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm wondering... now that we have the <code>rust-dev</code> component, could we dunno, upload a compiled <code>build-manifest</code> to it?</p>",
        "id": 210053140,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600112398
    },
    {
        "content": "<p>yeah we could</p>",
        "id": 210053196,
        "sender_full_name": "simulacrum",
        "timestamp": 1600112413
    },
    {
        "content": "<p>it'd be extremely nice not to have to use <code>./x.py</code> in the release process</p>",
        "id": 210053204,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600112423
    },
    {
        "content": "<p>besides, why is cmake required for a release :/</p>",
        "id": 210053238,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600112445
    },
    {
        "content": "<p>cmake is probably not</p>",
        "id": 210053249,
        "sender_full_name": "simulacrum",
        "timestamp": 1600112455
    },
    {
        "content": "<p>just x.py doesn't expect you to build (almost) nothing</p>",
        "id": 210053272,
        "sender_full_name": "simulacrum",
        "timestamp": 1600112467
    },
    {
        "content": "<p>I'd be fine with uploading it and downloading it directly</p>",
        "id": 210053301,
        "sender_full_name": "simulacrum",
        "timestamp": 1600112481
    },
    {
        "content": "<p>is it intended that we're uploading both .gz and .xz to ci-artifacts.rlo?</p>",
        "id": 210059132,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600115535
    },
    {
        "content": "<p>iirc that wasn't supposed to happen</p>",
        "id": 210059175,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600115557
    },
    {
        "content": "<p>YAY I got a full release process working locally <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 210062934,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600117355
    },
    {
        "content": "<p>there are some quirks I need to iron out, but I hope/plan to send a PR tomorrow with the changes</p>",
        "id": 210062976,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600117392
    },
    {
        "content": "<p>yeah I think so</p>",
        "id": 210066030,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119213
    },
    {
        "content": "<p>well, like, not <em>intended</em></p>",
        "id": 210066036,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119218
    },
    {
        "content": "<p>but I don't think release promotion re-archives them?</p>",
        "id": 210066079,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119242
    },
    {
        "content": "<p>/me should actually go look</p>",
        "id": 210066125,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119248
    },
    {
        "content": "<p>oh hm, no it does <a href=\"https://github.com/rust-lang/promote-release/blob/master/src/main.rs#L337\">https://github.com/rust-lang/promote-release/blob/master/src/main.rs#L337</a></p>",
        "id": 210066161,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119274
    },
    {
        "content": "<p>yeah I don't know, we shouldn't technically depend on gzip in ci-artifacts</p>",
        "id": 210066183,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119290
    },
    {
        "content": "<p>it'll save ~60% on size too probably</p>",
        "id": 210066219,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119311
    },
    {
        "content": "<p>we probably want an announcement somewhere about this and we should consider it'll probably at least double the time our release promotion takes</p>",
        "id": 210067298,
        "sender_full_name": "simulacrum",
        "timestamp": 1600119967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> In an ideal world, we'd have <code>.gz</code> and <code>.zst</code>, since the latter compresses better than <code>xz</code>, and has much better performance.</p>",
        "id": 210095623,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600152759
    },
    {
        "content": "<p>Should we look to adding zstd support to rustup so that it can be used in channels?</p>",
        "id": 210099012,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1600155631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223910\">@Daniel Silverstone</span> Far be it from me to suggest that it should be a priority, but I think it should be on the todo list. :)</p>",
        "id": 210099542,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600156024
    },
    {
        "content": "<p>It'd save decompression time, and give us the option of not putting a lot of CPU time into compressing random CI builds but spending a lot of time compressing release builds.</p>",
        "id": 210099595,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600156072
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/242791-t-infra/topic/promote-release/near/210099542\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"223910\">Daniel Silverstone</span> Far be it from me to suggest that it should be a priority, but I think it should be on the todo list. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>Looks like it is on the list to some extent -- <a href=\"https://github.com/rust-lang/rustup/issues/1858\">https://github.com/rust-lang/rustup/issues/1858</a></p>\n<p>Perhaps I should break out an \"Add support for <code>.zst</code>\" issue, and then once that's done, we can consider if there's a way to support detecting (or just expressing a preference) for which to donwload <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 210100521,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1600156725
    },
    {
        "content": "<p>That sounds reasonable. :)</p>",
        "id": 210100882,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600156931
    },
    {
        "content": "<p>well, yes, but unless we want to remove <code>.xz</code> from new builds that would increase our storage costs a lot</p>",
        "id": 210101261,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600157209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> That wouldn't be as much of a problem if rustup switched to doing a self-update <em>before</em> doing a channel update.</p>",
        "id": 210101456,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600157379
    },
    {
        "content": "<p>But in any case, it's something we could do eventually.</p>",
        "id": 210101472,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600157393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Where's the script that does the actual creation of the <code>.xz</code> for a release?</p>",
        "id": 210101555,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600157432
    },
    {
        "content": "<p>(isn't it really late there? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)</p>",
        "id": 210101582,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600157455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> somewhere in rustbuild</p>",
        "id": 210101617,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600157485
    },
    {
        "content": "<p>simulacrum would know exactly where</p>",
        "id": 210101651,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600157519
    },
    {
        "content": "<p>Quick informal side-by-side comparison on my laptop:</p>\n<ul>\n<li>gzip took 4.890s to decompress <code>rust-1.46.0-x86_64-unknown-linux-gnu.tar.gz</code></li>\n<li>xz took 9.242s to decompress <code>rust-1.46.0-x86_64-unknown-linux-gnu.tar.xz</code></li>\n<li>zstd took 0.890s to decompress <code>rust-1.46.0-x86_64-unknown-linux-gnu.tar.zst</code></li>\n</ul>",
        "id": 210102350,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600158004
    },
    {
        "content": "<p>Also, sizes:</p>\n<ul>\n<li>gzip: 220885103</li>\n<li>xz: 127200200</li>\n<li>zstd: 102771544</li>\n</ul>",
        "id": 210102531,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600158146
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/242791-t-infra/topic/promote-release/near/210101456\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> That wouldn't be as much of a problem if rustup switched to doing a self-update <em>before</em> doing a channel update.</p>\n</blockquote>\n<p>It's hard to do that because on Windows we can't actually self-update without exiting the parent process (it's a total fuster-cluck of locking on Windows).</p>\n<p>However if we got <code>.zst</code> support into the next release of rustup, it wouldn't be unreasonable to add support and perhaps drop the gzip. Dunno.  Rustup prefers <code>.xz</code> I believe, for network bandwidth reasons, so even non-updated systems likely wouldn't mind the loss of <code>.gz</code></p>",
        "id": 210103084,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1600158521
    },
    {
        "content": "<p>We could also drop the .gz from nightlies first, and keep them for a while for releases for anyone who might be using them.</p>",
        "id": 210103205,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600158619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223910\">@Daniel Silverstone</span> I'm familiar with that issue. I'm wondering, how feasible would it be for rustup on Windows to do an A/B scheme? <code>rustup.exe</code> does nothing except checking both <code>rustup-A.exe</code> and <code>rustup-B.exe</code> to see which is more up to date (if both exist) and runs whichever one is newer (or whichever one exists), and when self-updating, always write the one you aren't.</p>",
        "id": 210103409,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600158821
    },
    {
        "content": "<p>And optionally, if you're up-to-date and newer than the other one, delete the other one to save space.</p>",
        "id": 210103485,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600158886
    },
    {
        "content": "<p>(This is, in any case, getting off-topic for this topic, and should probably be moved to a topic on <code>rustup self-update</code>.)</p>",
        "id": 210103543,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600158938
    },
    {
        "content": "<p>In the meantime, I've filed <a href=\"https://github.com/rust-lang/rustup/issues/2488\">https://github.com/rust-lang/rustup/issues/2488</a> so you can link that in any proposal to add zstd compression to the channels <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 210103637,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1600158998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> the tarballs are created by src/tools/rust-installer</p>",
        "id": 210143674,
        "sender_full_name": "cuviper",
        "timestamp": 1600182961
    },
    {
        "content": "<p>I guess src/tools/build-manifest also needs to reference the new files</p>",
        "id": 210143824,
        "sender_full_name": "cuviper",
        "timestamp": 1600183017
    },
    {
        "content": "<p>opened a PR to be able to run the release process locally: <a href=\"https://github.com/rust-lang/promote-release/pull/2\">https://github.com/rust-lang/promote-release/pull/2</a></p>",
        "id": 210270765,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600266972
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> it'd also be nice to know if it actually works away from my computer</p>",
        "id": 210270798,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600266984
    },
    {
        "content": "<p>I can try and run it</p>",
        "id": 210270824,
        "sender_full_name": "simulacrum",
        "timestamp": 1600266993
    },
    {
        "content": "<p>thanks <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 210270849,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600266999
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> hm, can I access minio in the browser? Do we dump access/secret keys somewhere?</p>",
        "id": 210271647,
        "sender_full_name": "simulacrum",
        "timestamp": 1600267298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> yes, you can access it</p>",
        "id": 210271691,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600267313
    },
    {
        "content": "<p><a href=\"http://localhost:9000\">http://localhost:9000</a></p>",
        "id": 210271708,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600267319
    },
    {
        "content": "<p>access_key / secret_key</p>",
        "id": 210271739,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600267323
    },
    {
        "content": "<p>I should probably show them somewhere</p>",
        "id": 210271789,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600267329
    },
    {
        "content": "<p>maybe we can just disable the login?</p>",
        "id": 210271823,
        "sender_full_name": "simulacrum",
        "timestamp": 1600267346
    },
    {
        "content": "<p>seems to be working though</p>",
        "id": 210271839,
        "sender_full_name": "simulacrum",
        "timestamp": 1600267357
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 210271883,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600267377
    },
    {
        "content": "<p>I'll review the PR in detail later</p>",
        "id": 210271918,
        "sender_full_name": "simulacrum",
        "timestamp": 1600267394
    },
    {
        "content": "<p>this will be so useful when making changes to promote-release</p>",
        "id": 210271929,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600267397
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/242791-t-infra/topic/promote-release/near/210271823\">said</a>:</p>\n<blockquote>\n<p>maybe we can just disable the login?</p>\n</blockquote>\n<p>unfortunately we can't</p>",
        "id": 210278535,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600269978
    },
    {
        "content": "<p>I'll add documentation though</p>",
        "id": 210278546,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1600269985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> did a rough plan on how we could migrate <code>promote-release</code> away from RCS, now that we can't really use autograph anymore</p>",
        "id": 211270807,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601046698
    },
    {
        "content": "<p><a href=\"https://paper.dropbox.com/doc/Release-process-change--A8SJRA_PpB~vTHOO_HlsQKQ_Ag-jwX9rKZj4QXydvwHGMcoD\">https://paper.dropbox.com/doc/Release-process-change--A8SJRA_PpB~vTHOO_HlsQKQ_Ag-jwX9rKZj4QXydvwHGMcoD</a></p>",
        "id": 211270823,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601046702
    },
    {
        "content": "<p>the setup for storing the gpg key might be overkill <em>shrugs</em></p>",
        "id": 211270830,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601046711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> re: ecs/efs, the problem with that is IO bandwidth</p>",
        "id": 211271553,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047020
    },
    {
        "content": "<p>efs bases that on the amount of data you store, and last time I looked at it we'd get like &lt;1MB/s with the amount of data we plan to write to that filesystem</p>",
        "id": 211271619,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047052
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/7fbTXVl3j-jxT7dRmfzGbx49/2020-09-25-17-17-38.png\">2020-09-25-17-17-38.png</a> <br>\nand this is how much IO we have during a release</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/7fbTXVl3j-jxT7dRmfzGbx49/2020-09-25-17-17-38.png\" title=\"2020-09-25-17-17-38.png\"><img src=\"/user_uploads/4715/7fbTXVl3j-jxT7dRmfzGbx49/2020-09-25-17-17-38.png\"></a></div>",
        "id": 211271662,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047069
    },
    {
        "content": "<p>AWS claims throughput is high (10+ GB/s) but I don't know how true that is</p>",
        "id": 211271788,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047110
    },
    {
        "content": "<p>oh I guess you need enormous file systems for that</p>",
        "id": 211271818,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047128
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Burst to 100 MiB/s for up to 72 minutes each day, or\nDrive up to 5 MiB/s continuously\n</code></pre></div>",
        "id": 211271838,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047142
    },
    {
        "content": "<p>for 100GB</p>",
        "id": 211271859,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047153
    },
    {
        "content": "<p>okay let's just go with codebuild for now</p>",
        "id": 211271872,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047160
    },
    {
        "content": "<p>yep that's the problem</p>",
        "id": 211271889,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047172
    },
    {
        "content": "<p>yeah seems fine</p>",
        "id": 211272058,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047236
    },
    {
        "content": "<p>modulo the lambda function but I don't care <em>too</em> much about it</p>",
        "id": 211272069,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047245
    },
    {
        "content": "<p>so, the lambda function is for the dev-stable release</p>",
        "id": 211272223,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047320
    },
    {
        "content": "<p>which currently runs every hour</p>",
        "id": 211272282,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047329
    },
    {
        "content": "<p>so how expensive would spinning up the codebuild thing for ~1 minute be ?</p>",
        "id": 211272344,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047345
    },
    {
        "content": "<p>or even just maintaining a fargate tiny task that has nothing but a cronjob for now</p>",
        "id": 211272423,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047383
    },
    {
        "content": "<p><a href=\"https://aws.amazon.com/codebuild/pricing/\">https://aws.amazon.com/codebuild/pricing/</a></p>",
        "id": 211272465,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047405
    },
    {
        "content": "<p>like, I'm just worried that there's additional complexity here that doesn't seem really necessary</p>",
        "id": 211272475,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047410
    },
    {
        "content": "<p>(another alternative is github actions triggering it)</p>",
        "id": 211272487,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047420
    },
    {
        "content": "<p>lambda functions are just very opaque compared to docker containers anyone can run imo</p>",
        "id": 211272507,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047434
    },
    {
        "content": "<p>yeah I was thinking about that</p>",
        "id": 211272515,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047439
    },
    {
        "content": "<p>but realistically, presuming we can run for around a minute to detect whether we need a build, on the general.large type, it'll take $15/month by my accounting</p>",
        "id": 211272684,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047509
    },
    {
        "content": "<p>but maybe that's too optimistic</p>",
        "id": 211272730,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047527
    },
    {
        "content": "<p>I think to download the docker image and do a full clone of rust-lang/rust it might take more</p>",
        "id": 211272773,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047549
    },
    {
        "content": "<p>(granted, we could change promote-release not do to that clone for the check)</p>",
        "id": 211272847,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047569
    },
    {
        "content": "<p>I'm just against an opaque lambda that's not in our version control</p>",
        "id": 211272903,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047591
    },
    {
        "content": "<p>oh the lambda would be on version control</p>",
        "id": 211272921,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047601
    },
    {
        "content": "<p>like, I want it in promote-release repo or simpleinfra or something</p>",
        "id": 211272951,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047614
    },
    {
        "content": "<p>for example <a href=\"https://github.com/rust-lang/simpleinfra/blob/master/terraform/team-repo/lambdas/start-sync-team/index.js\">https://github.com/rust-lang/simpleinfra/blob/master/terraform/team-repo/lambdas/start-sync-team/index.js</a></p>",
        "id": 211272974,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047623
    },
    {
        "content": "<p>okay if it's <em>that</em> simple then I'm fine with it</p>",
        "id": 211273016,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047643
    },
    {
        "content": "<p>I expected a lot more</p>",
        "id": 211273023,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047648
    },
    {
        "content": "<p>this one doesn't do any checking, it just starts the codebuild</p>",
        "id": 211273190,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047708
    },
    {
        "content": "<p>I think we should try to do it via lambda, you seem confident in that approach, and we can migrate to something else if that ends up being painful</p>",
        "id": 211273306,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047750
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 211273368,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047771
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> actually, there are two variants:</p>\n<ul>\n<li>have github actions invoke a lambda when a new commit is pushed to stable</li>\n<li>run the lambda every n minutes</li>\n</ul>",
        "id": 211273456,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047802
    },
    {
        "content": "<p>I'd prefer to just run it every N, less moving parts</p>",
        "id": 211273543,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047820
    },
    {
        "content": "<p>yeah</p>",
        "id": 211273550,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047824
    },
    {
        "content": "<p>if we move the check to the lambda we could run it like every 5 or 15 minutes</p>",
        "id": 211273580,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601047839
    },
    {
        "content": "<p>(fwiw I'd be totally fine manually triggering dev-static builds too, or kicking it on triagebot, but I think it's super cheap for lambda to run quite often)</p>",
        "id": 211273644,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> hmm, is this much fallout expected from changing the channel? <a href=\"https://github.com/rust-lang/rust/pull/77336\">https://github.com/rust-lang/rust/pull/77336</a></p>",
        "id": 211688294,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415665
    },
    {
        "content": "<p>the change in that PR will only appear and affect stable</p>",
        "id": 211688335,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415687
    },
    {
        "content": "<p>and I'd love to test it before... well... stable</p>",
        "id": 211688343,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415693
    },
    {
        "content": "<p>hm what fallout are you talking about?</p>",
        "id": 211688398,
        "sender_full_name": "simulacrum",
        "timestamp": 1601415720
    },
    {
        "content": "<p>the CI failures</p>",
        "id": 211688448,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415729
    },
    {
        "content": "<p>both for the try build and the PR build</p>",
        "id": 211688472,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415747
    },
    {
        "content": "<p>I would not expect any fallout from that pr...</p>",
        "id": 211688559,
        "sender_full_name": "simulacrum",
        "timestamp": 1601415801
    },
    {
        "content": "<p>PR failure looks ... weird? maybe a rebase bug or something?</p>",
        "id": 211688717,
        "sender_full_name": "simulacrum",
        "timestamp": 1601415887
    },
    {
        "content": "<p>like, the changes in this PR shouldn't cause random ui tests to change spans</p>",
        "id": 211688749,
        "sender_full_name": "simulacrum",
        "timestamp": 1601415906
    },
    {
        "content": "<p>and the try build failed because rls is failing tests I guess?</p>",
        "id": 211688765,
        "sender_full_name": "simulacrum",
        "timestamp": 1601415918
    },
    {
        "content": "<p>which is actually a problem given we're t-1 week from release, roughyl</p>",
        "id": 211688795,
        "sender_full_name": "simulacrum",
        "timestamp": 1601415944
    },
    {
        "content": "<p>er, failing to build</p>",
        "id": 211688799,
        "sender_full_name": "simulacrum",
        "timestamp": 1601415948
    },
    {
        "content": "<p>oh yeah rls failing tests</p>",
        "id": 211688866,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415968
    },
    {
        "content": "<p>I forgot about toolstate</p>",
        "id": 211688871,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415973
    },
    {
        "content": "<p>whelp it's late here</p>",
        "id": 211688876,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601415975
    },
    {
        "content": "<p>I would try to duplicate the pr builder failure on a separate pr that just adjusts the channel, I suspect pre-existing bug</p>",
        "id": 211688910,
        "sender_full_name": "simulacrum",
        "timestamp": 1601416003
    },
    {
        "content": "<p>YAY we got a dev-static nightly release running on CodeBuild <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 211745771,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601465067
    },
    {
        "content": "<p>configured aws to run promote-release dev nightly in cron every day</p>",
        "id": 212063241,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601639065
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/simpleinfra/blob/9c0d3a445aea6ae7d3b85a29279a3b58414fac91/terraform/releases/environments.tf#L23-L25\">https://github.com/rust-lang/simpleinfra/blob/9c0d3a445aea6ae7d3b85a29279a3b58414fac91/terraform/releases/environments.tf#L23-L25</a></p>",
        "id": 212063243,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601639065
    },
    {
        "content": "<p>if tonight this works, I'm tempted to start switching all releases to go through the new setup</p>",
        "id": 212063293,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1601639103
    },
    {
        "content": "<p>how does it work currently?</p>",
        "id": 212081438,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601648845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> right now there is plan cron on the RCS server</p>",
        "id": 212542142,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602068410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> so, I'm looking into creating a build-manifest dist component</p>",
        "id": 212854350,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602264614
    },
    {
        "content": "<p>which should avoid the need to clone rust-lang/rust or invoke ./x.py at all during the release process</p>",
        "id": 212854368,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602264631
    },
    {
        "content": "<p>ok</p>",
        "id": 212854387,
        "sender_full_name": "simulacrum",
        "timestamp": 1602264650
    },
    {
        "content": "<p>seems fine</p>",
        "id": 212854397,
        "sender_full_name": "simulacrum",
        "timestamp": 1602264657
    },
    {
        "content": "<p>what do you think is the best way to only run it on the dist-x86_64-linux builder?</p>",
        "id": 212854401,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602264660
    },
    {
        "content": "<p>I see for the rust-src component we added an explicit <code>dist-src</code> config option</p>",
        "id": 212854417,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602264672
    },
    {
        "content": "<p>but that seems... overkill?</p>",
        "id": 212854427,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602264682
    },
    {
        "content": "<p>like ideally I'd change the <code>SCRIPT</code> to be <code>./x.py dist --include-defaults src/tools/build-manifest</code></p>",
        "id": 212854465,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602264719
    },
    {
        "content": "<p>yeah, so I've definitely wanted a --include-default</p>",
        "id": 212854518,
        "sender_full_name": "simulacrum",
        "timestamp": 1602264731
    },
    {
        "content": "<p>but you can also just <code>x.py dist &amp;&amp; x.py dist src/tools/build-manifest</code></p>",
        "id": 212854536,
        "sender_full_name": "simulacrum",
        "timestamp": 1602264744
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ok implemented <code>--include-default-paths</code></p>",
        "id": 212856871,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266102
    },
    {
        "content": "<p>should I remove <code>DIST_SRC=1</code> and migrate it to that?</p>",
        "id": 212856889,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266111
    },
    {
        "content": "<p>I think that makes sense</p>",
        "id": 212856935,
        "sender_full_name": "simulacrum",
        "timestamp": 1602266139
    },
    {
        "content": "<p>we'll want to ping <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> at least -- I suspect distros don't use it though</p>",
        "id": 212856962,
        "sender_full_name": "simulacrum",
        "timestamp": 1602266151
    },
    {
        "content": "<p>the only disadvantage I could think of is that <code>./x.py dist</code> will not build it anymore</p>",
        "id": 212856964,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266153
    },
    {
        "content": "<p>I use <code>./x.py install</code>, and I do want <code>rust-src</code> for IDE use</p>",
        "id": 212857240,
        "sender_full_name": "cuviper",
        "timestamp": 1602266289
    },
    {
        "content": "<p>(it's a little sad that <code>install</code> bothers to create dist tarballs, but that's another story)</p>",
        "id": 212857280,
        "sender_full_name": "cuviper",
        "timestamp": 1602266320
    },
    {
        "content": "<p>wait I <em>think</em> this is for the other src component</p>",
        "id": 212857440,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266416
    },
    {
        "content": "<p>anyway seems fine to just make a note in the bootstrap changelog, we don't need to bump the version though</p>",
        "id": 212857464,
        "sender_full_name": "simulacrum",
        "timestamp": 1602266432
    },
    {
        "content": "<p>there's <code>rust-src</code> for standard library sources, and <code>rustc-VERSION-src</code> for building the compiler, but I think they're in the same bootstrap target</p>",
        "id": 212857532,
        "sender_full_name": "cuviper",
        "timestamp": 1602266468
    },
    {
        "content": "<p>ok this is a mess</p>",
        "id": 212857589,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266492
    },
    {
        "content": "<p><code>rust-src</code> is created with <code>./x.py dist src</code>, and completly ignored <code>DIST_SRC</code></p>",
        "id": 212857698,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266534
    },
    {
        "content": "<p><code>rustc-VERSION-src</code> is <em>also</em> created with <code>./x.py dist src</code>, but followed <code>DIST_SRC</code></p>",
        "id": 212857735,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266556
    },
    {
        "content": "<p><code>rust-src</code> is a manifest component for rustup, but I don't think <code>rustc-VERSION-src</code> is</p>",
        "id": 212857738,
        "sender_full_name": "cuviper",
        "timestamp": 1602266557
    },
    {
        "content": "<p>:/</p>",
        "id": 212857739,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266557
    },
    {
        "content": "<p>ok I'll avoid removing <code>DIST_SRC</code> for now</p>",
        "id": 212858145,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266804
    },
    {
        "content": "<p>but I kinda expect to revisit this soonish</p>",
        "id": 212858167,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602266817
    },
    {
        "content": "<p>ok, got some partial great news! with the parallelism I implemented for hashing and signing in <code>promote-release</code>, the release process got from 40 minutes to 33 minutes!</p>",
        "id": 213014086,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602493790
    },
    {
        "content": "<p>stopping cloning the git repository and building promote-release <a href=\"https://github.com/rust-lang/rust/pull/77762\">https://github.com/rust-lang/rust/pull/77762</a> should remove another 9 minutes</p>",
        "id": 213014411,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602493999
    },
    {
        "content": "<p>and then, when we have practically no more single thread task, we can just throw cores at the problem and see how good it performs with, dunno, a 8 core VM instead of a 2 core VM</p>",
        "id": 213014461,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602494032
    },
    {
        "content": "<p>That sounds great!</p>",
        "id": 213016014,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1602494963
    },
    {
        "content": "<p>actually, looking at the CPU graph it looks like we can speed it up by increasing the internal parallelism</p>",
        "id": 213016401,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602495180
    },
    {
        "content": "<p>(right now we run a rayon pool of <code>num_cpus()</code>, but since there is IO involved in all parallel tasks we can add a couple more threads)</p>",
        "id": 213016436,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602495205
    },
    {
        "content": "<p>It'll need careful tuning there because IO isn't free so issuing even more of it might result in slowdown instead of speedup if it fights.</p>",
        "id": 213018895,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1602496701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223910\">@Daniel Silverstone</span> yeah I plan to set an environment variable and try tweaking it</p>",
        "id": 213019905,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1602497422
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"223910\">Daniel Silverstone</span> <a href=\"#narrow/stream/242791-t-infra/topic/promote-release/near/213018895\">said</a>:</p>\n<blockquote>\n<p>It'll need careful tuning there because IO isn't free so issuing even more of it might result in slowdown instead of speedup if it fights.</p>\n</blockquote>\n<p>True, but most modern storage hardware craves more requests at once. :)</p>",
        "id": 213085910,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1602536345
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/242791-t-infra/topic/promote-release/near/213085910\">said</a>:</p>\n<blockquote>\n<p>True, but most modern storage hardware craves more requests at once. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>Aye, though in my experience clouds can sometimes act counterintuitively due to how they scheduled IO among guests.  Either way I'm sure Pietro will work out the optimal approach for our environment.</p>",
        "id": 213119354,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1602573878
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2943\">@T-infra</span> switched nightly releases to run on the new codebuild setup!</p>",
        "id": 213895929,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603187318
    },
    {
        "content": "<p>I tested downloading the latest nightly from a build done on <a href=\"http://dev-static.rust-lang.org\">dev-static.rust-lang.org</a> and everything seems to work</p>",
        "id": 213895958,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603187342
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2943\">@T-infra</span> switched beta releases to run on the new codebuild setup!</p>",
        "id": 214555918,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603707539
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm wondering, should I update the release process docs to use the new <code>promote-release</code>?</p>",
        "id": 214876717,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603908475
    },
    {
        "content": "<p>i.e. should we use it for 1.48 stable?</p>",
        "id": 214876730,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603908481
    },
    {
        "content": "<p>I think we should</p>",
        "id": 214877907,
        "sender_full_name": "simulacrum",
        "timestamp": 1603909077
    },
    {
        "content": "<p>Either 1.48 or 1.50 will be the first release I think</p>",
        "id": 214877966,
        "sender_full_name": "simulacrum",
        "timestamp": 1603909091
    },
    {
        "content": "<p>I don't want to do it on December 31st</p>",
        "id": 214877984,
        "sender_full_name": "simulacrum",
        "timestamp": 1603909101
    },
    {
        "content": "<p>then 1.48 it is</p>",
        "id": 214878533,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1603909404
    },
    {
        "content": "<p>powering down RCS</p>",
        "id": 215619241,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604513016
    },
    {
        "content": "<p>so, recompressing over 2 cores took 90 minutes</p>",
        "id": 215844088,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604668764
    },
    {
        "content": "<p>once the release is finished I'll try doing a build with 8 cores instead of 2</p>",
        "id": 215844336,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604668909
    },
    {
        "content": "<p>(unfortunately the next step is straight from 8 cores to 72 cores, which might be a bit excessive <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)</p>",
        "id": 215844427,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604668938
    },
    {
        "content": "<p>bumped the builder to BUILD_GENERAL1_LARGE (8 cores), will do another nightly dev release to see how it performs</p>",
        "id": 215848503,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604671033
    },
    {
        "content": "<p>the one with recompression over 2 cores took 2 hours to complete the full release</p>",
        "id": 215848563,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604671062
    },
    {
        "content": "<p>ok, with 8 cores it took 42 minutes to do a full release with recompression</p>",
        "id": 215857877,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604675087
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I think it's more than acceptable if that also means removing <code>.gz</code> from ci2</p>",
        "id": 215857995,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604675142
    },
    {
        "content": "<p>seems fine yeah</p>",
        "id": 215858416,
        "sender_full_name": "simulacrum",
        "timestamp": 1604675337
    },
    {
        "content": "<p>releases are around an hour right now</p>",
        "id": 215858436,
        "sender_full_name": "simulacrum",
        "timestamp": 1604675342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> one idea might be that stable releases, which we actually wait for, might be a case of throwing 72 cores at it</p>",
        "id": 215858488,
        "sender_full_name": "simulacrum",
        "timestamp": 1604675370
    },
    {
        "content": "<p>but for nightlies/betas, we could just do 8 (or even 2)</p>",
        "id": 215858504,
        "sender_full_name": "simulacrum",
        "timestamp": 1604675379
    },
    {
        "content": "<p>since realistically timing matters much less there</p>",
        "id": 215858516,
        "sender_full_name": "simulacrum",
        "timestamp": 1604675387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I guess we can</p>",
        "id": 215860597,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604676282
    },
    {
        "content": "<p>I wouldn't do that yet though -- too complicated</p>",
        "id": 215860629,
        "sender_full_name": "simulacrum",
        "timestamp": 1604676293
    },
    {
        "content": "<p>it's not actually complicated, we could set an override when we start the release in <code>start-release.py</code></p>",
        "id": 215860684,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604676313
    },
    {
        "content": "<p>but I don't think it's worth throwing that many cores to shrink 20 minutes into dunno, 5?</p>",
        "id": 215860758,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604676350
    },
    {
        "content": "<p>especially as we <em>might</em> reach into IO bottlenecks if we start doing 72 recompressions in parallel</p>",
        "id": 215860872,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604676387
    },
    {
        "content": "<p>wait, 20 minutes?</p>",
        "id": 215869268,
        "sender_full_name": "simulacrum",
        "timestamp": 1604679952
    },
    {
        "content": "<p>You said 42?</p>",
        "id": 215869285,
        "sender_full_name": "simulacrum",
        "timestamp": 1604679960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> recompression is 20 minutes, the whole release process is 42 minutes</p>",
        "id": 215870198,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604680359
    },
    {
        "content": "<p>aha, ok</p>",
        "id": 215870213,
        "sender_full_name": "simulacrum",
        "timestamp": 1604680365
    },
    {
        "content": "<p>yeah then definitely not worth it</p>",
        "id": 215870226,
        "sender_full_name": "simulacrum",
        "timestamp": 1604680371
    },
    {
        "content": "<p>reverted the builders to be of the smaller size until we actually start recompressing stuff</p>",
        "id": 215877578,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604683599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Is there a chance you might be able to do a similar test run at some point to benchmark compression with zstd?</p>",
        "id": 215881932,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1604685677
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223910\">@Daniel Silverstone</span> from xz to zstd?</p>",
        "id": 215882147,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1604685792
    }
]