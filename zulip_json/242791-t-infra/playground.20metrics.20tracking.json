[
    {
        "content": "<p>I'm looking at adding some basic prometheus metrics to the playground to at least get the scope of the recent \"timeouts when building\" issue. The most basic thing I can think of is something like</p>\n<div class=\"codehilite\"><pre><span></span><code>requests { endpoint: &quot;execute|compile|format...&quot;, outcome: &quot;success|soft-timeout|hard-timeout|...&quot; }\n</code></pre></div>\n<p>However, there's a lot of richer information available on a per endpoint basis. For example, many endpoints have a <code>channel: \"stable|beta|nightly\"</code> and some have very specific things like <code>asm_flavor: \"intel|att\"</code>. Based on my one hour of working, it appears that you can't have \"missing\" labels on a metric, so I'm thinking of having something like</p>\n<div class=\"codehilite\"><pre><span></span><code>requests { endpoint, outcome }\nexecute_requests { outcome, channel, ... }\nformat_requests { outcome, ... }\n</code></pre></div>\n<p>Does that metrics design make sense?</p>\n<p>/cc <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> (<span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> said you might have some useful experience in the general metrics area)</p>",
        "id": 236831219,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619788171
    },
    {
        "content": "<p>My worry is that an execute request will result in two metrics being incremented, kind of double-counting. I'm not sure if that's a problem or not.</p>",
        "id": 236831374,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619788233
    },
    {
        "content": "<p>that seems reasonable, there's no problem with two different metrics as long as <em>you</em> know the difference. We count builds twice so we can show both \"number of builds\" and \"percentage failed\" I think: <a href=\"/user_uploads/4715/AGx5bz9D8KtcEEW0JL6Gcrgm/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/AGx5bz9D8KtcEEW0JL6Gcrgm/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/AGx5bz9D8KtcEEW0JL6Gcrgm/image.png\"></a></div>",
        "id": 236832135,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619788584
    },
    {
        "content": "<p>I think it should be possible to just use a single metric</p>",
        "id": 236832554,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1619788815
    },
    {
        "content": "<p>like <code>requests { endpoint, outcome, channel, asm_flavor, edition }</code>...</p>",
        "id": 236832630,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1619788850
    },
    {
        "content": "<p>and then for the ones that aren't relevant either put the default or an empty string</p>",
        "id": 236832716,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1619788877
    },
    {
        "content": "<p>possible, sure. Is it a good idea?</p>",
        "id": 236834876,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619789819
    },
    {
        "content": "<p>I <em>think</em> this is the full set of labels:</p>\n<div class=\"codehilite\"><pre><span></span><code>endpoint\noutcome\n\nAssemblyFlavor\nDemangleAssembly\nProcessAssembly\nCompileTarget\nChannel\nMode\nEdition\nCrateType\nLibraryType\ntests?\nbacktrace?\n</code></pre></div>",
        "id": 236835422,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619790032
    },
    {
        "content": "<blockquote>\n<p>A label with an empty label value is considered equivalent to a label that does not exist.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://prometheus.io/docs/concepts/data_model/\">source</a></li>\n</ul>",
        "id": 236836043,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619790298
    },
    {
        "content": "<p>ok dokie then; guess I'll rewrite my code again ;-)</p>",
        "id": 236836413,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619790441
    },
    {
        "content": "<p>Seems plausible, next to try something with a missing field:</p>\n<div class=\"codehilite\"><pre><span></span><code># HELP playground_requests_total Number of requests made\n# TYPE playground_requests_total counter\nplayground_requests_total{channel=&quot;Beta&quot;,edition=&quot;Rust2018&quot;,endpoint=&quot;Execute&quot;,mode=&quot;Debug&quot;,outcome=&quot;ErrorTimeoutSoft&quot;} 1\nplayground_requests_total{channel=&quot;Beta&quot;,edition=&quot;Rust2018&quot;,endpoint=&quot;Execute&quot;,mode=&quot;Debug&quot;,outcome=&quot;ErrorUserCode&quot;} 1\n</code></pre></div>",
        "id": 236844361,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619793552
    },
    {
        "content": "<p>Example:</p>\n<div class=\"codehilite\"><pre><span></span><code>playground_requests_total{backtrace=&quot;&quot;,channel=&quot;&quot;,crate_type=&quot;&quot;,edition=&quot;Rust2018&quot;,endpoint=&quot;Format&quot;,mode=&quot;&quot;,outcome=&quot;Success&quot;,tests=&quot;&quot;} 1\nplayground_requests_total{backtrace=&quot;false&quot;,channel=&quot;Beta&quot;,crate_type=&quot;Binary&quot;,edition=&quot;Rust2018&quot;,endpoint=&quot;Execute&quot;,mode=&quot;Debug&quot;,outcome=&quot;Success&quot;,tests=&quot;false&quot;} 1\n</code></pre></div>",
        "id": 236848973,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619795122
    },
    {
        "content": "<p>another thing you should probably consider is adding auth to the metrics endpoint</p>",
        "id": 236854137,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1619796702
    },
    {
        "content": "<p>hm, why?</p>",
        "id": 236854225,
        "sender_full_name": "simulacrum",
        "timestamp": 1619796729
    },
    {
        "content": "<p>I've been adding it lately, mostly to prevent others to scrape the metrics</p>",
        "id": 236854333,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1619796775
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20metrics.20tracking/near/236854137\">said</a>:</p>\n<blockquote>\n<p>another thing you should probably consider is adding auth to the metrics endpoint</p>\n</blockquote>\n<p>just requiring a <code>Authorization: Bearer {random_secret}</code> with the secret configured with an env var should be enough if we want to do so</p>",
        "id": 236854457,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1619796814
    },
    {
        "content": "<p>Yeah I mean, I understand the mechanics, but it seems like an unnecessary complication. I guess not opposed.</p>",
        "id": 236854506,
        "sender_full_name": "simulacrum",
        "timestamp": 1619796834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20metrics.20tracking/near/236854333\">said</a>:</p>\n<blockquote>\n<p>to prevent others to scrape the metrics</p>\n</blockquote>\n<p>I missed it: why this is desirable?</p>",
        "id": 236863810,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1619800515
    },
    {
        "content": "<p>OK, merging the commit to add metrics. This will also restart the playground backend server less frequently. Previously, I always restarted it every time the cronjob ran, now only when the md5sum changes.</p>",
        "id": 237707921,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620326135
    },
    {
        "content": "<p>How often was that?</p>",
        "id": 237708942,
        "sender_full_name": "simulacrum",
        "timestamp": 1620326532
    },
    {
        "content": "<p>On my instance, every hour (at :43 past)</p>",
        "id": 237710574,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620327210
    },
    {
        "content": "<p>And similar for official:</p>\n<div class=\"codehilite\"><pre><span></span><code>Description = Update the playground every hour\n\n[Timer]\nOnBootSec = 10min\nOnUnitActiveSec = 1h\n\n[Install]\nWantedBy = timers.target\n</code></pre></div>",
        "id": 237710797,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620327309
    },
    {
        "content": "<p>ah ok</p>",
        "id": 237710842,
        "sender_full_name": "simulacrum",
        "timestamp": 1620327322
    },
    {
        "content": "<p>Basically wanted to reduce the possibility of \"lost\" metrics</p>",
        "id": 237710911,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620327351
    },
    {
        "content": "<p>And they are live now</p>",
        "id": 237730732,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620335594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> any feelings on if we should bang it into our Prometheus instance right away or do something (what?) first?</p>",
        "id": 237746228,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620343961
    },
    {
        "content": "<p>I want to check-in with Pietro tomorrow morning on the upgrade so we don't race the two patches but otherwise am happy to deploy it</p>",
        "id": 237746294,
        "sender_full_name": "simulacrum",
        "timestamp": 1620344006
    },
    {
        "content": "<p>Ah yeah, forgot that update was happening. I might set up my own instance to monitor the i32 instance too.</p>",
        "id": 237746786,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620344346
    },
    {
        "content": "<p>Pretty graphs are addictive</p>\n<p><a href=\"/user_uploads/4715/ubvJ6wGHIsT2NCSvuCMLm7c5/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ubvJ6wGHIsT2NCSvuCMLm7c5/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/ubvJ6wGHIsT2NCSvuCMLm7c5/image.png\"></a></div>",
        "id": 237835121,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620399022
    },
    {
        "content": "<p>I love that about 1/2 of the requests result in the compiler saying \"nah\"</p>",
        "id": 237836123,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620399401
    },
    {
        "content": "<p>(or the user program erroring in some way)</p>",
        "id": 237836151,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620399415
    },
    {
        "content": "<p>uh did we configure that already with our prometheus instance?</p>",
        "id": 237837248,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620399791
    },
    {
        "content": "<p>no</p>",
        "id": 237837735,
        "sender_full_name": "simulacrum",
        "timestamp": 1620399986
    },
    {
        "content": "<p>Jake's running it on some other server, I think</p>",
        "id": 237837768,
        "sender_full_name": "simulacrum",
        "timestamp": 1620399999
    },
    {
        "content": "<p>hmm, why?</p>",
        "id": 237842073,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620401505
    },
    {
        "content": "<p>we shouldn't really have separate monitoring systems</p>",
        "id": 237842094,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620401515
    },
    {
        "content": "<blockquote>\n<p>I want to check-in with Pietro tomorrow morning on the upgrade so we don't race the two patches but otherwise am happy to deploy it</p>\n</blockquote>",
        "id": 237850829,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620404643
    },
    {
        "content": "<blockquote>\n<p>I might set up my own instance to monitor the i32 instance too.</p>\n</blockquote>",
        "id": 237850921,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620404675
    },
    {
        "content": "<p>yeah I guess I should explicitly say - <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> should we be blocked on this for the upgrade? I don't know what the status there is</p>",
        "id": 237850979,
        "sender_full_name": "simulacrum",
        "timestamp": 1620404706
    },
    {
        "content": "<p>So I’m also scraping the real metrics for now until they are added in the real place</p>",
        "id": 237851004,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620404718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20metrics.20tracking/near/237850979\">said</a>:</p>\n<blockquote>\n<p>yeah I guess I should explicitly say - <span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> should we be blocked on this for the upgrade? I don't know what the status there is</p>\n</blockquote>\n<p>hmm, what upgrade? the version upgrade?</p>",
        "id": 237851041,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620404736
    },
    {
        "content": "<p>there should be no need to block on that</p>",
        "id": 237851052,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620404741
    },
    {
        "content": "<p>ok, so I can go ahead and enable it then?</p>",
        "id": 237851446,
        "sender_full_name": "simulacrum",
        "timestamp": 1620404944
    },
    {
        "content": "<p>yep</p>",
        "id": 237851569,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620405002
    },
    {
        "content": "<p>sounds good</p>",
        "id": 237851622,
        "sender_full_name": "simulacrum",
        "timestamp": 1620405008
    },
    {
        "content": "<p>Ping me when it starts so I know to turn mine off, please.</p>",
        "id": 237851795,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620405085
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> alright we're monitoring I think, you should be able to login and add it</p>",
        "id": 237852770,
        "sender_full_name": "simulacrum",
        "timestamp": 1620405479
    },
    {
        "content": "<p>Looking forward to that Grafana update already <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 237869489,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620412225
    },
    {
        "content": "<p>Any idea why zooming in on a time range says that there are no data points? <a href=\"https://grafana.rust-lang.org/d/BoFKl4CGk/timeouts?orgId=1&amp;from=1620418487584&amp;to=1620419387584\">https://grafana.rust-lang.org/d/BoFKl4CGk/timeouts?orgId=1&amp;from=1620418487584&amp;to=1620419387584</a></p>",
        "id": 237885727,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620419419
    },
    {
        "content": "<p>it's showing data?</p>",
        "id": 237886359,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620419705
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> also, could you rename the dashboards to \"playground $foo\"? otherwise on the recently viewed dashboards they're just \"health\"</p>",
        "id": 237886674,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620419875
    },
    {
        "content": "<p>Then what's the point of folders...</p>",
        "id": 237889206,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620421191
    },
    {
        "content": "<p>organization in the full list</p>",
        "id": 237889312,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620421220
    },
    {
        "content": "<p>I agree it's annoying that the folder name is not displayed in the \"recent dashboards\"</p>",
        "id": 237889344,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620421236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/242791-t-infra/topic/playground.20metrics.20tracking/near/237886359\">said</a>:</p>\n<blockquote>\n<p>it's showing data?</p>\n</blockquote>\n<p><a href=\"/user_uploads/4715/xaMmHAuckYRyzr2v1H6MPO_n/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/xaMmHAuckYRyzr2v1H6MPO_n/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/xaMmHAuckYRyzr2v1H6MPO_n/image.png\"></a></div>",
        "id": 237889469,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620421293
    },
    {
        "content": "<p>oh when zooming?</p>",
        "id": 237889572,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1620421329
    },
    {
        "content": "<blockquote>\n<p>Any idea why zooming in on a time range says that there are no data points?</p>\n</blockquote>",
        "id": 237912791,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620436818
    },
    {
        "content": "<p>Did you set up the metric scrape period in grafana data source settings a right? Should be largest of the scrape frequencies between all metric targets.</p>",
        "id": 237941130,
        "sender_full_name": "nagisa",
        "timestamp": 1620465526
    },
    {
        "content": "<p>Another thing is to use <code>rate(metric[$__rate_interval])</code> instead of just $__interval. (Same for other rate-like operations)</p>",
        "id": 237941246,
        "sender_full_name": "nagisa",
        "timestamp": 1620465651
    },
    {
        "content": "<p>Can't see the dashboard so can't really inspect what the exact cause is but these do come up with people making dashboards all the time.</p>",
        "id": 237941478,
        "sender_full_name": "nagisa",
        "timestamp": 1620465890
    },
    {
        "content": "<p>Yep, I expect that those are the likely culprits, as I ran into them when doing my local setup.</p>\n<p>However, <strong>simulacrum</strong> set up the scraping, so I'm not sure what the interval is. Also <strong>Pietro Albini</strong> hasn't had an opportunity to upgrade to Grafana 7.x, so I don't think that we have access to <code>$__rate_interval</code> yet (at least it doesn't show up in the autocomplete)</p>",
        "id": 237974465,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620497451
    },
    {
        "content": "<p>And now Grafana 8 has been released — good thing we held off the update! :-)</p>",
        "id": 241983845,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1623185292
    }
]