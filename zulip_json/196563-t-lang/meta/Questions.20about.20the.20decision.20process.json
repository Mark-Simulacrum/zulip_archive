[
    {
        "content": "<p>Hi everyone. As mentioned in <a href=\"#narrow/stream/224082-triagebot/topic/Implementing.20new.20decision-making.20triagebot.20process\">https://rust-lang.zulipchat.com/#narrow/stream/224082-triagebot/topic/Implementing.20new.20decision-making.20triagebot.20process</a> I'm willing to implement the decision process in the triagebot, but I have some questions detailed in <a href=\"https://hackmd.io/FygRGdIDQn2FlRYrib7H2w\">this document</a> about the process.</p>",
        "id": 270304511,
        "sender_full_name": "Abraham Toriz",
        "timestamp": 1643757097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm told you're the person to talk to. Can you guide me in the details of the decision process?</p>",
        "id": 270761530,
        "sender_full_name": "Abraham Toriz",
        "timestamp": 1644002881
    },
    {
        "content": "<p>As I noted in the other thread <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> or <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  may be good to poke about this, I can try to fill in some blanks though</p>",
        "id": 270761670,
        "sender_full_name": "simulacrum",
        "timestamp": 1644002949
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"472626\">@Abraham Toriz</span> I'm happy to answer some of the questions.</p>",
        "id": 270783991,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644015184
    },
    {
        "content": "<p>Filling in some details in the document.</p>",
        "id": 270785090,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644015916
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"472626\">@Abraham Toriz</span> I think I've responded to all the questions now.</p>",
        "id": 270786061,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644016658
    },
    {
        "content": "<p>just to understand a little bit more about the process (because the reference doesn't talk about dispositions other than merge/close/stablize). What is the use case for arbitrary dispositions? What can the bot do with them other than record them in the state?</p>",
        "id": 270798242,
        "sender_full_name": "Abraham Toriz",
        "timestamp": 1644027248
    },
    {
        "content": "<p>as for using the comment with the table as the source of the state it worries me that it ties the functioning of the bot to a matter of representation that cannot be modified without breaking all ongoing decision processes.</p>\n<p>It definitely can be parsed (I'm very not exited about the idea), but if later a better representation is found for us humans to understand how the process is going it will be impossible to change it.</p>",
        "id": 270798429,
        "sender_full_name": "Abraham Toriz",
        "timestamp": 1644027497
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"472626\">Abraham Toriz</span> <a href=\"#narrow/stream/196563-t-lang.2Fmeta/topic/Questions.20about.20the.20decision.20process/near/270798429\">said</a>:</p>\n<blockquote>\n<p>as for using the comment with the table as the source of the state it worries me that it ties the functioning of the bot to a matter of representation that cannot be modified without breaking all ongoing decision processes.</p>\n<p>It definitely can be parsed (I'm very not exited about the idea), but if later a better representation is found for us humans to understand how the process is going it will be impossible to change it.</p>\n</blockquote>\n<p>I understand, and that <em>is</em> a serious tradeoff. And to be clear, this is <em>not in any way</em> a requirement.</p>",
        "id": 270800649,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030424
    },
    {
        "content": "<p>This comes from having been burned in the past by rfcbot's internal state getting out of sync with the state of a GitHub issue.</p>",
        "id": 270800662,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030441
    },
    {
        "content": "<p>So it'd be nice to have that never happen.</p>",
        "id": 270800668,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030450
    },
    {
        "content": "<p>One way to fix that would be to always get the state <em>from</em> GitHub and have no internal state, but I understand how that'd also have problems and tradeoffs.</p>",
        "id": 270800684,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030470
    },
    {
        "content": "<p>Another approach would be to re-parse the whole GitHub comment thread, and <em>reconstruct</em> the state based on the commands people issued.</p>",
        "id": 270800733,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030508
    },
    {
        "content": "<p>A third approach would be to keep state in a machine-parsable form inside the rustbot GitHub comment.</p>",
        "id": 270800749,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030546
    },
    {
        "content": "<p>the machine-parseable form inside the github comment is basically how triagebot stores ~all state today</p>",
        "id": 270800770,
        "sender_full_name": "simulacrum",
        "timestamp": 1644030585
    },
    {
        "content": "<p>And a fourth approach would be to keep internal state, but have a <code>@rustbot reset-somethingorother</code> command that resyncs based on all the commands in the thread, so that people can blow away the internal state if it's wrong.</p>",
        "id": 270800774,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/196563-t-lang.2Fmeta/topic/Questions.20about.20the.20decision.20process/near/270800770\">said</a>:</p>\n<blockquote>\n<p>the machine-parseable form inside the github comment is basically how triagebot stores ~all state today</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 270800778,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030600
    },
    {
        "content": "<p>Good to know, that's encouraging.</p>",
        "id": 270800818,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030604
    },
    {
        "content": "<p>That does seem in every way better than parsing the human-readable table.</p>",
        "id": 270800825,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030617
    },
    {
        "content": "<p>but it comes under the understanding that the comment itself isn't edited (i.e., we re-create the user-visible text from that internal state)</p>",
        "id": 270800826,
        "sender_full_name": "simulacrum",
        "timestamp": 1644030621
    },
    {
        "content": "<p>obviously it's just JSON and so easy enough to edit if needed.</p>",
        "id": 270800833,
        "sender_full_name": "simulacrum",
        "timestamp": 1644030634
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/196563-t-lang.2Fmeta/topic/Questions.20about.20the.20decision.20process/near/270800826\">said</a>:</p>\n<blockquote>\n<p>but it comes under the understanding that the comment itself isn't edited (i.e., we re-create the user-visible text from that internal state)</p>\n</blockquote>\n<p>I could live with that, if the comment text had a comment at the top saying \"don't edit the human-readable text, it's recreated and overwritten from the state below\".</p>",
        "id": 270800842,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030652
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>&lt;!-- TRIAGEBOT_START --&gt;\n\n&lt;!-- TRIAGEBOT_ASSIGN_START --&gt;\nThis issue has been assigned to @sivadeilra via [this comment](https://github.com/rust-lang/rust/issues/81357#issuecomment-773386879).\n&lt;!-- TRIAGEBOT_ASSIGN_DATA_START$${&quot;user&quot;:&quot;sivadeilra&quot;}$$TRIAGEBOT_ASSIGN_DATA_END --&gt;\n\n&lt;!-- TRIAGEBOT_ASSIGN_END --&gt;\n&lt;!-- TRIAGEBOT_END --&gt;\n</code></pre></div>\n<p>This is an example of what this looks like today</p>",
        "id": 270800902,
        "sender_full_name": "simulacrum",
        "timestamp": 1644030736
    },
    {
        "content": "<p>from <a href=\"https://github.com/rust-lang/rust/issues/81357\">https://github.com/rust-lang/rust/issues/81357</a></p>",
        "id": 270800904,
        "sender_full_name": "simulacrum",
        "timestamp": 1644030744
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 270800912,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030757
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"472626\">Abraham Toriz</span> <a href=\"#narrow/stream/196563-t-lang.2Fmeta/topic/Questions.20about.20the.20decision.20process/near/270798242\">said</a>:</p>\n<blockquote>\n<p>just to understand a little bit more about the process (because the reference doesn't talk about dispositions other than merge/close/stablize). What is the use case for arbitrary dispositions? What can the bot do with them other than record them in the state?</p>\n</blockquote>\n<p>At least for now, I don't expect the bot to be able to do much with custom dispositions other than to record them and determine consensus. (Also, for now I don't expect the bot to be able to do much with <em>non-custom</em> dispositions other than to record them and determine consensus.)</p>",
        "id": 270800954,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030814
    },
    {
        "content": "<p>There are a few use cases:</p>",
        "id": 270800960,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030822
    },
    {
        "content": "<p>First, we might have an irreversible action that isn't \"stabilize\". For instance, \"document-and-close\" could be irreversible, if the documentation commits to a semantic change that we can't roll back.</p>",
        "id": 270801020,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030883
    },
    {
        "content": "<p>And it's helpful to have the name be clear on what people are agreeing to.</p>",
        "id": 270801038,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030904
    },
    {
        "content": "<p>Second, people may disagree.</p>",
        "id": 270801040,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030909
    },
    {
        "content": "<p>It's helpful to be able to track multiple dispositions, for instance, <code>merge</code> vs <code>use-alternate-approach</code> vs <code>close</code>.</p>",
        "id": 270801046,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030934
    },
    {
        "content": "<p>Suppose we have a rustbot decision today that's proposing to merge a PR implementing a solution for some problem.</p>",
        "id": 270801099,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030986
    },
    {
        "content": "<p>I might disagree with the PR, because I don't think it's the right approach. But I might think we <em>should</em> solve the problem, just in a different way.</p>",
        "id": 270801105,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030999
    },
    {
        "content": "<p>Someone else might disagree with the PR because they think the problem itself isn't something we should change the language to accommodate.</p>",
        "id": 270801112,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644031014
    },
    {
        "content": "<p>Those two things shouldn't get lumped together.</p>",
        "id": 270801113,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644031022
    },
    {
        "content": "<p>rfcbot, today, tracks <em>one</em> decision, where you can either agree, abstain/disagree without blocking, or file a blocking concern.</p>",
        "id": 270801137,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644031076
    },
    {
        "content": "<p>One fundamental goal of this new decision process is that we always make forward progress.</p>",
        "id": 270801179,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644031091
    },
    {
        "content": "<p>When a decision is started, we work towards a consensus, and we don't have to restart or modify the decision in order to propose and work towards a different outcome.</p>",
        "id": 270801188,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644031131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"472626\">@Abraham Toriz</span> Does that make sense?</p>",
        "id": 270801194,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644031154
    },
    {
        "content": "<p>Thanks both for your responses. I did need to understand the possible scenarios that <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> proposed. As for storing the state, the machine-readable format that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> mentions seems reasonable and if it is already implemented somewhere then it will be easier to use. I'll modify my proposed solution based on this new knowledge and will be writing here if something else comes up.</p>\n<p>Muchas gracias!</p>",
        "id": 271169260,
        "sender_full_name": "Abraham Toriz",
        "timestamp": 1644344378
    },
    {
        "content": "<p><a href=\"http://interactions.rs\">interactions.rs</a> is the file to look for</p>",
        "id": 271169297,
        "sender_full_name": "simulacrum",
        "timestamp": 1644344395
    },
    {
        "content": "<p>there's a note command PR up now that will potentially help</p>",
        "id": 271169364,
        "sender_full_name": "simulacrum",
        "timestamp": 1644344407
    },
    {
        "content": "<p>Hey folks who are looking into this -- would any of you be interested in discussing with <a href=\"https://jlcanovas.es/\">Javier Izquierdo</a>, an academic researcher looking into open source governance and discussion processes? They are currently looking at the existing rfcbot, but I imagine that they may at some point have questions and also useful thoughts on what kinds of metrics or other data we might look at.</p>",
        "id": 273663906,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646150697
    },
    {
        "content": "<p>See also <a class=\"stream-topic\" data-stream-id=\"242791\" href=\"/#narrow/stream/242791-t-infra/topic/rfcbot.20maintenance\">#t-infra &gt; rfcbot maintenance</a></p>",
        "id": 273663926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1646150706
    }
]