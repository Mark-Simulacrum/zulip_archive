[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span> </p>\n<p><a href=\"/user_uploads/4715/lJ8Vyfj-qAJ3r55s060_YPIQ/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/lJ8Vyfj-qAJ3r55s060_YPIQ/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/lJ8Vyfj-qAJ3r55s060_YPIQ/image.png\"></a></div><p>I was playing around with <a href=\"https://github.com/wolfpld/tracy\">tracy</a> recently,  it's surprisingly good :) so I hacked this on rustc (basically duplicating all the <code>session.time</code> and <code>profiler.generic_activity</code> calls with some macro hackery via <a href=\"https://github.com/gw3583/tracy-rs\">this binding</a> used in Firefox's webrender). While it has a focus on profiling for video games (with frames and screenshots), it works for regular programs, and there are videos showing the new features for every release if you want to see what it's capable of. </p>\n<p>I don't build rustc on windows, so this screenshot here was under WSL. On a real unix (or maybe WSL2) there'd be more information related to system threads, when they're waiting, or being migrated to another core and so on. </p>\n<p>However, since the latest release, you can also get system call stack sampling (on windows, coming someday to linux), so here are some examples where I have memory profiling, source code and assembly, sampling etc <a href=\"https://usercontent.irccloud-cdn.com/file/OCzGkigp/image.png\">here</a> and also <a href=\"https://usercontent.irccloud-cdn.com/file/a1lVKQHn/image.png\">here</a> </p>\n<div class=\"message_inline_image\"><a href=\"https://usercontent.irccloud-cdn.com/file/OCzGkigp/image.png\" title=\"here\"><img src=\"https://usercontent.irccloud-cdn.com/file/OCzGkigp/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"https://usercontent.irccloud-cdn.com/file/a1lVKQHn/image.png\" title=\"here\"><img src=\"https://usercontent.irccloud-cdn.com/file/a1lVKQHn/image.png\"></a></div><p>In any case I just wanted to mention it in case you didn't already know about it :)</p>",
        "id": 200681456,
        "sender_full_name": "lqd",
        "timestamp": 1591974188
    },
    {
        "content": "<p>WHOA!</p>",
        "id": 200681547,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591974236
    },
    {
        "content": "<p>That's awesome! I've never heard of that before</p>",
        "id": 200681609,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591974248
    },
    {
        "content": "<p>I had the same reaction :)</p>",
        "id": 200681627,
        "sender_full_name": "lqd",
        "timestamp": 1591974261
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span></p>",
        "id": 200681646,
        "sender_full_name": "simulacrum",
        "timestamp": 1591974271
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> ^^</p>",
        "id": 200681647,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591974271
    },
    {
        "content": "<p>I've personally never seen a FOSS profiler this good before, it looks like RAD's Telemetry</p>",
        "id": 200681713,
        "sender_full_name": "lqd",
        "timestamp": 1591974306
    },
    {
        "content": "<p>it has a couple features which are better than VTune regarding assembly and inlining</p>",
        "id": 200681779,
        "sender_full_name": "lqd",
        "timestamp": 1591974337
    },
    {
        "content": "<p>anyway all the videos will explain all it can do better than I could, pretty exciting to me :)</p>",
        "id": 200681968,
        "sender_full_name": "lqd",
        "timestamp": 1591974432
    },
    {
        "content": "<p>That's really cool! I'll have to watch those</p>",
        "id": 200682174,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591974521
    },
    {
        "content": "<p>integration is less easy than for C++ but yeah, I just wanted to mention it, and we can talk about it later if it's interesting to the WG :)</p>",
        "id": 200682934,
        "sender_full_name": "lqd",
        "timestamp": 1591974847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> do you have a branch for your hack on rustc?</p>",
        "id": 200707018,
        "sender_full_name": "andjo403",
        "timestamp": 1591986548
    },
    {
        "content": "<p>no but I can try to push it as-is if you want</p>",
        "id": 200711525,
        "sender_full_name": "lqd",
        "timestamp": 1591988718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125799\">@andjo403</span> <a href=\"https://github.com/lqd/rust/tree/tracy_wip\">https://github.com/lqd/rust/tree/tracy_wip</a> , you'll need to change <a href=\"https://github.com/lqd/rust/commit/69557357c042403855f45f72cd2d08f72a860d59#diff-6978bd9505d13315945faf1296af34c7R538\">this hardcoded path</a> to your local build of the tracy library</p>",
        "id": 200712354,
        "sender_full_name": "lqd",
        "timestamp": 1591989191
    },
    {
        "content": "<p>awesome thanks <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 200712456,
        "sender_full_name": "andjo403",
        "timestamp": 1591989252
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/187831-t-compiler.2Fwg-self-profile/topic/tracy/near/200712354\">said</a>:</p>\n<blockquote>\n<p>you'll need to change <a href=\"https://github.com/lqd/rust/commit/69557357c042403855f45f72cd2d08f72a860d59#diff-6978bd9505d13315945faf1296af34c7R538\">this hardcoded path</a> to your local build of the tracy library</p>\n</blockquote>\n<p>I ended up making a different library that builds tracy client cpp by itself as part of my work to make a crate with a <code>tracing</code> layer for dumping data into Tracy. <a href=\"https://docs.rs/tracy-client-sys/0.7.0/tracy_client_sys/\">https://docs.rs/tracy-client-sys/0.7.0/tracy_client_sys/</a> may be useful if you ever wanted to make it less of a hack.</p>",
        "id": 201513029,
        "sender_full_name": "nagisa",
        "timestamp": 1592708625
    },
    {
        "content": "<p>That said, tracy does also have a converter from chrome profile files, so if very basic view into the application is sufficient, that route might be good too.</p>",
        "id": 201513089,
        "sender_full_name": "nagisa",
        "timestamp": 1592708684
    }
]