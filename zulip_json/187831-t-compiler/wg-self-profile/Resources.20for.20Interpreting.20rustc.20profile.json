[
    {
        "content": "<p>Hey all. I have a crate with long build times. I'm currently profiling using crox, but having a hard time figuring out how tot translate the information I'm getting into action. Are there any resources on how to interpret self profiling data?</p>",
        "id": 201293780,
        "sender_full_name": "rylev",
        "timestamp": 1592498342
    },
    {
        "content": "<p>not that I'm aware of it is mostly helpful to find what part of the compiler that is slow not what makes the compiler slow</p>",
        "id": 201294277,
        "sender_full_name": "andjo403",
        "timestamp": 1592498488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> Yeah, the tool is currently very focused on finding the parts of the compiler that are slow, not the parts of your code that are causing the slowness.</p>",
        "id": 201299177,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592500680
    },
    {
        "content": "<p>I'd recommend watching this issue for updates: <a href=\"https://github.com/rust-lang/measureme/issues/51\">https://github.com/rust-lang/measureme/issues/51</a></p>",
        "id": 201299266,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592500709
    },
    {
        "content": "<p>Makes sense. :-) I'll try to figure out what my next steps should be</p>",
        "id": 201299514,
        "sender_full_name": "rylev",
        "timestamp": 1592500830
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> Out of curiosity, are you seeing <code>DefId</code>s in the crox output? And if so, is that helpful at all?</p>",
        "id": 201300107,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592501161
    },
    {
        "content": "<p>In the JSON?</p>",
        "id": 201300178,
        "sender_full_name": "rylev",
        "timestamp": 1592501187
    },
    {
        "content": "<p>In the Chrome profiler</p>",
        "id": 201300192,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592501197
    },
    {
        "content": "<p>(Trying to see if I have an example handy)</p>",
        "id": 201300209,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592501206
    },
    {
        "content": "<p>you need to add something like \"-Z self-profile-events=default,query-keys\" to get the DefIds</p>",
        "id": 201300426,
        "sender_full_name": "andjo403",
        "timestamp": 1592501309
    },
    {
        "content": "<p>if you add that you will have something like in this <a href=\"https://github.com/rust-lang/measureme/pull/108\">https://github.com/rust-lang/measureme/pull/108</a></p>",
        "id": 201300585,
        "sender_full_name": "andjo403",
        "timestamp": 1592501396
    },
    {
        "content": "<p>For example, I can see stuff like this: <a href=\"/user_uploads/4715/kfZqVB1Mz9VdvpgUS07UxlIe/Screen-Shot-2020-06-18-at-1.29.58-PM.png\">Screen-Shot-2020-06-18-at-1.29.58-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/kfZqVB1Mz9VdvpgUS07UxlIe/Screen-Shot-2020-06-18-at-1.29.58-PM.png\" title=\"Screen-Shot-2020-06-18-at-1.29.58-PM.png\"><img src=\"/user_uploads/4715/kfZqVB1Mz9VdvpgUS07UxlIe/Screen-Shot-2020-06-18-at-1.29.58-PM.png\"></a></div>",
        "id": 201300688,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592501432
    },
    {
        "content": "<p>Yea I have that. That helps.</p>",
        "id": 201301069,
        "sender_full_name": "rylev",
        "timestamp": 1592501630
    },
    {
        "content": "<p>Ok cool</p>",
        "id": 201301862,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592501976
    },
    {
        "content": "<p>My current thinking is that this tool would aggregate based on that data which would probably help a bit but there's usually large chunks of compilation time that we can't blame to that level of granularity.</p>",
        "id": 201301977,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592502024
    },
    {
        "content": "<p>LLVM is pretty much a black box iirc</p>",
        "id": 201301995,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1592502037
    },
    {
        "content": "<p>we can get logging out of LLVM and maybe even some callbacks</p>",
        "id": 204213804,
        "sender_full_name": "eddyb",
        "timestamp": 1594996837
    },
    {
        "content": "<p>but I haven't looked into how hard it would be to integrate it. cc <span class=\"user-mention\" data-user-id=\"124289\">@Hanna Kruppe</span> <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 204213885,
        "sender_full_name": "eddyb",
        "timestamp": 1594996884
    },
    {
        "content": "<p>I believe we already have that integration (see <a href=\"https://github.com/rust-lang/rust/pull/68406\">https://github.com/rust-lang/rust/pull/68406</a>) but it requires <code>-Znew-llvm-pass-manager=y</code></p>",
        "id": 204215251,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1594997556
    },
    {
        "content": "<p>ah fun</p>",
        "id": 204233762,
        "sender_full_name": "eddyb",
        "timestamp": 1595006482
    },
    {
        "content": "<p>very cool</p>",
        "id": 204268295,
        "sender_full_name": "nagisa",
        "timestamp": 1595026089
    },
    {
        "content": "<p>though that probably means that we want to figure measureme exploding on super large profiles sooner ^^</p>",
        "id": 204268339,
        "sender_full_name": "nagisa",
        "timestamp": 1595026138
    }
]