[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span>  has written up <a href=\"https://github.com/rust-lang/measureme/issues/33\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/33\">an issue</a> for diff output from the summarize tool. I've <a href=\"https://github.com/rust-lang/measureme/issues/33#issuecomment-487042031\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/33#issuecomment-487042031\">added</a> some getting started instructions if anyone is interested in working on this. I'm happy to answer questions or provide help to anyone interested.</p>\n<p>Otherwise, I'll probably work on this sometime in the next week or two.</p>",
        "id": 164257726,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556282513
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> </p>\n<blockquote>\n<p>We'll need to change the usize fields to be signed. i64 is probably appropriate.</p>\n</blockquote>\n<p>Can't you use <code>impl Sub for QueryData</code> with <code>type Output = QueryDiff;</code> where you use <code>i64</code> in the <code>QueryDiff</code>?</p>",
        "id": 164257923,
        "sender_full_name": "centril",
        "timestamp": 1556282666
    },
    {
        "content": "<p>Seems unfortunate to have two identical data structures that differ only by the numerical types of a few fields</p>",
        "id": 164261124,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556285227
    },
    {
        "content": "<p>I think perf.rlo will also be interested in this feature and they'd probably rather not duplicate the data structures on their side either</p>",
        "id": 164261148,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556285256
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>  there's always <code>pub struct QueryData&lt;N = usize&gt; {</code> :P</p>",
        "id": 164261531,
        "sender_full_name": "centril",
        "timestamp": 1556285552
    },
    {
        "content": "<p>is that const generics?</p>",
        "id": 164261546,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556285576
    },
    {
        "content": "<p>Or whatever we're calling it these days lol</p>",
        "id": 164261563,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556285585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>  no it's just a type parameter with a default set to <code>usize</code></p>",
        "id": 164261574,
        "sender_full_name": "centril",
        "timestamp": 1556285597
    },
    {
        "content": "<p>Oh right</p>",
        "id": 164261585,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556285607
    },
    {
        "content": "<p>I read <code>N: usize</code></p>",
        "id": 164261597,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556285611
    },
    {
        "content": "<p>Should probably go have that morning cup of coffee</p>",
        "id": 164261606,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556285622
    },
    {
        "content": "<p>I mean isn't a QueryDiff fundamentally different from a QueryData in a semantic way? I would default to two types</p>",
        "id": 164262459,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1556286221
    },
    {
        "content": "<p>And wouldn't the diff need to keep track of lines only in one of the datasets too in an additional field</p>",
        "id": 164262734,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1556286408
    },
    {
        "content": "<p>I think naively, any non matching lines would be shown as <code>+\\-</code> their full value</p>",
        "id": 164263052,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556286621
    },
    {
        "content": "<p>Thinking a bit more about it, I think we need to remember both the old and new value (or ratio I guess), since otherwise we can't detect if, say, +100 cache hits is a 0.1% increase or a 100% increase.</p>",
        "id": 164298124,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1556312971
    },
    {
        "content": "<p>Yeah, that seems like a reasonable concern. We should test out it though. It may be too much noise to show the ratio for every value (or at all) and the user could always run a regular summarization of the data sets to see the actual values.</p>",
        "id": 164299253,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1556314027
    }
]