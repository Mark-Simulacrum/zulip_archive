[
    {
        "content": "<p>I did some testing with the latest versions of compiler and <code>summarize</code></p>",
        "id": 166269962,
        "sender_full_name": "mw",
        "timestamp": 1558533709
    },
    {
        "content": "<p>for style-servo, the <code>events</code> file is ~140 megabytes</p>",
        "id": 166270050,
        "sender_full_name": "mw",
        "timestamp": 1558533744
    },
    {
        "content": "<p>running summarize on it takes 0.65 seconds on my machine</p>",
        "id": 166270081,
        "sender_full_name": "mw",
        "timestamp": 1558533772
    },
    {
        "content": "<p>Cool!</p>",
        "id": 166270532,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534030
    },
    {
        "content": "<p>I wonder if there's any value in compressing the events file?</p>",
        "id": 166270552,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534051
    },
    {
        "content": "<p>yeah, seems pretty reasonable</p>",
        "id": 166270554,
        "sender_full_name": "mw",
        "timestamp": 1558534053
    },
    {
        "content": "<p>depends on whether you want to store it somewhere, I'd say</p>",
        "id": 166270595,
        "sender_full_name": "mw",
        "timestamp": 1558534082
    },
    {
        "content": "<p>at the moment, the plan is not to store it, right?</p>",
        "id": 166270643,
        "sender_full_name": "mw",
        "timestamp": 1558534100
    },
    {
        "content": "<p>For perf.rlo?</p>",
        "id": 166270674,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534113
    },
    {
        "content": "<p>yes</p>",
        "id": 166270678,
        "sender_full_name": "mw",
        "timestamp": 1558534117
    },
    {
        "content": "<p>No, I don't believe we're going to store it beyond the time required to process it</p>",
        "id": 166270684,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534126
    },
    {
        "content": "<p>another question would be when to compress it</p>",
        "id": 166270716,
        "sender_full_name": "mw",
        "timestamp": 1558534146
    },
    {
        "content": "<p>i.e. we don't want to do that in the rustc process</p>",
        "id": 166270747,
        "sender_full_name": "mw",
        "timestamp": 1558534164
    },
    {
        "content": "<p>because we are going to great lengths to keep the overhead low already</p>",
        "id": 166270777,
        "sender_full_name": "mw",
        "timestamp": 1558534183
    },
    {
        "content": "<p>Yeah, that's true</p>",
        "id": 166270883,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534235
    },
    {
        "content": "<p>I seem to recall reading somewhere about a Linux filesystem that always compresses data using a really simple algorithm (zlib maybe?). The reason being that the CPU cost to compress the data was less than the cost of reading/writing more data off disk</p>",
        "id": 166270976,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534288
    },
    {
        "content": "<p>But since we're writing the data async with mmap, it probably doesn't pay off for us</p>",
        "id": 166271013,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534314
    },
    {
        "content": "<p>I think ZFS has the option of lz4 compressing data natively</p>",
        "id": 166271193,
        "sender_full_name": "mw",
        "timestamp": 1558534401
    },
    {
        "content": "<p>Ah, yes that's probably what I'm thinking of <a href=\"https://blogs.oracle.com/solaris/zfs-compression-a-win-win-v2\" target=\"_blank\" title=\"https://blogs.oracle.com/solaris/zfs-compression-a-win-win-v2\">https://blogs.oracle.com/solaris/zfs-compression-a-win-win-v2</a></p>",
        "id": 166271445,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534545
    },
    {
        "content": "<p>But since we don't wait for the writes to happen or read the data back in process, it probably won't pay off for us</p>",
        "id": 166271517,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534569
    },
    {
        "content": "<p>yeah</p>",
        "id": 166271581,
        "sender_full_name": "mw",
        "timestamp": 1558534618
    },
    {
        "content": "<p>we would need to experiment but I'd like to keep it simple if possible</p>",
        "id": 166271634,
        "sender_full_name": "mw",
        "timestamp": 1558534652
    },
    {
        "content": "<p>so <code>stackcollapse</code> is even faster than <code>summarize</code>: 0.48 secs</p>",
        "id": 166271717,
        "sender_full_name": "mw",
        "timestamp": 1558534689
    },
    {
        "content": "<p>If we did want to keep the files around, we could definitely compress them after the perf run. I've seen pretty significant space reductions just from the native compression tool in macOS</p>",
        "id": 166271724,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534694
    },
    {
        "content": "<p><code>crox</code> is slower but still acceptable: 3.14 secs</p>",
        "id": 166271748,
        "sender_full_name": "mw",
        "timestamp": 1558534712
    },
    {
        "content": "<p>yes, compressing the file gives me:</p>",
        "id": 166271769,
        "sender_full_name": "mw",
        "timestamp": 1558534735
    },
    {
        "content": "<p>lz4: 41 MB</p>",
        "id": 166271802,
        "sender_full_name": "mw",
        "timestamp": 1558534754
    },
    {
        "content": "<p>gzip: 22.4 MB</p>",
        "id": 166271821,
        "sender_full_name": "mw",
        "timestamp": 1558534770
    },
    {
        "content": "<p>I think this will likely improve <code>crox</code> speed <a href=\"https://github.com/rust-lang/measureme/issues/47\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/47\">https://github.com/rust-lang/measureme/issues/47</a></p>",
        "id": 166271823,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534771
    },
    {
        "content": "<p>xz: 15.4 MB</p>",
        "id": 166271834,
        "sender_full_name": "mw",
        "timestamp": 1558534782
    },
    {
        "content": "<p>And cut the output file size by half</p>",
        "id": 166271839,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534786
    },
    {
        "content": "<p>yes, I also suspect that most of the time is spent generating the string data</p>",
        "id": 166271925,
        "sender_full_name": "mw",
        "timestamp": 1558534824
    },
    {
        "content": "<p>since summarize also looks at all the data, but is much faster</p>",
        "id": 166271937,
        "sender_full_name": "mw",
        "timestamp": 1558534838
    },
    {
        "content": "<p>one thing I noticed here: having only the PID, but not the crate name in the file name is annoying</p>",
        "id": 166272103,
        "sender_full_name": "mw",
        "timestamp": 1558534932
    },
    {
        "content": "<p>I've been generating events for all crates in the crate graph</p>",
        "id": 166272134,
        "sender_full_name": "mw",
        "timestamp": 1558534948
    },
    {
        "content": "<p>Yeah, there's likely some low hanging fruit in optimizing most of the processing tools</p>",
        "id": 166272136,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534949
    },
    {
        "content": "<p>I haven't done any profiling of any of them</p>",
        "id": 166272143,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558534960
    },
    {
        "content": "<p>wow, the crox output is 550 MB <code>:)</code></p>",
        "id": 166272203,
        "sender_full_name": "mw",
        "timestamp": 1558535000
    },
    {
        "content": "<p>That's probably going to break Chrome lol</p>",
        "id": 166272214,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535010
    },
    {
        "content": "<p>At a certain point, the Chrome dev tool just gives up and doesn't display anything.</p>",
        "id": 166272238,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535032
    },
    {
        "content": "<p>There's an internal Chrome tool which handles large files better but the UI is a bit clunky</p>",
        "id": 166272308,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535050
    },
    {
        "content": "<p>yeah...</p>",
        "id": 166272628,
        "sender_full_name": "mw",
        "timestamp": 1558535235
    },
    {
        "content": "<p>I'd say it is unlikely that we generate the Chrome profiling data eagerly for each perf run</p>",
        "id": 166272675,
        "sender_full_name": "mw",
        "timestamp": 1558535273
    },
    {
        "content": "<p>given how big the files are</p>",
        "id": 166272740,
        "sender_full_name": "mw",
        "timestamp": 1558535298
    },
    {
        "content": "<p>Yeah even relatively small crates like regex generate large files</p>",
        "id": 166272817,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535368
    },
    {
        "content": "<p>(I believe chrome://tracing is the internal tool I'm thinking of but I don't have a profiler file handy to test)</p>",
        "id": 166272939,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535433
    },
    {
        "content": "<p>The Firefox format looks like it scales much better to me but I haven't had a chance to play around with it</p>",
        "id": 166273027,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535496
    },
    {
        "content": "<p>yeah</p>",
        "id": 166273050,
        "sender_full_name": "mw",
        "timestamp": 1558535520
    },
    {
        "content": "<p>well, not a priority for the MVP anyway, I'd say</p>",
        "id": 166273127,
        "sender_full_name": "mw",
        "timestamp": 1558535545
    },
    {
        "content": "<p>are you working on something?</p>",
        "id": 166273178,
        "sender_full_name": "mw",
        "timestamp": 1558535579
    },
    {
        "content": "<p>It's been a busy week for me but I think I'll have time over the next few days to work on getting perf.rlo to run <code>-Z self-profile</code> as we discussed</p>",
        "id": 166273186,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535583
    },
    {
        "content": "<p>cool, I'll look into adding a path argument to -Zself-profile</p>",
        "id": 166273240,
        "sender_full_name": "mw",
        "timestamp": 1558535619
    },
    {
        "content": "<p>if that doesn't clash with what you're doing</p>",
        "id": 166273257,
        "sender_full_name": "mw",
        "timestamp": 1558535632
    },
    {
        "content": "<p>Nope!</p>",
        "id": 166273273,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535639
    },
    {
        "content": "<p>alright</p>",
        "id": 166273346,
        "sender_full_name": "mw",
        "timestamp": 1558535653
    },
    {
        "content": "<p>That should be easy to tweak later</p>",
        "id": 166273357,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558535662
    },
    {
        "content": "<p>Ok, so I've modified rustc-perf to run with <code>-Z self-profile</code> and dump all of the files in a folder. Executing a full perf run results in ~1400 files totaling 4.4 gb. Note: these are the raw profile files, not processed results file. </p>\n<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 166504455,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558749600
    },
    {
        "content": "<p>seems.. reasonable?</p>",
        "id": 166601134,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> We'll probably want to process the data -- if you get the bit of code which correctly finds/loads the selected crate's into measureme that'd be a good start</p>",
        "id": 166601191,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920547
    },
    {
        "content": "<p>I'm not sure how that should be done though</p>",
        "id": 166601193,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920554
    },
    {
        "content": "<p>Did we decide which results we should keep? Should I just keep the first iteration's results for now?</p>",
        "id": 166601250,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558920641
    },
    {
        "content": "<p>yeah</p>",
        "id": 166601253,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920655
    },
    {
        "content": "<p>we wanted some form of \"aggregation\" but that's not really the MVP</p>",
        "id": 166601264,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920667
    },
    {
        "content": "<p>Yeah</p>",
        "id": 166601275,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558920716
    },
    {
        "content": "<p>I'll just take the first one for now unless there's any objections</p>",
        "id": 166601325,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558920738
    },
    {
        "content": "<p>sure seems fine -- I imagine it's just a call to <code>first</code> or something like that at a relatively top-level place</p>",
        "id": 166601334,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920783
    },
    {
        "content": "<p>I would try to avoid making that decision in a lowlevel place if possible to make it easier to aggregate later (i.e., keep all the data around for now, right up until the end)</p>",
        "id": 166601345,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920814
    },
    {
        "content": "<p>but it's not critical that happens so don't worry about it if its hard</p>",
        "id": 166601346,
        "sender_full_name": "simulacrum",
        "timestamp": 1558920827
    },
    {
        "content": "<p>Got it</p>",
        "id": 166601402,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558920865
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 166601403,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558920866
    },
    {
        "content": "<p>Can I assume that the measureme tools are going to be installed in a specific folder? Or available on the path?</p>",
        "id": 166989661,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559303107
    },
    {
        "content": "<p>Basically, how do I know where to look to call the processing tools?</p>",
        "id": 166989664,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559303117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Do you have any suggestions about how to call the tools?</p>",
        "id": 167329159,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677130
    },
    {
        "content": "<p>hm, so there was some discussion about inclusion into the sysroot, but that seems far off</p>",
        "id": 167329228,
        "sender_full_name": "simulacrum",
        "timestamp": 1559677197
    },
    {
        "content": "<p>do we expect to need multiple versions or will latest version pretty much work?</p>",
        "id": 167329292,
        "sender_full_name": "simulacrum",
        "timestamp": 1559677211
    },
    {
        "content": "<p>I think at this point, we should just expect the latest version to work</p>",
        "id": 167329312,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677230
    },
    {
        "content": "<p>Of course, how we get the latest version is another question</p>",
        "id": 167329341,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677251
    },
    {
        "content": "<p>But a recent-ish version should be fine</p>",
        "id": 167329357,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677260
    },
    {
        "content": "<p>let's just assume it's installed somewhere in PATH</p>",
        "id": 167329377,
        "sender_full_name": "simulacrum",
        "timestamp": 1559677269
    },
    {
        "content": "<p>Ok</p>",
        "id": 167329385,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677275
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 167329388,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677279
    },
    {
        "content": "<p>(Same as we do for perf, valgrind, other tools)</p>",
        "id": 167329391,
        "sender_full_name": "simulacrum",
        "timestamp": 1559677279
    },
    {
        "content": "<p>I guess there's a server somewhere you ssh into and install stuff as needed?</p>",
        "id": 167329417,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677304
    },
    {
        "content": "<p>and then add to the benchmarking readme (IIRC, collector/README, or collector/benchmarks/README) some text about installing measureme</p>",
        "id": 167329437,
        "sender_full_name": "simulacrum",
        "timestamp": 1559677316
    },
    {
        "content": "<p>Yeah, we have two -- collection and site -- I presume the tools are needed on collection?</p>",
        "id": 167329493,
        "sender_full_name": "simulacrum",
        "timestamp": 1559677335
    },
    {
        "content": "<p>Yeah</p>",
        "id": 167329523,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677369
    },
    {
        "content": "<p>yeah, I'll be able to install them (can even stick a cargo install -f measureme in the script so that it reinstalls latest version every runthrough)</p>",
        "id": 167329584,
        "sender_full_name": "simulacrum",
        "timestamp": 1559677419
    },
    {
        "content": "<p>Perfect</p>",
        "id": 167329680,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677471
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 167329685,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559677476
    }
]