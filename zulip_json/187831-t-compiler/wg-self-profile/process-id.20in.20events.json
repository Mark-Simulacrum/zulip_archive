[
    {
        "content": "<p>It just occurred to me that <code>Event</code> does not have a <code>process_id</code> field. We should probably fix that as soon as possible.</p>",
        "id": 165801317,
        "sender_full_name": "mw",
        "timestamp": 1558006790
    },
    {
        "content": "<p>Is this a beginner friendly task?</p>",
        "id": 165801398,
        "sender_full_name": "amanjeev",
        "timestamp": 1558006848
    },
    {
        "content": "<p>It might be once we decide what the type of that field should be</p>",
        "id": 165801497,
        "sender_full_name": "mw",
        "timestamp": 1558006929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> what do you think about <code>process_id: Cow&lt;'a, str&gt;,</code>? Is there a reason not to make this a string?</p>",
        "id": 165801549,
        "sender_full_name": "mw",
        "timestamp": 1558006995
    },
    {
        "content": "<p>I'm concerned about increasing the size of <code>RawEvent</code></p>",
        "id": 165801688,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558007104
    },
    {
        "content": "<p>I think this is the way we should store process id: <a href=\"https://github.com/rust-lang/measureme/issues/15\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/15\">https://github.com/rust-lang/measureme/issues/15</a></p>",
        "id": 165801732,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558007141
    },
    {
        "content": "<p>I'm thinking only about <code>Event</code> here</p>",
        "id": 165802223,
        "sender_full_name": "mw",
        "timestamp": 1558007531
    },
    {
        "content": "<p>e.g. if you have a directory containing event streams from an entire cargo invocation and you want to iterate over all of them at once</p>",
        "id": 165802275,
        "sender_full_name": "mw",
        "timestamp": 1558007585
    },
    {
        "content": "<p>post-processing tools will be interested in which process an event came from</p>",
        "id": 165802306,
        "sender_full_name": "mw",
        "timestamp": 1558007630
    },
    {
        "content": "<p>unless you think that post-processing should handle this differently</p>",
        "id": 165802382,
        "sender_full_name": "mw",
        "timestamp": 1558007677
    },
    {
        "content": "<p>e.g. handle events from one process at a time</p>",
        "id": 165802403,
        "sender_full_name": "mw",
        "timestamp": 1558007704
    },
    {
        "content": "<p>my vision was (roughly):</p>\n<ul>\n<li>don't touch RawEvent</li>\n<li>store the process id in the metadata as described in the issue you linked about</li>\n<li>add <code>process_id</code> to <code>Event</code></li>\n<li>make the event iterator fetch the process id once and provide it with every <code>Event</code></li>\n</ul>",
        "id": 165802641,
        "sender_full_name": "mw",
        "timestamp": 1558007888
    },
    {
        "content": "<p>Nope, that's exactly what I was thinking as well <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 165802804,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008016
    },
    {
        "content": "<p>OK, then <span class=\"user-mention\" data-user-id=\"218647\">@Amanjeev Sethi</span> could take a stab at implementing this, if they are interested, right?</p>",
        "id": 165802859,
        "sender_full_name": "mw",
        "timestamp": 1558008089
    },
    {
        "content": "<p>Absolutely!</p>",
        "id": 165802868,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008099
    },
    {
        "content": "<p>sure! should i be creating a new gh ?issue</p>",
        "id": 165802965,
        "sender_full_name": "amanjeev",
        "timestamp": 1558008197
    },
    {
        "content": "<p>I'll do that and I'll add some mentoring instructions</p>",
        "id": 165802985,
        "sender_full_name": "mw",
        "timestamp": 1558008225
    },
    {
        "content": "<p>appreciate that!</p>",
        "id": 165803061,
        "sender_full_name": "amanjeev",
        "timestamp": 1558008284
    },
    {
        "content": "<p>The first step will be to implement <a href=\"https://github.com/rust-lang/measureme/issues/15\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/15\">https://github.com/rust-lang/measureme/issues/15</a></p>",
        "id": 165803064,
        "sender_full_name": "mw",
        "timestamp": 1558008289
    },
    {
        "content": "<p>I added some notes to <a href=\"https://github.com/rust-lang/rust/issues/15\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/15\">#15</a></p>",
        "id": 165803224,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008431
    },
    {
        "content": "<p>Oh, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> if you want to create a new issue, that's fine too. I can remove my comment.</p>",
        "id": 165803247,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008470
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I imagine the metadata to be a JSON object with some mandatory fields (at least process-id) and then an arbitrary number of other (string -&gt; string) pairs</p>",
        "id": 165803249,
        "sender_full_name": "mw",
        "timestamp": 1558008473
    },
    {
        "content": "<p>do we want any other mandatory fields?</p>",
        "id": 165803317,
        "sender_full_name": "mw",
        "timestamp": 1558008516
    },
    {
        "content": "<p>I think <code>start_time</code> should be mandatory as well</p>",
        "id": 165803321,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008522
    },
    {
        "content": "<p>OK, in what format?</p>",
        "id": 165803329,
        "sender_full_name": "mw",
        "timestamp": 1558008538
    },
    {
        "content": "<p>if we could stick the command run in there, that'd be good (but maybe not a required field)</p>",
        "id": 165803332,
        "sender_full_name": "simulacrum",
        "timestamp": 1558008542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> yeah, that sounds like a good idea</p>",
        "id": 165803477,
        "sender_full_name": "mw",
        "timestamp": 1558008576
    },
    {
        "content": "<p>what format do we store other timestamps in btw?? :)</p>",
        "id": 165803555,
        "sender_full_name": "mw",
        "timestamp": 1558008626
    },
    {
        "content": "<p>We lean on what serde does</p>",
        "id": 165803569,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008652
    },
    {
        "content": "<p>Which is <code>{ \"seconds\": u64, \"nanos\": u32 }</code> I believe</p>",
        "id": 165803585,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008675
    },
    {
        "content": "<p>hm, but this would probably be more useful as a absolute timestamp?</p>",
        "id": 165803600,
        "sender_full_name": "simulacrum",
        "timestamp": 1558008712
    },
    {
        "content": "<p>maybe that's also recorded like that though</p>",
        "id": 165803604,
        "sender_full_name": "simulacrum",
        "timestamp": 1558008720
    },
    {
        "content": "<p>Oh, I think at the moment all our profiles start on 1/1/1970 :P</p>",
        "id": 165803659,
        "sender_full_name": "mw",
        "timestamp": 1558008741
    },
    {
        "content": "<p><a href=\"https://github.com/serde-rs/serde/blob/5fcdf0ff2be83fc73e29d73ea69674f10e791ebc/serde/src/ser/impls.rs#L608\" target=\"_blank\" title=\"https://github.com/serde-rs/serde/blob/5fcdf0ff2be83fc73e29d73ea69674f10e791ebc/serde/src/ser/impls.rs#L608\">https://github.com/serde-rs/serde/blob/5fcdf0ff2be83fc73e29d73ea69674f10e791ebc/serde/src/ser/impls.rs#L608</a></p>",
        "id": 165803672,
        "sender_full_name": "simulacrum",
        "timestamp": 1558008763
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/measureme/blob/582b99b5c6c03411076a3c8950630fff380a799a/measureme/src/profiling_data.rs#L80-L81\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/blob/582b99b5c6c03411076a3c8950630fff380a799a/measureme/src/profiling_data.rs#L80-L81\">https://github.com/rust-lang/measureme/blob/582b99b5c6c03411076a3c8950630fff380a799a/measureme/src/profiling_data.rs#L80-L81</a></p>",
        "id": 165803706,
        "sender_full_name": "mw",
        "timestamp": 1558008807
    },
    {
        "content": "<p>In Rust terms, I think we should record a <code>(SystemTime, Instant)</code> pair. The <code>SystemTime</code> is what will go in the JSON as the <code>start_time</code>. The <code>Instant</code> is used to measure <code>RawEvent</code> offsets from the start time.</p>",
        "id": 165803710,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558008821
    },
    {
        "content": "<p>As a maybe-helpful note, this is what perf stores in it's header: <a href=\"https://github.com/torvalds/linux/blob/master/tools/perf/Documentation/perf.data-file-format.txt#L58\" target=\"_blank\" title=\"https://github.com/torvalds/linux/blob/master/tools/perf/Documentation/perf.data-file-format.txt#L58\">https://github.com/torvalds/linux/blob/master/tools/perf/Documentation/perf.data-file-format.txt#L58</a></p>",
        "id": 165803887,
        "sender_full_name": "simulacrum",
        "timestamp": 1558008966
    },
    {
        "content": "<p>interesting tidbits could be available memory, CPU type, number of threads</p>",
        "id": 165803942,
        "sender_full_name": "simulacrum",
        "timestamp": 1558009041
    },
    {
        "content": "<p>yes, that's true</p>",
        "id": 165804037,
        "sender_full_name": "mw",
        "timestamp": 1558009104
    },
    {
        "content": "<p>but at least some of that is likely relatively problematic for us to uniformly query (especially on Windows, or systems without /proc/ basically)</p>",
        "id": 165804079,
        "sender_full_name": "simulacrum",
        "timestamp": 1558009140
    },
    {
        "content": "<p>yeah, I mean this can be done on a best effort basis</p>",
        "id": 165804144,
        "sender_full_name": "mw",
        "timestamp": 1558009194
    },
    {
        "content": "<p>and I wouldn't make them required as such -- I can open an issue linking to the perf.data format though and saying \"maybe we should add these fields at some point\" (memory, cpu type, and thread count being the most interesting I think)</p>",
        "id": 165804146,
        "sender_full_name": "simulacrum",
        "timestamp": 1558009197
    },
    {
        "content": "<p>sgtm</p>",
        "id": 165804216,
        "sender_full_name": "mw",
        "timestamp": 1558009229
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 165804223,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558009243
    },
    {
        "content": "<p>At the current time, I'm most interested in <code>start_time</code>, <code>pid</code>, and <code>process_args</code>.</p>",
        "id": 165804265,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558009300
    },
    {
        "content": "<p><code>process_args</code> should be optional though</p>",
        "id": 165804282,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558009314
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/measureme/issues/15#issuecomment-493049088\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/15#issuecomment-493049088\">https://github.com/rust-lang/measureme/issues/15#issuecomment-493049088</a></p>",
        "id": 165805277,
        "sender_full_name": "mw",
        "timestamp": 1558010174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"218647\">@Amanjeev Sethi</span> Let me know if you have any questions regarding the instructions above</p>",
        "id": 165807626,
        "sender_full_name": "mw",
        "timestamp": 1558011975
    },
    {
        "content": "<p>Sorry, just got around to checking Zulip again. I have not read all the comments and discussions yet but even if I had, I am sure I will have a ton of questions, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 165830367,
        "sender_full_name": "amanjeev",
        "timestamp": 1558027876
    },
    {
        "content": "<p>Is issue <a href=\"https://github.com/rust-lang/measureme/issues/15\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/15\">#15</a> is what I am supposed to work or is that issue just to point me to <a href=\"https://github.com/rust-lang/measureme/issues/15#issuecomment-493049088\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/15#issuecomment-493049088\">this comment</a> ? Please advise.</p>",
        "id": 165838776,
        "sender_full_name": "amanjeev",
        "timestamp": 1558033200
    },
    {
        "content": "<p>Yeah <a href=\"https://github.com/rust-lang/rust/issues/15\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/15\">#15</a> is what you should work on :)</p>",
        "id": 165839497,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1558033599
    }
]