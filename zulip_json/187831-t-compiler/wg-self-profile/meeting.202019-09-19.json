[
    {
        "content": "<p>(placeholder for upcoming meeting)</p>",
        "id": 175896089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568719012
    },
    {
        "content": "<p>I took some notes for what the meeting could be about: <a href=\"https://hackmd.io/@michaelwoerister/Sy7D3pxPH/edit\" target=\"_blank\" title=\"https://hackmd.io/@michaelwoerister/Sy7D3pxPH/edit\">https://hackmd.io/@michaelwoerister/Sy7D3pxPH/edit</a></p>",
        "id": 176083945,
        "sender_full_name": "mw",
        "timestamp": 1568887127
    },
    {
        "content": "<p>contains a suggested agenda</p>",
        "id": 176083959,
        "sender_full_name": "mw",
        "timestamp": 1568887153
    },
    {
        "content": "<p>I'll go have lunch now :)</p>",
        "id": 176083967,
        "sender_full_name": "mw",
        "timestamp": 1568887163
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 176085933,
        "sender_full_name": "simulacrum",
        "timestamp": 1568889091
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 176085938,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568889100
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 176086120,
        "sender_full_name": "mw",
        "timestamp": 1568889251
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> wanted to attend too</p>",
        "id": 176086136,
        "sender_full_name": "mw",
        "timestamp": 1568889291
    },
    {
        "content": "<p>i'm here now</p>",
        "id": 176086187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568889359
    },
    {
        "content": "<p>alright</p>",
        "id": 176086238,
        "sender_full_name": "mw",
        "timestamp": 1568889371
    },
    {
        "content": "<p>let's start then</p>",
        "id": 176086246,
        "sender_full_name": "mw",
        "timestamp": 1568889388
    },
    {
        "content": "<p>so my proposed agenda would be:</p>",
        "id": 176086253,
        "sender_full_name": "mw",
        "timestamp": 1568889419
    },
    {
        "content": "<p>1. establish the current status</p>",
        "id": 176086260,
        "sender_full_name": "mw",
        "timestamp": 1568889429
    },
    {
        "content": "<p>2. find out what we want to focus on next</p>",
        "id": 176086269,
        "sender_full_name": "mw",
        "timestamp": 1568889442
    },
    {
        "content": "<p>3. come up with action items</p>",
        "id": 176086280,
        "sender_full_name": "mw",
        "timestamp": 1568889453
    },
    {
        "content": "<p>shall we do that? did I forget something important?</p>",
        "id": 176086296,
        "sender_full_name": "mw",
        "timestamp": 1568889480
    },
    {
        "content": "<p>Sounds good to me</p>",
        "id": 176086341,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568889488
    },
    {
        "content": "<p>ok</p>",
        "id": 176086346,
        "sender_full_name": "mw",
        "timestamp": 1568889499
    },
    {
        "content": "<p>so, the big project is still the \"MVP\"</p>",
        "id": 176086353,
        "sender_full_name": "mw",
        "timestamp": 1568889516
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/58967\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58967\">https://github.com/rust-lang/rust/issues/58967</a></p>",
        "id": 176086366,
        "sender_full_name": "mw",
        "timestamp": 1568889535
    },
    {
        "content": "<p>i.e. getting self-profiling onto perf.rlo</p>",
        "id": 176086381,
        "sender_full_name": "mw",
        "timestamp": 1568889549
    },
    {
        "content": "<p>we lost a bit of steam over the summer :)</p>",
        "id": 176086401,
        "sender_full_name": "mw",
        "timestamp": 1568889567
    },
    {
        "content": "<p>Yeah :)</p>",
        "id": 176086412,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568889589
    },
    {
        "content": "<p>which is fine</p>",
        "id": 176086459,
        "sender_full_name": "mw",
        "timestamp": 1568889606
    },
    {
        "content": "<p>it's pretty far along actually</p>",
        "id": 176086469,
        "sender_full_name": "mw",
        "timestamp": 1568889618
    },
    {
        "content": "<p>Indeed, yes -- I got the impression when I last looked at this (I think a few months ago) that we are pretty much ready to go ahead and add support to perf.rlo, just that we haven't quite gotten around to it mostly</p>",
        "id": 176086470,
        "sender_full_name": "simulacrum",
        "timestamp": 1568889620
    },
    {
        "content": "<p>yup</p>",
        "id": 176086471,
        "sender_full_name": "mw",
        "timestamp": 1568889630
    },
    {
        "content": "<p>did we properly specify what it should look like on perf.rlo</p>",
        "id": 176086496,
        "sender_full_name": "mw",
        "timestamp": 1568889654
    },
    {
        "content": "<p>I know we chatted about it</p>",
        "id": 176086500,
        "sender_full_name": "mw",
        "timestamp": 1568889660
    },
    {
        "content": "<p>I think no -- I recall lots of discussion -- but I think we also decided that an initial bit could be to just get the output of <code>measureme summarize</code> or so on the page (via links or something)</p>",
        "id": 176086521,
        "sender_full_name": "simulacrum",
        "timestamp": 1568889691
    },
    {
        "content": "<p>the todo list in the tracking issue is still up-to-date, I think</p>",
        "id": 176086523,
        "sender_full_name": "mw",
        "timestamp": 1568889696
    },
    {
        "content": "<p>I remember that one should be able to \"zoom into\" a specific benchmark</p>",
        "id": 176086579,
        "sender_full_name": "mw",
        "timestamp": 1568889734
    },
    {
        "content": "<p>and have a comparison of time spent in each query</p>",
        "id": 176086583,
        "sender_full_name": "mw",
        "timestamp": 1568889746
    },
    {
        "content": "<p>This may or may not be related: I would like the freedom to add new measurements that capture data at a finer grain, but <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> was worried about that perturbing the UX for people just trying to see the overall picture (presumably via <code>measureme summarize</code>).</p>",
        "id": 176086617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568889788
    },
    {
        "content": "<p>i.e. you click on a comparison in the comparison view and get to a new page comparing each query</p>",
        "id": 176086619,
        "sender_full_name": "mw",
        "timestamp": 1568889789
    },
    {
        "content": "<p>hm, yes, I do recall something to this effect</p>",
        "id": 176086625,
        "sender_full_name": "simulacrum",
        "timestamp": 1568889798
    },
    {
        "content": "<p>So we may want to say up front what events will be filtered out from the perf.rlo presentation?</p>",
        "id": 176086628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568889803
    },
    {
        "content": "<p>yes, filtering is already implemented and perf.rlo would only do stuff that doesn't add much overhead</p>",
        "id": 176086648,
        "sender_full_name": "mw",
        "timestamp": 1568889840
    },
    {
        "content": "<p>(We talked about the details view around here <a href=\"#narrow/stream/187831-t-compiler.2Fwg-self-profile/topic/meeting.202019-05-08/near/165155575\" title=\"#narrow/stream/187831-t-compiler.2Fwg-self-profile/topic/meeting.202019-05-08/near/165155575\">https://rust-lang.zulipchat.com/#narrow/stream/187831-t-compiler.2Fwg-self-profile/topic/meeting.202019-05-08/near/165155575</a> I think)</p>",
        "id": 176086699,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568889863
    },
    {
        "content": "<p>ah, well, I think <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is talking about <em>visual</em> filtering, not collection wise</p>",
        "id": 176086701,
        "sender_full_name": "simulacrum",
        "timestamp": 1568889865
    },
    {
        "content": "<p>I suppose both topics are relevant</p>",
        "id": 176086705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568889875
    },
    {
        "content": "<p>I think perf.rlo would basically give you what <code>summarize</code> does at the moment</p>",
        "id": 176086710,
        "sender_full_name": "mw",
        "timestamp": 1568889901
    },
    {
        "content": "<p>but basically, I want to know what the process is for me to add new instrumentation for my own use that won't perturb what perf.rlo shows</p>",
        "id": 176086725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568889916
    },
    {
        "content": "<p>plus comparison between two runs</p>",
        "id": 176086728,
        "sender_full_name": "mw",
        "timestamp": 1568889920
    },
    {
        "content": "<p>I am not too concerned with collection overhead, bors is so slow these days that we can keep up no problem (especially with one of the servo crates broken...)</p>",
        "id": 176086729,
        "sender_full_name": "simulacrum",
        "timestamp": 1568889921
    },
    {
        "content": "<p>it sounds like the answer is \"don't change <code>summarize</code>\"</p>",
        "id": 176086733,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568889929
    },
    {
        "content": "<p>I suspect that we'll probably want a <code>summarize-perf</code> or equivalent at some point soonish, too, for that reason</p>",
        "id": 176086739,
        "sender_full_name": "simulacrum",
        "timestamp": 1568889951
    },
    {
        "content": "<p>perf.rlo has to deal with event types being added and removed anyway, right?</p>",
        "id": 176086742,
        "sender_full_name": "mw",
        "timestamp": 1568889956
    },
    {
        "content": "<p>because new queries get added</p>",
        "id": 176086789,
        "sender_full_name": "mw",
        "timestamp": 1568889971
    },
    {
        "content": "<p>or removed or renamed</p>",
        "id": 176086795,
        "sender_full_name": "mw",
        "timestamp": 1568889975
    },
    {
        "content": "<p>Not today, but yes, in general it does</p>",
        "id": 176086816,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890013
    },
    {
        "content": "<p>So, I did land <code>summarize diff</code> over the summer which can handle new/missing events between runs <a href=\"https://github.com/rust-lang/measureme/tree/master/summarize#the-diff-sub-command\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/tree/master/summarize#the-diff-sub-command\">https://github.com/rust-lang/measureme/tree/master/summarize#the-diff-sub-command</a></p>",
        "id": 176086824,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890025
    },
    {
        "content": "<p>diff likely won't work well for us as we don't want to keep the raw event files around I presume? Though we could plausibly upload them to S3 if they're not too big</p>",
        "id": 176086847,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890060
    },
    {
        "content": "<p>(I recall some size estimates earlier)</p>",
        "id": 176086851,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890071
    },
    {
        "content": "<p>yeah, we only want the post-processed artifacts,  I think</p>",
        "id": 176086900,
        "sender_full_name": "mw",
        "timestamp": 1568890088
    },
    {
        "content": "<p>The diff actually can work with the processed json files as well as the raw events files.</p>",
        "id": 176086902,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890090
    },
    {
        "content": "<p>that would be a lot of data otherwise</p>",
        "id": 176086905,
        "sender_full_name": "mw",
        "timestamp": 1568890096
    },
    {
        "content": "<p>ah, cool, okay -- so maybe we start by getting those processed json files stored as a first step</p>",
        "id": 176086927,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890137
    },
    {
        "content": "<p>then we can figure out the rest once we have the raw data</p>",
        "id": 176086946,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890152
    },
    {
        "content": "<p>presuming the processed json is \"sufficient\" for ~all uses?</p>",
        "id": 176086952,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890169
    },
    {
        "content": "<p>I think it is for the MVP</p>",
        "id": 176087022,
        "sender_full_name": "mw",
        "timestamp": 1568890216
    },
    {
        "content": "<p>anyway, I can likely invest time into this</p>",
        "id": 176087027,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890220
    },
    {
        "content": "<p>I think it's sufficient for anything we'd want to expose from perf.rlo at this time</p>",
        "id": 176087029,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890221
    },
    {
        "content": "<p>(likely with support from <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> if I have questions about self-profile filtering and such)</p>",
        "id": 176087038,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890237
    },
    {
        "content": "<p>cool</p>",
        "id": 176087045,
        "sender_full_name": "mw",
        "timestamp": 1568890252
    },
    {
        "content": "<p>I'd be glad to help out!</p>",
        "id": 176087047,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890252
    },
    {
        "content": "<p>so, I like roughly the table that <code>summarize diff </code> produces as a web page</p>",
        "id": 176087089,
        "sender_full_name": "mw",
        "timestamp": 1568890301
    },
    {
        "content": "<p>with the ability to sort by the different columns</p>",
        "id": 176087096,
        "sender_full_name": "mw",
        "timestamp": 1568890314
    },
    {
        "content": "<p>I think that would be pretty useful</p>",
        "id": 176087175,
        "sender_full_name": "mw",
        "timestamp": 1568890336
    },
    {
        "content": "<p>indeed, yes -- that seems like a pretty good target for MVP (wouldn't be surprised if hardest bit is the sorting :)</p>",
        "id": 176087201,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890368
    },
    {
        "content": "<p>yeah :)</p>",
        "id": 176087213,
        "sender_full_name": "mw",
        "timestamp": 1568890382
    },
    {
        "content": "<p>the second part of the MVP is reviewing if we are recording the right events</p>",
        "id": 176087244,
        "sender_full_name": "mw",
        "timestamp": 1568890414
    },
    {
        "content": "<p>we already have queries and some LLVM and front-end stuff</p>",
        "id": 176087257,
        "sender_full_name": "mw",
        "timestamp": 1568890430
    },
    {
        "content": "<p>but trait selection would be interesting too, I think</p>",
        "id": 176087301,
        "sender_full_name": "mw",
        "timestamp": 1568890443
    },
    {
        "content": "<p>I can do a review of the kinds of data we are recording</p>",
        "id": 176087362,
        "sender_full_name": "mw",
        "timestamp": 1568890466
    },
    {
        "content": "<p>I know we're not currently recording anything for trait selection beyond what's captured by the general query infrastructure.</p>",
        "id": 176087377,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890488
    },
    {
        "content": "<p>and make a PR, and maybe in the process, come up with guidelines for when someone wants to add their own stuff</p>",
        "id": 176087383,
        "sender_full_name": "mw",
        "timestamp": 1568890498
    },
    {
        "content": "<p>I think one concern from my end is that getting sort of into trait selection etc might be a bit prone to tracking a moving target? I don't really have a good sense of how quickly we expect polonius (so, regionck changes), chalk, etc. to start coming in</p>",
        "id": 176087384,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890498
    },
    {
        "content": "<p>But generally speaking the review and PR sounds good!</p>",
        "id": 176087407,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890521
    },
    {
        "content": "<p>hm, I guess chalk is still some way off</p>",
        "id": 176087423,
        "sender_full_name": "mw",
        "timestamp": 1568890544
    },
    {
        "content": "<p>and we have to expect changes anyway</p>",
        "id": 176087429,
        "sender_full_name": "mw",
        "timestamp": 1568890554
    },
    {
        "content": "<p>True, yes, I was just not sure if \"some way\" was weeks or months</p>",
        "id": 176087483,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890569
    },
    {
        "content": "<p>from the outside it would mostly look like a query got removed or added</p>",
        "id": 176087485,
        "sender_full_name": "mw",
        "timestamp": 1568890576
    },
    {
        "content": "<p>/me thinks time until chalk <em>is</em> the basis of implementation is measured in months</p>",
        "id": 176087488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568890577
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^ ?</p>",
        "id": 176087492,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568890586
    },
    {
        "content": "<p>If months then yeah, I think makes sense to invest</p>",
        "id": 176087505,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890599
    },
    {
        "content": "<p>We also don't really have a strategy for allowing dependent crates to use <code>measureme</code></p>",
        "id": 176087537,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890621
    },
    {
        "content": "<p>it's not much of an investment and it's no big deal if it goes away again soon, I'd say</p>",
        "id": 176087545,
        "sender_full_name": "mw",
        "timestamp": 1568890633
    },
    {
        "content": "<p>can you elaborate, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ?</p>",
        "id": 176087559,
        "sender_full_name": "mw",
        "timestamp": 1568890654
    },
    {
        "content": "<p>eg. polonius might like to use <code>measureme</code> and have their instrumentations included in the overall <code>self-profile</code> results.</p>",
        "id": 176087563,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890657
    },
    {
        "content": "<p>that's true</p>",
        "id": 176087573,
        "sender_full_name": "mw",
        "timestamp": 1568890672
    },
    {
        "content": "<p>I never thought about that, actually</p>",
        "id": 176087580,
        "sender_full_name": "mw",
        "timestamp": 1568890679
    },
    {
        "content": "<p>As it stands, I think doing this currently would result in separate trace files.</p>",
        "id": 176087622,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890684
    },
    {
        "content": "<p>hm, can polonius integrate into the rustc event system? maybe via a feature flag?</p>",
        "id": 176087623,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890685
    },
    {
        "content": "<p>well, everything goes through the <code>Profiler</code> object, right?</p>",
        "id": 176087656,
        "sender_full_name": "mw",
        "timestamp": 1568890730
    },
    {
        "content": "<p>It sounds like we sort of want something similar to <code>log</code> and <code>env_logger</code></p>",
        "id": 176087666,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  yeah</p>",
        "id": 176087675,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890745
    },
    {
        "content": "<p>though not necessarily decoupled so much</p>",
        "id": 176087682,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890749
    },
    {
        "content": "<p>so, any other crates would just need a way of taking a <code>Profiler</code>from the outside instead of instantiating their own</p>",
        "id": 176087706,
        "sender_full_name": "mw",
        "timestamp": 1568890787
    },
    {
        "content": "<p>the api is pretty much string based, so that would be no problem</p>",
        "id": 176087776,
        "sender_full_name": "mw",
        "timestamp": 1568890817
    },
    {
        "content": "<p>That's fair. I think there are some options currently, we just haven't really thought through them. It would be good to do so and have some documentation so that crates like polonius have a guide to integrating with <code>measureme</code>.</p>",
        "id": 176087824,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, I think you are suggesting having some kind of \"interface\" crate (i.e. <code>log</code>) and then an implementation crate, right?</p>",
        "id": 176087829,
        "sender_full_name": "mw",
        "timestamp": 1568890885
    },
    {
        "content": "<p>But I don't think we need to talk about that right now.</p>",
        "id": 176087830,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568890889
    },
    {
        "content": "<p>Yes -- I agree to not needing to discuss right now</p>",
        "id": 176087851,
        "sender_full_name": "simulacrum",
        "timestamp": 1568890909
    },
    {
        "content": "<p>I wonder if it would make sense to split out some of the stuff into <code>measureme-interface</code></p>",
        "id": 176087905,
        "sender_full_name": "mw",
        "timestamp": 1568890930
    },
    {
        "content": "<p>but yes, let's table that for now</p>",
        "id": 176087907,
        "sender_full_name": "mw",
        "timestamp": 1568890937
    },
    {
        "content": "<p>alright, so I think that is the status of the MVP</p>",
        "id": 176087922,
        "sender_full_name": "mw",
        "timestamp": 1568890963
    },
    {
        "content": "<p>the two other things that come up are:</p>",
        "id": 176087926,
        "sender_full_name": "mw",
        "timestamp": 1568890974
    },
    {
        "content": "<p>1. people don't know how to use selfprofiling</p>",
        "id": 176087942,
        "sender_full_name": "mw",
        "timestamp": 1568890992
    },
    {
        "content": "<p>2. they want a feature that tells them where the compiler spends it's time (i.e. on what functions)</p>",
        "id": 176087960,
        "sender_full_name": "mw",
        "timestamp": 1568891025
    },
    {
        "content": "<p>topic 1, ergonomics, is pretty important, I think</p>",
        "id": 176088025,
        "sender_full_name": "mw",
        "timestamp": 1568891061
    },
    {
        "content": "<p>although, the MVP would take away some of the pressure because perf.rlo would do the hard stuff</p>",
        "id": 176088047,
        "sender_full_name": "mw",
        "timestamp": 1568891083
    },
    {
        "content": "<p>it's still rather important though :)</p>",
        "id": 176088080,
        "sender_full_name": "mw",
        "timestamp": 1568891107
    },
    {
        "content": "<p>Personally for the ergonomics side I think it might be worth looping in Cargo folks, they've been doing some pretty good work with cargo -Ztiming and we might be able to integrate self-profile into that fairly easily (since Cargo knows about pids, etc)</p>",
        "id": 176088086,
        "sender_full_name": "simulacrum",
        "timestamp": 1568891109
    },
    {
        "content": "<p>It's a small thing, but the rustc guide on profiling didn't mention <code>-Z self-profile</code> so I added a pointer to our docs <a href=\"https://rust-lang.github.io/rustc-guide/profiling.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/profiling.html\">https://rust-lang.github.io/rustc-guide/profiling.html</a></p>",
        "id": 176088098,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891118
    },
    {
        "content": "<p>interesting. I need to look up what cargo -Ztiming even is :)</p>",
        "id": 176088126,
        "sender_full_name": "mw",
        "timestamp": 1568891156
    },
    {
        "content": "<p>The <code>-Ztiming</code> flag is really cool</p>",
        "id": 176088169,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891172
    },
    {
        "content": "<p>see e.g. benchmarks we definitely see being removed/added over time</p>",
        "id": 176088172,
        "sender_full_name": "simulacrum",
        "timestamp": 1568891177
    },
    {
        "content": "<p>er <a href=\"http://gistpreview.github.io/?4c9e55c90cc58a908b7074a551ce5a89\" target=\"_blank\" title=\"http://gistpreview.github.io/?4c9e55c90cc58a908b7074a551ce5a89\">http://gistpreview.github.io/?4c9e55c90cc58a908b7074a551ce5a89</a></p>",
        "id": 176088177,
        "sender_full_name": "simulacrum",
        "timestamp": 1568891181
    },
    {
        "content": "<p>how much do we care with parity with <code>-Z time-passes</code>, in terms of how much information is captured?</p>",
        "id": 176088203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891194
    },
    {
        "content": "<p>I assume it doesn't really matter for MVP</p>",
        "id": 176088210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891203
    },
    {
        "content": "<p>since people who want the <code>-Z time-passes</code> data can continue to use it</p>",
        "id": 176088217,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891214
    },
    {
        "content": "<p>I think \"not at all\" personally, time-passes is sort of similar but queries are more precise</p>",
        "id": 176088220,
        "sender_full_name": "simulacrum",
        "timestamp": 1568891217
    },
    {
        "content": "<p>(at least, for parts where we have queries, and my understanding is we can approximate them for the areas where we don't with the current profiling infra</p>",
        "id": 176088233,
        "sender_full_name": "simulacrum",
        "timestamp": 1568891238
    },
    {
        "content": "<p>nice! cargo -Ztiming definitely seems to overlap with what I had in mind for multi-crate self-profiling</p>",
        "id": 176088256,
        "sender_full_name": "mw",
        "timestamp": 1568891268
    },
    {
        "content": "<p>I guess my point is more that: If our plan is to eventually tear out the <code>-Z time-passes</code> code, then it might be good to first ensure that <code>-Z self-profile</code> is covering at least the important cases that <code>-Z time-passes</code> did (which may not necessarily mean <em>all</em> the cases it covers)</p>",
        "id": 176088304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891289
    },
    {
        "content": "<p>yes</p>",
        "id": 176088319,
        "sender_full_name": "mw",
        "timestamp": 1568891309
    },
    {
        "content": "<p>we are in no hurry to remove -Ztime-passes though, I think</p>",
        "id": 176088336,
        "sender_full_name": "mw",
        "timestamp": 1568891328
    },
    {
        "content": "<p>but again, that does not seem to be a requirement for the MVP itself.</p>",
        "id": 176088341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891330
    },
    {
        "content": "<p>okay, cool.</p>",
        "id": 176088343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891333
    },
    {
        "content": "<p>so, I think the big task for ergonomics is coming up with a description of what ergonomic usage would even look like</p>",
        "id": 176088388,
        "sender_full_name": "mw",
        "timestamp": 1568891401
    },
    {
        "content": "<p>i.e. what is the workflow we want to have</p>",
        "id": 176088455,
        "sender_full_name": "mw",
        "timestamp": 1568891415
    },
    {
        "content": "<p>I don't think that is something we should discuss here in detail</p>",
        "id": 176088477,
        "sender_full_name": "mw",
        "timestamp": 1568891447
    },
    {
        "content": "<p>but it would be interesting to know if somebody would want to look into that</p>",
        "id": 176088491,
        "sender_full_name": "mw",
        "timestamp": 1568891469
    },
    {
        "content": "<p>I'd like to hear from people who've used or tried to use measureme before. We have a lot of data available now but we should know what people are trying to do with it. Is it just finding slow queries or are there other things our tools should optimize for?</p>",
        "id": 176088594,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891562
    },
    {
        "content": "<p>yes, that sounds smart :)</p>",
        "id": 176088627,
        "sender_full_name": "mw",
        "timestamp": 1568891620
    },
    {
        "content": "<p>so you mean do a general survey?</p>",
        "id": 176088637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891630
    },
    {
        "content": "<p>(maybe on users.rlo ?)</p>",
        "id": 176088643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891641
    },
    {
        "content": "<p>Are general rust users the target audience for measureme?</p>",
        "id": 176088696,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891665
    },
    {
        "content": "<p>(I assumed it would be more people hacking on rustc)</p>",
        "id": 176088702,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891679
    },
    {
        "content": "<p>internals might be the better venue</p>",
        "id": 176088703,
        "sender_full_name": "mw",
        "timestamp": 1568891679
    },
    {
        "content": "<p>oh I suppose its more an internals.rlo thing</p>",
        "id": 176088704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891679
    },
    {
        "content": "<p>I think at this point no, though we may want to pivot to that a little once we have the span-based tracking of cost</p>",
        "id": 176088716,
        "sender_full_name": "simulacrum",
        "timestamp": 1568891695
    },
    {
        "content": "<p>I know a couple people have tried to use measureme but I don't know if they found it useful or not.</p>",
        "id": 176088737,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891726
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  you mentioned using it to investigate incremental performance the other day</p>",
        "id": 176088754,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891745
    },
    {
        "content": "<p>yes</p>",
        "id": 176088760,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891748
    },
    {
        "content": "<p>i had to add more calls (events?) to get the data I needed</p>",
        "id": 176088763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891757
    },
    {
        "content": "<p>I think it still makes sense to come up with a vision ourselves first, right?</p>",
        "id": 176088765,
        "sender_full_name": "mw",
        "timestamp": 1568891758
    },
    {
        "content": "<p>I know <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> was trying to use it over the summer as well.</p>",
        "id": 176088770,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568891760
    },
    {
        "content": "<p>(which is why I've been talking about the workflow for that)</p>",
        "id": 176088818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891768
    },
    {
        "content": "<p>or rather a set of use-cases and then drill down into those</p>",
        "id": 176088849,
        "sender_full_name": "mw",
        "timestamp": 1568891807
    },
    {
        "content": "<p>that's a good point</p>",
        "id": 176088864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891824
    },
    {
        "content": "<p>hm, coming up with the set of use cases might be something that would benefit from asking on internals</p>",
        "id": 176088867,
        "sender_full_name": "mw",
        "timestamp": 1568891828
    },
    {
        "content": "<p>in particular, I can imagine using this for comparing:</p>",
        "id": 176088870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891834
    },
    {
        "content": "<p>1. two different versions of the compiler</p>",
        "id": 176088876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891838
    },
    {
        "content": "<p>but, let's not forget, we are users too :)</p>",
        "id": 176088883,
        "sender_full_name": "mw",
        "timestamp": 1568891848
    },
    {
        "content": "<p>2. two runs of same compiler with different flags</p>",
        "id": 176088887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891852
    },
    {
        "content": "<p>3. a single run of the compiler on some interesting benchmark</p>",
        "id": 176088908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891869
    },
    {
        "content": "<p>4. I suppose one could also use it to observe two runs of same compiler with same flags on two variants of a fixed benchmark.</p>",
        "id": 176088988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891916
    },
    {
        "content": "<p>shall we open a thread on internals, where we just publicly collect use cases?</p>",
        "id": 176088993,
        "sender_full_name": "mw",
        "timestamp": 1568891923
    },
    {
        "content": "<p>... does that sound ... plausibly exhaustive?</p>",
        "id": 176088998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891928
    },
    {
        "content": "<p>and others can chime in</p>",
        "id": 176089001,
        "sender_full_name": "mw",
        "timestamp": 1568891932
    },
    {
        "content": "<p>fair enough.</p>",
        "id": 176089004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568891938
    },
    {
        "content": "<p>I think opening a thread sounds good, though I do feel like that's pretty exhaustive :)</p>",
        "id": 176089020,
        "sender_full_name": "simulacrum",
        "timestamp": 1568891949
    },
    {
        "content": "<p>I think concrete examples of problems people tried to investigate might still be helpful</p>",
        "id": 176089041,
        "sender_full_name": "mw",
        "timestamp": 1568891978
    },
    {
        "content": "<p>i.e. the use cases are still pretty abstract</p>",
        "id": 176089052,
        "sender_full_name": "mw",
        "timestamp": 1568891990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>, would you be up for starting that thread?</p>",
        "id": 176089119,
        "sender_full_name": "mw",
        "timestamp": 1568892025
    },
    {
        "content": "<p>Sure!</p>",
        "id": 176089123,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892033
    },
    {
        "content": "<p>excellent</p>",
        "id": 176089130,
        "sender_full_name": "mw",
        "timestamp": 1568892041
    },
    {
        "content": "<p>alright, we are at 50 minutes</p>",
        "id": 176089141,
        "sender_full_name": "mw",
        "timestamp": 1568892057
    },
    {
        "content": "<p>shall we talk about the other feature people want?</p>",
        "id": 176089160,
        "sender_full_name": "mw",
        "timestamp": 1568892079
    },
    {
        "content": "<p>i.e. assigning compilation time to specific items in your code?</p>",
        "id": 176089189,
        "sender_full_name": "mw",
        "timestamp": 1568892097
    },
    {
        "content": "<p>Yes, I think that's probably related to some of the feedback we're going to get on irlo</p>",
        "id": 176089194,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892107
    },
    {
        "content": "<p>I think that one would need quite a bit of planning</p>",
        "id": 176089210,
        "sender_full_name": "mw",
        "timestamp": 1568892122
    },
    {
        "content": "<p>In some sense, we're already tracking it (or could be) as an \"input\" to queries via tcx.at(span).query(...)</p>",
        "id": 176089266,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892152
    },
    {
        "content": "<p>in some sense, yes :)</p>",
        "id": 176089284,
        "sender_full_name": "mw",
        "timestamp": 1568892171
    },
    {
        "content": "<p>so one option might be to just dump all those spans into the data we're collecting and then dump the span table at compilation end or so</p>",
        "id": 176089307,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892181
    },
    {
        "content": "<p>it's still complicated though, because queries are cached</p>",
        "id": 176089312,
        "sender_full_name": "mw",
        "timestamp": 1568892184
    },
    {
        "content": "<p>I would personally be really happy with an MVP that ignored incremental to start</p>",
        "id": 176089331,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892207
    },
    {
        "content": "<p>me too</p>",
        "id": 176089342,
        "sender_full_name": "mw",
        "timestamp": 1568892225
    },
    {
        "content": "<p>but queries are cached even in non-incremental mode</p>",
        "id": 176089356,
        "sender_full_name": "mw",
        "timestamp": 1568892235
    },
    {
        "content": "<p>sorry, what does \"ignore incremental\" mean?</p>",
        "id": 176089358,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568892235
    },
    {
        "content": "<p>as in, you can't trust the output you get when incremental compilation is turned on?</p>",
        "id": 176089412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568892259
    },
    {
        "content": "<p>it seems like we can just attribute to all spans loosely that a query is run with, right?</p>",
        "id": 176089417,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892262
    },
    {
        "content": "<p>query invocations form a directed acyclic graph</p>",
        "id": 176089420,
        "sender_full_name": "mw",
        "timestamp": 1568892268
    },
    {
        "content": "<p>I think this topic is too complicated for this meeting</p>",
        "id": 176089464,
        "sender_full_name": "mw",
        "timestamp": 1568892314
    },
    {
        "content": "<p>I think the issue is that if, for example, we ask for <code>optimized_mir(foo)</code> twice, the first time the query runs, it will take some amount of time. But the second time, it will already be cached in the DepGraph so it will be basically free.</p>",
        "id": 176089474,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892326
    },
    {
        "content": "<p>So counting all of the time for the first place that asked for the query and one for the second isn't correct.</p>",
        "id": 176089497,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892352
    },
    {
        "content": "<p>Because removing the first site might not actually improve compilation time.</p>",
        "id": 176089534,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892363
    },
    {
        "content": "<p>so, we know there is interest in this feature, but when do we want to spend time on it?</p>",
        "id": 176089543,
        "sender_full_name": "mw",
        "timestamp": 1568892369
    },
    {
        "content": "<p>hm, but presumably it's rarely the case that the span changes across those two invocations?</p>",
        "id": 176089546,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892373
    },
    {
        "content": "<p>I think it is sort of MVP 2.0</p>",
        "id": 176089552,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892383
    },
    {
        "content": "<p>yeah</p>",
        "id": 176089590,
        "sender_full_name": "mw",
        "timestamp": 1568892446
    },
    {
        "content": "<blockquote>\n<p>I think the issue is that if, for example, we ask for <code>optimized_mir(foo)</code> twice, the first time the query runs, it will take some amount of time. But the second time, it will already be cached in the DepGraph so it will be basically free.</p>\n</blockquote>\n<p>Isn't this info incorporated into the presentation in some fashion? Or am I misremembering?</p>",
        "id": 176089607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568892463
    },
    {
        "content": "<p>yes, it is</p>",
        "id": 176089624,
        "sender_full_name": "mw",
        "timestamp": 1568892476
    },
    {
        "content": "<p>we can track of the whole graph, including cache hits</p>",
        "id": 176089680,
        "sender_full_name": "mw",
        "timestamp": 1568892500
    },
    {
        "content": "<p>the information is there, we just need to find out how to usefully interpret it</p>",
        "id": 176089723,
        "sender_full_name": "mw",
        "timestamp": 1568892519
    },
    {
        "content": "<p>so is this really a matter of improving the presentation, so that user expectations are managed better?</p>",
        "id": 176089724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568892521
    },
    {
        "content": "<p>I think it's mostly a matter of communicating that to the user</p>",
        "id": 176089725,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892522
    },
    {
        "content": "<p>Most people seem to want to see something like </p>\n<div class=\"codehilite\"><pre><span></span>$ summarize code-profile /path/to/rustc-results\n\nTotal time in rustc: 120 seconds\n\n----------------------------------------\n| % time | Item                        |\n| ------ | -----------------------------\n| 20.4%  | example::foo::bar::clone()  |\n| 10.2%  | example::baz::widget::bla() |\n\n(more rows)\n</pre></div>",
        "id": 176089766,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892569
    },
    {
        "content": "<p>Accurately communicating where time <em>was</em> spent but also how to <em>actually</em> improve compilation time in such a simple format seems very difficult.</p>",
        "id": 176089821,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892604
    },
    {
        "content": "<p>the feature is pretty extensive, actually. a whole sub-product kindof</p>",
        "id": 176089847,
        "sender_full_name": "mw",
        "timestamp": 1568892643
    },
    {
        "content": "<p>I also think most people might be okay with us not initially helping with the latter</p>",
        "id": 176089854,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892651
    },
    {
        "content": "<p>Like, if I know the function then I can get LLVM IR, etc and do that work myself more readily</p>",
        "id": 176089877,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892687
    },
    {
        "content": "<p>I get the sense that (some) people want this to make changes to their code so it compiles faster. If we don't provide data that helps them achieve that, the tool won't be useful to them.</p>",
        "id": 176089956,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892758
    },
    {
        "content": "<p>would it be helpful to have a place where we can just collect ideas and thoughts about this feature?</p>",
        "id": 176089958,
        "sender_full_name": "mw",
        "timestamp": 1568892761
    },
    {
        "content": "<p>but where? :)</p>",
        "id": 176090003,
        "sender_full_name": "mw",
        "timestamp": 1568892839
    },
    {
        "content": "<p>GH issue?</p>",
        "id": 176090048,
        "sender_full_name": "mw",
        "timestamp": 1568892845
    },
    {
        "content": "<p>topic here ?</p>",
        "id": 176090050,
        "sender_full_name": "mw",
        "timestamp": 1568892851
    },
    {
        "content": "<p>Maybe a dedicated repo? Similar to unsafe code guidelines etc</p>",
        "id": 176090061,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892865
    },
    {
        "content": "<p>Is this feature on topic for the irlo post?</p>",
        "id": 176090069,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892876
    },
    {
        "content": "<p>I think that has worked well for us as a community</p>",
        "id": 176090078,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>, not quite</p>",
        "id": 176090085,
        "sender_full_name": "mw",
        "timestamp": 1568892891
    },
    {
        "content": "<p>although it will probably come up</p>",
        "id": 176090092,
        "sender_full_name": "mw",
        "timestamp": 1568892900
    },
    {
        "content": "<p>(There is an issue for the feature here <a href=\"https://github.com/rust-lang/measureme/issues/51\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/issues/51\">https://github.com/rust-lang/measureme/issues/51</a>)</p>",
        "id": 176090100,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568892903
    },
    {
        "content": "<p>We could discuss on that issue for now</p>",
        "id": 176090123,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , in that repo, where would the discussion happen?</p>",
        "id": 176090128,
        "sender_full_name": "mw",
        "timestamp": 1568892950
    },
    {
        "content": "<p>Issues for the most part</p>",
        "id": 176090185,
        "sender_full_name": "simulacrum",
        "timestamp": 1568892969
    },
    {
        "content": "<p>yes, let's stick to the existing GH issue for now</p>",
        "id": 176090186,
        "sender_full_name": "mw",
        "timestamp": 1568892971
    },
    {
        "content": "<p>and ask folks like <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> to post their wishlist/ideas there</p>",
        "id": 176090219,
        "sender_full_name": "mw",
        "timestamp": 1568893020
    },
    {
        "content": "<p>alright, does everybody feel that they've got enough action items for the immediate future?</p>",
        "id": 176090324,
        "sender_full_name": "mw",
        "timestamp": 1568893114
    },
    {
        "content": "<p>I have the event review + PR for me</p>",
        "id": 176090345,
        "sender_full_name": "mw",
        "timestamp": 1568893135
    },
    {
        "content": "<p>I think so</p>",
        "id": 176090362,
        "sender_full_name": "simulacrum",
        "timestamp": 1568893156
    },
    {
        "content": "<p>perf.rlo updates for <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 176090365,
        "sender_full_name": "mw",
        "timestamp": 1568893158
    },
    {
        "content": "<p>(my action item is to start the pre-triage for the rustc meeting. oh wait, that's probably not what you meant)</p>",
        "id": 176090373,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568893166
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> will post about ergonomics on internals</p>",
        "id": 176090385,
        "sender_full_name": "mw",
        "timestamp": 1568893172
    },
    {
        "content": "<p>I'll post the irlo thread, write up meeting notes, and work with <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> on perf.rlo</p>",
        "id": 176090394,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568893187
    },
    {
        "content": "<p>((i will try to at least provide feedback with my own \"user story\" on the internals post))</p>",
        "id": 176090406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568893200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, very good!</p>",
        "id": 176090464,
        "sender_full_name": "mw",
        "timestamp": 1568893220
    },
    {
        "content": "<p>if you want to be extra helpful then you could also describe there how using self-profiling would have looked like in the ideal world for your use case</p>",
        "id": 176090521,
        "sender_full_name": "mw",
        "timestamp": 1568893291
    },
    {
        "content": "<p>/me merges back into PGO debugging for the rest of the week <span aria-label=\"ghost\" class=\"emoji emoji-1f47b\" role=\"img\" title=\"ghost\">:ghost:</span></p>",
        "id": 176090713,
        "sender_full_name": "mw",
        "timestamp": 1568893458
    },
    {
        "content": "<p>thanks for attending the meeting everyone !!! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 176090726,
        "sender_full_name": "mw",
        "timestamp": 1568893495
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 176090728,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568893499
    },
    {
        "content": "<p>Posted on irlo <a href=\"https://internals.rust-lang.org/t/compiler-profiling-survey/10969\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/compiler-profiling-survey/10969\">https://internals.rust-lang.org/t/compiler-profiling-survey/10969</a></p>",
        "id": 176105051,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1568903422
    }
]