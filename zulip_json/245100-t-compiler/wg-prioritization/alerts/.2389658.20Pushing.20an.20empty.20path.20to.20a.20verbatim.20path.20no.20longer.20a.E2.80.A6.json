[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/89658\">#89658</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 256678860,
        "sender_full_name": "triagebot",
        "timestamp": 1633659533
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/89658\">#89658</a>'s prioritization request has been removed.</p>",
        "id": 256678861,
        "sender_full_name": "triagebot",
        "timestamp": 1633659534
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/89658\">#89658</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 256678863,
        "sender_full_name": "triagebot",
        "timestamp": 1633659535
    },
    {
        "content": "<p>Relevant discussion <a class=\"stream-topic\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs/topic/windows.20verbatim.20paths.2C.20normalization.20vs.2E.20canonicalize.20etc.2E\">#t-libs &gt; windows verbatim paths, normalization vs. canonicalize etc.</a> <br>\nI /think/ the mentioned PR <a href=\"https://github.com/rust-lang/rust/issues/89270\">#89270</a> implemented the desired behaviour of handling Windows UNC paths.</p>\n<p>Well, while I was pondering it this was a regression or the new desired behaviour, PR author jumped in with a fix, so it's a regression.</p>",
        "id": 256702588,
        "sender_full_name": "apiraino",
        "timestamp": 1633680064
    },
    {
        "content": "<p>in this case I'd say <code>P-high</code> because breaking production code</p>",
        "id": 256702612,
        "sender_full_name": "apiraino",
        "timestamp": 1633680077
    },
    {
        "content": "<p>this is T-libs stuff, I didn't realize that... <em>sigh</em></p>",
        "id": 256702842,
        "sender_full_name": "apiraino",
        "timestamp": 1633680221
    },
    {
        "content": "<p>I've just added a comment to <a href=\"https://github.com/rust-lang/rust/issues/89658\">https://github.com/rust-lang/rust/issues/89658</a></p>\n<p>1.</p>\n<p>I've created a fix for normpath: <a href=\"https://github.com/dylni/normpath/pull/4\">https://github.com/dylni/normpath/pull/4</a></p>\n<p>2</p>\n<p>Appending directory separators using <code>.push(\"\")</code> is a debatable.</p>\n<p>3</p>\n<p>I don't believe to require a fix. Since verbatim paths have special handling to ensure the returned path normalized, yes there are differences. The output of <code>.push()</code> on verbatim and non-verbatim paths will have to be different.</p>\n<p>Consider:</p>\n<div class=\"codehilite\"><pre><span></span><code>   let mut foo = PathBuf::from(&quot;/tmp/foo&quot;);\n   foo.push(&quot;.&quot;);\n   let mut bar = PathBuf::from(&quot;\\\\?\\tmp\\foo&quot;);\n   bar.push(&quot;.&quot;);\n</code></pre></div>\n<p>Since bar is normalized, bar will be <code>\\\\?\\tmp\\foo</code>, yet foo will be <code>/tmp/foo/.</code>.</p>\n<p>4</p>\n<p>There is a host of issues which <a href=\"https://github.com/rust-lang/rust/pull/89270\">https://github.com/rust-lang/rust/pull/89270</a> fixes. So, there might be breakage in some edge cases, but counter this to the list of issues it resolves.</p>",
        "id": 256704405,
        "sender_full_name": "Sean Young",
        "timestamp": 1633681115
    },
    {
        "content": "<blockquote>\n<p>There is a host of issues which <a href=\"https://github.com/rust-lang/rust/issues/89270\">#89270</a> fixes. So, there might be breakage in some edge cases, but counter this to the list of issues it resolves.</p>\n</blockquote>\n<p>was exactly my thought.</p>\n<p>Thank you <span class=\"user-mention\" data-user-id=\"445327\">@Sean Young</span> for jumping in very quickly with useful insights and context!</p>",
        "id": 256705775,
        "sender_full_name": "apiraino",
        "timestamp": 1633681798
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/89658\">#89658</a>'s prioritization request has been removed.</p>",
        "id": 256705949,
        "sender_full_name": "triagebot",
        "timestamp": 1633681866
    },
    {
        "content": "<p>I've also created this pr, so that the existing behaviour is maintianed for <code>.push(\"\")</code>:</p>\n<p><a href=\"https://github.com/rust-lang/rust/pull/89665\">https://github.com/rust-lang/rust/pull/89665</a></p>",
        "id": 256711835,
        "sender_full_name": "Sean Young",
        "timestamp": 1633685022
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/89658\">#89658</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 259019469,
        "sender_full_name": "triagebot",
        "timestamp": 1635195411
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/89658\">#89658</a>'s prioritization request has been removed.</p>",
        "id": 259019546,
        "sender_full_name": "triagebot",
        "timestamp": 1635195459
    }
]