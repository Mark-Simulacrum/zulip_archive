[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/91633\">#91633</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 266132001,
        "sender_full_name": "triagebot",
        "timestamp": 1640559544
    },
    {
        "content": "<p>Another case of an ICE instead of printing the error. By reading <a href=\"https://github.com/rust-lang/rust/issues/91633#issuecomment-988321976\">this comment</a>, I get the idea that it's a regression due to a new behaviour introduced long ago.</p>\n<p>I think perhaps <code>P-medium</code> or since it's always been there maybe even less?</p>",
        "id": 266167163,
        "sender_full_name": "apiraino",
        "timestamp": 1640606181
    },
    {
        "content": "<p>I'd go with <code>P-medium</code> on general principle.</p>",
        "id": 266230132,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1640665778
    },
    {
        "content": "<p>It's an ICE before an error is generated on code that isn't obviously invalid.</p>",
        "id": 266230223,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1640665888
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/91633\">#91633</a>'s prioritization request has been removed.</p>",
        "id": 266243520,
        "sender_full_name": "triagebot",
        "timestamp": 1640682714
    },
    {
        "content": "<p>Sorry, I've been busy so I haven't had the time to chime in.<br>\nThe error has been around for a while, but while it was weird to hit in the past (no need to write <code>where [T] : Index...</code> bounds before), I believe that nowadays it will be a more recurring error: while there was no real reason to write such a bound before, now there is, given the possibility to write custom <code>Index&lt;MyIdx&gt;</code> impls for <code>[T]</code>. <strong>This in turn, makes <code>usize</code> indexing impossible for <code>[T]</code></strong> (inherent indexing operation shadowed by that of the trait) <strong>which is what leads to ppl writing that bound</strong> (the <code>where [T] : Index&lt;usize&gt;</code>, expressing \"where <code>[T]</code> can be indexed by a <code>usize</code> <em>and I don't care what the return type is</em>\". Granted, I showcased a \"nicer ice error msg\" by providing that <code>U</code> name for the indexing operation's output, but even then, <code>U</code>, or the unnamed type, should just be assumed to be <code>T</code>, <strong>and cause no error</strong> (not even a compiler error, I mean). <em>The fact it ices is thus genuinely concerning</em>.</p>\n<p>I think something between medium and high makes sense, so there is no need, necessarily, to change it, but I just wanted to make sure that the idea that this is a genuine \"valid code\"-hindering concern, one which will happen, 100% of the time, every time somebody tries to implement their custom indexing for slices (which is the very rare but not unheard of thing).</p>",
        "id": 266301881,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1640734547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232018\">@Daniel Henry-Mantilla</span> thank you so much for stopping by and providing this great explaination!</p>",
        "id": 266370886,
        "sender_full_name": "apiraino",
        "timestamp": 1640805151
    },
    {
        "content": "<p>Thank you people for taking care of all these prioritizations <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 266406980,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1640846499
    }
]