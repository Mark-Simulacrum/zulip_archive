[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/88888\">#88888</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 252995365,
        "sender_full_name": "triagebot",
        "timestamp": 1631462188
    },
    {
        "content": "<p>I like the issue number :D</p>",
        "id": 253002456,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1631470203
    },
    {
        "content": "<p>I was about to post the same comment :D</p>",
        "id": 253047400,
        "sender_full_name": "apiraino",
        "timestamp": 1631517432
    },
    {
        "content": "<p>this said here the issue is with const generics, which if I understand the context are still a work in progress. I'm not sure if breaking changes are expected. So probably my naive question is, should the sample provided will be supposed to work?</p>",
        "id": 253047825,
        "sender_full_name": "apiraino",
        "timestamp": 1631517714
    },
    {
        "content": "<p>while technically correct <a href=\"https://github.com/rust-lang/rust/issues/88888#issuecomment-917667360\">the comment from Mark</a> is not enough for me to understand :-)</p>",
        "id": 253047924,
        "sender_full_name": "apiraino",
        "timestamp": 1631517760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"250987\">apiraino</span> <a href=\"#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/.2388888.20stability.20break.20in.20rust.201.2E54.3A.20generic.20.60Self.60.20types.20a.E2.80.A6/near/253047825\">said</a>:</p>\n<blockquote>\n<p>this said here the issue is with const generics, which if I understand the context are still a work in progress. I'm not sure if breaking changes are expected. So probably my naive question is, should the sample provided will be supposed to work?</p>\n</blockquote>\n<p>generic constants like: <code>N + 1</code> or <code>Self::ASSOC</code> (like in the issue) are not allowed to be used as arguments to const generics. So <code>foo::&lt;{ N + 1 }&gt;()</code> or <code>foo::&lt;{ Self::ASSOC }&gt;()</code> are gated behind <code>feature(generic_const_exprs)</code></p>",
        "id": 253048865,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1631518388
    },
    {
        "content": "<p>I guess whatever stdarch was using to emulate const generics allowed this so swapping over is a breaking change (I have not actually looked into this but given what PR regressed this it seems likely)</p>",
        "id": 253048925,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1631518426
    },
    {
        "content": "<p>ah great explaination! thank you :)</p>",
        "id": 253049713,
        "sender_full_name": "apiraino",
        "timestamp": 1631518897
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span></p>",
        "id": 253088853,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631539672
    },
    {
        "content": "<p>Basically, stdarch uses a hack (required for backwards-compat) to convert normal arguments to <code>::&lt;VAL&gt;</code> constant generics.</p>",
        "id": 253091512,
        "sender_full_name": "Amanieu",
        "timestamp": 1631540719
    },
    {
        "content": "<p>I'll stay on the safe side and assign a P-high, we have some code suffering from <a href=\"https://github.com/rust-lang/rust/issues/83167\">#83167</a> (iiuc) that used to work</p>",
        "id": 254437711,
        "sender_full_name": "apiraino",
        "timestamp": 1632344112
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/88888\">#88888</a>'s prioritization request has been removed.</p>",
        "id": 254437742,
        "sender_full_name": "triagebot",
        "timestamp": 1632344133
    }
]