[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/80309\">#80309</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 220738012,
        "sender_full_name": "triagebot",
        "timestamp": 1608674037
    },
    {
        "content": "<p>Is this unsound? I'm always confused</p>",
        "id": 220738682,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608674536
    },
    {
        "content": "<p>I wonder if this is a regression</p>",
        "id": 220739016,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608674784
    },
    {
        "content": "<p>No, this seems to happen since 1.16.0 when <code>ptr_wrapping_offset</code> was stabilized</p>",
        "id": 220740463,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608675768
    },
    {
        "content": "<p>P-critical I guess? Illegal instruction using only safe code seems bad</p>",
        "id": 220740701,
        "sender_full_name": "Stu",
        "timestamp": 1608675942
    },
    {
        "content": "<p>Right, but I think it must be hard to hit in real code</p>",
        "id": 220740801,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608675988
    },
    {
        "content": "<p>Yea that’s true</p>",
        "id": 220740855,
        "sender_full_name": "Stu",
        "timestamp": 1608676027
    },
    {
        "content": "<p>I was wondering if I could try to look at the LLVM IR</p>",
        "id": 220740904,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676070
    },
    {
        "content": "<p>Turns out this simple program generates 2182 lines (!) of LLVM IR with <code>--emit=llvm-ir</code> <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 220740965,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676096
    },
    {
        "content": "<p>I wasn't prepared :D</p>",
        "id": 220740975,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@Léo Lanteri Thauvin</span> it should be a lot smaller if you remove the println</p>",
        "id": 220741201,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608676258
    },
    {
        "content": "<p>and compile with panic=abort</p>",
        "id": 220741205,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608676261
    },
    {
        "content": "<p>Ah, yes, that explains things :)</p>",
        "id": 220741228,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676274
    },
    {
        "content": "<p>Also I need to use <code>-O</code> <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 220741339,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676331
    },
    {
        "content": "<p>well if you use -O then you see it <em>after</em> the miscompilation</p>",
        "id": 220741377,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608676352
    },
    {
        "content": "<p>which may or may not be what you want</p>",
        "id": 220741384,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608676356
    },
    {
        "content": "<p>The miscompilation probably happens in LLVM, right?</p>",
        "id": 220741425,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676381
    },
    {
        "content": "<p>I would be shocked if it happened in mir-opts</p>",
        "id": 220741445,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608676392
    },
    {
        "content": "<p>I know pretty much nothing about codegen <span aria-label=\"tired\" class=\"emoji emoji-1f614\" role=\"img\" title=\"tired\">:tired:</span></p>",
        "id": 220741464,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676403
    },
    {
        "content": "<p>especially since it's release-only</p>",
        "id": 220741465,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608676403
    },
    {
        "content": "<p>Does <code>--emit=llvm-ir</code> emit the IR before or after the LLVM passes?</p>",
        "id": 220741559,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676445
    },
    {
        "content": "<p>after; you can disable LLVM passes with <code>-Cno-prepopulate-passes</code></p>",
        "id": 220741659,
        "sender_full_name": "tm",
        "timestamp": 1608676523
    },
    {
        "content": "<p>Ah, alright thanks :)</p>",
        "id": 220741695,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676550
    },
    {
        "content": "<p><code>-Copt-level=1</code> still works (for me), so it might be better starting point for bisection</p>",
        "id": 220741825,
        "sender_full_name": "tm",
        "timestamp": 1608676638
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/80309#issuecomment-749813415\">https://github.com/rust-lang/rust/issues/80309#issuecomment-749813415</a> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220742205,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1608676733
    },
    {
        "content": "<p>thinking about the priority, would it make sense a <code>P-high</code> (although there is a repro also on safe code). I can't figure out the impact on real code (and if warrants a <code>P-critical</code>)</p>",
        "id": 220777989,
        "sender_full_name": "apiraino",
        "timestamp": 1608720304
    },
    {
        "content": "<p>I think starting with <code>P-critical</code> makes the most sense</p>",
        "id": 220787514,
        "sender_full_name": "lcnr",
        "timestamp": 1608729475
    },
    {
        "content": "<p>Yea I agree. Even if it’s super hard to hit it in real code it shouldn’t be possible</p>",
        "id": 220787876,
        "sender_full_name": "Stu",
        "timestamp": 1608729755
    },
    {
        "content": "<p>because of the safe code reproducible?</p>",
        "id": 220787887,
        "sender_full_name": "apiraino",
        "timestamp": 1608729772
    },
    {
        "content": "<p>Yes</p>",
        "id": 220787999,
        "sender_full_name": "Stu",
        "timestamp": 1608729845
    }
]