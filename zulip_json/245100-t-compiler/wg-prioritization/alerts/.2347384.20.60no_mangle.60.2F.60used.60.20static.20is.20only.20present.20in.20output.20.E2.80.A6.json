[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/47384\">#47384</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 268792764,
        "sender_full_name": "triagebot",
        "timestamp": 1642737231
    },
    {
        "content": "<p>Not sure why is this prioritized.</p>",
        "id": 268801937,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642747326
    },
    {
        "content": "<p>Well, it is a bug, and someone asked us to give it a priority.</p>",
        "id": 268807971,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642753166
    },
    {
        "content": "<p><code>P-medium</code>? The behavior is somewhat counterintuitive, as shown by the number of people who've had the problem over the years. On the other hand... well, it's been around forever, and I can't see us giving it a <code>P-high</code>. There's no rush to fix this, though it will certainly be nice when it gets fixed.</p>",
        "id": 268808379,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642753490
    },
    {
        "content": "<p>I tested the code and it seems like:</p>\n<ul>\n<li>Regardless whether the lines are commented out, <code>STATIC</code> won't be present in the final binary (different from what the issue says)</li>\n<li>Regardless whether the lines are commented out, <code>STATIC</code> will be present in the object file.</li>\n</ul>",
        "id": 268937959,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642828206
    },
    {
        "content": "<p>The RFC of <code>#[used]</code> says:</p>\n<blockquote>\n<p>The #[used] attribute can be applied to static variables to keep them in the object files produced by rustc, even in the presence of LTO. Note that this does not mean that the static variable will make its way into the binary file emitted by the linker as the linker is free to drop symbols that it deems unused. In other words, the #[used] attribute does not affect the behavior of the linker.</p>\n</blockquote>",
        "id": 268937964,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642828227
    },
    {
        "content": "<p>Therefore I think this is working as intended.</p>",
        "id": 268937970,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642828235
    },
    {
        "content": "<p>Well, the important thing is that rustc was dropping it (or that's my reading, anyway).</p>",
        "id": 268938325,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642828826
    },
    {
        "content": "<p>But if it isn't anymore, than we're good.</p>",
        "id": 268938328,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642828842
    },
    {
        "content": "<p><code>E-needs-test</code>? How doable is it write a test for this?</p>",
        "id": 268938339,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642828868
    },
    {
        "content": "<p>There is already a test that confirms that a <code>used</code> variable is present in object file. The behaviour changes probably are all linking related.</p>",
        "id": 268938585,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642829283
    },
    {
        "content": "<p>Alright. Reading your latest comment in the issue, how about we <code>I-lang-nominated</code> this and let them decide what, if anything, to do with it?</p>",
        "id": 268940349,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642831982
    },
    {
        "content": "<p>I agree that the current behavior does seem to match the RFC. The question is whether the RFC text matches what the lang team thinks the behavior should be.</p>",
        "id": 268940497,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642832223
    },
    {
        "content": "<p>I'm just going to do it.</p>",
        "id": 268941891,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642834463
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/47384\">#47384</a>'s prioritization request has been removed.</p>",
        "id": 268942183,
        "sender_full_name": "triagebot",
        "timestamp": 1642834776
    },
    {
        "content": "<p><em>sighs</em></p>",
        "id": 268943065,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642835957
    },
    {
        "content": "<p>Well, that latest comment just made things a fair bit more complicated.</p>",
        "id": 268943073,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642835970
    },
    {
        "content": "<p>I don't know whether to suggest opening a new issue or ask them to post more details on the existing issue. I also don't know whether this needs to be <code>I-compiler-nominated</code> as well.</p>",
        "id": 268943271,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642836265
    },
    {
        "content": "<p>I'll leave it for now and see what others have to say.</p>",
        "id": 268943294,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642836304
    },
    {
        "content": "<p>/me wonder how useful is \"used\" compared to \"retain\" semantics (disregarding the lack of support of latter in old toolchains)</p>",
        "id": 268943353,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642836377
    },
    {
        "content": "<p>Retain semantics are added in binutils 2.36 and LLD 13, which is pretty bleeding edge.</p>",
        "id": 268943368,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642836439
    },
    {
        "content": "<p>Anyway, that's the topic for lang/compiler teams.</p>",
        "id": 268943371,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642836465
    },
    {
        "content": "<p>Would you suggest nominating for compiler as well?</p>",
        "id": 268943416,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642836496
    },
    {
        "content": "<p>Also, yes, that is definitely pretty bleeding edge.</p>",
        "id": 268943420,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642836530
    },
    {
        "content": "<p>I think it's important that the lang team is aware of implementation limitations for this case, because it interacts with other toolchains.</p>",
        "id": 268943489,
        "sender_full_name": "Gary Guo",
        "timestamp": 1642836603
    },
    {
        "content": "<p>And it seems like the compiler team is probably best positioned to explore that with them.</p>",
        "id": 268943506,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642836662
    },
    {
        "content": "<p>Okay, done. Now at least if I made a mistake it will be one of consulting too many people, which is probably better than the converse.</p>",
        "id": 268943837,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1642837253
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"417924\">@inquisitivecrystal</span> and <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span> for the analysis. The <code>I-prioritize</code> was assigned by <span class=\"user-mention\" data-user-id=\"116458\">@Charles Lew</span>, I think because the stream of issues pointing to it, it seems people keep on tripping on this. <br>\nDiscussing during <code>T-compiler</code> meeting will help us frame this issue and find an actionable</p>",
        "id": 268953492,
        "sender_full_name": "apiraino",
        "timestamp": 1642851747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> Can you make sure this gets on the compiler team's agenda for next week? In particular,  <a href=\"https://github.com/rust-lang/rust/issues/47384#issuecomment-1032974536\">this comment</a> seems to suggest that there is a regression fix that needs assignment by T-compiler. Unless it's already happened, and I'm missing it somehow.</p>",
        "id": 274092228,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1646380447
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/93791\">#93791</a> has been claimed to be a fix, but it doesn't seem to target the LLVM related regression, and it is also unlikely to be merged in its current state.</p>",
        "id": 274092421,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1646380599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"417924\">@inquisitivecrystal</span> thanks for the ping! ok, I will readd the <code>I-compiler-nomination</code> (that issue was discussed about <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-02-03.20.2354818/near/270571674\">a month ago</a>.</p>\n<p>Self-note: <a href=\"https://github.com/rust-lang/rust/issues/47384\">#47384</a> is also mentioned in <a href=\"https://github.com/rust-lang/rust/issues/94419\">#94419</a></p>",
        "id": 274200486,
        "sender_full_name": "apiraino",
        "timestamp": 1646434906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"417924\">@inquisitivecrystal</span> last week t-compiler had a quick look at this issue. The meeting was quite packed so tbh we were at the last seconds<br>\n<a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274855448\">https://rust-lang.zulipchat.com/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202022-03-10.20.2354818/near/274855448</a></p>\n<p>I am not 100% sure the nomination was discussed with all the elements on the table, in the rush we may have missed the context that you tried to suggest in this zulip topic (which - alas - I just linked without putting it more prominent).</p>\n<p>What do you think?</p>\n<p>(btw, sorry for this late comment , wanted to mention this earlier)</p>",
        "id": 275564666,
        "sender_full_name": "apiraino",
        "timestamp": 1647458471
    },
    {
        "content": "<p><em>sighs in frustration</em></p>",
        "id": 275599167,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647481877
    },
    {
        "content": "<p>I can't believe that this very important regression has gotten, basically, lost in the paperwork for over a month.</p>",
        "id": 275599227,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647481935
    },
    {
        "content": "<p>I'm not blaming you or anyone else, but it's intensely frustrating.</p>",
        "id": 275599247,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647481981
    },
    {
        "content": "<p>The problem is that the issue is so darn tangled at this point. But I thought the lang team's \"yep, this is definitely a regression\" comment would be enough,</p>",
        "id": 275599296,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647482046
    },
    {
        "content": "<p>Okay, the T-compiler meeting for this week hasn't happened yet. That makes me a bit calmer. I'd forgotten which day it was on.</p>",
        "id": 275599416,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647482170
    },
    {
        "content": "<p>Okay, basically, there's a <a href=\"https://github.com/rust-lang/rust/issues/47384#issuecomment-1032974536\">regression here that was introduced that may have something to do with LLVM</a>.</p>",
        "id": 275599696,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647482500
    },
    {
        "content": "<p>No one seems to be entirely sure of what actually happened. The most compelling explanation I've heard is that we've switched from emitting llvm.used to llvm.compiler.used on all platforms, and the fix would be to only do that on ELF and still emit llvm.used everywhere else.</p>",
        "id": 275599972,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647482835
    },
    {
        "content": "<p>The reason there isn't a clean, separate issue is that I at least don't have enough clue what's going on to file one. I don't know precisely what broke and I don't know what the precise failure cases are. If anyone does, they haven't filed a new issue either. We could certainly ask them to if need be.</p>",
        "id": 275600043,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647482940
    },
    {
        "content": "<p>But it sounds like the actual regression that the lang team has identified broke a lot of things, and thus should probably be considered at least P-high and probably P-critical. We didn't guarantee the only behavior, but a decent portion of the ecosystem was relying on it to do things that are hard to do any other way.</p>",
        "id": 275600146,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647483036
    },
    {
        "content": "<p>I don't know how to be helpful beyond \"this needs investigating\", given that I don't have enough visibility of the problem.</p>",
        "id": 275600190,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647483100
    },
    {
        "content": "<p>thank you so much <span class=\"user-mention\" data-user-id=\"417924\">@inquisitivecrystal</span> for your help (I feel so sorry about these bumps getting in the way, I could have helped more). Today I will keep a \"lighter\" agenda to besure this gets discussed with the proper context.</p>\n<p>side note: last week the US <a href=\"https://www.timeanddate.com/time/change/usa\">switched to DST</a> so the t-compiler meeting will be at <time datetime=\"2022-03-17T14:00:00Z\">2022-03-17T10:00:00-04:00</time></p>",
        "id": 275620431,
        "sender_full_name": "apiraino",
        "timestamp": 1647506229
    },
    {
        "content": "<p>I apologize for my earlier irritation. I've calmed down now.</p>",
        "id": 275648630,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1647522258
    },
    {
        "content": "<p>no need to :) it's totally understable</p>",
        "id": 275648757,
        "sender_full_name": "apiraino",
        "timestamp": 1647522314
    }
]