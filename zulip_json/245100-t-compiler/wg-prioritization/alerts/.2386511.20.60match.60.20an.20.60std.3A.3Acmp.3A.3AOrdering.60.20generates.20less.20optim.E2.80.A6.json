[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/86511\">#86511</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 243363721,
        "sender_full_name": "triagebot",
        "timestamp": 1624271540
    },
    {
        "content": "<p>hmm, just looking at assembly but it seems bad</p>",
        "id": 243380443,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1624281627
    },
    {
        "content": "<p>marked as regression-from-stable-to-beta as 1.54.0 has this regression</p>",
        "id": 243380646,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1624281721
    },
    {
        "content": "<p>There's been no bisection across all linked issues</p>",
        "id": 243494874,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1624356440
    },
    {
        "content": "<p>I had a go a few hours ago, but I couldn't figure out how to get the difference to show up in a way I could distinguish. :/ Although it might be a target specific thing, there's a fair chance that it was just my inexperience looking at assembly.</p>",
        "id": 243495706,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1624356982
    },
    {
        "content": "<p>Should 2 of these be closed as dupliciates in favor of the third? Or are they distinct?</p>",
        "id": 243749176,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1624518950
    },
    {
        "content": "<p>I might be inclined to go with <code>P-high</code>. It's a performance regression bad enough that 3 people noticed, so it merits a very high priority. At the same time, I don't think performance regressions are <code>P-critical</code> unless they're, well, critical. It doesn't seem like this one is quite at that level, given how narrow the case where it applies is.</p>",
        "id": 243749396,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1624519100
    },
    {
        "content": "<p>hm .. indeed this also looks to me as a duplicate. I'll try getting more eyes on these issues, seems they passed under the radar</p>",
        "id": 243754985,
        "sender_full_name": "apiraino",
        "timestamp": 1624523143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">Léo Lanteri Thauvin</span> <a href=\"#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/.2386511.20.60match.60.20an.20.60std.3A.3Acmp.3A.3AOrdering.60.20generates.20less.20optim.E2.80.A6/near/243494874\">said</a>:</p>\n<blockquote>\n<p>There's been no bisection across all linked issues</p>\n</blockquote>\n<p>I am curious about how would a semi-automated bisection be like on this code. I imagine starting from the mcve in this issue and ... somehow compare the generated asm? But what would be the tooling involved for that?</p>",
        "id": 243755805,
        "sender_full_name": "apiraino",
        "timestamp": 1624523697
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> I think I'll add <code>I-nominated</code> to this one and try to get more eyeballs during today's T-compiler meeting. Just want to be sure it is correctly framed</p>",
        "id": 244533723,
        "sender_full_name": "apiraino",
        "timestamp": 1625128170
    },
    {
        "content": "<p>Yea sounds good. The issue should definitely not be forgotten IMO.</p>",
        "id": 244533884,
        "sender_full_name": "Stu",
        "timestamp": 1625128296
    },
    {
        "content": "<p><code>I-nominated</code> sounds good to me! It's definitely important that someone get assigned to this.</p>",
        "id": 244656323,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1625196757
    },
    {
        "content": "<p>This issue has been discussed by T-compiler but now won't make it to the release. I'd bump it up with a P-high to boost the signal for the next 1.55</p>",
        "id": 247558489,
        "sender_full_name": "apiraino",
        "timestamp": 1627548783
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/86511\">#86511</a>'s prioritization request has been removed.</p>",
        "id": 247558515,
        "sender_full_name": "triagebot",
        "timestamp": 1627548812
    }
]