[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/77477\">#77477</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 212154106,
        "sender_full_name": "triagebot",
        "timestamp": 1601702198
    },
    {
        "content": "<p>I think we need to confirm this is a bug before prioritizing it</p>",
        "id": 212154212,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601702485
    },
    {
        "content": "<p>(clearly the miri ICE is a bug, but not sure about the unsafe code)</p>",
        "id": 212154220,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601702521
    },
    {
        "content": "<p>looks like we don't actually validate this somewhere and miri expects it to be validated</p>",
        "id": 212157816,
        "sender_full_name": "lcnr",
        "timestamp": 1601709199
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/8c54cf67c1bdae93ecef9791dc07c0982bb76041/compiler/rustc_mir/src/interpret/intrinsics.rs#L393-L399\">https://github.com/rust-lang/rust/blob/8c54cf67c1bdae93ecef9791dc07c0982bb76041/compiler/rustc_mir/src/interpret/intrinsics.rs#L393-L399</a></p>",
        "id": 212157840,
        "sender_full_name": "lcnr",
        "timestamp": 1601709243
    },
    {
        "content": "<p>I wasn't able to find if an incorrect index is supposed to be an error or UB <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 212157964,
        "sender_full_name": "lcnr",
        "timestamp": 1601709452
    },
    {
        "content": "<p>anyways, I guess this looks <code>P-medium</code> to me</p>",
        "id": 212157968,
        "sender_full_name": "lcnr",
        "timestamp": 1601709466
    },
    {
        "content": "<p>seems fine to me, anywhere that has <code>unsafe</code> I think it's reasonable to put the onus on the caller</p>",
        "id": 212158021,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601709502
    },
    {
        "content": "<blockquote>\n<p>seems fine to me, anywhere that has unsafe I think it's reasonable to put the onus on the caller</p>\n</blockquote>\n<p>a bit unrelated but I actually disagree there <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> even for unsafe code we should prevent as much \"certainly wrong\" unsafe code as possible.<br>\ni.e. with <code>CString::as_ptr</code> adding the lint to the compiler is extremely valuable imo</p>",
        "id": 212158115,
        "sender_full_name": "lcnr",
        "timestamp": 1601709683
    },
    {
        "content": "<p>yes, that's fair enough</p>",
        "id": 212158169,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601709778
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/77477\">#77477</a>'s prioritization request has been removed.</p>",
        "id": 212182938,
        "sender_full_name": "triagebot",
        "timestamp": 1601748327
    },
    {
        "content": "<p>Assigned <code>P-medium</code></p>",
        "id": 212182945,
        "sender_full_name": "Noah Lev",
        "timestamp": 1601748344
    },
    {
        "content": "<p>Yeah you're supposed to generally have a bounded set of invariants to uphold, not literally anything.</p>",
        "id": 212183012,
        "sender_full_name": "Jubilee",
        "timestamp": 1601748394
    }
]