[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/77716\">#77716</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 213445039,
        "sender_full_name": "triagebot",
        "timestamp": 1602776495
    },
    {
        "content": "<p>Sounds like <code>P-high</code> to me.</p>",
        "id": 213471075,
        "sender_full_name": "Noah Lev",
        "timestamp": 1602787962
    },
    {
        "content": "<p>(note that this one is not an issue but a PR)</p>",
        "id": 213471339,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1602788071
    },
    {
        "content": "<p>No issue was filed for this, but this breaks production users. Not quite sure how to deal with it, certainly would be good to fix the Cargo limitations, but maybe we should revert regardless?</p>",
        "id": 213474965,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1602789644
    },
    {
        "content": "<p>I think it's reasonable to file an issue for it to discuss reverting vs. introducing an actual fix?</p>",
        "id": 213475666,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1602789985
    },
    {
        "content": "<p>and as someone said before, I'd nominate PRs rather than prioritize them</p>",
        "id": 213475989,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1602790130
    },
    {
        "content": "<p>by reading the comments it looks like the first patch and this subsequent PR are suboptimal to solve the issue. In my limited understading we have two issues: 1) compile against dynamic libraries =&gt; your App won't be pusblished on AppStore and 2) do <em>not</em> compile against dynamic libs and have your build fail (the case of the PR submitter).</p>\n<p>The real \"fix\" involves <a href=\"https://github.com/rust-lang/rust/pull/77716#issuecomment-709410444\">a bit more work</a> and thus would imply pinning rustc to 1.45.x for an unknown time</p>",
        "id": 213478308,
        "sender_full_name": "apiraino",
        "timestamp": 1602791280
    },
    {
        "content": "<p>I think I agree on nominating this PR (or better, the underlying issue)</p>",
        "id": 213479117,
        "sender_full_name": "apiraino",
        "timestamp": 1602791684
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"217081\">Yuki Okushi</span> <a href=\"#narrow/stream/245100-t-compiler.2Fwg-prioritization.2Falerts/topic/I-prioritize.20.2377716.20Revert.20.22Allow.20dynamic.20linking.20for.20iOS.2Ft.E2.80.A6/near/213475989\">said</a>:</p>\n<blockquote>\n<p>and as someone said before, I'd nominate PRs rather than prioritize them</p>\n</blockquote>\n<p>I believe this was auto-prioritized because it was marked as a regression</p>",
        "id": 213484853,
        "sender_full_name": "Noah Lev",
        "timestamp": 1602794577
    },
    {
        "content": "<p>I mentioned it because you said \"Sounds like <code>P-high</code> to me\" and I thought we were going to prioritize this PR :)<br>\nanyway we can drop <code>I-prioritize</code> and continue the discussion, I think</p>",
        "id": 213489772,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1602797043
    },
    {
        "content": "<p>Well I wasn't sure, but I figured I would throw out a level in case we did :)</p>",
        "id": 213490094,
        "sender_full_name": "Noah Lev",
        "timestamp": 1602797241
    },
    {
        "content": "<p>I see!</p>",
        "id": 213490241,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1602797330
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/77716\">#77716</a>'s prioritization request has been removed.</p>",
        "id": 213490257,
        "sender_full_name": "triagebot",
        "timestamp": 1602797341
    },
    {
        "content": "<p>Seems like the issue  is \"fixed\" by <a href=\"https://github.com/rust-lang/rust/pull/77716#issuecomment-712492125\">https://github.com/rust-lang/rust/pull/77716#issuecomment-712492125</a> allowing cargo to handle the situation. </p>\n<p>My understanding is that both the previous patch <a href=\"https://github.com/rust-lang/rust/issues/71516\">#71516</a> <strong>and</strong> this one are neither the perfect solution. \"Fixing\" it somewhere else (i.e. in cargo) might leave an underlying issue open (\"allow or not dynamic linking on iOS platform?\").<br>\nI wonder if this patch is still eligible for beta backport and/or should be nominated for discussion to see  if is there anything to do from the rustc perspective. </p>\n<p>Opinions?</p>",
        "id": 214165543,
        "sender_full_name": "apiraino",
        "timestamp": 1603360823
    },
    {
        "content": "<p>maybe even closed? :-)</p>",
        "id": 214165631,
        "sender_full_name": "apiraino",
        "timestamp": 1603360894
    },
    {
        "content": "<p>if there's support in cargo I don't see why this needs further discussion - the reason they wanted to revert is because it broke their code, but now they can choose whether to use static or dynamic linking</p>",
        "id": 214181668,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603371084
    },
    {
        "content": "<p>I don't think being <em>able</em> to use dynamic linking was ever opposed, just forcing people to use it</p>",
        "id": 214181717,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603371122
    }
]