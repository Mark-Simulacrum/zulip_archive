[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/78115\">#78115</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 213836958,
        "sender_full_name": "triagebot",
        "timestamp": 1603137583
    },
    {
        "content": "<p>P-high at least? Sound like a regression from stable and could be a pretty common pattern.</p>",
        "id": 213837288,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1603137717
    },
    {
        "content": "<p>This is invalid code though, right?</p>",
        "id": 213837685,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603137881
    },
    {
        "content": "<p>Can this happen with valid code?</p>",
        "id": 213837702,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603137890
    },
    {
        "content": "<p>Yes it can.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">a</span>: <span class=\"kt\">bool</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">a</span>: <span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 213837938,
        "sender_full_name": "Stu",
        "timestamp": 1603137987
    },
    {
        "content": "<p><del>If bisection is correct it broke a while ago though</del> Nvm can't read</p>",
        "id": 213838057,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603138055
    },
    {
        "content": "<blockquote>\n<p>The ICE occurs if you're using a match guard and binding the same variable name in both sides of an \"or\" in a match pattern.</p>\n</blockquote>\n<p>Looks like a fairly serious regression indeed, I think <code>P-high</code> is fine but do you think it warrants <code>P-critical</code>?</p>",
        "id": 213838270,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603138148
    },
    {
        "content": "<p>Probably even <code>P-critical</code>? This code seems very likely to happen in normal code you would write</p>",
        "id": 213838330,
        "sender_full_name": "Stu",
        "timestamp": 1603138170
    },
    {
        "content": "<p>Let me do a quick bisection check</p>",
        "id": 213838376,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603138196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230287\">@Stu</span> Your last snippet doesn't compile on stable though:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>error[E0004]: non-exhaustive patterns: `Foo { .. }` not covered\n --&gt; src/main.rs:8:15\n  |\n1 | / struct Foo {\n2 | |     a: bool,\n3 | | }\n  | |_- `Foo` defined here\n...\n8 |           match foo {\n  |                 ^^^ pattern `Foo { .. }` not covered\n  |\n  = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n  = note: the matched value is of type `Foo`\n</code></pre></div>",
        "id": 213838761,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603138356
    },
    {
        "content": "<p>the ICE is only on nightly, so I tested it on nightly</p>",
        "id": 213838793,
        "sender_full_name": "Stu",
        "timestamp": 1603138374
    },
    {
        "content": "<p>wildcard pattern is required, as diags said</p>",
        "id": 213839060,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1603138507
    },
    {
        "content": "<p>But it still panics on nightly, even with a wildcard pattern</p>",
        "id": 213839204,
        "sender_full_name": "Stu",
        "timestamp": 1603138576
    },
    {
        "content": "<p>So what should we pick? <code>critical</code> or <code>high</code>? I'm fine with both but I would label it as <code>critical</code></p>",
        "id": 213839521,
        "sender_full_name": "Stu",
        "timestamp": 1603138731
    },
    {
        "content": "<p>Also ICEs in <code>async fn</code>s</p>",
        "id": 213839564,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603138758
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">Foo</span>::<span class=\"n\">A</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Foo</span>::<span class=\"n\">B</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>Triggers an ICE</p>",
        "id": 213839589,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603138768
    },
    {
        "content": "<p>So I think it should be <code>P-critical</code></p>",
        "id": 213839639,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603138793
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/78115\">#78115</a>'s prioritization request has been removed.</p>",
        "id": 213839741,
        "sender_full_name": "triagebot",
        "timestamp": 1603138813
    },
    {
        "content": "<p>(Filed a potential fix: <a href=\"https://github.com/rust-lang/rust/issues/78121\">#78121</a>)</p>",
        "id": 213849790,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603143550
    }
]