[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3111\">@WG-prioritization/alerts</span> issue <a href=\"https://github.com/rust-lang/rust/issues/94335\">#94335</a> has been requested for prioritization.</p>\n<h1><a href=\"https://forge.rust-lang.org/compiler/prioritization/procedure.html#assign-priority-to-unprioritized-issues-with-i-prioritize-label\">Procedure</a></h1>\n<ul>\n<li>Priority?</li>\n<li>Regression?</li>\n<li>Notify people/groups?</li>\n<li>Needs <code>I-nominated</code>?</li>\n</ul>",
        "id": 273153937,
        "sender_full_name": "triagebot",
        "timestamp": 1645739310
    },
    {
        "content": "<p>Rust causing file system corruption? Ouch.</p>",
        "id": 273168681,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1645748165
    },
    {
        "content": "<p>This seems unambiguously <code>P-critical</code> to me.</p>",
        "id": 273168715,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1645748197
    },
    {
        "content": "<p>Even if this only affects non-tier 1 systems, people should be able to expect that rust won't mess up their computers.</p>",
        "id": 273168840,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1645748293
    },
    {
        "content": "<p>If calling <code>unlink</code> can cause corruption then the file system design is broken.</p>",
        "id": 273186446,
        "sender_full_name": "Gary Guo",
        "timestamp": 1645761568
    },
    {
        "content": "<p>But we do need a fix ASAP. P-critical sounds reasonable.</p>",
        "id": 273186726,
        "sender_full_name": "Gary Guo",
        "timestamp": 1645761798
    },
    {
        "content": "<p>I will have a patch ready soon.</p>\n<p>Impact:</p>\n<ul>\n<li>The only report in the wild is for Illumos, but it likely happens for Solaris with UFS too. Not sure if Illumos/Solaris with ZFS is impacted (unlikely I think).</li>\n<li>For Linux and FreeBSD it is documented that <code>unlinkat(..., 0)</code> on a directory fails with EISDIR/EPERM, no exceptions. </li>\n<li>For MacOS, NetBSD and OpenBSD the code path is rarely triggered, because <code>dirent</code> has the <code>d_type</code> hint, it is usually not <code>DT_UNKNOWN</code> and even if it is, the underlying filesystem  is unlikely to support unlinking a directory.</li>\n</ul>\n<p>I agree with <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span>.  If a filesystem supports unlink()ing a directory, then that should never result in any kind of filesystem corruption. Here I don't think it is really \"filesystem corruption\", just that the inodes of the contained files and directories are not freed, so they end up in <code>/lost+found</code>.</p>",
        "id": 273201897,
        "sender_full_name": "Hans Kratz",
        "timestamp": 1645778701
    },
    {
        "content": "<p>I agree.</p>\n<p>By the way, really interesting analysis provided by the issue reporter. I wans't aware of these details</p>",
        "id": 273202224,
        "sender_full_name": "apiraino",
        "timestamp": 1645778877
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"407656\">@Hans Kratz</span> !</p>",
        "id": 273202280,
        "sender_full_name": "apiraino",
        "timestamp": 1645778891
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/94335\">#94335</a>'s prioritization request has been removed.</p>",
        "id": 273202375,
        "sender_full_name": "triagebot",
        "timestamp": 1645778955
    },
    {
        "content": "<p>Is it intentional, thereâ€™s no <code>T-*</code> label on the issue?</p>",
        "id": 273209060,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1645783193
    },
    {
        "content": "<p>ops no, I just forgot :) <br>\n(thanks <span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> btw)</p>",
        "id": 273233462,
        "sender_full_name": "apiraino",
        "timestamp": 1645798496
    }
]