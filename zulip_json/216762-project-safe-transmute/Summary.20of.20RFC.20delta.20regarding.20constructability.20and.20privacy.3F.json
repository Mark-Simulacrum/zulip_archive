[
    {
        "content": "<p>Is there a summary post explaining the delta for the recent major RFC change to address constructability and privacy?</p>",
        "id": 210788814,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600716655
    },
    {
        "content": "<p>If there has been and I've missed it, my apologies.</p>",
        "id": 210788834,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600716666
    },
    {
        "content": "<p>Sorta. Ahead of the edits, I wrote <a href=\"https://github.com/rust-lang/rfcs/pull/2981#discussion_r487319138\">this</a>, and after the edits, I wrote <a href=\"https://github.com/rust-lang/rfcs/pull/2981#discussion_r487465195\">this</a> (very) brief summary.</p>",
        "id": 210794739,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1600719755
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 210799814,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600722318
    },
    {
        "content": "<p>Just posted a question: <a href=\"https://github.com/rust-lang/rfcs/pull/2981#issuecomment-696376164\">https://github.com/rust-lang/rfcs/pull/2981#issuecomment-696376164</a></p>",
        "id": 210799817,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600722321
    },
    {
        "content": "<p>Just as a general note, I feel more comfortable with this design than the previous though I'm not sure if the <code>Here!()</code> macro and related \"Scope\" types are a bit too far out there. In general, has this update been better received than the previous mechanisms? Do we have next steps?</p>",
        "id": 211233243,
        "sender_full_name": "rylev",
        "timestamp": 1601024414
    },
    {
        "content": "<blockquote>\n<p>In general, has this update been better received than the previous mechanisms?</p>\n</blockquote>\n<p>Yes, I think so. The <code>Here!()</code> mechanism eliminates the hand-waving that <span class=\"user-mention\" data-user-id=\"117495\">@rpjohnst</span> was <a href=\"#narrow/stream/216762-project-safe-transmute/topic/Stability.20and.20visibility/near/209573531\">concerned</a> about. The new <code>transmute!()</code> hides this implementation detail (and others), such that the initial stable surface of the RFC can be very small; I think this assuaged some concerns of <span class=\"user-mention\" data-user-id=\"204346\">@Ashley Mannix</span>. However, I'm concerned that we're still fairly lacking in feedback from the relevant teams.</p>\n<hr>\n<blockquote>\n<p>Do we have next steps?</p>\n</blockquote>\n<ol>\n<li>I've been working on building a reference model of the RFC's transmutability rules in Rust. <strong>I could <em>really</em> use some help with it.</strong> An executable model will help make the RFC's prose more precise, and massively aid with implementation.</li>\n<li>I have a few minor edits to make to the RFC, including the addition of the lint addressing <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span>'s <a href=\"https://github.com/rust-lang/rfcs/pull/2981#discussion_r481410864\">concerns</a> about size-adjusting transmutations.</li>\n</ol>",
        "id": 211806845,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1601493287
    },
    {
        "content": "<p>Posted <a href=\"https://github.com/rust-lang/lang-team/issues/21#issuecomment-702010095\">an update</a> to the lang team's GitHub. Hopefully this gets discussed at the next meeting, and we'll hear about next steps we should take.</p>",
        "id": 211886427,
        "sender_full_name": "rylev",
        "timestamp": 1601544467
    }
]