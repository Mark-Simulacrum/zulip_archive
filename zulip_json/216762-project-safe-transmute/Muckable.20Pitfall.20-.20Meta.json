[
    {
        "content": "<p>What I don't understand is that the lang-team already came back with \"let's not use <code>Here!()</code>.\" You seem to have assumed they meant <em>just</em> the literal <code>Here!()</code> macro instead of the <code>Scope</code> mechanism that <code>Here!()</code> was shorthand for in that discussion. Boats suggested the newtype pattern as one alternative idiom already in use to <em>justify</em> the idea of putting off solving that problem until we can do it directly and generally- and now I point to that exchange as one reason I believe they meant the entire <code>Scope</code> mechanism. Frankly I cannot believe we have to get this nitpicky!</p>\n<p>I see Josh has been trying to figure out if there's a way to lower the impact of <code>Scope</code>, because a future direct+general solution might obsolete it (thus \"<em>might/</em>should\"). I'm asking for <em>specific examples</em> that you believe can't be accomplished (well) without it, because I would like to understand the <em>problem space</em> better (another lesson we're trying to learn from earlier discussion). But all you're giving me is rephrased versions of things we've already discussed.</p>\n<p>This \"create several topics\" thing is coming across to me as very disingenuous, fire-and-motion type tactics. :/ I'm not just repeating myself to try to \"win\" an argument! I'm repeating myself because I am very thoroughly confused as to what on earth is going on here. I don't understand why we're still talking about <code>Scope</code> and every time I ask you give me the runaround.</p>",
        "id": 218332635,
        "sender_full_name": "rpjohnst",
        "timestamp": 1606764104
    },
    {
        "content": "<p>The past discussions of <code>Muckable</code>'s shortcomings <em>did</em> include specific scenarios. Those discussions are <em>very</em> long, so I'm hoping that summarizing them with distinct topics makes the problem space more approachable to people who are intimidated by scrolling through \"Muckable Shortcomings\".</p>",
        "id": 218333202,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1606764271
    },
    {
        "content": "<p>I hear Boat's objection <em>loud and clear</em>. I'm not unclear on their feelings.</p>",
        "id": 218333476,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1606764402
    },
    {
        "content": "<p>Josh and Scott <em>also</em> expressed <a href=\"#narrow/stream/216762-project-safe-transmute/topic/.60Muckable.60.20Shortcomings/near/217187893\">*some* openness</a> to a design that includes <code>Scope</code>.</p>",
        "id": 218333753,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1606764544
    },
    {
        "content": "<p>So, I'm going to do my best to:</p>\n<ul>\n<li>demonstrate that the approaches are complementary</li>\n<li>document the situations where a scope-aware foundational API solves problems that the <code>Muckable</code> approach doesn't.</li>\n</ul>",
        "id": 218333911,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1606764626
    },
    {
        "content": "<p>If you slowed your responses a bit, it might feel less fire-and-motion. :/</p>",
        "id": 218333955,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1606764657
    },
    {
        "content": "<p>Right, and I'm not trying to forbid <code>Scope</code> by fiat either. I am open to it being the least bad option. But I'm asking for specific examples (which were not to be found in any discussion you linked when I first asked) of <em>why you are still trying to make <code>Scope</code> work</em>. Do you have any? Or are you sticking to <code>Scope</code> based on general concerns that {newtype boilerplate is too error-prone, muckable requires too much upstream cooperation, etc}?</p>",
        "id": 218334136,
        "sender_full_name": "rpjohnst",
        "timestamp": 1606764734
    },
    {
        "content": "<p>I believe so: The two next topics I'm going to summarize are partial visibility and language-level layout (in)stability.</p>",
        "id": 218334252,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1606764800
    },
    {
        "content": "<p>I would have appreciated you mentioning those up front- having an overall summary of the space after lots of discussion is great, but as a response to \"hey do you have some examples I could think about\" it feels very frustrating. :)</p>",
        "id": 218334476,
        "sender_full_name": "rpjohnst",
        "timestamp": 1606764902
    },
    {
        "content": "<p>Well, I just lost power and even LTE is intermittent, so I'll have to pause this review.</p>",
        "id": 218339206,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1606767161
    }
]