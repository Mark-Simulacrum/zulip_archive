[
    {
        "content": "<p>I was pondering the bitwise-ness of <code>Copy</code>, and this got me thinking about <code>match</code> and <code>Eq</code>, where one way to allow more things in patterns would be to require that they're bitwise-comparable for <code>Eq</code>.  But I think that the only way that could be sound at the aggregate level (as opposed to field-by-field) would be if it contained no <code>undef</code>, which I think is one of the markers you're pondering here as a requirement for safe <code>&amp;T</code>-&gt;<code>&amp;[u8]</code>.</p>\n<p>Hmm, trying to find the attribute for it got me to <a href=\"https://github.com/rust-lang/rust/issues/63438\" title=\"https://github.com/rust-lang/rust/issues/63438\">https://github.com/rust-lang/rust/issues/63438</a> (which removed said attribute), which has some similar thoughts in it.</p>",
        "id": 196722816,
        "sender_full_name": "scottmcm",
        "timestamp": 1588820758
    },
    {
        "content": "<p>So you want to match on two values being equal without them being the same type?</p>",
        "id": 196724990,
        "sender_full_name": "Lokathor",
        "timestamp": 1588823809
    },
    {
        "content": "<p>I was thinking more of being able to <code>memcmp</code> them (of the same type) instead of needing to <code>Eq::eq</code>, like how <code>Copy</code> lets me <code>memcpy</code> instead of <code>Clone::clone</code>.</p>",
        "id": 197009427,
        "sender_full_name": "scottmcm",
        "timestamp": 1589054041
    }
]