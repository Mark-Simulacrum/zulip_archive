[
    {
        "content": "<p>Really evil idea: instead of having magically generated impls for types, could we convert your algorithm to a const one and put it into libcore? Then we add an API to get the layout of a type in CTFE and add a generic impl that has where bounds checking in CTFE that your two types are safely transmutable. Not quite sure if I'm serious, CTFE is probably not up to the task yet, but it would be cool lol</p>",
        "id": 266104560,
        "sender_full_name": "oli",
        "timestamp": 1640516869
    },
    {
        "content": "<p>Oh, I've totally already tried that. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> The sticking points were that:</p>\n<ul>\n<li>CTFE is unfortunately far from being up to the task</li>\n<li>it's unclear how to do lifetime and visibility checking</li>\n<li>the unstable API surface is <em>much</em> larger (because you also need that api to get the layout of a type)</li>\n</ul>",
        "id": 266125171,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1640548593
    },
    {
        "content": "<p>Well. We can dump the layout, lifetime and visibility data as raw bytes and let the CTFE side figure out what it means</p>",
        "id": 266128371,
        "sender_full_name": "oli",
        "timestamp": 1640553803
    },
    {
        "content": "<p>Yea, this wasn't a very serious proposal xD but it would be awesome if we could some day impl it that way instead of with straight up compiler magic</p>",
        "id": 266128423,
        "sender_full_name": "oli",
        "timestamp": 1640553861
    }
]