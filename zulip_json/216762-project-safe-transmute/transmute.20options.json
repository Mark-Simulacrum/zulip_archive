[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219211\">@Jack Wrenn</span> how would transmute options handle types that have equivalent layouts, ABIs, etc, but only different in that one is Send and the other is not?</p>",
        "id": 203723460,
        "sender_full_name": "rylev",
        "timestamp": 1594651353
    },
    {
        "content": "<p>Since transmutation consumes the src value and produces a 'new' of the destination type, I don't believe there's any special interaction with the <code>Send</code> and <code>Sync</code> traits as far as transmuting values goes.</p>",
        "id": 203723959,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1594651565
    },
    {
        "content": "<p>If you have &amp;T where T: !Sync and you transmute to &amp;U where U: Sync, you could send across threads when you shouldn't be able to</p>",
        "id": 203724257,
        "sender_full_name": "rylev",
        "timestamp": 1594651687
    },
    {
        "content": "<p>I'll give this some thought. I don't have an immediate answer as to whether that can lead to unsafety. It sounds like there could be another constraint in the \"Requirements on References\" section. (<code>UnsafeCell</code> requires special attention; so too might <code>Send</code> and <code>Sync</code>) If so, it might suggest another useful <code>Neglect*</code> option!</p>",
        "id": 203724810,
        "sender_full_name": "Jack Wrenn",
        "timestamp": 1594651967
    }
]