[
    {
        "content": "<p>Hello everyone! Recently i tried another approach for mdbook translation. Basically it is translating the materials paragraph-by-paragraph.<br>\nI created a library and a mdbook-processor so all contents get replaced at build-time.</p>",
        "id": 241679599,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622966839
    },
    {
        "content": "<p>Taking the Rust reference TOC as an example: Here's what i got: <br>\n<a href=\"https://github.com/crlf0710/rust-bookshelf-l10n/blob/master/reference-l10n/l18n/SUMMARY.md\">https://github.com/crlf0710/rust-bookshelf-l10n/blob/master/reference-l10n/l18n/SUMMARY.md</a></p>",
        "id": 241679656,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622966886
    },
    {
        "content": "<p>After the book is preprocessed by the preprocessor, it generates a book like this.</p>",
        "id": 241679670,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622966937
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/i5b0WsTV7liiuO1yuLaSlqsB/Lark20210606-160926.png\">Lark20210606-160926.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/i5b0WsTV7liiuO1yuLaSlqsB/Lark20210606-160926.png\" title=\"Lark20210606-160926.png\"><img src=\"/user_uploads/4715/i5b0WsTV7liiuO1yuLaSlqsB/Lark20210606-160926.png\"></a></div>",
        "id": 241679690,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622966985
    },
    {
        "content": "<p>I'm also hoping this approach can generalize to <code>rustdoc</code> usages.   cc <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>  <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span></p>",
        "id": 241679755,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622967075
    },
    {
        "content": "<p>This is just a proof-of-concept, and the implementation is quite immature. But i'd love to hear others think about this. cc <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span></p>",
        "id": 241679812,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622967163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116458\">@Charles Lew</span> how does it work?</p>",
        "id": 241690322,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622983753
    },
    {
        "content": "<p>That really doesn't sound like a good approach to me: that makes one big file where the content is split in paragraph, so instead of trying to make a chapter as a whole, you simply have a paragraph context. And the more languages you support, the worse it becomes. Although, I'm not an expert in i10n so that was just my opinion.</p>",
        "id": 241690860,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1622984539
    },
    {
        "content": "<p>Actually yeah, how is translation normally done? I don't want to reinvent the wheel</p>",
        "id": 241690888,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622984589
    },
    {
        "content": "<p>As far as I know, there are two big approaches:</p>\n<ul>\n<li>key approach: or each language, you have the list of all keys, you simply add a translation for each key available.</li>\n<li>file approach: same file is available in different languages, so you just pick the one you want when needed.</li>\n</ul>\n<p>The second one seems much better when translating a book</p>",
        "id": 241693057,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1622987759
    },
    {
        "content": "<p>Yeah let's please not reinvent the wheel here. There are two approaches that make sense for translation: key-based or file-based, as Guillaume said. For mdbook we should do something file based, basically you translate each file. There's no benefit to doing it paragraph by paragraph</p>",
        "id": 241693922,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622988916
    },
    {
        "content": "<p>Now! There is _some_  benefit  to _not translating code_</p>",
        "id": 241693924,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622988928
    },
    {
        "content": "<p>When you do i18n  you want to figure out what should be localized and what shouldn't be. Typically you would want code examples to not be localized, but you _might_ want comments within them to be!</p>",
        "id": 241693975,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989002
    },
    {
        "content": "<p>for example in rustdoc i hope to be able to make it such that you have key-based localization, but it's easy to write code examples that can themselves be translated</p>",
        "id": 241694008,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989074
    },
    {
        "content": "<p>So for a first pass mdbook translator I'd just have it be able to construct the book from different files, and have a way for those files to work with a system like pontoon</p>",
        "id": 241694077,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989173
    },
    {
        "content": "<p>the hard part is the latter, not the former</p>",
        "id": 241694080,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989178
    },
    {
        "content": "<p>For a second pass translator I'd make it such that code snippets can be shared across languages, ideally without breaking the flow of the english version</p>",
        "id": 241694123,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989206
    },
    {
        "content": "<p>and for a third pass it would be nice if the code snippets can contain translated comments and such</p>",
        "id": 241694137,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989255
    },
    {
        "content": "<p>as far as rustdoc itself, there's already a plan I've laid out, someone needs to do it</p>",
        "id": 241694155,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989289
    },
    {
        "content": "<p><a href=\"https://internals.rust-lang.org/t/translating-the-stdlib-docs/10384\">https://internals.rust-lang.org/t/translating-the-stdlib-docs/10384</a></p>",
        "id": 241694156,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989290
    },
    {
        "content": "<p>this plan does not address the code snippet problem</p>",
        "id": 241694164,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989299
    },
    {
        "content": "<p>but \"just copy code snippets\" is a decent solution since folks will be notified on updates anyway</p>",
        "id": 241694174,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989322
    },
    {
        "content": "<p>So yeah <span class=\"user-mention\" data-user-id=\"116458\">@Charles Lew</span> I wouldn't do anything other than \"translating file by file\" here, the tricky thing is making it so that Pontoon or whatever localization tool you wish to use works</p>",
        "id": 241694225,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1622989358
    },
    {
        "content": "<p>Let me write down my thoughts here: Translating file by file makes a lot of sense if it is simply a \"create and deploy\" matter. However most of our books, and in the future, API docs, and evolved with time.</p>",
        "id": 241695852,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622991857
    },
    {
        "content": "<p>And with time there will be lots and lots of paragraph-level changes.</p>",
        "id": 241695859,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622991872
    },
    {
        "content": "<p>Paragraph-level modification detection is mandatory here.</p>",
        "id": 241695883,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622991937
    },
    {
        "content": "<p>Maybe it will work for the Rust project to use a system like pontoon for stdlib localization. But from the ecosystem perspective of view. This won't work at all.</p>",
        "id": 241695957,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992059
    },
    {
        "content": "<p>You can't ask 1000 crates to use a shared instance of pontoon to get their API documentation translation work done.</p>",
        "id": 241696018,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992119
    },
    {
        "content": "<p>So my approach is just eliminating pontoon-style systems from this entirely.</p>",
        "id": 241696046,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992173
    },
    {
        "content": "<p>From an ordinary user's view, it's fair for me to want to translated documentation of my own crates into two languages or three.<br>\nI certainly don't want to set up a Pontoon-like system on my own box.</p>",
        "id": 241696270,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992449
    },
    {
        "content": "<p>And i hope that stdlib can set up an example that ordinary users can follow.</p>",
        "id": 241696291,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992496
    },
    {
        "content": "<p>My own vision is to create a shared translation-database style thing that every crate can use.</p>",
        "id": 241696533,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992865
    },
    {
        "content": "<hr>",
        "id": 241696535,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992889
    },
    {
        "content": "<p>ok, now putting my own thought aside.</p>",
        "id": 241696543,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622992906
    },
    {
        "content": "<p>For mdbook localization, it seems we want a file-level translation utility.</p>",
        "id": 241696692,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622993109
    },
    {
        "content": "<p>The previous attempt is <a href=\"#narrow/stream/226068-t-community.2Fl10n/topic/mdbook.20localisation\">https://rust-lang.zulipchat.com/#narrow/stream/226068-t-community.2Fl10n/topic/mdbook.20localisation</a></p>",
        "id": 241696704,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622993128
    },
    {
        "content": "<p>The hard part is: What should people do when the original text changes?</p>",
        "id": 241696833,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622993304
    },
    {
        "content": "<p>If we don't care about this, does the outcome of previous attempt (with integration of Pontoon) seem sufficient?</p>",
        "id": 241696916,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622993513
    },
    {
        "content": "<p>If that is the case, i might try rebasing that pr to the current master.</p>",
        "id": 241697103,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622993824
    },
    {
        "content": "<hr>",
        "id": 241697343,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622994210
    },
    {
        "content": "<p>oh, another thing i want to mention is that. for translated books people actually do want to see the original text with a mouse hover or something at times. with my solution this is fairly straightforward to implement. While for file-by-file approaches, that would be quite hard.</p>",
        "id": 241697403,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622994298
    },
    {
        "content": "<p>I will continue experimenting with my approach outside the scope of the rust project.</p>",
        "id": 241697493,
        "sender_full_name": "Charles Lew",
        "timestamp": 1622994396
    },
    {
        "content": "<blockquote>\n<p>You can't ask 1000 crates to use a shared instance of pontoon to get their API documentation translation work done.</p>\n</blockquote>\n<p>You don't need to use pontoon! Pontoon is a convenient way of doing this, but you can also write the files manually. You'd maybe want to build some tooling to better categorize changes, but it's doable. You have a folder with english changes, and you watch it for changes and update your languages accordingly</p>",
        "id": 241845697,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102468
    },
    {
        "content": "<p>so, fwiw, if you want to do it para-by-para, you can: tweak the mdbook input so that you can name paragraphs with keys</p>",
        "id": 241845806,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102508
    },
    {
        "content": "<p>but i'll say this from the get-go: the localization community is used to using good tooling. i'm _strongly_ against reinventing the wheel here</p>",
        "id": 241845872,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102547
    },
    {
        "content": "<p>i18n/l10n are fields with a lot of hidden complexity</p>",
        "id": 241845886,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102557
    },
    {
        "content": "<p>I now work full time on this stuff and I still don't know all the hidden complexities</p>",
        "id": 241845912,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102574
    },
    {
        "content": "<p>doing what the industry as a whole does is a good thing unless something is known to be a poor option</p>",
        "id": 241845933,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102592
    },
    {
        "content": "<p>ultimately i think a key based approach _can work_ if you _really_ care about paragraphs</p>",
        "id": 241846073,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102666
    },
    {
        "content": "<p>BUT</p>",
        "id": 241846080,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102672
    },
    {
        "content": "<p>the format it's currently in is not great. what you want to do is instead make it possible to write a markdown document, and tag each paragraph/section with some key, and have tooling to dump key-para mappings, and tooling to reconstruct those</p>",
        "id": 241846198,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102735
    },
    {
        "content": "<blockquote>\n<p>However most of our books, and in the future, API docs, and evolved with time.</p>\n</blockquote>\n<p>Also, to respond to this explicitly: yes, I'm _very_ well aware, and this is the basis of my opinion on this matter. the existing approaches are decent at handling this kind of evolution. Paragraph-level modification detection is useful but I don't see it as mandatory, especially as you realize that good translations are unlikely to have the same paragraph structure.</p>",
        "id": 241846423,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102864
    },
    {
        "content": "<p>oh, more on pontoon</p>",
        "id": 241846528,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102925
    },
    {
        "content": "<p>my general ethos towards this is not to centralize around any single tool, it's to use that tool to make stuff better</p>",
        "id": 241846560,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102945
    },
    {
        "content": "<p>in fact my original proposal: translate md files as a whole, is _not directly compatible with pontoon_</p>",
        "id": 241846596,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102958
    },
    {
        "content": "<p>and my proposal would be to have a very simple transform to/from pontoon files</p>",
        "id": 241846661,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623102977
    },
    {
        "content": "<p>for rustdoc docs i imagine something similar: we may not necessarily use a format directly compatible with pontoon, but we make it easy to convert to a format pontoon likes</p>",
        "id": 241846730,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623103043
    },
    {
        "content": "<p>anyway the tricky part for mdbook is code</p>",
        "id": 241846745,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623103054
    },
    {
        "content": "<p>Thank you for your insights! This is very helpful.</p>",
        "id": 241868178,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623124757
    },
    {
        "content": "<blockquote>\n<p>especially as you realize that good translations are unlikely to have the same paragraph structure</p>\n</blockquote>\n<p>Could you explain a little more on this? This might be true but i haven't realized why is that. I thought paragraph-level correspondence are mandatory? Example <a href=\"https://w3c.github.io/clreq/\">multi-language documents</a>.</p>",
        "id": 241869043,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623125807
    },
    {
        "content": "<p>Not always because the flow might be better in a different way. For _good_ translations. That's a specification so each paragraph has a purpose, which is different.</p>",
        "id": 242227713,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623340018
    },
    {
        "content": "<p>good translations of prose use their liberty with paragraph/sentence structure. bad translations go sentence by sentence.</p>",
        "id": 242227897,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623340092
    },
    {
        "content": "<p>we are unlikely to have excelletn translations of technical material that do this but it's still a bad assumption to make</p>",
        "id": 242227932,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1623340114
    },
    {
        "content": "<p>And very exposed to \"update issues\": as soon as a paragraph is updated, its key isn't the same anymore.</p>",
        "id": 242268936,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623358230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> <br>\nI'm persuaded that a key is needed here (Leaving the old text only for validation). But I'm still curious why is this alone an issue? Updated text needs updated translation text. And the old one only needs to be \"garbage collected\".</p>",
        "id": 242303816,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623390660
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> explained it well enough already. For books, you don't want to use paragraphs as keys nor translate on a paragraph basis.</p>",
        "id": 242312935,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623398800
    },
    {
        "content": "<p>Yep, but \"update issues\" are not the reason.</p>",
        "id": 242321583,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623404249
    },
    {
        "content": "<p>It's one of them (even though certainly one of the less problematic)</p>",
        "id": 242321630,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1623404278
    },
    {
        "content": "<p>Anyway let's move on here =)</p>",
        "id": 242321730,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623404320
    },
    {
        "content": "<p>I feel synchronization is kind of important...  There're tools like <a href=\"https://docs.rs/mdbook-transcheck/\">https://docs.rs/mdbook-transcheck/</a></p>",
        "id": 242322124,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623404552
    },
    {
        "content": "<p>it does modification detection within two versions within one single language.</p>",
        "id": 242322265,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623404645
    },
    {
        "content": "<p>And someone would generate a \"patch\" in another language and apply to the text.</p>",
        "id": 242322321,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623404696
    },
    {
        "content": "<p>But when structure changes, as <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> said, this process become hard.</p>",
        "id": 242322456,
        "sender_full_name": "Charles Lew",
        "timestamp": 1623404779
    }
]