[
    {
        "content": "<p>Has anyone taken a look at adding LLVM Code Coverage Mapping to Rust? I'm looking into it so that we can start getting PGO and code coverage \"the right way\" for Fuchsia, and was reading <a href=\"https://llvm.org/docs/CoverageMappingFormat.html\" target=\"_blank\" title=\"https://llvm.org/docs/CoverageMappingFormat.html\">https://llvm.org/docs/CoverageMappingFormat.html</a> and <a href=\"https://github.com/llvm/llvm-project/blob/master/clang/lib/CodeGen/CoverageMappingGen.cpp\" target=\"_blank\" title=\"https://github.com/llvm/llvm-project/blob/master/clang/lib/CodeGen/CoverageMappingGen.cpp\">https://github.com/llvm/llvm-project/blob/master/clang/lib/CodeGen/CoverageMappingGen.cpp</a>. It doesn't look too terrible, but I wanted to give a heads-up here that this was something I was investigating in case anyone else had looked into doing the same thing and had any advice.</p>",
        "id": 155306825,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1547693452
    },
    {
        "content": "<p>Awesome! I know that people want to have PGO.<br>\nIs this different from how Clang does PGO normally?</p>",
        "id": 155324362,
        "sender_full_name": "mw",
        "timestamp": 1547720671
    },
    {
        "content": "<p>I want to be using ccov testing on rustc</p>",
        "id": 155337262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547734183
    },
    {
        "content": "<p>I've not looked into it at all</p>",
        "id": 155337269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547734189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> This is what you get when you use -fprofile-instr-generate / -fcoverage-mapping</p>",
        "id": 155352747,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1547745957
    },
    {
        "content": "<p>and what <code>llvm-cov</code> works off of</p>",
        "id": 155352792,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1547745971
    }
]