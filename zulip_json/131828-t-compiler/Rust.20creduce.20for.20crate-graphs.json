[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-31.20.2354818/near/221297469\">said</a>:</p>\n<blockquote>\n<p>I've been wondering if I should start a project group to make a creduce specific to rust</p>\n</blockquote>\n<p>there's something like it <a href=\"https://github.com/jethrogb/rust-reduce/\">https://github.com/jethrogb/rust-reduce/</a></p>",
        "id": 221297565,
        "sender_full_name": "lqd",
        "timestamp": 1609429604
    },
    {
        "content": "<p>fresh topic to discuss automatic creation of MCVE's</p>",
        "id": 221297583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609429629
    },
    {
        "content": "<p>I made a zulip topic specifically for this: <a href=\"#narrow/stream/131828-t-compiler/topic/Rust.20creduce.20for.20crate-graphs/near/221297583\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Rust.20creduce.20for.20crate-graphs/near/221297583</a></p>",
        "id": 221297590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609429647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-31.20.2354818/near/221297561\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> yeah okay lets you and me (and anyone else) circle back to this idea.</p>\n</blockquote>\n<p>open a topic to discuss, I'm also interested</p>",
        "id": 221297591,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1609429648
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 221297602,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1609429662
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"238009\" href=\"/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.20meeting.5D.202020-12-31.20.2354818\">#t-compiler/meetings &gt; [weekly meeting] 2020-12-31 #54818</a> by <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span></p>",
        "id": 221297658,
        "sender_full_name": "Notification Bot",
        "timestamp": 1609429686
    },
    {
        "content": "<p>I have also seen <a href=\"https://github.com/perses-project/perses\">https://github.com/perses-project/perses</a> being used in <a href=\"https://github.com/rust-lang/rust/issues/67684#issuecomment-747189906\">https://github.com/rust-lang/rust/issues/67684#issuecomment-747189906</a></p>",
        "id": 221297701,
        "sender_full_name": "oli",
        "timestamp": 1609429732
    },
    {
        "content": "<p>haven't looked into it at all, but sounds like it's being actively used?</p>",
        "id": 221297709,
        "sender_full_name": "oli",
        "timestamp": 1609429747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Rust.20creduce.20for.20crate-graphs/near/221297709\">said</a>:</p>\n<blockquote>\n<p>haven't looked into it at all, but sounds like it's being actively used?</p>\n</blockquote>\n<p>yes there are multiple issues whose code was reduced using it.</p>\n<p>Here are some of them: <a href=\"https://github.com/rust-lang/rust/issues/created_by/chengniansun\">https://github.com/rust-lang/rust/issues/created_by/chengniansun</a></p>",
        "id": 221297734,
        "sender_full_name": "Stu",
        "timestamp": 1609429792
    },
    {
        "content": "<p>FWIW, what I was going to bring up is that I plan to do a research project (under the auspices of my college), and am still in the process of narrowing down the exact topic, but currently some kind of automated triage and mcve from bug reports or crater results is the goal. It's somewhat unclear the extent to which this can be an advancement on what creduce or similar tooling provides, though, so scope may change.</p>",
        "id": 221299450,
        "sender_full_name": "simulacrum",
        "timestamp": 1609431242
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Rust.20creduce.20for.20crate-graphs/near/221297701\">said</a>:</p>\n<blockquote>\n<p>I have also seen <a href=\"https://github.com/perses-project/perses\">https://github.com/perses-project/perses</a> being used in <a href=\"https://github.com/rust-lang/rust/issues/67684#issuecomment-747189906\">https://github.com/rust-lang/rust/issues/67684#issuecomment-747189906</a></p>\n</blockquote>\n<p>Hmm, i wonder if this can handle multiple crates. That is at least the main reason why I haven't invested too much effort in <a href=\"https://github.com/jethrogb/rust-reduce/\">https://github.com/jethrogb/rust-reduce/</a></p>",
        "id": 221302189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609433744
    },
    {
        "content": "<p>I'd be very interested in something like this. The biggest challenge is when multiple crates and/or source files are involved.</p>",
        "id": 221326076,
        "sender_full_name": "tmandry",
        "timestamp": 1609459929
    },
    {
        "content": "<p>Even something that combined multiple crates into one would be useful in a lot of cases</p>",
        "id": 221326090,
        "sender_full_name": "tmandry",
        "timestamp": 1609459963
    },
    {
        "content": "<p>Once everything is in a file, I think creduce can be useful in theory, but I've never actually gotten to that point</p>",
        "id": 221326109,
        "sender_full_name": "tmandry",
        "timestamp": 1609459990
    },
    {
        "content": "<p>also fyi, rust-reduce is AGPL which means no one at google is allowed to use it</p>",
        "id": 221326179,
        "sender_full_name": "tmandry",
        "timestamp": 1609460053
    },
    {
        "content": "<p>Note that in some cases, the bug can only be reproduced in a separate crate</p>",
        "id": 221326212,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609460140
    },
    {
        "content": "<p>(especially for rustdoc)</p>",
        "id": 221326217,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609460147
    },
    {
        "content": "<p>yeah, that's why I said in a lot of cases. my thinking is that a combiner would be 10-100x easier to write than a multi-crate minimizer</p>",
        "id": 221326313,
        "sender_full_name": "tmandry",
        "timestamp": 1609460256
    },
    {
        "content": "<p>FWIW it's not impossible to handle multiple crates with rust-reduce, it's \"just\" tedious. I'd be pleasantly surprised if perses supports it (the one time I've tried perses real quickly, I didn't succeed and it happily removed all of the code ^^ so I just returned to old and slow trusty rust-reduce -- I'd need to try Perses for real to better compare)</p>",
        "id": 221345999,
        "sender_full_name": "lqd",
        "timestamp": 1609496686
    },
    {
        "content": "<p>Before <code>rust-reduce</code> was born I have been using <code>cargo-expand</code> to obtain single source file and the reduced it through C-Reduce. It greatly helped me with few projects even though it was painfully slow.<br>\nIMO there will be huge benefit by having such tool polished, even with simple combiner approach.</p>",
        "id": 221375685,
        "sender_full_name": "mati865",
        "timestamp": 1609545953
    },
    {
        "content": "<p>has anyone successfully ran perses ? I'm not even sure it supports multiple files ? the easiest way would probably to be to add a combiner to rust-reduce then ?</p>",
        "id": 221376508,
        "sender_full_name": "lqd",
        "timestamp": 1609547526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Rust.20creduce.20for.20crate-graphs/near/221326313\">said</a>:</p>\n<blockquote>\n<p>yeah, that's why I said in a lot of cases. my thinking is that a combiner would be 10-100x easier to write than a multi-crate minimizer</p>\n</blockquote>\n<p>A combiner poses its own complications, though, since there are some semantic rules that are sensitive to the crate boundaries</p>",
        "id": 221557372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609783042
    },
    {
        "content": "<p>Having said that, maybe for the use case in question it might work \"well enough\" in enough cases for that to be the first thing to develop</p>",
        "id": 221557567,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609783123
    },
    {
        "content": "<p>combining could be one of the reducing toolâ€™s transforms. that is, if it violated one of the rules that are sensitive to crate boundaries, the problem would not reproduce and the tool would not accept the transform as a valid reduction</p>",
        "id": 221559534,
        "sender_full_name": "lqd",
        "timestamp": 1609784051
    },
    {
        "content": "<p>good point. And actually, that step, with its potential for isolating behavioral changes, would motivate an <em>incremental</em> combining system that e.g. only incorporated a crate at a time, or something. I was imagining something more monolithic, but there's not much value in that compared to iterated incremental incorporation, I think.</p>",
        "id": 221560417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609784470
    },
    {
        "content": "<p>(On the other hand, I do think the cases where separate crates are fundamental to reproducing the problem are important enough that I would still like to investigate multi-crate processing. But I definitely understand the complexities there.)</p>",
        "id": 221560604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609784558
    },
    {
        "content": "<p>right</p>",
        "id": 221560823,
        "sender_full_name": "lqd",
        "timestamp": 1609784659
    },
    {
        "content": "<p>the most common downside to the incremental approach IME is itâ€™s easier for the whole process to become slow, if itâ€™s naively testing whether each step reproduces the problem (and/or the testing itself is slow, eg when a full build is required, or worse running the resulting program)</p>",
        "id": 221561083,
        "sender_full_name": "lqd",
        "timestamp": 1609784786
    },
    {
        "content": "<p>(but thatâ€™s not solely related to incremental combining of crates of course :)</p>",
        "id": 221561368,
        "sender_full_name": "lqd",
        "timestamp": 1609784919
    },
    {
        "content": "<p>yes. and one can imagine simple ways to address that, that generalize beyond this particular transformation. E.g. just run many steps and then bisect the steps themselves if a problem arises.</p>",
        "id": 221562115,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609785248
    },
    {
        "content": "<p>(to which I expect you were alluding when you included the word \"naively\")</p>",
        "id": 221562161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609785285
    },
    {
        "content": "<p>exactly</p>",
        "id": 221562173,
        "sender_full_name": "lqd",
        "timestamp": 1609785294
    },
    {
        "content": "<p>Hello, I've seen that lately people are reporting more and more bugs that involve crates, and this becomes more necessary. I've seen GitHub username SNCPlay42 performing some awesome reductions, was hoping he'd write up his method on doing so.</p>",
        "id": 235635344,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1619078217
    },
    {
        "content": "<p>I recently tried bisecting one of these, and ran into a couple of roadblocks.</p>",
        "id": 235635537,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1619078309
    },
    {
        "content": "<p><a href=\"http://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\">http://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/</a> is a good read</p>",
        "id": 235635592,
        "sender_full_name": "LaurenÈ›iu",
        "timestamp": 1619078337
    },
    {
        "content": "<p>I'm lazy, so I was looking for an automated solution. But it's a nice read either way. :D</p>",
        "id": 235637929,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1619079581
    }
]