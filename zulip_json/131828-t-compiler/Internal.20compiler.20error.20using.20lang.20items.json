[
    {
        "content": "<p>While working on a project I ran into an internal compiler error related to lang items. I made an issue about it, and started digging into the compiler internals to find out what was actually happening. I added a comment to the issue explaining what I think is going on: I believe it has to do with the entrypoint for monomorphization. Rust may use the #[lang=start] function as an entrypoint, even if this function sits in a foreign crate and may never be an entrypoint for monomorphization. </p>\n<p>This is the first time I'm looking at the rust source code so I may be completely wrong about this. The issue related to this topic is: <a href=\"https://github.com/rust-lang/rust/issues/79559\">https://github.com/rust-lang/rust/issues/79559</a>.</p>",
        "id": 219142157,
        "sender_full_name": "Jonathan Dönszelmann",
        "timestamp": 1607377212
    },
    {
        "content": "<p>It looks like a MIR is not exported. I think, the difference between start in std is that it is generic.</p>",
        "id": 219144596,
        "sender_full_name": "tm",
        "timestamp": 1607378495
    },
    {
        "content": "<p>You are right. Whenever I make lang_start() generic in any way (just make main return some T: 'static) it works; kinda. It produces a linking error. Still not the desired behavior but at least no ICE</p>",
        "id": 219145520,
        "sender_full_name": "Jonathan Dönszelmann",
        "timestamp": 1607378933
    },
    {
        "content": "<p>the <code>#[no_mangle]</code> on <code>lang_start</code> also doesn't seem right</p>",
        "id": 219145800,
        "sender_full_name": "tm",
        "timestamp": 1607379061
    },
    {
        "content": "<p>Hmm, that may be right but doesn't seem to make a difference. No ICE but still a linking error</p>",
        "id": 219146138,
        "sender_full_name": "Jonathan Dönszelmann",
        "timestamp": 1607379161
    },
    {
        "content": "<p>I attached the linking error to the github issue</p>",
        "id": 219146210,
        "sender_full_name": "Jonathan Dönszelmann",
        "timestamp": 1607379212
    }
]