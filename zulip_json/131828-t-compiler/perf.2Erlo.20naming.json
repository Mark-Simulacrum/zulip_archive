[
    {
        "content": "<p>Currently, <a href=\"http://perf.rust-lang.org\" title=\"http://perf.rust-lang.org\">perf.rust-lang.org</a> uses the following names for the various \"types\" of data we collect:</p>\n<ul>\n<li>clean: <code>CARGO_INCREMENTAL=0 cargo check</code> with no target dir</li>\n<li>baseline incremental: <code>CARGO_INCREMENTAL=1 cargo check</code> with no target dir</li>\n<li>clean incremental:  <code>CARGO_INCREMENTAL=1 cargo check</code> with a just-populated target directory, no changes to source code</li>\n<li>patched incremental: [patch name]:   <code>CARGO_INCREMENTAL=1 cargo check</code> with a just-populated target directory, some patch applied to source code</li>\n</ul>\n<p>I have heard from numerous people historically that these names are hard to understand (and I confuse myself all the time). I would like to propose the following, in the same order:</p>\n<ul>\n<li>empty</li>\n<li>incremental empty</li>\n<li>incremental fresh</li>\n<li>incremental patched: [name]</li>\n</ul>\n<p>The intent is to think about these like \"cache states\"</p>\n<p>Interested to hear what people think! cc <span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span></p>",
        "id": 196909187,
        "sender_full_name": "simulacrum",
        "timestamp": 1588951442
    },
    {
        "content": "<p>I have historically misunderstood \"clean incremental\" to mean \"after running <code>cargo clean</code>\"</p>",
        "id": 196909421,
        "sender_full_name": "eddyb",
        "timestamp": 1588951506
    },
    {
        "content": "<p>I'd say \"full\" instead of \"empty\" which is ironically the opposite</p>",
        "id": 196909570,
        "sender_full_name": "eddyb",
        "timestamp": 1588951572
    },
    {
        "content": "<p>as in, it's doing a full build</p>",
        "id": 196909588,
        "sender_full_name": "eddyb",
        "timestamp": 1588951580
    },
    {
        "content": "<p>and \"incremental fresh\" could be \"incremental noop\", since we should strive that time to be 0 :P</p>",
        "id": 196909639,
        "sender_full_name": "eddyb",
        "timestamp": 1588951609
    },
    {
        "content": "<p>or \"incremental unchanged\"</p>",
        "id": 196909651,
        "sender_full_name": "eddyb",
        "timestamp": 1588951616
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 196909674,
        "sender_full_name": "eddyb",
        "timestamp": 1588951624
    },
    {
        "content": "<p>They are indeed hard to understand</p>",
        "id": 196909706,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1588951648
    },
    {
        "content": "<p>Hmm, empty doesn't mean much to me</p>",
        "id": 196909792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951685
    },
    {
        "content": "<p>I do feel \"clean\" means \"after running clean\"</p>",
        "id": 196909809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951698
    },
    {
        "content": "<p>as in, do a 'clean build'</p>",
        "id": 196909823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951705
    },
    {
        "content": "<p>(or \"from scratch\", I guess)</p>",
        "id": 196909845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951717
    },
    {
        "content": "<p>we can try renaming empty to \"full\" -- I would avoid \"clean\" I think because that could be seen as \"working directory is clean\"</p>",
        "id": 196909889,
        "sender_full_name": "simulacrum",
        "timestamp": 1588951742
    },
    {
        "content": "<p>I always find the use of \"fresh\" in cargo very confusing also, because to me a \"fresh build\" is a \"new build\", but it means fresh in the sense of  \"not dirty\"</p>",
        "id": 196909931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951762
    },
    {
        "content": "<p>i.e., a fresh build in cargo, I think, means 'nothing happened', but to me it implies the opposite</p>",
        "id": 196909975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951788
    },
    {
        "content": "<p>I am wondering if we can make very explicit names somehow that are less confusing</p>",
        "id": 196910081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951822
    },
    {
        "content": "<p>(I think I like \"full build\")</p>",
        "id": 196910126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951842
    },
    {
        "content": "<ul>\n<li>full</li>\n<li>incremental full</li>\n<li>incremental noop</li>\n<li>incremental patched: [name]</li>\n</ul>",
        "id": 196910134,
        "sender_full_name": "simulacrum",
        "timestamp": 1588951844
    },
    {
        "content": "<p>That seems good. I wonder if noop might be better \"no-change\"?</p>",
        "id": 196910205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951878
    },
    {
        "content": "<ul>\n<li>from-scratch</li>\n<li>incremental from-scratch</li>\n<li>incremental no-edit</li>\n<li>incremental patched</li>\n</ul>",
        "id": 196910254,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951906
    },
    {
        "content": "<p>I don't like noop no-change much because of the \"no\" prefix</p>",
        "id": 196910259,
        "sender_full_name": "simulacrum",
        "timestamp": 1588951908
    },
    {
        "content": "<p>that's another attempt :)</p>",
        "id": 196910262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951910
    },
    {
        "content": "<p>I think it'd be good to find some positive name for it</p>",
        "id": 196910329,
        "sender_full_name": "simulacrum",
        "timestamp": 1588951924
    },
    {
        "content": "<p>yeah</p>",
        "id": 196910343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951931
    },
    {
        "content": "<p>I think \"noop\" is .. probably good</p>",
        "id": 196910361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951940
    },
    {
        "content": "<p>it's got something of a connotation to me like .. it <em>should</em> be a no-op</p>",
        "id": 196910398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951957
    },
    {
        "content": "<p>sorry, what I mean is</p>",
        "id": 196910407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951964
    },
    {
        "content": "<p>it's got a connotation to me of \"this command doesn't do anything\"</p>",
        "id": 196910427,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951973
    },
    {
        "content": "<p>which is of course the idea, but I mean more like \"we don't even run rustc\"</p>",
        "id": 196910475,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951990
    },
    {
        "content": "<p>but anywaYI think it's good</p>",
        "id": 196910481,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588951994
    },
    {
        "content": "<p>at least I can't think of a clearer one</p>",
        "id": 196910525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588952021
    },
    {
        "content": "<p>yeah maybe we should take the win</p>",
        "id": 196910552,
        "sender_full_name": "simulacrum",
        "timestamp": 1588952033
    },
    {
        "content": "<p>I say take the win!</p>",
        "id": 196910565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588952039
    },
    {
        "content": "<p>we've lived with the current names long enough</p>",
        "id": 196910635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588952056
    },
    {
        "content": "<p>let's try the new names out then, I'll go write up a commit or so</p>",
        "id": 196910659,
        "sender_full_name": "simulacrum",
        "timestamp": 1588952068
    },
    {
        "content": "<p>(and I think the idea of a \"no-op build\" is a useful thing to be able to talk about, and we'll get used to it)</p>",
        "id": 196910687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588952083
    },
    {
        "content": "<p>why not \"unchanged\" instead of \"full\" or \"empty\" ?</p>",
        "id": 196910887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588952159
    },
    {
        "content": "<p>(I guess \"no-edit\" is fine)</p>",
        "id": 196911001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588952190
    },
    {
        "content": "<p>hm, so it's not really about the lack of changes for those</p>",
        "id": 196911085,
        "sender_full_name": "simulacrum",
        "timestamp": 1588952226
    },
    {
        "content": "<p>it's specifically \"we're building without target/\"</p>",
        "id": 196911113,
        "sender_full_name": "simulacrum",
        "timestamp": 1588952236
    },
    {
        "content": "<p>unchanged is not bad as a replacement for <em>noop</em> though</p>",
        "id": 196911582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588952438
    },
    {
        "content": "<p>I've pushed up changes with unchanged</p>",
        "id": 196913512,
        "sender_full_name": "simulacrum",
        "timestamp": 1588953297
    },
    {
        "content": "<p>happy to hear further feedback though</p>",
        "id": 196913530,
        "sender_full_name": "simulacrum",
        "timestamp": 1588953304
    },
    {
        "content": "<p>If there was perhaps a legend or tooltip or something that explained this:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>clean: CARGO_INCREMENTAL=0 cargo check with no target dir\nbaseline incremental: CARGO_INCREMENTAL=1 cargo check with no target dir\nclean incremental: CARGO_INCREMENTAL=1 cargo check with a just-populated target directory, no changes to source code\npatched incremental: [patch name]: CARGO_INCREMENTAL=1 cargo check with a just-populated target directory, some patch applied to source code\n</code></pre></div>\n\n\n</blockquote>\n<p>I think that would be extremely helpful!</p>",
        "id": 196913542,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588953312
    },
    {
        "content": "<p>Regardless of what we label them.</p>",
        "id": 196913579,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588953326
    },
    {
        "content": "<p>I've added one to the compare page</p>",
        "id": 196913664,
        "sender_full_name": "simulacrum",
        "timestamp": 1588953354
    },
    {
        "content": "<p>I'm not sure how to put it on the graph page though -- it just doesn't fit nicely</p>",
        "id": 196913766,
        "sender_full_name": "simulacrum",
        "timestamp": 1588953385
    },
    {
        "content": "<p>Oh, I see it now</p>",
        "id": 196913924,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588953451
    },
    {
        "content": "<p>Ok. I think the reason I didn't even think of that is because your comment here actually shows <code>CARGO_INCREMENTAL=1 cargo check</code> which tells me exactly what's going on.</p>",
        "id": 196914040,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588953484
    },
    {
        "content": "<p>I've read the labels on the compare page before and I actually thought we were doing <code>cargo build</code> not <code>cargo check</code></p>",
        "id": 196914074,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588953507
    },
    {
        "content": "<p>oh I meant that as a placeholder</p>",
        "id": 196914246,
        "sender_full_name": "simulacrum",
        "timestamp": 1588953593
    },
    {
        "content": "<p>Gotcha.</p>",
        "id": 196914305,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588953607
    },
    {
        "content": "<p>we do cargo check for -check, build for -debug and build --release for -opt</p>",
        "id": 196914308,
        "sender_full_name": "simulacrum",
        "timestamp": 1588953607
    },
    {
        "content": "<p>Oh right, duh. Sorry for the noise</p>",
        "id": 196914421,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588953661
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Is the underlying file format unchanged? I imagine so, given that comparisons to a month ago are still working?</p>",
        "id": 196954597,
        "sender_full_name": "njn",
        "timestamp": 1588974657
    },
    {
        "content": "<p>Judging from the recent commits, seems so</p>",
        "id": 196954768,
        "sender_full_name": "njn",
        "timestamp": 1588974787
    },
    {
        "content": "<p>Which means that the commands for local profiling, such as <code>collector profile</code>, still use the old names</p>",
        "id": 196954787,
        "sender_full_name": "njn",
        "timestamp": 1588974806
    },
    {
        "content": "<p>Some nits:</p>",
        "id": 196954907,
        "sender_full_name": "njn",
        "timestamp": 1588974870
    },
    {
        "content": "<ul>\n<li>The \"compare\" page uses \"Patched incremental\" at the top and \"Incremental patched\" at the bottom</li>\n</ul>",
        "id": 196954936,
        "sender_full_name": "njn",
        "timestamp": 1588974892
    },
    {
        "content": "<ul>\n<li>The \"compare\" page has a legend at the bottom, but the \"graphs\" and \"dashboard\" pages don't. Should they?</li>\n</ul>",
        "id": 196955144,
        "sender_full_name": "njn",
        "timestamp": 1588975032
    },
    {
        "content": "<ul>\n<li>\"Incremental unchanged: an incremental build starting with complete cache, and clean source directory -- the \"perfect\" scenario for incremental.\"  Use of \"clean\" here is confusing, I suggested \"an unchanged\" or \"an unaltered\".</li>\n</ul>",
        "id": 196955309,
        "sender_full_name": "njn",
        "timestamp": 1588975155
    },
    {
        "content": "<p>yeah underlying format is currently unchanged but I want to change that for faster reboots and such, working on some ideas (as you can probably see by commit history there's a ton of changes recently)</p>",
        "id": 196955456,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975235
    },
    {
        "content": "<p>Will fix nits</p>",
        "id": 196955466,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975244
    },
    {
        "content": "<ul>\n<li>Is it worth adding \"Formerly called 'clean'\", etc., to each of the descriptions in the legend?</li>\n</ul>",
        "id": 196955587,
        "sender_full_name": "njn",
        "timestamp": 1588975318
    },
    {
        "content": "<ul>\n<li>Should we use hyphens more, e.g. \"incremental-full\"? That makes for nicer references to a single result, e.g. \"regex-check-incremental-full\". (Though the names of the patched ones would still have spaces.)</li>\n</ul>",
        "id": 196955728,
        "sender_full_name": "njn",
        "timestamp": 1588975410
    },
    {
        "content": "<ul>\n<li>And would \"incr\" be a sufficiently obvious shortening of \"incremental\"? E.g. \"incr-full\".</li>\n</ul>",
        "id": 196955805,
        "sender_full_name": "njn",
        "timestamp": 1588975444
    },
    {
        "content": "<p>hm I think I'd prefer to jettison the old names as quickly as possible</p>",
        "id": 196955820,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975464
    },
    {
        "content": "<p>incr seems fine, though not sure we get too much</p>",
        "id": 196955841,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975491
    },
    {
        "content": "<p>hyphens I'm \"shrug\" on</p>",
        "id": 196955861,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975509
    },
    {
        "content": "<p>With the old names I use quotes a lot, e.g.: 'I got speedups on \"clean incremental\" builds'</p>",
        "id": 196955960,
        "sender_full_name": "njn",
        "timestamp": 1588975567
    },
    {
        "content": "<p>yeah, makes sense. I wouldn't mind them</p>",
        "id": 196956002,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975617
    },
    {
        "content": "<p>with a hyphen, it's a bit clearer to me what it means if you see \"an incremental-full run\" rather than \"an incremental full run\" in a sentence</p>",
        "id": 196956005,
        "sender_full_name": "njn",
        "timestamp": 1588975619
    },
    {
        "content": "<p>esp. if it's in backquotes, to give fixed-width font</p>",
        "id": 196956024,
        "sender_full_name": "njn",
        "timestamp": 1588975641
    },
    {
        "content": "<p>Anyway, just my initial thoughts</p>",
        "id": 196956036,
        "sender_full_name": "njn",
        "timestamp": 1588975656
    },
    {
        "content": "<p>thanks!</p>",
        "id": 196956126,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975726
    },
    {
        "content": "<p>yeah I'll switch to hyphens</p>",
        "id": 196956135,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975734
    },
    {
        "content": "<p>The <code>RunKind</code> <a href=\"https://github.com/rust-lang/rustc-perf/blob/88e969aa9b85543a1904240794139d8afc7884cf/collector/src/bin/rustc-perf-collector/main.rs#L60-L65\" title=\"https://github.com/rust-lang/rustc-perf/blob/88e969aa9b85543a1904240794139d8afc7884cf/collector/src/bin/rustc-perf-collector/main.rs#L60-L65\">enum</a> would presumably become <code>Full</code>, <code>IncrFull</code>, <code>IncrUnchanged</code>, <code>IncrPatched</code>? The last one loses the pluralness that <code>PatchedIncrs</code> had.</p>",
        "id": 196956178,
        "sender_full_name": "njn",
        "timestamp": 1588975770
    },
    {
        "content": "<p>hm, I guess, yes</p>",
        "id": 196956311,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975865
    },
    {
        "content": "<p>I forgot about that</p>",
        "id": 196956318,
        "sender_full_name": "simulacrum",
        "timestamp": 1588975870
    },
    {
        "content": "<p>(I prefer fewer acronyms and contractions myself)</p>",
        "id": 196957066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588976408
    },
    {
        "content": "<p>but +1 to dashes</p>",
        "id": 196957067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588976411
    },
    {
        "content": "<p>I think incr is worth it, actually, lets us fit more onto the page and such. horizontal screen space is not <em>that</em> valuable but seems good, especially in e.g. github comments</p>",
        "id": 196960782,
        "sender_full_name": "simulacrum",
        "timestamp": 1588979616
    },
    {
        "content": "<p>and we can always revert if it's confusing</p>",
        "id": 196960793,
        "sender_full_name": "simulacrum",
        "timestamp": 1588979631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/perf.2Erlo.20naming/near/196914308\" title=\"#narrow/stream/131828-t-compiler/topic/perf.2Erlo.20naming/near/196914308\">said</a>:</p>\n<blockquote>\n<p>we do cargo check for -check, build for -debug and build --release for -opt</p>\n</blockquote>\n<p>would be nice to also have that documented somewhere on the compare page -- which commands are used for what.<br>\nsome time ago when I tried to reproduce perf results locally for debugging, I lost a lot of time measuring the wrong thing.</p>",
        "id": 196980899,
        "sender_full_name": "RalfJ",
        "timestamp": 1589013540
    },
    {
        "content": "<p>so I have notes like this still sitting somewhere that might or might not still be accurate:</p>\n<div class=\"codehilite\"><pre><span></span><code># How to reproduce...\n\n## ... &quot;patched incremental&quot; (opt) benchmarks\n\n# prepare\nrm target/release/incremental/ -rf &amp;&amp; git reset --hard HEAD &amp;&amp; CARGO_INCREMENTAL=1 cargo build --release\n# benchmark\npatch -p1 &lt; patch &amp;&amp; CARGO_INCREMENTAL=1 perf stat -- cargo build --release\n</code></pre></div>",
        "id": 196980970,
        "sender_full_name": "RalfJ",
        "timestamp": 1589013612
    },
    {
        "content": "<p>re: the new names and their explanation</p>\n<blockquote>\n<p>full (non-incremental, after cargo clean)<br>\n incr-full (after cargo clean) </p>\n</blockquote>\n<p>this makes it sound like incremental is the default, but AFAIK that is only the case for debug builds right?</p>",
        "id": 196981038,
        "sender_full_name": "RalfJ",
        "timestamp": 1589013781
    },
    {
        "content": "<p>so to reproduce incr-full \"opt\" I need to <code>cargo clean &amp;&amp; CARGO_INCREMENTAL=1 cargo build --release</code></p>",
        "id": 196981043,
        "sender_full_name": "RalfJ",
        "timestamp": 1589013807
    },
    {
        "content": "<p>so given that I think the page should also state that explicitly -- seems odd to emphasize \"non-incremental\" but then leave it unmentioned elsewhere (particularly since \"incr\" is abbreviated)</p>",
        "id": 196981088,
        "sender_full_name": "RalfJ",
        "timestamp": 1589013848
    },
    {
        "content": "<p>\"no change to target directory\" that's an odd statement, I dont usually change that dir, I change the rust files.<br>\nI get what you mean but I find this statement not very helpful. what about \"with previous build cache\" or \"no cargo clean\" or so?</p>",
        "id": 196981104,
        "sender_full_name": "RalfJ",
        "timestamp": 1589013932
    },
    {
        "content": "<p>Sure thing, can update! :)</p>",
        "id": 196987486,
        "sender_full_name": "simulacrum",
        "timestamp": 1589024285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> okay, I've updated the compare page and unified the two sets of descriptions into a single one at the top of the page</p>\n<p>for running things locally, I'm hesitant to document commands like that -- the preference should ~always be to use the collector. I guess that's not very self-explanatory though :/</p>",
        "id": 196991317,
        "sender_full_name": "simulacrum",
        "timestamp": 1589030182
    },
    {
        "content": "<p>hm, I dont recall why I did not do that back then</p>",
        "id": 196992119,
        "sender_full_name": "RalfJ",
        "timestamp": 1589031521
    },
    {
        "content": "<p>how hard is it to run the collector against a locally built stage 1 toolchain?</p>",
        "id": 196992123,
        "sender_full_name": "RalfJ",
        "timestamp": 1589031534
    },
    {
        "content": "<p>preferrably running just the one test one is looking at</p>",
        "id": 196992137,
        "sender_full_name": "RalfJ",
        "timestamp": 1589031551
    },
    {
        "content": "<p>explanations look good. :) just wondering:</p>\n<blockquote>\n<p>full: a non-incremental full build</p>\n</blockquote>\n<p>no more \"starting with empty cache\"?</p>",
        "id": 196992187,
        "sender_full_name": "RalfJ",
        "timestamp": 1589031612
    },
    {
        "content": "<p>it should be fairly easy</p>",
        "id": 197000798,
        "sender_full_name": "simulacrum",
        "timestamp": 1589043346
    },
    {
        "content": "<p>(naming is currently a bit in flux but that'll resolve itself relatively soon)</p>",
        "id": 197000804,
        "sender_full_name": "simulacrum",
        "timestamp": 1589043358
    }
]