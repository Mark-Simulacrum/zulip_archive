[
    {
        "content": "<p>oy</p>",
        "id": 136046003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872110
    },
    {
        "content": "<p>seems kind of problematic, esp. as I see uniform paths gaining in \"popularity\" in the recent lang discussion</p>",
        "id": 136046046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872156
    },
    {
        "content": "<p>yeah</p>",
        "id": 136046092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872167
    },
    {
        "content": "<p>maybe we should add T-lang to this ticket</p>",
        "id": 136046098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872173
    },
    {
        "content": "<p>it's also a 'false ambiguity'</p>",
        "id": 136046105,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872180
    },
    {
        "content": "<p>since both paths lead to the same place</p>",
        "id": 136046108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872183
    },
    {
        "content": "<p>and that ... should always be the case when this arises ... ?</p>",
        "id": 136046117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872196
    },
    {
        "content": "<p>also, isn't it goofy that it highlights the <code>extern crate criterion</code> with \"can refer to <code>self::criterion</code>\" ?</p>",
        "id": 136046162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872254
    },
    {
        "content": "<p>I thnk it is saying</p>",
        "id": 136046174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872270
    },
    {
        "content": "<p>maybe that's meant to say that the <code>extern crate</code> is <em>creating</em> that binding?</p>",
        "id": 136046181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872279
    },
    {
        "content": "<p>\"the path might be referring to this, <code>self::criterion</code>\"</p>",
        "id": 136046182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872281
    },
    {
        "content": "<p>yes, it's confusing</p>",
        "id": 136046220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872285
    },
    {
        "content": "<p>okay</p>",
        "id": 136046224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872292
    },
    {
        "content": "<p>ugh. Is this an RC2 blocker?</p>",
        "id": 136046252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872307
    },
    {
        "content": "<p>I think it might be</p>",
        "id": 136046257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872311
    },
    {
        "content": "<p>I'm feeling like it is</p>",
        "id": 136046262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872316
    },
    {
        "content": "<p>I'll make a note saying so</p>",
        "id": 136046272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872325
    },
    {
        "content": "<p>this is a <em>very</em> common scenario, no?</p>",
        "id": 136046276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872330
    },
    {
        "content": "<p>it's basically \"all code that uses an <code>extern crate</code> at root\"</p>",
        "id": 136046282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872339
    },
    {
        "content": "<p>but if we don't use uniform_paths</p>",
        "id": 136046310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872373
    },
    {
        "content": "<p>then it doesn't arise, right?</p>",
        "id": 136046315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872378
    },
    {
        "content": "<p>point is, we are future proofed</p>",
        "id": 136046321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872391
    },
    {
        "content": "<p>that is, we emit the errors</p>",
        "id": 136046325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872394
    },
    {
        "content": "<p>I.e. you have to opt into that feature in order to see this in the first place... right?</p>",
        "id": 136046380,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872408
    },
    {
        "content": "<p>no, you don't</p>",
        "id": 136046388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872424
    },
    {
        "content": "<p>oh I see, I misunderstood</p>",
        "id": 136046397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872437
    },
    {
        "content": "<p>we emit errors if you do something that would be incompatible with opting in to that future (in Rust 2018)</p>",
        "id": 136046403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872444
    },
    {
        "content": "<p>or</p>",
        "id": 136046405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872445
    },
    {
        "content": "<p>hmm</p>",
        "id": 136046430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872471
    },
    {
        "content": "<p>yeah this is worse since we turned on the future-proofing errors by default</p>",
        "id": 136046432,
        "sender_full_name": "eddyb",
        "timestamp": 1539872472
    },
    {
        "content": "<p>seems like a big \"oops\"</p>",
        "id": 136046444,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872486
    },
    {
        "content": "<p>otoh I don't know if we're going to fix it for RC2..?</p>",
        "id": 136046451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872492
    },
    {
        "content": "<p>I guess it depends how much of a plan you think you have :)</p>",
        "id": 136046457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872500
    },
    {
        "content": "<p>well, the thing that should happen here is the paths should be rewritten to <code>use ::crate_name::...;</code></p>",
        "id": 136046462,
        "sender_full_name": "eddyb",
        "timestamp": 1539872507
    },
    {
        "content": "<p>Do we need to alert the lang team to it?</p>",
        "id": 136046468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872510
    },
    {
        "content": "<p>but I really want to know what <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> thinks</p>",
        "id": 136046473,
        "sender_full_name": "eddyb",
        "timestamp": 1539872517
    },
    {
        "content": "<p>because he wants to eventually get rid of the canaries</p>",
        "id": 136046515,
        "sender_full_name": "eddyb",
        "timestamp": 1539872525
    },
    {
        "content": "<p>and I want to take that into account (if I even get to it before him)</p>",
        "id": 136046531,
        "sender_full_name": "eddyb",
        "timestamp": 1539872539
    },
    {
        "content": "<blockquote>\n<p>well, the thing that should happen here is the paths should be rewritten to <code>use ::crate_name::...;</code></p>\n</blockquote>\n<p>I mean I guess we could just do that but it will also run afoul of <a href=\"https://github.com/rust-lang-nursery/rustfmt/issues/3104\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/rustfmt/issues/3104\">https://github.com/rust-lang-nursery/rustfmt/issues/3104</a></p>",
        "id": 136046532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872539
    },
    {
        "content": "<p>yeah that's a bug that should be fixed</p>",
        "id": 136046543,
        "sender_full_name": "eddyb",
        "timestamp": 1539872559
    },
    {
        "content": "<p>oh wow it's rustfmt reading the edition from the wrong place</p>",
        "id": 136046556,
        "sender_full_name": "eddyb",
        "timestamp": 1539872582
    },
    {
        "content": "<p>yeah that's... bad. but also, hang on</p>",
        "id": 136046564,
        "sender_full_name": "eddyb",
        "timestamp": 1539872587
    },
    {
        "content": "<p>why doesn't <code>cargo fmt</code> pass <code>--edition</code>?</p>",
        "id": 136046570,
        "sender_full_name": "eddyb",
        "timestamp": 1539872602
    },
    {
        "content": "<p><code>cargo doc</code> passes <code>--edition</code> to <code>rustdoc</code>, right?</p>",
        "id": 136046581,
        "sender_full_name": "eddyb",
        "timestamp": 1539872612
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> Am I right in understanding your statement as saying that the current bug description does not accurately convey how severe the problem actually is right now, due to the other future-proofing changes?</p>",
        "id": 136046582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872613
    },
    {
        "content": "<blockquote>\n<p>why doesn't <code>cargo fmt</code> pass <code>--edition</code>?</p>\n</blockquote>\n<p>it might, I don't use that</p>",
        "id": 136046585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872619
    },
    {
        "content": "<p>oh</p>",
        "id": 136046586,
        "sender_full_name": "eddyb",
        "timestamp": 1539872624
    },
    {
        "content": "<p>I just have \"fmt on save\" enabled...</p>",
        "id": 136046592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872640
    },
    {
        "content": "<p>that should be using the Cargo integration I think</p>",
        "id": 136046635,
        "sender_full_name": "eddyb",
        "timestamp": 1539872650
    },
    {
        "content": "<blockquote>\n<p>yeah this is worse since we turned on the future-proofing errors by default</p>\n</blockquote>\n<p>By \"your statement\" i meant the above.</p>",
        "id": 136046637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872651
    },
    {
        "content": "<p>if you mean the RLS VSCode plugin</p>",
        "id": 136046643,
        "sender_full_name": "eddyb",
        "timestamp": 1539872658
    },
    {
        "content": "<p>...in emacs :P</p>",
        "id": 136046647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872664
    },
    {
        "content": "<p>oh, welp</p>",
        "id": 136046651,
        "sender_full_name": "eddyb",
        "timestamp": 1539872670
    },
    {
        "content": "<p>regardless, I think we should not be assuming outdated code by default, but I'l comment on the rustfmt issue :)</p>",
        "id": 136046655,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872682
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I mean it's possible to trigger the errors on stable which means we need to have a migration path</p>",
        "id": 136046666,
        "sender_full_name": "eddyb",
        "timestamp": 1539872699
    },
    {
        "content": "<p>okay</p>",
        "id": 136046684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872710
    },
    {
        "content": "<p>I was going to do that before getting bogged down in a million things, and I failed to sync up with <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>, which makes it harder to figure out the proper approach</p>",
        "id": 136046721,
        "sender_full_name": "eddyb",
        "timestamp": 1539872752
    },
    {
        "content": "<p>My current inclination is to <em>not</em> tag this with T-lang</p>",
        "id": 136046723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872755
    },
    {
        "content": "<p>I don't think it needs T-lang per se</p>",
        "id": 136046769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872768
    },
    {
        "content": "<p>how far away is RC2?</p>",
        "id": 136046770,
        "sender_full_name": "eddyb",
        "timestamp": 1539872770
    },
    {
        "content": "<p>not very :) Oct 25 is the official date</p>",
        "id": 136046773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872778
    },
    {
        "content": "<p>what tagging this issue with T-lang would help with?</p>",
        "id": 136046774,
        "sender_full_name": "nagisa",
        "timestamp": 1539872784
    },
    {
        "content": "<p>and is this the only thing I need to prioritize? (ugh, type aliases)</p>",
        "id": 136046778,
        "sender_full_name": "eddyb",
        "timestamp": 1539872787
    },
    {
        "content": "<p>oh wow, RC2 is on my birthday. how quaint :P</p>",
        "id": 136046785,
        "sender_full_name": "eddyb",
        "timestamp": 1539872796
    },
    {
        "content": "<p>it's the only RC2 blocker issue at present (type aliases are not on that list)</p>",
        "id": 136046794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872803
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I was thinking it would potentially influence the current debate about which path semantics to adopt</p>",
        "id": 136046796,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872805
    },
    {
        "content": "<p>oh those aren’t decided yet hmm…</p>",
        "id": 136046803,
        "sender_full_name": "nagisa",
        "timestamp": 1539872818
    },
    {
        "content": "<p>personally <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I think I'd prefer if <code>use foo</code> were not considered ambiguous in this scenario</p>",
        "id": 136046841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872857
    },
    {
        "content": "<p>is that something we could plausibly do?</p>",
        "id": 136046842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872860
    },
    {
        "content": "<p>okay so the plan is for me to find a way to emit changes to imports <em>somewhere</em> such that migration goes smoothly</p>",
        "id": 136046844,
        "sender_full_name": "eddyb",
        "timestamp": 1539872863
    },
    {
        "content": "<p>okay well ... I sort of want to keep moving in the meeting</p>",
        "id": 136046849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872867
    },
    {
        "content": "<p>What makes <a href=\"https://github.com/rust-lang/rust/issues/53797\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53797\">#53797</a> so important?</p>",
        "id": 136046852,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1539872871
    },
    {
        "content": "<p>i.e., we understand that <code>use self::foo</code> and <code>foo</code> from the prelude go to the same place :)</p>",
        "id": 136046854,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what criteria are you thinking of?</p>",
        "id": 136046887,
        "sender_full_name": "eddyb",
        "timestamp": 1539872883
    },
    {
        "content": "<p>Can't it be delayed?</p>",
        "id": 136046899,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1539872884
    },
    {
        "content": "<p>uhhh</p>",
        "id": 136046903,
        "sender_full_name": "eddyb",
        "timestamp": 1539872885
    },
    {
        "content": "<blockquote>\n<p>okay well ... I sort of want to keep moving in the meeting</p>\n</blockquote>\n<p>good idea... since <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> and <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> are here maybe we can break out a separate topic</p>",
        "id": 136046908,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> oh wait I fixed that...</p>",
        "id": 136046912,
        "sender_full_name": "eddyb",
        "timestamp": 1539872897
    },
    {
        "content": "<p>hang on, is it because <code>extern crate</code> has an extra level of indirection?</p>",
        "id": 136046920,
        "sender_full_name": "eddyb",
        "timestamp": 1539872917
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 136046922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872920
    },
    {
        "content": "<p>so I assumed the error was legit, but this is a good point</p>",
        "id": 136046929,
        "sender_full_name": "eddyb",
        "timestamp": 1539872932
    },
    {
        "content": "<p>the reason <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> that it seems important for RC2 is that it basically breaks all migration, no?</p>",
        "id": 136046932,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872934
    },
    {
        "content": "<p>let me do an alpha rename of the point where this discussino started</p>",
        "id": 136046933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872936
    },
    {
        "content": "<p><code>extern crate foo; use foo::x;</code> should not show up as ambiguous</p>",
        "id": 136046949,
        "sender_full_name": "eddyb",
        "timestamp": 1539872952
    },
    {
        "content": "<p>that is, any crate which uses <code>extern crate foo</code> (all of them) and has a <code>use foo::</code> at the root level (many of them...)</p>",
        "id": 136046956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872960
    },
    {
        "content": "<p>since those are the same entity</p>",
        "id": 136046958,
        "sender_full_name": "eddyb",
        "timestamp": 1539872962
    },
    {
        "content": "<p>I agree</p>",
        "id": 136046962,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872967
    },
    {
        "content": "<p>is it possible this is..just fixed?</p>",
        "id": 136046965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872971
    },
    {
        "content": "<p>has anyone tried?</p>",
        "id": 136046972,
        "sender_full_name": "eddyb",
        "timestamp": 1539872981
    },
    {
        "content": "<p>I haven't :P</p>",
        "id": 136046975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872984
    },
    {
        "content": "<p>we still need to do migration for things that would error from future-proofing</p>",
        "id": 136047042,
        "sender_full_name": "eddyb",
        "timestamp": 1539873010
    },
    {
        "content": "<p>but I guess the priority is lower other than this pattern that shouldn't even lower</p>",
        "id": 136047051,
        "sender_full_name": "eddyb",
        "timestamp": 1539873026
    },
    {
        "content": "<p>(Ok, I'll never be able to follow this chat real-time, so I'll look at the ticket later and write what I think there.)</p>",
        "id": 136047063,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1539873047
    },
    {
        "content": "<p>that does seem lower priority</p>",
        "id": 136047065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873049
    },
    {
        "content": "<p>(the more general case)</p>",
        "id": 136047077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873058
    },
    {
        "content": "<p>can we do something hacky, like... just check the extern prelude...?</p>",
        "id": 136047114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873074
    },
    {
        "content": "<p>(I wish I could easily split Zulip into two windows)</p>",
        "id": 136047125,
        "sender_full_name": "eddyb",
        "timestamp": 1539873087
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I already check for <em>distinct</em> targets</p>",
        "id": 136047132,
        "sender_full_name": "eddyb",
        "timestamp": 1539873094
    },
    {
        "content": "<p>this was needed to avoid <code>use foo;</code> being... ambiguous with itself</p>",
        "id": 136047141,
        "sender_full_name": "eddyb",
        "timestamp": 1539873107
    },
    {
        "content": "<p>without special-casing it, e.g. <code>use foo::{self as foo};</code> also works</p>",
        "id": 136047189,
        "sender_full_name": "eddyb",
        "timestamp": 1539873126
    },
    {
        "content": "<p>oh yes I remember that :)</p>",
        "id": 136047190,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873127
    },
    {
        "content": "<p>I am testing now <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 136047215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873167
    },
    {
        "content": "<p><code>extern crate rayon; use rayon::Scope;</code> works on nightly and beta</p>",
        "id": 136047246,
        "sender_full_name": "eddyb",
        "timestamp": 1539873217
    },
    {
        "content": "<p>in 2018?</p>",
        "id": 136047253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873229
    },
    {
        "content": "<p>yeah. lemme try switching on uniform paths</p>",
        "id": 136047297,
        "sender_full_name": "eddyb",
        "timestamp": 1539873244
    },
    {
        "content": "<p><span class=\"emoji emoji-1f630\" title=\"cold sweat\">:cold_sweat:</span> shew</p>",
        "id": 136047310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873260
    },
    {
        "content": "<p>also works</p>",
        "id": 136047312,
        "sender_full_name": "eddyb",
        "timestamp": 1539873261
    },
    {
        "content": "<p>I confirm it works in my test too</p>",
        "id": 136047328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873281
    },
    {
        "content": "<p>I'll close</p>",
        "id": 136047329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873282
    },
    {
        "content": "<p>well I guess <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> did you want to have an issue for conflicts in the more general case?</p>",
        "id": 136047381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873335
    },
    {
        "content": "<p>I don't know <em>shrug</em></p>",
        "id": 136047441,
        "sender_full_name": "eddyb",
        "timestamp": 1539873363
    },
    {
        "content": "<p>I'm glad this isn't a RC2 blocker</p>",
        "id": 136047448,
        "sender_full_name": "eddyb",
        "timestamp": 1539873370
    },
    {
        "content": "<p>I mean, frankly, nobody could've migrated :P</p>",
        "id": 136047458,
        "sender_full_name": "eddyb",
        "timestamp": 1539873379
    },
    {
        "content": "<p>if this was still around</p>",
        "id": 136047471,
        "sender_full_name": "eddyb",
        "timestamp": 1539873391
    },
    {
        "content": "<p>so it makes sense that it's fixed</p>",
        "id": 136047481,
        "sender_full_name": "eddyb",
        "timestamp": 1539873401
    },
    {
        "content": "<p>confirm, this is why I was confused</p>",
        "id": 136047503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873425
    },
    {
        "content": "<p>I was afraid people had just stopped testing :)</p>",
        "id": 136047508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873431
    },
    {
        "content": "<p>I'm going to close the issue for now</p>",
        "id": 136047517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873449
    },
    {
        "content": "<p>if we want one for the more general case, we should make an example</p>",
        "id": 136047528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873462
    },
    {
        "content": "<p>I don't think you can hit the more general case, actually</p>",
        "id": 136047601,
        "sender_full_name": "eddyb",
        "timestamp": 1539873512
    },
    {
        "content": "<p>because everything crate-local gets rewritten to <code>use crate::...</code></p>",
        "id": 136047614,
        "sender_full_name": "eddyb",
        "timestamp": 1539873530
    },
    {
        "content": "<p>that would be nice :) this is why I was saying we should get a concrete example</p>",
        "id": 136047615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873531
    },
    {
        "content": "<p>I think what I <em>actually</em> wanted was a migration to uniform paths that <em>removes</em> <code>self::</code> and whatnot</p>",
        "id": 136047649,
        "sender_full_name": "eddyb",
        "timestamp": 1539873576
    },
    {
        "content": "<p>we could probably do that <em>within</em> the 2018 edition though</p>",
        "id": 136047663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873592
    },
    {
        "content": "<p>e.g., as an idiom lint</p>",
        "id": 136047665,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873595
    },
    {
        "content": "<p>yeah I'm not even sure what I was worried about now</p>",
        "id": 136047711,
        "sender_full_name": "eddyb",
        "timestamp": 1539873605
    },
    {
        "content": "<p>though I'd be a bit reluctant until we know the full conventions we want (well, it's probably good to remove <code>use self::</code>)</p>",
        "id": 136047730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873623
    },
    {
        "content": "<p>hang on, no, I remember now</p>",
        "id": 136047851,
        "sender_full_name": "eddyb",
        "timestamp": 1539873746
    },
    {
        "content": "<p>bad news <a href=\"https://github.com/rust-lang/rust/issues/53797#issuecomment-431038351\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53797#issuecomment-431038351\">https://github.com/rust-lang/rust/issues/53797#issuecomment-431038351</a></p>",
        "id": 136048221,
        "sender_full_name": "eddyb",
        "timestamp": 1539874121
    },
    {
        "content": "<p>well</p>",
        "id": 136048346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874218
    },
    {
        "content": "<p>ok, let's re-open, but I think lower priority</p>",
        "id": 136048351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874226
    },
    {
        "content": "<p>at some point, to address a similar problem</p>",
        "id": 136048367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874234
    },
    {
        "content": "<p>I had planned to just collect a global list of all modules</p>",
        "id": 136048373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874239
    },
    {
        "content": "<p>if an extern crate were shadowed <em>anywhere</em></p>",
        "id": 136048381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874244
    },
    {
        "content": "<p>I was going to conservatively rewrite to the absolute form</p>",
        "id": 136048390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874254
    },
    {
        "content": "<p>obviously imprecise but not <em>wrong</em></p>",
        "id": 136048393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874258
    },
    {
        "content": "<p>and the presumption is that this doesn't arise that much in practice</p>",
        "id": 136048403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874265
    },
    {
        "content": "<p>that'd be a quick fix ;)</p>",
        "id": 136048412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874269
    },
    {
        "content": "<p>aaah that's an interesting approach</p>",
        "id": 136048422,
        "sender_full_name": "eddyb",
        "timestamp": 1539874282
    },
    {
        "content": "<p>but \"a list of all modules\" is not exactly enough</p>",
        "id": 136048439,
        "sender_full_name": "eddyb",
        "timestamp": 1539874296
    },
    {
        "content": "<p>yeah I figured that as I wrote it</p>",
        "id": 136048452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874313
    },
    {
        "content": "<p>well, list of all \"possibly shadowing things\"</p>",
        "id": 136048455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874318
    },
    {
        "content": "<p><code>use crate_name::...;</code> will touch anything in the type namespace</p>",
        "id": 136048480,
        "sender_full_name": "eddyb",
        "timestamp": 1539874322
    },
    {
        "content": "<p>while <code>use crate_name;</code> will, well, - wait, so, I was going to say \"all namespaces\" and that's accurate</p>",
        "id": 136048515,
        "sender_full_name": "eddyb",
        "timestamp": 1539874353
    },
    {
        "content": "<p>but your suggestion is more about crate-wide confusion between an internal module and a dependency</p>",
        "id": 136048541,
        "sender_full_name": "eddyb",
        "timestamp": 1539874383
    },
    {
        "content": "<p>for which you really only care about modules. it's not a migration strategy, it's a potential idiom</p>",
        "id": 136048556,
        "sender_full_name": "eddyb",
        "timestamp": 1539874401
    },
    {
        "content": "<blockquote>\n<p>for which you really only care about modules. it's not a migration strategy, it's a potential idiom</p>\n</blockquote>\n<p>I don't quite understand what you mean by that</p>",
        "id": 136048583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874433
    },
    {
        "content": "<p>a migration strategy would mostly be \"does this name resolve in the scope of the <code>use</code>? if so, use the absolute path form\"</p>",
        "id": 136048628,
        "sender_full_name": "eddyb",
        "timestamp": 1539874447
    },
    {
        "content": "<p>I mean that \"is there any module with this name <em>anywhere</em> in the crate\" is more of a heuristic for \"should I disambiguate the dependency crate <em>everywhere</em>\" as a \"lowering confusion at the level of an entire crate\" idiom of sorts</p>",
        "id": 136048712,
        "sender_full_name": "eddyb",
        "timestamp": 1539874535
    },
    {
        "content": "<p>it's neither sufficient nor necessary for migration, but it's a neat idiom</p>",
        "id": 136048733,
        "sender_full_name": "eddyb",
        "timestamp": 1539874556
    }
]