[
    {
        "content": "<p>Is there an explanation for the names of the constructors in CtorKind? Why are they so different from VariantData if they map 1-1? I don't understand why a tuple constructor would be called <code>Fn</code></p>",
        "id": 214205397,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1603381236
    },
    {
        "content": "<p>Why would a struct constructor be <code>Fictive</code> ??</p>",
        "id": 214205604,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1603381326
    },
    {
        "content": "<p>Tuple struct constructors are functions, and unit struct constructors are constants, it's pretty simple - <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1506-adt-kinds.md\">https://github.com/rust-lang/rfcs/blob/master/text/1506-adt-kinds.md</a></p>",
        "id": 214243721,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1603398397
    },
    {
        "content": "<p><code>Fictive</code> exists because braced enum variants are reserved in value namespace, i.e. for <code>enum E { V { a: u8 } }</code> <code>E::V</code> is a valid value path from name resolution point of view, but such paths are then immediately rejected by a semantic check anywhere except for imports.<br>\nThis reservation long overstayed its welcome though, since you reminded me of it I'll try to remove it and see what the lang team things about it now 4 or 5 years later.</p>",
        "id": 214244361,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1603398728
    },
    {
        "content": "<p>oh huh i didn't realize tuple constructors were functions, I thought they got built like structs did</p>",
        "id": 214562995,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1603712728
    }
]