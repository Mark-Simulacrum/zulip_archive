[
    {
        "content": "<p>I will be doing pre-triage in this channel.</p>",
        "id": 180715846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573725872
    },
    {
        "content": "<p>first up: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\">unprioritized nominated T-compiler issues</a></p>",
        "id": 180716320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726231
    },
    {
        "content": "<p>unpri nom 1/10: \"<code>clippy-driver</code> no longer builds after <a href=\"https://github.com/rust-lang/rust/issues/66233\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66233\">rust-lang/rust#66233</a>\" <a href=\"https://github.com/rust-lang/rust/issues/66409\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66409\">#66409</a></p>",
        "id": 180716339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726247
    },
    {
        "content": "<p>P-medium. removing nomination.</p>",
        "id": 180716347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726259
    },
    {
        "content": "<p>unpri nom 2/10: \"Compiler error while compiling Winrt\" <a href=\"https://github.com/rust-lang/rust/issues/66402\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66402\">#66402</a></p>",
        "id": 180716391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726301
    },
    {
        "content": "<p>classifying as P-high for now. Though the lack of a MCVE and the fact that the witnessing crate is presumably Windows-specific adds a bit of impedance to addressing this.</p>",
        "id": 180716759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726620
    },
    {
        "content": "<p>unpri nom 3/10: \"Compiler crash on \"if\" without \"else\" in async fn\" <a href=\"https://github.com/rust-lang/rust/issues/66387\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66387\">#66387</a></p>",
        "id": 180716800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726673
    },
    {
        "content": "<p>has PR</p>",
        "id": 180716849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726692
    },
    {
        "content": "<p>classifying as P-high.</p>",
        "id": 180716858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726702
    },
    {
        "content": "<p>(we have unnominated a few PRs which got PRs before the meeting)</p>",
        "id": 180716893,
        "sender_full_name": "centril",
        "timestamp": 1573726733
    },
    {
        "content": "<p>(we = release team)</p>",
        "id": 180716898,
        "sender_full_name": "centril",
        "timestamp": 1573726736
    },
    {
        "content": "<p>unpri nom 4/10: \"Internal Compiler Error @ parser.rs:446:22\" <a href=\"https://github.com/rust-lang/rust/issues/66357\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66357\">#66357</a></p>",
        "id": 180716953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726789
    },
    {
        "content": "<p>I fixed yesterday <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 180717001,
        "sender_full_name": "centril",
        "timestamp": 1573726807
    },
    {
        "content": "<p>yeah I remember laughing when I saw <code>fn f() { |[](* }</code></p>",
        "id": 180717016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726830
    },
    {
        "content": "<p>:D</p>",
        "id": 180717029,
        "sender_full_name": "centril",
        "timestamp": 1573726839
    },
    {
        "content": "<p>classifying as P-high, unnominating.</p>",
        "id": 180717050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726863
    },
    {
        "content": "<p>unpri nom 5/10: \"ICE when using reference variable from iterator (instead of copying it): thread 'rustc' panicked at 'already borrowed: BorrowMutError'\" <a href=\"https://github.com/rust-lang/rust/issues/66353\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66353\">#66353</a></p>",
        "id": 180717085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573726907
    },
    {
        "content": "<p>has PR, r+ed</p>",
        "id": 180717145,
        "sender_full_name": "centril",
        "timestamp": 1573726948
    },
    {
        "content": "<p>(just reading over the PR myself, and thinking about the borrow_mut failure)</p>",
        "id": 180717312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727087
    },
    {
        "content": "<p>I r+ed it because we can do the principled fix some other time</p>",
        "id": 180717517,
        "sender_full_name": "centril",
        "timestamp": 1573727234
    },
    {
        "content": "<p>I'm musing about a debugging variant of <code>RefCell</code> that stored a stack-trace on each borrow, so that a <code>borrow_mut</code> failure could actually print a stack trace</p>",
        "id": 180717523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727243
    },
    {
        "content": "<p>(assuming there is one)</p>",
        "id": 180717526,
        "sender_full_name": "centril",
        "timestamp": 1573727248
    },
    {
        "content": "<p>anyway I'm not going to do this now</p>",
        "id": 180717532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727253
    },
    {
        "content": "<p>P-high. Removing nomination label.</p>",
        "id": 180717601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727294
    },
    {
        "content": "<p>unpri nom 6/10: \"Spurious x86_64 Windows CI failures due to OOM\" <a href=\"https://github.com/rust-lang/rust/issues/664342\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/664342\">#664342</a></p>",
        "id": 180717646,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727341
    },
    {
        "content": "<p>has PR. P-high. Removing nomination label.</p>",
        "id": 180717755,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727413
    },
    {
        "content": "<p>unpri nom 7/10: \"<code>miri</code> no longer builds after <a href=\"https://github.com/rust-lang/rust/issues/66252\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66252\">rust-lang/rust#66252</a>\" <a href=\"https://github.com/rust-lang/rust/issues/66301\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66301\">#66301</a></p>",
        "id": 180717791,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727458
    },
    {
        "content": "<p>P-medium, removing nomination.</p>",
        "id": 180717805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727468
    },
    {
        "content": "<p>unpri nom 8/10: \"thread 'rustc' panicked at 'called <code>Option::unwrap()</code> on a <code>None</code> value'\" <a href=\"https://github.com/rust-lang/rust/issues/66286\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66286\">#66286</a></p>",
        "id": 180717894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727534
    },
    {
        "content": "<p>has PR. P-high. Removing nomination label.</p>",
        "id": 180717904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727543
    },
    {
        "content": "<p>unpri nom 9/10: \"improper_ctypes fires for &amp;mut T, &amp;T, *const T and *mut T\" <a href=\"https://github.com/rust-lang/rust/issues/66220\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66220\">#66220</a></p>",
        "id": 180717947,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727599
    },
    {
        "content": "<p>so I nominated this, in part to decide if we should wait for nuance or post reverting PR. Since I nominated, a reversion PR was posted, r+'ed by eddyb, then r-'ed by rkruppe due to my own nomination (presumably they didn't want to step on our toes), and then re-r+'ed by me this morning.</p>",
        "id": 180718023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727661
    },
    {
        "content": "<p>I'm going to triage it as P-high, but <em>leave</em> it nominated. I want to try to discuss at the meeting, at least for a little bit, what philosophy we want to follow when it comes to the Question of how eagerly to revert PR's in situations like this.</p>",
        "id": 180718107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727752
    },
    {
        "content": "<p>(And also, i think the actual PR itself, in terms of the approach we want to strive for, is also worth discussing.)</p>",
        "id": 180718191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727814
    },
    {
        "content": "<p>unpri nom 10/10: \"sysroot spans are not printed on some targets (affected: Debian, rust-lang's own i586; unaffected: Fedora)\" <a href=\"https://github.com/rust-lang/rust/issues/53081\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53081\">#53081</a></p>",
        "id": 180718316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573727893
    },
    {
        "content": "<p>marking P-high. Leaving nominated: the team should discuss solutions to this, maybe actually task someone with coming up with something.</p>",
        "id": 180718498,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728037
    },
    {
        "content": "<p>next up: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\">beta-regressions without P-label</a></p>",
        "id": 180718673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728168
    },
    {
        "content": "<p>unpri beta-reg 1/2: \"Large locals can cause OOMs during the <code>ConstProp</code> pass\" <a href=\"https://github.com/rust-lang/rust/issues/66397\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66397\">#66397</a></p>",
        "id": 180718711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728193
    },
    {
        "content": "<p>has PR. P-high.</p>",
        "id": 180718725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728213
    },
    {
        "content": "<p>nominating the associated PR (<a href=\"https://github.com/rust-lang/rust/issues/66394\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66394\">#66394</a>) for beta backport; but it only went up 10 hours ago so I don't expect us to actually backport it this week...</p>",
        "id": 180718789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728245
    },
    {
        "content": "<p>unpri beta-reg 2/2: \"SIGSEGV compiling num-integer for asmjs-unknown-emscripten\" <a href=\"https://github.com/rust-lang/rust/issues/66308\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66308\">#66308</a></p>",
        "id": 180718897,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728335
    },
    {
        "content": "<p>what tier is this target?</p>",
        "id": 180719098,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728495
    },
    {
        "content": "<p>lemme check</p>",
        "id": 180719111,
        "sender_full_name": "centril",
        "timestamp": 1573728510
    },
    {
        "content": "<p>tier 2</p>",
        "id": 180719132,
        "sender_full_name": "centril",
        "timestamp": 1573728529
    },
    {
        "content": "<p>okay</p>",
        "id": 180719137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728533
    },
    {
        "content": "<p>I'm going to triage this as P-high for now, at least for the initial investigation</p>",
        "id": 180719204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728585
    },
    {
        "content": "<p>but given that its a tier 2 target ... well, I'll just say that I'm not committed to P-high for the long term.</p>",
        "id": 180719252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728606
    },
    {
        "content": "<p>next up: nightly regressions without P-label ... there are none! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 180719341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728708
    },
    {
        "content": "<p>next up: reviewing all <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AI-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AI-nominated+label%3AT-compiler\">nominated</a> issues to see if any should be unnominated (e.g. if they were discussed last week)</p>",
        "id": 180719464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728816
    },
    {
        "content": "<p>we already discussed <a href=\"https://github.com/rust-lang/rust/issues/66220\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66220\">#66220</a> and <a href=\"https://github.com/rust-lang/rust/issues/53081\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53081\">#53081</a></p>",
        "id": 180719491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728841
    },
    {
        "content": "<p>only other nomination is \"Some features can no longer be controlled by conditional compilation\" <a href=\"https://github.com/rust-lang/rust/issues/65860\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65860\">#65860</a> ... which I think we discussed last week ... lets see ...</p>",
        "id": 180719597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728917
    },
    {
        "content": "<p>I need to get back to that</p>",
        "id": 180719626,
        "sender_full_name": "centril",
        "timestamp": 1573728955
    },
    {
        "content": "<p>ah right, we <a href=\"https://zulip-archive.rust-lang.org/131828tcompiler/04503weeklymeeting2019110754818.html#180145391\" target=\"_blank\" title=\"https://zulip-archive.rust-lang.org/131828tcompiler/04503weeklymeeting2019110754818.html#180145391\">touched on it</a></p>",
        "id": 180719674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728964
    },
    {
        "content": "<p>crater results are clearly favourable</p>",
        "id": 180719676,
        "sender_full_name": "centril",
        "timestamp": 1573728965
    },
    {
        "content": "<p>we then discussed it at t-lang</p>",
        "id": 180719698,
        "sender_full_name": "centril",
        "timestamp": 1573728996
    },
    {
        "content": "<p>I think the general feeling was that the triage meeting was not going to be the right place to discuss the question about the overall approach</p>",
        "id": 180719699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573728996
    },
    {
        "content": "<p>right; let me find the link to those notes from T-lang meeting</p>",
        "id": 180719728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729030
    },
    {
        "content": "<p>I see <a href=\"https://github.com/rust-lang/lang-team/blob/master/minutes/2019-11-07.md#discussion-from-pre-triage-\" target=\"_blank\" title=\"https://github.com/rust-lang/lang-team/blob/master/minutes/2019-11-07.md#discussion-from-pre-triage-\">this</a></p>",
        "id": 180719783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729083
    },
    {
        "content": "<p>I definitely don't think that comment reflects the actual discussion in the lang meeting</p>",
        "id": 180719838,
        "sender_full_name": "centril",
        "timestamp": 1573729120
    },
    {
        "content": "<p>the lang meetings themselves are videotaped</p>",
        "id": 180719858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729151
    },
    {
        "content": "<p>not the pre-triage <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 180719871,
        "sender_full_name": "centril",
        "timestamp": 1573729158
    },
    {
        "content": "<p>was this only discussed during T-lang pre-triage</p>",
        "id": 180719874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729160
    },
    {
        "content": "<p>yeah okay that's what I figured</p>",
        "id": 180719877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729164
    },
    {
        "content": "<p>(helps explain why I don't remember discussion)</p>",
        "id": 180719895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729180
    },
    {
        "content": "<p>So I can maybe find the time to send some PRs (tho it's also not a requirement imo, and we've made things into hard errors with way more regressions than that, NLL errors in particular).<br>\nBeyond that, I think the PR should be re-reverted at least for the gates which had zero regressions. If someone wants to to propose something special about <code>{</code> and <code>}</code> then that is a language feature request and should go through an RFC</p>",
        "id": 180719959,
        "sender_full_name": "centril",
        "timestamp": 1573729218
    },
    {
        "content": "<p>I don't like the idea of using NLL as precedent here.</p>",
        "id": 180719986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> there are many other cases <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 180720005,
        "sender_full_name": "centril",
        "timestamp": 1573729265
    },
    {
        "content": "<p>anyway, the main thing to resolve right now is: Should this remain on the nominated items for T-compiler?</p>",
        "id": 180720048,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729315
    },
    {
        "content": "<p>or should it be shifted to T-lang? Or moved to async discussion?</p>",
        "id": 180720100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729333
    },
    {
        "content": "<p>I'm not sure</p>",
        "id": 180720110,
        "sender_full_name": "centril",
        "timestamp": 1573729344
    },
    {
        "content": "<p>okay. I'll leave it nominated.</p>",
        "id": 180720125,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729358
    },
    {
        "content": "<p>(And will try harder to extract an answer to that Q at today's meeting.)</p>",
        "id": 180720155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729379
    },
    {
        "content": "<p>I had meant to leave a comment but didn't find the time</p>",
        "id": 180720170,
        "sender_full_name": "centril",
        "timestamp": 1573729387
    },
    {
        "content": "<p>Alright. For the first time I think in three weeks, I've gotten to the P-high traversal with, I hope, <em>plenty</em> of time to actually do the traversal.</p>",
        "id": 180720275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729471
    },
    {
        "content": "<p>lets traverse by <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+sort%3Aupdated-asc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+sort%3Aupdated-asc\">LRU order</a> today.</p>",
        "id": 180720356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729553
    },
    {
        "content": "<p>P-high 1/36: \"1.30 -&gt; 1.31 dylib late-binding regression with GNU binutils 2.28 or older.\" <a href=\"https://github.com/rust-lang/rust/issues/61539\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61539\">#61539</a></p>",
        "id": 180720480,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729627
    },
    {
        "content": "<p>I'll leave some comments</p>",
        "id": 180720598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729717
    },
    {
        "content": "<p>(its essentially my bug, since I'm the one who's keeping it alive [versus just saying \"distributions+people need to upgrade their version of <code>binutils</code>]. I'm debating about whether I should just downgrade to P-medium to reflect the reality of what severity we are treating this with ... )</p>",
        "id": 180720638,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729746
    },
    {
        "content": "<p>P-high 2/36: \"Rustc does display a correct error message on type missmatch but does not show line numbers <a href=\"https://github.com/rust-lang/rust/issues/51635\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51635\">#51635</a></p>",
        "id": 180720803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573729913
    },
    {
        "content": "<p>still needs a more minimal MCVE (at least, I'd prefer one that replaces the use of <code>rocket</code> with a minimal proc-macro definition...)</p>",
        "id": 180720996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573730058
    },
    {
        "content": "<p>P-high 3/36: \"Compiler crash on associated type violating its bounds in a blanket impl\" <a href=\"https://github.com/rust-lang/rust/issues/54108\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54108\">#54108</a></p>",
        "id": 180721585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573730560
    },
    {
        "content": "<p>downgrading to P-medium (see discussion on ticket)</p>",
        "id": 180721610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573730594
    },
    {
        "content": "<p>P-high 4/36: \"ICE when using anonymization in impl Trait with HRTB\" <a href=\"https://github.com/rust-lang/rust/issues/54895\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54895\">#54895</a></p>",
        "id": 180721693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573730646
    },
    {
        "content": "<p>left comment on ticket and self-assigning.</p>",
        "id": 180721939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573730936
    },
    {
        "content": "<p>P-high 5/36: \"ICE in macro: doc meta with expr on an item, string concat, stringify!(...)\" <a href=\"https://github.com/rust-lang/rust/issues/55414\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55414\">#55414</a></p>",
        "id": 180721960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573730958
    },
    {
        "content": "<p>left a comment. This looks like it might be \"easy\" to resolve. Or maybe adding the desired visit method might cause regressions elsewhere: one might need to audit the existing Visitors to figure out whether the put back in the noop <code>visit_token</code>  ; I imagine that audit is the hardest part of that fix, and probably the reason no one has taken this up yet.</p>",
        "id": 180722409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731416
    },
    {
        "content": "<p>P-high 6/36: \"ICE: Generic type alias to invalid type crashes during type check on latest stable\" <a href=\"https://github.com/rust-lang/rust/issues/62742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62742\">#62742</a></p>",
        "id": 180722419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731432
    },
    {
        "content": "<p>(niko has been looking at this, and posted a comment back on October 9th. It seems like its getting the attention it deserves, in the literal sense...)</p>",
        "id": 180722453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731477
    },
    {
        "content": "<p>P-high 7/36: \"ICE resolving non-existent PartialEq::Eq from match of const\" <a href=\"https://github.com/rust-lang/rust/issues/65466\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65466\">#65466</a></p>",
        "id": 180722499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731492
    },
    {
        "content": "<p>I should at least check if my PR <a href=\"https://github.com/rust-lang/rust/issues/66120\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66120\">#66120</a> changes behavior here</p>",
        "id": 180722541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731570
    },
    {
        "content": "<p>(a PR that I need to come back to...)</p>",
        "id": 180722555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731590
    },
    {
        "content": "<p>P-high 8/36: \"internal compiler error: src/librustc/dep_graph/graph.rs:688: DepNode Hir(...) should have been pre-allocated but wasn't.\" <a href=\"https://github.com/rust-lang/rust/issues/62649\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62649\">#62649</a></p>",
        "id": 180722624,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731637
    },
    {
        "content": "<p>(while looking at this, decided to close <a href=\"https://github.com/rust-lang/rust/issues/66187\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66187\">#66187</a> as duplicate)</p>",
        "id": 180722740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573731745
    },
    {
        "content": "<p>(while looking at this, decided to close <a href=\"https://github.com/rust-lang/rust/issues/63150\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63150\">#63150</a>  as non-actionable without info about the delta that caused  incr compilation to fail)</p>",
        "id": 180722985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573732067
    },
    {
        "content": "<p>left comment on <a href=\"https://github.com/rust-lang/rust/issues/62649\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62649\">#62649</a></p>",
        "id": 180723206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573732258
    },
    {
        "content": "<p>P-high 9/36 (or 34 now?): \"ICE from const item in lifetime-parametric impl\" <a href=\"https://github.com/rust-lang/rust/issues/56445\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56445\">#56445</a></p>",
        "id": 180723231,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573732299
    },
    {
        "content": "<p>interesting comment there from github user PlasmaPower</p>",
        "id": 180723297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573732354
    },
    {
        "content": "<p>hmm. Tracking issue for const generics (<a href=\"https://github.com/rust-lang/rust/issues/44580\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/44580\">#44580</a>) has been locked</p>",
        "id": 180723619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573732713
    },
    {
        "content": "<p>(because there some vigorous discussion of syntactic alternatives on the thread, and people (rightly) pointed out that the tracking issue is not the right place for such discussion.)</p>",
        "id": 180723806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573732906
    },
    {
        "content": "<p>anyway I don't think there's anything to report here</p>",
        "id": 180723924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733002
    },
    {
        "content": "<p>main question is whether it should remain P-high ...</p>",
        "id": 180723930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733012
    },
    {
        "content": "<p>maybe we can prioritize figuring out a way to provide a better error message here?</p>",
        "id": 180723965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733041
    },
    {
        "content": "<p>anyway left comment saying that.</p>",
        "id": 180724422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733519
    },
    {
        "content": "<p>(and closed another issue I found as a duplicate of this one)</p>",
        "id": 180724476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733536
    },
    {
        "content": "<p>P-high 10/34: \"debuginfo/pretty-uninitialized-vec fails with <code>Cannot access memory at address 0x7fffff7fe000</code>\" <a href=\"https://github.com/rust-lang/rust/issues/64343\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64343\">#64343</a></p>",
        "id": 180724495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733563
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> , did T-release end up just marking the debuginfo test here as <code>// ignore</code> ?</p>",
        "id": 180724520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733601
    },
    {
        "content": "<p>havent had time yet</p>",
        "id": 180724537,
        "sender_full_name": "centril",
        "timestamp": 1573733622
    },
    {
        "content": "<p>okay just curious</p>",
        "id": 180724542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733627
    },
    {
        "content": "<p>you can assign to me to do that</p>",
        "id": 180724551,
        "sender_full_name": "centril",
        "timestamp": 1573733637
    },
    {
        "content": "<p>okay I'll add you as assignee list</p>",
        "id": 180724606,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733661
    },
    {
        "content": "<p>(but if you do add the <code>// ignore</code>, I'm not sure the answer would be to close this bug. Probably better to just downgrade it to P-medium after the test is ignored ...?)</p>",
        "id": 180724654,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733717
    },
    {
        "content": "<p>yea</p>",
        "id": 180724665,
        "sender_full_name": "centril",
        "timestamp": 1573733728
    },
    {
        "content": "<p>P-high 11/34: \"Rustc panics (NoSolution): could not prove Binder(projection soup)\" <a href=\"https://github.com/rust-lang/rust/issues/65581\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65581\">#65581</a></p>",
        "id": 180724794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733830
    },
    {
        "content": "<p>hmm. Should be investigated, but hasn't been since I marked it P-high 3 weeks ago.</p>",
        "id": 180724921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733929
    },
    {
        "content": "<p>I'll post it in the main meeting area as a request for help</p>",
        "id": 180724936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573733945
    },
    {
        "content": "<p>P-high 12/34: \"Coherence can be bypassed by an indirect impl for a trait object\" <a href=\"https://github.com/rust-lang/rust/issues/57893\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57893\">#57893</a></p>",
        "id": 180725043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734036
    },
    {
        "content": "<p>niko and others have been looking at this, as you can see from comments in issue</p>",
        "id": 180725070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734063
    },
    {
        "content": "<p>has hypothetical fix put up for crater run in PR <a href=\"https://github.com/rust-lang/rust/issues/66037\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66037\">#66037</a></p>",
        "id": 180725083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734088
    },
    {
        "content": "<p>so, things are actually progressing well there</p>",
        "id": 180725102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734111
    },
    {
        "content": "<p>P-high 13/34: \"ICE: errors resolving bounds after type-checking for fmt::Display\" <a href=\"https://github.com/rust-lang/rust/issues/65774\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65774\">#65774</a></p>",
        "id": 180725157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734128
    },
    {
        "content": "<p>some weeks ago I started a blog post on semi-mechanical techniques for turning code into an MCVE</p>",
        "id": 180725528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734475
    },
    {
        "content": "<p>I really need to finish it</p>",
        "id": 180725529,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734478
    },
    {
        "content": "<p>(I think a significant number of people fail to provide an MCVE because they try to start small and build up -- but cannot find the path to the destination -- rather than starting from the original and cutting it down.)</p>",
        "id": 180725609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573734537
    },
    {
        "content": "<p>anyway, looked a bit at <a href=\"https://github.com/rust-lang/rust/issues/65774\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65774\">#65774</a>. Couldn't reproduce (built accessifully, at least with certain flags that reflected those given in bug description.) Closing as non-reproducible (left more details in my comment on ticket).</p>",
        "id": 180726554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735333
    },
    {
        "content": "<p>P-high 14/34: \"Rust 1.38 regressions weren't fully triaged\" <a href=\"https://github.com/rust-lang/rust/issues/65577\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65577\">#65577</a></p>",
        "id": 180726570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735349
    },
    {
        "content": "<p>hmm no one has been assigned to do the actual triage here.</p>",
        "id": 180726589,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735373
    },
    {
        "content": "<p>left comment in main meeting area</p>",
        "id": 180726712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735456
    },
    {
        "content": "<p>most of these are due to NLL stuff</p>",
        "id": 180726714,
        "sender_full_name": "centril",
        "timestamp": 1573735457
    },
    {
        "content": "<p>P-high 15/34: \"LLVM ERROR: Access past stack top!\" when compiling without sse2\" <a href=\"https://github.com/rust-lang/rust/issues/65844\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65844\">#65844</a></p>",
        "id": 180726721,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> the NLL stuff are the cases that <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> already triaged, right? The remaining work is five cases that are not related to NLL (or at least not obviously related)</p>",
        "id": 180726797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735526
    },
    {
        "content": "<p>seems right yeah</p>",
        "id": 180726812,
        "sender_full_name": "centril",
        "timestamp": 1573735538
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/65844\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65844\">#65844</a> was advertised to LLVM ice breakers and we did get some info from comments on it</p>",
        "id": 180726908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735591
    },
    {
        "content": "<p>and, oooh boy, I get a spurious segfault directly from my own <code>rustc +nightly-2019-10-24</code> on it</p>",
        "id": 180727316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573735983
    },
    {
        "content": "<p>(assigned self for further investigation)</p>",
        "id": 180727423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> have I mentioned you self-assign too much? :D</p>",
        "id": 180727443,
        "sender_full_name": "centril",
        "timestamp": 1573736126
    },
    {
        "content": "<p>yep</p>",
        "id": 180727452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736133
    },
    {
        "content": "<p>or rather</p>",
        "id": 180727455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736135
    },
    {
        "content": "<p>I agree, and I'm trying to not do it so much</p>",
        "id": 180727459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736142
    },
    {
        "content": "<p>we should try it with an alt build</p>",
        "id": 180727464,
        "sender_full_name": "simulacrum",
        "timestamp": 1573736146
    },
    {
        "content": "<p>what's an alt build?</p>",
        "id": 180727469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736155
    },
    {
        "content": "<blockquote>\n<p>I agree, and I'm trying to not do it so much</p>\n</blockquote>\n<p>(thus the <span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> 's in the main meeting area)</p>",
        "id": 180727528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736180
    },
    {
        "content": "<p>P-high 16/34: \"ICE with impl Fn alias.\" <a href=\"https://github.com/rust-lang/rust/issues/65918\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65918\">#65918</a></p>",
        "id": 180727564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736242
    },
    {
        "content": "<p>has a PR awaiting review in PR <a href=\"https://github.com/rust-lang/rust/issues/65989\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65989\">#65989</a></p>",
        "id": 180727576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736260
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I think we can probably assign everything that is requires-nightly as P-medium max</p>",
        "id": 180727588,
        "sender_full_name": "centril",
        "timestamp": 1573736280
    },
    {
        "content": "<p>unless it's something we're actively trying to ready for stabilziation</p>",
        "id": 180727639,
        "sender_full_name": "centril",
        "timestamp": 1573736291
    },
    {
        "content": "<p>well, <em>sometimes</em> they are signs of deeper problems</p>",
        "id": 180727649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736308
    },
    {
        "content": "<p>but I generally agree</p>",
        "id": 180727651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736311
    },
    {
        "content": "<p>fair point</p>",
        "id": 180727656,
        "sender_full_name": "centril",
        "timestamp": 1573736316
    },
    {
        "content": "<p>it would be one way to try decrease the load of P-high issues, certainly</p>",
        "id": 180727661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736327
    },
    {
        "content": "<p>P-high 17/34: \"yet another associated type ICE (probably more missing normalize calls)\" <a href=\"https://github.com/rust-lang/rust/issues/65934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65934\">#65934</a></p>",
        "id": 180727684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736360
    },
    {
        "content": "<p>an alt build has llvm asserts and IR verification</p>",
        "id": 180727691,
        "sender_full_name": "simulacrum",
        "timestamp": 1573736367
    },
    {
        "content": "<p>do alt builds have the full debug stuff from LLVM? E.g. do lines like  <code>LLVM_DEBUG(dbgs() &lt;&lt; \"Ignores Dead GUID: \" &lt;&lt; VI &lt;&lt; \"\\n\");</code> do useful stuff on such builds?</p>",
        "id": 180727817,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736433
    },
    {
        "content": "<p>hm, not sure. Maybe not :)</p>",
        "id": 180727856,
        "sender_full_name": "simulacrum",
        "timestamp": 1573736468
    },
    {
        "content": "<p>Just curious. (I just initiated a local build that hopefully has those bits enabled before starting the triage, as part of investigating a ThinLTO issue; but if I can get support for it from somewhere I can <code>rustup</code> or <code>curl</code>/<code>wget</code>, I would be thrilled...)</p>",
        "id": 180727949,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736531
    },
    {
        "content": "<p>regarding <a href=\"https://github.com/rust-lang/rust/issues/65934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65934\">#65934</a>, nothings happened. Not sure how to best handle the set of bugs that all seem to fall under lazy-normalization and/or insufficient-normalization ...</p>",
        "id": 180728028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736605
    },
    {
        "content": "<p>but it did remind me to look at \"Associated types, impl traits ~and closures~; oh my, an ICE.\" <a href=\"https://github.com/rust-lang/rust/issues/63154\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63154\">#63154</a> , which I have now closed as fixed.</p>",
        "id": 180728282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736809
    },
    {
        "content": "<p>(which would have been 18/34)</p>",
        "id": 180728304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736828
    },
    {
        "content": "<p>P-high 19/34 (or maybe 30, heh): \"rust-lld since 1.38 overlaps .text with .rodata for embedded arm target\" <a href=\"https://github.com/rust-lang/rust/issues/65391\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65391\">#65391</a></p>",
        "id": 180728459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573736943
    },
    {
        "content": "<p>left a comment</p>",
        "id": 180728773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737143
    },
    {
        "content": "<p>P-high 20/30: \"Miscompilation with target-cpu=znver1 (AMD Ryzen 1000/2000 series) on Windows + LLVM 9.\" <a href=\"https://github.com/rust-lang/rust/issues/63959\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63959\">#63959</a></p>",
        "id": 180728824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737184
    },
    {
        "content": "<p>@eddyb's been looking pretty heavily into this, but they also said that they're unlikely to look into it much further, though they are willing to provide support for others who want to</p>",
        "id": 180729041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737310
    },
    {
        "content": "<p>I'll post a <span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> in the main meeting area</p>",
        "id": 180729049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737317
    },
    {
        "content": "<p>P-high 21/30: \"The compiler should report publicly exported type names if possible\" <a href=\"https://github.com/rust-lang/rust/issues/21934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/21934\">#21934</a></p>",
        "id": 180729315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737511
    },
    {
        "content": "<p>there's been much recent activity in the comment thread here, including ... &lt;felix squints&gt; ... a Pre-RFC</p>",
        "id": 180729340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737527
    },
    {
        "content": "<p>I, like <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> , don't think an RFC is necessary here. At most a design meeting, I suspect, and even that may be overkill.</p>",
        "id": 180729404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737577
    },
    {
        "content": "<p>I'll post a comment to that effect.</p>",
        "id": 180729414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737584
    },
    {
        "content": "<p>P-high 22/30: \"async fn presence affects an unrelated error message\" <a href=\"https://github.com/rust-lang/rust/issues/66312\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66312\">#66312</a></p>",
        "id": 180729635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737722
    },
    {
        "content": "<p>scary scary scary!</p>",
        "id": 180729710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737797
    },
    {
        "content": "<p>lets definitely keep our eyes on this one</p>",
        "id": 180729720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737811
    },
    {
        "content": "<p>P-high 23/30: \"Some features can no longer be controlled by conditional compilation\" <a href=\"https://github.com/rust-lang/rust/issues/65860\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65860\">#65860</a></p>",
        "id": 180729739,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737834
    },
    {
        "content": "<p>we already touched on this up above. I'll make a note of it in the main mtg channel so people have time to prep if they're following there right now</p>",
        "id": 180729787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573737859
    },
    {
        "content": "<p>P-high 24/30: \" Incremental compilation results in linker error when method use is removed\" <a href=\"https://github.com/rust-lang/rust/issues/59535\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59535\">#59535</a></p>",
        "id": 180729986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738014
    },
    {
        "content": "<p>all I can say is that I've been working my butt off trying to 1. reduce and 2. understand this bug. It arises due to a nasty confluence of features.</p>",
        "id": 180730011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738039
    },
    {
        "content": "<p>but its as \"in hand\" as it can be...</p>",
        "id": 180730034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738060
    },
    {
        "content": "<p>P-high 25/30: \"ICE when using reference variable from iterator (instead of copying it): thread 'rustc' panicked at 'already borrowed: BorrowMutError'\" <a href=\"https://github.com/rust-lang/rust/issues/66353\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66353\">#66353</a></p>",
        "id": 180730047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738076
    },
    {
        "content": "<p>(we touched on this briefly up above. The ICE itself is being papered-over via a <code>delay_span_bug</code> in PR <a href=\"https://github.com/rust-lang/rust/issues/66388\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66388\">#66388</a>. I am still musing about whether we should have a stack-trace-capturing DebugRefCell to provide more context when things like this arise ...)</p>",
        "id": 180730162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738188
    },
    {
        "content": "<p>in any case, it seems like it is in hand for now</p>",
        "id": 180730167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738199
    },
    {
        "content": "<p>P-high 26/30: \"Spurious x86_64 Windows CI failures due to OOM\" <a href=\"https://github.com/rust-lang/rust/issues/66342\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66342\">#66342</a></p>",
        "id": 180730241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738229
    },
    {
        "content": "<p>(we covered this already  when I went over the nominations; it has a PR)</p>",
        "id": 180730266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738261
    },
    {
        "content": "<p>same for \"thread 'rustc' panicked at 'called <code>Option::unwrap()</code> on a <code>None</code> value'\" <a href=\"https://github.com/rust-lang/rust/issues/66286\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66286\">#66286</a></p>",
        "id": 180730397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738371
    },
    {
        "content": "<p>yeah all the rest we've already covered, I think</p>",
        "id": 180730445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738406
    },
    {
        "content": "<p>gonna go over the beta-nominations and make sure all relevant ones have T-compiler label too</p>",
        "id": 180730559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738477
    },
    {
        "content": "<p>I forget to add T-compiler to PR <a href=\"https://github.com/rust-lang/rust/issues/66394\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66394\">#66394</a> before; fixed now</p>",
        "id": 180730585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738501
    },
    {
        "content": "<p>added T-compiler to \"Fix ICE when trying to suggest <code>Type&lt;&gt;</code> instead of <code>Type()</code> <a href=\"https://github.com/rust-lang/rust/issues/66390\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66390\">#66390</a>  too</p>",
        "id": 180730613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738524
    },
    {
        "content": "<p>added T-compiler to \"find_deprecation: deprecation attr may be ill-formed meta.\" <a href=\"https://github.com/rust-lang/rust/issues/66381\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66381\">#66381</a></p>",
        "id": 180730715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738578
    },
    {
        "content": "<p>added T-compiler to \"parser: don't use <code>unreachable!()</code> in <code>fn unexpected</code>.\" <a href=\"https://github.com/rust-lang/rust/issues/66361\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66361\">#66361</a></p>",
        "id": 180730780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738636
    },
    {
        "content": "<p>added T-compiler to \"Undo an assert causing an ICE until we fix the underlying problem\" <a href=\"https://github.com/rust-lang/rust/issues/66250\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66250\">#66250</a></p>",
        "id": 180730800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738665
    },
    {
        "content": "<p>wow that means we have 7 beta-nominations to get through today</p>",
        "id": 180730858,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738695
    },
    {
        "content": "<p>but \"only\" <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">five nominations</a>, so I guess that balances out</p>",
        "id": 180731110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573738904
    },
    {
        "content": "<blockquote>\n<p>an alt build has llvm asserts and IR verification</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> are the alt builds made in parallel with the nightlies? In other words: Can I grab them via <code>rustup</code> ?</p>",
        "id": 180731479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573739161
    },
    {
        "content": "<p>hm.. not sure about rustup</p>",
        "id": 180731537,
        "sender_full_name": "simulacrum",
        "timestamp": 1573739181
    },
    {
        "content": "<p>rustup-toolchain-install-master can do it</p>",
        "id": 180731538,
        "sender_full_name": "simulacrum",
        "timestamp": 1573739186
    },
    {
        "content": "<p>(I skimmed rust-forge to see if the answer is there, but did not see anything about at builds there)</p>",
        "id": 180731543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573739189
    },
    {
        "content": "<p>we produce them for every commit, though</p>",
        "id": 180731559,
        "sender_full_name": "simulacrum",
        "timestamp": 1573739204
    },
    {
        "content": "<p>ah sweeeeeet</p>",
        "id": 180731566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573739207
    },
    {
        "content": "<p>these days they're also parallel compilers</p>",
        "id": 180731575,
        "sender_full_name": "simulacrum",
        "timestamp": 1573739214
    },
    {
        "content": "<p>but the default is -Zthreads=1 so that shouldn't affect much other than performance</p>",
        "id": 180731586,
        "sender_full_name": "simulacrum",
        "timestamp": 1573739226
    },
    {
        "content": "<p>(as in, you get the overhead drawback but no parallelization benefit by default, right?)</p>",
        "id": 180731618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573739258
    },
    {
        "content": "<p>yep</p>",
        "id": 180731635,
        "sender_full_name": "simulacrum",
        "timestamp": 1573739270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> oops my bad; forgot to label those</p>",
        "id": 180732777,
        "sender_full_name": "centril",
        "timestamp": 1573739947
    },
    {
        "content": "<blockquote>\n<p>I'm musing about a debugging variant of <code>RefCell</code> that stored a stack-trace on each borrow, so that a <code>borrow_mut</code> failure could actually print a stack trace</p>\n</blockquote>\n<p>can't wait to land <span class=\"user-mention\" data-user-id=\"130111\">@anp</span>'s <code>#[track_caller]</code> implementation, then we can store at the very least a single <code>&amp;'static Location</code>, which is just one pointer of overhead, might be fine to just enable it on all debug-assertions builds of rustc</p>\n<p>(it's no backtrace but far more useful than RefCell methods panicking)</p>",
        "id": 180732957,
        "sender_full_name": "eddyb",
        "timestamp": 1573740059
    },
    {
        "content": "<blockquote>\n<p>hmm. Tracking issue for const generics (<a href=\"https://github.com/rust-lang/rust/issues/44580\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/44580\">#44580</a>) has been locked</p>\n</blockquote>\n<p>oops I meant to go through and mark most comments as offtopic, maybe I should do that now :P</p>",
        "id": 180733549,
        "sender_full_name": "eddyb",
        "timestamp": 1573740439
    },
    {
        "content": "<p>it can stay locked I think</p>",
        "id": 180733709,
        "sender_full_name": "centril",
        "timestamp": 1573740557
    },
    {
        "content": "<p>people should file bugs via issues</p>",
        "id": 180733712,
        "sender_full_name": "centril",
        "timestamp": 1573740563
    },
    {
        "content": "<p>oh yeah I just wanted to make sure the offtopic discussion wasn't in everyone's faces - <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span>'s update comment is what people should see :)</p>",
        "id": 180734195,
        "sender_full_name": "eddyb",
        "timestamp": 1573740947
    },
    {
        "content": "<blockquote>\n<p>(I think a significant number of people fail to provide an MCVE because they try to start small and build up -- but cannot find the path to the destination -- rather than starting from the original and cutting it down.)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I'm not even sure what \"MCVE\" stands for. I always prefer to talk about \"reducing\" and \"reduction\" because it's clear that you chip away at something large (heh it's kinda like subtractive manufacturing i.e. machining away material)</p>\n<p>and reduction techniques are fun, like getting rid of function bodies, replacing them with <code>loop {}</code> or even using <code>black_box</code> (in case weird optimization bugs are involved), so  big <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> on teaching more people about them</p>",
        "id": 180734411,
        "sender_full_name": "eddyb",
        "timestamp": 1573741101
    },
    {
        "content": "<p>but also there are rare cases when building something up <em>does</em> work, it just requires already having a mental model for why the problem happened -  like building a stress test by using macros to generate a lot of the one thing you're pretty sure is inefficient (or specifically causes quadratic or worse behavior)</p>",
        "id": 180734503,
        "sender_full_name": "eddyb",
        "timestamp": 1573741201
    },
    {
        "content": "<p>Of course building up can work</p>",
        "id": 180734563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741224
    },
    {
        "content": "<p>But my point was that I’ve seen people give up after it falls</p>",
        "id": 180734580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741241
    },
    {
        "content": "<p>(but I'm preaching to the choir here unless other people see what I wrote lol)</p>",
        "id": 180734589,
        "sender_full_name": "eddyb",
        "timestamp": 1573741252
    },
    {
        "content": "<p>Well maybe I’ll finish up my desired blog post and then Let you suggest additions. :)</p>",
        "id": 180734636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yeah I think I'd tell them not to bother with de-novo reproduction unless they've already done a reduction. and maybe we can rename E-needs-mcve? unless MCVE is an industry standard term and I'm just out of touch :P</p>",
        "id": 180734642,
        "sender_full_name": "eddyb",
        "timestamp": 1573741305
    },
    {
        "content": "<p>oh I expect the blog post is good already, just hyping myself for it</p>",
        "id": 180734703,
        "sender_full_name": "eddyb",
        "timestamp": 1573741325
    },
    {
        "content": "<p>I had to google it myself</p>",
        "id": 180734707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741326
    },
    {
        "content": "<p>wait so who created the label?!</p>",
        "id": 180734722,
        "sender_full_name": "eddyb",
        "timestamp": 1573741335
    },
    {
        "content": "<p>(MCVE); but I *know * I’m out of touch</p>",
        "id": 180734738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741347
    },
    {
        "content": "<p>(kinda crazy how things happen nowadays and I have no idea when or where they did, just see the aftermath)</p>",
        "id": 180734760,
        "sender_full_name": "eddyb",
        "timestamp": 1573741372
    },
    {
        "content": "<p>It is relatively google-able though</p>",
        "id": 180734777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741388
    },
    {
        "content": "<p>Compared to say “minimize” or “reduction”</p>",
        "id": 180734789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741405
    },
    {
        "content": "<p>In terms of getting the right thing in the top ... three hits</p>",
        "id": 180734812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741425
    },
    {
        "content": "<p>LOL <a href=\"https://en.wikipedia.org/wiki/MCVE\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/MCVE\">https://en.wikipedia.org/wiki/MCVE</a></p>",
        "id": 180734825,
        "sender_full_name": "eddyb",
        "timestamp": 1573741435
    },
    {
        "content": "<p>I love how wikipedia links to SO</p>",
        "id": 180734873,
        "sender_full_name": "eddyb",
        "timestamp": 1573741445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> uhhhh this puts the less effective approach first <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\" target=\"_blank\" title=\"https://stackoverflow.com/help/minimal-reproducible-example\">https://stackoverflow.com/help/minimal-reproducible-example</a></p>",
        "id": 180734976,
        "sender_full_name": "eddyb",
        "timestamp": 1573741515
    },
    {
        "content": "<p>maybe it works for things that aren't compiler bugs :P?</p>",
        "id": 180734996,
        "sender_full_name": "eddyb",
        "timestamp": 1573741535
    },
    {
        "content": "<p>To be fair, I didn’t say you shouldn’t build up at all, or that you shouldn’t try it first</p>",
        "id": 180735075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741579
    },
    {
        "content": "<p>I think we <em>all</em> try it first</p>",
        "id": 180735080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741585
    },
    {
        "content": "<p>but okay I won't argue with googleability metrics - I still think we should use \"reduction\" or \"reduced\" if we actually leave a comment (maybe we should have a bot that links your blog post :P)</p>",
        "id": 180735091,
        "sender_full_name": "eddyb",
        "timestamp": 1573741591
    },
    {
        "content": "<p>Let’s finish the post before the bot. ;)</p>",
        "id": 180735132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741620
    },
    {
        "content": "<p>tick <span aria-label=\"clock\" class=\"emoji emoji-1f557\" role=\"img\" title=\"clock\">:clock:</span> tock <span aria-label=\"clock\" class=\"emoji emoji-1f557\" role=\"img\" title=\"clock\">:clock:</span> :)</p>",
        "id": 180735179,
        "sender_full_name": "eddyb",
        "timestamp": 1573741642
    },
    {
        "content": "<p>Just call me Adrian Veidt</p>",
        "id": 180735231,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573741675
    },
    {
        "content": "<blockquote>\n<p>I think we <em>all</em> try it first</p>\n</blockquote>\n<p>not in my most recent couple of reductions, but maybe that's just because all I had were large amounts of code and a somewhat opaque predicate for \"does this cause the problem\"</p>",
        "id": 180735664,
        "sender_full_name": "eddyb",
        "timestamp": 1573741993
    },
    {
        "content": "<p>have you seen my <a href=\"https://github.com/rust-lang/rust/issues/59535#issuecomment-551600222\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59535#issuecomment-551600222\">mind-bending reduction</a> for <a href=\"https://github.com/rust-lang/rust/issues/59535\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59535\">#59535</a></p>",
        "id": 180735944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742182
    },
    {
        "content": "<p>I can only imagine how those <code>impl R {}</code> blocks are influencing ThinLTO</p>",
        "id": 180735983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742224
    },
    {
        "content": "<p>the hell</p>",
        "id": 180736003,
        "sender_full_name": "eddyb",
        "timestamp": 1573742247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> one explanation is you're injecting symbol name <em>length</em> variation</p>",
        "id": 180736082,
        "sender_full_name": "eddyb",
        "timestamp": 1573742284
    },
    {
        "content": "<p>have you tried varying some of the names involved?</p>",
        "id": 180736092,
        "sender_full_name": "eddyb",
        "timestamp": 1573742296
    },
    {
        "content": "<p>yeah alpha-renaming stuff also can cause the bug to go away</p>",
        "id": 180736102,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742305
    },
    {
        "content": "<p>so its certainly a factor</p>",
        "id": 180736105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742311
    },
    {
        "content": "<p>okay have you tried uhhh removing several hundred impls and adding one character to a name?</p>",
        "id": 180736134,
        "sender_full_name": "eddyb",
        "timestamp": 1573742335
    },
    {
        "content": "<p>effectively treating the log10 of the number of impls as a parameter</p>",
        "id": 180736164,
        "sender_full_name": "eddyb",
        "timestamp": 1573742360
    },
    {
        "content": "<p>(I wish I never had to say those words)</p>",
        "id": 180736180,
        "sender_full_name": "eddyb",
        "timestamp": 1573742380
    },
    {
        "content": "<p>I suppose that would be one way to try to further reduce those tests</p>",
        "id": 180736194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742389
    },
    {
        "content": "<p>but at this point I think I'm better off working within the execution of rustc+LLVM that I can observe</p>",
        "id": 180736269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742411
    },
    {
        "content": "<p>the other thing is you might be fudging some partitioning algorithms, worse case being ofc a hash</p>",
        "id": 180736272,
        "sender_full_name": "eddyb",
        "timestamp": 1573742413
    },
    {
        "content": "<p>i.e. I now have a pretty strong theory as to what's going wrong</p>",
        "id": 180736291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742434
    },
    {
        "content": "<p>(though I'm not yet sure which of LLVM or rustc get the blame for the problem)</p>",
        "id": 180736356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742478
    },
    {
        "content": "<p>one thing you could do is script the number of <code>impl R {}</code>s to find other values for which it repros</p>",
        "id": 180736360,
        "sender_full_name": "eddyb",
        "timestamp": 1573742482
    },
    {
        "content": "<p>yeah I considering writing a macro to help with such a search</p>",
        "id": 180736388,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742501
    },
    {
        "content": "<p>i suppose when it comes time to post a regression test as part of a PR, I'll prefer to have a further reduced example in hand . . . so the time doing further reduction wouldn't have been wasted (assuming me or someone else eventually posts a fix)</p>",
        "id": 180736509,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573742573
    },
    {
        "content": "<p>we should do shrinking on ASTs :D</p>",
        "id": 180736728,
        "sender_full_name": "centril",
        "timestamp": 1573742742
    },
    {
        "content": "<p>I think creduce technically supports Rust? I just don't really trust fully automated tools, I'd prefer something I can still guide</p>",
        "id": 180736917,
        "sender_full_name": "eddyb",
        "timestamp": 1573742855
    },
    {
        "content": "<p>is that a fuzzer? -- I was thinking using QuickCheck / proptest</p>",
        "id": 180737023,
        "sender_full_name": "centril",
        "timestamp": 1573742915
    },
    {
        "content": "<p>it's a reducer :P</p>",
        "id": 180737051,
        "sender_full_name": "eddyb",
        "timestamp": 1573742940
    },
    {
        "content": "<p>I don't know what a reducer is</p>",
        "id": 180737076,
        "sender_full_name": "centril",
        "timestamp": 1573742953
    },
    {
        "content": "<p>none of \"fuzzers / quickcheck / proptest\" do incremental reductions AFAIK</p>",
        "id": 180737101,
        "sender_full_name": "eddyb",
        "timestamp": 1573742974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> it reduces an input while keeping a property</p>",
        "id": 180737114,
        "sender_full_name": "eddyb",
        "timestamp": 1573742988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> that's exactly what shrinking (esp. the ddmin algorithm) is about</p>",
        "id": 180737184,
        "sender_full_name": "centril",
        "timestamp": 1573743013
    },
    {
        "content": "<p>you said shrinking which could make sense as being the same thing, but... oh</p>",
        "id": 180737194,
        "sender_full_name": "eddyb",
        "timestamp": 1573743020
    },
    {
        "content": "<p>and that's what QC does</p>",
        "id": 180737195,
        "sender_full_name": "centril",
        "timestamp": 1573743021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> okay, but creduce is a much more specialized tool</p>",
        "id": 180737208,
        "sender_full_name": "eddyb",
        "timestamp": 1573743030
    },
    {
        "content": "<p>for code input</p>",
        "id": 180737227,
        "sender_full_name": "eddyb",
        "timestamp": 1573743037
    },
    {
        "content": "<p>yea \"shrinking\" is standard terminology in testing</p>",
        "id": 180737244,
        "sender_full_name": "centril",
        "timestamp": 1573743048
    },
    {
        "content": "<p>/me is out of touch of what \"quickcheck\" describes</p>",
        "id": 180737266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743067
    },
    {
        "content": "<p>it's not as simple as treating such a problem as an unit test though</p>",
        "id": 180737272,
        "sender_full_name": "eddyb",
        "timestamp": 1573743074
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://www.cs.tufts.edu/~nr/cs257/archive/john-hughes/quick.pdf\" target=\"_blank\" title=\"https://www.cs.tufts.edu/~nr/cs257/archive/john-hughes/quick.pdf\">https://www.cs.tufts.edu/~nr/cs257/archive/john-hughes/quick.pdf</a></p>",
        "id": 180737289,
        "sender_full_name": "centril",
        "timestamp": 1573743087
    },
    {
        "content": "<p>all of those tools are designed to generate de-novo input</p>",
        "id": 180737294,
        "sender_full_name": "eddyb",
        "timestamp": 1573743090
    },
    {
        "content": "<p>none of the words \"shrink\", \"reduce\", nor \"minimize\" occur in that paper</p>",
        "id": 180737399,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743151
    },
    {
        "content": "<p><code>creduce</code> is <em>entirely</em> about small changes to input <em>code</em>, and it understands enough to avoid making unreasonable changes</p>",
        "id": 180737401,
        "sender_full_name": "eddyb",
        "timestamp": 1573743152
    },
    {
        "content": "<p>Well quickcheck is a 2-step problem:</p>\n<ol>\n<li>generate test input</li>\n<li>shrink failing input to a minimum failing</li>\n</ol>",
        "id": 180737421,
        "sender_full_name": "centril",
        "timestamp": 1573743157
    },
    {
        "content": "<p>to be clear: I know what quickcheck <em>was</em> (in terms of generating test input).</p>",
        "id": 180737429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743167
    },
    {
        "content": "<p>I just didn't know it handled shrinking as well</p>",
        "id": 180737442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743175
    },
    {
        "content": "<p>but really what I want is a refactor toolkit that lets me do various steps faster than I can by hand</p>",
        "id": 180737479,
        "sender_full_name": "eddyb",
        "timestamp": 1573743199
    },
    {
        "content": "<p>I'm just happy that M-x kill-sexp usually works in Emacs</p>",
        "id": 180737502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743215
    },
    {
        "content": "<p>for Rust blocks</p>",
        "id": 180737505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  argh; that paper is a bit dated...  <a href=\"https://hackage.haskell.org/package/QuickCheck-2.13.2/docs/Test-QuickCheck.html#v:shrink\" target=\"_blank\" title=\"https://hackage.haskell.org/package/QuickCheck-2.13.2/docs/Test-QuickCheck.html#v:shrink\">https://hackage.haskell.org/package/QuickCheck-2.13.2/docs/Test-QuickCheck.html#v:shrink</a></p>",
        "id": 180737506,
        "sender_full_name": "centril",
        "timestamp": 1573743220
    },
    {
        "content": "<p>something like <code>creduce</code> would only come in when I ran out of low-hanging fruit, but even then it tends to make a mess</p>",
        "id": 180737605,
        "sender_full_name": "eddyb",
        "timestamp": 1573743251
    },
    {
        "content": "<p>(<code>M-x kill-sexp</code> is my current go-to method for replacing a method body with <code>{ loop { } }</code> when I need to do it repeatedly on a large body of code.)</p>",
        "id": 180737641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> yeah that looks too simple to do much for code</p>",
        "id": 180737661,
        "sender_full_name": "eddyb",
        "timestamp": 1573743289
    },
    {
        "content": "<p>(that or <code>-Z everybody-loops</code>, but for some reason I didn't use that in my most recent effort.)</p>",
        "id": 180737676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573743304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> it's simple but deceptively powerful</p>",
        "id": 180737719,
        "sender_full_name": "centril",
        "timestamp": 1573743328
    },
    {
        "content": "<p>smallcheck might make more sense for compiler inputs tho -- less random, more \"search whole space up to Depth\"</p>",
        "id": 180737743,
        "sender_full_name": "centril",
        "timestamp": 1573743343
    },
    {
        "content": "<p>but maybe that takes too much time</p>",
        "id": 180737754,
        "sender_full_name": "centril",
        "timestamp": 1573743349
    },
    {
        "content": "<p>\"naive methods applied to ASTs produce reducers\" is an extraordinary claim that I'd prefer seeing a proof of concept of before bothering to attempt</p>",
        "id": 180737848,
        "sender_full_name": "eddyb",
        "timestamp": 1573743399
    },
    {
        "content": "<p>it gets much harder with graphs</p>",
        "id": 180737933,
        "sender_full_name": "centril",
        "timestamp": 1573743473
    }
]