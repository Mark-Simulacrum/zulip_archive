[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> regarding <a href=\"https://github.com/rust-lang/rust/issues/50125\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/50125\">#50125</a>, am I right in thinking that you would expect <code>.has_self_ty()</code> to be replaced with something like <code>has_ty_param(0)</code> and <code>TypeFlags::HAS_SELF</code> to be removed without direct replacement?</p>",
        "id": 167796100,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1560200426
    },
    {
        "content": "<p>huh, when was <code>HAS_SELF</code> added, that should be removed before <code>has_self_ty</code></p>",
        "id": 167824826,
        "sender_full_name": "eddyb",
        "timestamp": 1560236593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> I think in my PR to change how parameters work (which wasn't merged because it was a perf hit to have DefId's in ty::Param) I changed uses to involve a TypeVisitor</p>",
        "id": 167824883,
        "sender_full_name": "eddyb",
        "timestamp": 1560236646
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/53661\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53661\">https://github.com/rust-lang/rust/pull/53661</a></p>",
        "id": 167824900,
        "sender_full_name": "eddyb",
        "timestamp": 1560236703
    },
    {
        "content": "<p>yeah okay <a href=\"https://github.com/rust-lang/rust/pull/53661/files#diff-1b4d50b82a87f1031cd5f99b64123de7R594\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53661/files#diff-1b4d50b82a87f1031cd5f99b64123de7R594\">https://github.com/rust-lang/rust/pull/53661/files#diff-1b4d50b82a87f1031cd5f99b64123de7R594</a></p>",
        "id": 167824922,
        "sender_full_name": "eddyb",
        "timestamp": 1560236742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> so replace <code>has_self_ty</code> with <code>.walk().any(|ty| ty == self_param_ty)</code> where <code>self_param_ty</code> you obtain with <code>mk_self_type</code> or w/e</p>",
        "id": 167824974,
        "sender_full_name": "eddyb",
        "timestamp": 1560236788
    },
    {
        "content": "<p>the reason this is an improvement is because whatever is doing this and using <code>mk_self_type</code> should know already that parameter 0 is <code>Self</code></p>",
        "id": 167824998,
        "sender_full_name": "eddyb",
        "timestamp": 1560236825
    },
    {
        "content": "<p>whereas <code>has_self_ty</code> could be expected to used more generally</p>",
        "id": 167825002,
        "sender_full_name": "eddyb",
        "timestamp": 1560236840
    }
]