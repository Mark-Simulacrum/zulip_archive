[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; the triage meeting will be starting in 28 minutes</p>",
        "id": 169133926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561641733
    },
    {
        "content": "<p>I will be doing <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-06-27.20.2354818/near/169133959\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-06-27.20.2354818/near/169133959\">pre-triage in a parallel topic</a></p>",
        "id": 169133982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561641777
    },
    {
        "content": "<p>I'll be 30 minutes late <span aria-label=\"bike\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bike\">:bike:</span> location change</p>",
        "id": 169136348,
        "sender_full_name": "oli",
        "timestamp": 1561643472
    },
    {
        "content": "<p>Oh wait I have mobile internet nowadays. Nevermind</p>",
        "id": 169136626,
        "sender_full_name": "oli",
        "timestamp": 1561643670
    },
    {
        "content": "<p>Okay, hi again <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 169137183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644030
    },
    {
        "content": "<p>We'll be starting the meeting now, lets open the floor to announcements for the first few minutes.</p>",
        "id": 169137214,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644048
    },
    {
        "content": "<p>/me <code>*chirp*</code> <code>*chirp*</code></p>",
        "id": 169137382,
        "sender_full_name": "eddyb",
        "timestamp": 1561644151
    },
    {
        "content": "<p>My personal hope is that we'll actually get through all the nominated issues today; but since I am hoping to focus on those, I want to first draw attention a different set of issues we found during pre-triage: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+label%3AP-high+-label%3AI-nominated+no%3Aassignee++label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+label%3AP-high+-label%3AI-nominated+no%3Aassignee++label%3AT-compiler\">unassigned, P-high, and unnominated</a></p>",
        "id": 169137431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644194
    },
    {
        "content": "<p>(I would personally like <a href=\"https://github.com/rust-lang/rust/issues/21934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/21934\">https://github.com/rust-lang/rust/issues/21934</a> to get bumped)</p>",
        "id": 169137466,
        "sender_full_name": "centril",
        "timestamp": 1561644232
    },
    {
        "content": "<p>there are \"only\" five of them left. Since they are not nominated, we aren't going to talk about them. But since they're P-high, they are surely hoping that someone will take them home and make them their pet issue</p>",
        "id": 169137528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644248
    },
    {
        "content": "<p>/me watched Toy Story 4 last night and has been musing on making some sort of joke there</p>",
        "id": 169137550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> as long as there are no spoilers <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 169137571,
        "sender_full_name": "centril",
        "timestamp": 1561644286
    },
    {
        "content": "<p>okay, if there aren't any announcements, lets see</p>",
        "id": 169137632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644334
    },
    {
        "content": "<p>we have 8 <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">nominated T-compiler issues</a> today</p>",
        "id": 169137756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644397
    },
    {
        "content": "<p>lets start with \"Rustdoc recursion limit issue\" <a href=\"https://github.com/rust-lang/rust/issues/62059\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62059\">#62059</a></p>",
        "id": 169137803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644433
    },
    {
        "content": "<p>it seems like <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> , who was looking into this, might not be here right now</p>",
        "id": 169137841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644461
    },
    {
        "content": "<p>oh wait, is this <em>just</em> a stable-to-nightly regression right now? Not a stable-to-beta one?</p>",
        "id": 169137935,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644507
    },
    {
        "content": "<p>For some reason I thought this was something that was going to affect the imminent release</p>",
        "id": 169137965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644527
    },
    {
        "content": "<p>can we maybe, uhhh, just silently swallow the recursion limit tripping, during rustdoc?</p>",
        "id": 169137974,
        "sender_full_name": "eddyb",
        "timestamp": 1561644533
    },
    {
        "content": "<p>I was thinking more along the lines of raising the limit for rustdoc alone</p>",
        "id": 169138008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644555
    },
    {
        "content": "<p>missing <code>Unpin</code> or w/e synthetic impls in the docs is less problematic than rustdoc not being able to build docs</p>",
        "id": 169138023,
        "sender_full_name": "eddyb",
        "timestamp": 1561644566
    },
    {
        "content": "<p>so they take the performance hit/blame</p>",
        "id": 169138030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644572
    },
    {
        "content": "<p>even if no limit would suffice (but otherwise, yeah, rustdoc should just set higher limits anyway)</p>",
        "id": 169138055,
        "sender_full_name": "eddyb",
        "timestamp": 1561644589
    },
    {
        "content": "<p>oh, by swallow, you mean just treat it as \"trait is not implemented\", without signalling anything?</p>",
        "id": 169138084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644602
    },
    {
        "content": "<p>pretty much yeah</p>",
        "id": 169138130,
        "sender_full_name": "eddyb",
        "timestamp": 1561644609
    },
    {
        "content": "<p>I suppose that's a third option beyond the ones that <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> outlined</p>",
        "id": 169138147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644620
    },
    {
        "content": "<p>it could hit an infinite recursion, which is what I meant earlier by \"no limit would suffice\"</p>",
        "id": 169138165,
        "sender_full_name": "eddyb",
        "timestamp": 1561644634
    },
    {
        "content": "<p>even if the code itself doesn't normally trigger it</p>",
        "id": 169138171,
        "sender_full_name": "eddyb",
        "timestamp": 1561644640
    },
    {
        "content": "<p>\"no limit would suffice\" is an ambiguous phrase.</p>",
        "id": 169138212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644674
    },
    {
        "content": "<p>oh dear that took a bit to register</p>",
        "id": 169138230,
        "sender_full_name": "eddyb",
        "timestamp": 1561644688
    },
    {
        "content": "<p>I literally parsed it as \"(no limit) aka infinity would suffice\", not</p>",
        "id": 169138247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644699
    },
    {
        "content": "<p>not \"\\not \\exists limit such that limit suffices\"</p>",
        "id": 169138265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644714
    },
    {
        "content": "<p>anyway</p>",
        "id": 169138274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644717
    },
    {
        "content": "<p>I think I'll assign this to <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> for now</p>",
        "id": 169138338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644735
    },
    {
        "content": "<p>okay I left a comment, assigned to @nagisa, and removed the nomination.</p>",
        "id": 169138548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644853
    },
    {
        "content": "<p>next: \"Incorrect span / broken rustfix: help: use <code>dyn</code>: <code>dyn #[dom_struct]</code>\" <a href=\"https://github.com/rust-lang/rust/issues/61963\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61963\">#61963</a></p>",
        "id": 169138573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644874
    },
    {
        "content": "<p>hmm does this actualy have anything to be discussed here?</p>",
        "id": 169138615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644900
    },
    {
        "content": "<p>\"how do we actually even figure out if spans are good\"</p>",
        "id": 169138655,
        "sender_full_name": "eddyb",
        "timestamp": 1561644922
    },
    {
        "content": "<p>I don't know; I saw some suggest code in the borrow checker this week using string-matching that made me a sad <span aria-label=\"panda\" class=\"emoji emoji-1f43c\" role=\"img\" title=\"panda\">:panda:</span></p>",
        "id": 169138763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561644970
    },
    {
        "content": "<p>(I'm guessing some combination of looking at the sub-structure and making sure that the leftmost path component is in the snippet matching the span)</p>",
        "id": 169138767,
        "sender_full_name": "eddyb",
        "timestamp": 1561644973
    },
    {
        "content": "<p>I wish I could solve this at a more foundational level but it would take forever and proc macros might still find a way to screw with it</p>",
        "id": 169138793,
        "sender_full_name": "eddyb",
        "timestamp": 1561644999
    },
    {
        "content": "<p>(this is irrelevant to fixing that bug <em>now</em> though)</p>",
        "id": 169138854,
        "sender_full_name": "eddyb",
        "timestamp": 1561645046
    },
    {
        "content": "<p>David is assigned anyways</p>",
        "id": 169138857,
        "sender_full_name": "centril",
        "timestamp": 1561645051
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> you were just recently assigned to this issue; do you want to ask any Q's or add anything else while we are on this topic?</p>",
        "id": 169138860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645051
    },
    {
        "content": "<p>Move on</p>",
        "id": 169138862,
        "sender_full_name": "centril",
        "timestamp": 1561645052
    },
    {
        "content": "<p>I'm good for just now, thanks.</p>",
        "id": 169138876,
        "sender_full_name": "davidtwco",
        "timestamp": 1561645070
    },
    {
        "content": "<p>okay next up: \"Soundness hole in pattern matching on enums with an uninhabited variant\" <a href=\"https://github.com/rust-lang/rust/issues/61696\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61696\">#61696</a></p>",
        "id": 169138940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645090
    },
    {
        "content": "<p>but this again probably doesn't need nomination anymore, right <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> ?</p>",
        "id": 169138957,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645102
    },
    {
        "content": "<p>yeah we know the cause and I'm assigned</p>",
        "id": 169138980,
        "sender_full_name": "eddyb",
        "timestamp": 1561645122
    },
    {
        "content": "<p>okay. removing nominatino</p>",
        "id": 169138983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645127
    },
    {
        "content": "<p>(why does math have to be so hard :P)</p>",
        "id": 169139008,
        "sender_full_name": "eddyb",
        "timestamp": 1561645143
    },
    {
        "content": "<p>next: \"Self as default type isnt typechecked\" <a href=\"https://github.com/rust-lang/rust/issues/61631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61631\">#61631</a></p>",
        "id": 169139060,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645186
    },
    {
        "content": "<p>okay well this seems tricky</p>",
        "id": 169139245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645316
    },
    {
        "content": "<p><code>struct Bug&lt;F: Fn(&amp;u8) = fn() -&gt; &amp;'static u8&gt; {</code> being accepted is really weird</p>",
        "id": 169139342,
        "sender_full_name": "centril",
        "timestamp": 1561645371
    },
    {
        "content": "<p>based on the <a href=\"https://github.com/rust-lang/rust/issues/61631#issuecomment-504207555\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61631#issuecomment-504207555\">last comment from alexreg</a>, my most immediate question is: Should we indeed just focus on use-site issues and not worry about the the definition site ones?</p>",
        "id": 169139353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645381
    },
    {
        "content": "<p>It leaves a bad taste in my mouth and a funny feeling in my stomach</p>",
        "id": 169139372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645397
    },
    {
        "content": "<p>but maybe that's love</p>",
        "id": 169139377,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645399
    },
    {
        "content": "<p>ugh this is like the type alias stuff</p>",
        "id": 169139391,
        "sender_full_name": "eddyb",
        "timestamp": 1561645410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> if so then there's no bug?</p>",
        "id": 169139396,
        "sender_full_name": "centril",
        "timestamp": 1561645412
    },
    {
        "content": "<p>/me goes and cries in a corner</p>",
        "id": 169139402,
        "sender_full_name": "eddyb",
        "timestamp": 1561645420
    },
    {
        "content": "<p>I personally don't want to give up on definition site checks without looking into it a bit more first</p>",
        "id": 169139476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> should we discuss some more at t-lang mtg?</p>",
        "id": 169139501,
        "sender_full_name": "centril",
        "timestamp": 1561645480
    },
    {
        "content": "<p>we should introduce warnings at the very least even if we can't ever make them hard errors, etc.</p>",
        "id": 169139505,
        "sender_full_name": "eddyb",
        "timestamp": 1561645486
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I don't know, it depends on whether we think we have enough information.</p>",
        "id": 169139548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645509
    },
    {
        "content": "<p>at the very least, I'd want <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> to weigh in</p>",
        "id": 169139571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645527
    },
    {
        "content": "<p>same for type aliases, I need to put my old PRs somewhere on my TODO list :(</p>",
        "id": 169139576,
        "sender_full_name": "eddyb",
        "timestamp": 1561645535
    },
    {
        "content": "<p>(<em>before</em> we allocate a T-lang meeting slot to it)</p>",
        "id": 169139583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645542
    },
    {
        "content": "<p>unless we have someone who wants to work on adding warnings to things</p>",
        "id": 169139598,
        "sender_full_name": "eddyb",
        "timestamp": 1561645555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  but niko will be there...? so they can weigh in?</p>",
        "id": 169139600,
        "sender_full_name": "centril",
        "timestamp": 1561645557
    },
    {
        "content": "<p>((I attempted to clarify that if possible, I dont' want to make niko have to respond on this matter without giving them the chance to investigate on their own.))</p>",
        "id": 169139672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645596
    },
    {
        "content": "<p>ah</p>",
        "id": 169139695,
        "sender_full_name": "centril",
        "timestamp": 1561645618
    },
    {
        "content": "<p>okay, well, it sounds like <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> has thoughts on this</p>",
        "id": 169139714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> maybe I can assign you and myself to this issue</p>",
        "id": 169139737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645642
    },
    {
        "content": "<p>OK; Let's postpone it for the t-lang meeting then and maybe <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  can investigate</p>",
        "id": 169139739,
        "sender_full_name": "centril",
        "timestamp": 1561645645
    },
    {
        "content": "<p>to try to ensure that we follow up on it? (And Ill cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> on it too, I guess)</p>",
        "id": 169139748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645656
    },
    {
        "content": "<p>as with type aliases, I feel like <em>at the very least</em>  we should warn about unusable things</p>",
        "id": 169139760,
        "sender_full_name": "eddyb",
        "timestamp": 1561645666
    },
    {
        "content": "<p>(<code>type X = Vec&lt;[u8]&gt;;</code> and <code>struct Foo&lt;X = [u8]&gt;(X);</code> as examples of both)</p>",
        "id": 169139855,
        "sender_full_name": "eddyb",
        "timestamp": 1561645723
    },
    {
        "content": "<p>okay, next nominated issue: \"Incremental compilation results in linker error when method use is removed\" <a href=\"https://github.com/rust-lang/rust/issues/59535\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59535\">#59535</a></p>",
        "id": 169139931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645794
    },
    {
        "content": "<p>I'd give this to <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> but they are on leave</p>",
        "id": 169140043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> perhaps?</p>",
        "id": 169140081,
        "sender_full_name": "centril",
        "timestamp": 1561645880
    },
    {
        "content": "<p>I'm not sure; <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> did a bunch of parallel rustc stuff, of course; but have they done much with incremental?</p>",
        "id": 169140232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561645976
    },
    {
        "content": "<p>(yes)</p>",
        "id": 169140250,
        "sender_full_name": "eddyb",
        "timestamp": 1561645992
    },
    {
        "content": "<p>okay then, I'll tentatively assign to <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> and see</p>",
        "id": 169140279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646014
    },
    {
        "content": "<p>(i am as usual in a general state of concern about how these bugs with incr-comp come up.)</p>",
        "id": 169140371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646068
    },
    {
        "content": "<p>next nomination: 'Coherence can be bypassed by an indirect impl for a trait object' <a href=\"https://github.com/rust-lang/rust/issues/57893\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57893\">#57893</a></p>",
        "id": 169140448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646155
    },
    {
        "content": "<p>this has gotten a lot of recent discussion, both on issue and on zulip</p>",
        "id": 169140533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646217
    },
    {
        "content": "<p>it seems like <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"228094\">@Ariel Ben-Yehuda</span> are making progress in defining what the problem is and the options for resolving it</p>",
        "id": 169140570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646250
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span>  too :P</p>",
        "id": 169140637,
        "sender_full_name": "centril",
        "timestamp": 1561646290
    },
    {
        "content": "<p>We've booked a t-lang meeting slot for it</p>",
        "id": 169140665,
        "sender_full_name": "centril",
        "timestamp": 1561646309
    },
    {
        "content": "<p>should I remove T-compiler from the issue?</p>",
        "id": 169140723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646352
    },
    {
        "content": "<p>at this point, is there much hope for a compier-based solution?</p>",
        "id": 169140740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646364
    },
    {
        "content": "<p>(as opposed to some sort of language change...?)</p>",
        "id": 169140743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646374
    },
    {
        "content": "<p>don't think so</p>",
        "id": 169140817,
        "sender_full_name": "centril",
        "timestamp": 1561646409
    },
    {
        "content": "<p>seems like a fundamental \"type theory\" based hole</p>",
        "id": 169140839,
        "sender_full_name": "centril",
        "timestamp": 1561646428
    },
    {
        "content": "<p>(here's link to associated <a href=\"#narrow/stream/131828-t-compiler/topic/.2357893.20coherence.20and.20traits/near/169073560\" title=\"#narrow/stream/131828-t-compiler/topic/.2357893.20coherence.20and.20traits/near/169073560\">zulip discussion</a>)</p>",
        "id": 169140859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646451
    },
    {
        "content": "<p>Okay well my current inclination is to assign this to either <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> or <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> or both</p>",
        "id": 169140881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646471
    },
    {
        "content": "<p>just in terms of having someone charged with seeing progress made on this issue</p>",
        "id": 169140895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646487
    },
    {
        "content": "<p>Niko was going to think about it iirc</p>",
        "id": 169140906,
        "sender_full_name": "centril",
        "timestamp": 1561646498
    },
    {
        "content": "<p>(I don't want to assign <span class=\"user-mention\" data-user-id=\"228094\">@Ariel Ben-Yehuda</span> nor <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> since I do not know what their availability is)</p>",
        "id": 169140924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646515
    },
    {
        "content": "<p>I told them about our language team meeting on the 11th</p>",
        "id": 169140974,
        "sender_full_name": "centril",
        "timestamp": 1561646528
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I'm going to assign it to you, not because I expect you to implement a solution, but because I trust you will get fires going under peoples' butts about it.</p>",
        "id": 169141007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646556
    },
    {
        "content": "<p>sgtm :P</p>",
        "id": 169141014,
        "sender_full_name": "centril",
        "timestamp": 1561646567
    },
    {
        "content": "<p>niko's assigned but they were supposed to delegate. I'm going to unassign niko.</p>",
        "id": 169141058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646616
    },
    {
        "content": "<p>next nominated issue: \"The compiler should report publicly exported type names if possible\" <a href=\"https://github.com/rust-lang/rust/issues/21934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/21934\">#21934</a></p>",
        "id": 169141123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646655
    },
    {
        "content": "<p>Another case where this is a big problem: <a href=\"https://internals.rust-lang.org/t/type-level-programming-how-to-provide-better-compiler-errors/10466/2\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/type-level-programming-how-to-provide-better-compiler-errors/10466/2\">https://internals.rust-lang.org/t/type-level-programming-how-to-provide-better-compiler-errors/10466/2</a></p>",
        "id": 169141183,
        "sender_full_name": "centril",
        "timestamp": 1561646709
    },
    {
        "content": "<p>so this is the classic issue with our diagnostics reporting an item according to the path to its definition, and not the path for how the local code is actually able to use it.</p>",
        "id": 169141193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646715
    },
    {
        "content": "<p>(that's the one I brought to your attention during all hands in Berlin)</p>",
        "id": 169141199,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1561646720
    },
    {
        "content": "<p>Yep</p>",
        "id": 169141213,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1561646729
    },
    {
        "content": "<p>I had mused on the ticket about whether we could work around this in a limited fashion via an attribute on such items</p>",
        "id": 169141224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646742
    },
    {
        "content": "<p>(also reporting the RHS of type aliases rather than the alias name)</p>",
        "id": 169141247,
        "sender_full_name": "centril",
        "timestamp": 1561646757
    },
    {
        "content": "<p>that obviously would not resolve the problem for crates in the wild that re-export  items from other crates</p>",
        "id": 169141250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646759
    },
    {
        "content": "<p>but: How many cases do we think such an attribute <em>could</em> resolve?</p>",
        "id": 169141313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646781
    },
    {
        "content": "<p>Feels like a compiler bug, not something a language change should fix</p>",
        "id": 169141330,
        "sender_full_name": "centril",
        "timestamp": 1561646794
    },
    {
        "content": "<p>yes, but if you're saying its high priority to fix,and its hard to fix</p>",
        "id": 169141355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646813
    },
    {
        "content": "<p>then sometimes band-aids are the right worse-is-better type approach, at least for short-term?</p>",
        "id": 169141384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  if it's a <code>rustc_</code> attribute, sure <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 169141399,
        "sender_full_name": "centril",
        "timestamp": 1561646854
    },
    {
        "content": "<p>so maybe a reasonable next step could be to try to estimate how many of the issues that point to this ticket could be resolved by that.</p>",
        "id": 169141503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646903
    },
    {
        "content": "<p>I.e. if its almost always a <code>core/std</code> thing</p>",
        "id": 169141522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646912
    },
    {
        "content": "<p>this is related to printing shorter paths when a prefix is in scope, isn't it?</p>",
        "id": 169141524,
        "sender_full_name": "eddyb",
        "timestamp": 1561646914
    },
    {
        "content": "<p>then a <code>rustc_</code> attribute would be reasonable.</p>",
        "id": 169141529,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646919
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I suppose its related to that</p>",
        "id": 169141545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646933
    },
    {
        "content": "<p>(with the elephant in the room being propagating that information around)</p>",
        "id": 169141577,
        "sender_full_name": "eddyb",
        "timestamp": 1561646951
    },
    {
        "content": "<p>but I think the real point is that we often print paths that are simply unusable -- and its not a matter of trying to provide the minimal path</p>",
        "id": 169141596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561646963
    },
    {
        "content": "<p>(Friendly time check: there are 10 minutes left in the meeting)</p>",
        "id": 169141692,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1561647006
    },
    {
        "content": "<p>the final question is whether this should be P-high for the compiler team</p>",
        "id": 169141697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647011
    },
    {
        "content": "<p>yeah but if we printed contextual paths then they would likely end up with an usable path being printed</p>",
        "id": 169141704,
        "sender_full_name": "eddyb",
        "timestamp": 1561647019
    },
    {
        "content": "<p>Ideally we would print the path in scope; -- it says E-hard but there's not a lot of info about why that is</p>",
        "id": 169141715,
        "sender_full_name": "centril",
        "timestamp": 1561647031
    },
    {
        "content": "<p>(you could argue there are cases in which it's hard to pick a good context)</p>",
        "id": 169141721,
        "sender_full_name": "eddyb",
        "timestamp": 1561647035
    },
    {
        "content": "<blockquote>\n<p>yeah but if we printed contextual paths then they would likely end up with an usable path being printed</p>\n</blockquote>\n<p>yes of course; but I think the point is that is the E-hard approach</p>",
        "id": 169141734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647048
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> massive amounts of infrastructure needed to track and propagate the information</p>",
        "id": 169141740,
        "sender_full_name": "eddyb",
        "timestamp": 1561647054
    },
    {
        "content": "<p>it's like adding <code>Span</code>s to a compiler without them, almost :P</p>",
        "id": 169141767,
        "sender_full_name": "eddyb",
        "timestamp": 1561647072
    },
    {
        "content": "<p>Personally, I think this should be P-super-high for wg-diagnostics, but that's just me <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 169141799,
        "sender_full_name": "centril",
        "timestamp": 1561647098
    },
    {
        "content": "<p>right, and this might reflect a weakness in our labelling system</p>",
        "id": 169141814,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647118
    },
    {
        "content": "<p>is WG-diagnostics the same thing as WG-compiler-errors ?</p>",
        "id": 169141880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647149
    },
    {
        "content": "<p>anyway I do want to move along</p>",
        "id": 169141908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647167
    },
    {
        "content": "<p>so that we can actually get through the whole list of nominated issues (!)</p>",
        "id": 169141924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647178
    },
    {
        "content": "<p>so I'll leave the nominated tag on <a href=\"https://github.com/rust-lang/rust/issues/21934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/21934\">#21934</a></p>",
        "id": 169141946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647192
    },
    {
        "content": "<p>and maybe we can make more progress in this discussion asychronously before next week</p>",
        "id": 169141966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647205
    },
    {
        "content": "<p>last nominated issue: \"\"immutable field\" errors are confusing when the handle is mutable, should describe why it is immutable\" <a href=\"https://github.com/rust-lang/rust/issues/18150\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/18150\">#18150</a></p>",
        "id": 169141990,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647222
    },
    {
        "content": "<p>I nominated this because I was not convinced that it warranted a P-high prioritization</p>",
        "id": 169142104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647277
    },
    {
        "content": "<p>Though since I nominated it, I think I looked at a potentially related issue</p>",
        "id": 169142140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647307
    },
    {
        "content": "<p>namely of how our diagnosics fall down hard when you have e.g. a coercion from <code>&amp;mut &amp;T</code> to <code>&amp;T</code></p>",
        "id": 169142170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647337
    },
    {
        "content": "<p>(and it ends up suggesting that you write <code>&amp;mut mut expr</code>)</p>",
        "id": 169142197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647359
    },
    {
        "content": "<p>the main connection I'm seeing is that this may come down to having better infrastructure for explaining where auto-ref and auto-derefs  are injected and why</p>",
        "id": 169142285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647406
    },
    {
        "content": "<p>Still doesn't necessary mean that its P-high, though ...</p>",
        "id": 169142313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647422
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> , what do you think of <em>this</em> case (<a href=\"https://github.com/rust-lang/rust/issues/18150\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/18150\">#18150</a>) for WG-diagnostics ?</p>",
        "id": 169142338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647440
    },
    {
        "content": "<p>Not sure <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 169142436,
        "sender_full_name": "centril",
        "timestamp": 1561647496
    },
    {
        "content": "<p>I think it is high prio for diagnostics but we're operating on a best effort basis, don't know how long it'll take for us to reach this</p>",
        "id": 169142438,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1561647501
    },
    {
        "content": "<p>It is super misleading when you get it</p>",
        "id": 169142455,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1561647521
    },
    {
        "content": "<p>One thing I'm definitely taking away from this discussion</p>",
        "id": 169142457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647522
    },
    {
        "content": "<p>Per wg prio labels?</p>",
        "id": 169142473,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1561647538
    },
    {
        "content": "<p>is, on a meta level, the P labels are failing when it comes to per-WG vs per-team priorities</p>",
        "id": 169142486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647546
    },
    {
        "content": "<p>yes, exactly</p>",
        "id": 169142488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647549
    },
    {
        "content": "<p>luckily we can talk about <em>that</em> tomorrow.</p>",
        "id": 169142501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647560
    },
    {
        "content": "<p>which reminds me</p>",
        "id": 169142505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647567
    },
    {
        "content": "<p>I should have included this in the announcements, sorry all</p>",
        "id": 169142520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647580
    },
    {
        "content": "<p>last minute announcement</p>",
        "id": 169142527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647587
    },
    {
        "content": "<p>(literally)</p>",
        "id": 169142530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647590
    },
    {
        "content": "<p>tomorrow we have a steering meeting</p>",
        "id": 169142543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647598
    },
    {
        "content": "<p>topic is triage and maintenance</p>",
        "id": 169142590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647605
    },
    {
        "content": "<p>meta data for meeting is here : <a href=\"https://github.com/rust-lang/compiler-team/issues/90\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/90\">https://github.com/rust-lang/compiler-team/issues/90</a></p>",
        "id": 169142618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647625
    },
    {
        "content": "<p>and some notes (I think at this point authored by niko myself and centril) are here: <a href=\"https://hackmd.io/dvgegmdgQVSMbC4rcjG6EA\" target=\"_blank\" title=\"https://hackmd.io/dvgegmdgQVSMbC4rcjG6EA\">https://hackmd.io/dvgegmdgQVSMbC4rcjG6EA</a></p>",
        "id": 169142650,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647647
    },
    {
        "content": "<p>so I'm going to go ahead and add this WG-/T - prioritization as sub-bullet there now</p>",
        "id": 169142716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647690
    },
    {
        "content": "<p>but, before I do that:</p>",
        "id": 169142728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647697
    },
    {
        "content": "<p>Thank you to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending today!</p>",
        "id": 169142746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561647712
    },
    {
        "content": "<p>Thanks for running the meeting <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>!</p>",
        "id": 169142823,
        "sender_full_name": "davidtwco",
        "timestamp": 1561647751
    },
    {
        "content": "<blockquote>\n<p>even if no limit would suffice (but otherwise, yeah, rustdoc should just set higher limits anyway)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> do you happen to know how to selectively ignore errors like that in Rust? The methods do not return a <code>Result</code> here and use your typical rustc diagnostics mechanism.</p>",
        "id": 169144835,
        "sender_full_name": "nagisa",
        "timestamp": 1561649050
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I'd ask <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> or <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>. it should be possible but you might have to go around some of the higher-level APIs (there is code in <code>rustc::traits::auto_traits</code> btw that exists <em>only</em> for rustdoc, and was lifted from it, that could be doing something with results internally)</p>",
        "id": 169146195,
        "sender_full_name": "eddyb",
        "timestamp": 1561650120
    }
]