[
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , our weekly meeting will be held in this topic area in about two hours</p>",
        "id": 160773297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552564940
    },
    {
        "content": "<p>I'm going to start the pre-triage process in <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-14.20.2354818/near/160773241\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-14.20.2354818/near/160773241\">another topic</a> on this stream.</p>",
        "id": 160773321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552565004
    },
    {
        "content": "<p>i just realized I forgot to actually reach out to any WG leads on tuesday</p>",
        "id": 160773715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552565462
    },
    {
        "content": "<p>so maybe we won't have any WG-checkins today, unless I find some volunteers in next ~100 minutes</p>",
        "id": 160773741,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552565489
    },
    {
        "content": "<p>We discussed a working group check-in schedule in the <a class=\"stream\" data-stream-id=\"185694\" href=\"/#narrow/stream/185694-t-compiler.2Fwg-meta\">#t-compiler/wg-meta</a> meeting and I threw this together (<a href=\"https://github.com/rust-lang/compiler-team/issues/37\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/37\">compiler-team#37</a>) at the weekend but there's been no discussion or review so I assume we won't be following it this week.</p>",
        "id": 160773810,
        "sender_full_name": "davidtwco",
        "timestamp": 1552565527
    },
    {
        "content": "<p>The next <a class=\"stream\" data-stream-id=\"185694\" href=\"/#narrow/stream/185694-t-compiler.2Fwg-meta\">#t-compiler/wg-meta</a> meeting is tonight so there will likely be a look at it then.</p>",
        "id": 160773841,
        "sender_full_name": "davidtwco",
        "timestamp": 1552565570
    },
    {
        "content": "<p>According to that though, there's a wg-async-await and wg-llvm check-in (I just went around the list, so there's no particular reason for the order). wg-async-await had a meeting on Tuesday and there are notes from that which could be used in a check-in if we wanted.</p>",
        "id": 160774022,
        "sender_full_name": "davidtwco",
        "timestamp": 1552565757
    },
    {
        "content": "<p>I like the idea of hearing from wg-async-await</p>",
        "id": 160774264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552565982
    },
    {
        "content": "<p>heck I like both of the suggestions for today from <a href=\"https://github.com/rust-lang/compiler-team/issues/37\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/37\">compiler-team#37</a></p>",
        "id": 160774338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552566047
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> , would you two be willing to provide WG-checkins today (for wg-async-await and wg-llvm, respectively) ?</p>",
        "id": 160774364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552566076
    },
    {
        "content": "<p>yep</p>",
        "id": 160774372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552566088
    },
    {
        "content": "<p>also, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , do you want to try to allocate time during either a steering or a triage meeting to figure out planning for <a href=\"https://github.com/rust-lang/rust/issues/58465\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58465\">#58465</a>? or should we switch to resolving that asynchronously?</p>",
        "id": 160777705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552568832
    },
    {
        "content": "<p><span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span>  request for volunteer to fix: \"ICE on beta and nightly: <code>index out of bounds</code> in <code>RestoreSubsliceArrayMoveOut</code> MIR pass\" <a href=\"https://github.com/rust-lang/rust/issues/59048\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59048\">#59048</a></p>",
        "id": 160781285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552571356
    },
    {
        "content": "<p><span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span> request for volunteer to fix: \"Compiler panic when using a slice pattern\" <a href=\"https://github.com/rust-lang/rust/issues/59016\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59016\">#59016</a></p>",
        "id": 160782198,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552571942
    },
    {
        "content": "<p><span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span> request for volunteer to fix: \"Building Firefox with rustc 1.34.0-nightly fails with LLVM ERROR: broken function found.\" <a href=\"https://github.com/rust-lang/rust/issues/58881\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58881\">#58881</a></p>",
        "id": 160782420,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572055
    },
    {
        "content": "<p>okay <del>high</del> <strong>hi</strong> <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 160782496,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572102
    },
    {
        "content": "<p>I didn't finish all the triage that I wanted but I don't want to delay further</p>",
        "id": 160782514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572112
    },
    {
        "content": "<blockquote>\n<p>also, <span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> , do you want to try to allocate time during either a steering or a triage meeting to figure out planning for <a href=\"https://github.com/rust-lang/rust/issues/58465\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58465\">#58465</a>? or should we switch to resolving that asynchronously?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I don't think a triage meeting is really the right place. It's probably something we should talk about at the next steering meeting.</p>",
        "id": 160782583,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572143
    },
    {
        "content": "<p>which is next week, actually</p>",
        "id": 160782599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572157
    },
    {
        "content": "<blockquote>\n<p>It's probably something we should talk about at the next steering meeting.</p>\n</blockquote>\n<p>okay</p>",
        "id": 160782600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572159
    },
    {
        "content": "<p>I've already added it to the list of <a href=\"https://hackmd.io/wsHwsi9zR3iq0ZF2SgEq9Q\" target=\"_blank\" title=\"https://hackmd.io/wsHwsi9zR3iq0ZF2SgEq9Q\">steering meeting agenda ideas</a>, feel free to un-nominate</p>",
        "id": 160782641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572189
    },
    {
        "content": "<p>so I was working my way through the nominated issues, as people can see on the <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-14.20.2354818/near/160773241\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-14.20.2354818/near/160773241\">pretriage topic</a></p>",
        "id": 160782648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572193
    },
    {
        "content": "<p>Checkin for WG-llvm (since i won’t be able to participate in the meeting): <span class=\"user-mention\" data-user-id=\"143663\">@dlrobertson</span> has upstreamed some work in instcombine between satirating ops and regular ops. That’s all to my knowledge.</p>",
        "id": 160782683,
        "sender_full_name": "nagisa",
        "timestamp": 1552572217
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> okay thanks</p>",
        "id": 160782693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> has also done some work</p>",
        "id": 160782776,
        "sender_full_name": "dlrobertson",
        "timestamp": 1552572253
    },
    {
        "content": "<p>Regarding the P-high issues, there are still a bunch I didn't look at, but only one of the ones remaining is unassigned is \"ICE: Existential type (w/ and w/o NLL)\" <a href=\"https://github.com/rust-lang/rust/issues/53598\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53598\">#53598</a></p>",
        "id": 160782802,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572273
    },
    {
        "content": "<p>so lets go ahead and put up another call-for-volunteer effort:</p>",
        "id": 160782826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572294
    },
    {
        "content": "<p><span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span> request for volunteer to fix: \"ICE: Existential type (w/ and w/o NLL)\" <a href=\"https://github.com/rust-lang/rust/issues/53598\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53598\">#53598</a></p>",
        "id": 160782856,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572313
    },
    {
        "content": "<p>hmm. I'm not sure if this should be P-high or what</p>",
        "id": 160782883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572333
    },
    {
        "content": "<p>If anyone is looking for a (hopefully self-contained) bug to fix, go ahead and skim the <span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span>s above</p>",
        "id": 160782896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572345
    },
    {
        "content": "<p>(but I approve of this \"request for volunteer to fix\" idea, and I think we should probably try to raise the visibility on that)</p>",
        "id": 160782969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572371
    },
    {
        "content": "<p>/me ponders a T-compiler twitter account :)</p>",
        "id": 160782985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572383
    },
    {
        "content": "<blockquote>\n<p>hmm. I'm not sure if this should be P-high or what</p>\n</blockquote>\n<p>you mean because of its dependence on <code>feature(existential_type)</code> ?</p>",
        "id": 160782986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572384
    },
    {
        "content": "<p>Yes.</p>",
        "id": 160782996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572388
    },
    {
        "content": "<p>I'm wondering if it might be reducable to something with <code>impl Trait</code> alone</p>",
        "id": 160783016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572406
    },
    {
        "content": "<p>I feel like it's sort of a \"this would be p-high for a WG working on trying to stabilize existential type, but no such WG exists\"</p>",
        "id": 160783020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572409
    },
    {
        "content": "<p>i.e., when we decide to make that a priority, it'd be good, and maybe we can \"pre-triage\" it a bit so that when that happens we're ready</p>",
        "id": 160783061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572432
    },
    {
        "content": "<p>is stabilizing existential types in some form on the agenda for this year? or the next edition?</p>",
        "id": 160783091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572455
    },
    {
        "content": "<p>I've been assuming it is, given the attention given to the proposed <code>type T = impl Trait;</code> syntax</p>",
        "id": 160783155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572488
    },
    {
        "content": "<p>well in any case I gave it P-high assignment because, like I said, I worried it might represent a deeper <code>impl Trait</code> bug</p>",
        "id": 160783201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572521
    },
    {
        "content": "<p>though I think I'm now realizing that this ... cannot be the case?</p>",
        "id": 160783229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572542
    },
    {
        "content": "<blockquote>\n<p>is stabilizing existential types in some form on the agenda for this year? or the next edition?</p>\n</blockquote>\n<p>I think it could be, yes, but we need to plan for that. (Which intersects this \"pipelined compilation\" question I was thinking about for steering meeting.)</p>",
        "id": 160783270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572568
    },
    {
        "content": "<p>Basically the meta question is \"how do we manage the resources we have\". That was the original vision for what we would do in our steering meetings :)</p>",
        "id": 160783290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572589
    },
    {
        "content": "<blockquote>\n<p>well in any case I gave it P-high assignment because, like I said, I worried it might represent a deeper <code>impl Trait</code> bug</p>\n</blockquote>\n<p>Yeah, I don't know, I was assuming it had something to do with the specifics of where <code>impl Trait</code> appears</p>",
        "id": 160783373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572620
    },
    {
        "content": "<p>er, that is, with using <code>existential type</code> in that particular position. I could be wrong. <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> would probably have a good guess.</p>",
        "id": 160783395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572639
    },
    {
        "content": "<p>yeah okay my quick immediate attempts to reduce to a simpler form using <code>impl Trait</code> alone did not do the trick</p>",
        "id": 160783473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572684
    },
    {
        "content": "<p>so I'll now assume that this really is tied to <code>feature(existential_type)</code></p>",
        "id": 160783511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572709
    },
    {
        "content": "<p>yes, impl trait is currently not usable in associated types</p>",
        "id": 160783569,
        "sender_full_name": "oli",
        "timestamp": 1552572724
    },
    {
        "content": "<p>which means I agree its not P-high, at least not until we see some sort of plan for stabilizing that feature</p>",
        "id": 160783595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572740
    },
    {
        "content": "<p>existential types and using impl trait in associated types is equivalent</p>",
        "id": 160783604,
        "sender_full_name": "oli",
        "timestamp": 1552572743
    },
    {
        "content": "<p>it should be a blocker for stabilizing existential types</p>",
        "id": 160783618,
        "sender_full_name": "oli",
        "timestamp": 1552572756
    },
    {
        "content": "<p>but not P-high imo</p>",
        "id": 160783627,
        "sender_full_name": "oli",
        "timestamp": 1552572762
    },
    {
        "content": "<p>Thus, downgrading <a href=\"https://github.com/rust-lang/rust/issues/53598\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53598\">#53598</a> to P-medium, and adding as blocker to tracking issue for existential type feature.</p>",
        "id": 160783640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572772
    },
    {
        "content": "<p>Okay so that's all the time I want to spend on P-high stuff for now</p>",
        "id": 160783804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572864
    },
    {
        "content": "<p>lets see about the beta nominations</p>",
        "id": 160783816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572876
    },
    {
        "content": "<p>/poll how does this work</p>\n<ul>\n<li>it does</li>\n<li>it doesn't</li>\n</ul>",
        "id": 160783830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572895
    },
    {
        "content": "<p>one thing I noticed about polls last week is that they don't show up on mobile</p>",
        "id": 160783885,
        "sender_full_name": "varkor",
        "timestamp": 1552572935
    },
    {
        "content": "<p>(and there's no indication there should be a poll)</p>",
        "id": 160783893,
        "sender_full_name": "varkor",
        "timestamp": 1552572943
    },
    {
        "content": "<p>/poll \"resolve: Account for new importable entities\" <a href=\"https://github.com/rust-lang/rust/issues/59047\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59047\">#59047</a></p>\n<ul>\n<li><span aria-label=\"back\" class=\"emoji emoji-1f519\" role=\"img\" title=\"back\">:back:</span>  backport</li>\n<li><span aria-label=\"stop\" class=\"emoji emoji-1f91a\" role=\"img\" title=\"stop\">:stop:</span>  do not backport</li>\n</ul>",
        "id": 160783904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572951
    },
    {
        "content": "<blockquote>\n<p>one thing I noticed about polls last week is that they don't show up on mobile</p>\n</blockquote>\n<p>hmm seems bad</p>",
        "id": 160783962,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552572969
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> oh no that is unfortunate. Do the emojis show up on mobile? And are they clickable by mobile clients?</p>",
        "id": 160783964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552572970
    },
    {
        "content": "<p>Yes</p>",
        "id": 160783973,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1552572977
    },
    {
        "content": "<p>okay, so checking again: the polls are now <em>visible</em> on mobile, but show up as bullet points (that can't be interacted with)</p>",
        "id": 160784010,
        "sender_full_name": "varkor",
        "timestamp": 1552573010
    },
    {
        "content": "<p>so emoji reactions are best for now</p>",
        "id": 160784023,
        "sender_full_name": "varkor",
        "timestamp": 1552573019
    },
    {
        "content": "<p>well maybe I can use emojis on the poll?</p>",
        "id": 160784043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573044
    },
    {
        "content": "<p>oh dear does the poll also <em>not render</em> the emojis I put into the poll items? WTF...</p>",
        "id": 160784134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573090
    },
    {
        "content": "<p>we gotta file some bugs about polls :)</p>",
        "id": 160784159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573113
    },
    {
        "content": "<blockquote>\n<p>oh dear does the poll also <em>not render</em> the emojis I put into the poll items? WTF...</p>\n</blockquote>\n<p>that's gotta be a bug</p>",
        "id": 160784164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573118
    },
    {
        "content": "<p>so how are we doing this :)</p>",
        "id": 160784177,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573128
    },
    {
        "content": "<p>I guess we'll use emojis</p>",
        "id": 160784196,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573142
    },
    {
        "content": "<p>lets continue</p>",
        "id": 160784237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573170
    },
    {
        "content": "<p>\"Always emit unclosed delimiter diagnostics\" <a href=\"https://github.com/rust-lang/rust/issues/58903\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58903\">#58903</a></p>",
        "id": 160784247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573178
    },
    {
        "content": "<p>\"Do not accidentally treat multi-segment meta-items as single-segment\" <a href=\"https://github.com/rust-lang/rust/issues/58899\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58899\">#58899</a> (the first three commits)</p>",
        "id": 160784336,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573210
    },
    {
        "content": "<p>(by the way, if people would prefer a discussion period after each item, rather than me issuing them in sequence... well, i don't know if we have time for me to pause signfiicantly between each. I think best to just speak up, maybe.)</p>",
        "id": 160784384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573263
    },
    {
        "content": "<p>(the first three commits)</p>",
        "id": 160784394,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1552573267
    },
    {
        "content": "<blockquote>\n<p>(the first three commits)</p>\n</blockquote>\n<p>ah thanks for clarifying; edited accordingly.</p>",
        "id": 160784418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573303
    },
    {
        "content": "<p>\"Expand where negative supertrait specific error is shown\" <a href=\"https://github.com/rust-lang/rust/issues/58861\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58861\">#58861</a></p>",
        "id": 160784439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573320
    },
    {
        "content": "<blockquote>\n<p>(the first three commits)</p>\n</blockquote>\n<p>am I correct <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> that <a href=\"https://github.com/rust-lang/rust/issues/58899\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58899\">#58899</a> seems to close a lot of regressions?</p>",
        "id": 160784554,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573375
    },
    {
        "content": "<p>It seems like a hefty diff (although I need to check which changes are due to just the 1st 3 commits, I guess) but also seems probably worthwhile, is why I ask.</p>",
        "id": 160784696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573453
    },
    {
        "content": "<p>Many kinds of regressions, yes, but each kind is not too likely.<br>\nCrater didn't find any regressions fixes.</p>",
        "id": 160784768,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1552573504
    },
    {
        "content": "<blockquote>\n<p>(by the way, if people would prefer a discussion period after each item, rather than me issuing them in sequence... well, i don't know if we have time for me to pause signfiicantly between each. I think best to just speak up, maybe.)</p>\n</blockquote>\n<p>My vote: I like this way -- I think we should set \"fixed time period\" like this, e.g. 10-15 minutes to give people time to peruse, with the option to ask for more. =)</p>",
        "id": 160784812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573540
    },
    {
        "content": "<p>what does \"this way\" mean</p>",
        "id": 160784875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573563
    },
    {
        "content": "<p>I assume you mean \"keep doing what you're doing\"</p>",
        "id": 160784890,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573576
    },
    {
        "content": "<p>posting all the backports at the beginning</p>",
        "id": 160784893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573577
    },
    {
        "content": "<p>okay</p>",
        "id": 160784900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573580
    },
    {
        "content": "<p>to persue at our liesure</p>",
        "id": 160784902,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573581
    },
    {
        "content": "<p>I just feel like chats over zulip it's often hard to tell when we've waited \"long enough\"</p>",
        "id": 160784917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573599
    },
    {
        "content": "<p>anyway it looks like people are generally in favor of backporting all of these</p>",
        "id": 160784928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573606
    },
    {
        "content": "<p>luckily due to the daylight saving time disfunction I have extra time post meeting today to follow up on this stuff</p>",
        "id": 160784955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573629
    },
    {
        "content": "<p>so lets move along and i'll tag them all after meeting is done</p>",
        "id": 160784972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573639
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/58899\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58899\">#58899</a> seems pretty big for a backport</p>",
        "id": 160785000,
        "sender_full_name": "mw",
        "timestamp": 1552573652
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/58899\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58899\">#58899</a> seems pretty big for a backport</p>\n</blockquote>\n<p>even just the first three commits you mean, right?</p>",
        "id": 160785028,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573674
    },
    {
        "content": "<p>second commit is unit tests</p>",
        "id": 160785103,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573698
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/58899\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58899\">#58899</a> seems pretty big for a backport</p>\n</blockquote>\n<p>the third commit in particular is not small</p>",
        "id": 160785113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573705
    },
    {
        "content": "<p>(which is why I was asking about the \"magnitude\" of changes fixed)</p>",
        "id": 160785144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573719
    },
    {
        "content": "<p>yes. much may be mechanical?</p>",
        "id": 160785151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573725
    },
    {
        "content": "<p>(Actually, the first three commits are no longer first, GitHub reordered all the things again.)</p>",
        "id": 160785159,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1552573733
    },
    {
        "content": "<p>I see lots of s/.name()/.ident_str()/</p>",
        "id": 160785164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573736
    },
    {
        "content": "<blockquote>\n<p>(Actually, the first three commits are no longer first, GitHub reordered all the things again.)</p>\n</blockquote>\n<p>Oh no!</p>",
        "id": 160785180,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573746
    },
    {
        "content": "<p>:)</p>",
        "id": 160785202,
        "sender_full_name": "mw",
        "timestamp": 1552573764
    },
    {
        "content": "<p>I think you need to provide more specific indication of your intentions then</p>",
        "id": 160785233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573778
    },
    {
        "content": "<p>e.g. list the commits to cherry pick</p>",
        "id": 160785241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573782
    },
    {
        "content": "<p>or even ... post the PR itself you're proposing for backport...?</p>",
        "id": 160785257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573794
    },
    {
        "content": "<p>either of those would definitely be helpful:)</p>",
        "id": 160785385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552573840
    },
    {
        "content": "<blockquote>\n<p>post the PR itself you're proposing for backport...?</p>\n</blockquote>\n<p>Yeah, I'll do that.<br>\nI also realized that the PR breaks clippy and clippy cannot be broken on beta, so some removed APIs will also need to be resurrected.</p>",
        "id": 160785400,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1552573854
    },
    {
        "content": "<p>okay lets maybe table discussion of <a href=\"https://github.com/rust-lang/rust/issues/58899\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58899\">#58899</a> for now</p>",
        "id": 160785439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573871
    },
    {
        "content": "<p>we won't approve that for back port this week</p>",
        "id": 160785452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573880
    },
    {
        "content": "<p>but we won't explicitly reject it either</p>",
        "id": 160785456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573883
    },
    {
        "content": "<p>sound okay?</p>",
        "id": 160785457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573885
    },
    {
        "content": "<p>okay we don't have any <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3Astable-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3Astable-nominated+label%3AT-compiler\">stable backport nominations</a></p>",
        "id": 160785491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573915
    },
    {
        "content": "<p>Oh!</p>",
        "id": 160785597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573972
    },
    {
        "content": "<p>there is one P-high issue I did want to discuss</p>",
        "id": 160785602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552573978
    },
    {
        "content": "<p>or actually, its on the nominated list</p>",
        "id": 160785645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574008
    },
    {
        "content": "<p>we'll get to it then</p>",
        "id": 160785648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574011
    },
    {
        "content": "<p>the <a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">stable-to-beta regressions</a> look under control</p>",
        "id": 160785723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574048
    },
    {
        "content": "<p>and I think i already touched on the <a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">stable-to-nightly</a> regressions either in my request-for-volunteers above or in the pre-triage topic</p>",
        "id": 160785793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574104
    },
    {
        "content": "<p>under <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\">waiting for our team</a> there is still one issue</p>",
        "id": 160785813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574124
    },
    {
        "content": "<p>namely \"[do not merge] Measure performance impact of local interners\" <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a></p>",
        "id": 160785829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574137
    },
    {
        "content": "<p>there was a ping two weeks ago to Ping <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  Your vote is needed</p>",
        "id": 160785909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574180
    },
    {
        "content": "<p>(I'm willing to give up a 5% memory increase to reduce our internal API complexity, yes. I'll go ahead and vote now)</p>",
        "id": 160785962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574225
    },
    {
        "content": "<p>huh I thought I looked at all FCP items</p>",
        "id": 160785972,
        "sender_full_name": "eddyb",
        "timestamp": 1552574227
    },
    {
        "content": "<p>there's discussion in the ticket</p>",
        "id": 160785989,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574239
    },
    {
        "content": "<p>rfcbot doesn't show rfcbot polls</p>",
        "id": 160786001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574248
    },
    {
        "content": "<p>it was way worse than 5% when I added local interners :P</p>",
        "id": 160786011,
        "sender_full_name": "eddyb",
        "timestamp": 1552574254
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> raised concerns that we already use too much memory</p>",
        "id": 160786018,
        "sender_full_name": "mw",
        "timestamp": 1552574259
    },
    {
        "content": "<p>or at least I'm not sure, but 90-something% of all interned things had inference variables</p>",
        "id": 160786110,
        "sender_full_name": "eddyb",
        "timestamp": 1552574293
    },
    {
        "content": "<p>maybe we should dedicate some time to discuss this , but not on the fly?</p>",
        "id": 160786168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574323
    },
    {
        "content": "<p>if we're moving towards more canonicalization, local interners seem less useful and maybe we can eventually get rid of inference variables</p>",
        "id": 160786175,
        "sender_full_name": "eddyb",
        "timestamp": 1552574325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> this would be improved by removing regions from type inference, right?</p>",
        "id": 160786189,
        "sender_full_name": "mw",
        "timestamp": 1552574332
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> raised concerns that we already use too much memory</p>\n</blockquote>\n<p>I think this is a fair point, but also I wonder if we should address this by focusing on reducing memory usage in specific cases</p>",
        "id": 160786198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574336
    },
    {
        "content": "<p>I'm definitely for making progress in this area one way or another</p>",
        "id": 160786203,
        "sender_full_name": "eddyb",
        "timestamp": 1552574338
    },
    {
        "content": "<p>If I recall, at least in the past, we often had problems because of gigantic constants</p>",
        "id": 160786240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574354
    },
    {
        "content": "<p>And we had planned to address that \"once miri is better\" and so forth</p>",
        "id": 160786252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574362
    },
    {
        "content": "<p>a lot of the pieces are probably in place now?</p>",
        "id": 160786255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574367
    },
    {
        "content": "<p>(not sure)</p>",
        "id": 160786259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574371
    },
    {
        "content": "<p>that said, I agree with <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> that we should be paying attention to this and looking for opportunities to improve.</p>",
        "id": 160786294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574403
    },
    {
        "content": "<blockquote>\n<p>maybe we should dedicate some time to discuss this , but not on the fly?</p>\n</blockquote>\n<p>yeah, it's an interesting question how to handle this change responsibly. I think there are strong reasons to do this that go beyond just simplifying the codebase (though that is a good one).</p>",
        "id": 160786376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574433
    },
    {
        "content": "<p>miri has its own per-evaluation-local memory, so we only intern the result of an evaluation and even that one is deduplicated</p>",
        "id": 160786392,
        "sender_full_name": "oli",
        "timestamp": 1552574447
    },
    {
        "content": "<p>Okay. I don't know if the thursday meeting is best, or if <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> wants to dedicate time during steering meeting</p>",
        "id": 160786409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574463
    },
    {
        "content": "<p>but maybe lets move along. I can leave this once again tagged as \"waiting-on-team\"</p>",
        "id": 160786441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574477
    },
    {
        "content": "<p>because there's a <em>bunch</em> of <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\">nominated</a> issues</p>",
        "id": 160786464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574501
    },
    {
        "content": "<p>I mentioned  \"Specific code layout can cause compiler panic with lto=true\" <a href=\"https://github.com/rust-lang/rust/issues/59137\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59137\">#59137</a> elsewhere</p>",
        "id": 160786530,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574522
    },
    {
        "content": "<p>it appears to potentially be due to interaction between dylib and lto</p>",
        "id": 160786565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574541
    },
    {
        "content": "<p>yeah, that might be a regression</p>",
        "id": 160786568,
        "sender_full_name": "mw",
        "timestamp": 1552574543
    },
    {
        "content": "<blockquote>\n<p>miri has its own per-evaluation-local memory, so we only intern the result of an evaluation and even that one is deduplicated</p>\n</blockquote>\n<p>(I think it had more to do with building a ton of MIR for very simple, but large constants)</p>",
        "id": 160786577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574547
    },
    {
        "content": "<p>I want to know who should tackle it</p>",
        "id": 160786584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574549
    },
    {
        "content": "<p>I'd like to fix it by removing support for Rust dylibs <code>:P</code></p>",
        "id": 160786594,
        "sender_full_name": "mw",
        "timestamp": 1552574561
    },
    {
        "content": "<blockquote>\n<p>I'd like to fix it by removing support for Rust dylibs <code>:P</code></p>\n</blockquote>\n<p>... this does not sound realistic to me ...?</p>",
        "id": 160786610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574579
    },
    {
        "content": "<p>I know <code>:/</code> (although <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> is on my side)</p>",
        "id": 160786657,
        "sender_full_name": "mw",
        "timestamp": 1552574615
    },
    {
        "content": "<p>but</p>",
        "id": 160786678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574629
    },
    {
        "content": "<p>Is it very hard to fix, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> ?</p>",
        "id": 160786686,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574634
    },
    {
        "content": "<p>I don't know</p>",
        "id": 160786727,
        "sender_full_name": "mw",
        "timestamp": 1552574642
    },
    {
        "content": "<p>i did mention somewhere that maybe we <em>should</em> say that lto is incompatible with dylibs?</p>",
        "id": 160786742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574646
    },
    {
        "content": "<p>but I guess you can assign it to me</p>",
        "id": 160786765,
        "sender_full_name": "mw",
        "timestamp": 1552574660
    },
    {
        "content": "<p>that at least sounds more reasonable than outright removing dylib support</p>",
        "id": 160786766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574662
    },
    {
        "content": "<p>we can remove optimizations (e.g. metadata compression, if we still do that) from <code>dylib</code>s, and whatnot, but I don't think we can ever remove the crate type or break it</p>",
        "id": 160786774,
        "sender_full_name": "eddyb",
        "timestamp": 1552574667
    },
    {
        "content": "<p>Great I will assign to <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> who will presumably brainwash us all into believing we can remove dylib support</p>",
        "id": 160786813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574695
    },
    {
        "content": "<p>maybe we can deprecate them (and only use them in the compiler, if we have to)</p>",
        "id": 160786843,
        "sender_full_name": "mw",
        "timestamp": 1552574715
    },
    {
        "content": "<p>next nominated issue: \"cargo fix --edition failure (probably macros related)\" <a href=\"https://github.com/rust-lang/rust/issues/59065\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59065\">#59065</a></p>",
        "id": 160786891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574753
    },
    {
        "content": "<p>(I know we are at the 45 minute mark. Lets spend 5 more minutes on nominations since we won't be hearing from WG-llvm today)</p>",
        "id": 160786954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574777
    },
    {
        "content": "<p>i mentioned <a href=\"https://github.com/rust-lang/rust/issues/59065\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59065\">#59065</a> during <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-14.20.2354818/near/160778802\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-14.20.2354818/near/160778802\">pretriage</a></p>",
        "id": 160787000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574825
    },
    {
        "content": "<p>it struck me as a likely <code>rustfix</code> bug of some kind</p>",
        "id": 160787020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574842
    },
    {
        "content": "<p>where we are rewriting <code>Box&lt;dyn Trait&gt;</code> to <code>Box&lt;r#dyn Trait&gt;</code></p>",
        "id": 160787053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574864
    },
    {
        "content": "<p>is <span class=\"user-mention\" data-user-id=\"129356\">@Zack M. Davis</span> around?</p>",
        "id": 160787079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574873
    },
    {
        "content": "<p>I wonder if that is related to any of the changes <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> made?</p>",
        "id": 160787149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574896
    },
    {
        "content": "<p>anyway <a href=\"https://github.com/rust-lang/rust/issues/59065\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59065\">#59065</a> needs prioritization</p>",
        "id": 160787154,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574898
    },
    {
        "content": "<p>i.e., in the \"maybe backport\" PR</p>",
        "id": 160787169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574907
    },
    {
        "content": "<p>hmm maybe</p>",
        "id": 160787173,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574911
    },
    {
        "content": "<p>I'm only saying that because I saw mention of raw identifiers</p>",
        "id": 160787176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574912
    },
    {
        "content": "<p>just a guess :)</p>",
        "id": 160787189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574925
    },
    {
        "content": "<p>seems surprising</p>",
        "id": 160787242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574949
    },
    {
        "content": "<p>yeah I'll say</p>",
        "id": 160787250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574954
    },
    {
        "content": "<p>I mean, this doesn't look like \"strange\" code</p>",
        "id": 160787253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574955
    },
    {
        "content": "<p>feels like we need to investigate this</p>",
        "id": 160787275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552574968
    },
    {
        "content": "<p>I would have thought it would have been hit during testing of <code>rustfix</code></p>",
        "id": 160787280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574971
    },
    {
        "content": "<p>Okay lets make <a href=\"https://github.com/rust-lang/rust/issues/59065\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59065\">#59065</a> P-high then</p>",
        "id": 160787291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552574978
    },
    {
        "content": "<p>oh hmm the nightly they used is .. neither old nor new aadbc459b 2019-02-23</p>",
        "id": 160787416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575041
    },
    {
        "content": "<p>I'm going to skip the nominated issues that I already posted volunteer requests for (the <span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span>-marked things)</p>",
        "id": 160787432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575052
    },
    {
        "content": "<p>(I'm going to try and reproduce)</p>",
        "id": 160787434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575053
    },
    {
        "content": "<p>I haven't made progress yet on \"Incorporate RLS bug tracking into compiler team triage\" <a href=\"https://github.com/rust-lang/rust/issues/58858\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58858\">#58858</a>; hopefully I will figure out a way to stuff that into our agenda by next week.</p>",
        "id": 160787484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575089
    },
    {
        "content": "<p>next is \"Derives on deprecated items generate deprecation warnings\" <a href=\"https://github.com/rust-lang/rust/issues/58822\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58822\">#58822</a></p>",
        "id": 160787525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575118
    },
    {
        "content": "<p>but I don't think that needs nomination, it seems like its under control</p>",
        "id": 160787573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575126
    },
    {
        "content": "<p>sounds right</p>",
        "id": 160787604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575151
    },
    {
        "content": "<p>so now the issue I wanted to talk about: \"fn generated by macro exported from crate loses global #![allow(non_snake_case)]\" <a href=\"https://github.com/rust-lang/rust/issues/58502\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58502\">#58502</a></p>",
        "id": 160787611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575154
    },
    {
        "content": "<p>there's two points I wanted to bring up here</p>",
        "id": 160787626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575167
    },
    {
        "content": "<p>1. sort of interesting: A change (and I think a <em>good</em> change) to the span for a lint actually can regress code</p>",
        "id": 160787665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575192
    },
    {
        "content": "<p>due to the way that we filter out lints that are fired on code that originated from macro-expansions we got from other crates</p>",
        "id": 160787707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575224
    },
    {
        "content": "<p>I spent some time (probably <strong>way</strong> too much time) investigating an architecture for mitigating this scenario</p>",
        "id": 160787793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575257
    },
    {
        "content": "<blockquote>\n<p>1. sort of interesting: A change (and I think a <em>good</em> change) to the span for a lint actually can regress code</p>\n</blockquote>\n<p>yeah, this was pretty interesting  to me</p>",
        "id": 160787834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575281
    },
    {
        "content": "<p>i.e. finding a way to report such cases as warnings rather than errors, even when the user asked to <code>#[deny(..)]</code> the lint in question</p>",
        "id": 160787839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575285
    },
    {
        "content": "<p>While I do think such an architecture is potentially interesting, its also not a good thing to invest time in unless we actually <em>want to use it</em></p>",
        "id": 160787876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575312
    },
    {
        "content": "<p>in other words, would we actually want future changes to spans reported by lints to have a history to them</p>",
        "id": 160787904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575338
    },
    {
        "content": "<p>where we track both the span(s) tracked by previous version(s) of the compiler, as well as the most current span that it flags</p>",
        "id": 160787974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575365
    },
    {
        "content": "<p>the other option of course is not to change the span</p>",
        "id": 160787977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575365
    },
    {
        "content": "<p>yes that is another option</p>",
        "id": 160788008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575374
    },
    {
        "content": "<p>but probably not a great one?</p>",
        "id": 160788019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575384
    },
    {
        "content": "<blockquote>\n<p>in other words, would we actually want future changes to spans reported by lints to have a history to them</p>\n</blockquote>\n<p>this way of phrasing it sounds strange; but I guess another way to put it is that there is a span that determines the \"lint allow/deny level\"</p>",
        "id": 160788034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575394
    },
    {
        "content": "<p>and that is (potentially) distinct from the span that is used in the print out?</p>",
        "id": 160788112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575403
    },
    {
        "content": "<p>which...I don't know, sounds less bad :P but I guess it's equivalent</p>",
        "id": 160788211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575416
    },
    {
        "content": "<p>in paricular I was imagining a world where we had rules and put a bit of thought into \"what is the right span to determine the allow/deny\" when it comes to macros etc</p>",
        "id": 160788259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575442
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>in other words, would we actually want future changes to spans reported by lints to have a history to them</p>\n</blockquote>\n<p>this way of phrasing it sounds strange; but I guess another way to put it is that there is a span that determines the \"lint allow/deny level\"</p>\n</blockquote>\n<p>well i was more thinking of comparing whether the span has gone from \"came from external crate\" to \"doesn't come from external crate\", and downgrading from error to wanring in that case alone</p>",
        "id": 160788285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575455
    },
    {
        "content": "<p>if I am understanding correctly, anyway, the problem here is that we had something like <code>fn $foo() { .. }</code> or whatever, and the old span was on <em>that</em> construct, and thus took its \"allow/deny\" levels more from the macro itself?</p>",
        "id": 160788315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575477
    },
    {
        "content": "<p>which I do not think is equivalent to the (simpler?) idea that niko is putting forward</p>",
        "id": 160788318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575480
    },
    {
        "content": "<p>(but now the span is on the <code>$foo</code> itself, and thus comes from the point where macro is applied?)</p>",
        "id": 160788385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575504
    },
    {
        "content": "<blockquote>\n<p>if I am understanding correctly, anyway, the problem here is that we had something like <code>fn $foo() { .. }</code> or whatever, and the old span was on <em>that</em> construct, and thus took its \"allow/deny\" levels more from the macro itself?</p>\n</blockquote>\n<p>this is what I originally thought, but its not quite that smple</p>",
        "id": 160788389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575506
    },
    {
        "content": "<p>Its more that we have a blanket \"don't bother reporting lints\" when any part of the span originating from any external crate</p>",
        "id": 160788440,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575531
    },
    {
        "content": "<p>and it <strong>doesn't matter</strong> what the allow/warn/deny level was in that crate</p>",
        "id": 160788467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575543
    },
    {
        "content": "<p>the thinking here is \"client crates can't do anything anyway about the code that the external crate is providing, so there's no point in linting it\"</p>",
        "id": 160788514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575572
    },
    {
        "content": "<p>ugh we are almost out of time</p>",
        "id": 160788538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575588
    },
    {
        "content": "<p>the second thing I wanted to note here</p>",
        "id": 160788547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575595
    },
    {
        "content": "<blockquote>\n<p>Its more that we have a blanket \"don't bother reporting lints\" when any part of the span originating from any external crate</p>\n</blockquote>\n<p>ok, but it still has to do with the span coming from the <code>fn $foo()</code> as a whole, and not just <code>$foo</code>?</p>",
        "id": 160788617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575607
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>Its more that we have a blanket \"don't bother reporting lints\" when any part of the span originating from any external crate</p>\n</blockquote>\n<p>ok, but it still has to do with the span coming from the <code>fn $foo()</code> as a whole, and not just <code>$foo</code>?</p>\n</blockquote>\n<p>yes</p>",
        "id": 160788643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575618
    },
    {
        "content": "<blockquote>\n<p>ugh we are almost out of time</p>\n</blockquote>\n<p>I can <strong>very briefly</strong> update on the async-await WG</p>",
        "id": 160788649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575626
    },
    {
        "content": "<p>The second thing I wanted to note is that due to mismanagement of <a href=\"https://github.com/rust-lang/rust/issues/58502\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58502\">#58502</a> (which I take responsibility for), this bug is actually in stable</p>",
        "id": 160788653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575628
    },
    {
        "content": "<p>which means we need to decide whether this is worth fixing at all, and if so, is it worth a point release, etc.</p>",
        "id": 160788686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575649
    },
    {
        "content": "<p>(I appreciated your timeline, btw, I think we should consider doing more postmortems like that)</p>",
        "id": 160788694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575656
    },
    {
        "content": "<p>(though of course we should think about what we can do to alter our policy and make it less likely)</p>",
        "id": 160788722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575675
    },
    {
        "content": "<p>but we don't need to talk about the fact it leaked to stable right now</p>",
        "id": 160788725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575679
    },
    {
        "content": "<p>It can be worked around by macro defs by annotating the generated code, right?</p>",
        "id": 160788729,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1552575681
    },
    {
        "content": "<p>since I don't want to try to stuff it into -1 minutes.</p>",
        "id": 160788734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575688
    },
    {
        "content": "<blockquote>\n<p>It can be worked around by macro defs by annotating the generated code, right?</p>\n</blockquote>\n<p>yes, as long as one isn't using <code>#[forbid]</code>, I assume.</p>",
        "id": 160788773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575715
    },
    {
        "content": "<p>well</p>",
        "id": 160788835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575731
    },
    {
        "content": "<p>do you mean annotating the macro-invocatin</p>",
        "id": 160788843,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575738
    },
    {
        "content": "<p>or annotating the code generated within the macro itself?</p>",
        "id": 160788859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575746
    },
    {
        "content": "<p>(actually I think either workaround works)</p>",
        "id": 160788876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575764
    },
    {
        "content": "<blockquote>\n<p>or annotating the code generated within the macro itself?</p>\n</blockquote>\n<p>this seems like the thing you would want to be able to do</p>",
        "id": 160788893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575779
    },
    {
        "content": "<p>One thing I <em>am</em> going to do is post a test case I made that illustrates our behavior here</p>",
        "id": 160788894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575779
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>ugh we are almost out of time</p>\n</blockquote>\n<p>I can <strong>very briefly</strong> update on the async-await WG</p>\n</blockquote>\n<p>maybe we can switch to this</p>",
        "id": 160788937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575809
    },
    {
        "content": "<p>OK, well, this is a hard one. I'm <em>inclined</em> to let it go, under our general policy of not messing about with lints, but I feel like there is a need to be refining and documenting our regression procedure when we encounter such edge cases</p>",
        "id": 160788957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575824
    },
    {
        "content": "<p>I can definitely see this irritating someone</p>",
        "id": 160788971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575835
    },
    {
        "content": "<p>(people who want to discuss <a href=\"https://github.com/rust-lang/rust/issues/58502\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58502\">#58502</a> further are invited to post comments on that ticket)</p>",
        "id": 160788973,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  do you think <a href=\"https://github.com/rust-lang/rust/issues/58502\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58502\">#58502</a> is worth raising to T-lang ?</p>",
        "id": 160789033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575859
    },
    {
        "content": "<p>But there is the \"once it hits stable, you start risking making changes that undo the work that people did\" etc</p>",
        "id": 160789036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575864
    },
    {
        "content": "<p>I'm not sure, I feel like it's a grey area for sure. I don't know that I think lang needs to be involved in this.</p>",
        "id": 160789069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575896
    },
    {
        "content": "<p>Though I think it may be worth at least talking about</p>",
        "id": 160789104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575914
    },
    {
        "content": "<p>i.e., to bring awareness that we will want to at some point probably include the \"active span\" for the lint</p>",
        "id": 160789123,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575927
    },
    {
        "content": "<p>as part of its definition</p>",
        "id": 160789128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575933
    },
    {
        "content": "<p>okay. It definitely has pushed me to be more aware of the consequences of a seemingly trivial change to spans</p>",
        "id": 160789151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552575948
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I think that having the ability to separate the \"span for display\" from the \"span for allow/deny\" feels...maybe useful.</p>",
        "id": 160789155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575956
    },
    {
        "content": "<p>I'm sort of tempted to say we should have considered reverting the PR at that time.</p>",
        "id": 160789211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575969
    },
    {
        "content": "<p>But not sure it's worth it now.</p>",
        "id": 160789215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575973
    },
    {
        "content": "<p><em>Anyway</em></p>",
        "id": 160789221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552575979
    },
    {
        "content": "<p>the allow/deny should probably not be spans, but ids, but that's a different/tangential story</p>",
        "id": 160789253,
        "sender_full_name": "oli",
        "timestamp": 1552575991
    },
    {
        "content": "<p>should we just skip WG-checkin for this week?</p>",
        "id": 160789283,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552576008
    },
    {
        "content": "<p>Yes</p>",
        "id": 160789285,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576009
    },
    {
        "content": "<blockquote>\n<p>should we just skip WG-checkin for this week?</p>\n</blockquote>\n<p>Probably, I'll post one thing :)</p>",
        "id": 160789307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576022
    },
    {
        "content": "<p>Async-await WG is working on closing out <strong>implementation issues</strong> around the async-await desugaring etc. The list is not <em>super long</em>, at least not of blockers. We've categorized the issues using <code>AsyncAwait-*</code> tags.</p>",
        "id": 160789370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576056
    },
    {
        "content": "<p>You can see the <a href=\"https://github.com/rust-lang/compiler-team/blob/master/working-groups/async-await/NOTES.md#2019-03-12-triage-meeting\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/master/working-groups/async-await/NOTES.md#2019-03-12-triage-meeting\">current things we are working on in our NOTES file</a></p>",
        "id": 160789395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576073
    },
    {
        "content": "<p>The biggest thing we have to think about I think -- one where it may be useful to get input from e.g. <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> and <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> -- is thinking about how generators work. In particular, we have this \"interior\" type that defines the things captured by a generator, and it is currently created from the HIR and not the MIR, which introduces imprecisions. This can cause unexpected errors. There is <a href=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/generators.20and.20data.20across.20yields\" title=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/generators.20and.20data.20across.20yields\">some discussion about the best way to fix this already</a>, but I don't thnk we've really started discussing <em>in depth</em>. (In particular, a question is whether to use a  more refined HIR process, or to try and generate the MIR first.)</p>",
        "id": 160789581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576186
    },
    {
        "content": "<p>The other thing is that <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> has been working on <a href=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order\" title=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order\">changing how the desugaring works to resolve some drop-order corner cases</a> and was encountering some challenges around the way that HIR handles function arguments -- we kind of need a way to refer to the \"pre-pattern\" function argument. But they've been busy with that and have a PR and everything that I've not really caught up on so maybe they resolved that somewhat.</p>",
        "id": 160789675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576233
    },
    {
        "content": "<p>OK, fin, I think.</p>",
        "id": 160789683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552576237
    },
    {
        "content": "<p>okay great!</p>",
        "id": 160789712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552576260
    },
    {
        "content": "<p>bye everyone!</p>",
        "id": 160789728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552576266
    },
    {
        "content": "<blockquote>\n<p>The other thing is that <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> has been working on <a href=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order\" title=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order\">changing how the desugaring works to resolve some drop-order corner cases</a> and was encountering some challenges around the way that HIR handles function arguments -- we kind of need a way to refer to the \"pre-pattern\" function argument. But they've been busy with that and have a PR and everything that I've not really caught up on so maybe they resolved that somewhat.</p>\n</blockquote>\n<p>I think I'm 95% of the way there with this, it was working for a while (with the exception of a single test) but broke after a rebase. I've hit some walls trying to fix it. I'm also not super happy with the approach I've taken. So I'd appreciate any comments or thoughts <a href=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order/near/160773594\" title=\"#narrow/stream/187312-t-compiler.2Fwg-async-await/topic/.2354716.20drop.20order/near/160773594\">in this Zulip thread</a>.</p>",
        "id": 160789863,
        "sender_full_name": "davidtwco",
        "timestamp": 1552576349
    },
    {
        "content": "<blockquote>\n<p>is <span class=\"user-mention silent\" data-user-id=\"129356\">Zack M. Davis</span> around?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Hi, sorry I missed the meeting; I'll likely have some rustc-dev time this weekend, but I was going to spend it on <a href=\"https://github.com/rust-lang/rust/issues/53934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53934\">#53934</a> followup research</p>",
        "id": 160793166,
        "sender_full_name": "Zack M. Davis",
        "timestamp": 1552578215
    }
]