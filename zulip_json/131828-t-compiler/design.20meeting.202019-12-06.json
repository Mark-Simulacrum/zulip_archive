[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , we'll be starting this week's design meeting in about 36 minutes</p>",
        "id": 182764879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575642299
    },
    {
        "content": "<p>today's topic is \"migrate rustc_interface queries\", <a href=\"https://github.com/rust-lang/compiler-team/issues/175\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/175\">compiler-team#175</a></p>",
        "id": 182764984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575642365
    },
    {
        "content": "<p>(a little pre-meeting discussion has been going on in <a href=\"#narrow/stream/131828-t-compiler/topic/pre-design.20meeting.202019-12-05/near/182675571\" title=\"#narrow/stream/131828-t-compiler/topic/pre-design.20meeting.202019-12-05/near/182675571\">another zulip topic</a>)</p>",
        "id": 182765015,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575642411
    },
    {
        "content": "<p>Here is a <a href=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg\" target=\"_blank\" title=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg\">hackmd</a> where I'll try to take notes etc, it has a collection of links to start</p>",
        "id": 182766999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575643686
    },
    {
        "content": "<p>ugh, hackmd deals really poorly with being horizontally tiled</p>",
        "id": 182767098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575643762
    },
    {
        "content": "<p>So did you want to talk about what high-level strategy we should take to make the earlier parts of the compiler incremental too?</p>",
        "id": 182767855,
        "sender_full_name": "Zoxc",
        "timestamp": 1575644214
    },
    {
        "content": "<p>I'm not sure I understand the question</p>",
        "id": 182768052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644328
    },
    {
        "content": "<p>I guess maybe you're saying -- should we talk about e.g. what to do to parsing in praticular?</p>",
        "id": 182768136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644397
    },
    {
        "content": "<p>(or some other component)</p>",
        "id": 182768142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644401
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> -- design meeting starting now!</p>",
        "id": 182768212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644430
    },
    {
        "content": "<blockquote>\n<p>today's topic is \"migrate rustc_interface queries\", <a href=\"https://github.com/rust-lang/compiler-team/issues/175\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/175\">compiler-team#175</a></p>\n</blockquote>",
        "id": 182768225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644440
    },
    {
        "content": "<blockquote>\n<p>Here is a <a href=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg\" target=\"_blank\" title=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg\">hackmd</a> where I'll try to take notes etc, it has a collection of links to start</p>\n</blockquote>",
        "id": 182768230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644444
    },
    {
        "content": "<h1>Announcements</h1>",
        "id": 182768237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644447
    },
    {
        "content": "<p>No, I just wasn't sure what exactly you meant by <code>what high-level strategy we take</code>.</p>",
        "id": 182768376,
        "sender_full_name": "Zoxc",
        "timestamp": 1575644536
    },
    {
        "content": "<p>Yeah a fair question :) I guess we'll get into it. I think what I meant was probably multiple things. </p>\n<p>One of them is this: I think that these PRs endeavor to push the \"query system\" back all the way to the parser, but in some cases they do they by kind of working around the query system (this is particularly true in the HIR PR, maybe less so in the others). It might be nicer to just look at (e.g.) how to make HIR lowering incremental first, but try to do it in a way that either leverages query system or -- if it's not sufficient as is -- extends it first.</p>",
        "id": 182768637,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644706
    },
    {
        "content": "<p>Our options would be to 1) extend the query system further back, 2) use some other incremental system before the existing system, 3) some combination of the above, 4) do nothing yet</p>",
        "id": 182768675,
        "sender_full_name": "Zoxc",
        "timestamp": 1575644738
    },
    {
        "content": "<p>But I think there's also the question (to me) of how end-to-end query refactoring should fit in with things like library-ification and rust-analyzer -- we can only be changing and moving so many at a time.</p>",
        "id": 182768747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644774
    },
    {
        "content": "<p>Anyway, I haven't seen any announcements yet, I guess we could get started?</p>",
        "id": 182768774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644801
    },
    {
        "content": "<p>( cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>, <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>, two people I think might have relevant thoughts that I didn't see in the <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> list above )</p>",
        "id": 182768809,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644823
    },
    {
        "content": "<p>OK, well, the idea is to talk about end-to-end queries and especially the PR series that <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> described in this <a href=\"https://internals.rust-lang.org/t/migrating-rustc-interface-queries-to-proper-librustc-queries/10433\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/migrating-rustc-interface-queries-to-proper-librustc-queries/10433\">internals thread</a></p>",
        "id": 182768861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644874
    },
    {
        "content": "<p>First question perhaps, do people feel like they know what \"end-to-end queries\" means?</p>",
        "id": 182768926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644905
    },
    {
        "content": "<p>In short, right now, the \"query system\" -- and hence incremental compilation -- starts only once HIR is constructed. We always parse the entire crate, do macro expansion and name resolution, and create the full HIR.</p>",
        "id": 182768987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644944
    },
    {
        "content": "<p>This can be a performance problem for incremental compilation</p>",
        "id": 182769010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644961
    },
    {
        "content": "<p>Since it's kind of a \"minimum bar\" of work we always do</p>",
        "id": 182769026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644974
    },
    {
        "content": "<p>It's also just non-uniform</p>",
        "id": 182769035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644979
    },
    {
        "content": "<p>Anyway, I'm presuming that's mostly familiar</p>",
        "id": 182769057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575644998
    },
    {
        "content": "<p>I'm debating what foot to start on :) I feel like we should talk a bit about the PRs under discussion and what they do?</p>",
        "id": 182769166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645054
    },
    {
        "content": "<p>in the <a href=\"#narrow/stream/131828-t-compiler/topic/pre-design.20meeting.202019-12-05/near/182675571\" title=\"#narrow/stream/131828-t-compiler/topic/pre-design.20meeting.202019-12-05/near/182675571\">pre-discussion</a>, there was a claim</p>",
        "id": 182769254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645115
    },
    {
        "content": "<p>that these PR's, or at least some of them, aim to do the simplest possible thing to get to end-to-end queries</p>",
        "id": 182769320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645131
    },
    {
        "content": "<p>if we could explain them in <em>that</em> light, it would be helpful</p>",
        "id": 182769342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645146
    },
    {
        "content": "<p>in the sense of trying to tease out what they do, and why/whether that is truly the minimal/simplest thing possible</p>",
        "id": 182769397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645172
    },
    {
        "content": "<p>Makes sense. <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> if you want to jump in, obviously, feel free, I can try to give my take, based primarily on the internals thread.</p>",
        "id": 182769429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645190
    },
    {
        "content": "<p>Basically the PRs kind of go phase by phase, to <em>some</em> extent</p>",
        "id": 182769454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645206
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 182769483,
        "sender_full_name": "matklad",
        "timestamp": 1575645225
    },
    {
        "content": "<p>e.g., right now we construct this \"HIR map\" that indexes all the HIR, and that is passed to the tcx constructor I believe as a value</p>",
        "id": 182769488,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645231
    },
    {
        "content": "<p>But <a href=\"https://github.com/rust-lang/rust/issues/59064\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59064\">#59064</a> tries to move that into a query method</p>",
        "id": 182769558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645251
    },
    {
        "content": "<p>This is a kind of \"global query\" in that there is only really one hir map</p>",
        "id": 182769592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645268
    },
    {
        "content": "<p>so the key is basically <code>()</code> (I guess?)</p>",
        "id": 182769601,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645276
    },
    {
        "content": "<p>the internals doc makes some side comment about potentially in the future trying to move away from a single global hir_map</p>",
        "id": 182769651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645300
    },
    {
        "content": "<p>there is various bits of special treatment</p>",
        "id": 182769654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645301
    },
    {
        "content": "<p>Yeah, I think is a key point</p>",
        "id": 182769685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645318
    },
    {
        "content": "<p>The key is a <code>CrateNum</code>, but it's basically global since we only compile one crate at a time now</p>",
        "id": 182769704,
        "sender_full_name": "Zoxc",
        "timestamp": 1575645334
    },
    {
        "content": "<p>I think right now the <code>hir_map</code> query is rather special and not treated as a normal incremental value -- otherwise basically everything would be dirty</p>",
        "id": 182769815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645388
    },
    {
        "content": "<p>sorry, this is actually true in \"master\"</p>",
        "id": 182769821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645397
    },
    {
        "content": "<p>but it's also true in that PR</p>",
        "id": 182769823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645400
    },
    {
        "content": "<p>i.e., by \"right now\" I meant after the PR lands</p>",
        "id": 182769828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645406
    },
    {
        "content": "<p>when you e.g. request a bit of HIR from the map, there is special logic that adds the appropate dependencies</p>",
        "id": 182769845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645419
    },
    {
        "content": "<p>this is definitely one of the things that <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and I were concerned about -- that right now, we'd prefer to be moving towards a system with fewer special cases</p>",
        "id": 182769903,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645462
    },
    {
        "content": "<p>that would be one of the main advantages of end-to-end queries</p>",
        "id": 182769977,
        "sender_full_name": "mw",
        "timestamp": 1575645485
    },
    {
        "content": "<p>this comment from the internals thread sounds closer to the kind of thing I am thinking of:</p>\n<blockquote>\n<p>I imagine we’ll replace the hir_map and hir function and cache with a query which takes an item and returns a smaller map for just the ItemLocalIds for that item. Another krate query can replace the whole crate API’s in the HIR map. I’m not sure how well this scheme will perform. In particular we may want a method to avoid hashing the HIR twice. Having krate be a no_hash query might suffice here.</p>\n</blockquote>",
        "id": 182769981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645487
    },
    {
        "content": "<p>After landing that PR, we could replace the HIR map with its special logic with queries instead, and rely on queries for correctness</p>",
        "id": 182770021,
        "sender_full_name": "Zoxc",
        "timestamp": 1575645508
    },
    {
        "content": "<p>A goal for the PRs was really to allow every pass to be turned into queries in parallel (and not just a step at a time)</p>",
        "id": 182770108,
        "sender_full_name": "Zoxc",
        "timestamp": 1575645559
    },
    {
        "content": "<p>I would prefer if we did the fully queried version of HIR indexing to begin with</p>",
        "id": 182770138,
        "sender_full_name": "mw",
        "timestamp": 1575645588
    },
    {
        "content": "<p>Right, so there's a kind of \"high-level strategy\" question of whether to first get everything into the query system (with suitable special cases) and then slowly clean it up, or to try and clean it up as we go and push the boundary back</p>",
        "id": 182770222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645613
    },
    {
        "content": "<p>I'm curious, btw, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> -- you mentioned measurements of compilation time that would benefit, I think you said something like 40% of compilation time came before HIR, do you have more specific numbers?</p>",
        "id": 182770282,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645655
    },
    {
        "content": "<p>I guess maybe we can find that on perf</p>",
        "id": 182770296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645658
    },
    {
        "content": "<p>In particular, I was wondering whether parsing, macro expansion, or HIR lowering represented an \"outsized\" chunk of it</p>",
        "id": 182770331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645673
    },
    {
        "content": "<p>that was a clean webrender check build of a recent nightly</p>",
        "id": 182770348,
        "sender_full_name": "mw",
        "timestamp": 1575645680
    },
    {
        "content": "<blockquote>\n<p>I would prefer if we did the fully queried version of HIR indexing to begin with</p>\n</blockquote>\n<p>I think I would prefer this too; I can imagine that moving \"hir map\" to a query is a good first step, but that's not obvious. I would think we can convert the hir map methods to queries first, and come to (more and more) rely on the standard red-green hashing</p>",
        "id": 182770403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645716
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/detailed-query.html?commit=d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0&amp;benchmark=webrender-check&amp;run_name=clean%20incremental\" target=\"_blank\" title=\"https://perf.rust-lang.org/detailed-query.html?commit=d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0&amp;benchmark=webrender-check&amp;run_name=clean%20incremental\">https://perf.rust-lang.org/detailed-query.html?commit=d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0&amp;benchmark=webrender-check&amp;run_name=clean%20incremental</a></p>",
        "id": 182770499,
        "sender_full_name": "mw",
        "timestamp": 1575645746
    },
    {
        "content": "<p>I'm trying to understand: Is \"fully queried version of HIR indexing\" <em>anywhere</em> in the PR series we're discussing?</p>",
        "id": 182770544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645774
    },
    {
        "content": "<p>The PR is a prerequisite to move any part of HIR indexing into queries though.</p>",
        "id": 182770553,
        "sender_full_name": "Zoxc",
        "timestamp": 1575645782
    },
    {
        "content": "<p>I don't see it in the internals thread, at least not from what I can see</p>",
        "id": 182770567,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645789
    },
    {
        "content": "<blockquote>\n<p>I'm trying to understand: Is \"fully queried version of HIR indexing\" <em>anywhere</em> in the PR series we're discussing?</p>\n</blockquote>\n<p>I don't thnk so</p>",
        "id": 182770573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645794
    },
    {
        "content": "<p>It is not.</p>",
        "id": 182770576,
        "sender_full_name": "Zoxc",
        "timestamp": 1575645800
    },
    {
        "content": "<p>for reference, a non-incremental check build spends more like 10% before incremental kicks in: <a href=\"https://perf.rust-lang.org/detailed-query.html?commit=d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0&amp;benchmark=webrender-check&amp;run_name=clean\" target=\"_blank\" title=\"https://perf.rust-lang.org/detailed-query.html?commit=d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0&amp;benchmark=webrender-check&amp;run_name=clean\">https://perf.rust-lang.org/detailed-query.html?commit=d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0&amp;benchmark=webrender-check&amp;run_name=clean</a></p>",
        "id": 182770579,
        "sender_full_name": "mw",
        "timestamp": 1575645801
    },
    {
        "content": "<p>so in those numbers, <code>build_hir_map</code> (for example) is about 9.17%, parsing is 9%, macro expansion 9%, and resolve 10%</p>",
        "id": 182770706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645847
    },
    {
        "content": "<blockquote>\n<p>The PR is a prerequisite to move any part of HIR indexing into queries though.</p>\n</blockquote>\n<p>\"The PR\" being <a href=\"https://github.com/rust-lang/rust/issues/59064\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59064\">#59064</a>, right?</p>",
        "id": 182770708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575645849
    },
    {
        "content": "<p>pretty clean distribution :)</p>",
        "id": 182770713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645850
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> (a) I'm not sure that the PR is a pre-req but also (b) I'd rather talk about the end-state we are trying to build first</p>",
        "id": 182770750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645870
    },
    {
        "content": "<p>and then figure out the steps we take to get there</p>",
        "id": 182770753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645876
    },
    {
        "content": "<p>then start with the steps</p>",
        "id": 182770758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645879
    },
    {
        "content": "<p>and I still don't quite see <em>that</em> design</p>",
        "id": 182770769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645885
    },
    {
        "content": "<p>(though I suspect we have similar things in mind)</p>",
        "id": 182770788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645899
    },
    {
        "content": "<p>I think for example I would expect to ultimately have any HIR map at all</p>",
        "id": 182770835,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645923
    },
    {
        "content": "<p>there would probably just be \"base queries\" that extract out the HIR for a given item, and rely on red-green hashing</p>",
        "id": 182770879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645949
    },
    {
        "content": "<p>those queries would do the lowering on demand</p>",
        "id": 182770890,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645955
    },
    {
        "content": "<p>(this is partly why I pinged <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>, since I thiink that rust-analyzer has been carving out a path much like this; I know it's what we were doing experimentally when building Lark too)</p>",
        "id": 182770978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575645981
    },
    {
        "content": "<p>Yeah, in rust-analyzer we build a map of top-level items, and each body is a separate map/query</p>",
        "id": 182771052,
        "sender_full_name": "matklad",
        "timestamp": 1575646026
    },
    {
        "content": "<p>I'd expect a similar fate for the HIR map. I do worry about the performance of that (for clean builds), but hopefully we can make any regression small.</p>",
        "id": 182771236,
        "sender_full_name": "Zoxc",
        "timestamp": 1575646122
    },
    {
        "content": "<p>so is the question if a step like <a href=\"https://github.com/rust-lang/rust/issues/59064\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59064\">#59064</a> is not worth taking, compared to trying to work towards a design where there are per-item queries?</p>",
        "id": 182771322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575646188
    },
    {
        "content": "<p>I thnk there are two questions -- one is whether that's a useful step, and the other is whether we should kind of do a \"component at a time\"</p>",
        "id": 182771420,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646216
    },
    {
        "content": "<p>well maybe 3</p>",
        "id": 182771442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646229
    },
    {
        "content": "<p>or rather, I tink the first question of \"is it a step worth taking\" is hard to answer without knowing the next steps (for the HIR map specifically) or the destination</p>",
        "id": 182771465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646249
    },
    {
        "content": "<p>I guess I'm nervous about accumulating more tech debt</p>",
        "id": 182771528,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646281
    },
    {
        "content": "<p>vs trying to clean up</p>",
        "id": 182771532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646284
    },
    {
        "content": "<p>for example, when it comes to HIR, we <em>still</em> have (afaik) a kind of unresolved effort around the transition to <code>HirId</code></p>",
        "id": 182771558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646299
    },
    {
        "content": "<p>I expect to see something like <code>tcx.hir(def_id)</code> giving you a view of def_id and nothing more</p>",
        "id": 182771577,
        "sender_full_name": "eddyb",
        "timestamp": 1575646311
    },
    {
        "content": "<p>That I think is a good thing to be shooting for</p>",
        "id": 182771636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646335
    },
    {
        "content": "<p>with no incremental tracking inside any of the map methods on the result of thst</p>",
        "id": 182771661,
        "sender_full_name": "eddyb",
        "timestamp": 1575646350
    },
    {
        "content": "<p>Right</p>",
        "id": 182771671,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646358
    },
    {
        "content": "<p>so I expect it to be a perf win</p>",
        "id": 182771676,
        "sender_full_name": "eddyb",
        "timestamp": 1575646365
    },
    {
        "content": "<p>well, maybe not right</p>",
        "id": 182771693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646378
    },
    {
        "content": "<p>it's unlikely that it is a win</p>",
        "id": 182771712,
        "sender_full_name": "mw",
        "timestamp": 1575646391
    },
    {
        "content": "<p>I think you're saying -- we wouldn't bother to hash the results of various methods that extract bits of info from that?</p>",
        "id": 182771716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646394
    },
    {
        "content": "<p>and we can try to move to that API independently of querification</p>",
        "id": 182771720,
        "sender_full_name": "eddyb",
        "timestamp": 1575646396
    },
    {
        "content": "<p>It seems like we agreed on the end state of the HIR indexing. I don't think that end state will be hard to reach either, so I'm not too worried about the path there.</p>",
        "id": 182771734,
        "sender_full_name": "Zoxc",
        "timestamp": 1575646401
    },
    {
        "content": "<p>I guess I thikn that's a somewhat separate question, but I would imagine we can tune that</p>",
        "id": 182771751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646408
    },
    {
        "content": "<p>but getting rid of lots of complicated special casing worth a bit of a regression, I think</p>",
        "id": 182771780,
        "sender_full_name": "mw",
        "timestamp": 1575646419
    },
    {
        "content": "<p>right now every method has to register a read</p>",
        "id": 182771804,
        "sender_full_name": "eddyb",
        "timestamp": 1575646436
    },
    {
        "content": "<p>on the DepNode that's effectively Hir(def_id)</p>",
        "id": 182771903,
        "sender_full_name": "eddyb",
        "timestamp": 1575646475
    },
    {
        "content": "<blockquote>\n<p>It seems like we agreed on the end state of the HIR indexing. I don't think that end state will be hard to reach either, so I'm not too worried about the path there.</p>\n</blockquote>\n<p>I am maybe a bit more worried :) not about the path, but about describing the end-state. As I said, I sort of feel like we haven't fully paid down our \"tech debt\" from the first dive into incremental, and I want us to be in a mode where we're decreasing the total by working towards a documented, uniform design (that we've actually written out)</p>",
        "id": 182771943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646496
    },
    {
        "content": "<p>ideally anything like a visitor would keep a tcx.hir(def_id) around</p>",
        "id": 182771958,
        "sender_full_name": "eddyb",
        "timestamp": 1575646504
    },
    {
        "content": "<p>yeah I thnk you're just saying that</p>",
        "id": 182772016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646522
    },
    {
        "content": "<p>reducing N trips to the dep graph to 1</p>",
        "id": 182772035,
        "sender_full_name": "eddyb",
        "timestamp": 1575646529
    },
    {
        "content": "<p>there are queriies that (e.g.) take a single input and do some transformation on it</p>",
        "id": 182772037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646531
    },
    {
        "content": "<p>and it's not necessarily worth even caching them</p>",
        "id": 182772053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646537
    },
    {
        "content": "<p>much less hashing their results</p>",
        "id": 182772057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646543
    },
    {
        "content": "<p>they can be considered dirty if their input is dirty</p>",
        "id": 182772074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646551
    },
    {
        "content": "<p>not sure what you are talking about</p>",
        "id": 182772087,
        "sender_full_name": "eddyb",
        "timestamp": 1575646555
    },
    {
        "content": "<p>were we ever going to querify HIR map methods?</p>",
        "id": 182772165,
        "sender_full_name": "eddyb",
        "timestamp": 1575646577
    },
    {
        "content": "<p>I don't know :) I think that's what we're talking about</p>",
        "id": 182772230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646613
    },
    {
        "content": "<p>that is like querifying inherent methods on HIR patterns or MIR places, to me</p>",
        "id": 182772238,
        "sender_full_name": "eddyb",
        "timestamp": 1575646619
    },
    {
        "content": "<p>I guess you are saying <code>tcx.hir(def_id)</code> would return something with methods itself, that are not queries</p>",
        "id": 182772247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646623
    },
    {
        "content": "<p>that extract bits of info about the HIR for that def-id</p>",
        "id": 182772253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646628
    },
    {
        "content": "<p>yes</p>",
        "id": 182772255,
        "sender_full_name": "eddyb",
        "timestamp": 1575646629
    },
    {
        "content": "<p>yes, ok, that's roughly equivalent to what I am talking  about</p>",
        "id": 182772270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646640
    },
    {
        "content": "<p>the data is already stored per-HIR owner/root, mostly</p>",
        "id": 182772290,
        "sender_full_name": "eddyb",
        "timestamp": 1575646660
    },
    {
        "content": "<p>so it could literally be a self-contained object</p>",
        "id": 182772313,
        "sender_full_name": "eddyb",
        "timestamp": 1575646681
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I agree that we can take a bit of a performance regression for moving HIR indexing to queries. There's probably bug fixes to be had by doing that and possibly incremental wins in the future (by no longer creating the whole HIR map)</p>",
        "id": 182772340,
        "sender_full_name": "Zoxc",
        "timestamp": 1575646682
    },
    {
        "content": "<p>So let me float an idea: instead of moving aggressively to end-to-end queries, I could imagine focusing just on the \"hir\" part of this design</p>",
        "id": 182772402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646718
    },
    {
        "content": "<p>with the goal of pushing the 'incremental barrier' back over hir lowering</p>",
        "id": 182772423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646732
    },
    {
        "content": "<p>so that we don't have to lower the entire HIR</p>",
        "id": 182772431,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646736
    },
    {
        "content": "<p>as to remaining steps around HirId, I'm sorry I dropped the ball on that, I had a plan to streamline and make several things cheaper</p>",
        "id": 182772505,
        "sender_full_name": "eddyb",
        "timestamp": 1575646785
    },
    {
        "content": "<p>I think it is good to move slowly here because each step opens design questions</p>",
        "id": 182772524,
        "sender_full_name": "mw",
        "timestamp": 1575646800
    },
    {
        "content": "<p>had to spend a few weeks on other things</p>",
        "id": 182772566,
        "sender_full_name": "eddyb",
        "timestamp": 1575646805
    },
    {
        "content": "<p>I was trying to move in the direction of an unified tcx.hir(def_id)</p>",
        "id": 182772617,
        "sender_full_name": "eddyb",
        "timestamp": 1575646843
    },
    {
        "content": "<p>I don't think this falls on \"your shoulders\"</p>",
        "id": 182772632,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646854
    },
    {
        "content": "<p>But I do think it'd be great to write out the design somewhat</p>",
        "id": 182772647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646865
    },
    {
        "content": "<p>I feel like even in this conversation we hit on some confusion -- e.g., the question of what should be a query etc</p>",
        "id": 182772693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646890
    },
    {
        "content": "<p>by introducing an Item|ImplItem|TraitItem enum and uniformizing everything that has triplicate logic for each of those</p>",
        "id": 182772728,
        "sender_full_name": "eddyb",
        "timestamp": 1575646909
    },
    {
        "content": "<p>yeah I just mean I was going to drop a few PRs but then had to pause that work</p>",
        "id": 182772843,
        "sender_full_name": "eddyb",
        "timestamp": 1575646956
    },
    {
        "content": "<p>(I guess that one thing I can also see is that we can't necessarily know what the design is, because it takes exploration, but I feel like we can take a stab at wrting out the \"sense\" we are shooting for, and then have updates when we discover parts of it that didn't work)</p>",
        "id": 182772850,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575646961
    },
    {
        "content": "<p>kind of like filling in a map</p>",
        "id": 182772899,
        "sender_full_name": "eddyb",
        "timestamp": 1575646984
    },
    {
        "content": "<blockquote>\n<p>So let me float an idea: instead of moving aggressively to end-to-end queries, I could imagine focusing just on the \"hir\" part of this design</p>\n</blockquote>\n<p>can we talk more about this? Or at least confirm what direction we're talking about going in ?</p>",
        "id": 182772916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575646991
    },
    {
        "content": "<p>I wish we had a platform that made it easy tbh</p>",
        "id": 182772938,
        "sender_full_name": "eddyb",
        "timestamp": 1575647006
    },
    {
        "content": "<p>I think that'd be useful</p>",
        "id": 182772939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647006
    },
    {
        "content": "<p>// at some point in this meeting I also want to discuss how to prioritize this effort with respect to other things that are already ongoing (like parallelization, the dep-graph refactoring, hir-id related refactorings, etc)</p>",
        "id": 182772975,
        "sender_full_name": "mw",
        "timestamp": 1575647025
    },
    {
        "content": "<p>Yeah, so, time-check, we're at 45 minutes</p>",
        "id": 182772994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647035
    },
    {
        "content": "<p>I think pushing back before HIR lowering makes sense. We don't have to deal with parsing errors at that point. We would also have to hash the AST at that point. The big problem there is <code>DefId</code>s though. The query system wants to treat these as <code>DefPath</code>s, but they're not. <code>DefId</code> are indices to a table produced by HIR lowering, which means that query system need to use this table to convert <code>DefId</code>s to <code>DefPath</code>s. So if we move HIR lowering into a queries the query system itself will depend on queries.</p>",
        "id": 182773032,
        "sender_full_name": "Zoxc",
        "timestamp": 1575647042
    },
    {
        "content": "<p>my reading of the PR that querifies HIR lowering (<a href=\"https://github.com/rust-lang/rust/issues/59205\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59205\">#59205</a>) is that it lowers the whole HIR at once</p>",
        "id": 182773056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647046
    },
    {
        "content": "<p>while the proposal of <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> up above was to <em>not</em> do that. Right?</p>",
        "id": 182773082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647060
    },
    {
        "content": "<p>correct</p>",
        "id": 182773104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647070
    },
    {
        "content": "<p>I  think we need to co-evolve HirId and any new HIR map designs</p>",
        "id": 182773121,
        "sender_full_name": "eddyb",
        "timestamp": 1575647079
    },
    {
        "content": "<blockquote>\n<p>I think pushing back before HIR lowering makes sense. We don't have to deal with parsing errors at that point. We would also have to hash the AST at that point. The big problem there is <code>DefId</code>s though. The query system wants to treat these as <code>DefPath</code>s, but they're not. <code>DefId</code> are indices to a table produced by HIR lowering, which means that query system need to use this table to convert <code>DefId</code>s to <code>DefPath</code>s. So if we move HIR lowering into a queries the query system itself will depend on queries.</p>\n</blockquote>\n<p>I really want to avoid making the query system itself depending on queries. that is a lot of added conceptual complexity.</p>",
        "id": 182773210,
        "sender_full_name": "mw",
        "timestamp": 1575647129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> I thought DefPaths exist before lowering</p>",
        "id": 182773229,
        "sender_full_name": "eddyb",
        "timestamp": 1575647141
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> had ideas on how to create DefPaths already during parsing</p>",
        "id": 182773243,
        "sender_full_name": "mw",
        "timestamp": 1575647149
    },
    {
        "content": "<p>it's just that lowering also creates them</p>",
        "id": 182773257,
        "sender_full_name": "eddyb",
        "timestamp": 1575647158
    },
    {
        "content": "<p>and adding more during macro expansion</p>",
        "id": 182773261,
        "sender_full_name": "mw",
        "timestamp": 1575647160
    },
    {
        "content": "<p>I don't .. quite know whta it means for the query system to depend on queries</p>",
        "id": 182773316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647171
    },
    {
        "content": "<p>But I think this seems like a point to note down as something to dig into</p>",
        "id": 182773351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647193
    },
    {
        "content": "<blockquote>\n<p>I don't .. quite know whta it means for the query system to depend on queries</p>\n</blockquote>\n<p>nor do i, but I'm hoping i wont have to know</p>",
        "id": 182773354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647194
    },
    {
        "content": "<p>(Side note: salsa has a built-in notion of \"interning queries\", which seems relevant, but i'm not sure it's what I would suggest for rustc, I don't love it yet)</p>",
        "id": 182773374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647210
    },
    {
        "content": "<p>The solution is quite simple though. \"Just\" make <code>DefId</code> interned <code>DefPath</code>s.</p>",
        "id": 182773387,
        "sender_full_name": "Zoxc",
        "timestamp": 1575647218
    },
    {
        "content": "<p>Yes, that is what I was going to mention</p>",
        "id": 182773418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647239
    },
    {
        "content": "<p>they are though?</p>",
        "id": 182773427,
        "sender_full_name": "eddyb",
        "timestamp": 1575647247
    },
    {
        "content": "<p>But I'd like to ask that we put a cap on technical \"deep dive\"</p>",
        "id": 182773430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647252
    },
    {
        "content": "<blockquote>\n<p>The solution is quite simple though. \"Just\" make <code>DefId</code> interned <code>DefPath</code>s.</p>\n</blockquote>\n<p>does that imply making the query system depend on queries itself?</p>",
        "id": 182773432,
        "sender_full_name": "mw",
        "timestamp": 1575647257
    },
    {
        "content": "<p>And address the prioritization questions that mw was raising</p>",
        "id": 182773434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647263
    },
    {
        "content": "<blockquote>\n<p>they are though?</p>\n</blockquote>\n<p>maybe the point here is about how the intern-table is built ?</p>",
        "id": 182773438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647268
    },
    {
        "content": "<blockquote>\n<p>// at some point in this meeting I also want to discuss how to prioritize this effort with respect to other things that are already ongoing (like parallelization, the dep-graph refactoring, hir-id related refactorings, etc)</p>\n</blockquote>",
        "id": 182773445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647274
    },
    {
        "content": "<p>(also, I give up on the hackmd, I'm going to have to do my best to skim this meeting afterwards :)</p>",
        "id": 182773508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> No, that would avoid that by basically making <code>DefId</code> and <code>DefPath</code> the same thing.</p>",
        "id": 182773528,
        "sender_full_name": "Zoxc",
        "timestamp": 1575647303
    },
    {
        "content": "<p>but maybe <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> or others, you have more \"point of information\" sort of questions on the \"vague proposal\" to focus on HIR?</p>",
        "id": 182773542,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647315
    },
    {
        "content": "<p>I am confused, I thought nothing assigned DefId's without constructing a DefPath</p>",
        "id": 182773544,
        "sender_full_name": "eddyb",
        "timestamp": 1575647316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>  that sounds like a good idea to me, generally speaking</p>",
        "id": 182773581,
        "sender_full_name": "mw",
        "timestamp": 1575647345
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> that <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> means that a <code>DefId</code> would be a <code>&amp;'tcx DefPath</code></p>",
        "id": 182773592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647358
    },
    {
        "content": "<p>it's not like a map is constructed later</p>",
        "id": 182773597,
        "sender_full_name": "eddyb",
        "timestamp": 1575647360
    },
    {
        "content": "<p>though I could be wrong :)</p>",
        "id": 182773601,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647361
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> seems incredibly disruptive</p>",
        "id": 182773623,
        "sender_full_name": "eddyb",
        "timestamp": 1575647386
    },
    {
        "content": "<p>Probably a <code>u32</code> into a <code>Vec&lt;DefPath&gt;</code></p>",
        "id": 182773630,
        "sender_full_name": "Zoxc",
        "timestamp": 1575647394
    },
    {
        "content": "<p>ok -- enough on this :) I do want to talk about prioritization</p>",
        "id": 182773692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647410
    },
    {
        "content": "<p>but it's already that!</p>",
        "id": 182773693,
        "sender_full_name": "eddyb",
        "timestamp": 1575647411
    },
    {
        "content": "<p>basically what we're doing now is starting already in on the idea of</p>",
        "id": 182773706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647424
    },
    {
        "content": "<p>let's try to design what HIR \"ought to\" look like</p>",
        "id": 182773713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647431
    },
    {
        "content": "<p>is that an effort we want to be embarking on now? how are we going to manage it, time-wise?</p>",
        "id": 182773743,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647449
    },
    {
        "content": "<p>If we <em>are</em> going to do it, maybe we can ask some of the participants here to carve out time to collaborate on a design doc?</p>",
        "id": 182773789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647467
    },
    {
        "content": "<p>(And if we <em>aren't</em> going to do it, what does that mean about the proposed PR series?)</p>",
        "id": 182773812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647486
    },
    {
        "content": "<p>speaking personally, I really want to carve out time for <em>chalk</em> and for type library-ification efforts, for example, and if I had more time than that, it'd probably go into parallelization or just bug-fixing -- who is going to be the person with the time to be drviing on this designa nd building that design doc?</p>",
        "id": 182773822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647495
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> there is an AST visitor in <code>rustc::hir::map::def_collector</code> that interns DefPath nodes to get DefIndex's</p>",
        "id": 182773825,
        "sender_full_name": "eddyb",
        "timestamp": 1575647498
    },
    {
        "content": "<blockquote>\n<p>If we <em>are</em> going to do it, maybe we can ask some of the participants here to carve out time to collaborate on a design doc?</p>\n</blockquote>\n<p>yes</p>",
        "id": 182773829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647500
    },
    {
        "content": "<blockquote>\n<p>(And if we <em>aren't</em> going to do it, what does that mean about the proposed PR series?)</p>\n</blockquote>\n<p>same question if we are, right?</p>",
        "id": 182773841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647506
    },
    {
        "content": "<p>from a high-level I prefer finishing as many ongoing projects as possible before starting new ones</p>",
        "id": 182773844,
        "sender_full_name": "mw",
        "timestamp": 1575647507
    },
    {
        "content": "<p>I would personally loved to participate in such design, to learn how hir should look like in rust-analyzer :)</p>",
        "id": 182773855,
        "sender_full_name": "matklad",
        "timestamp": 1575647514
    },
    {
        "content": "<p>that was another question -- I feel like rust-analyzer is DOING this experiment</p>",
        "id": 182773913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647531
    },
    {
        "content": "<p>but without the backwards compatbility constriants and so forth</p>",
        "id": 182773922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647537
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>(And if we <em>aren't</em> going to do it, what does that mean about the proposed PR series?)</p>\n</blockquote>\n<p>same question if we are, right?</p>\n</blockquote>\n<p>if we are going to redesign HIR, I would think we would likely close the PR series?</p>",
        "id": 182773930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647544
    },
    {
        "content": "<p>ok, just wanted that to be clearly stated</p>",
        "id": 182773936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647553
    },
    {
        "content": "<p>I don't see why we wouldn't land any Zoxc PRs tbh</p>",
        "id": 182773956,
        "sender_full_name": "eddyb",
        "timestamp": 1575647572
    },
    {
        "content": "<blockquote>\n<p>that was another question -- I feel like rust-analyzer is DOING this experiment</p>\n</blockquote>\n<p>so like maybe a place to start is to look at rust-analyzer's  design and consider trying to mock things up in that context?</p>",
        "id": 182773971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647585
    },
    {
        "content": "<blockquote>\n<p>I don't see why we wouldn't land any Zoxc PRs tbh</p>\n</blockquote>\n<p>I think the idea would be: If they are introducing complexity and aren't moving us towards the end goal, then why add that tech debt?</p>",
        "id": 182773998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647616
    },
    {
        "content": "<p>but I welcome counter arguments</p>",
        "id": 182774014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647641
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> </p>\n<blockquote>\n<p>I think @Vadim Petrochenkov had ideas on how to create DefPaths already during parsing</p>\n</blockquote>\n<p>\"create DefPaths already during parsing\" -&gt; \"create DefPaths for macro expansion IDs\" (<a href=\"https://github.com/rust-lang/rust/issues/49300#issuecomment-525531109\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49300#issuecomment-525531109\">https://github.com/rust-lang/rust/issues/49300#issuecomment-525531109</a>)<br>\n(Can't believe I made it to the meeting while it's still going.)</p>",
        "id": 182774082,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1575647663
    },
    {
        "content": "<p>(slash, we haven't really even defined the end-goal yet)</p>",
        "id": 182774083,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647663
    },
    {
        "content": "<p>I'm against landing the PRs. They introduce technical debt and make decisions that have not been discussed, like making the query system depend on queries.</p>",
        "id": 182774106,
        "sender_full_name": "mw",
        "timestamp": 1575647684
    },
    {
        "content": "<p>e.g. if they <em>are</em> moving us towards the end-goal (just maybe in a slightly round-about fashion), then we can talk about landing them in parallel with the design of HIR-next.</p>",
        "id": 182774116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647690
    },
    {
        "content": "<p>OK, 5 minutes remaining. I have a relatively hard stop today.</p>",
        "id": 182774152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647709
    },
    {
        "content": "<p>It seems like we're not at a <em>consensus</em> one way or the other, but maybe we can at least summarize the state of things we talked about?</p>",
        "id": 182774174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647730
    },
    {
        "content": "<p>I'm going to try to drop some notes in <a href=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg?both\" target=\"_blank\" title=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg?both\">the hackmd</a></p>",
        "id": 182774198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647752
    },
    {
        "content": "<blockquote>\n<p>but I welcome counter arguments</p>\n</blockquote>\n<p>but I think this would be a good thing to hear about</p>",
        "id": 182774229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647763
    },
    {
        "content": "<p>I guess I can go back to the HIR owner/root stuff and try to come up with an informed plan</p>",
        "id": 182774261,
        "sender_full_name": "eddyb",
        "timestamp": 1575647771
    },
    {
        "content": "<p>for what the HIR's coarse-grained hierarchy <em>could</em> look like</p>",
        "id": 182774286,
        "sender_full_name": "eddyb",
        "timestamp": 1575647791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I'd love for you and <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> to resolve your debate about what interned DefId means</p>",
        "id": 182774300,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647801
    },
    {
        "content": "<p>including the map and all the tables</p>",
        "id": 182774310,
        "sender_full_name": "eddyb",
        "timestamp": 1575647809
    },
    {
        "content": "<p>not necessarily in this topic</p>",
        "id": 182774311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647809
    },
    {
        "content": "<p>maybe <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> can chime in on that too</p>",
        "id": 182774473,
        "sender_full_name": "eddyb",
        "timestamp": 1575647910
    },
    {
        "content": "<p>Okay well I have a hard out today too</p>",
        "id": 182774551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647969
    },
    {
        "content": "<p>the only problem with the current setup vs &amp;'tcx interning is ordering dependence (e.g. if you were to skip some work via incremental) but if you use an index (i.e. the same as today but perhaps allocated in a different place) you still have that</p>",
        "id": 182774555,
        "sender_full_name": "eddyb",
        "timestamp": 1575647974
    },
    {
        "content": "<p>and it seems like we've sort of hit the edge of the discussion for this meeting</p>",
        "id": 182774572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575647986
    },
    {
        "content": "<p>here is my summary :</p>",
        "id": 182774578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647990
    },
    {
        "content": "<ul>\n<li>\n<p>Vague summary of what was said<br>\n    * The HIR part of this design alone is complex and might be worth pursuing<br>\n        * there was a \"vague sketch\" of the design<br>\n    * There are concerns that the PRs take us off in a direction without knowing the desired goal<br>\n        * danger of increased tech debt<br>\n        * they introduce more special cases to the query system, not less<br>\n    * A counter note is that if you want to quickly move to a true end-to-end query state, the PR series is quite likely what that looks like<br>\n        * i.e., we've discussed from time to time getting to end-to-end queries by \"just\" moving each pass into a query, and this is somewhat lke that<br>\n    * An alternative proposal would be to<br>\n        * close the PRs<br>\n        * encourage creation of a WG to work out a design for HIR, HIR-ID and the like and bring that design forward<br>\n        * land new PRs working in that direction<br>\n        * this overlaps heavily with rust-analyzer and could even take place in that context</p>\n</li>\n<li>\n<p>Some specific questions that arose and didn't seem to get fully fleshed out<br>\n    * DefId, interning, and \"queries depending on queries\"<br>\n        * what does it mean and how can we solve it:)</p>\n</li>\n</ul>",
        "id": 182774581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575647991
    },
    {
        "content": "<p>uh, zulip sucks at bullet lists :( :( :(</p>",
        "id": 182774591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575648000
    },
    {
        "content": "<p>better to read <a href=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg?both\" target=\"_blank\" title=\"https://hackmd.io/I7n9gRo5S0WtapTiIHviJg?both\">the hackmd</a> I guess</p>",
        "id": 182774669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575648017
    },
    {
        "content": "<h1>Heading</h1>\n<ul>\n<li>bullet</li>\n<li>bullet</li>\n</ul>\n<h1>Heading</h1>\n<ul>\n<li>bullet</li>\n<li>bullet</li>\n</ul>",
        "id": 182774680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575648029
    },
    {
        "content": "<p>but though I tried to be \"inclusive\" that is obviously colored by my understading and viewpoint</p>",
        "id": 182774681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575648033
    },
    {
        "content": "<p>Zulip just corrupted its own rendering.... how is this app so bad</p>",
        "id": 182774702,
        "sender_full_name": "eddyb",
        "timestamp": 1575648055
    },
    {
        "content": "<p>so please feel free to add things I missed or point out \"biased\" language</p>",
        "id": 182774708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575648059
    },
    {
        "content": "<blockquote>\n<p>uh, zulip sucks at bullet lists :( :( :(</p>\n</blockquote>\n<p>what's most annoying is that it used to handle them well :(</p>",
        "id": 182774730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575648073
    },
    {
        "content": "<p>(who needs tree structured data!?!)</p>",
        "id": 182774745,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575648087
    },
    {
        "content": "<blockquote>\n<p>Zulip just corrupted its own rendering.... how is this app so bad</p>\n</blockquote>\n<p>how dare you talk ill of Zulip. Join us, the kool-aid is delicious.</p>",
        "id": 182774867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575648135
    },
    {
        "content": "<p>okay thanks for attending everyone!</p>",
        "id": 182774877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1575648141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> btw remember my \"def layer\" diagrams? I might need to finally write up that proposal now :P</p>",
        "id": 182774892,
        "sender_full_name": "eddyb",
        "timestamp": 1575648161
    },
    {
        "content": "<p>Yes, thanks all <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>, this was (I think) productive, though I don't think we reached a final point -- I guess we can decide if we want to have a follow-up meeting and on what exact topic.</p>",
        "id": 182774925,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1575648185
    },
    {
        "content": "<p>but we can start with the \"HIR owners\" we have today and go from there</p>",
        "id": 182774933,
        "sender_full_name": "eddyb",
        "timestamp": 1575648192
    },
    {
        "content": "<p>/me leaves at 3% battery</p>",
        "id": 182774986,
        "sender_full_name": "eddyb",
        "timestamp": 1575648231
    }
]