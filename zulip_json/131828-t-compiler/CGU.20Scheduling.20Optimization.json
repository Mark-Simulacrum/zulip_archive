[
    {
        "content": "<p>Hey everyone I posted this <a href=\"https://github.com/rust-lang/rust/issues/89281\">issue</a>, I am hoping that people can leave their thoughts, questions, feedback, etc. </p>\n<p>The issue provides most of the description, so I'll keep it short: There is a general solution we can use to further optimize CGU scheduling, but there are other relevant issues that need to be addressed before that can happen. I am quite green in general, so if I got something wrong or missed something please point it out so I can add it. Thanks!</p>",
        "id": 254953399,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1632682730
    },
    {
        "content": "<p>This looks pretty good. I think before we invest significantly in changes to algorithms etc, it'd be good to figure out a way to track the metrics we're aiming to optimize in <a href=\"http://perf.rust-lang.org\">perf.rust-lang.org</a>.</p>\n<p>I think, for example, we should:</p>\n<ul>\n<li>Encode CGU ids into the self-profile metadata so that perf can associate those with the <a href=\"https://perf.rust-lang.org/perf/processed-self-profile?commit=ac8dd1b2f24dc62c962172b27433106b4e84dc62&amp;base_commit=d5cd3205fd6c0817fd46c036d0f3194b7deaca93&amp;benchmark=coercions-opt&amp;run_name=full&amp;type=codegen-schedule\">codegen schedules</a> and track other related metrics on a per-CGU basis</li>\n<li>Encode the estimated size of each CGU into self profile (or otherwise emit it), so that we can report on how well we're doing across the perf.r-l.o metrics (e.g., is it a good estimator compared to time taken to codegen that module? Time taken to optimize that module?)<ul>\n<li>I think there's also a scheduling \"size\" based on the <em>time</em> it takes for codegen, which may be good to include similarly here.</li>\n</ul>\n</li>\n<li>CGU merging display (e.g., as a graph or something) on perf.r-l.o -- at the very least, we should know whether the \"big\" CGUs are big because of merging or because they started out so.</li>\n</ul>\n<p>I don't think this necessarily blocks algorithmic improvements, but I worry that without the above at least partially done we'll be a little bit walking in a forest without a map :)</p>",
        "id": 254954959,
        "sender_full_name": "simulacrum",
        "timestamp": 1632684100
    },
    {
        "content": "<p>This is exactly the kind of response I was hoping for. I'm guessing the self-profile metadata will contain a map of CGU's to CGU ID's and per-CGU metrics can be tracked using those ID's. Do you have any suggestions/advice for tackling this or should it be pretty straightforward? I am unfamiliar with self-profile.</p>",
        "id": 254959197,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1632687797
    }
]