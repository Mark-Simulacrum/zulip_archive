[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> what I was saying in the call was that I feel like, from the impl POV, I'd feel better if we had a \"plan\" for how we were going to maintain the feature and fix the bugs. I'm a bit nervous about stabilizing and then having to scramble to fix bugs that are now exposed to stable code</p>",
        "id": 159172639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550855324
    },
    {
        "content": "<p>It seems to me like this was a big hole in our planning at the all hands, in that this is a major feature effort that you've been carrying solo and sort of flew under my radar :(</p>",
        "id": 159172684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550855346
    },
    {
        "content": "<p>(Which is to your credit that I've not had to notice it very much -- well you + <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>, since it's mostly desugaring to generators)</p>",
        "id": 159172707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550855369
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"203289\">@boats</span>)</p>",
        "id": 159173258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550855732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Is there a \"plan\" similar to what you have in mind that we've had for previous features?</p>",
        "id": 159176570,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550858296
    },
    {
        "content": "<p>(asking because I think it'd be helpful for getting an idea of what sort of thing you have in mind)</p>",
        "id": 159177483,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550858966
    },
    {
        "content": "<p>IMO previously it has felt more comfortable because the person who implemented the feature probably wouldn't have had as high of latency in fixing bugs as I have at the moment...</p>",
        "id": 159177595,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550859029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> Not necessarily. I don't really mean a \"plan\" as a written document per se, mostly that we feel like we know how we plan to address the outstanding bugs and feel comfortable about it.</p>",
        "id": 159177644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859067
    },
    {
        "content": "<p>But also we've traditionally been not very good at this</p>",
        "id": 159177657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859079
    },
    {
        "content": "<p>We said during the triage that there were kind of two categories of bugs: those where we sort of have no idea what is going on, and those where we have a vague plan to fix</p>",
        "id": 159177744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859149
    },
    {
        "content": "<p>Particularly around the lifetime issues it seems like that plan is maybe a bit too vague</p>",
        "id": 159177773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859179
    },
    {
        "content": "<p>I guess it'd be good to dig into those issues that are a bit unknown and see if we can diagnose some of their causes</p>",
        "id": 159177807,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859206
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah, the biggest thing that worries me about the lifetimes issue is that the only plan I have that starts looking like a \"correct\" implementation would basically re-implement lifetime elision during lowering</p>",
        "id": 159177890,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550859255
    },
    {
        "content": "<p>OK. I'm trying to decide a bit what to do with myself this afternoon. Feeling kind of drained from a long week. Maybe I'll dig into some of those bugs a bit, particularly the weird ICE-y ones</p>",
        "id": 159178075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859402
    },
    {
        "content": "<p>and/or put a bit of thought into this</p>",
        "id": 159178086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859409
    },
    {
        "content": "<p>One thing that is a bit unknown for me: do we think maybe we want to try to make a more \"native\" implementation?</p>",
        "id": 159178119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550859441
    },
    {
        "content": "<p>I'm not 100% sure what that means, but I feel like it's been tossed about a few times</p>",
        "id": 159178972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550860030
    },
    {
        "content": "<p>Is it just a matter of error messages?</p>",
        "id": 159178985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550860040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> maybe we should make an async-await stream..?</p>",
        "id": 159179005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550860062
    },
    {
        "content": "<p>I'm not sure I know what a more \"native\" implementation would look like</p>",
        "id": 159180553,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550861113
    },
    {
        "content": "<p>\"Native\" to me sounds like \"touches more parts of the compiler after lowering\"</p>",
        "id": 159180577,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550861131
    },
    {
        "content": "<p>I'm also not sure. I feel like the current, generator-based lowering feels a lot like what we want -- the main thing is probably the <strong>macro</strong> that expands to <code>yield</code> being a problem</p>",
        "id": 159181078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550861426
    },
    {
        "content": "<p>i.e., if we had a keyword, we could leave some span hints and things so that we know to customize error messages</p>",
        "id": 159181089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550861436
    },
    {
        "content": "<p>I guess one case might have to do with the error message around the return type hints and so forth, but I feel like we can still thread that info through by lowering in careful ways, or other small tweaks</p>",
        "id": 159181128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550861469
    },
    {
        "content": "<p>as an aside, I'm thinking we should make a stream for async-await, at minimum, and I'd actually like to try and do a \"real\" working group -- meaning basically that we establish a meeting time, and try to start drawing up a plan for the remaining issues etc, and kind of reach out to some people to help.</p>\n<p>Given the state of the impl, maybe we don't want to reach out to totally new hackers, but I bet some \"journeypeople\" like <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, or others might be interested.</p>",
        "id": 159181256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550861547
    },
    {
        "content": "<p>I'm not really clear on what process we should/would use for \"new working groups\" =) but I feel like this is obviously something that we as a project are trying to ship so it makes sense.</p>",
        "id": 159181290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550861591
    },
    {
        "content": "<p>Let me just rope in <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span> I guess -- I'm discussing here that I think we want to have an \"async-await working group\", focused on the work needed to ship the <code>async fn</code> feature. This work has heretofore been done primarily by <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> but it feels like a clear objective, one that we just kind of overlooked in the list. </p>\n<p>Seeing as we're still in this primordial phase, I don't have a clear picture on how to \"request\" to start a WG -- is there any objection to me \"creating\" the WG (i.e., making a template, making a Zulip stream, etc)?</p>",
        "id": 159181408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550861682
    },
    {
        "content": "<p>Re: diagnostics, the await macro could be turned into an intrinsic which would buy you as much control as having the stabilized keyword.</p>",
        "id": 159183673,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1550863477
    },
    {
        "content": "<p>It'd be a good idea to do so regardless because the only thing that would have to change once the syntax dust settles would be the parser.</p>",
        "id": 159183720,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1550863517
    },
    {
        "content": "<p>I also think that the issues around <code>yield</code> will disappear quickly when we decide on an <code>await</code>-keyword-based syntax and implement it, and I think the desugaring to <code>yield</code> should be relatively easy to hide from the user</p>",
        "id": 159188378,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550867453
    },
    {
        "content": "<p>just as the desugaring of <code>?</code> to a <code>match</code> is fairly transparent</p>",
        "id": 159188405,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550867470
    },
    {
        "content": "<p>right</p>",
        "id": 159188454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550867519
    },
    {
        "content": "<p>I'm much more concerned about the implementation and diagnostics around the lifetime issues</p>",
        "id": 159188782,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1550867763
    },
    {
        "content": "<p>OK, so nobody raised any <em>objections</em></p>",
        "id": 159360918,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551120243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> shall we schedule some time to develop an async-await impl problem roadmap? I would like to kind of place the bugs that we found in that triage in an order and maybe dig into the them .. I imagine the lifetime limitations are sort of top priority, so we could probably do the \"Pre-triage\" here in Zulip and use a call to really dig into the details?</p>",
        "id": 159361015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551120306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> sure, I'd be happy to meet again to talk through the impl schedule</p>",
        "id": 159362992,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1551121632
    },
    {
        "content": "<p>Although I think I'd actually put the drop-order-of-arguments stuff above the lifetime issues in terms of priority</p>",
        "id": 159363018,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1551121659
    },
    {
        "content": "<p>since that's a more serious backcompat hazard, I think</p>",
        "id": 159363025,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1551121665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> indeed, though it seems .. well, I guess there's probably some impl questions there, in terms of how to achieve whatever it is that we want, but I'd like to first know what we think we want</p>",
        "id": 159368076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551125493
    },
    {
        "content": "<p>I have a meta question on that point actually</p>",
        "id": 159368093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551125511
    },
    {
        "content": "<p>can you think of <code>async fn</code> in terms of a desugaring to async blocks?</p>",
        "id": 159368103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551125519
    },
    {
        "content": "<p>(In general, my <em>personal</em> preference for these sorts of questions is to establish a definite desugaring, and try to answer questions of the semantics in terms of that desugaring)</p>",
        "id": 159368181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551125552
    },
    {
        "content": "<p>OK, I created a calendar event for an investigation of various issues tomorrow. We should probably decide which ones to dig into =)</p>",
        "id": 159376443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551132009
    }
]