[
    {
        "content": "<p>I'm thinking of trying to build a tool that helps keep docs up to date. Library docs are relatively easy to keep up to date since they are inline rustdocs. Compiler API docs can also be done inline. But there are things like the rustc-dev-guide and forge that are <em>not</em> inline -- also the unstable book, rustdoc book, etc.</p>",
        "id": 214121191,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603318123
    },
    {
        "content": "<p>For now I think we have two main ways of doing this: MCPs and linkchecking API docs</p>",
        "id": 214121287,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603318179
    },
    {
        "content": "<p>My idea is that we have each piece of documentation have a special HTML comment like <code>&lt;!-- doc-for: &lt;some-feature-name&gt; --&gt;</code> in each of those places. Then a tool can go through all the know doc places (<code>src/doc</code>, <code>rustc-dev-guide</code>, <code>forge</code>) and print out the locations that may need updating</p>",
        "id": 214121297,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603318187
    },
    {
        "content": "<p>E.g. this would prevent the need for follow-up PRs like this one: <a href=\"https://github.com/rust-lang/rust/issues/77295\">#77295</a></p>",
        "id": 214121577,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603318333
    },
    {
        "content": "<p>I at least wanted to float the idea :)</p>",
        "id": 214121624,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603318376
    },
    {
        "content": "<p>Let's cc <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span></p>",
        "id": 214121790,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603318487
    },
    {
        "content": "<p>(let me finish up my mess in <a href=\"#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/check-in/near/214119844\">https://rust-lang.zulipchat.com/#narrow/stream/196385-t-compiler.2Fwg-rustc-dev-guide/topic/check-in/near/214119844</a> first)</p>",
        "id": 214121840,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603318524
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/131828-t-compiler/topic/tool.20to.20keep.20docs.20up.20to.20date/near/214121297\">said</a>:</p>\n<blockquote>\n<p>My idea is that we have each piece of documentation have a special HTML comment like <code>&lt;!-- doc-for: &lt;some-feature-name&gt; --&gt;</code> in each of those places. Then a tool can go through all the know doc places (<code>src/doc</code>, <code>rustc-dev-guide</code>, <code>forge</code>) and print out the locations that may need updating</p>\n</blockquote>\n<p>hmm ... how would you keep the <code>doc-for</code> comment itself in sync with the dev-guide?</p>",
        "id": 214123236,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603319474
    },
    {
        "content": "<p>you'd need everyone making changes to know about it and know to update it</p>",
        "id": 214123333,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603319534
    },
    {
        "content": "<p>I guess my main hesitation is I want to avoid at all costs forcing you to clone rust-lang/rust to update the dev guide</p>",
        "id": 214123355,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603319564
    },
    {
        "content": "<p>the build process for rust is bad enough without it spilling over to the docs</p>",
        "id": 214123385,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603319583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/tool.20to.20keep.20docs.20up.20to.20date/near/214123355\">said</a>:</p>\n<blockquote>\n<p>I guess my main hesitation is I want to avoid at all costs forcing you to clone rust-lang/rust to update the dev guide</p>\n</blockquote>\n<p>I think that was already out of the question :D<br>\nAs I understand <span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span>'s idea, every time a PR gets merged, a bot can suggest to update the documentation</p>",
        "id": 214123731,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603319815
    },
    {
        "content": "<p>Yes, that's one possible implementation.</p>",
        "id": 214124411,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603320318
    },
    {
        "content": "<p>Here's an example of how it would look for <code>asm!</code>:</p>\n<ul>\n<li>unstable book has an HTML comment in the section on <code>asm!</code> that looks like: <code>&lt;!-- doc-for: inline_asm --&gt;</code></li>\n<li>compiler code has the comment <code>// doc-item: inline_asm</code> for every place there is <code>asm!</code> code</li>\n</ul>",
        "id": 214124571,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603320478
    },
    {
        "content": "<p>Probably would be too much work, but maybe there's something smaller we can do</p>",
        "id": 214124617,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603320491
    },
    {
        "content": "<p>rustdoc does this just with review, 'new lints require you to update <code>src/doc/rustdoc</code>'</p>",
        "id": 214125145,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603320892
    },
    {
        "content": "<p>probably could make that a tidy lint</p>",
        "id": 214125155,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603320897
    },
    {
        "content": "<p>it's harder for the dev-guide because it's in a different repo</p>",
        "id": 214125169,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603320907
    },
    {
        "content": "<p>I think we should start by doing this for things in-tree, like the unstable-book, and then if it works well we can think of a way to make it work across repos</p>",
        "id": 214125199,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603320930
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/tool.20to.20keep.20docs.20up.20to.20date/near/214125145\">said</a>:</p>\n<blockquote>\n<p>rustdoc does this just with review, 'new lints require you to update <code>src/doc/rustdoc</code>'</p>\n</blockquote>\n<p>Hm, could you link to an example?</p>",
        "id": 214125478,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603321134
    },
    {
        "content": "<p>That also doesn't catch things like my intra-doc link generics PR</p>",
        "id": 214125507,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603321158
    },
    {
        "content": "<p>sure</p>",
        "id": 214125620,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321208
    },
    {
        "content": "<p>I don't think we can catch the <em>general</em> case of 'something in the compiler has a user-visible impact'</p>",
        "id": 214125629,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321221
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/77856\">https://github.com/rust-lang/rust/pull/77856</a></p>",
        "id": 214125668,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321259
    },
    {
        "content": "<p>What I'm suggesting is less \"check to make sure someone updated the docs\" and more \"give someone the ability to see all the places this is documented\"</p>",
        "id": 214125676,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603321265
    },
    {
        "content": "<p>well, those are basically the same - the only difference is whether 'look at the places this is documented' is automated or done by the author</p>",
        "id": 214125713,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321315
    },
    {
        "content": "<p>but figuring out where it's documented in the first place seems like the hard part</p>",
        "id": 214125758,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/tool.20to.20keep.20docs.20up.20to.20date/near/214125668\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/77856\">https://github.com/rust-lang/rust/pull/77856</a></p>\n</blockquote>\n<p>Huh, where is the automated check?</p>",
        "id": 214125802,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603321377
    },
    {
        "content": "<p>there is no automated check, that's what I meant by 'with review'</p>",
        "id": 214125819,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321397
    },
    {
        "content": "<p>but it could be automated I think, the check is 'new file added to <code>src/librustdoc/passes</code> without updating <code>src/doc/librustdoc</code>'</p>",
        "id": 214125849,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321433
    },
    {
        "content": "<p>obviously not that simple for other parts of the compiler</p>",
        "id": 214125903,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321452
    },
    {
        "content": "<p>Well, for unstable features it might be almost that simple: 'new feature gates added not in unstable-book'</p>",
        "id": 214126237,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321734
    },
    {
        "content": "<p>I think we should nibble at this a little at a time instead of trying to get a fully general solution, because the fully-general solution isn't possible without you specifying the dependencies yourself and I really hate that in build systems</p>",
        "id": 214126346,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603321832
    },
    {
        "content": "<p>Sounds like a plan!</p>",
        "id": 214127399,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603322935
    },
    {
        "content": "<p>I'll open an issue</p>",
        "id": 214127641,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603323131
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/78211\">#78211</a></p>",
        "id": 214129852,
        "sender_full_name": "Noah Lev",
        "timestamp": 1603324972
    },
    {
        "content": "<p>I think dev-guide and co need to be migrated from a submodule to a subtree first of all.</p>",
        "id": 214162059,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1603358583
    },
    {
        "content": "<p>Right now I never bother to update dev-guide when making compiler changes because it lives in a separate repo.</p>",
        "id": 214162105,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1603358616
    },
    {
        "content": "<p>Are the fixes to <code>git subtree</code> still stuck in limbo? :/</p>",
        "id": 214179452,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603369828
    },
    {
        "content": "<p>There have been a several review comments.</p>",
        "id": 214179695,
        "sender_full_name": "bjorn3",
        "timestamp": 1603369953
    }
]