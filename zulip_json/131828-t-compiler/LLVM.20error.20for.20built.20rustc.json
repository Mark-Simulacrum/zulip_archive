[
    {
        "content": "<p>I'm building a custom rustc with support for x86_64-unknown-none. No code changes other than config.toml. currently to build crates for this target I need to use -Z build-std. I have a crate that builds fine with <code>cargo build -Z build-std --target x86_64-unknown-none</code>, but with my custom rustc the command <code>cargo +stage1 build --target x86_64-unknown-none</code> fails with the following error: <code>rustc: /home/ben/code/rust/src/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:796: virtual void {anonymous}::X86AsmBackend::applyFixup(const llvm::MCAssembler&amp;, const llvm::MCFixup&amp;, const llvm::MCValue&amp;, llvm::MutableArrayRef&lt;char&gt;, uint64_t, bool, const llvm::MCSubtargetInfo*) const: Assertion </code>(Size == 0 || isIntN(Size * 8 + 1, SignedValue)) &amp;&amp; \"Value does not fit in the Fixup field\"' failed.` Any suggestions as to where to begin looking to fix this?</p>",
        "id": 277437020,
        "sender_full_name": "bstrie",
        "timestamp": 1648827644
    },
    {
        "content": "<p>should I just, uh, turn off assertions and try compiling again? :P</p>",
        "id": 277437300,
        "sender_full_name": "bstrie",
        "timestamp": 1648827763
    },
    {
        "content": "<p>Run cargo with <code>-v</code>, rerun the crashing rustc command with <code>-C save-temps</code>. Loops through the saved <code>.bc</code> files and pass them to <code>llc</code> from LLVM (possibly with <code>-filetype=obj</code>, given this is an MC assert). Though if you open an issue with attached bitcode someone else can probably figure this out.</p>",
        "id": 277478894,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1648847930
    }
]