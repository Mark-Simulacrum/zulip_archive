[
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> so, about what we layed out in the <a href=\"https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?edit\" target=\"_blank\" title=\"https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?edit\">Hackmd document</a></p>",
        "id": 179073688,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026258
    },
    {
        "content": "<p>in particular</p>",
        "id": 179073694,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026266
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    - make sure this is easy to override with cargo +stage1 bisect-rustc\n</pre></div>",
        "id": 179073697,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026272
    },
    {
        "content": "<p>unsure what you exactly meant, but my patch if you do that would use stage1 as the default nightly</p>",
        "id": 179073784,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026315
    },
    {
        "content": "<p>I guess that's what you were proposing</p>",
        "id": 179073785,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026322
    },
    {
        "content": "<p>yep, that's what I expected</p>",
        "id": 179073788,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026325
    },
    {
        "content": "<p>and about ...</p>",
        "id": 179073792,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026326
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    - print nice error message for beta/stable as default, see task below\n</pre></div>",
        "id": 179073798,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026330
    },
    {
        "content": "<p>unsure what's that exactly</p>",
        "id": 179073804,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026333
    },
    {
        "content": "<p>(though I think stage1 was a bad example, I guess, since stage 1 is usually an unpublished build that we can't do much with)</p>",
        "id": 179073824,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026349
    },
    {
        "content": "<p>yeah, but I got what you meant, it may have been <code>cargo +nightly-2019-08-01</code> or something like that</p>",
        "id": 179073871,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026393
    },
    {
        "content": "<p>yep</p>",
        "id": 179073934,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026405
    },
    {
        "content": "<p>ok</p>",
        "id": 179073961,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026421
    },
    {
        "content": "<p>for     - print nice error message for beta/stable as default, see task below</p>\n<p>I meant that <code>cargo +stable bisect-rustc</code> (or just stable being the default in the environment) should for now just say \"test with nightly first please; then run cargo +nightly bisect-rustc\"</p>",
        "id": 179073992,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026444
    },
    {
        "content": "<p>ahh ok ok</p>",
        "id": 179074009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026460
    },
    {
        "content": "<p>do we have a nice way to differenciate that over someone just having stable as their default toolchain?</p>",
        "id": 179074047,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026487
    },
    {
        "content": "<p>my current code won't differenciate both but I'm not sure if there's a way in which we can</p>",
        "id": 179074067,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026506
    },
    {
        "content": "<p>no, nor do I think we should really</p>",
        "id": 179074069,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026508
    },
    {
        "content": "<p>basically if the default toolchain is beta or stable it just ignores that and goes to a nightly</p>",
        "id": 179074125,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026530
    },
    {
        "content": "<p>I think that + maybe some cool messages are the best we can do</p>",
        "id": 179074166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026571
    },
    {
        "content": "<p>like <code>your default toolchain is stable/beta using latest nightly instead</code> or something like that</p>",
        "id": 179074214,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026606
    },
    {
        "content": "<p>sure, that works</p>",
        "id": 179074444,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026744
    },
    {
        "content": "<p>I was suggesting to just not even try that hard</p>",
        "id": 179074452,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026752
    },
    {
        "content": "<p>and last question  ...</p>",
        "id": 179074453,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026752
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Find a starting point going geometrically (2x each time, with jump of at most 1 month) backwards\n  [today; 2 days ago; 4 days ago; 8 days ago; 16 days ago; 1 month ago; 2 months ago]\n</pre></div>",
        "id": 179074524,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026777
    },
    {
        "content": "<p>how this differs with what we are doing today?</p>",
        "id": 179074540,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026787
    },
    {
        "content": "<p>it might not</p>",
        "id": 179074546,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026792
    },
    {
        "content": "<p>yeah, I was guessing that you wanted my stuff to play nicely with it :)</p>",
        "id": 179074555,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026806
    },
    {
        "content": "<p>we also might want to change the max jump to e.g. a week or so</p>",
        "id": 179074556,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026807
    },
    {
        "content": "<p>and it does</p>",
        "id": 179074562,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026809
    },
    {
        "content": "<p>yeah, the max jump is really a thing</p>",
        "id": 179074578,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026824
    },
    {
        "content": "<p>to avoid cases like the one we discussed yesterday</p>",
        "id": 179074601,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026838
    },
    {
        "content": "<p>I think a week is good enough</p>",
        "id": 179074610,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026845
    },
    {
        "content": "<p>maybe an algorithm like ...</p>",
        "id": 179074622,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026854
    },
    {
        "content": "<p>ideally we'd not need to -- maybe via some of the finer-grained checks we were talking about -- but a week seems fine too.</p>",
        "id": 179074630,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026860
    },
    {
        "content": "<p>1 day, 2 days, 3 days, ... 7 days, 2 weeks, 3 weeks, ...</p>",
        "id": 179074700,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026890
    },
    {
        "content": "<p>if we are aiming to find a regression tipically between two stables we shouldn't jump really long I think</p>",
        "id": 179074737,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026920
    },
    {
        "content": "<p>I mean, the tool is general purpose of course, but seems like the most frequent use case would be that one, right?</p>",
        "id": 179074771,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026951
    },
    {
        "content": "<p>maybe even something like</p>",
        "id": 179074780,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026965
    },
    {
        "content": "<p>yeah it seem reasonable to not be too aggressive</p>",
        "id": 179074790,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026974
    },
    {
        "content": "<p>1 day, 2 days, 3 days, ... 7 days, 2 weeks, 3 weeks, ... 7 weeks, 9 weeks, 11 weeks, something like that</p>",
        "id": 179074801,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026987
    },
    {
        "content": "<p>I largely think we should just try things and sort of \"see what sticks\"</p>",
        "id": 179074808,
        "sender_full_name": "simulacrum",
        "timestamp": 1572026993
    },
    {
        "content": "<p>so each 7 repetitions we can * 2 the thing</p>",
        "id": 179074810,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572026995
    },
    {
        "content": "<blockquote>\n<p>I largely think we should just try things and sort of \"see what sticks\"</p>\n</blockquote>\n<p>agreed</p>",
        "id": 179074869,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027010
    },
    {
        "content": "<p>I'd maybe not go day-by-day for the first 7, at least 2 day increments seems good</p>",
        "id": 179074878,
        "sender_full_name": "simulacrum",
        "timestamp": 1572027016
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 179074932,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027062
    },
    {
        "content": "<p>another thing related to that is that you were looking for a starting good release</p>",
        "id": 179074965,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027081
    },
    {
        "content": "<p>I was wondering, why was that</p>",
        "id": 179074980,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027094
    },
    {
        "content": "<p>well with the jumps you were doing I think it makes sense</p>",
        "id": 179075076,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027142
    },
    {
        "content": "<p>but if we were to jump short we could just start with non working and keep finding non working until we see a working one</p>",
        "id": 179075095,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027163
    },
    {
        "content": "<p>hm, yeah, that might work</p>",
        "id": 179075551,
        "sender_full_name": "simulacrum",
        "timestamp": 1572027460
    },
    {
        "content": "<p>not quite bisection but that seems fine yeah</p>",
        "id": 179075571,
        "sender_full_name": "simulacrum",
        "timestamp": 1572027474
    },
    {
        "content": "<p>to be clear I have not put all that much thought into this</p>",
        "id": 179075598,
        "sender_full_name": "simulacrum",
        "timestamp": 1572027482
    },
    {
        "content": "<p>yeah, won't really be bisection or would be bisection between 2 weeks and between commits then</p>",
        "id": 179075634,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027497
    },
    {
        "content": "<p>the problem is that the tool would bisect when you give two points</p>",
        "id": 179075662,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027522
    },
    {
        "content": "<p>if there are not two points there is not much we can do rather than jumping in some way or another</p>",
        "id": 179075710,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027554
    },
    {
        "content": "<p>indeed</p>",
        "id": 179076354,
        "sender_full_name": "simulacrum",
        "timestamp": 1572028007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I was mentioning <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that the changes we have discussed are more or less ready</p>",
        "id": 179237650,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274163
    },
    {
        "content": "<p>according to <a href=\"https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?view\" target=\"_blank\" title=\"https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?view\">https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?view</a> the pending things would be to release and to integrate with bots (triagebot?)</p>",
        "id": 179237688,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274195
    },
    {
        "content": "<p>the question is how exactly to integrate with bots</p>",
        "id": 179237747,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274212
    },
    {
        "content": "<p>my guess is <code>@triagebot cargo-bisect-rustc https://github.com/spastorino/my-regressed-app</code></p>",
        "id": 179237786,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274245
    },
    {
        "content": "<p>That seems pretty hard, like, nowhere near MVP level</p>",
        "id": 179237806,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274259
    },
    {
        "content": "<p>and that could even take the same arguments the tool takes, like start and end</p>",
        "id": 179237812,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274262
    },
    {
        "content": "<blockquote>\n<p>That seems pretty hard, like, nowhere near MVP level</p>\n</blockquote>\n<p>really?</p>",
        "id": 179237831,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274274
    },
    {
        "content": "<p>I'd have guessed that was a simple thing to do</p>",
        "id": 179237839,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274282
    },
    {
        "content": "<p>Sure -- the bot needs to run arbitrary rust code, etc</p>",
        "id": 179237844,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274285
    },
    {
        "content": "<p>we do have some sandboxing for this -- e.g. rustwide -- but it's not really trivial</p>",
        "id": 179237858,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274298
    },
    {
        "content": "<p>you'd need to switch cargo-bisect-rustc to run the build inside rustwide</p>",
        "id": 179237859,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1572274300
    },
    {
        "content": "<p>and we'd probably need to upgrade the instance</p>",
        "id": 179237889,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1572274320
    },
    {
        "content": "<p>why arbitrary?, if the bot has installed the bisect tool isn't that enough?</p>",
        "id": 179237891,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274320
    },
    {
        "content": "<p>well you meant because of the tests of the app?</p>",
        "id": 179237942,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274332
    },
    {
        "content": "<p>to bisect you need to build which means build scripts etc</p>",
        "id": 179237943,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274332
    },
    {
        "content": "<p>yeah but I'm not executing random code from a git repo without a sandbox</p>",
        "id": 179237955,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1572274345
    },
    {
        "content": "<p>(Build scripts, proc macros) are arbitrary rust code</p>",
        "id": 179237962,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274348
    },
    {
        "content": "<p>yeah it makes sense</p>",
        "id": 179238027,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274403
    },
    {
        "content": "<p>in any case I think bots would be nice but ultimately running it is not -- ideally -- hard to do locally</p>",
        "id": 179238055,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274433
    },
    {
        "content": "<p>So I'd rather see us say \"hey, person who filed issue, can you run this tool?\"</p>",
        "id": 179238110,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274451
    },
    {
        "content": "<p>and/or we can do it ourselves (similar to icebreakers)</p>",
        "id": 179238132,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274468
    },
    {
        "content": "<p>yeah, people can just do <code>cargo install bisect-rustc; cargo-bisect-rustc</code></p>",
        "id": 179238153,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274486
    },
    {
        "content": "<p>maybe we can have the output of the tool be something like a github issue report that people can paste on github quickly</p>",
        "id": 179238182,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274505
    },
    {
        "content": "<p>yeah I think we talked about a \"markdown\" report</p>",
        "id": 179238229,
        "sender_full_name": "simulacrum",
        "timestamp": 1572274555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> would that be enough?</p>",
        "id": 179238290,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572274571
    },
    {
        "content": "<p>+1 from me</p>",
        "id": 179330138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357229
    },
    {
        "content": "<p>I think a tool they can run with a report they can copy-and-paste is awesome</p>",
        "id": 179330144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357237
    },
    {
        "content": "<p>ideas on things that a report can contain?</p>",
        "id": 179331774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358205
    },
    {
        "content": "<p>I guess we could mention in what nightly regressed and in what commit specifically, but if people are going to copy and paste what relevant information for us can we include?</p>",
        "id": 179331833,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358243
    },
    {
        "content": "<p>I guess the report should look contain some place holders to fill, like feel here a url of a sample application that reproduces this or something like that</p>",
        "id": 179331892,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358282
    },
    {
        "content": "<p>hmm:</p>\n<ul>\n<li>commit/nightly that regressed</li>\n<li>the nightly range that was searched</li>\n<li>info about the error itself</li>\n<li>where to find the source</li>\n</ul>",
        "id": 179331926,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358302
    },
    {
        "content": "<p>anyway if we are pointed to a specific commit I guess we can figure out what the error is but still ...</p>",
        "id": 179331934,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358306
    },
    {
        "content": "<p>that's probably enough</p>",
        "id": 179331937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358311
    },
    {
        "content": "<p>yes</p>",
        "id": 179331994,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358326
    },
    {
        "content": "<p>what I meant is ... it's not just copy and paste</p>",
        "id": 179332009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358335
    },
    {
        "content": "<p>we could print something like</p>",
        "id": 179332024,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358344
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>searched between: 2019-10-29 and 2019-08-20\nnightly: 2019-09-21\ncommit: fa12334fa\nerror: &lt;paste of the error here&gt;\nwhere to find the code: &lt;PLEASE GIVE US INSTRUCTIONS ON WHAT YOUR APPLICATION DOES OR A URL TO FETCH&gt;\n</pre></div>",
        "id": 179332268,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that's what I meant, it won't be just a copy and paste text, it would be something that you can mostly copy and paste but you need to edit a bit</p>",
        "id": 179332330,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572358520
    },
    {
        "content": "<p>I could imagine some heuristics - e.g. if we're in a GitHub repo we could look at the origin remote</p>",
        "id": 179337112,
        "sender_full_name": "simulacrum",
        "timestamp": 1572361181
    },
    {
        "content": "<p>yeah</p>",
        "id": 179340049,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572362713
    }
]