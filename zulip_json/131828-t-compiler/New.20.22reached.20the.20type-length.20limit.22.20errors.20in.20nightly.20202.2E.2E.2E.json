[
    {
        "content": "<p>Starting in nightly 2020-08-14, we're getting new \"reached the type-length limit\" errors in our project:<br>\n<a href=\"https://github.com/ZcashFoundation/zebra/issues/923\">https://github.com/ZcashFoundation/zebra/issues/923</a></p>\n<p>It's hard to find the specific types that are causing the issue, because they are abbreviated in rustc's output. But we make heavy use of futures and async code, including tracing. So the issue is probably related to:<br>\n<a href=\"https://github.com/tokio-rs/tracing/issues/616\">https://github.com/tokio-rs/tracing/issues/616</a><br>\n<a href=\"https://github.com/rust-lang/rust/issues/54540\">https://github.com/rust-lang/rust/issues/54540</a></p>\n<p>How do I create a rustc bug?<br>\nHow can I find a minimal test case?<br>\nHow do I find the exact rustc commit responsible?<br>\n(I know it's between nightly 2020-08-13 and nightly 2020-08-14 from rustup.)</p>\n<p>I'm happy to read the relevant guides, if they are available.</p>",
        "id": 207460727,
        "sender_full_name": "teor",
        "timestamp": 1597870609
    },
    {
        "content": "<blockquote>\n<p>How do I find the exact rustc commit responsible?</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/cargo-bisect-rustc/blob/master/TUTORIAL.md\">https://github.com/rust-lang/cargo-bisect-rustc/blob/master/TUTORIAL.md</a></p>",
        "id": 207460794,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597870655
    },
    {
        "content": "<p>if there's an existing rustc bug I wouldn't open a new one, just comment on <a href=\"https://github.com/rust-lang/rust/issues/54540\">https://github.com/rust-lang/rust/issues/54540</a>.</p>",
        "id": 207460907,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597870714
    },
    {
        "content": "<p>helps keep the discussion in one place</p>",
        "id": 207460916,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597870721
    },
    {
        "content": "<p>Our project was using nested instrument proc macro spans from tracing, so we can fix the issue on our end by removing redundant spans.</p>\n<p>I'll update the bug report in rustc after the bisect finishes, because it might be an unintended regression. (And the tracing bug, because they might want to know.)</p>",
        "id": 207469791,
        "sender_full_name": "teor",
        "timestamp": 1597876848
    },
    {
        "content": "<p>The regression was caused by a rustc fix, so I added a comment to that issue: <a href=\"https://github.com/rust-lang/rust/issues/75313#issuecomment-676806992\">https://github.com/rust-lang/rust/issues/75313#issuecomment-676806992</a></p>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> !</p>",
        "id": 207473903,
        "sender_full_name": "teor",
        "timestamp": 1597880076
    },
    {
        "content": "<p>(Oh, and there is an existing minimal test case in <a href=\"https://github.com/tokio-rs/tracing/issues/616\">https://github.com/tokio-rs/tracing/issues/616</a> . rustc used to need 5 layers of recursion to trigger the error, but we're seeing it with 4 layers in recent nightlies.)</p>",
        "id": 207474022,
        "sender_full_name": "teor",
        "timestamp": 1597880181
    },
    {
        "content": "<p>no problem :)</p>",
        "id": 207476891,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597882703
    }
]