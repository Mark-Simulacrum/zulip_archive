[
    {
        "content": "<p>Maybe this is a silly question: Are we supposedly able to support using a 32-bit build of <code>rustc</code> (e.g. <code>build/i686-unknown-linux-gnu/stage1/bin/rustc</code>) to build a 64-bit target (e.g. <code>--target=x86_64-unknown-linux-gnu</code>)</p>",
        "id": 152329353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545397931
    },
    {
        "content": "<p>crossbuilds from any target to any target should work</p>",
        "id": 152329540,
        "sender_full_name": "nagisa",
        "timestamp": 1545398126
    },
    {
        "content": "<p>this may be problematic for tests like <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/huge-enum.rs#L23\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/huge-enum.rs#L23\">huge-enum.rs</a> because of internal API's like <a href=\"https://github.com/rust-lang/rust/blob/6d34ec18c7d7e574553f6347ecf08e1e1c45c13d/src/librustc_target/abi/mod.rs#L714\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/6d34ec18c7d7e574553f6347ecf08e1e1c45c13d/src/librustc_target/abi/mod.rs#L714\">FieldPlacement::count</a></p>",
        "id": 152329544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398130
    },
    {
        "content": "<p>provided memory is sufficient and cross toolchain exists</p>",
        "id": 152329562,
        "sender_full_name": "nagisa",
        "timestamp": 1545398151
    },
    {
        "content": "<p>that is, I'm just playing locally with such a 32-bit build and then seeing the compiler ICE on that test</p>",
        "id": 152329567,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398159
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> thatâ€™s a bug in the compiler</p>",
        "id": 152329619,
        "sender_full_name": "nagisa",
        "timestamp": 1545398179
    },
    {
        "content": "<p>maybe <code>FieldPlacement::count</code> should return <code>u64</code> rather than <code>usize</code> ?</p>",
        "id": 152329621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398180
    },
    {
        "content": "<p>okay</p>",
        "id": 152329623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398182
    },
    {
        "content": "<p>I'll file it. Its obviously not high priority.</p>",
        "id": 152329632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398199
    },
    {
        "content": "<p>yeah, there should be no usizes in the compiler usually, other than to refer to its own indexes and other memory-ey things.</p>",
        "id": 152329638,
        "sender_full_name": "nagisa",
        "timestamp": 1545398204
    },
    {
        "content": "<p>are there CI builds that correspond to this?</p>",
        "id": 152329972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398580
    },
    {
        "content": "<p>my assumption is that there must not be, since this test would have been flagging this problem on any such CI build, right?</p>",
        "id": 152329991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398604
    },
    {
        "content": "<p>to be fair this code is impossible to build one way or the other</p>",
        "id": 152330074,
        "sender_full_name": "nagisa",
        "timestamp": 1545398696
    },
    {
        "content": "<p>because that array is too large to fit into the 32-bit address sapce</p>",
        "id": 152330081,
        "sender_full_name": "nagisa",
        "timestamp": 1545398706
    },
    {
        "content": "<p>it is a compile-fail test, yes</p>",
        "id": 152330088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398716
    },
    {
        "content": "<p>but a i686 compiler should definitely be able to build a x86_64 program which is valid here</p>",
        "id": 152330110,
        "sender_full_name": "nagisa",
        "timestamp": 1545398743
    },
    {
        "content": "<p>but I do wonder if there might be a variant that could get into this same issue...</p>",
        "id": 152330112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398744
    },
    {
        "content": "<p>well other than the fact that the array would probably not fit <del>on the disk</del> (actually it would due to <code>.bss</code>)</p>",
        "id": 152330170,
        "sender_full_name": "nagisa",
        "timestamp": 1545398790
    },
    {
        "content": "<p>or in memory when the program is loaded</p>",
        "id": 152330173,
        "sender_full_name": "nagisa",
        "timestamp": 1545398805
    },
    {
        "content": "<p>might we sometimes call <code>FieldLayout::count</code> with such a count for something that is only constructed at runtime?</p>",
        "id": 152330195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398829
    },
    {
        "content": "<p>(I don't know enough about the overall control flow here)</p>",
        "id": 152330204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398844
    },
    {
        "content": "<p>I dont think so.</p>",
        "id": 152330215,
        "sender_full_name": "nagisa",
        "timestamp": 1545398860
    },
    {
        "content": "<p>hmm yeah the code in <code>FieldPlacement::index_by_increasing_offset</code> seems doomed</p>",
        "id": 152330316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1545398969
    }
]