[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> (cc <span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span>) I'm a bit behind on notifications, I'm seeing the comments about perf impacts from <a href=\"https://github.com/rust-lang/rust/issues/72055\">#72055</a> now -- I'm wondering though, before <a href=\"https://github.com/rust-lang/rust/pull/72494\">https://github.com/rust-lang/rust/pull/72494</a> lands, do we maybe want to backout <a href=\"https://github.com/rust-lang/rust/issues/72055\">#72055</a> and try to re-land it together with the relevant changes from <a href=\"https://github.com/rust-lang/rust/issues/72494\">#72494</a>?</p>",
        "id": 198895825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590588648
    },
    {
        "content": "<p>Hm, <a href=\"https://github.com/rust-lang/rust/issues/72055\">#72055</a> can't be automatically reverted anymore and I don't know how helpful merging these two PRs is.<br>\nWith my current knowledge I am slightly in favor of not backing out <a href=\"https://github.com/rust-lang/rust/issues/72055\">#72055</a>.</p>",
        "id": 198902614,
        "sender_full_name": "lcnr",
        "timestamp": 1590591097
    },
    {
        "content": "<p>Do you have any thoughts <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> about what remaining performance difference there is?</p>",
        "id": 198917389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590597121
    },
    {
        "content": "<p>The main benefit I see to backout-and-merge (which indeed might be painful) is that it would let us profile and get a picture of how to improve the remaining cost, if we can</p>",
        "id": 198917462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590597144
    },
    {
        "content": "<p>on wf stress tests it's probably still ~6%</p>",
        "id": 198918565,
        "sender_full_name": "lcnr",
        "timestamp": 1590597688
    },
    {
        "content": "<p>We may try to once again change <code>Predicate</code> to contain <code>PredicateKind</code> directly and intern <code>Predicate</code>. This may give us a slightly better performance than what we have currently.</p>",
        "id": 198918843,
        "sender_full_name": "lcnr",
        "timestamp": 1590597837
    },
    {
        "content": "<p>I also looked into changing <code>TypeFoldable</code> to operate on <code>Self</code> directly. This is mostly unrelated and we are still pretty far away from that</p>",
        "id": 198919039,
        "sender_full_name": "lcnr",
        "timestamp": 1590597921
    },
    {
        "content": "<p>Or we look into emitting fewer trivial predicates, which is something I would like to do in seperate PRs</p>",
        "id": 198919265,
        "sender_full_name": "lcnr",
        "timestamp": 1590598014
    },
    {
        "content": "<blockquote>\n<p>We may try to once again change Predicate to contain PredicateKind directly and intern Predicate. This may give us a slightly better performance than what we have currently.</p>\n</blockquote>\n<p>is the only option I can think of for which a backout is beneficial</p>",
        "id": 198919505,
        "sender_full_name": "lcnr",
        "timestamp": 1590598121
    },
    {
        "content": "<p>How much of the impact do you think comes from double indirection vs re-interning?</p>",
        "id": 198944384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590609370
    },
    {
        "content": "<p>I would have expected more the latter</p>",
        "id": 198944399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590609380
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I guess interning is the bigger problem, as afaict most predicates are only looked at a few times and then discarded</p>",
        "id": 198944694,
        "sender_full_name": "lcnr",
        "timestamp": 1590609532
    },
    {
        "content": "<p>Depending on how frequent <code>Forall</code>/<code>Exists</code> predicates will be, we may also try and simply box the inner predicates in these cases, and keep them on the stack otherwise</p>",
        "id": 198944974,
        "sender_full_name": "lcnr",
        "timestamp": 1590609646
    },
    {
        "content": "<p>I think interning is the better strategy overall</p>",
        "id": 198950141,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590612036
    },
    {
        "content": "<p>simpler to think about, for one thing =)</p>",
        "id": 198950173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590612054
    },
    {
        "content": "<blockquote>\n<p>Or we look into emitting fewer trivial predicates, which is something I would like to do in seperate PRs</p>\n</blockquote>\n<p>Will spend some time looking into this then, I feel like this should still have some low hanging fruits</p>",
        "id": 198950686,
        "sender_full_name": "lcnr",
        "timestamp": 1590612268
    },
    {
        "content": "<p>I come from Firefox where backouts are very common, so my tolerance for them is much higher than the average person's :)</p>",
        "id": 198961024,
        "sender_full_name": "njn",
        "timestamp": 1590618121
    },
    {
        "content": "<p>The wf-stress benchmark isn't very important, the \"real world\" benchmarks like serde and futures are much more important</p>",
        "id": 198961145,
        "sender_full_name": "njn",
        "timestamp": 1590618186
    },
    {
        "content": "<p>I recommend Cachegrind diffs for understanding what has changed. I use it all the time but nobody else does :(</p>",
        "id": 198961364,
        "sender_full_name": "njn",
        "timestamp": 1590618316
    },
    {
        "content": "<p>Hmm and it seems like on serde at least we saw about 7% regression and only about 1% recouped</p>",
        "id": 199171680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590766812
    },
    {
        "content": "<p>seems to be focused in <code>typeck_tables_of</code></p>",
        "id": 199171785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590766878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I found something we've missed in <a href=\"https://github.com/rust-lang/rust/issues/72055\">#72055</a>:</p>\n<p><a href=\"https://github.com/rust-lang/rust/pull/72743\">https://github.com/rust-lang/rust/pull/72743</a> don't know if this is actually responsible for any perf changes though <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 199180948,
        "sender_full_name": "lcnr",
        "timestamp": 1590771053
    },
    {
        "content": "<p>tbh I am in general still fairly confused by both the encoding and query system <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 199181231,
        "sender_full_name": "lcnr",
        "timestamp": 1590771177
    },
    {
        "content": "<p>I wonder <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> if there are new calls to <code>to_predicate</code> occuring, perhaps after folding?, that are very frequent in typeck and that accounts for the overhead.</p>",
        "id": 199194735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590777669
    },
    {
        "content": "<p>That's a good catch, I didn't check <code>TypeFoldable</code>. Opened <a href=\"https://github.com/rust-lang/rust/pull/72754\">https://github.com/rust-lang/rust/pull/72754</a></p>\n<p>pls perf</p>",
        "id": 199198593,
        "sender_full_name": "lcnr",
        "timestamp": 1590779497
    },
    {
        "content": "<p>thx <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 199206083,
        "sender_full_name": "lcnr",
        "timestamp": 1590783127
    },
    {
        "content": "<blockquote>\n<p>Or we look into emitting fewer trivial predicates, which is something I would like to do in seperate PRs</p>\n</blockquote>\n<p>Spend some time looking into this today.</p>",
        "id": 199257732,
        "sender_full_name": "lcnr",
        "timestamp": 1590846579
    },
    {
        "content": "<p>The most relevant predicates are <code>PredicateKind::Trait</code> and <code>PredicateKind::WellFormed</code>, which are more than 90% of all interned predicates:</p>\n<div class=\"codehilite\"><pre><span></span><code>8915319 counts:\n(  1)  7283539 (81.7%, 81.7%): [WARN  rustc_middle::ty] Trait\n(  2)  1048015 (11.8%, 93.5%): [WARN  rustc_middle::ty] WellFormed\n(  3)   252852 ( 2.8%, 96.3%): [WARN  rustc_middle::ty] Projection\n(  4)   219483 ( 2.5%, 98.8%): [WARN  rustc_middle::ty] TypeOutlives\n(  5)    50944 ( 0.6%, 99.3%): [WARN  rustc_middle::ty] RegionOutlives\n(  6)    31204 ( 0.4%, 99.7%): [WARN  rustc_middle::ty] Subtype\n(  7)    16998 ( 0.2%, 99.9%): [WARN  rustc_middle::ty] ClosureKind\n(  8)     8848 ( 0.1%,100.0%): [WARN  rustc_middle::ty] ObjectSafe\n(  9)     2917 ( 0.0%,100.0%): [WARN  rustc_middle::ty] ConstEquate\n( 10)      519 ( 0.0%,100.0%): [WARN  rustc_middle::ty] ConstEvaluatable\n</code></pre></div>",
        "id": 199257857,
        "sender_full_name": "lcnr",
        "timestamp": 1590846725
    },
    {
        "content": "<p>Once <a href=\"https://github.com/rust-lang/rust/issues/70107\">#70107</a> lands <code>WellFormed</code> will be instantiated even more frequently</p>",
        "id": 199257943,
        "sender_full_name": "lcnr",
        "timestamp": 1590846848
    },
    {
        "content": "<p>Will then try to skip trivial WF predicates and see how much this changes, don't feel comfortable with emitting fewer <code>Trait</code> predicates as they aren't as local and we can easily cause unsoundness if we mess this up, so I don't think that's worth it</p>",
        "id": 199258056,
        "sender_full_name": "lcnr",
        "timestamp": 1590847046
    },
    {
        "content": "<p>Don't care about other predicates for now <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 199258059,
        "sender_full_name": "lcnr",
        "timestamp": 1590847072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> it seems like <code>TypeFoldable</code> was a real win</p>",
        "id": 199402003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591034462
    },
    {
        "content": "<p>yes yes</p>",
        "id": 199402042,
        "sender_full_name": "lcnr",
        "timestamp": 1591034480
    },
    {
        "content": "<p>that's good</p>",
        "id": 199402215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591034545
    }
]