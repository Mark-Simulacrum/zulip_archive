[
    {
        "content": "<p>I'm attempting <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_middle/ty/mod.rs#L2991-L2996\">this FIXME</a>, converting a <code>Symbol</code> to a <code>&amp;'tcx str</code>. But I can't work out how to write the <code>Decodable</code> impl.</p>",
        "id": 203467795,
        "sender_full_name": "njn",
        "timestamp": 1594354320
    },
    {
        "content": "<p>I tried this:</p>",
        "id": 203467838,
        "sender_full_name": "njn",
        "timestamp": 1594354329
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>    fn decode&lt;D: Decoder&gt;(d: &amp;mut D) -&gt; Result&lt;SymbolName&lt;&#39;tcx&gt;, D::Error&gt; {\n        ty::tls::with(|tcx| { Ok(Self::new(tcx, &amp;d.read_str()?)) })\n    }\n</code></pre></div>",
        "id": 203467840,
        "sender_full_name": "njn",
        "timestamp": 1594354335
    },
    {
        "content": "<p>But I get \"<code>tcx</code> is a reference that is only valid in the closure body\"</p>",
        "id": 203467843,
        "sender_full_name": "njn",
        "timestamp": 1594354358
    },
    {
        "content": "<p>Maybe this isn't possible, and the FIXME comment is just a bad suggestion? <code>Decodable</code> doesn't seem compatible with a type that refers to <code>tcx</code>-owned data.</p>",
        "id": 203467999,
        "sender_full_name": "njn",
        "timestamp": 1594354573
    },
    {
        "content": "<p>Unless <code>UseSpecializedDecodable</code> can somehow come to the rescue? I haven't worked out what it does, yet</p>",
        "id": 203468163,
        "sender_full_name": "njn",
        "timestamp": 1594354812
    },
    {
        "content": "<p>/me finds the <code>arena_types</code> macro...</p>",
        "id": 203468528,
        "sender_full_name": "njn",
        "timestamp": 1594355449
    },
    {
        "content": "<p>/me gets something working</p>",
        "id": 203471614,
        "sender_full_name": "njn",
        "timestamp": 1594360287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">njn</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Decoding.20a.20.60SymbolName.60/near/203468163\">said</a>:</p>\n<blockquote>\n<p>Unless <code>UseSpecializedDecodable</code> can somehow come to the rescue? I haven't worked out what it does, yet</p>\n</blockquote>\n<p>it lets you specialize on the decoder type. but <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> has a better approach to replace that mess</p>",
        "id": 203485324,
        "sender_full_name": "eddyb",
        "timestamp": 1594372444
    }
]