[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> A while back I think you said you could be ok with bytecode not being compressed? I've been experimenting with that, it reduces compile time by up to 5% on debug builds.</p>",
        "id": 181253696,
        "sender_full_name": "njn",
        "timestamp": 1574286727
    },
    {
        "content": "<p>I need to measure the impact on the .rlib file sizes.</p>",
        "id": 181253714,
        "sender_full_name": "njn",
        "timestamp": 1574286744
    },
    {
        "content": "<p>Nice!</p>",
        "id": 181254754,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574287340
    },
    {
        "content": "<p>I'd personally be totally fine decompressing the bytecode</p>",
        "id": 181254759,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574287347
    },
    {
        "content": "<p>and/or investigating faster compression algorithms</p>",
        "id": 181254768,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574287354
    },
    {
        "content": "<p>something like a lower compression level or maybe even zstd might get 90% of the wins</p>",
        "id": 181254803,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574287371
    },
    {
        "content": "<p>I'd be fine removing the compression entirely myself</p>",
        "id": 181254814,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574287381
    },
    {
        "content": "<p>it is worth noting that a common complaint is that Rust produces enormous target directories</p>",
        "id": 181255047,
        "sender_full_name": "simulacrum",
        "timestamp": 1574287589
    },
    {
        "content": "<p>Though I personally think the solution there is not compression but rather storing different data (and/or \"intelligent\" compression) -- I am also unopposed to not compressing</p>",
        "id": 181255087,
        "sender_full_name": "simulacrum",
        "timestamp": 1574287627
    },
    {
        "content": "<p>it may also be plausible that we can easily compress on a separate thread?</p>",
        "id": 181255103,
        "sender_full_name": "simulacrum",
        "timestamp": 1574287642
    },
    {
        "content": "<p>We already use \"Fast\" compression (as opposed to \"Best\", \"Default\", or \"None\")</p>",
        "id": 181257656,
        "sender_full_name": "njn",
        "timestamp": 1574289577
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> there are mentions of \"bitcode\" and \"bytecode\". Are these the same thing?</p>",
        "id": 181258168,
        "sender_full_name": "njn",
        "timestamp": 1574290045
    },
    {
        "content": "<p>Hmm, a rough comparison on one project suggests that disabling compression increases .rlib file size by typically 10-25%</p>",
        "id": 181259198,
        "sender_full_name": "njn",
        "timestamp": 1574290914
    },
    {
        "content": "<p>Given that they are regular 1MiB+, I'm reluctant to cause that much disk usage increase</p>",
        "id": 181259273,
        "sender_full_name": "njn",
        "timestamp": 1574290948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> I think bitcode and bytecode are the same</p>",
        "id": 181259722,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291322
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> honestly actually I think there's a better solution here, albeit more involved</p>",
        "id": 181259729,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291330
    },
    {
        "content": "<p>the only purpose of bytecode in rlibs is for LTO</p>",
        "id": 181259739,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291337
    },
    {
        "content": "<p>but most projects don't use LTO</p>",
        "id": 181259744,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291340
    },
    {
        "content": "<p>actually, so here's a real kicker</p>",
        "id": 181259756,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291349
    },
    {
        "content": "<p>ok so ignore libstd</p>",
        "id": 181259760,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291352
    },
    {
        "content": "<p><em>if</em> you execute LTO</p>",
        "id": 181259766,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291355
    },
    {
        "content": "<p>then you do a huge amount of object file codegen in the middle, none of which is used, all of which is wasted time</p>",
        "id": 181259780,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291370
    },
    {
        "content": "<p>(For this whole project (<a href=\"https://github.com/mozilla/fix-stacks\" target=\"_blank\" title=\"https://github.com/mozilla/fix-stacks\">https://github.com/mozilla/fix-stacks</a>) the rlibs total size goes from 276,561,064 to 347,907,278, a 1.26x increase)</p>",
        "id": 181259790,
        "sender_full_name": "njn",
        "timestamp": 1574291379
    },
    {
        "content": "<p><em>if you dont' do LTO</em> then you're creating a bunch of bitcode that's never used</p>",
        "id": 181259791,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291380
    },
    {
        "content": "<p>so the real solution here is to probably add two flags to the compiler which Cargo automatically passes:</p>\n<ul>\n<li>One flag disables embedding bitcode in an rlib</li>\n<li>Another flag disables objects in an rlib</li>\n</ul>",
        "id": 181259856,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291408
    },
    {
        "content": "<p>That's both compile time wins and disk space wins all across the board</p>",
        "id": 181259871,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291423
    },
    {
        "content": "<p>and everything will be turned on by default as soon as we land it in cargo</p>",
        "id": 181259882,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291432
    },
    {
        "content": "<p>does that make sense?</p>",
        "id": 181259887,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291440
    },
    {
        "content": "<p>So when would bitcode be omitted, and when would the object be omitted?</p>",
        "id": 181259931,
        "sender_full_name": "njn",
        "timestamp": 1574291521
    },
    {
        "content": "<p>if you compile with LTO, there's no need to put object files in rlibs</p>",
        "id": 181259978,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291535
    },
    {
        "content": "<p>(nor is there any reason to compress the bitcode found in the rlib)</p>",
        "id": 181259988,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291544
    },
    {
        "content": "<p>we have a flag like that with <code>-C</code> for cross-lang LTO, but rust projects should be using that as well</p>",
        "id": 181259997,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291556
    },
    {
        "content": "<p>ok, so the rlib should contain: object XOR bitcode</p>",
        "id": 181259999,
        "sender_full_name": "njn",
        "timestamp": 1574291573
    },
    {
        "content": "<p>?</p>",
        "id": 181260001,
        "sender_full_name": "njn",
        "timestamp": 1574291576
    },
    {
        "content": "<p>correct</p>",
        "id": 181260015,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291585
    },
    {
        "content": "<p>except for libstd, but ignore that</p>",
        "id": 181260018,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291589
    },
    {
        "content": "<p>sounds great!</p>",
        "id": 181260030,
        "sender_full_name": "njn",
        "timestamp": 1574291601
    },
    {
        "content": "<p>for everything cargo produces locally it should be xor</p>",
        "id": 181260032,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291602
    },
    {
        "content": "<p>so we either (a) don't produce any bitcode, nor compress it, or (b) don't codegen something that's not needed</p>",
        "id": 181260049,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291625
    },
    {
        "content": "<p>both of which can be pretty significant savings</p>",
        "id": 181260055,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291629
    },
    {
        "content": "<p>Definitely</p>",
        "id": 181260118,
        "sender_full_name": "njn",
        "timestamp": 1574291663
    },
    {
        "content": "<p>It seems that uncompressed bitcode/bytecode is also a thing: <a href=\"https://github.com/rust-lang/rust/blob/6576f4be5af31a5e61dfc0cf50b7130e6c6dfb35/src/librustc/dep_graph/graph.rs#L910-L914\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/6576f4be5af31a5e61dfc0cf50b7130e6c6dfb35/src/librustc/dep_graph/graph.rs#L910-L914\">https://github.com/rust-lang/rust/blob/6576f4be5af31a5e61dfc0cf50b7130e6c6dfb35/src/librustc/dep_graph/graph.rs#L910-L914</a></p>",
        "id": 181260127,
        "sender_full_name": "njn",
        "timestamp": 1574291674
    },
    {
        "content": "<p>yeah so <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> might be able to help out there to explain more</p>",
        "id": 181260159,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291708
    },
    {
        "content": "<p>but there's a <code>-C</code> flag which makes our rlibs \"cross lang lto compatible\"</p>",
        "id": 181260167,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291720
    },
    {
        "content": "<p>which means that all the <code>*.o</code> files are actually uncompress bitcode</p>",
        "id": 181260171,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291726
    },
    {
        "content": "<p>uncompressed*</p>",
        "id": 181260173,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291728
    },
    {
        "content": "<p>note though that this is a pretty simple concept</p>",
        "id": 181260195,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291753
    },
    {
        "content": "<p>but there's a fair amont of legwork to get it all hooked up in the compiler</p>",
        "id": 181260241,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291764
    },
    {
        "content": "<p>for example the LTO passes in rustc need to get updated of how they look for bitcode, it's either a \"libstd rlib\" where it's located adjacent to the object or it's a \"cargo rlib\" where it's the <code>*.o</code> file</p>",
        "id": 181260277,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574291806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> You've lost me... is this \"legwork\" about the original idea (object XOR bitcode), or about the uncompressed bitcode stuff?</p>",
        "id": 181260475,
        "sender_full_name": "njn",
        "timestamp": 1574292001
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> the xor idea</p>",
        "id": 181261576,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574292953
    },
    {
        "content": "<p>I suspect uncompressed bitcode is dead in the water if it inflates sizes that much</p>",
        "id": 181261627,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574292976
    },
    {
        "content": "<p>I agree my original idea of not compressing bitcode is not good. But 'object XOR bitcode' would make it much less interesting anyway, since only LTO builds would end up with bitcode.</p>",
        "id": 181261661,
        "sender_full_name": "njn",
        "timestamp": 1574293039
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> so actually</p>",
        "id": 181261737,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574293096
    },
    {
        "content": "<p>To start I think we just need a flag to skip bitcode</p>",
        "id": 181261745,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574293111
    },
    {
        "content": "<p>And that's it</p>",
        "id": 181261748,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574293114
    },
    {
        "content": "<p>that sounds easy :)</p>",
        "id": 181261753,
        "sender_full_name": "njn",
        "timestamp": 1574293124
    },
    {
        "content": "<p>The hard part later is making lto faster but that's less interesting</p>",
        "id": 181261756,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574293127
    },
    {
        "content": "<p>If you add that flag I can whip up a patch for cargo</p>",
        "id": 181261764,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574293139
    },
    {
        "content": "<p>cool, I'll poke around, try to work it out</p>",
        "id": 181261774,
        "sender_full_name": "njn",
        "timestamp": 1574293158
    },
    {
        "content": "<p>thanks for the help!</p>",
        "id": 181261778,
        "sender_full_name": "njn",
        "timestamp": 1574293164
    },
    {
        "content": "<p>So I'm.basically countering your uncompressed bitcode</p>",
        "id": 181261781,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574293170
    },
    {
        "content": "<p>With let's delete bitcode lol</p>",
        "id": 181261786,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1574293176
    },
    {
        "content": "<p>\"make it faster\" is good, but \"don't do it at all\" is better :)</p>",
        "id": 181261951,
        "sender_full_name": "njn",
        "timestamp": 1574293360
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/66598\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66598\">https://github.com/rust-lang/rust/pull/66598</a> is the PR, for anyone following along. Big wins!</p>",
        "id": 181587466,
        "sender_full_name": "njn",
        "timestamp": 1574372623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> Thanks for writing up <a href=\"https://github.com/rust-lang/rust/issues/66961\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66961\">#66961</a>! I'm considering adding this to my list of tasks for Q1 2020, because I suspect it won't get done otherwise. Does that sound right to you?</p>",
        "id": 182395508,
        "sender_full_name": "njn",
        "timestamp": 1575324676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> Yes, that sounds good. I can do the reviewing then.</p>",
        "id": 182427627,
        "sender_full_name": "mw",
        "timestamp": 1575363919
    }
]