[
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span> just noting we'll be starting our weekly meeting here in 3 minutes or so</p>",
        "id": 134310881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537451838
    },
    {
        "content": "<p>I'll go ahead and start writing stuff on the assumption that people can catch up. (Yay backlog system)</p>",
        "id": 134311136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452084
    },
    {
        "content": "<p>First up, P-high T-compiler: <a href=\"http://is.gd/0ohWmp\" target=\"_blank\" title=\"http://is.gd/0ohWmp\">http://is.gd/0ohWmp</a></p>",
        "id": 134311146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452096
    },
    {
        "content": "<p>(for those unaware, I am following the agenda from an (old) <a href=\"https://public.etherpad-mozilla.org/p/rust-compiler-meeting\" target=\"_blank\" title=\"https://public.etherpad-mozilla.org/p/rust-compiler-meeting\">etherpad</a>)</p>",
        "id": 134311159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452118
    },
    {
        "content": "<p>first P-high issue: \"Trait with HRTB blanket impl is implemented when it shouldn't be\" <a href=\"https://github.com/rust-lang/rust/issues/54302\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54302\">#54302</a></p>",
        "id": 134311209,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452138
    },
    {
        "content": "<p>its been bisected, yay</p>",
        "id": 134311227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452158
    },
    {
        "content": "<p>blame has been placed on a supposed refactoring</p>",
        "id": 134311245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452186
    },
    {
        "content": "<p>I was hoping to look into tthat this morning</p>",
        "id": 134311261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452204
    },
    {
        "content": "<p>PR: \"Replace the global fulfillment cache with the evaluation cache\" <a href=\"https://github.com/rust-lang/rust/issues/42840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/42840\">#42840</a></p>",
        "id": 134311262,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452205
    },
    {
        "content": "<p>but got distracted</p>",
        "id": 134311265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452206
    },
    {
        "content": "<p>you can assign to me</p>",
        "id": 134311270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452211
    },
    {
        "content": "<p>okay, assigning to niko</p>",
        "id": 134311275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452218
    },
    {
        "content": "<p>okay next up: \"ICE compiling the objrs crate\" <a href=\"https://github.com/rust-lang/rust/issues/54059\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54059\">#54059</a></p>",
        "id": 134311351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452261
    },
    {
        "content": "<p>assign to mw but ariel's looked at it</p>",
        "id": 134311369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452279
    },
    {
        "content": "<p>PR posted: \"avoid leaking host details in proc macro metadata decoding\" <a href=\"https://github.com/rust-lang/rust/issues/54265\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54265\">#54265</a></p>",
        "id": 134311383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452297
    },
    {
        "content": "<p>so it seems like its under control</p>",
        "id": 134311394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452305
    },
    {
        "content": "<p>(We'll be coming back around to that PR when we do the beta-nominations, but for now lets move along)</p>",
        "id": 134311417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452336
    },
    {
        "content": "<p>Next up: \"Implement some way to run UI tests ignoring run-pass tests\" <a href=\"https://github.com/rust-lang/rust/issues/54047\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54047\">#54047</a></p>",
        "id": 134311434,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452355
    },
    {
        "content": "<p>boy I keep trying and it keeps failing</p>",
        "id": 134311522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452431
    },
    {
        "content": "<p>anything in particular?</p>",
        "id": 134311536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452453
    },
    {
        "content": "<p>okay well anyway this is assigned ot me</p>",
        "id": 134311537,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452457
    },
    {
        "content": "<p>I think I need to figure out how to test e.g. the <code>asmjs</code> target locally</p>",
        "id": 134311545,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452471
    },
    {
        "content": "<p>rather than just responding to bors and then hoping</p>",
        "id": 134311549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452478
    },
    {
        "content": "<p>oh dear</p>",
        "id": 134311580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452483
    },
    {
        "content": "<p>I had the same thing with the compile-fail migration, it is painful.</p>",
        "id": 134311600,
        "sender_full_name": "davidtwco",
        "timestamp": 1537452502
    },
    {
        "content": "<p>Or ... do <code>try</code> builds build for those targets and run the test suite?</p>",
        "id": 134311607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452509
    },
    {
        "content": "<p><code>try</code> builds don't run the test suite afaiu</p>",
        "id": 134311616,
        "sender_full_name": "varkor",
        "timestamp": 1537452526
    },
    {
        "content": "<p>I'm not sure if try builds run on all platforms? <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> would prob know</p>",
        "id": 134311619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452531
    },
    {
        "content": "<p>Okay if <code>try</code> builds don't run the tests then that's pointless</p>",
        "id": 134311623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452539
    },
    {
        "content": "<p>I think they do, but it doesn't cause them to \"fail\"? not sure</p>",
        "id": 134311624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452540
    },
    {
        "content": "<p>okay well in any case I'm looiking into it</p>",
        "id": 134311651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452571
    },
    {
        "content": "<p>there's certainly another option</p>",
        "id": 134311656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452578
    },
    {
        "content": "<p>there was another PR that involves running back to bors and checking if stuff works</p>",
        "id": 134311661,
        "sender_full_name": "nagisa",
        "timestamp": 1537452586
    },
    {
        "content": "<p>of eagerly moving the <code>src/test/ui/run-pass/</code> <em>back</em> to <code>src/test/run-pass</code> right now</p>",
        "id": 134311667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452593
    },
    {
        "content": "<p>I was recommended changing the <code>.travis.yml</code> to enable other platforms temporarily for the PR testing instead of queuing for bors each time for the other platforms.</p>",
        "id": 134311671,
        "sender_full_name": "davidtwco",
        "timestamp": 1537452597
    },
    {
        "content": "<p>hmm</p>",
        "id": 134311724,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452608
    },
    {
        "content": "<p>perhaps we could summarize the steps necessary to minimize the interference with everything else while this is being done somewhere (forge?)</p>",
        "id": 134311729,
        "sender_full_name": "nagisa",
        "timestamp": 1537452619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> maybe I will follow up with you after the meeting for more info on that avenue ?</p>",
        "id": 134311730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452620
    },
    {
        "content": "<p>I never did it, but I'll link you to the comment where I told that.</p>",
        "id": 134311738,
        "sender_full_name": "davidtwco",
        "timestamp": 1537452639
    },
    {
        "content": "<p>Okay, thanks that would be helpful</p>",
        "id": 134311743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452646
    },
    {
        "content": "<blockquote>\n<p>perhaps we could summarize the steps necessary to minimize the interference with everything else while this is being done somewhere (forge?)</p>\n</blockquote>\n<p>rustc-guide plz</p>",
        "id": 134311747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452656
    },
    {
        "content": "<p>And I think I agree with <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> that it seems like there is general knowledge here that should be documented.</p>",
        "id": 134311750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452662
    },
    {
        "content": "<p>so I'll open an issue for that</p>",
        "id": 134311758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452670
    },
    {
        "content": "<p>the only Q I have is</p>",
        "id": 134311764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> current PR that is doing so is <a href=\"https://github.com/rust-lang/rust/pull/54004\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54004\">https://github.com/rust-lang/rust/pull/54004</a></p>",
        "id": 134311768,
        "sender_full_name": "nagisa",
        "timestamp": 1537452688
    },
    {
        "content": "<p>do we think that enough people are sufficiently inconvienced right now</p>",
        "id": 134311770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452691
    },
    {
        "content": "<p>(I recommended them to change travis.yml as well, but did not know any detains on what they should do)</p>",
        "id": 134311779,
        "sender_full_name": "nagisa",
        "timestamp": 1537452702
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/subject/test.20suite/near/131235830\" title=\"#narrow/stream/131828-t-compiler/subject/test.20suite/near/131235830\">that comment about travis.yml</a>)</p>",
        "id": 134311785,
        "sender_full_name": "davidtwco",
        "timestamp": 1537452712
    },
    {
        "content": "<p>that I shoud indeed undo the original <code>src/test/run-pass</code> ==&gt; <code>src/test/ui/run-pass</code> work</p>",
        "id": 134311787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452712
    },
    {
        "content": "<p>That was my only Question</p>",
        "id": 134311831,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452730
    },
    {
        "content": "<p>anyone have any thoughts? I know <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> probably would be happiest if I did that</p>",
        "id": 134311847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452744
    },
    {
        "content": "<p>so I'll treat that as one vote in favor</p>",
        "id": 134311855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452752
    },
    {
        "content": "<p>Does anyone else care one way or another in the short term?</p>",
        "id": 134311865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452762
    },
    {
        "content": "<p>I don’t mind either way, but I want to see our tests migrated to a tag system we spoke about last week ASAP.</p>",
        "id": 134311872,
        "sender_full_name": "nagisa",
        "timestamp": 1537452773
    },
    {
        "content": "<p>That's ... a broader design question</p>",
        "id": 134311893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452796
    },
    {
        "content": "<p>I think we don't want to block e.g. testing of NLL against run-pass suite on that (\"that\" being the broader reworking of our test suite + compiletest to be property based)</p>",
        "id": 134311919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452834
    },
    {
        "content": "<p>so the current status is that run-pass + UI have been largely merged</p>",
        "id": 134311971,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452855
    },
    {
        "content": "<p>and you are currently working on moving everything <em>back</em> to <code>run-pass</code> directory</p>",
        "id": 134311978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452867
    },
    {
        "content": "<p>no</p>",
        "id": 134311980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452870
    },
    {
        "content": "<p>but making <code>run-pass</code> use <code>ui</code> mode</p>",
        "id": 134311981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452872
    },
    {
        "content": "<p>oh</p>",
        "id": 134311984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452875
    },
    {
        "content": "<p>/me confused</p>",
        "id": 134311986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452877
    },
    {
        "content": "<p>the current status</p>",
        "id": 134311988,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452880
    },
    {
        "content": "<p>is that some portion of run-pass was moved to ui</p>",
        "id": 134311994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452890
    },
    {
        "content": "<p>right, ok, I spoke imprecisely, but that's what I meant</p>",
        "id": 134312000,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452899
    },
    {
        "content": "<p>the remaining task was to get the remainder of run-pass testing against NLL</p>",
        "id": 134312012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452907
    },
    {
        "content": "<p>so it seems to me that what you are proposing is to split your PR into two halves:</p>\n<ul>\n<li>move files back to <code>run-pass</code></li>\n<li>change meaning of <code>run-pass</code> to use <code>ui</code></li>\n</ul>",
        "id": 134312023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452929
    },
    {
        "content": "<p>the PR I have up, it only turns on <code>ui/</code> mode on the existing run-pass/ directory</p>",
        "id": 134312026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452934
    },
    {
        "content": "<p>and it doesn't shuffle anything around</p>",
        "id": 134312031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452943
    },
    {
        "content": "<p>we didn't really find any NLL bugs in the move...</p>",
        "id": 134312032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452943
    },
    {
        "content": "<p>I think that is true (that the move has not uncovered NLL bugs)</p>",
        "id": 134312040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452955
    },
    {
        "content": "<p>oh, ok</p>",
        "id": 134312041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452956
    },
    {
        "content": "<p>I don't care, I think it's fine if you want to move the files back. Obviously we lose some test coverage but it's prob ok</p>",
        "id": 134312089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452974
    },
    {
        "content": "<p>(until we switch run-pass to ui)</p>",
        "id": 134312093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537452981
    },
    {
        "content": "<p>The main motivation I have to not move the files back</p>",
        "id": 134312096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452984
    },
    {
        "content": "<p>is that right now people who are maintaining those files</p>",
        "id": 134312106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537452998
    },
    {
        "content": "<p>are doing it in the <code>ui</code> directory</p>",
        "id": 134312107,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453001
    },
    {
        "content": "<p>which means my change to the <code>run-pass/</code> suite does have a prayer of landing</p>",
        "id": 134312116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453011
    },
    {
        "content": "<p>if I move the files back</p>",
        "id": 134312121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453017
    },
    {
        "content": "<p>it will increase the effort required to change the semantics of <code>run-pass/</code> to a ui-mode</p>",
        "id": 134312150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453037
    },
    {
        "content": "<p>in terms of rebasing</p>",
        "id": 134312156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453043
    },
    {
        "content": "<p>Here's an idea</p>",
        "id": 134312162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453053
    },
    {
        "content": "<p>maybe I set a time limit</p>",
        "id": 134312165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453056
    },
    {
        "content": "<p>i.e. if I can land PR <a href=\"https://github.com/rust-lang/rust/issues/54223\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54223\">#54223</a></p>",
        "id": 134312172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453068
    },
    {
        "content": "<p>by, what, next T-compiler meeting</p>",
        "id": 134312179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453079
    },
    {
        "content": "<p>in one week</p>",
        "id": 134312182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453081
    },
    {
        "content": "<p>then that's gravy</p>",
        "id": 134312226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453087
    },
    {
        "content": "<p>(and then we can readily move <code>src/test/ui/run-pass</code> back, trivially)</p>",
        "id": 134312236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453103
    },
    {
        "content": "<p>If the PR <em>hasn't</em> landed by that time, for whatever reason</p>",
        "id": 134312247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453114
    },
    {
        "content": "<p>ok</p>",
        "id": 134312249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453122
    },
    {
        "content": "<p>then we acquiesce to the needs to people who are inconvenienced</p>",
        "id": 134312250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453124
    },
    {
        "content": "<p>I'm happy with that plan, anyone object?</p>",
        "id": 134312265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453143
    },
    {
        "content": "<p>Okay well if someone objects they can comment on the ticket. (I'll make a note there of this plan)</p>",
        "id": 134312286,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453170
    },
    {
        "content": "<p>next up: \"Regression in #[allow(deprecated)] for <code>impl Trait</code> return type\" <a href=\"https://github.com/rust-lang/rust/issues/54045\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54045\">#54045</a></p>",
        "id": 134312307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453187
    },
    {
        "content": "<p>hmm, are either <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> or <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> here right now?</p>",
        "id": 134312369,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453218
    },
    {
        "content": "<p>hi</p>",
        "id": 134312379,
        "sender_full_name": "eddyb",
        "timestamp": 1537453242
    },
    {
        "content": "<p>Hi: Is <a href=\"https://github.com/rust-lang/rust/issues/54045\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54045\">#54045</a> on your current radar?</p>",
        "id": 134312406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453268
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> has been away, and will return in October</p>",
        "id": 134312407,
        "sender_full_name": "eddyb",
        "timestamp": 1537453268
    },
    {
        "content": "<p>and, no, I was stuck on edition things :(</p>",
        "id": 134312417,
        "sender_full_name": "eddyb",
        "timestamp": 1537453278
    },
    {
        "content": "<p>understandable</p>",
        "id": 134312426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453283
    },
    {
        "content": "<p>ah right</p>",
        "id": 134312428,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453284
    },
    {
        "content": "<p>I had forgotten about this refactoring</p>",
        "id": 134312433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453290
    },
    {
        "content": "<p>sorry for not saying something earlier - I forgot it was assigned  to me</p>",
        "id": 134312437,
        "sender_full_name": "eddyb",
        "timestamp": 1537453293
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> do you think you'll have time to do that + edition stuff?</p>",
        "id": 134312443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453301
    },
    {
        "content": "<p>(well maybe its my fault for assigning both of you)</p>",
        "id": 134312448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453308
    },
    {
        "content": "<p>does it need a beta backport or something? I can try but I'm worried I don't know what <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> did exactly</p>",
        "id": 134312497,
        "sender_full_name": "eddyb",
        "timestamp": 1537453325
    },
    {
        "content": "<p>(that is, I can do it while waiting for a crater run, probably)</p>",
        "id": 134312509,
        "sender_full_name": "eddyb",
        "timestamp": 1537453340
    },
    {
        "content": "<p>I guess its now a stable-to-stable regression</p>",
        "id": 134312520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453354
    },
    {
        "content": "<p>:(</p>",
        "id": 134312529,
        "sender_full_name": "eddyb",
        "timestamp": 1537453362
    },
    {
        "content": "<p>which means... would we bother with a beta backport and not attempt a stable one?</p>",
        "id": 134312532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453370
    },
    {
        "content": "<p>My experience has been that we either backport all the way in such cases, or not at all</p>",
        "id": 134312538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453383
    },
    {
        "content": "<p>it is it high-impact? I'm confused as to why this even got high priority</p>",
        "id": 134312550,
        "sender_full_name": "eddyb",
        "timestamp": 1537453397
    },
    {
        "content": "<p>surely you can put the <code>#[allow(deprecated)]</code> higher up or something?</p>",
        "id": 134312564,
        "sender_full_name": "eddyb",
        "timestamp": 1537453410
    },
    {
        "content": "<p>I don't know, the bug isn't clear about that</p>",
        "id": 134312569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453420
    },
    {
        "content": "<p>it does seem a bit like \"just a bug\"</p>",
        "id": 134312573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453427
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>, you around?</p>",
        "id": 134312619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453443
    },
    {
        "content": "<p>oh we already were too late when anyone was assigned <a href=\"https://github.com/rust-lang/rust/issues/54045#issuecomment-419836436\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54045#issuecomment-419836436\">https://github.com/rust-lang/rust/issues/54045#issuecomment-419836436</a></p>",
        "id": 134312646,
        "sender_full_name": "eddyb",
        "timestamp": 1537453480
    },
    {
        "content": "<p>this one works: <a href=\"https://play.rust-lang.org/?gist=f16fb745294da41128a2b3db93811d40&amp;version=stable&amp;mode=debug&amp;edition=2015\" target=\"_blank\" title=\"https://play.rust-lang.org/?gist=f16fb745294da41128a2b3db93811d40&amp;version=stable&amp;mode=debug&amp;edition=2015\">https://play.rust-lang.org/?gist=f16fb745294da41128a2b3db93811d40&amp;version=stable&amp;mode=debug&amp;edition=2015</a></p>",
        "id": 134312653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453497
    },
    {
        "content": "<p>which means to me that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> is right: You can work around this</p>",
        "id": 134312665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453506
    },
    {
        "content": "<p>yeah, it's not unrooted, it's just rooted to the parent module</p>",
        "id": 134312673,
        "sender_full_name": "eddyb",
        "timestamp": 1537453518
    },
    {
        "content": "<p>which is something I tried to steer <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> from, but apparently some things were easier for them this way</p>",
        "id": 134312683,
        "sender_full_name": "eddyb",
        "timestamp": 1537453533
    },
    {
        "content": "<p>our HIR handling is a mess :(</p>",
        "id": 134312691,
        "sender_full_name": "eddyb",
        "timestamp": 1537453539
    },
    {
        "content": "<p>Okay, so here's what I suggest</p>",
        "id": 134312693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453541
    },
    {
        "content": "<p>We note that the workaround exists in the bug</p>",
        "id": 134312700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453554
    },
    {
        "content": "<p>and we don't plan to backport</p>",
        "id": 134312738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453563
    },
    {
        "content": "<p>we'll fix it when we fix it</p>",
        "id": 134312745,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453571
    },
    {
        "content": "<p>it can stay P-high</p>",
        "id": 134312749,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453578
    },
    {
        "content": "<p>but maybe even that's not so important</p>",
        "id": 134312753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453586
    },
    {
        "content": "<p>I'd really prefer to wait for <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> to get back and not step on their toes</p>",
        "id": 134312754,
        "sender_full_name": "eddyb",
        "timestamp": 1537453586
    },
    {
        "content": "<p>(we can revisit that choice later)</p>",
        "id": 134312758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453593
    },
    {
        "content": "<p>I'm trying to say we can justify waiting</p>",
        "id": 134312764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453609
    },
    {
        "content": "<p>rather than putting <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  on it immediately</p>",
        "id": 134312771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453619
    },
    {
        "content": "<p>yeah, I hope <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> agrees</p>",
        "id": 134312774,
        "sender_full_name": "eddyb",
        "timestamp": 1537453622
    },
    {
        "content": "<p>because the workaround exists</p>",
        "id": 134312778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453625
    },
    {
        "content": "<p>shall I continue to leave it assigned to both of you, or <em>just</em> assign it to <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span>  ?</p>",
        "id": 134312803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453648
    },
    {
        "content": "<p>both is fine, since we'll want to discuss it</p>",
        "id": 134312812,
        "sender_full_name": "eddyb",
        "timestamp": 1537453660
    },
    {
        "content": "<p>okay</p>",
        "id": 134312813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453664
    },
    {
        "content": "<p>I'll write a note in the issue after the meeting</p>",
        "id": 134312819,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453672
    },
    {
        "content": "<p>and come up with some design that interacts well with other things as well</p>",
        "id": 134312820,
        "sender_full_name": "eddyb",
        "timestamp": 1537453673
    },
    {
        "content": "<p>(should I remove the stable-nominated tag that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> added as well?)</p>",
        "id": 134312873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453698
    },
    {
        "content": "<p>I guess</p>",
        "id": 134312887,
        "sender_full_name": "eddyb",
        "timestamp": 1537453714
    },
    {
        "content": "<p>((I guess we can keep it on there until <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> gets back))</p>",
        "id": 134312888,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453716
    },
    {
        "content": "<p>or at least until next week. <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
        "id": 134312901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453728
    },
    {
        "content": "<p>lets move on</p>",
        "id": 134312907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453732
    },
    {
        "content": "<p>next P-high: \"ICE in libserialize with incremental build across changed rustc version\" <a href=\"https://github.com/rust-lang/rust/issues/53792\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53792\">#53792</a></p>",
        "id": 134312924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453753
    },
    {
        "content": "<p>seems like there is ongoing discussion of the problem and potential solutions there</p>",
        "id": 134312987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453803
    },
    {
        "content": "<p>Does not appear to be P-high to me.</p>",
        "id": 134313012,
        "sender_full_name": "nagisa",
        "timestamp": 1537453826
    },
    {
        "content": "<p>yeah it's a typically hard problem</p>",
        "id": 134313013,
        "sender_full_name": "eddyb",
        "timestamp": 1537453826
    },
    {
        "content": "<p>I cannot tell whether it should continue to be tagged with T-compiler</p>",
        "id": 134313018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453830
    },
    {
        "content": "<p>or if we should delegate it entirely to T-infra</p>",
        "id": 134313026,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453839
    },
    {
        "content": "<p>the changes in the code of the compiler itself are trivial</p>",
        "id": 134313057,
        "sender_full_name": "mw",
        "timestamp": 1537453867
    },
    {
        "content": "<p>so could be delegated</p>",
        "id": 134313067,
        "sender_full_name": "mw",
        "timestamp": 1537453878
    },
    {
        "content": "<p>I wonder if it's just like those distros builds</p>",
        "id": 134313073,
        "sender_full_name": "eddyb",
        "timestamp": 1537453887
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> you figure that since <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> has an applicable workaround, we can downgrade to P-medium ?</p>",
        "id": 134313078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453888
    },
    {
        "content": "<p>that are missing git commit info</p>",
        "id": 134313080,
        "sender_full_name": "eddyb",
        "timestamp": 1537453892
    },
    {
        "content": "<p>what do people think about that, a downgrade to P-medium here?</p>",
        "id": 134313090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453903
    },
    {
        "content": "<p>I figure if we delegate entirely to T-infra, then we could let <em>them</em> decide to downgrade...</p>",
        "id": 134313123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537453923
    },
    {
        "content": "<p>seems ok; it does seem like incorporating the git commit into the hash or something would suffice</p>",
        "id": 134313146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453926
    },
    {
        "content": "<p>if <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> doesn't object</p>",
        "id": 134313149,
        "sender_full_name": "mw",
        "timestamp": 1537453927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> AFAIK we already do but some ways of building Rust loses that info</p>",
        "id": 134313161,
        "sender_full_name": "eddyb",
        "timestamp": 1537453950
    },
    {
        "content": "<p>ok</p>",
        "id": 134313167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537453958
    },
    {
        "content": "<p>e.g. our tarballs have historically been very deficient here :(</p>",
        "id": 134313169,
        "sender_full_name": "eddyb",
        "timestamp": 1537453961
    },
    {
        "content": "<p>(which an entirely infra/release issue)</p>",
        "id": 134313177,
        "sender_full_name": "eddyb",
        "timestamp": 1537453971
    },
    {
        "content": "<p>okay next: \"ICE when running <code>cargo doc</code> on <code>typenum</code> at <code>librustc/traits/structural_impls.rs:178</code>\" <a href=\"https://github.com/rust-lang/rust/issues/52873\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52873\">#52873</a></p>",
        "id": 134313327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454124
    },
    {
        "content": "<p>I fixed that...</p>",
        "id": 134313334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454133
    },
    {
        "content": "<p>with PR <a href=\"https://github.com/rust-lang/rust/issues/54199\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54199\">#54199</a> ?</p>",
        "id": 134313340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454149
    },
    {
        "content": "<p>oh</p>",
        "id": 134313342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454151
    },
    {
        "content": "<p>that is marked [WIP]</p>",
        "id": 134313343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454152
    },
    {
        "content": "<p>I forgot that it hadn't mergd :P</p>",
        "id": 134313344,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454154
    },
    {
        "content": "<p>yeah, my bad</p>",
        "id": 134313345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454156
    },
    {
        "content": "<p>I was trying to find an independent test case and failing</p>",
        "id": 134313390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454166
    },
    {
        "content": "<p>and I totally forgot about it</p>",
        "id": 134313398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454169
    },
    {
        "content": "<p>okay well the issue sounds like its in good, if very-very overworked, hands</p>",
        "id": 134313403,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454182
    },
    {
        "content": "<p>I'll try a bit harder</p>",
        "id": 134313415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454207
    },
    {
        "content": "<p>next up: \"infinite recursion ICE\" <a href=\"https://github.com/rust-lang/rust/issues/52701\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52701\">#52701</a></p>",
        "id": 134313426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454222
    },
    {
        "content": "<p>uh, I forgot about this too</p>",
        "id": 134313442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454251
    },
    {
        "content": "<p>want me to take it?</p>",
        "id": 134313453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454262
    },
    {
        "content": "<p>I noted that I don't think I have too much stuff from T-compiler on my plate at the moment</p>",
        "id": 134313487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454284
    },
    {
        "content": "<p>hmm let me add it to my to-do list (I think that was my fail), but I may ping you</p>",
        "id": 134313499,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454284
    },
    {
        "content": "<p>since it's late in your day</p>",
        "id": 134313511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454295
    },
    {
        "content": "<p>okay. left a note accordingly</p>",
        "id": 134313526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454317
    },
    {
        "content": "<p>that's all the P-highs</p>",
        "id": 134313541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454333
    },
    {
        "content": "<p>next up, <a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">stable-to-beta regressions</a></p>",
        "id": 134313555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454355
    },
    {
        "content": "<p>first is \"Regression in crate ipfs-api on 1.30 beta\" <a href=\"https://github.com/rust-lang/rust/issues/54386\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54386\">#54386</a></p>",
        "id": 134313573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454380
    },
    {
        "content": "<p>seems P-high to me</p>",
        "id": 134313584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454396
    },
    {
        "content": "<p>do we assign <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> ?</p>",
        "id": 134313655,
        "sender_full_name": "eddyb",
        "timestamp": 1537454442
    },
    {
        "content": "<p>I was just wondering that. I thought I might let <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> respond to the ping they received on it, rather than pre-emptively assigning them</p>",
        "id": 134313668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454459
    },
    {
        "content": "<p>But on the other hand, if it were me I'd probably <em>want</em> someone to assign it to me</p>",
        "id": 134313684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454477
    },
    {
        "content": "<p>related: leo is working now at a company using Rust, hope it's not blocking them :)</p>",
        "id": 134313714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454507
    },
    {
        "content": "<p>I guess they are the obvious person; and they can unassign themselves if they want.</p>",
        "id": 134313719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454518
    },
    {
        "content": "<p>maybe we can bisect</p>",
        "id": 134313721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454520
    },
    {
        "content": "<p>also I think assign</p>",
        "id": 134313763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454529
    },
    {
        "content": "<p>just did, okay</p>",
        "id": 134313792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454581
    },
    {
        "content": "<p>and we already looked at <a href=\"https://github.com/rust-lang/rust/issues/54059\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54059\">#54059</a>, which was the only other stable-to-beta regression</p>",
        "id": 134313816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454614
    },
    {
        "content": "<p>next up, <a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">stable-to-nightly regressions</a></p>",
        "id": 134313828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454635
    },
    {
        "content": "<p>! zarroh bugs !</p>",
        "id": 134313878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454653
    },
    {
        "content": "<p><code>ipfs-api</code> looks legitimate btw :(</p>",
        "id": 134313892,
        "sender_full_name": "eddyb",
        "timestamp": 1537454673
    },
    {
        "content": "<p>they have (many) cyclic glob imports (and things named <code>serde</code> are imported from glob-importing modules)</p>",
        "id": 134313909,
        "sender_full_name": "eddyb",
        "timestamp": 1537454690
    },
    {
        "content": "<p>Okay, then, next are the beta-nominations</p>",
        "id": 134313933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454714
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\">beta nominations</a></p>",
        "id": 134313941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454725
    },
    {
        "content": "<p>the first <a href=\"https://github.com/rust-lang/rust/issues/54323\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54323\">#54323</a> does not look like its T-compiler's issue to approve. (Its not tagged.)</p>",
        "id": 134313960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454761
    },
    {
        "content": "<p>T-infra maintains rustbuild, right?</p>",
        "id": 134314003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454768
    },
    {
        "content": "<p>or is it us? Or is it <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> on their own?</p>",
        "id": 134314018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454803
    },
    {
        "content": "<p>it's sort of unclear</p>",
        "id": 134314028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454813
    },
    {
        "content": "<p>but it's more infra I think</p>",
        "id": 134314031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454817
    },
    {
        "content": "<p>gotta be T-infra, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  cc'ed them. :)</p>",
        "id": 134314032,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454819
    },
    {
        "content": "<p>and/or <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 134314040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454824
    },
    {
        "content": "<p>okay. I tagged T-infra. Hopefully it'll get addressed.</p>",
        "id": 134314062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454860
    },
    {
        "content": "<p>Next one <em>is</em> us I think: \"avoid leaking host details in proc macro metadata decoding\" <a href=\"https://github.com/rust-lang/rust/issues/54265\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54265\">#54265</a></p>",
        "id": 134314117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454889
    },
    {
        "content": "<p>looks ok to me</p>",
        "id": 134314146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454936
    },
    {
        "content": "<p>based on a casual perusal</p>",
        "id": 134314149,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454940
    },
    {
        "content": "<p>I'm not super familiar with the code, but it's a short diff, and <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> seemed satisfied :)</p>",
        "id": 134314164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537454956
    },
    {
        "content": "<p>hopefully eventually we might be able to even hide the host completely (when we generate the proc macro metadata)</p>",
        "id": 134314166,
        "sender_full_name": "eddyb",
        "timestamp": 1537454961
    },
    {
        "content": "<p>okay, any objections to beta-accepting this?</p>",
        "id": 134314178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537454976
    },
    {
        "content": "<p>done</p>",
        "id": 134314237,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455008
    },
    {
        "content": "<p>next: <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\">waiting for our team</a></p>",
        "id": 134314248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455024
    },
    {
        "content": "<p>zaaroh bugs</p>",
        "id": 134314254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455029
    },
    {
        "content": "<p>next: <a href=\"https://is.gd/RNZI1C\" target=\"_blank\" title=\"https://is.gd/RNZI1C\">I-nominated T-compiler (alone)</a></p>",
        "id": 134314274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455062
    },
    {
        "content": "<p>ooh boy five bugs and 9 minutes to go</p>",
        "id": 134314284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455081
    },
    {
        "content": "<p>first up: \"What should we guarantee regarding \"sort-of unused\" extern statics\" <a href=\"https://github.com/rust-lang/rust/issues/54388\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54388\">#54388</a></p>",
        "id": 134314294,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455096
    },
    {
        "content": "<p>this can be quick, maybe</p>",
        "id": 134314298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455101
    },
    {
        "content": "<p>I just filed this an hour ago</p>",
        "id": 134314304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455107
    },
    {
        "content": "<p>if you do <code>extern \"C\" { static C: u8; }</code> and reference it from dead code</p>",
        "id": 134314317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455122
    },
    {
        "content": "<p>e.g. <code>fn main() { let _x = C; }</code></p>",
        "id": 134314359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455130
    },
    {
        "content": "<p>(with an <code>unsafe</code> of course)</p>",
        "id": 134314365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455137
    },
    {
        "content": "<p>we currently will either succeed or fail to compile</p>",
        "id": 134314376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455149
    },
    {
        "content": "<p>depending on debug symbols</p>",
        "id": 134314379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455152
    },
    {
        "content": "<p>and a pending PR causes it to <em>sometimes</em> fail even without debug symbols turned on</p>",
        "id": 134314389,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455171
    },
    {
        "content": "<p>(based we <em>think</em> on codegen-units issues)</p>",
        "id": 134314398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455182
    },
    {
        "content": "<p>Seems fine to leave it implementation defined to me</p>",
        "id": 134314419,
        "sender_full_name": "nagisa",
        "timestamp": 1537455206
    },
    {
        "content": "<p>well, we need to be able to test reliably</p>",
        "id": 134314427,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455223
    },
    {
        "content": "<p>whatever we promise externally</p>",
        "id": 134314431,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455231
    },
    {
        "content": "<p>I just wanted to see if anyone would object to me saying \"this code is bogus as written; you need to at leave provide the extra object code with the definition at link time, or you'll get UB (or compile-time error, maybe)\"</p>",
        "id": 134314476,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455245
    },
    {
        "content": "<p>I guess that the failure, <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, is because LLVM optimizes away that dead code, and then we don't link?</p>",
        "id": 134314482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455247
    },
    {
        "content": "<p>I assume it succeeds to compile when LLVM notices the static is not used and removes all references to it, which then passes through the linker</p>",
        "id": 134314485,
        "sender_full_name": "nagisa",
        "timestamp": 1537455250
    },
    {
        "content": "<p>yes, I believe these hypotheses are correct</p>",
        "id": 134314489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455261
    },
    {
        "content": "<p>I haven't managed to validate them to completion</p>",
        "id": 134314490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455267
    },
    {
        "content": "<p>It is trivial to make it not fail to link in either case.</p>",
        "id": 134314492,
        "sender_full_name": "nagisa",
        "timestamp": 1537455273
    },
    {
        "content": "<p>isn't this the same as <code>extern { ... fn foo(); ... }</code>?</p>",
        "id": 134314495,
        "sender_full_name": "eddyb",
        "timestamp": 1537455275
    },
    {
        "content": "<p>presumably the same applies to functions</p>",
        "id": 134314501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455288
    },
    {
        "content": "<p>Right, avoiding failure (by providing the definition) is trivial</p>",
        "id": 134314502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455289
    },
    {
        "content": "<p>but in that case you’d get a ton of weird interactions with certain linker features which we do not want to have those weird interactions.</p>",
        "id": 134314510,
        "sender_full_name": "nagisa",
        "timestamp": 1537455299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> (maybe same as <code>extern { fn foo(); }</code>, not sure)</p>",
        "id": 134314522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455311
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I meant making this kind of failure impossible from the standpoint of the compiler</p>",
        "id": 134314530,
        "sender_full_name": "nagisa",
        "timestamp": 1537455334
    },
    {
        "content": "<p>by e.g. giving a weak definition. But then that has interactions with weak linkage and linking order and all that stuff</p>",
        "id": 134314533,
        "sender_full_name": "nagisa",
        "timestamp": 1537455353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> you mean to actually consistently error in all cases? or consistently succeed in all cases?</p>",
        "id": 134314576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455370
    },
    {
        "content": "<p>so clearly failing to provide the symbol you declared can <em>sometimes</em> produce an error</p>",
        "id": 134314577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455373
    },
    {
        "content": "<p>is the question \"is it ok to leave it ill-defined when we might choose not to\"</p>",
        "id": 134314580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455386
    },
    {
        "content": "<p>I don't know how to implement a guaranteed consistent semantics for this program</p>",
        "id": 134314581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455386
    },
    {
        "content": "<p>making it consistently error in all cases is harder, at least I can’t think of a way to do so</p>",
        "id": 134314582,
        "sender_full_name": "nagisa",
        "timestamp": 1537455391
    },
    {
        "content": "<p>maybe we shouldn't try to decide this in five minutes</p>",
        "id": 134314600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455412
    },
    {
        "content": "<p>presumably we could geneerate some sort of \"dummy references\" (effectively what debuginfo is doing...) but I'm ok with current behavior I guess</p>",
        "id": 134314605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455416
    },
    {
        "content": "<p>I can imagine why CGU would be involved</p>",
        "id": 134314607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455422
    },
    {
        "content": "<p>I'll leave the issue up for people to discuss there?</p>",
        "id": 134314612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455426
    },
    {
        "content": "<p>okay..</p>",
        "id": 134314616,
        "sender_full_name": "nagisa",
        "timestamp": 1537455430
    },
    {
        "content": "<p>and maybe remove the I-nominated tag</p>",
        "id": 134314617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455432
    },
    {
        "content": "<p>if we come to some conclusion on-ticket</p>",
        "id": 134314625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455442
    },
    {
        "content": "<p>oaky well that took up more time than I wanted</p>",
        "id": 134314634,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455459
    },
    {
        "content": "<p>next \"[WIP] rustc: check that type alias where clauses are well-formed.\" <a href=\"https://github.com/rust-lang/rust/issues/54352\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54352\">#54352</a></p>",
        "id": 134314644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> can you summarize?</p>",
        "id": 134314700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455498
    },
    {
        "content": "<p>right, so, we plan to improve <code>type</code> alias checking in Rust 2018</p>",
        "id": 134314715,
        "sender_full_name": "eddyb",
        "timestamp": 1537455515
    },
    {
        "content": "<p>and figure out what we need to integrate type aliases better into the typesystem</p>",
        "id": 134314727,
        "sender_full_name": "eddyb",
        "timestamp": 1537455531
    },
    {
        "content": "<p>so far the data shows that requiring \"enough bounds\" is hopeless (400 regressions, migration can't be automated atm) while denying \"too many bounds\" has a handful of regressions</p>",
        "id": 134314756,
        "sender_full_name": "eddyb",
        "timestamp": 1537455571
    },
    {
        "content": "<p>however, while <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> pointed out we can treat <code>type X = Y;</code> as getting implied bounds from <code>WF(Y)</code>, we have to be careful around bounds that <em>are</em> written</p>",
        "id": 134314835,
        "sender_full_name": "eddyb",
        "timestamp": 1537455606
    },
    {
        "content": "<p>/me is off</p>",
        "id": 134314862,
        "sender_full_name": "mw",
        "timestamp": 1537455625
    },
    {
        "content": "<p>e.g. do we want <code>type Foo&lt;S: Into&lt;str&gt;&gt; = Vec&lt;S&gt;;</code> to compile without a hard error?</p>",
        "id": 134314871,
        "sender_full_name": "eddyb",
        "timestamp": 1537455637
    },
    {
        "content": "<p>In 2015 alone? Or in 2015 and 2018 ?</p>",
        "id": 134314889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455655
    },
    {
        "content": "<p>the crater run found only two regressions</p>",
        "id": 134314894,
        "sender_full_name": "eddyb",
        "timestamp": 1537455658
    },
    {
        "content": "<p>yeah, edition-dependent behavior is the question here. personally I think it fits in our story of erroring in 2018 for some obscure things</p>",
        "id": 134314914,
        "sender_full_name": "eddyb",
        "timestamp": 1537455678
    },
    {
        "content": "<p>e.g., enable said checks in Rust 2018?</p>",
        "id": 134314923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455691
    },
    {
        "content": "<p>but do we do them in Rust 2015 too?</p>",
        "id": 134314933,
        "sender_full_name": "eddyb",
        "timestamp": 1537455699
    },
    {
        "content": "<p>I'm okay with it being edition dependent.</p>",
        "id": 134314950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455712
    },
    {
        "content": "<p>I think we were saying:</p>\n<ul>\n<li>Error in Rust 2018</li>\n<li>Warning in Rust 2015 (possibly a future-compat warning)</li>\n</ul>",
        "id": 134314951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455714
    },
    {
        "content": "<p>I feel like that got said at some point</p>",
        "id": 134314956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455719
    },
    {
        "content": "<p>it seems to make sense to me</p>",
        "id": 134315005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455731
    },
    {
        "content": "<p>is the motivation for doing the error in edition 2015  ... to ease future porting to 2018?</p>",
        "id": 134315008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455734
    },
    {
        "content": "<p>future-compat should be fine as there are only 2 regressions in obscure crates AFAICT</p>",
        "id": 134315012,
        "sender_full_name": "eddyb",
        "timestamp": 1537455735
    },
    {
        "content": "<blockquote>\n<p>is the motivation for doing the error in edition 2015  ... to ease future porting to 2018?</p>\n</blockquote>\n<p>yes, but also because it's misleading</p>",
        "id": 134315025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455752
    },
    {
        "content": "<p>the motivation is type-system related, and soundness if we try to do anything clever</p>",
        "id": 134315029,
        "sender_full_name": "eddyb",
        "timestamp": 1537455756
    },
    {
        "content": "<p>(okay yes of course there are other motivations)</p>",
        "id": 134315041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455774
    },
    {
        "content": "<p>that is, even if there are things we can keep a warning forever/until 2021, there are subtle details that have worse implications and also have almost no regressions when fixing them</p>",
        "id": 134315055,
        "sender_full_name": "eddyb",
        "timestamp": 1537455787
    },
    {
        "content": "<p>that is, the bounds are just invalid as-written, instead of the usual missing bounds</p>",
        "id": 134315072,
        "sender_full_name": "eddyb",
        "timestamp": 1537455810
    },
    {
        "content": "<p>I think we should make it a future-compat warning, personally, since I would like to stake the claim that this is a bug :P</p>",
        "id": 134315075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455812
    },
    {
        "content": "<p>I agree</p>",
        "id": 134315079,
        "sender_full_name": "eddyb",
        "timestamp": 1537455819
    },
    {
        "content": "<p>(but one we may or may not ever <em>fix</em> in Rust 2015)</p>",
        "id": 134315086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455826
    },
    {
        "content": "<p>was requiring enough bounds going to be enabled for 2018 as well?<br>\nor just denying too many?</p>",
        "id": 134315141,
        "sender_full_name": "varkor",
        "timestamp": 1537455845
    },
    {
        "content": "<p>if we fix it, it allows us the \"implied bounds\" interpretation</p>",
        "id": 134315146,
        "sender_full_name": "eddyb",
        "timestamp": 1537455848
    },
    {
        "content": "<p>So what i'm hearing is: We can do future-compat warning now, and potentially change edition-2015 behavior in a future release. And we make it hard error for edtion-2018, as planned</p>",
        "id": 134315161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455877
    },
    {
        "content": "<p>which is, IMO, enough to cover switching to check-type-aliases-at-use-sites in the future on all editions</p>",
        "id": 134315162,
        "sender_full_name": "eddyb",
        "timestamp": 1537455879
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> on 2018, denying too-many only (plus cases like the one discussed right now) - not-enough has 400 regressions with no hope of automatically migrating them. and many of those crates have dependents</p>",
        "id": 134315190,
        "sender_full_name": "eddyb",
        "timestamp": 1537455927
    },
    {
        "content": "<p>okay and I think <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> is also on board for plan as I summarized it?</p>",
        "id": 134315199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455941
    },
    {
        "content": "<p>yupp, it seems we're in agreement</p>",
        "id": 134315213,
        "sender_full_name": "eddyb",
        "timestamp": 1537455957
    },
    {
        "content": "<p>(nominated it to double-check that we can carve off this special case from the main warning/ignore case with 400 regressions)</p>",
        "id": 134315269,
        "sender_full_name": "eddyb",
        "timestamp": 1537455984
    },
    {
        "content": "<p>we're 6 minutes over time but I'd like to try to power through the remaining nominatins</p>",
        "id": 134315270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455985
    },
    {
        "content": "<p>I have to run now, but I feel a bit unsure about the situation re: \"too few bounds\" for Rust 2018</p>",
        "id": 134315274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537455991
    },
    {
        "content": "<p>sadly I nominated another thing</p>",
        "id": 134315277,
        "sender_full_name": "eddyb",
        "timestamp": 1537455994
    },
    {
        "content": "<p>next one is: \"Compiler panic using 'static_assertions'\" <a href=\"https://github.com/rust-lang/rust/issues/54327\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54327\">#54327</a></p>",
        "id": 134315280,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537455996
    },
    {
        "content": "<p>/me will stay a few more</p>",
        "id": 134315283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456001
    },
    {
        "content": "<p>I don't think this needed to be nominated</p>",
        "id": 134315295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456016
    },
    {
        "content": "<p>but .. why iddn't I see it during ... oh we hadn't looked at stable-to-stable regressions yet</p>",
        "id": 134315316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456046
    },
    {
        "content": "<p>well, it needs a P- tag.</p>",
        "id": 134315318,
        "sender_full_name": "nagisa",
        "timestamp": 1537456049
    },
    {
        "content": "<p>and the people doing tagging didn't use P-high, okay yes</p>",
        "id": 134315321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456057
    },
    {
        "content": "<p>seems P-high to me</p>",
        "id": 134315327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456067
    },
    {
        "content": "<p>yeah I suppose so</p>",
        "id": 134315328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456071
    },
    {
        "content": "<p>lets move on</p>",
        "id": 134315386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456119
    },
    {
        "content": "<p>i nominated \"NLL: disallow creation of immediately unusable variables\" <a href=\"https://github.com/rust-lang/rust/issues/54188\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54188\">#54188</a></p>",
        "id": 134315395,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456140
    },
    {
        "content": "<p>but I'm going to skip it</p>",
        "id": 134315398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456143
    },
    {
        "content": "<p>the intention was to discuss the broad issue of how PR authors should delegate investigation of errors that solely arise due to e.g. code-gen units linker issues</p>",
        "id": 134315422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456177
    },
    {
        "content": "<p>but in this case the PR was actually <em>relevant</em> to why the test started failing</p>",
        "id": 134315428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456196
    },
    {
        "content": "<p>(the aforementioned bug <a href=\"https://github.com/rust-lang/rust/issues/54388\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54388\">#54388</a> )</p>",
        "id": 134315475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456209
    },
    {
        "content": "<p>I <em>would</em> like to have a discussion about this, but I don't want to take time for it now</p>",
        "id": 134315488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456235
    },
    {
        "content": "<p>we can do it asynchronously</p>",
        "id": 134315490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456240
    },
    {
        "content": "<p>last nominated issue: \"Report const eval error inside the query\" <a href=\"https://github.com/rust-lang/rust/issues/53821\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53821\">#53821</a></p>",
        "id": 134315542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> you want to take over now?</p>",
        "id": 134315555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456324
    },
    {
        "content": "<p>okay, so, is <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>  around?</p>",
        "id": 134315604,
        "sender_full_name": "eddyb",
        "timestamp": 1537456349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> and <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> have been working on this refactor of miri error reporting so it happens during const-eval instead of by whatever invoked const-eval</p>",
        "id": 134315635,
        "sender_full_name": "eddyb",
        "timestamp": 1537456393
    },
    {
        "content": "<p>which is fine, but there are behavioral changes and potentially backwards-incompat regressions coming out of it</p>",
        "id": 134315644,
        "sender_full_name": "eddyb",
        "timestamp": 1537456414
    },
    {
        "content": "<p>so when <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> wrote:</p>\n<blockquote>\n<p>Functional changes: We no longer warn about bad constants embedded in unused types. This relied on being able to report just a warning, not a hard error on that case, which we cannot do any more now that error reporting is consistently centralized.</p>\n</blockquote>\n<p>they mean that we now error</p>",
        "id": 134315648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> what’s the distinction?</p>",
        "id": 134315649,
        "sender_full_name": "nagisa",
        "timestamp": 1537456421
    },
    {
        "content": "<p>as opposed to doing <em>nothing</em></p>",
        "id": 134315653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> some places chose to warn, some places to error, but everything errors now</p>",
        "id": 134315662,
        "sender_full_name": "eddyb",
        "timestamp": 1537456440
    },
    {
        "content": "<p>(right?)</p>",
        "id": 134315713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456451
    },
    {
        "content": "<p>hmm</p>",
        "id": 134315716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456454
    },
    {
        "content": "<p>I mean what’s the distinction between &gt; so it happens during const-eval instead of by whatever invoked const-eval</p>",
        "id": 134315717,
        "sender_full_name": "nagisa",
        "timestamp": 1537456454
    },
    {
        "content": "<p>how hard would it be to buffer the errors and downgrade them when appropriate?</p>",
        "id": 134315731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> some places reported the error as a warning, instead. now it's always an error</p>",
        "id": 134315734,
        "sender_full_name": "eddyb",
        "timestamp": 1537456476
    },
    {
        "content": "<p>ain’t const eval gonna be invoked by many things at all points in the compiler anyway?</p>",
        "id": 134315740,
        "sender_full_name": "nagisa",
        "timestamp": 1537456477
    },
    {
        "content": "<p>(as we did in NLL)</p>",
        "id": 134315746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> that's what is being refactored away</p>",
        "id": 134315756,
        "sender_full_name": "eddyb",
        "timestamp": 1537456493
    },
    {
        "content": "<p>that ... doesn't sound like \"refactoring\" to me...</p>",
        "id": 134315775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456508
    },
    {
        "content": "<p>but killing off functionality is fact-of-life at times</p>",
        "id": 134315782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456522
    },
    {
        "content": "<p>one thing to keep in mind is that we should try to fit this into the <code>type</code> alias story</p>",
        "id": 134315791,
        "sender_full_name": "eddyb",
        "timestamp": 1537456530
    },
    {
        "content": "<p>was the previous functionality actually useful, or just a side effect of the implementation?</p>",
        "id": 134315804,
        "sender_full_name": "varkor",
        "timestamp": 1537456555
    },
    {
        "content": "<p>because always erroring seems like a good idea</p>",
        "id": 134315845,
        "sender_full_name": "varkor",
        "timestamp": 1537456566
    },
    {
        "content": "<p>one way I thought about conceptualizing it is:<br>\n<code>type Foo = [u8; 0 - 1]</code> should always error, because the constant doesn't depend on how <code>Foo</code> is used - <code>Foo</code> just <em>can't</em> be used</p>",
        "id": 134315856,
        "sender_full_name": "eddyb",
        "timestamp": 1537456588
    },
    {
        "content": "<p>but if its an artifact of e.g. macro-generated code</p>",
        "id": 134315884,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456622
    },
    {
        "content": "<p>and we should extend this to other things, not just constants, e.g. <code>type Foo = Vec&lt;str&gt;;</code> (working on a PR atm, to crater this hypothesis)</p>",
        "id": 134315886,
        "sender_full_name": "eddyb",
        "timestamp": 1537456624
    },
    {
        "content": "<p>then its expected that, sure, it can't be used...</p>",
        "id": 134315892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456632
    },
    {
        "content": "<p>interesting, good point!</p>",
        "id": 134315898,
        "sender_full_name": "eddyb",
        "timestamp": 1537456647
    },
    {
        "content": "<p>(Don't get me wrong, I'm in principle in favor of an error. But it seems a shame if it injects regressions...)</p>",
        "id": 134315909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456668
    },
    {
        "content": "<p>is it a silly/impossible idea to give more leeway to code generated by macros than user-written code?</p>",
        "id": 134315965,
        "sender_full_name": "varkor",
        "timestamp": 1537456704
    },
    {
        "content": "<p>have we cratered this PR, at least?</p>",
        "id": 134315968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456709
    },
    {
        "content": "<blockquote>\n<p>is it a silly/impossible idea to give more leeway to code generated by macros than user-written code?</p>\n</blockquote>\n<p>I would rather not.</p>",
        "id": 134315976,
        "sender_full_name": "nagisa",
        "timestamp": 1537456718
    },
    {
        "content": "<p>because there are other places bad practices are permitted because of macros</p>",
        "id": 134315982,
        "sender_full_name": "varkor",
        "timestamp": 1537456727
    },
    {
        "content": "<blockquote>\n<p>is it a silly/impossible idea to give more leeway to code generated by macros than user-written code?</p>\n</blockquote>\n<p>I feel like the way we do that is to issue warnings</p>",
        "id": 134315984,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456730
    },
    {
        "content": "<p>I'm not sufficiently familiar with the architecture to understand: Can we not feed in more context into the MIRI interpreter saying it should warn instead of error?</p>",
        "id": 134315996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456743
    },
    {
        "content": "<p>(which macros can silence)</p>",
        "id": 134315998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456744
    },
    {
        "content": "<p>I gotta go though</p>",
        "id": 134316002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537456749
    },
    {
        "content": "<p>the PR is not cratered :(</p>",
        "id": 134316007,
        "sender_full_name": "eddyb",
        "timestamp": 1537456758
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> wants to push it through because he wants to make changes that would otherwise conflict, after it lands...</p>",
        "id": 134316019,
        "sender_full_name": "eddyb",
        "timestamp": 1537456781
    },
    {
        "content": "<p>it would only take a day to <code>check</code> crater run</p>",
        "id": 134316067,
        "sender_full_name": "varkor",
        "timestamp": 1537456806
    },
    {
        "content": "<p>okay, what scenarios does this change affect?</p>",
        "id": 134316103,
        "sender_full_name": "nagisa",
        "timestamp": 1537456845
    },
    {
        "content": "<p>hi there, what's the question?</p>",
        "id": 134316104,
        "sender_full_name": "RalfJ",
        "timestamp": 1537456845
    },
    {
        "content": "<p>I think we may want to resolve this asynchronously at this point, as I have to leave as well</p>",
        "id": 134316119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456859
    },
    {
        "content": "<p>maybe lets change to a dedicated topic for this</p>",
        "id": 134316146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456890
    },
    {
        "content": "<p>yeah</p>",
        "id": 134316151,
        "sender_full_name": "eddyb",
        "timestamp": 1537456897
    },
    {
        "content": "<p>okay then I better make that phone call first</p>",
        "id": 134316208,
        "sender_full_name": "RalfJ",
        "timestamp": 1537456928
    },
    {
        "content": "<p>(shifted to topic: <a href=\"#narrow/stream/131828-t-compiler/subject/.2353821.20.20Report.20const.20eval.20error.20inside.20the.20query/near/134316202\" title=\"#narrow/stream/131828-t-compiler/subject/.2353821.20.20Report.20const.20eval.20error.20inside.20the.20query/near/134316202\">\"#53821 Report const eval error inside the query\"</a> )</p>",
        "id": 134316231,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537456963
    }
]