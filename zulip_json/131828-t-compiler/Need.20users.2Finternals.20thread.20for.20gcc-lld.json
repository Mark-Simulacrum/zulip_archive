[
    {
        "content": "<p>Using rust-lld through gcc/clang on linux has finally been implemented, someone needs to make the usual thread on internals/users asking users to test it out and provide feedback on how it affects build times in various configurations (and then we can all spread that thread around). I'm a bit too out of the loop to write up good instructions for what configs to test and how to measure the perf, so ideally someone else here can?</p>\n<p>context here: <a href=\"https://github.com/rust-lang/rust/issues/71515#issuecomment-875257289\">https://github.com/rust-lang/rust/issues/71515#issuecomment-875257289</a></p>",
        "id": 245177775,
        "sender_full_name": "Gankra",
        "timestamp": 1625663990
    },
    {
        "content": "<p><del>Is there any way to check that the flag is working?</del> Welp, <code>-Z gcc-ld=lld</code> works and <code>-Z gcc-ld=lld2</code> fails for me on Arch when building <code>rust-analyzer</code> (which is arguably an easy case).</p>",
        "id": 245178266,
        "sender_full_name": "Laurențiu",
        "timestamp": 1625664211
    },
    {
        "content": "<p>oh i suppose you'd also want to include instructions for printing what linker rust is defaulting to for the non-lld path</p>",
        "id": 245184015,
        "sender_full_name": "Gankra",
        "timestamp": 1625666294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"137587\">@Gankra</span> Thank you so much for working on that! I'm excited that we're one step closer to being able to use lld out-of-the-box, and hopefully eventually by default.</p>",
        "id": 245196001,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1625670700
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> is that you volunteering? :)</p>",
        "id": 245198794,
        "sender_full_name": "Gankra",
        "timestamp": 1625671827
    },
    {
        "content": "<p>Based on this thread I'd thought that <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu</span> was working on it.</p>",
        "id": 245199029,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1625671915
    },
    {
        "content": "<p>Nope, I just gave it a spin. But I was confused myself about that remark.</p>",
        "id": 245200616,
        "sender_full_name": "Laurențiu",
        "timestamp": 1625672482
    },
    {
        "content": "<p>I'm interested, but I don't have the bandwidth at the moment.</p>",
        "id": 245204229,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1625674013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> is this something you'd be interested in? i seem to recall you being an early champion of this effort.</p>",
        "id": 245206699,
        "sender_full_name": "Gankra",
        "timestamp": 1625675182
    },
    {
        "content": "<p>I'm very willing to put out the call for broader testing, but I need to figure out the exact steps that we should ask people to try. and it looks like from the issues thread that there might be some remaining issues</p>",
        "id": 245217356,
        "sender_full_name": "bstrie",
        "timestamp": 1625680102
    },
    {
        "content": "<p>Are we currently shipping LLD in any capacity, or will users need to get it themselves?</p>",
        "id": 245217599,
        "sender_full_name": "bstrie",
        "timestamp": 1625680230
    },
    {
        "content": "<p>We're shipping an lld as rust-lld, and the thing that was recently implemented was the way to use that.</p>",
        "id": 245217777,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1625680320
    },
    {
        "content": "<p>Last I recall, we ship a rust-lld binary by default, although if you're using a rustc from your distro it will be a symlink to the system lld -- but only nightlies from ~this week have all the relevant patches</p>",
        "id": 245217824,
        "sender_full_name": "Gankra",
        "timestamp": 1625680328
    },
    {
        "content": "<p>still fuzzy on what's up with macos -- focus on linux for now</p>",
        "id": 245217898,
        "sender_full_name": "Gankra",
        "timestamp": 1625680367
    },
    {
        "content": "<p>I'm fine with forcing testers to use nightly, I just don't want to force them to build rustc or LLVM, and I also would prefer to have a single source for them to grab LLD from to minimize version differences</p>",
        "id": 245218118,
        "sender_full_name": "bstrie",
        "timestamp": 1625680468
    },
    {
        "content": "<p>is rust-lld a rustup component or does every nightly build already have it?</p>",
        "id": 245218156,
        "sender_full_name": "bstrie",
        "timestamp": 1625680492
    },
    {
        "content": "<p>shipped by default, no extra steps</p>",
        "id": 245218186,
        "sender_full_name": "Gankra",
        "timestamp": 1625680511
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> linked me here from github.</p>",
        "id": 245218326,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1625680579
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"351526\">@Kevin Tran</span> thanks for coming! I'm trying to figure out a concrete set of steps that we can have users follow in order to give feedback about the implementation</p>",
        "id": 245218422,
        "sender_full_name": "bstrie",
        "timestamp": 1625680633
    },
    {
        "content": "<p>I tried compiling with a stage1 toolchain on a pure-Rust project with using the rustflags <code>-Z gcc-ld=lld</code>, which compiled successfully (a bit hard to tell if it's really using lld though). Currently, <code>-Z gcc-ld</code> only supports the option <code>lld</code>, which uses the provided <code>rust-lld</code>, copied into its own path. I built my stage1 toolchain using the \"codegen\" profile, because otherwise, <code>rust-lld</code> was missing (I think that builds LLVM on my own machine instead of gettiing it from CI?).</p>",
        "id": 245218681,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1625680766
    },
    {
        "content": "<p>I want to avoid asking anyone to build rustc themselves. I can confirm that <code>rustc +nightly -Z gcc-ld=lld linktest.rs</code> produces a functioning executable. let me poke around to figure out if I can get confidence that it's actually invoking lld and not ld</p>",
        "id": 245219595,
        "sender_full_name": "bstrie",
        "timestamp": 1625681165
    },
    {
        "content": "<p>obviously instructions that would work with cargo are ideal -- on macos i seem to get better results using <code>cargo rustc</code> and not <code>RUSTFLAGS</code>, but again, don't have link</p>",
        "id": 245220043,
        "sender_full_name": "Gankra",
        "timestamp": 1625681376
    },
    {
        "content": "<p>I think the official dist builds ship rust-lld in at least some configurations and it should be easy enough to do so in more configurations</p>",
        "id": 245220051,
        "sender_full_name": "simulacrum",
        "timestamp": 1625681380
    },
    {
        "content": "<p>*don't have linux</p>",
        "id": 245220053,
        "sender_full_name": "Gankra",
        "timestamp": 1625681382
    },
    {
        "content": "<p>for a hello world I don't mind using rustc directly, less to get in the way. I expect we'll give people a few commands of increasing complexity to run</p>",
        "id": 245220285,
        "sender_full_name": "bstrie",
        "timestamp": 1625681505
    },
    {
        "content": "<p>also I only have a debian box right now, but hopefully that's mostly the same as ubuntu</p>",
        "id": 245220366,
        "sender_full_name": "bstrie",
        "timestamp": 1625681530
    },
    {
        "content": "<p>i was assuming this was solid enough that we'd be more interested in perf numbers for real projects, but fair enough</p>",
        "id": 245220375,
        "sender_full_name": "Gankra",
        "timestamp": 1625681534
    },
    {
        "content": "<p>yeah probably</p>",
        "id": 245220405,
        "sender_full_name": "Gankra",
        "timestamp": 1625681554
    },
    {
        "content": "<p>I know the issues specifies ubuntu but I have no idea what part of this would actually be ubuntu-specific</p>",
        "id": 245220473,
        "sender_full_name": "bstrie",
        "timestamp": 1625681597
    },
    {
        "content": "<p>the ubuntu constraint is just to give a focus, obviously we want it to work everywhere ultimately</p>",
        "id": 245220633,
        "sender_full_name": "Gankra",
        "timestamp": 1625681677
    },
    {
        "content": "<p>it's good to see if we work on other distros For Free</p>",
        "id": 245220675,
        "sender_full_name": "Gankra",
        "timestamp": 1625681699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> Testing the nightly toolchain is annoying, since I have to wait for my PR to get merged and the nightly to come out. Is there a way to get a shorter feedback loop?</p>",
        "id": 245220690,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1625681706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"351526\">@Kevin Tran</span> it's fine to test locally like that, but by now that latest nightly should have all your changes</p>",
        "id": 245220762,
        "sender_full_name": "Gankra",
        "timestamp": 1625681738
    },
    {
        "content": "<p>Ideally I wouldn't put out a call for testing until we were confident that people would have success using it</p>",
        "id": 245220797,
        "sender_full_name": "bstrie",
        "timestamp": 1625681754
    },
    {
        "content": "<p>or if not success, at least interesting failures :)</p>",
        "id": 245220867,
        "sender_full_name": "bstrie",
        "timestamp": 1625681773
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> basically the constraint to Ubuntu is for:<br>\nA) allowing ourselves to not care about someone with an ancient gcc/clang<br>\nB) allowing ourselves to not care about some deeply cursed custom environment<br>\n(to start)</p>",
        "id": 245221129,
        "sender_full_name": "Gankra",
        "timestamp": 1625681886
    },
    {
        "content": "<p>that's a good point, we should have a predetermined list of questions to ask people who might hit failures, and their gcc version is one of those</p>",
        "id": 245221274,
        "sender_full_name": "bstrie",
        "timestamp": 1625681972
    },
    {
        "content": "<p>i recommend some kind of list of commands to run upfront -- cargo -V, cc -V, etc</p>",
        "id": 245221371,
        "sender_full_name": "Gankra",
        "timestamp": 1625682008
    },
    {
        "content": "<p>Unfortunately it seems <code>-Z gcc-ld=lld</code> doesn't work on my machine when I use the current nightly rustup toolchain. A problem is that I'm not actually using Ubuntu, but rather \"some deeply cursed custom environment\", so it is a bit hard to tell if what I'm doing would actually work on Ubuntu. This effort is my first dive into the guts of rustc, so I'm feeling a bit out of my depth.</p>",
        "id": 245223853,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1625683055
    },
    {
        "content": "<p>what's a good way to isolate the link phase for cleaner timing data? have people run <code>cargo check</code> first, then <code>cargo build</code> after?</p>",
        "id": 245228007,
        "sender_full_name": "bstrie",
        "timestamp": 1625684893
    },
    {
        "content": "<p><code>cargo rustc -- -Ztime-passes | grep run_linker</code> should work.</p>",
        "id": 245228162,
        "sender_full_name": "bjorn3",
        "timestamp": 1625684983
    },
    {
        "content": "<p>with maybe a <code>touch src/main.rs</code> first, so it can be run in a loop.</p>",
        "id": 245228248,
        "sender_full_name": "bjorn3",
        "timestamp": 1625685019
    },
    {
        "content": "<p><code>for i in $(seq 0 10); do touch src/main.rs; cargo rustc -- -Ztime-passes 2&gt;/dev/null | grep run_linker; done</code></p>",
        "id": 245228456,
        "sender_full_name": "bjorn3",
        "timestamp": 1625685141
    },
    {
        "content": "<p>presumably I can use <code>cargo rustc -- -Z gcc-ld=lld</code>, rather than RUSTFLAGS? I.e. there's no reason that the choice of linker would affect compiling the deps</p>",
        "id": 245228900,
        "sender_full_name": "bstrie",
        "timestamp": 1625685373
    },
    {
        "content": "<p>ooh time-passes has fancier output these days</p>",
        "id": 245229311,
        "sender_full_name": "bstrie",
        "timestamp": 1625685603
    },
    {
        "content": "<p>It would affect build scripts, dylibs and proc-macros, but those aren't measured by my command either.</p>",
        "id": 245231113,
        "sender_full_name": "bjorn3",
        "timestamp": 1625686432
    },
    {
        "content": "<p>good point, I'd like to make sure we see the impact of e.g. serde usage with lld</p>",
        "id": 245232474,
        "sender_full_name": "bstrie",
        "timestamp": 1625687063
    },
    {
        "content": "<p>Ok, I've managed to run it on nightly, albeit from a distro package and not from rustup, and compiling a pure-Rust project using cargo works. It's probably just my distro being deeply cursed.</p>\n<p>Edit: I made a docker container running debian, and compiling a pure-Rust project seems to work.<br>\nEdit: I used inotifywait to check that the bundled lld was being opened during compilation.</p>",
        "id": 245436084,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1625833724
    },
    {
        "content": "<p>I'm pretty sure it should work, it was just my distro. <span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> <span class=\"user-mention\" data-user-id=\"137587\">@Gankra</span></p>",
        "id": 245561718,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1625937415
    },
    {
        "content": "<p>cool, my goal today is to have a draft of a call to action. I'll post it here for feedback before I actually make the internals/users threads</p>",
        "id": 245561740,
        "sender_full_name": "bstrie",
        "timestamp": 1625937471
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> how's the call to action going?</p>",
        "id": 246384406,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1626622118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> Any updates? I've been using <code>-Z gcc-ld=lld</code> on my pure-Rust projects for a bit and everything seems fine.</p>",
        "id": 247812796,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1627748690
    },
    {
        "content": "<p>oh sorry yes, this completely fell of my radar! I've been crushed for work, I'm still interested in posting the announcement although I might not get to it for a few days</p>",
        "id": 247812880,
        "sender_full_name": "bstrie",
        "timestamp": 1627748811
    }
]