[
    {
        "content": "<p>Hey, noob question, here.  I have this PR: <a href=\"https://github.com/rust-lang/rust/pull/79000\">https://github.com/rust-lang/rust/pull/79000</a>   It's been approved, it's passed everything, etc. Do I need to do something to trigger merging it?</p>",
        "id": 217957848,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1606354488
    },
    {
        "content": "<p>It looks like it needs to be approved again. You lose the \"r+'d\" status when you push more commits into the PR.</p>",
        "id": 217958014,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606354723
    },
    {
        "content": "<p>Ah, ok.</p>",
        "id": 217958023,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1606354742
    },
    {
        "content": "<p>I r+'d again.</p>",
        "id": 217958215,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606355002
    },
    {
        "content": "<blockquote>\n<p>Changing find_best_match_for_name to be non-generic removed about 10KB of code from the optimized binary.</p>\n</blockquote>\n<p>That's awesome <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 217958226,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606355030
    },
    {
        "content": "<p>Ha, yup. I'm working on getting stats on other large dup'd functions, especially dup'd cold functions, that could easily be converted to use trait objects or other obvious things. There's really no good reason for <code>rustc</code> to be 130 MB.</p>",
        "id": 217958297,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1606355104
    },
    {
        "content": "<p>Heh no wonder codegen takes so long! I didn't realize it was that large</p>",
        "id": 217958388,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606355228
    },
    {
        "content": "<p>What happens after that?  It's not that this change is super-important -- I'm just curious how the process works.</p>",
        "id": 217958626,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1606355610
    },
    {
        "content": "<p>Once the PR is approved (r+'d not GitHub code review approved), it goes into the bors queue. Bors tests the pr on a bunch of platforms and if it passes then bors automatically merges the pr. If another pr merges before yours and causes merge conflicts, bors will also leave a comment saying it can no longer merge the pr and you'll need to rebase it.</p>",
        "id": 217958770,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606355775
    },
    {
        "content": "<p>You can see the current queue here: <a href=\"https://bors.rust-lang.org/queue/rust\">https://bors.rust-lang.org/queue/rust</a></p>",
        "id": 217958777,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606355796
    },
    {
        "content": "<p>Right now we're in a \"tree closed\" state because there are CI issues so there's no point running builds until that's resolved.</p>",
        "id": 217958779,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606355820
    },
    {
        "content": "<p>Once that's fixed the tree will be open again and bors will start testing and merging PRs starting at the top of the queue.</p>",
        "id": 217958788,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1606355851
    },
    {
        "content": "<p>Woot, thanks for the explanation.</p>",
        "id": 217958862,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1606355998
    },
    {
        "content": "<blockquote>\n<p>Certainly. I thought GitHub handled that as one of its forms of committing? I know ADO does, but I just assumed GH did, too.</p>\n</blockquote>\n<p>GitHub and the review bots _can_ squash the commits, but there's no way for them to figure out if it makes sense to leave the history intact or squash it (there's plenty of reasons to have multiple commits in a PR).</p>",
        "id": 217971564,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1606375212
    },
    {
        "content": "<p>see also <a href=\"https://github.com/rust-lang/triagebot/issues/821\">https://github.com/rust-lang/triagebot/issues/821</a></p>",
        "id": 218003666,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606398711
    }
]