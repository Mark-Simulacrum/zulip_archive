[
    {
        "content": "<p>I just had to write some code <a href=\"https://github.com/rust-lang/rust/pull/79312/files?diff=unified&amp;w=1#diff-384affc1b4190940f114f3fcebbf969e7e18657a71ef9001da6b223a036687d9R2010\">like this</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">trait_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">items</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">for_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsafety</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">generics</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">impl_</span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">hir</span>::<span class=\"n\">ItemKind</span>::<span class=\"n\">Impl</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">of_trait</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">items</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">self_ty</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsafety</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">generics</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">of_trait</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">items</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">self_ty</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">unsafety</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">generics</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"o\">!</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This is really painful to work with and until <a href=\"https://github.com/rust-lang/rfcs/pull/2593\">https://github.com/rust-lang/rfcs/pull/2593</a> lands I don't think there's a way to make it nicer. What do you think about adding a <code>hir::Impl</code> struct that lets you use the fields as named parameters, so you don't have to repeat the names 3 times? The only downside I see is it might be confusing with <code>ImplItem</code>, but we could document that.</p>",
        "id": 217563940,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606070685
    },
    {
        "content": "<p>that would also let me get rid of the <code>unreachable!</code> branch</p>",
        "id": 217563960,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606070715
    },
    {
        "content": "<p>Cc <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> </p>\n<p>Do other ItemKind variants have struct fields?</p>",
        "id": 217566672,
        "sender_full_name": "simulacrum",
        "timestamp": 1606074504
    },
    {
        "content": "<p>Seems like at least some do</p>",
        "id": 217566690,
        "sender_full_name": "simulacrum",
        "timestamp": 1606074545
    },
    {
        "content": "<p>I think it should be fine to do so.</p>",
        "id": 217566693,
        "sender_full_name": "simulacrum",
        "timestamp": 1606074552
    },
    {
        "content": "<p>nice, I'll work on that</p>",
        "id": 217566696,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606074565
    },
    {
        "content": "<p>(once I finish putting out <a href=\"http://docs.rs\">docs.rs</a> fires)</p>",
        "id": 217566700,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606074577
    },
    {
        "content": "<p>Separate PR would be good</p>",
        "id": 217566701,
        "sender_full_name": "simulacrum",
        "timestamp": 1606074579
    },
    {
        "content": "<p>wow this took way longer than expected</p>",
        "id": 217574345,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606085191
    },
    {
        "content": "<p>lol it <em>already</em> has merge conflicts</p>",
        "id": 217574381,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606085282
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79322\">https://github.com/rust-lang/rust/pull/79322</a></p>",
        "id": 217574596,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606085605
    }
]