[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> is there an easy way to get a list of \"prelude crates\" which can be referenced without need of an <code>extern crate</code>?</p>",
        "id": 134763622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538071926
    },
    {
        "content": "<p>it's trivially computed in the resolve code. you might want to put it in the <code>Session</code></p>",
        "id": 134763652,
        "sender_full_name": "eddyb",
        "timestamp": 1538071971
    },
    {
        "content": "<p>it's <code>core</code>, <code>std</code>, <code>meta</code>, plus all the names in <code>--extern</code></p>",
        "id": 134763660,
        "sender_full_name": "eddyb",
        "timestamp": 1538071979
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/c9865b1c37f8cb8a257591e6ea0b32a5df1f3d41/src/librustc_resolve/lib.rs#L1666-L1675\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/c9865b1c37f8cb8a257591e6ea0b32a5df1f3d41/src/librustc_resolve/lib.rs#L1666-L1675\">https://github.com/rust-lang/rust/blob/c9865b1c37f8cb8a257591e6ea0b32a5df1f3d41/src/librustc_resolve/lib.rs#L1666-L1675</a></p>",
        "id": 134763695,
        "sender_full_name": "eddyb",
        "timestamp": 1538072022
    },
    {
        "content": "<p>OK, I'm asking because of <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>'s PR, which is <a href=\"https://github.com/rust-lang/rust/pull/54603#discussion_r221025204\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54603#discussion_r221025204\">special casing the std name</a> — I think because of the <code>exern crate std</code> that we insert in the prelude.</p>",
        "id": 134763818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072127
    },
    {
        "content": "<p>It seems like the \"general\" form of this check is to look for those crates that are in the prelude</p>",
        "id": 134763825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072138
    },
    {
        "content": "<p>I looked for a while to see if I could find anything that did that and couldn't find anything.</p>",
        "id": 134763970,
        "sender_full_name": "davidtwco",
        "timestamp": 1538072269
    },
    {
        "content": "<p><code>rustc_resolve</code> is the only place that needs it to do its job, heh</p>",
        "id": 134764020,
        "sender_full_name": "eddyb",
        "timestamp": 1538072286
    },
    {
        "content": "<p>(as in, I looked for some function or property somewhere that I could call to check if a <code>CrateNum</code> was from the prelude)</p>",
        "id": 134764048,
        "sender_full_name": "davidtwco",
        "timestamp": 1538072325
    },
    {
        "content": "<p>aaah</p>",
        "id": 134764081,
        "sender_full_name": "eddyb",
        "timestamp": 1538072351
    },
    {
        "content": "<p>you can check if you can access a name directly, but not that a <code>CrateNum</code> relates to that</p>",
        "id": 134764107,
        "sender_full_name": "eddyb",
        "timestamp": 1538072380
    },
    {
        "content": "<p>it's kind of a tricky thing overall</p>",
        "id": 134764108,
        "sender_full_name": "eddyb",
        "timestamp": 1538072384
    },
    {
        "content": "<p>depends how accurate you want to get</p>",
        "id": 134764112,
        "sender_full_name": "eddyb",
        "timestamp": 1538072390
    },
    {
        "content": "<p>also <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I just filed <a href=\"https://github.com/rust-lang/rust/issues/54618\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54618\">#54618</a> — namely that we ought to search prelude crates for traits that offer the methods the user was trying to call</p>",
        "id": 134764191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072423
    },
    {
        "content": "<p>no idea how hard that's going to be though</p>",
        "id": 134764196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072429
    },
    {
        "content": "<p>okay, so, <code>rustc_resolve</code> already has code for that too</p>",
        "id": 134764217,
        "sender_full_name": "eddyb",
        "timestamp": 1538072455
    },
    {
        "content": "<p>maybe we should speculatively load all of them and record the <code>CrateNum</code>s</p>",
        "id": 134764231,
        "sender_full_name": "eddyb",
        "timestamp": 1538072472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/rust/blob/c9865b1c37f8cb8a257591e6ea0b32a5df1f3d41/src/librustc_resolve/lib.rs#L4404-L4408\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/c9865b1c37f8cb8a257591e6ea0b32a5df1f3d41/src/librustc_resolve/lib.rs#L4404-L4408\">https://github.com/rust-lang/rust/blob/c9865b1c37f8cb8a257591e6ea0b32a5df1f3d41/src/librustc_resolve/lib.rs#L4404-L4408</a></p>",
        "id": 134764267,
        "sender_full_name": "eddyb",
        "timestamp": 1538072514
    },
    {
        "content": "<p>note the <code>maybe_</code> in the name - that won't produce an user error if the crate can't be loaded</p>",
        "id": 134764325,
        "sender_full_name": "eddyb",
        "timestamp": 1538072540
    },
    {
        "content": "<p>I remembered the code for this from my last PR that was predominantly in <code>rustc_resolve</code>, but couldn't see a way to access that stuff from where ever this change took place.</p>",
        "id": 134764331,
        "sender_full_name": "davidtwco",
        "timestamp": 1538072545
    },
    {
        "content": "<blockquote>\n<p>maybe we should speculatively load all of them and record the <code>CrateNum</code>s</p>\n</blockquote>\n<p>well, I <em>think</em> we only want to do that in the case of a compilation error?</p>",
        "id": 134764340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072555
    },
    {
        "content": "<p>I just remember people were concerned about side effects</p>",
        "id": 134764346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072561
    },
    {
        "content": "<p>I think due to linking or something though</p>",
        "id": 134764353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072565
    },
    {
        "content": "<p>so I guess cache it in <code>Session</code>?</p>",
        "id": 134764354,
        "sender_full_name": "eddyb",
        "timestamp": 1538072570
    },
    {
        "content": "<p>(and compute it on-demand)</p>",
        "id": 134764363,
        "sender_full_name": "eddyb",
        "timestamp": 1538072582
    },
    {
        "content": "<p>actually, it should be cheap to get the crates if they were loaded already, so, nvm, you can just do this on every error and be fine</p>",
        "id": 134764392,
        "sender_full_name": "eddyb",
        "timestamp": 1538072602
    },
    {
        "content": "<p>man I wish the query system went back that far</p>",
        "id": 134764397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072608
    },
    {
        "content": "<p>just put it somewhere central for convenience</p>",
        "id": 134764402,
        "sender_full_name": "eddyb",
        "timestamp": 1538072615
    },
    {
        "content": "<p>\"feels like a query\"</p>",
        "id": 134764408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538072624
    },
    {
        "content": "<p>I wish I had nothing else to work on than pushing back the query system to parsing :P</p>",
        "id": 134764416,
        "sender_full_name": "eddyb",
        "timestamp": 1538072636
    },
    {
        "content": "<p>I have most of it planned out, I just... need to go do it</p>",
        "id": 134764465,
        "sender_full_name": "eddyb",
        "timestamp": 1538072652
    },
    {
        "content": "<p>I'm not sure I follow completely. If I've got a <code>CrateNum</code>, and I want to call some function to check whether it is from the prelude crates - I'm not quite understanding what change I'd need to make in order to do that lookup.</p>",
        "id": 134764744,
        "sender_full_name": "davidtwco",
        "timestamp": 1538072906
    },
    {
        "content": "<blockquote>\n<p>I wish I had nothing else to work on than pushing back the query system to parsing :P</p>\n</blockquote>\n<p>me too :)</p>",
        "id": 134765374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538073481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> hmm, I think that the code <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> pointed out would wind up giving a set of crate <strong>names</strong></p>",
        "id": 134765424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538073498
    },
    {
        "content": "<p>so I guess you'd have to check if the name of the crate with that crate num is in that set</p>",
        "id": 134765430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538073509
    },
    {
        "content": "<p>well, initially it's a set of names</p>",
        "id": 134765436,
        "sender_full_name": "eddyb",
        "timestamp": 1538073523
    },
    {
        "content": "<p>but if you use the last code I linked, you actually get a set of <code>CrateNum</code>s</p>",
        "id": 134765447,
        "sender_full_name": "eddyb",
        "timestamp": 1538073537
    },
    {
        "content": "<p>which is better, I think?</p>",
        "id": 134765451,
        "sender_full_name": "eddyb",
        "timestamp": 1538073542
    },
    {
        "content": "<p>seems better, yeah</p>",
        "id": 134765550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538073642
    },
    {
        "content": "<p>because it might matter <em>which</em> of several crates with the same name can <em>actually</em> be referred to in the current crate (i.e. what <code>--extern foo=...</code> makes it load, vs what's a dependency of other dependencies)</p>",
        "id": 134765694,
        "sender_full_name": "eddyb",
        "timestamp": 1538073772
    },
    {
        "content": "<p>So, the intention is to just save those from that point into something in <code>Session</code>?</p>",
        "id": 134765743,
        "sender_full_name": "davidtwco",
        "timestamp": 1538073807
    },
    {
        "content": "<p>not \"from that point\"</p>",
        "id": 134765756,
        "sender_full_name": "eddyb",
        "timestamp": 1538073822
    },
    {
        "content": "<p>you don't want <code>rustc_resolve</code> to have <em>any</em> side-effects like that</p>",
        "id": 134765765,
        "sender_full_name": "eddyb",
        "timestamp": 1538073831
    },
    {
        "content": "<p>instead, you want to move that code in a method on the <code>Session</code>, so it can be called from multiple places</p>",
        "id": 134765820,
        "sender_full_name": "eddyb",
        "timestamp": 1538073861
    },
    {
        "content": "<p>Ah, I see, sounds good. Thanks.</p>",
        "id": 134765868,
        "sender_full_name": "davidtwco",
        "timestamp": 1538073906
    },
    {
        "content": "<p>I've changed this with the most recent commit.</p>",
        "id": 134769033,
        "sender_full_name": "davidtwco",
        "timestamp": 1538077228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> does <a href=\"https://github.com/rust-lang/rust/pull/54603#issuecomment-425225158\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54603#issuecomment-425225158\">this failure</a> look spurious to you? - not sure what the most recent commit could have done to really break that. It passed tests locally.</p>",
        "id": 134772196,
        "sender_full_name": "davidtwco",
        "timestamp": 1538080637
    },
    {
        "content": "<p>sure does</p>",
        "id": 134772681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538081100
    },
    {
        "content": "<p>Cool, restarted that Travis job.</p>",
        "id": 134772737,
        "sender_full_name": "davidtwco",
        "timestamp": 1538081162
    },
    {
        "content": "<p>Huh, it happened again.</p>",
        "id": 134774102,
        "sender_full_name": "davidtwco",
        "timestamp": 1538082760
    },
    {
        "content": "<p>It doesn't seem to be happening locally.</p>",
        "id": 134774119,
        "sender_full_name": "davidtwco",
        "timestamp": 1538082810
    },
    {
        "content": "<p>well</p>",
        "id": 134774388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083100
    },
    {
        "content": "<p><em>actually</em></p>",
        "id": 134774389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083103
    },
    {
        "content": "<p>that same code <em>is</em> used in symbol name generation</p>",
        "id": 134774391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083107
    },
    {
        "content": "<p>which..is one of the things I now hate about it</p>",
        "id": 134774393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083113
    },
    {
        "content": "<p>also one of the things that is totally my fault</p>",
        "id": 134774399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083123
    },
    {
        "content": "<p>but never mind</p>",
        "id": 134774402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083129
    },
    {
        "content": "<p>so it is plausible that we have caused these errors</p>",
        "id": 134774409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083140
    },
    {
        "content": "<p>why it doesn't occur locally idk, are you building to stage2?</p>",
        "id": 134774415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083146
    },
    {
        "content": "<p>perhaps that is it?</p>",
        "id": 134774418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538083148
    },
    {
        "content": "<p>I've started a full build locally when the first failure happened.</p>",
        "id": 134774428,
        "sender_full_name": "davidtwco",
        "timestamp": 1538083160
    },
    {
        "content": "<p>It has gotten past where it would normally fail on Travis.</p>",
        "id": 134774434,
        "sender_full_name": "davidtwco",
        "timestamp": 1538083172
    },
    {
        "content": "<p>It surprises me because the commit just moves where something is instantiated, there's no real functional difference (except the comparison for the item path changing).</p>",
        "id": 134774509,
        "sender_full_name": "davidtwco",
        "timestamp": 1538083233
    },
    {
        "content": "<p>Huh, hit the error locally at the very end of the compiler artifacts for stage1.</p>",
        "id": 134774926,
        "sender_full_name": "davidtwco",
        "timestamp": 1538083726
    },
    {
        "content": "<p>I'm really not sure what it is about the commit that would cause that.</p>",
        "id": 134774955,
        "sender_full_name": "davidtwco",
        "timestamp": 1538083802
    },
    {
        "content": "<p>Any ideas <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>?</p>",
        "id": 134775276,
        "sender_full_name": "davidtwco",
        "timestamp": 1538084246
    },
    {
        "content": "<p>Since Travis seems to have messed up the log for the most recent retry, this is a gist of the error I see locally: <a href=\"https://gist.github.com/davidtwco/36b469179c0bd3851b0de4c426abc0fa\" target=\"_blank\" title=\"https://gist.github.com/davidtwco/36b469179c0bd3851b0de4c426abc0fa\">https://gist.github.com/davidtwco/36b469179c0bd3851b0de4c426abc0fa</a></p>",
        "id": 134775461,
        "sender_full_name": "davidtwco",
        "timestamp": 1538084489
    },
    {
        "content": "<blockquote>\n<p>I'm really not sure what it is about the commit that would cause that.</p>\n</blockquote>\n<p>ugh. I'm not really sure, but I can sort of imagine...</p>",
        "id": 134775798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538084933
    },
    {
        "content": "<p>hmm</p>",
        "id": 134775802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538084944
    },
    {
        "content": "<p>I feel like it's weird that we generate a symbol that takes into account where the <code>extern crate</code> appears in the source tree anyway</p>",
        "id": 134775816,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538084963
    },
    {
        "content": "<p>but I imagine that if we are altering things based on edition</p>",
        "id": 134775821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538084973
    },
    {
        "content": "<p>maybe we are linking together crates that wind up with a different .. view? not sure</p>",
        "id": 134775829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538084985
    },
    {
        "content": "<p>I have to run but let me give you a 'tip'</p>",
        "id": 134775864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085003
    },
    {
        "content": "<p>All this new commit does for the <code>rustc_resolve</code> module is change where we get the prelude crate names from. Other than that, it's just the trait suggestion logic that changed again in this commit.</p>",
        "id": 134775891,
        "sender_full_name": "davidtwco",
        "timestamp": 1538085016
    },
    {
        "content": "<p>I think the code is in <code>librustc_codegen_utils/symbol_names.rs</code></p>",
        "id": 134775929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085086
    },
    {
        "content": "<p>The previous commit (which didn't seem to have that issue) did change that file, but only to add a <code>#[derive(Debug)]</code> to a struct.</p>",
        "id": 134775992,
        "sender_full_name": "davidtwco",
        "timestamp": 1538085140
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> in particular</p>\n<div class=\"codehilite\"><pre><span></span>fn def_symbol_name&lt;&#39;a, &#39;tcx&gt;(tcx: TyCtxt&lt;&#39;a, &#39;tcx, &#39;tcx&gt;, def_id: DefId) -&gt; ty::SymbolName {\n    let mut buffer = SymbolPathBuffer::new();\n    item_path::with_forced_absolute_paths(|| {\n        tcx.push_item_path(&amp;mut buffer, def_id);\n    });\n    buffer.into_interned()\n}\n</pre></div>",
        "id": 134775994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085143
    },
    {
        "content": "<p>I bet it's some kind of interaction with that flag</p>",
        "id": 134775998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085155
    },
    {
        "content": "<p>Perhaps.. but I didn't really change that flag at all, I added a new one, that only changes things when that flag isn't set.</p>",
        "id": 134776009,
        "sender_full_name": "davidtwco",
        "timestamp": 1538085193
    },
    {
        "content": "<p>well, maybe you're wrong about that? :)</p>",
        "id": 134776023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085209
    },
    {
        "content": "<p>I might be.</p>",
        "id": 134776026,
        "sender_full_name": "davidtwco",
        "timestamp": 1538085215
    },
    {
        "content": "<p>I guess I did.</p>",
        "id": 134776031,
        "sender_full_name": "davidtwco",
        "timestamp": 1538085218
    },
    {
        "content": "<p>alternatively</p>",
        "id": 134776035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085222
    },
    {
        "content": "<p>sometimes we fail to set the flag in some path</p>",
        "id": 134776040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085227
    },
    {
        "content": "<p>though I'd be surprsied to see such a bug crop up now</p>",
        "id": 134776050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085241
    },
    {
        "content": "<p>No, I think you're right. When I stopped it from recursing to the crate root when making the item path that could be it.</p>",
        "id": 134776089,
        "sender_full_name": "davidtwco",
        "timestamp": 1538085244
    },
    {
        "content": "<p>fwiw I think <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is overhauling the symbol name generation code... not sure what exactly they have in mind though</p>",
        "id": 134776118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538085291
    },
    {
        "content": "<p>Must have been lucky with the previous commit to not have failed I guess.</p>",
        "id": 134776119,
        "sender_full_name": "davidtwco",
        "timestamp": 1538085293
    },
    {
        "content": "<p>Alright, I've got a fresh build and tests passing locally, it takes a slightly different approach. Pushed that, so here's hoping.</p>",
        "id": 134779391,
        "sender_full_name": "davidtwco",
        "timestamp": 1538089294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> nice!</p>",
        "id": 134838447,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538154840
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> around?</p>",
        "id": 134846381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538163154
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/54603#pullrequestreview-159995818\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54603#pullrequestreview-159995818\">left a review</a></p>",
        "id": 134846406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1538163208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ping</p>",
        "id": 134846530,
        "sender_full_name": "davidtwco",
        "timestamp": 1538163336
    }
]