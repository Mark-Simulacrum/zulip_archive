[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> any thoughts on <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> 's last comment on the issue?</p>",
        "id": 132999415,
        "sender_full_name": "qmx",
        "timestamp": 1535552741
    },
    {
        "content": "<p>didn't look at it yet, pointer?</p>",
        "id": 133001313,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1535554834
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/53737#issuecomment-416640351\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53737#issuecomment-416640351\">https://github.com/rust-lang/rust/issues/53737#issuecomment-416640351</a></p>",
        "id": 133004337,
        "sender_full_name": "qmx",
        "timestamp": 1535557099
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> initial PR is up for review - curious to hear your thoughts on this one</p>",
        "id": 133508401,
        "sender_full_name": "qmx",
        "timestamp": 1536324595
    },
    {
        "content": "<p>cool, left a few comments</p>",
        "id": 133509413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536325617
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> currently blocked at this question <a href=\"https://github.com/rust-lang/rust/pull/54020#issuecomment-419610870\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54020#issuecomment-419610870\">https://github.com/rust-lang/rust/pull/54020#issuecomment-419610870</a></p>",
        "id": 133660866,
        "sender_full_name": "qmx",
        "timestamp": 1536586891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> you mean this?</p>\n<blockquote>\n<p>is there a standard call for doing naming normalization (like the ones that make the output for a <a href=\"http://some-crate.rs\" target=\"_blank\" title=\"http://some-crate.rs\">some-crate.rs</a> file that emits a rlib to be called <a href=\"http://libsome_crate.so\" target=\"_blank\" title=\"http://libsome_crate.so\">libsome_crate.so</a>)?</p>\n</blockquote>\n<p>If so .. uh .. I don't know =)</p>",
        "id": 133661263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536587244
    },
    {
        "content": "<p>not that I <em>know</em> of</p>",
        "id": 133661272,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536587255
    },
    {
        "content": "<p>yep</p>",
        "id": 133661278,
        "sender_full_name": "qmx",
        "timestamp": 1536587261
    },
    {
        "content": "<p>do we have to have an extension?</p>",
        "id": 133661281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536587276
    },
    {
        "content": "<p>tried without and it didn't work</p>",
        "id": 133661329,
        "sender_full_name": "qmx",
        "timestamp": 1536587293
    },
    {
        "content": "<p>that is, can we have the compiler hard-code it to be <code>xxx</code> or something using <code>-o</code>, or does that make windows fail or something</p>",
        "id": 133661330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536587295
    },
    {
        "content": "<p>ok</p>",
        "id": 133661331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536587296
    },
    {
        "content": "<p>probably you should just have write that fn yourself (sigh)</p>",
        "id": 133661341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536587313
    },
    {
        "content": "<p>but yea, my worry is breaking windows</p>",
        "id": 133661346,
        "sender_full_name": "qmx",
        "timestamp": 1536587322
    },
    {
        "content": "<p>we could ping <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> , though I they they are not monitoring Zulip, but they may know the answer</p>",
        "id": 133661357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536587332
    },
    {
        "content": "<p>yea, looks like I'm a rabbit hole magnet <span class=\"emoji emoji-1f602\" title=\"joy\">:joy:</span></p>",
        "id": 133661391,
        "sender_full_name": "qmx",
        "timestamp": 1536587352
    },
    {
        "content": "<p>on a more serious note, if we've had a function that did exactly this (naming conventions), where would this thing live?</p>",
        "id": 133662488,
        "sender_full_name": "qmx",
        "timestamp": 1536588186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> uh... it doesn't feel to me that there is an obvious place</p>",
        "id": 133663196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536588710
    },
    {
        "content": "<p>I guess I could imagine making a rust-lang-nursery crate</p>",
        "id": 133663242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536588724
    },
    {
        "content": "<p>that both rustc and compiletest depend on</p>",
        "id": 133663251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536588729
    },
    {
        "content": "<p>I think that is what I would ideally want to see</p>",
        "id": 133663256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536588736
    },
    {
        "content": "<p>it doesn't, I suppose, <em>have</em> to be a rust-lang-nursery crate</p>",
        "id": 133663269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536588747
    },
    {
        "content": "<p>I'll start by trying to find where this is defined in the compiler - is driver a good guess as where to look first?</p>",
        "id": 133664704,
        "sender_full_name": "qmx",
        "timestamp": 1536589776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> hmm well maybe ..</p>",
        "id": 133667495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536591849
    },
    {
        "content": "<p>I think that <code>OutputFilenames</code> might be worth looking at</p>",
        "id": 133667547,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536591891
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/session/config/struct.OutputFilenames.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/session/config/struct.OutputFilenames.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc/session/config/struct.OutputFilenames.html</a></p>",
        "id": 133667555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536591899
    },
    {
        "content": "<p>good, will take a look</p>",
        "id": 133667588,
        "sender_full_name": "qmx",
        "timestamp": 1536591939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> so what is the status of <a href=\"https://github.com/rust-lang/rust/pull/54020/\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54020/\">https://github.com/rust-lang/rust/pull/54020/</a>?</p>",
        "id": 133814134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536773681
    },
    {
        "content": "<p>trying to find a cross-platform solution for it</p>",
        "id": 133814471,
        "sender_full_name": "qmx",
        "timestamp": 1536774055
    },
    {
        "content": "<p>this is going to take way longer since it looks like a pretty big rabbit hole</p>",
        "id": 133814486,
        "sender_full_name": "qmx",
        "timestamp": 1536774081
    },
    {
        "content": "<p>(which is fine)</p>",
        "id": 133814487,
        "sender_full_name": "qmx",
        "timestamp": 1536774085
    },
    {
        "content": "<p>the way the PR is now it's not ready for landing</p>",
        "id": 133814495,
        "sender_full_name": "qmx",
        "timestamp": 1536774103
    },
    {
        "content": "<p>essentially this breaks when you add aliasing into the mix</p>",
        "id": 133814577,
        "sender_full_name": "qmx",
        "timestamp": 1536774165
    },
    {
        "content": "<p>since it breaks the expectations of paths and names</p>",
        "id": 133814584,
        "sender_full_name": "qmx",
        "timestamp": 1536774178
    },
    {
        "content": "<blockquote>\n<p>essentially this breaks when you add aliasing into the mix</p>\n</blockquote>\n<p>aliasing?</p>",
        "id": 133814616,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536774225
    },
    {
        "content": "<p>when you alias a crate</p>",
        "id": 133814668,
        "sender_full_name": "qmx",
        "timestamp": 1536774249
    },
    {
        "content": "<p><code>--extern foo=bar</code></p>",
        "id": 133814678,
        "sender_full_name": "qmx",
        "timestamp": 1536774259
    },
    {
        "content": "<p>isn't <code>bar</code> there .. path?</p>",
        "id": 133814718,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536774316
    },
    {
        "content": "<p>oh, I uess you just mean</p>",
        "id": 133814725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536774321
    },
    {
        "content": "<p>the name <code>foo</code> is not the name the crate uses?</p>",
        "id": 133814730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536774325
    },
    {
        "content": "<p>paths will live under foo, but the compiler barf if you don't provide the full path to bar</p>",
        "id": 133814757,
        "sender_full_name": "qmx",
        "timestamp": 1536774359
    },
    {
        "content": "<p>does this mean it just doesn't work at all?</p>",
        "id": 133816338,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536775983
    },
    {
        "content": "<p>or only if the cratenames don't match?</p>",
        "id": 133816350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536775989
    },
    {
        "content": "<p>if the cratenames don't match</p>",
        "id": 133816415,
        "sender_full_name": "qmx",
        "timestamp": 1536776048
    },
    {
        "content": "<p>that's where the cross-platform concern kicks in</p>",
        "id": 133816425,
        "sender_full_name": "qmx",
        "timestamp": 1536776063
    },
    {
        "content": "<p>I'm going to invest more work on fixing this this week</p>",
        "id": 133816434,
        "sender_full_name": "qmx",
        "timestamp": 1536776076
    },
    {
        "content": "<blockquote>\n<p>that's where the cross-platform concern kicks in</p>\n</blockquote>\n<p>why is that specifically an issue across platforms?</p>",
        "id": 133834792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536776911
    },
    {
        "content": "<p>cause it involves filesystem paths</p>",
        "id": 133836397,
        "sender_full_name": "qmx",
        "timestamp": 1536778367
    },
    {
        "content": "<p>basically</p>",
        "id": 133836406,
        "sender_full_name": "qmx",
        "timestamp": 1536778381
    },
    {
        "content": "<p>and I want to make sure the test does \"the right thing(tm)\" on all supported platforms</p>",
        "id": 133836425,
        "sender_full_name": "qmx",
        "timestamp": 1536778410
    },
    {
        "content": "<p>ok :)</p>",
        "id": 133837283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536779165
    },
    {
        "content": "<p>do you feel that restructuring the test suite would be something more important than the upcoming canonical grammar discussion?</p>",
        "id": 133890924,
        "sender_full_name": "qmx",
        "timestamp": 1536850815
    },
    {
        "content": "<p>it's perhaps a nice \"side project\" that is more actionable</p>",
        "id": 133895963,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855160
    },
    {
        "content": "<p>I'd love to see compiletest making progress</p>",
        "id": 133895991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855187
    },
    {
        "content": "<p>there are some folks who've done good work on it in the past too that might be game to help out, I forget exactly who</p>",
        "id": 133895996,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855197
    },
    {
        "content": "<p>I'm asking cause I'm heads into it now</p>",
        "id": 133896004,
        "sender_full_name": "qmx",
        "timestamp": 1536855218
    },
    {
        "content": "<p>into testing, you mean?</p>",
        "id": 133896057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855250
    },
    {
        "content": "<p>yeah, it's a nice continuation</p>",
        "id": 133896060,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855253
    },
    {
        "content": "<p>yup</p>",
        "id": 133896061,
        "sender_full_name": "qmx",
        "timestamp": 1536855253
    },
    {
        "content": "<p>in a way it has a similar character :)</p>",
        "id": 133896066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855259
    },
    {
        "content": "<p>somebody needs to draw up a proposal</p>",
        "id": 133896068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855263
    },
    {
        "content": "<p>shop it around</p>",
        "id": 133896070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855264
    },
    {
        "content": "<p>it does</p>",
        "id": 133896072,
        "sender_full_name": "qmx",
        "timestamp": 1536855266
    },
    {
        "content": "<p>it seems like there is a <em>reasonable</em> amount of consensus though?</p>",
        "id": 133896085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855281
    },
    {
        "content": "<p>I feel like the main thing would be to capture people's \"wants\"</p>",
        "id": 133896091,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855288
    },
    {
        "content": "<p>and make sure they're reasonably addressed</p>",
        "id": 133896097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855297
    },
    {
        "content": "<p>(e.g., <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>'s concern that having to run run-pass tests takes too long)</p>",
        "id": 133896116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855319
    },
    {
        "content": "<p>I kinda want to have a \"grammar\" for all the <code>// flags</code></p>",
        "id": 133896118,
        "sender_full_name": "qmx",
        "timestamp": 1536855320
    },
    {
        "content": "<p>yeah, so the other option — which also makes a lot of sense! — is to avoid the big questions</p>",
        "id": 133896125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855332
    },
    {
        "content": "<p>and instead improve compiletest itself in small ways to start</p>",
        "id": 133896134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855340
    },
    {
        "content": "<p>until you have a handle on it</p>",
        "id": 133896136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855343
    },
    {
        "content": "<p>just documenting would be awesome</p>",
        "id": 133896142,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855352
    },
    {
        "content": "<p>the split between early props and late props is awkward</p>",
        "id": 133896144,
        "sender_full_name": "qmx",
        "timestamp": 1536855356
    },
    {
        "content": "<p>rustc-guide docs are incomplete</p>",
        "id": 133896145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855357
    },
    {
        "content": "<p>the whole revisions scheme is a bit awkward, though handy..</p>",
        "id": 133896191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855370
    },
    {
        "content": "<p>one frustrating thing for sure is how hard is to land anything</p>",
        "id": 133896200,
        "sender_full_name": "qmx",
        "timestamp": 1536855386
    },
    {
        "content": "<p>just in general, or in compiletest specifically?</p>",
        "id": 133896207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855399
    },
    {
        "content": "<p>I'm used to it, but always leave a bad aftertaste</p>",
        "id": 133896208,
        "sender_full_name": "qmx",
        "timestamp": 1536855411
    },
    {
        "content": "<p>in general</p>",
        "id": 133896211,
        "sender_full_name": "qmx",
        "timestamp": 1536855415
    },
    {
        "content": "<p>it's probably related to the scope of the project</p>",
        "id": 133896228,
        "sender_full_name": "qmx",
        "timestamp": 1536855447
    },
    {
        "content": "<p>in that retrospect, splitting out things to external crates would be a huge improvement</p>",
        "id": 133896232,
        "sender_full_name": "qmx",
        "timestamp": 1536855466
    },
    {
        "content": "<p>I know I progressed a lot on my compiletest changes by just being able to <code>cargo watch -x test</code></p>",
        "id": 133896285,
        "sender_full_name": "qmx",
        "timestamp": 1536855512
    },
    {
        "content": "<blockquote>\n<p>in that retrospect, splitting out things to external crates would be a huge improvement</p>\n</blockquote>\n<p>This is definitely one of my motivations.</p>",
        "id": 133896414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536855709
    }
]