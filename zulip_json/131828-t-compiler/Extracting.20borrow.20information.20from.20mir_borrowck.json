[
    {
        "content": "<p>I'm interested in building a <a href=\"https://en.wikipedia.org/wiki/Program_slicing\">program slicer</a> for Rust. I originally <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Program.20slicing.20in.20RA/near/228018712\">proposed doing this</a> for rust-analyzer, but I need access to the computed borrow information about the MIR, so I decided to hook into the compiler directly. However, much to my chagrin, the compiler doesn't expose borrow information. As far as I can tell, <code>mir_borrowck</code> keeps all the borrow information internally. The returned <code>BorrowCheckResult</code> doesn't have much information.</p>\n<p>Does anyone have a sense of roughly what would be involved in changing the <code>mir_borrowck</code> interface to return more information? Would it be just a matter of moving the internal data structures like <a href=\"https://github.com/rust-lang/rust/blob/35dbef235048f9a2939dc20effe083ca483c37ff/compiler/rustc_mir/src/borrow_check/mod.rs#L206\"><code>RegionInferenceContext</code></a> into the return signature? I tried doing that with the <a href=\"https://github.com/rust-lang/rust/blob/35dbef235048f9a2939dc20effe083ca483c37ff/compiler/rustc_mir/src/borrow_check/mod.rs#L202\"><code>BorrowSet</code></a>, but ran into several issues on making it hashable.</p>",
        "id": 228539937,
        "sender_full_name": "Will Crichton",
        "timestamp": 1614749861
    },
    {
        "content": "<p>prusti does this with <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Program.20slicing.20in.20RA/near/228069017\">really awful hacks</a></p>",
        "id": 228540157,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614750020
    },
    {
        "content": "<p>I don't know if anyone's tried to make it usable from a library</p>",
        "id": 228540184,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614750036
    },
    {
        "content": "<p>Yes, I talked with <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas [he/him]</span> about this. The only issue is that Prusti can't scrape all the information that rustc infers, because it's limited to whatever is output in the logs. I'm interested in extracting all the computed information so my analysis pass has access to it.</p>",
        "id": 228593624,
        "sender_full_name": "Will Crichton",
        "timestamp": 1614779380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> might be a good person to ask, but AFAIK turning borrowck into a library is still a long way off, no one is working on it</p>",
        "id": 228601585,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614782160
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Extracting.20borrow.20information.20from.20mir_borrowck/near/228540157\">said</a>:</p>\n<blockquote>\n<p>prusti does this with <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Program.20slicing.20in.20RA/near/228069017\">really awful hacks</a></p>\n</blockquote>\n<p>To my understanding, the minimal thing we need to be able to remove these hacks is the ability to get lifetime constraints for function calls at MIR optimized level. If someone would agree to mentor the creation of API that allows getting these lifetime constraints, I could try to find a summer intern to work on this.</p>",
        "id": 228610231,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1614785080
    },
    {
        "content": "<p>my plan was to do it through polonius</p>",
        "id": 228695221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614818232
    },
    {
        "content": "<p>but I suppose we could expose it from MIR borrowck in some other way</p>",
        "id": 228695231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614818242
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Extracting.20borrow.20information.20from.20mir_borrowck/near/228695221\">said</a>:</p>\n<blockquote>\n<p>my plan was to do it through polonius</p>\n</blockquote>\n<p>Polonius would be an option if there was a way to access the version of MIR on which Polonius is running. (Together with all information necessary to map Polonius facts to MIR elements such as lifetime identifiers and MIR locations.)</p>",
        "id": 228748563,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1614853839
    },
    {
        "content": "<p>By the way, going via the file system can have a huge performance impact, so it would be good to avoid that, too.</p>",
        "id": 228748747,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1614853933
    },
    {
        "content": "<p>it's probably a good idea for me to be specific about what I mean by \"do it through polonius\"</p>",
        "id": 228754741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614856961
    },
    {
        "content": "<p>I'm not even 100% sure I know :)</p>",
        "id": 228754747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614856965
    },
    {
        "content": "<p>I think I meant: communicate via polonius facts?</p>",
        "id": 228754762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614856978
    },
    {
        "content": "<p>I have to think about this</p>",
        "id": 228754776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614856985
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Extracting.20borrow.20information.20from.20mir_borrowck/near/228754762\">said</a>:</p>\n<blockquote>\n<p>I think I meant: communicate via polonius facts?</p>\n</blockquote>\n<p>Something like <code>tcx.get_polonius_facts(def_id)</code>?</p>\n<p>Just a side comment: With Prusti we are currently trying to dive into the verification of unsafe code. Therefore, we need Polonius input facts, not its output facts.</p>",
        "id": 228929115,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1614939248
    },
    {
        "content": "<p>If you would like to have a call to discuss this, let me know.</p>",
        "id": 228929175,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1614939288
    },
    {
        "content": "<p>how will you be verifying the unsafe code?</p>",
        "id": 229093511,
        "sender_full_name": "oliver",
        "timestamp": 1615033124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281739\">oliver</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Extracting.20borrow.20information.20from.20mir_borrowck/near/229093511\">said</a>:</p>\n<blockquote>\n<p>how will you be verifying the unsafe code?</p>\n</blockquote>\n<p>We still trying to figure this out.</p>",
        "id": 229192704,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1615128183
    },
    {
        "content": "<p>Not directly on topic for the thread, but just for fun -- I've been able to get pretty far with my program slicer without using any borrow information. For example, this program shows a slice on the variable \"total\" in the last line.</p>\n<p><a href=\"/user_uploads/4715/VxTrZQOP9bVoOEFZXCq8zRSg/Screen-Shot-2021-03-14-at-7.08.28-PM.png\">Screen-Shot-2021-03-14-at-7.08.28-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/VxTrZQOP9bVoOEFZXCq8zRSg/Screen-Shot-2021-03-14-at-7.08.28-PM.png\" title=\"Screen-Shot-2021-03-14-at-7.08.28-PM.png\"><img src=\"/user_uploads/4715/VxTrZQOP9bVoOEFZXCq8zRSg/Screen-Shot-2021-03-14-at-7.08.28-PM.png\"></a></div><p>And this program shows a slice on \"input\" in the line <code>input == \"exit\"</code>.</p>\n<p><a href=\"/user_uploads/4715/ZhEKX2MQnVy8UKViAOGc9v4B/Screen-Shot-2021-03-14-at-7.09.07-PM.png\">Screen-Shot-2021-03-14-at-7.09.07-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ZhEKX2MQnVy8UKViAOGc9v4B/Screen-Shot-2021-03-14-at-7.09.07-PM.png\" title=\"Screen-Shot-2021-03-14-at-7.09.07-PM.png\"><img src=\"/user_uploads/4715/ZhEKX2MQnVy8UKViAOGc9v4B/Screen-Shot-2021-03-14-at-7.09.07-PM.png\"></a></div>",
        "id": 230277703,
        "sender_full_name": "Will Crichton",
        "timestamp": 1615763484
    }
]