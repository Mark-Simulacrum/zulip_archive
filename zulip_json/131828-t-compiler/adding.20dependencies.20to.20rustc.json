[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I've been assigned <a href=\"https://github.com/rust-lang/rust/issues/82057\">#82057</a> which adds a new dependency to the compiler - it seems reasonable to me but <a href=\"https://rustc-dev-guide.rust-lang.org/crates-io.html?highlight=dependency#cratesio-dependencies\">our current policy on this</a> is a <code>TODO</code> comment as far as I can tell - any thoughts?</p>",
        "id": 226259826,
        "sender_full_name": "davidtwco",
        "timestamp": 1613241045
    },
    {
        "content": "<p>Whatever policy we have is enforced by CI – there's a check for license compatibility. Unlike with the standard library dependencies, there are no other major requirements for crate usage in the compiler AFAIR.</p>",
        "id": 226262047,
        "sender_full_name": "nagisa",
        "timestamp": 1613243852
    },
    {
        "content": "<p>Could be wrong though.</p>",
        "id": 226262049,
        "sender_full_name": "nagisa",
        "timestamp": 1613243856
    },
    {
        "content": "<p>We enforce that new deps aren't added by a tidy check, but I assumed it was just a whilelist - wasn't sure if we should just add to that, given that the policy mentions concerns about maintainership and licensing, etc.</p>",
        "id": 226262438,
        "sender_full_name": "davidtwco",
        "timestamp": 1613244417
    },
    {
        "content": "<p>I'm pretty sure license is still checked separately. There's <a href=\"https://github.com/rust-lang/rust/blob/7e0241c63755ea28045d512b742f50b307874419/src/tools/tidy/src/deps.rs#L57-L60\">https://github.com/rust-lang/rust/blob/7e0241c63755ea28045d512b742f50b307874419/src/tools/tidy/src/deps.rs#L57-L60</a> which says</p>\n<blockquote>\n<p>Avoid adding to the list if possible.</p>\n</blockquote>\n<p>but given the number of entries in that list I'm wondering if we should remove that sentence at this point.</p>",
        "id": 226262665,
        "sender_full_name": "nagisa",
        "timestamp": 1613244779
    },
    {
        "content": "<p>I for one would love to see e.g. <code>rustc_serialize</code> replaced with <code>serde</code>.</p>",
        "id": 226262693,
        "sender_full_name": "nagisa",
        "timestamp": 1613244801
    },
    {
        "content": "<p>Great question <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>! I'm actually running into this myself. </p>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Do you have any thoughts about what process we should use to vet <a href=\"http://crates.io\">crates.io</a> dependencies?</p>\n<p>(cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> in case you have thoughts as well <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 227031593,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1613770319
    },
    {
        "content": "<p>I think these kind of changes would warrant an MCP, but the two gating factors are: license and how well maintained the crate is. If there are _any_ concerns about the dep we need to ask ourselves whether we'd be fine with taking ownership of it if push came to shove.</p>",
        "id": 227054504,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1613784111
    },
    {
        "content": "<p>I think in general we should have a more concrete policy with regards to how we use external crates in rustc. I'd like to have a design meeting around clarifying this policy but before then, if anyone has opinions about this topic, please let me know or comment here.</p>",
        "id": 227955002,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1614357850
    },
    {
        "content": "<p>In the meantime, I don't think we need to hold that PR up for this future policy so I will r+.</p>",
        "id": 227955035,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1614357868
    },
    {
        "content": "<p>Any progress on a formalized process for adding and vetting dependencies?<br>\n&lt;trusting trust&gt; and all, plus compile times and future work.</p>",
        "id": 250684192,
        "sender_full_name": "Riku",
        "timestamp": 1629926238
    },
    {
        "content": "<p>I don't see how trusting trust is related.</p>",
        "id": 250684374,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629926304
    },
    {
        "content": "<p>If a dependency is malicious, you'd be able to see it by reading the source code.</p>",
        "id": 250684456,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629926340
    },
    {
        "content": "<p>But if it is a dependency of rustc and the malicious code isn't catched in time a new compiler with the malicious code will be added to the bootstrap chain, thus giving rise to trusting trust.</p>",
        "id": 250684677,
        "sender_full_name": "bjorn3",
        "timestamp": 1629926434
    },
    {
        "content": "<blockquote>\n<p>But if it is a dependency of rustc and the malicious code isn't catched in time a new compiler with the malicious code will be added to the bootstrap chain, thus giving rise to trusting trust.</p>\n</blockquote>\n<p>I guess? that's easy enough to undo if we publish a stable release that builds with an old compiler and not just N-1</p>",
        "id": 250684836,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629926513
    },
    {
        "content": "<p>and you'll still <em>know</em> that it's malicious</p>",
        "id": 250684937,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629926545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/adding.20dependencies.20to.20rustc/near/250684456\">said</a>:</p>\n<blockquote>\n<p>If a dependency is malicious, you'd be able to see it by reading the source code.</p>\n</blockquote>\n<p>Well, the other thing is, I'm not sure we're sure that all the dependencies have been vetted. From what I've been reading, the only check we've got is \"is the license compatible?\"</p>",
        "id": 250685023,
        "sender_full_name": "Ku",
        "timestamp": 1629926592
    },
    {
        "content": "<p>the point of trusting trust is that you have to audit the whole bootstrap chain to know about it. the malicious source code may be long gone in newer versions.</p>",
        "id": 250685058,
        "sender_full_name": "bjorn3",
        "timestamp": 1629926615
    },
    {
        "content": "<blockquote>\n<p>I'm not sure we're sure that all the dependencies have been vetted.</p>\n</blockquote>\n<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I don't think we can solve that with a process, it certainly can't be automated</p>",
        "id": 250685073,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629926622
    },
    {
        "content": "<p>most of the dependencies are by people already very involved in the project anyway</p>",
        "id": 250685193,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629926669
    },
    {
        "content": "<p>We could require that, e.g. when Cargo.lock is changed, the added/updated crate needs to be reviewed rather than just the changes to rust repo.</p>",
        "id": 250685317,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629926744
    },
    {
        "content": "<p>But that's a lot of work</p>",
        "id": 250685329,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629926748
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/adding.20dependencies.20to.20rustc/near/250685073\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm not sure we're sure that all the dependencies have been vetted.</p>\n</blockquote>\n<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I don't think we can solve that with a process, it certainly can't be automated</p>\n</blockquote>\n<p>Well yeah, but I think its helpful to have a broad guideline for</p>\n<blockquote>\n<p>we should go through these steps to make sure its safe and will be maintained</p>\n</blockquote>\n<p>Before including a dependency (e.g. a full review of that crate-version as well, or such), considering that the safety and quality considerations of a crate is equal to code in <code>rustc</code> itself: all Rust code in existence has to implicity trust that code.</p>",
        "id": 250685881,
        "sender_full_name": "Ku",
        "timestamp": 1629927020
    },
    {
        "content": "<p>I believe current Cargo.lock contains all tool dependencies as well?</p>",
        "id": 250687781,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629928121
    },
    {
        "content": "<p>Might worth separating what's \"core dependencies\" necessary for bootstrap and only scrutinize those.</p>",
        "id": 250687821,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629928152
    },
    {
        "content": "<p>Tidy independently checks the dependencies of libstd, rustc, cg_clif and the rest.</p>",
        "id": 250734923,
        "sender_full_name": "bjorn3",
        "timestamp": 1629963346
    }
]