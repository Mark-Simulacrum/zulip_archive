[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> do you have a preference as to how <a href=\"https://github.com/rust-lang/rust/issues/59725#issuecomment-480345963\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59725#issuecomment-480345963\">https://github.com/rust-lang/rust/issues/59725#issuecomment-480345963</a> is implemented? You mentioned before it should be easy. I was planning to write up a change, but wanted to check with you just in case there was some particular way you wanted it done. Or would you rather do it?</p>",
        "id": 162645007,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554486894
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> )</p>",
        "id": 162645023,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554486903
    },
    {
        "content": "<p>(cc also <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> , I suppose ;) )</p>",
        "id": 162645037,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554486912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> I recall we discussed approaching this like <code>#[rustc_promotable]</code> or something</p>",
        "id": 162645850,
        "sender_full_name": "centril",
        "timestamp": 1554487445
    },
    {
        "content": "<p>i.e. we straight up forbid function pointers right now, but basically you check for the exemption attribute and if it is on a function (by def_id) then you let it slide</p>",
        "id": 162645914,
        "sender_full_name": "centril",
        "timestamp": 1554487506
    },
    {
        "content": "<p>and then there's the usual gating of attributes and such</p>",
        "id": 162645972,
        "sender_full_name": "centril",
        "timestamp": 1554487553
    },
    {
        "content": "<p>here I think a change is needed: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_mir/transform/qualify_min_const_fn.rs.html#94\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_mir/transform/qualify_min_const_fn.rs.html#94\">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_mir/transform/qualify_min_const_fn.rs.html#94</a></p>",
        "id": 162646143,
        "sender_full_name": "centril",
        "timestamp": 1554487664
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> Ah, I see, that check only runs on local_decls, not all rvalues?</p>",
        "id": 162646529,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554487914
    },
    {
        "content": "<p>(so callers can still pass an rvalue function pointer without getting an error)</p>",
        "id": 162646601,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554487938
    },
    {
        "content": "<p>It will create a temporary unless they declare a constant though:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">FN_PTR</span>: <span class=\"nc\">fn</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">...;</span><span class=\"w\"></span>\n\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">// ...</span>\n<span class=\"w\">     </span><span class=\"n\">special_fn</span><span class=\"p\">(</span><span class=\"n\">FN_PTR</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 162647141,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1554488325
    },
    {
        "content": "<p>Promotion doesn't care though. So users can do:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">make_vtable</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nb\">&#39;static</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"n\">special_fn</span><span class=\"p\">(</span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 162647320,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1554488433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> going for a walk, I'll check back later</p>",
        "id": 162647566,
        "sender_full_name": "centril",
        "timestamp": 1554488623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> oh, it seems backwards to me that it doesn't affect promotion</p>",
        "id": 162648346,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554489109
    },
    {
        "content": "<p>well, min const fn is being stabilized carefully, and promotion was not, so that's how it is.</p>",
        "id": 162648510,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1554489176
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/59739/commits/701d2197f4ecbe6d168408d59888868bc56e1f2d\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59739/commits/701d2197f4ecbe6d168408d59888868bc56e1f2d\">https://github.com/rust-lang/rust/pull/59739/commits/701d2197f4ecbe6d168408d59888868bc56e1f2d</a></p>",
        "id": 162662003,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499003
    },
    {
        "content": "<p>Please split that out into a separate PR</p>",
        "id": 162662325,
        "sender_full_name": "centril",
        "timestamp": 1554499253
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I considered that and did not do it because otherwise there's no test, and there's not an easy way to add one seeing as it requires adding a stable function to libstd</p>",
        "id": 162662466,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499357
    },
    {
        "content": "<p>I'd rather not land untested code</p>",
        "id": 162662469,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> It is precisely because this code cannot land because it is not sufficiently tested that I want it split out</p>",
        "id": 162662510,
        "sender_full_name": "centril",
        "timestamp": 1554499401
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> Sorry, I don't understand how splitting it out into a separate PR solves anything</p>",
        "id": 162662526,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499419
    },
    {
        "content": "<p>it's already a separate commit</p>",
        "id": 162662530,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499423
    },
    {
        "content": "<p>You're welcome to comment on that commit and I'm happy to make changes to it there</p>",
        "id": 162662547,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499437
    },
    {
        "content": "<p>there's just no reason to try and land it on its own</p>",
        "id": 162662583,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499443
    },
    {
        "content": "<p>you can use <code>staged_api</code> and such to add tests</p>",
        "id": 162662613,
        "sender_full_name": "centril",
        "timestamp": 1554499454
    },
    {
        "content": "<p>That doesn't add any value</p>",
        "id": 162662621,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499458
    },
    {
        "content": "<p>(having it in a separate PR)</p>",
        "id": 162662649,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499491
    },
    {
        "content": "<blockquote>\n<p><code>staged_api</code></p>\n</blockquote>\n<p>ah, great-- I looked around for something just like that</p>",
        "id": 162662771,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499574
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> <a href=\"https://github.com/rust-lang/rust/search?q=rustc_promotable&amp;unscoped_q=rustc_promotable\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/search?q=rustc_promotable&amp;unscoped_q=rustc_promotable\">https://github.com/rust-lang/rust/search?q=rustc_promotable&amp;unscoped_q=rustc_promotable</a></p>",
        "id": 162663101,
        "sender_full_name": "centril",
        "timestamp": 1554499837
    },
    {
        "content": "<p>yup, already got the test done, will push in just a second</p>",
        "id": 162663124,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499858
    },
    {
        "content": "<p>also add stability tests and whatnot</p>",
        "id": 162663149,
        "sender_full_name": "centril",
        "timestamp": 1554499871
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> <code>rustc_</code> attributes are always unstable, behind <code>rustc_attrs</code></p>",
        "id": 162663163,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> still want a test?&gt;</p>",
        "id": 162663171,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499903
    },
    {
        "content": "<p>Sure, it should still have tests</p>",
        "id": 162663177,
        "sender_full_name": "centril",
        "timestamp": 1554499910
    },
    {
        "content": "<p>htere are tests showing that <code>rustc_xxx</code> for any <code>xxx</code> is unstable</p>",
        "id": 162663236,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499932
    },
    {
        "content": "<p>but sure</p>",
        "id": 162663248,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499948
    },
    {
        "content": "<p>I know; I generally assume that rustc is incorrect and specify tests independently of whatever machinery rustc uses.</p>",
        "id": 162663273,
        "sender_full_name": "centril",
        "timestamp": 1554499967
    },
    {
        "content": "<p>lol</p>",
        "id": 162663287,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554499980
    },
    {
        "content": "<p>so that they act independently</p>",
        "id": 162663288,
        "sender_full_name": "centril",
        "timestamp": 1554499980
    },
    {
        "content": "<p>for example, when I wrote tests for associated type bounds there was a whole lot of redundancy, <a href=\"https://gist.github.com/Centril/2470b7f89657da457ed25078a9cdab72\" target=\"_blank\" title=\"https://gist.github.com/Centril/2470b7f89657da457ed25078a9cdab72\">https://gist.github.com/Centril/2470b7f89657da457ed25078a9cdab72</a>, but redundancy is good in testing.</p>",
        "id": 162663413,
        "sender_full_name": "centril",
        "timestamp": 1554500058
    },
    {
        "content": "<p>Okay, pushed tests</p>",
        "id": 162663624,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554500201
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/59739/commits/b5493e541f6da8d848880592c5ac9180f75b254d\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59739/commits/b5493e541f6da8d848880592c5ac9180f75b254d\">https://github.com/rust-lang/rust/pull/59739/commits/b5493e541f6da8d848880592c5ac9180f75b254d</a></p>",
        "id": 162663765,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554500288
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> (btw, I'm not just keeping things as one PR because I'm trying to be a pain-- it's legitimately time-consuming and frustrating for me to have PR stacks that are 4+ deep when each has no independent value)</p>",
        "id": 162664740,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501211
    },
    {
        "content": "<p>especially when I <em>have</em> already split things out into separate commits</p>",
        "id": 162664753,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501236
    },
    {
        "content": "<p>independent value: easier to review ;)</p>",
        "id": 162664779,
        "sender_full_name": "centril",
        "timestamp": 1554501242
    },
    {
        "content": "<p>but yes, I understand that PR stacks are annoying sometimes</p>",
        "id": 162664809,
        "sender_full_name": "centril",
        "timestamp": 1554501252
    },
    {
        "content": "<p>I have gone through that also</p>",
        "id": 162664812,
        "sender_full_name": "centril",
        "timestamp": 1554501259
    },
    {
        "content": "<p>it is easier for you to click on the specific commit to review than it is for me to rebase down the chain :)</p>",
        "id": 162664815,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501267
    },
    {
        "content": "<p>fwiw, I am reviewing atm ;)</p>",
        "id": 162664833,
        "sender_full_name": "centril",
        "timestamp": 1554501283
    },
    {
        "content": "<p>esp. since you have to do that anyways if you want to leave comments on the correct PR</p>",
        "id": 162664841,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501285
    },
    {
        "content": "<p>(by clicking through the commits)</p>",
        "id": 162664847,
        "sender_full_name": "centril",
        "timestamp": 1554501294
    },
    {
        "content": "<p>otherwise you're reviewing the PR + all the preceding ones</p>",
        "id": 162664850,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501300
    },
    {
        "content": "<p>/me whines about github</p>",
        "id": 162664877,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501318
    },
    {
        "content": "<p>at least GH isn't taking away my <a href=\"https://inbox.google.com\" target=\"_blank\" title=\"https://inbox.google.com\">https://inbox.google.com</a> ;)</p>",
        "id": 162664966,
        "sender_full_name": "centril",
        "timestamp": 1554501395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> can you make changes in <a href=\"https://github.com/rust-lang/rust/blob/master/src/libsyntax/diagnostic_list.rs#L421\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/libsyntax/diagnostic_list.rs#L421\">https://github.com/rust-lang/rust/blob/master/src/libsyntax/diagnostic_list.rs#L421</a> as well?</p>",
        "id": 162665406,
        "sender_full_name": "centril",
        "timestamp": 1554501872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> ah crap</p>",
        "id": 162665410,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501885
    },
    {
        "content": "<p>the PR I was changing is in your rollup</p>",
        "id": 162665414,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501896
    },
    {
        "content": "<p>:/</p>",
        "id": 162665417,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501900
    },
    {
        "content": "<p>what do</p>",
        "id": 162665421,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501902
    },
    {
        "content": "<p>my rollup isn't getting r-ed ^^</p>",
        "id": 162665431,
        "sender_full_name": "centril",
        "timestamp": 1554501919
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> yeah, so I guess I'll make the changes in the second PR?</p>",
        "id": 162665440,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501939
    },
    {
        "content": "<p>even though that's not where that change was introduced</p>",
        "id": 162665455,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501958
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  we have 3 PRs right?</p>",
        "id": 162665505,
        "sender_full_name": "centril",
        "timestamp": 1554501968
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> correct</p>",
        "id": 162665515,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554501983
    },
    {
        "content": "<p>dizzifying</p>",
        "id": 162665517,
        "sender_full_name": "centril",
        "timestamp": 1554501989
    },
    {
        "content": "<p>re diagnostics_list, yes</p>",
        "id": 162665524,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502002
    },
    {
        "content": "<p>(well, 4 if you count your rollup XD)</p>",
        "id": 162665528,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502012
    },
    {
        "content": "<p>:D</p>",
        "id": 162665538,
        "sender_full_name": "centril",
        "timestamp": 1554502020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> so I guess I'll change the second PR to include the changes from the first</p>",
        "id": 162665903,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502324
    },
    {
        "content": "<p>that will be lost when it's closed by your rollup PR</p>",
        "id": 162665914,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502331
    },
    {
        "content": "<p>and just not rebase my second PR</p>",
        "id": 162665921,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  hmm; do those tests need <code>rustc_const_unstable</code>? also, could you duplicate the <code>allow_const_fn_ptr.rs</code> without the <code>const_fn</code> gate?</p>",
        "id": 162665960,
        "sender_full_name": "centril",
        "timestamp": 1554502390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  the rollup just failed, <a href=\"https://github.com/rust-lang/rust/pull/59736#issuecomment-480438342\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59736#issuecomment-480438342\">https://github.com/rust-lang/rust/pull/59736#issuecomment-480438342</a></p>",
        "id": 162665970,
        "sender_full_name": "centril",
        "timestamp": 1554502399
    },
    {
        "content": "<p>oh for gosh sakes</p>",
        "id": 162666278,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502645
    },
    {
        "content": "<p>I just committed the changes to the second PR</p>",
        "id": 162666283,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502651
    },
    {
        "content": "<p>what a mess XD</p>",
        "id": 162666290,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502658
    },
    {
        "content": "<p>I would suggest using the strategy of waiting ;)</p>",
        "id": 162666416,
        "sender_full_name": "centril",
        "timestamp": 1554502757
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> no waiting</p>",
        "id": 162666665,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502970
    },
    {
        "content": "<p>now is the time for stabilization!</p>",
        "id": 162666668,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502974
    },
    {
        "content": "<p>so but seriously</p>",
        "id": 162666688,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554502988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> hmm; why does <code>RawWaker::new</code> use the hack attribute?</p>",
        "id": 162666691,
        "sender_full_name": "centril",
        "timestamp": 1554502989
    },
    {
        "content": "<p>it accepts no function pointers</p>",
        "id": 162666709,
        "sender_full_name": "centril",
        "timestamp": 1554503006
    },
    {
        "content": "<p>(not directly)</p>",
        "id": 162666713,
        "sender_full_name": "centril",
        "timestamp": 1554503011
    },
    {
        "content": "<p>probably doesn't need to</p>",
        "id": 162666717,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554503014
    },
    {
        "content": "<p>argh... why doesn't GH let me leave comments on commits <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 162667232,
        "sender_full_name": "centril",
        "timestamp": 1554503415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> btw, there's <code>@bors r=withoutboats</code> for that</p>",
        "id": 162668656,
        "sender_full_name": "centril",
        "timestamp": 1554504567
    },
    {
        "content": "<p>git history looks weird otherwise</p>",
        "id": 162668677,
        "sender_full_name": "centril",
        "timestamp": 1554504591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> </p>\n<blockquote>\n<p>Also please extend this test with a file that doesn't use const_fn</p>\n</blockquote>",
        "id": 162669092,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554504983
    },
    {
        "content": "<p>^^ah yeah sorry just wasn't thinking about it</p>",
        "id": 162669097,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554504991
    },
    {
        "content": "<p>hehe ^^</p>",
        "id": 162669104,
        "sender_full_name": "centril",
        "timestamp": 1554504997
    },
    {
        "content": "<p>can you explain more what you meant about that test?</p>",
        "id": 162669118,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554505005
    },
    {
        "content": "<p>what are you trying to test by leaving out <code>const_fn</code>?</p>",
        "id": 162669127,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554505012
    },
    {
        "content": "<p>that there's no special effects brought in by that feature gate; we have similar tests for min_const_fn</p>",
        "id": 162669162,
        "sender_full_name": "centril",
        "timestamp": 1554505044
    },
    {
        "content": "<p>(we have <em>a lot</em> of tests for min_const_fn ^^)</p>",
        "id": 162669184,
        "sender_full_name": "centril",
        "timestamp": 1554505076
    },
    {
        "content": "<p>moreover, it also tests that the gate isn't needed for what you want</p>",
        "id": 162669286,
        "sender_full_name": "centril",
        "timestamp": 1554505169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> sorry, I'm still not quite following</p>",
        "id": 162670139,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554505997
    },
    {
        "content": "<p><code>const fn</code> <em>is</em> needed</p>",
        "id": 162670142,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506001
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>   the feature gate?</p>",
        "id": 162670150,
        "sender_full_name": "centril",
        "timestamp": 1554506018
    },
    {
        "content": "<p>yeah, or at least it was when I was testing initially</p>",
        "id": 162670155,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506035
    },
    {
        "content": "<p>but I can try removing it (have to wait to find out-- rustc :( )</p>",
        "id": 162670201,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506052
    },
    {
        "content": "<p>trying now</p>",
        "id": 162670215,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  btw, how are you doing these tests without getting \"error: crate has missing stability attribute\" ?</p>",
        "id": 162670308,
        "sender_full_name": "centril",
        "timestamp": 1554506197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> sorry, not sure what you mean</p>",
        "id": 162670714,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506623
    },
    {
        "content": "<p>everything has been working fine for me</p>",
        "id": 162670718,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506628
    },
    {
        "content": "<p>weird; I got that error on playground</p>",
        "id": 162670772,
        "sender_full_name": "centril",
        "timestamp": 1554506644
    },
    {
        "content": "<p>huh</p>",
        "id": 162670782,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506657
    },
    {
        "content": "<p>no idea</p>",
        "id": 162670786,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506658
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e696d9513b54231078cc28db8e7b52ba\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e696d9513b54231078cc28db8e7b52ba\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e696d9513b54231078cc28db8e7b52ba</a></p>",
        "id": 162670794,
        "sender_full_name": "centril",
        "timestamp": 1554506675
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> maybe the error I <em>am</em> getting is hiding that one</p>",
        "id": 162670817,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  can you extract the <code>fn compiles</code> to a <code>// run-pass</code> test?</p>",
        "id": 162670833,
        "sender_full_name": "centril",
        "timestamp": 1554506741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> lol sure</p>",
        "id": 162670840,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506751
    },
    {
        "content": "<p>thanks</p>",
        "id": 162670843,
        "sender_full_name": "centril",
        "timestamp": 1554506761
    },
    {
        "content": "<p>getting damn picky about this</p>",
        "id": 162670889,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506767
    },
    {
        "content": "<p>;)</p>",
        "id": 162670891,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506770
    },
    {
        "content": "<p>:D</p>",
        "id": 162670892,
        "sender_full_name": "centril",
        "timestamp": 1554506771
    },
    {
        "content": "<p>yup, then I get the \"crate has missing stability attribute\" error</p>",
        "id": 162671049,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554506937
    },
    {
        "content": "<p>good; logic is restored :P</p>",
        "id": 162671108,
        "sender_full_name": "centril",
        "timestamp": 1554507000
    },
    {
        "content": "<p>Okay, pushed</p>",
        "id": 162671291,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554507144
    },
    {
        "content": "<p>thanks; looks good aside from my nit</p>",
        "id": 162671551,
        "sender_full_name": "centril",
        "timestamp": 1554507443
    },
    {
        "content": "<p>first you want run-pass</p>",
        "id": 162671560,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554507468
    },
    {
        "content": "<p>then you want // run-pass</p>",
        "id": 162671563,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554507471
    },
    {
        "content": "<p>XD</p>",
        "id": 162671568,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554507475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span>  I think you read my zulip comment before I managed to edit ;)</p>",
        "id": 162671618,
        "sender_full_name": "centril",
        "timestamp": 1554507503
    },
    {
        "content": "<p>haha I definitely did</p>",
        "id": 162671628,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554507519
    },
    {
        "content": "<p>XD</p>",
        "id": 162671629,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554507522
    },
    {
        "content": "<p>:D</p>",
        "id": 162671635,
        "sender_full_name": "centril",
        "timestamp": 1554507530
    },
    {
        "content": "<p>I'm like a <span aria-label=\"turtle\" class=\"emoji emoji-1f422\" role=\"img\" title=\"turtle\">:turtle:</span></p>",
        "id": 162671647,
        "sender_full_name": "centril",
        "timestamp": 1554507548
    },
    {
        "content": "<p>done</p>",
        "id": 162671764,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554507651
    },
    {
        "content": "<p>excellent</p>",
        "id": 162671891,
        "sender_full_name": "centril",
        "timestamp": 1554507816
    }
]