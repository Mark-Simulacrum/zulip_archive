[
    {
        "content": "<p>Hi! I'm trying to update the meta-rust Yocto Linux layer from Rust 1.47.0 to 1.49.0 (aka I'm cross-compiling Rust 1.49.0) and I'm hitting build problems:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0432]: unresolved imports `libc::c_int`, `libc::c_void`\n  --&gt; library/std/src/sys_common/net.rs:17:12\n   |\n17 | use libc::{c_int, c_void};\n   |            ^^^^^  ^^^^^^ no `c_void` in the root\n   |            |\n   |            no `c_int` in the root\n</code></pre></div>\n<p>Apparently, Cargo/Rust doesn't get that its a \"unix\" system and includes none of the related libc parts during build.<br>\nAny ideas? Has anything related changed between Rust 1.47.0 and 1.49.0?</p>",
        "id": 224323776,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611839868
    },
    {
        "content": "<p>See <a href=\"https://pastebin.com/S6tuHZyx\">https://pastebin.com/S6tuHZyx</a> for the full build log</p>",
        "id": 224323864,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611839901
    },
    {
        "content": "<p>And <a href=\"https://github.com/ColinFinck/meta-rust/tree/update-to-rust-1.49.0\">https://github.com/ColinFinck/meta-rust/tree/update-to-rust-1.49.0</a> for my current meta-rust tree</p>",
        "id": 224323909,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611839934
    },
    {
        "content": "<p>what target are you building for? a custom one?</p>",
        "id": 224323974,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1611839979
    },
    {
        "content": "<p>Nope, x86_64 host and target</p>",
        "id": 224323998,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611839996
    },
    {
        "content": "<p>The target is called <code>x86_64-linux</code>. This is not a builtin target. Where is the target specification json file?</p>",
        "id": 224324102,
        "sender_full_name": "bjorn3",
        "timestamp": 1611840029
    },
    {
        "content": "<p>Seems to be autogenerated here: <a href=\"https://github.com/ColinFinck/meta-rust/blob/update-to-rust-1.49.0/recipes-devtools/rust/rust.inc#L319-L377\">https://github.com/ColinFinck/meta-rust/blob/update-to-rust-1.49.0/recipes-devtools/rust/rust.inc#L319-L377</a></p>",
        "id": 224324402,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611840206
    },
    {
        "content": "<p>Can you post the generated file? It seems to be created in <code>d.getVar('WORKDIR') + '/targets/'</code>.</p>",
        "id": 224324835,
        "sender_full_name": "bjorn3",
        "timestamp": 1611840419
    },
    {
        "content": "<p>sure, give me some minutes. Just need to rebuild up to that point and not let Docker auto-remove the build container right after that..</p>",
        "id": 224325410,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611840740
    },
    {
        "content": "<p>Finally, here we go:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    &quot;llvm-target&quot;: &quot;x86_64-unknown-linux-gnu&quot;,\n    &quot;panic-strategy&quot;: &quot;unwind&quot;,\n    &quot;target-endian&quot;: &quot;little&quot;,\n    &quot;target-c-int-width&quot;: &quot;32&quot;,\n    &quot;arch&quot;: &quot;x86_64&quot;,\n    &quot;linker-is-gnu&quot;: true,\n    &quot;dynamic-linking&quot;: true,\n    &quot;ar&quot;: &quot;ar&quot;,\n    &quot;target-pointer-width&quot;: &quot;64&quot;,\n    &quot;has-elf-tls&quot;: true,\n    &quot;os&quot;: &quot;linux&quot;,\n    &quot;max-atomic-width&quot;: 64,\n    &quot;env&quot;: &quot;gnu&quot;,\n    &quot;target-family&quot;: &quot;unix&quot;,\n    &quot;linker&quot;: &quot;gcc&quot;,\n    &quot;linker-flavor&quot;: &quot;gcc&quot;,\n    &quot;position-independent-executables&quot;: true,\n    &quot;cpu&quot;: &quot;generic&quot;,\n    &quot;vendor&quot;: &quot;unknown&quot;,\n    &quot;has-rpath&quot;: true,\n    &quot;data-layout&quot;: &quot;e-m:e-i64:64-f80:128-n8:16:32:64-S128&quot;,\n    &quot;executables&quot;: true\n}\n</code></pre></div>",
        "id": 224328391,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611842203
    },
    {
        "content": "<p>The <code>cpu</code> and <code>data-layout</code> differ from the <code>x86_64-unknown-linux-gnu</code> target spec. In addition a few fields are missing here. I wouldn't expect any of this to cause this error though. For reference this is the target spec of <code>x86_64-unknown-linux-gnu</code>:</p>\n<div class=\"codehilite\" data-code-language=\"jsonc\"><pre><span></span><code>// rustc --print target-spec-json -Zunstable-options\n{\n  \"arch\": \"x86_64\",\n  \"cpu\": \"x86-64\",\n  \"crt-static-respected\": true,\n  \"data-layout\": \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\",\n  \"dynamic-linking\": true,\n  \"env\": \"gnu\",\n  \"executables\": true,\n  \"has-elf-tls\": true,\n  \"has-rpath\": true,\n  \"is-builtin\": true,\n  \"linker-is-gnu\": true,\n  \"llvm-target\": \"x86_64-unknown-linux-gnu\",\n  \"max-atomic-width\": 64,\n  \"os\": \"linux\",\n  \"position-independent-executables\": true,\n  \"pre-link-args\": {\n    \"gcc\": [\n      \"-Wl,--as-needed\",\n      \"-Wl,-z,noexecstack\",\n      \"-m64\"\n    ]\n  },\n  \"relro-level\": \"full\",\n  \"stack-probes\": {\n    \"kind\": \"inline-or-call\",\n    \"min-llvm-version-for-inline\": [\n      11,\n      0,\n      1\n    ]\n  },\n  \"target-family\": \"unix\",\n  \"target-pointer-width\": \"64\"\n}\n</code></pre></div>",
        "id": 224329772,
        "sender_full_name": "bjorn3",
        "timestamp": 1611842846
    },
    {
        "content": "<p>Yeah, even if I change <code>cpu</code> and <code>data-layout</code> to your values, it still fails.</p>",
        "id": 224457271,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611918794
    },
    {
        "content": "<p>I'm currently trying out the full <code>rustc</code> command line that cargo emits</p>",
        "id": 224457568,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611918965
    },
    {
        "content": "<p>It contains a <code>\"--target\" \"x86_64-linux\"</code> parameter and when I write arbitrary junk into that file, <code>rustc</code> fails differently. So I can confirm that my \"x86_64-linux.json\" target file is picked up by <code>rustc</code></p>",
        "id": 224457750,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611919096
    },
    {
        "content": "<p>yet, I can also confirm that <code>#[cfg(unix)]</code> (and probably more) is not passed down to <code>rustc</code>:<br>\nAdding</p>\n<div class=\"codehilite\"><pre><span></span><code>#[cfg(not(unix))]\nmod bla;\n</code></pre></div>\n<p>to the file that is being compiled by <code>rustc</code> (library/std/src/lib.rs) emits another error message that module \"bla\" isn't found</p>",
        "id": 224457947,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611919229
    },
    {
        "content": "<p>changing that to <code>#[cfg(unix)]</code> does not emit the error --&gt; The <code>unix</code> cfg is obviously not set</p>",
        "id": 224458015,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611919291
    },
    {
        "content": "<p>For the record, this is the <code>rustc</code> command line that is failing:</p>",
        "id": 224458103,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611919340
    },
    {
        "content": "<p><code>\"/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1/bin/rustc\" \"--crate-name\" \"std\" \"--edition=2018\" \"library/std/src/lib.rs\" \"--error-format=json\" \"--json=diagnostic-rendered-ansi\" \"--crate-type\" \"dylib\" \"--crate-type\" \"rlib\" \"--emit=dep-info,link\" \"-C\" \"prefer-dynamic\" \"-C\" \"opt-level=3\" \"-C\" \"embed-bitcode=no\" \"-C\" \"debuginfo=0\" \"--cfg\" \"feature=\\\"addr2line\\\"\" \"--cfg\" \"feature=\\\"backtrace\\\"\" \"--cfg\" \"feature=\\\"compiler-builtins-c\\\"\" \"--cfg\" \"feature=\\\"gimli-symbolize\\\"\" \"--cfg\" \"feature=\\\"miniz_oxide\\\"\" \"--cfg\" \"feature=\\\"object\\\"\" \"--cfg\" \"feature=\\\"panic_unwind\\\"\" \"--cfg\" \"feature=\\\"std_detect_dlsym_getauxval\\\"\" \"--cfg\" \"feature=\\\"std_detect_file_io\\\"\" \"-C\" \"metadata=0689b0d4825be2a9\" \"-C\" \"extra-filename=-0689b0d4825be2a9\" \"--out-dir\" \"/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps\" \"--target\" \"x86_64-linux\" \"-C\" \"linker=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/wrapper/target-rust-cc\" \"-L\" \"dependency=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps\" \"-L\" \"dependency=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/release/deps\" \"--extern\" \"addr2line=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libaddr2line-edcfc31306b8709a.rlib\" \"--extern\" \"alloc=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/liballoc-f4b8ef2a33c74c1e.rlib\" \"--extern\" \"cfg_if=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libcfg_if-8695175b24530bb4.rlib\" \"--extern\" \"compiler_builtins=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libcompiler_builtins-04a67786e44ac3ca.rlib\" \"--extern\" \"core=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libcore-cd81f58443142307.rlib\" \"--extern\" \"hashbrown=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libhashbrown-16cf52eb19e44dac.rlib\" \"--extern\" \"libc=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/liblibc-62d36dccb1bc86e8.rlib\" \"--extern\" \"miniz_oxide=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libminiz_oxide-859c882c14d03951.rlib\" \"--extern\" \"object=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libobject-9fba61ca3b99b7cf.rlib\" \"--extern\" \"panic_abort=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libpanic_abort-2f44dc7b83590ef3.rlib\" \"--extern\" \"panic_unwind=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libpanic_unwind-bdd13821053c09ac.rlib\" \"--extern\" \"rustc_demangle=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/librustc_demangle-37c721caed3440d7.rlib\" \"--extern\" \"unwind=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/deps/libunwind-32055743aebf7e9c.rlib\" \"-Zmacro-backtrace\" \"-Clink-args=-Wl,-rpath,$ORIGIN/../lib\" \"-Cprefer-dynamic\" \"-Cembed-bitcode=yes\" \"-Z\" \"binary-dep-depinfo\" \"--cfg\" \"backtrace_in_libstd\" \"-L\" \"native=/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-linux/release/build/compiler_builtins-d834d867a1b86082/out\" \"-Wrust_2018_idioms\" \"-Wunused_lifetimes\" \"-Dwarnings\" \"--sysroot\" \"/drone/src/build-apu2/tmp/work/x86_64-linux/rust-native/1.49.0-r0/rustc-1.49.0-src/build/x86_64-unknown-linux-gnu/stage1\" \"-Z\" \"force-unstable-if-unmarked\"</code></p>",
        "id": 224458109,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611919347
    },
    {
        "content": "<p>Ok, I've tracked that problem down to a regression from Rust 1.48.0 to Rust 1.49.0 that is however fixed in Rust 1.50.0-beta.8</p>",
        "id": 224460999,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921485
    },
    {
        "content": "<p>My minimal example now is as follows:</p>",
        "id": 224461019,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921504
    },
    {
        "content": "<p><a href=\"http://test.rs\">test.rs</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>#[cfg(unix)]\nmod unix;\n\n#[cfg(not(unix))]\nmod not_unix;\n</code></pre></div>",
        "id": 224461038,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921524
    },
    {
        "content": "<p><code>rustc --target x86_64-linux test.rs</code></p>",
        "id": 224461053,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921537
    },
    {
        "content": "<p>With 1.48.0 and 1.50.0-beta.8, I get: <code>error[E0583]: file not found for module unix</code></p>",
        "id": 224461084,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921576
    },
    {
        "content": "<p>With 1.49.0, I get: <code>error[E0583]: file not found for module not_unix</code></p>",
        "id": 224461158,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921614
    },
    {
        "content": "<p>Looks like someone else noticed already and fixed. Can someone pinpoint me to a bug report/PR/commit?</p>",
        "id": 224461189,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921642
    },
    {
        "content": "<p>Can you try adding <code>\"target_family\": \"unix\"</code>? Notice the <code>_</code> instead of <code>-</code>. I think <a href=\"https://github.com/rust-lang/rust/commit/dc004d4809f7e5fb5ea73ac630a0b1bdb58eabe4\">dc004d4809f7e5fb5ea73ac630a0b1bdb58eabe4</a> accidentally renamed it from <code>target-family</code> to <code>target_family</code>.</p>",
        "id": 224461464,
        "sender_full_name": "bjorn3",
        "timestamp": 1611921837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350190\">@Colin Finck</span> ^</p>",
        "id": 224461515,
        "sender_full_name": "bjorn3",
        "timestamp": 1611921848
    },
    {
        "content": "<p>Yep, that does the trick! :)</p>",
        "id": 224461590,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921922
    },
    {
        "content": "<p>Thanks a lot!</p>",
        "id": 224461599,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611921929
    },
    {
        "content": "<p>I will open an issue about this accidental rename.</p>",
        "id": 224461623,
        "sender_full_name": "bjorn3",
        "timestamp": 1611921946
    },
    {
        "content": "<p>Now the open question is: When did they accidentally fix it again? :D</p>",
        "id": 224461706,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922007
    },
    {
        "content": "<p>Considering that 1.50.0-beta.8 is not affected</p>",
        "id": 224461727,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922022
    },
    {
        "content": "<p>It is fixed? Does <code>rustc --print cfg</code> show <code>unix</code> for 1.50.0-beta.8?</p>",
        "id": 224461861,
        "sender_full_name": "bjorn3",
        "timestamp": 1611922124
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/commit/dd682cb48c8b667859dded98a4bbfbd891a1eca4\">https://github.com/rust-lang/rust/commit/dd682cb48c8b667859dded98a4bbfbd891a1eca4</a> looks suspicious</p>",
        "id": 224462123,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922328
    },
    {
        "content": "<p>only 4 days later than the faulty commit - but apparently didn't make it into 1.49.0</p>",
        "id": 224462143,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922350
    },
    {
        "content": "<p>And yes <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>, I can confirm that <code>rustc --target x86_64-linux --print cfg</code> prints <code>target_family=\"unix\"</code> on Rust 1.50.0-beta.8, but not on 1.49.0</p>",
        "id": 224462254,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922442
    },
    {
        "content": "<p>unless I add <code>\"target_family\": \"unix\",</code> to the JSON file</p>",
        "id": 224462300,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922464
    },
    {
        "content": "<p>No, I mean just <code>unix</code>, not <code>target_family=\"unix\"</code>.</p>",
        "id": 224462365,
        "sender_full_name": "bjorn3",
        "timestamp": 1611922533
    },
    {
        "content": "<p>Yes, same for <code>unix</code>. Works on 1.50.0-beta.8, but not on 1.49.0</p>",
        "id": 224462506,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922619
    },
    {
        "content": "<p>Does this deserve a bug report anyway?</p>",
        "id": 224462931,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611922955
    },
    {
        "content": "<p>Considering that 1.49.0 is latest stable, other people may well run into the same problem and need the same workaround as me (adding underscore options for the affected dashed options)</p>",
        "id": 224462972,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611923002
    },
    {
        "content": "<p>Let me know if and where to report that (e.g. if there is a place for known problems with a stable release)</p>",
        "id": 224463188,
        "sender_full_name": "Colin Finck",
        "timestamp": 1611923179
    },
    {
        "content": "<p>Target spec json files are semi-unstable. While rustc does technically accept them on stable, it is not possible to build the corresponding libcore on stable.</p>",
        "id": 224464500,
        "sender_full_name": "bjorn3",
        "timestamp": 1611924047
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/71009\">#71009</a></p>",
        "id": 224464666,
        "sender_full_name": "bjorn3",
        "timestamp": 1611924160
    },
    {
        "content": "<p>Is there some reason you need to use a target file?</p>",
        "id": 224692158,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1612163700
    },
    {
        "content": "<p>Yes, meta-rust needs to be able to build for any target that Yocto supports. It generates the target JSON file accordingly: <a href=\"https://github.com/meta-rust/meta-rust/blob/master/recipes-devtools/rust/rust.inc#L319\">https://github.com/meta-rust/meta-rust/blob/master/recipes-devtools/rust/rust.inc#L319</a></p>",
        "id": 225147120,
        "sender_full_name": "Colin Finck",
        "timestamp": 1612438056
    },
    {
        "content": "<p>I'm saying, could you instead have a mapping to Rust targets, rather than recreating them?</p>",
        "id": 225807633,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1612946896
    }
]