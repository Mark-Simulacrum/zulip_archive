[
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> can you clarify why you don't think we can get away with just setting the <code>warning_period_57979_nested_impl_trait</code> back to <code>false</code> at the \"right\" point(s) in the control flow?</p>",
        "id": 160470826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552304054
    },
    {
        "content": "<p>Its not that I'm trying to argue that you are wrong; if anything, the failure of my prior attempt to do this makes me think that you are <em>right</em></p>",
        "id": 160470864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552304120
    },
    {
        "content": "<p>but I nonetheless haven't grokked why the old NestedImplTraitVisitor is necessary to exhibit the behavior</p>",
        "id": 160470881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552304154
    },
    {
        "content": "<p>It seems hard to reason about and it's possible fragile since the AST validator is likely to be changed. I'm not saying it's impossible, but it's probably not worthwhile.</p>",
        "id": 160470968,
        "sender_full_name": "Zoxc",
        "timestamp": 1552304268
    },
    {
        "content": "<p>yeah, the \"worthwhile use of programming effort\" point is definitely the one I'm struggling with</p>",
        "id": 160471057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552304356
    },
    {
        "content": "<p>Given that we're going to remove this code later, I'd go with the easy option</p>",
        "id": 160471073,
        "sender_full_name": "Zoxc",
        "timestamp": 1552304384
    },
    {
        "content": "<p>Ah! now I see where the original logic truly went wrong. I had thought the issue was that skipping <code>visit_ty</code> meant that it missed the <em>check</em> for an outer impl trait; but that wasn't the problem at all. It was that calling <code>walk_ty</code> instead of <code>visit_ty</code> meant that we missed a <em>single</em> overwrite of an outer impl trait.</p>",
        "id": 160475080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552308264
    },
    {
        "content": "<p>this misunderstanding of my own explains why I had such difficulty making test cases that would illustrate the fine distinctions here.</p>",
        "id": 160475119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552308295
    },
    {
        "content": "<p>okay I've updated the PR now. I think this captures the previous behavior very precisely.</p>",
        "id": 160488759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552318332
    },
    {
        "content": "<p>hey, <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> , you said your feedback about the incorrect comment was not addressed, but I thought I did address it</p>",
        "id": 160563406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391619
    },
    {
        "content": "<p>are you talking about <a href=\"https://github.com/rust-lang/rust/pull/58608#discussion_r259098166\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58608#discussion_r259098166\">this feedback</a> ?</p>",
        "id": 160563409,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391625
    },
    {
        "content": "<p>Oh maybe I misunderstood your comment</p>",
        "id": 160563474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391671
    },
    {
        "content": "<p>I thought you were objecting to the use of the word \"incomplete\" (and were suggesting I say \"bugged\" instead, and I settled on \"buggy\")</p>",
        "id": 160563494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391706
    },
    {
        "content": "<p>but re-reading interaction now, I realize that you may have been objecting to my phrasing \"until sometime after PR <a href=\"https://github.com/rust-lang/rust/issues/57730\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57730\">#57730</a> landed\", and that you'd prefer \"until PR <a href=\"https://github.com/rust-lang/rust/issues/57730\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57730\">#57730</a> landed\"</p>",
        "id": 160563513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391749
    },
    {
        "content": "<p>Yeah</p>",
        "id": 160563561,
        "sender_full_name": "Zoxc",
        "timestamp": 1552391766
    },
    {
        "content": "<p>the reason I chose the phrasing \"sometime after <a href=\"https://github.com/rust-lang/rust/issues/57730\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57730\">#57730</a>\" is because the analysis even with <a href=\"https://github.com/rust-lang/rust/issues/57730\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57730\">#57730</a> was still buggy.</p>",
        "id": 160563563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391769
    },
    {
        "content": "<p>I could say \"until PRs <a href=\"https://github.com/rust-lang/rust/issues/57730\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57730\">#57730</a> and <a href=\"https://github.com/rust-lang/rust/issues/57981\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57981\">#57981</a> landed\"</p>",
        "id": 160563599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391820
    },
    {
        "content": "<p>would that be satisfactory?</p>",
        "id": 160563612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391828
    },
    {
        "content": "<p>Sure</p>",
        "id": 160563644,
        "sender_full_name": "Zoxc",
        "timestamp": 1552391860
    },
    {
        "content": "<p>okay great. I'll make that change and then <code>@bors r=zoxc</code>. Thanks!</p>",
        "id": 160563656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552391874
    }
]