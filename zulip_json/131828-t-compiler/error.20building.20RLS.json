[
    {
        "content": "<p>I'm trying to build RLS to make a small contribution, but I'm getting an error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: environment variable `CFG_RELEASE` not defined\n   --&gt; /Users/user/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-ap-rustc_attr-705.0.0/src/builtin.rs:589:47\n    |\n589 |             let rustc_version = parse_version(env!(&quot;CFG_RELEASE&quot;), true).unwrap();\n    |                                               ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: aborting due to previous error\n\nerror: could not compile `rustc-ap-rustc_attr`\n</code></pre></div>\n<p>I tried both <code>cargo run -- --cli</code> and <code>cargo run --release -- --cli</code>. I didn't see anything about a <code>CFG_RELEASE</code> environment variable in <code>contributing.md</code>. How do I fix this error?</p>",
        "id": 232525766,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617156684
    },
    {
        "content": "<p>Aha, it's a rustfmt thing. The rustfmt repo suggests:</p>\n<div class=\"codehilite\"><pre><span></span><code>export CFG_RELEASE=1.45.0-nightly\nexport CFG_RELEASE_CHANNEL=nightly\n</code></pre></div>",
        "id": 232525865,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617156755
    },
    {
        "content": "<p>Also, how do I run RLS with <code>--cli</code>? The contributing docs say:</p>\n<blockquote>\n<p>You need to run it in the root directory of the project to be analyzed with the <code>--cli</code> flag, e.g., <code>cargo run -- --cli</code>. </p>\n</blockquote>\n<p>But how do I <code>cargo run</code> RLS if I'm in the directory of another project? I tried <code>target/debug/rls</code> but that gives linker errors.</p>",
        "id": 232526283,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617157088
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>dyld: Library not loaded: @rpath/librustc_driver-f7f595b4250ac716.dylib\n  Referenced from: /Users/user/rls/target/debug/rls\n  Reason: image not found\nfish: &#39;target/debug/rls&#39; terminated by signal SIGABRT (Abort)\n</code></pre></div>",
        "id": 232526313,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617157133
    },
    {
        "content": "<p>You can use <code>--manifest-path /path/to/rls/Cargo.toml</code> to run from a different directory.</p>",
        "id": 232528919,
        "sender_full_name": "Eric Huss",
        "timestamp": 1617159509
    },
    {
        "content": "<p>I saw that online, but I thought it was for something else. Thanks!</p>",
        "id": 232529118,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617159714
    },
    {
        "content": "<p>By the way, do you know why it can't load the libraries when I use <code>target/&lt;debug|release&gt;/rls</code>, but it works fine with <code>cargo run</code>? Is Cargo using some magic to tell it where the sysroot is?</p>",
        "id": 232529187,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617159764
    },
    {
        "content": "<p>Cargo is setting LD_LIBRARY_PATH (rustup does the same when running the real rls).  You can set it with something like <code>LD_LIBRARY_PATH=$(rustc --print=sysroot)/lib</code>.</p>",
        "id": 232529752,
        "sender_full_name": "Eric Huss",
        "timestamp": 1617160283
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 232530571,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617161106
    }
]