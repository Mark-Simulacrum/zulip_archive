[
    {
        "content": "<p>What is a good way to disable bounds checks on slices? <span class=\"user-mention\" data-user-id=\"302357\">@Natalie Popescu</span> and I are doing some benchmarking on Rust workloads for our research, trying to understand performance regressions in various edge cases. <span class=\"user-mention\" data-user-id=\"302357\">@Natalie Popescu</span> has sort of brute forced disabling them with modifications to the compiler, but the results seem... wrong, so we're wondering if someone knows a tried and true way to do this.</p>",
        "id": 197611229,
        "sender_full_name": "Amit Levy",
        "timestamp": 1589487121
    },
    {
        "content": "<p>there's no compiler flag or library way, really, but the intent is to swap hot spots to get_unchecked (which is unsafe) if necessary</p>",
        "id": 197614276,
        "sender_full_name": "simulacrum",
        "timestamp": 1589488558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> indeed. In our own, hand written, benchmarks we did that, but now trying to do so for a whole library of packages pulled from <a href=\"http://crates.io\">crates.io</a>. The goal is really just get numbers---e.g. how much does bounds-checking \"cost\" (there are some degenerate cases where the answer is <em>a lot</em> but we think there are some things we can do in LLVM to ameliorate that). Someone on discord suggested removing length assertions from the MIR building code, which <em>sounds</em> promising, so we're going to try and figure out what that means and then do it :)</p>",
        "id": 197615151,
        "sender_full_name": "Amit Levy",
        "timestamp": 1589488959
    },
    {
        "content": "<p>yeah, I think that'll work for slices -- depends on what you want exactly</p>",
        "id": 197615203,
        "sender_full_name": "simulacrum",
        "timestamp": 1589488984
    },
    {
        "content": "<p>e.g. stuff like <code>vec.remove(idx)</code> it won't cover probably</p>",
        "id": 197615221,
        "sender_full_name": "simulacrum",
        "timestamp": 1589488992
    },
    {
        "content": "<p>Oh that makes sense. Yeah, slices is plenty for now. We're really just fishing for examples of pre-existing code in libraries that might hit these regressions</p>",
        "id": 197615942,
        "sender_full_name": "Amit Levy",
        "timestamp": 1589489353
    },
    {
        "content": "<p>And slices are ubiquitously used enough where I think we'll probably get lucky. Thanks!</p>",
        "id": 197615994,
        "sender_full_name": "Amit Levy",
        "timestamp": 1589489377
    }
]