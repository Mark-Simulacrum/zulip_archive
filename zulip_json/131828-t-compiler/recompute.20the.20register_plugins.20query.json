[
    {
        "content": "<p>while using <code>rustc_driver</code> I noticed that the compiler intentionally panics when the <code>register_plugins</code> query is generated after being stolen. should I open a bug report?</p>",
        "id": 247651276,
        "sender_full_name": "Gheorghe Anghelescu",
        "timestamp": 1627599136
    },
    {
        "content": "<p>afaik all Rust compiler panics are eligible bugs</p>",
        "id": 247654356,
        "sender_full_name": "oliver",
        "timestamp": 1627601278
    },
    {
        "content": "<p>I see. this one was triggered by calling the <code>std::panic</code> macro in the compiler code, so I was a wondering what is going on</p>",
        "id": 247654718,
        "sender_full_name": "Gheorghe Anghelescu",
        "timestamp": 1627601576
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281739\">oliver</span> <a href=\"#narrow/stream/131828-t-compiler/topic/recompute.20the.20register_plugins.20query/near/247654356\">said</a>:</p>\n<blockquote>\n<p>afaik all Rust compiler panics are eligible bugs</p>\n</blockquote>\n<p>well not if you poke into its internals</p>",
        "id": 247657086,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1627603671
    },
    {
        "content": "<p>You shouldn't steal any query if you want to continue compilation. There is no way to continue compilation if something necessary for compilation doesn't exist anymore. You should <code>.peek()</code> instead to borrow the query result.</p>",
        "id": 247696917,
        "sender_full_name": "bjorn3",
        "timestamp": 1627645421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/131828-t-compiler/topic/recompute.20the.20register_plugins.20query/near/247696917\">said</a>:</p>\n<blockquote>\n<p>You shouldn't steal any query if you want to continue compilation. There is no way to continue compilation if something necessary for compilation doesn't exist anymore. You should <code>.peek()</code> instead to borrow the query result.</p>\n</blockquote>\n<p>It makes sense that in order to continue the compilation I should make sure that all queries that I steal are recomputed. The compiler panic I get is not because of missing query results.</p>",
        "id": 247704061,
        "sender_full_name": "Gheorghe Anghelescu",
        "timestamp": 1627649949
    },
    {
        "content": "<p>I will open an issue with a repro. I'm waiting a bit to see if I can also send a fix at the same time.</p>",
        "id": 247704376,
        "sender_full_name": "Gheorghe Anghelescu",
        "timestamp": 1627650085
    },
    {
        "content": "<p>Some queries like macro expansion are not recomputable as they may be non-deterministic (proc-macros are not guaranteed to be deterministic. they should be from semantic perspective, but rustc can't depend on this). Others like codegen are way too expensive and a <code>TyCtxt</code> can only be created once per compilation session due to the fact that it affects the incremental compilation state.</p>",
        "id": 247705858,
        "sender_full_name": "bjorn3",
        "timestamp": 1627650855
    },
    {
        "content": "<p>If you were to create a <code>TyCtxt</code> twice, you would get two dep graphs that conflict with each other.</p>",
        "id": 247705970,
        "sender_full_name": "bjorn3",
        "timestamp": 1627650917
    },
    {
        "content": "<p>It does bug me that we use \"queries\" to mean both the dep-graph and the global Queries struct - maybe we could rename one or the other?</p>",
        "id": 247722316,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627658513
    },
    {
        "content": "<p>(the global Queries struct gives me a headache in general)</p>",
        "id": 247722412,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627658555
    }
]