[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; our weekly meeting, held in this topic area, will be started in about 63 minutes.</p>",
        "id": 161949020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553777857
    },
    {
        "content": "<p>In the meantime I will be doing weekly triage in a <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-28.20.2354818/near/161948966\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-28.20.2354818/near/161948966\">parallel topic</a></p>",
        "id": 161949081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553777883
    },
    {
        "content": "<p>The <a href=\"https://github.com/rust-lang/compiler-team/blob/master/about/triage-meeting.md#working-group-check-in\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/master/about/triage-meeting.md#working-group-check-in\">schedule for WG-checkin</a> says that this week we might be hearing from wg-parallel-rustc and wg-pgo</p>",
        "id": 161949157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553777953
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> or <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> : is one of you prepared to present for wg-parallel-rustc in about 90 minutes or so?</p>",
        "id": 161949185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553777984
    },
    {
        "content": "<p>and <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> , you are listed as the context for wg-pgo, so maybe you'll be doing both presentations? Or maybe you plan to delegate to <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> ?</p>",
        "id": 161949268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553778018
    },
    {
        "content": "<p>(Just let me know so that I block off time accordingly. I know it is short notice; i should have sent out a note on Tuesday, but I forgot.)</p>",
        "id": 161949311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553778050
    },
    {
        "content": "<p>I can do a little update on PGO</p>",
        "id": 161950024,
        "sender_full_name": "mw",
        "timestamp": 1553778651
    },
    {
        "content": "<p>I'm feeling a bit disorganized around wg-parallel-rustc</p>",
        "id": 161950059,
        "sender_full_name": "mw",
        "timestamp": 1553778685
    },
    {
        "content": "<p>okay. Do you think that <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> would have more to say? Or should we not bother with a wg-parallel-rustc check-in this week then?</p>",
        "id": 161950137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553778727
    },
    {
        "content": "<p>well, if <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> would like to give an update, I'd certainly be interested. But if not, it's better to do it another time</p>",
        "id": 161950200,
        "sender_full_name": "mw",
        "timestamp": 1553778790
    },
    {
        "content": "<p>PSA to T-compiler -- if you r+ a PR someone else is assigned to, please r? yourself as well</p>",
        "id": 161950218,
        "sender_full_name": "centril",
        "timestamp": 1553778809
    },
    {
        "content": "<blockquote>\n<p>PSA to T-compiler -- if you r+ a PR someone else is assigned to, please r? yourself as well</p>\n</blockquote>\n<p>fair enough. (for context for others: this is regarding what I did on PR <a href=\"https://github.com/rust-lang/rust/issues/59468\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59468\">#59468</a>)</p>",
        "id": 161950319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553778872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  yes but it happens a lot ;)</p>",
        "id": 161950345,
        "sender_full_name": "centril",
        "timestamp": 1553778898
    },
    {
        "content": "<p>maybe the bot should do it</p>",
        "id": 161950370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553778914
    },
    {
        "content": "<p>its an interesting policy question, whether that should be automatic or not</p>",
        "id": 161950393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553778930
    },
    {
        "content": "<p>yeah that would be nice; ^ <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span></p>",
        "id": 161950398,
        "sender_full_name": "centril",
        "timestamp": 1553778937
    },
    {
        "content": "<p>if one steals review action, it certainly seems like one should take on the burden of assignment as well.</p>",
        "id": 161950408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553778946
    },
    {
        "content": "<p>I do <code>r? @Centril @bors r+ rollup</code> often these days ;)</p>",
        "id": 161950492,
        "sender_full_name": "centril",
        "timestamp": 1553778989
    },
    {
        "content": "<p>if/when you decide that's something you want open an issue on <a href=\"https://github.com/rust-lang/infra-team\" target=\"_blank\" title=\"https://github.com/rust-lang/infra-team\">https://github.com/rust-lang/infra-team</a></p>",
        "id": 161950547,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1553779038
    },
    {
        "content": "<p>okay, I'll set up an emoji poll for (the benefit for those on mobile where normal poll feature does not work.)</p>",
        "id": 161950677,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553779145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  I'll create a GH issue tagged with T-compiler, T-infra, T-release, T-libs, T-lang and rfcbot merge it</p>",
        "id": 161950785,
        "sender_full_name": "centril",
        "timestamp": 1553779212
    },
    {
        "content": "<p>Should <code>@bors r+</code> cause bors to also <code>r? &lt;yourself&gt;</code>, which implies the issue is assigned to you? <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> or <span aria-label=\"thumbs down\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"thumbs down\">:thumbs_down:</span> or <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>  based on your immediate opinion ( <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> is effectively \"abstain\").</p>",
        "id": 161950792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553779218
    },
    {
        "content": "<p>(since this is a matter for more than t-compiler)</p>",
        "id": 161950809,
        "sender_full_name": "centril",
        "timestamp": 1553779232
    },
    {
        "content": "<p>true. So we'll see how people react, but I'll try not to devote too much time to it since it is a cross-team-spanning concern.</p>",
        "id": 161950840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553779272
    },
    {
        "content": "<p>cool</p>",
        "id": 161950851,
        "sender_full_name": "centril",
        "timestamp": 1553779280
    },
    {
        "content": "<p><span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> seeking (or \"sought\") volunteer for  \"Future-incompatible warnings should always print a warning, even if lints are allowed\" <a href=\"https://github.com/rust-lang/rust/issues/34596\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34596\">#34596</a></p>",
        "id": 161951314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553779609
    },
    {
        "content": "<p>(to be clear, <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> did say they would look at <a href=\"https://github.com/rust-lang/rust/issues/34596\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34596\">#34596</a>. But I'm just following a protocol here to increase visibility of the work item)</p>",
        "id": 161951362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553779637
    },
    {
        "content": "<p>That's accomplished by making them warnings and not lints</p>",
        "id": 161951933,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1553779964
    },
    {
        "content": "<p>And I personally would expect that silencing a lint that is warning me about deprecation will eventually lead to my code not compiling in a subsequent version... Of course that gets hairy with libs hiding these lint warnings from their downstreams</p>",
        "id": 161952045,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1553780033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>  I think you should be able to <code>deny(...)</code> them so keeping them as lints makes sense</p>",
        "id": 161952122,
        "sender_full_name": "centril",
        "timestamp": 1553780061
    },
    {
        "content": "<p>rather, we should be able to designate lints as future-compat ones and assign a cap (e.g. \"no more liberal than Warn\")</p>",
        "id": 161952145,
        "sender_full_name": "centril",
        "timestamp": 1553780079
    },
    {
        "content": "<p>Fair point</p>",
        "id": 161952878,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1553780550
    },
    {
        "content": "<p>Disregard my digression, the implementing the suggested behavior isn't that much work and it is clearly a better situation than either of the current options</p>",
        "id": 161952981,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1553780636
    },
    {
        "content": "<p><span aria-label=\"alert\" class=\"emoji emoji-1f6a8\" role=\"img\" title=\"alert\">:alert:</span> Re: \"beta 1.33 seems to break tarpaulin on multithreading\" <a href=\"https://github.com/rust-lang/rust/issues/58104\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58104\">#58104</a> -- I'm planning to close this as non-actionable, as I suggested doing back when I nominated it four weeks ago.</p>",
        "id": 161954489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781522
    },
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 161954815,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781687
    },
    {
        "content": "<p>I've been doing triage in the <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-28.20.2354818/near/161948966\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-28.20.2354818/near/161948966\">parallel topic</a></p>",
        "id": 161954909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781726
    },
    {
        "content": "<p>I actually think it went better than much in week's past. Still didn't get through every P-high issue, but I got through a lot</p>",
        "id": 161954956,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781747
    },
    {
        "content": "<p>there were ten issues left, eight of them are assigned. so lets just collectively double-check the two that were unassigned</p>",
        "id": 161955040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781796
    },
    {
        "content": "<p>first: \"ripgrep fails to build with MUSL on Linux since the nightly release on 2019-03-15\" <a href=\"https://github.com/rust-lang/rust/issues/59411\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59411\">#59411</a></p>",
        "id": 161955061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781812
    },
    {
        "content": "<p>this is new, and I only assigned it P-high duing a triage pre-pass</p>",
        "id": 161955086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781829
    },
    {
        "content": "<p>it also has a PR (<a href=\"https://github.com/rust-lang/rust/issues/59468\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59468\">#59468</a>). I guess I might try to assign it to the author  of the PR ... and if that fails, I'll assign it to myself</p>",
        "id": 161955196,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781867
    },
    {
        "content": "<p>second unassigned P-high issue: \"Wrapping simd call results in compiler panic (nightly)\" <a href=\"https://github.com/rust-lang/rust/issues/59469\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59469\">#59469</a></p>",
        "id": 161955306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781938
    },
    {
        "content": "<p>this is also new</p>",
        "id": 161955397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781969
    },
    {
        "content": "<p>(like, less than a day old)</p>",
        "id": 161955405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781973
    },
    {
        "content": "<p>so I won't panic about assigning it to someone yet. But if someone <em>wants</em> to take it now, feel free.</p>",
        "id": 161955424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553781992
    },
    {
        "content": "<p>okay, that's all the P-high's I care to discuss.</p>",
        "id": 161955452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782013
    },
    {
        "content": "<p>next, <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\">beta-noms marked T-compiler</a></p>",
        "id": 161955491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782037
    },
    {
        "content": "<p>namely: \"Fix fallout from <a href=\"https://github.com/rust-lang/rust/issues/57667\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57667\">#57667</a>\" <a href=\"https://github.com/rust-lang/rust/issues/58021\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58021\">#58021</a></p>",
        "id": 161955526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782060
    },
    {
        "content": "<p>not my favorite PR description ever. (the joke is that no description was given by PR author. I'll put one in.)</p>",
        "id": 161955541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782074
    },
    {
        "content": "<p>(especially since github issue titles don't do the hyperlinks)</p>",
        "id": 161955603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782094
    },
    {
        "content": "<p>there was some issue that I tried to reproduce last week but failed</p>",
        "id": 161955862,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782251
    },
    {
        "content": "<p>it was one of those \"requesting volunteer\" issues I thiink...</p>",
        "id": 161955871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782260
    },
    {
        "content": "<blockquote>\n<p>(especially since github issue titles don't do the hyperlinks)</p>\n</blockquote>\n<p>(give <a href=\"https://addons.mozilla.org/en-US/firefox/addon/refined-github-/\" target=\"_blank\" title=\"https://addons.mozilla.org/en-US/firefox/addon/refined-github-/\">refined GitHub</a> a try)</p>",
        "id": 161955895,
        "sender_full_name": "varkor",
        "timestamp": 1553782269
    },
    {
        "content": "<p>ah well no matter, I guess you took a look during pre-triage</p>",
        "id": 161955899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782271
    },
    {
        "content": "<p>sorry for my silence, I was reviewing the comment thread on PR <a href=\"https://github.com/rust-lang/rust/issues/58021\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58021\">#58021</a></p>",
        "id": 161955969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782323
    },
    {
        "content": "<p>but now I've managed to confuse myself</p>",
        "id": 161956025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782359
    },
    {
        "content": "<p>since the comment thread prepared me for a really complicated PR</p>",
        "id": 161956036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782371
    },
    {
        "content": "<p>but the actual diff that was settled on looks ... very simple?</p>",
        "id": 161956055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782385
    },
    {
        "content": "<p>yea I think everyone realized that <code>Box</code> is more magical than everyone was aware of, and everything went well from there</p>",
        "id": 161956155,
        "sender_full_name": "oli",
        "timestamp": 1553782451
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> even asked <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and me to explain when box became magical enough to do this: <a href=\"https://github.com/rust-lang/rust/pull/58021#discussion_r265109175\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58021#discussion_r265109175\">https://github.com/rust-lang/rust/pull/58021#discussion_r265109175</a></p>",
        "id": 161956179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782471
    },
    {
        "content": "<p>is there any chance that the point where box became \"sufficiently magical\" actually <em>postdates</em> the current beta?</p>",
        "id": 161956208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782494
    },
    {
        "content": "<p>I think the probability of that is about 0.00001%</p>",
        "id": 161956220,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782502
    },
    {
        "content": "<blockquote>\n<p>is there any chance that the point where box became \"sufficiently magical\" actually <em>postdates</em> the current beta?</p>\n</blockquote>\n<p>(because this would be the only reason I would see to not approve a beta backport here, I think)</p>",
        "id": 161956265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782535
    },
    {
        "content": "<p>I would guess that this fell our from NLL</p>",
        "id": 161956273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782540
    },
    {
        "content": "<p>We made a decision to stop artificially hobbling boxes in the analysis</p>",
        "id": 161956292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782554
    },
    {
        "content": "<p>okay and the code in question is somewhere in libstd that has NLL enabled?</p>",
        "id": 161956365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782577
    },
    {
        "content": "<p>that is my guess</p>",
        "id": 161956379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782584
    },
    {
        "content": "<p>I'd also like to know what bugs were observed from the orginal mistake</p>",
        "id": 161956404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782611
    },
    {
        "content": "<p>i.e. it certainly sounds like the code being fixed is doing a double-drop, right?</p>",
        "id": 161956461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782653
    },
    {
        "content": "<p>(Why was there no regression test added  as part of this?)</p>",
        "id": 161956469,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782661
    },
    {
        "content": "<p><span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 161956481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782670
    },
    {
        "content": "<p>That's what I understood from <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>'s comment</p>",
        "id": 161956485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782675
    },
    {
        "content": "<p>okay, well... what's the current beta schedule? When's the next beta being cut?</p>",
        "id": 161956569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782708
    },
    {
        "content": "<blockquote>\n<p>(Why was there no regression test added  as part of this?)</p>\n</blockquote>\n<p>oversight I guess</p>",
        "id": 161956570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553782710
    },
    {
        "content": "<p>because I would personally like to get the chance to write a regression test for this bug and just double check that against stable + beta + nightly</p>",
        "id": 161956656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782762
    },
    {
        "content": "<p>and while I don't want to prevent this from getting into stable in a timely fashion as part of the natural train flow</p>",
        "id": 161956684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782787
    },
    {
        "content": "<p>if the beta is being cut sometime <em>after</em> next week's T-compiler meeitng</p>",
        "id": 161956765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782808
    },
    {
        "content": "<p>then I'd prefer to delay approval of beta-backporting this</p>",
        "id": 161956786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782819
    },
    {
        "content": "<p>I guess that may be silly of me</p>",
        "id": 161956794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782825
    },
    {
        "content": "<p>perhaps better to just go ahead and approve backport</p>",
        "id": 161956801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782830
    },
    {
        "content": "<p>and do my investigation in parallel?</p>",
        "id": 161956804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782836
    },
    {
        "content": "<p>Let me go ahead and put up an emoji poll</p>",
        "id": 161956827,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782853
    },
    {
        "content": "<p>Q: Should we beta-backport \"Fix fallout from <a href=\"https://github.com/rust-lang/rust/issues/57667\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57667\">#57667</a>\" <a href=\"https://github.com/rust-lang/rust/issues/58021\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58021\">#58021</a></p>",
        "id": 161956861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782877
    },
    {
        "content": "<p>In other issues: We still have the long-standing \"[do not merge] Measure performance impact of local interners\" <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a> waiting on our team</p>",
        "id": 161956999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782964
    },
    {
        "content": "<p>(SNL has a skit about a talk show where they always run out of time before they talk to their third guest... who is always the same character...)</p>",
        "id": 161957043,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553782992
    },
    {
        "content": "<p>there has at least been discussion on the issue itself, that is good</p>",
        "id": 161957086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783035
    },
    {
        "content": "<blockquote>\n<p>In other issues: We still have the long-standing \"[do not merge] Measure performance impact of local interners\" <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a> waiting on our team</p>\n</blockquote>\n<p>maybe we should schedule a time to talk about this?</p>",
        "id": 161957158,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783065
    },
    {
        "content": "<p>or about memory usage in general</p>",
        "id": 161957166,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783072
    },
    {
        "content": "<p>and assign someone to lead and prep the discussion?</p>",
        "id": 161957167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783073
    },
    {
        "content": "<p>yeah I mean it would be good to figure out what we are <em>blocked</em> on precisely</p>",
        "id": 161957181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783093
    },
    {
        "content": "<p>my sense is that it's a bit of \"uncertainty about how to proceed\" more than anything</p>",
        "id": 161957191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783102
    },
    {
        "content": "<p>I guess that the concerns <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> raised were mostly kind of \"memory usage is too high, let's not regress, even a bit\"?</p>",
        "id": 161957243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783141
    },
    {
        "content": "<p><span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> seeking volunteer to schedule and lead a meeting for T-compiler to discuss <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a>, and perhaps digress into related issues of how to address rustc memory usage.</p>",
        "id": 161957245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783145
    },
    {
        "content": "<p>I have the feeling that everyone wants to do this but there's a vague fear of using too much memory</p>",
        "id": 161957255,
        "sender_full_name": "mw",
        "timestamp": 1553783151
    },
    {
        "content": "<p>and being so vague there's no actual way to overcome it</p>",
        "id": 161957319,
        "sender_full_name": "mw",
        "timestamp": 1553783173
    },
    {
        "content": "<p>I do really like <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> 's response there: lets identify simpler ways to keep ourselves under a memory budget.</p>",
        "id": 161957332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783185
    },
    {
        "content": "<p>anyway, I'm happy the <del>issue</del> PR got some more visibility</p>",
        "id": 161957358,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783211
    },
    {
        "content": "<p>Right. So I see a few outcomes:</p>\n<ul>\n<li>Ignore this fear and move.</li>\n<li>Try to get some data and decide the fear is unwarranted.</li>\n<li>Independently, get serious about reducing memory usage.</li>\n</ul>",
        "id": 161957359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783211
    },
    {
        "content": "<p>so we have <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\">eight nominated T-compiler issues</a></p>",
        "id": 161957419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783251
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> as well -- I don't thik it's \"fair\" to \"blame\" this change for our high memory usage per se, but I also agree with <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> that it is perhaps a problem worth attacking.</p>",
        "id": 161957421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783252
    },
    {
        "content": "<p>/me will leave some comments</p>",
        "id": 161957433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783258
    },
    {
        "content": "<p>I think based on <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> 's earlier comments that we are only going to hear from one working-group today, not two</p>",
        "id": 161957464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783281
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=aeed63bf383e46bbaf932f4b555697ddb8328d89&amp;end=2eb7307a44bc76a18eeb0c4d2947492b2be4cbf2&amp;stat=max-rss\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=aeed63bf383e46bbaf932f4b555697ddb8328d89&amp;end=2eb7307a44bc76a18eeb0c4d2947492b2be4cbf2&amp;stat=max-rss\">https://perf.rust-lang.org/compare.html?start=aeed63bf383e46bbaf932f4b555697ddb8328d89&amp;end=2eb7307a44bc76a18eeb0c4d2947492b2be4cbf2&amp;stat=max-rss</a></p>",
        "id": 161957514,
        "sender_full_name": "mw",
        "timestamp": 1553783288
    },
    {
        "content": "<p>this is data on the regression, right?</p>",
        "id": 161957536,
        "sender_full_name": "mw",
        "timestamp": 1553783301
    },
    {
        "content": "<p>yes, I'll give an update on PGO</p>",
        "id": 161957571,
        "sender_full_name": "mw",
        "timestamp": 1553783332
    },
    {
        "content": "<p>okay lets do that update now</p>",
        "id": 161957582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783343
    },
    {
        "content": "<p>alright</p>",
        "id": 161957598,
        "sender_full_name": "mw",
        "timestamp": 1553783349
    },
    {
        "content": "<p>and then we'll spend the time afterthe update on nominated issues</p>",
        "id": 161957604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783353
    },
    {
        "content": "<p>since that can balloon</p>",
        "id": 161957613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553783357
    },
    {
        "content": "<p>so PGO stands for \"profile-guided optimization\" and, in general, works first collection data about a programs typical execution</p>",
        "id": 161957622,
        "sender_full_name": "mw",
        "timestamp": 1553783364
    },
    {
        "content": "<p>(e.g. which branches it is likely to take)</p>",
        "id": 161957632,
        "sender_full_name": "mw",
        "timestamp": 1553783371
    },
    {
        "content": "<p>and then using that data to inform optimizations such as inlining, machine-code layout (for better i-cache behavior), register allocation, etc.</p>",
        "id": 161957643,
        "sender_full_name": "mw",
        "timestamp": 1553783377
    },
    {
        "content": "<p>it's often considered an important optimization</p>",
        "id": 161957696,
        "sender_full_name": "mw",
        "timestamp": 1553783402
    },
    {
        "content": "<p>there are different ways of collecting data about a program.</p>",
        "id": 161957742,
        "sender_full_name": "mw",
        "timestamp": 1553783412
    },
    {
        "content": "<p>one is to run the program inside a profiler, such as <code>perf</code>.</p>",
        "id": 161957749,
        "sender_full_name": "mw",
        "timestamp": 1553783418
    },
    {
        "content": "<p>another is to create an instrumented binary that has data collection built right into it.</p>",
        "id": 161957760,
        "sender_full_name": "mw",
        "timestamp": 1553783428
    },
    {
        "content": "<p>the latter usually provides more accurate data.</p>",
        "id": 161957766,
        "sender_full_name": "mw",
        "timestamp": 1553783432
    },
    {
        "content": "<p>LLVM supports both approaches and for the instrumented approach it support 3 (sic!) variations:</p>",
        "id": 161957778,
        "sender_full_name": "mw",
        "timestamp": 1553783446
    },
    {
        "content": "<ul>\n<li>\"Front-end level\" instrumentation: Relies on the compiler front-end such as rustc or clang, to add instrumentation intrinsics to the LLVM IR</li>\n</ul>",
        "id": 161957791,
        "sender_full_name": "mw",
        "timestamp": 1553783453
    },
    {
        "content": "<ul>\n<li>\"IR level\" instrumentation: Uses the same LLVM IR intrinsics but they are added automatically by an LLVM pass</li>\n</ul>",
        "id": 161957798,
        "sender_full_name": "mw",
        "timestamp": 1553783458
    },
    {
        "content": "<ul>\n<li>GCOV instrumentation (used normally for code coverage, discouraged because it adds more overhead and is less accurate)</li>\n</ul>",
        "id": 161957812,
        "sender_full_name": "mw",
        "timestamp": 1553783464
    },
    {
        "content": "<p><code>rustc</code> has experimental support for IR-level instrumentation, which is both the easiest to support (because LLVM does most of the work) and is also the more \"modern\" approach.</p>",
        "id": 161957821,
        "sender_full_name": "mw",
        "timestamp": 1553783477
    },
    {
        "content": "<p>I don't know if we ever want to support FE-level instrumentation or GCOV.</p>",
        "id": 161957840,
        "sender_full_name": "mw",
        "timestamp": 1553783492
    },
    {
        "content": "<p>so far, the work of this working group (of which I am the only member) has been to find out about the stuff described above</p>",
        "id": 161957855,
        "sender_full_name": "mw",
        "timestamp": 1553783506
    },
    {
        "content": "<p>how it all works (roughly) at the level of LLVM and compiler-rt</p>",
        "id": 161957861,
        "sender_full_name": "mw",
        "timestamp": 1553783513
    },
    {
        "content": "<p>and trying to get a non-trivial, mixed Rust/C++ code base (Firefox) to compile with PGO enabled.</p>",
        "id": 161957873,
        "sender_full_name": "mw",
        "timestamp": 1553783520
    },
    {
        "content": "<p>(what does clang do?)</p>",
        "id": 161957910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783523
    },
    {
        "content": "<p>or are you getting to that...</p>",
        "id": 161957922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783530
    },
    {
        "content": "<p>clang supports all of them</p>",
        "id": 161957928,
        "sender_full_name": "mw",
        "timestamp": 1553783532
    },
    {
        "content": "<p>the D-frontend for LLVM only supports front-end level, I think</p>",
        "id": 161957966,
        "sender_full_name": "mw",
        "timestamp": 1553783566
    },
    {
        "content": "<p>I was able to verify that instrumented code from Rust and from C++ can be linked together into a single binary</p>",
        "id": 161957984,
        "sender_full_name": "mw",
        "timestamp": 1553783580
    },
    {
        "content": "<p>and that running the binary generates profiling data that contains counts for both Rust and C++</p>",
        "id": 161957998,
        "sender_full_name": "mw",
        "timestamp": 1553783588
    },
    {
        "content": "<p>IFF both binaries are instrumented with the IR-level approach</p>",
        "id": 161958005,
        "sender_full_name": "mw",
        "timestamp": 1553783594
    },
    {
        "content": "<p>Mixing IR-level and FE-level instrumentation does not work, although they are both built on the same infrastructure in compiler-rt.</p>",
        "id": 161958014,
        "sender_full_name": "mw",
        "timestamp": 1553783603
    },
    {
        "content": "<p>that took me a few days to find out :P</p>",
        "id": 161958021,
        "sender_full_name": "mw",
        "timestamp": 1553783612
    },
    {
        "content": "<p>I have yet to work on verifying the PGO data actually gets used correctly and that it improves performance.</p>",
        "id": 161958040,
        "sender_full_name": "mw",
        "timestamp": 1553783623
    },
    {
        "content": "<p>There are also platform specific problems that are not yet resolved.</p>",
        "id": 161958054,
        "sender_full_name": "mw",
        "timestamp": 1553783636
    },
    {
        "content": "<p>E.g. instrumentation seems to crash Clang when it encounters a function using SEH on Windows, which is something that we might run into too.</p>",
        "id": 161958105,
        "sender_full_name": "mw",
        "timestamp": 1553783644
    },
    {
        "content": "<p>yeah, so this is where I am at right now</p>",
        "id": 161958128,
        "sender_full_name": "mw",
        "timestamp": 1553783671
    },
    {
        "content": "<p>it's nice that PGO subsumes \"ordering files\", it seems</p>",
        "id": 161958156,
        "sender_full_name": "mw",
        "timestamp": 1553783696
    },
    {
        "content": "<p>another optimization that affects code layout in binaries</p>",
        "id": 161958182,
        "sender_full_name": "mw",
        "timestamp": 1553783710
    },
    {
        "content": "<p>leading to better caching behavior</p>",
        "id": 161958201,
        "sender_full_name": "mw",
        "timestamp": 1553783718
    },
    {
        "content": "<p>LLVM's pgo should take care of that</p>",
        "id": 161958214,
        "sender_full_name": "mw",
        "timestamp": 1553783728
    },
    {
        "content": "<blockquote>\n<p>E.g. instrumentation seems to crash Clang when it encounters a function using SEH on Windows, which is something that we might run into too.</p>\n</blockquote>\n<p>that <em>does</em> seem unfortunate, presumably an LLVM bug?</p>",
        "id": 161958247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783751
    },
    {
        "content": "<p>bug or \"not yet implemented\" I guess</p>",
        "id": 161958310,
        "sender_full_name": "mw",
        "timestamp": 1553783771
    },
    {
        "content": "<p>It sounds like the plan, though, is still to do IR-level? This seems to fit reasonably well with the whole ThinLTO approach, no?</p>",
        "id": 161958318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783778
    },
    {
        "content": "<p>fortunately we have someone looking into it who really knows windows well</p>",
        "id": 161958364,
        "sender_full_name": "mw",
        "timestamp": 1553783810
    },
    {
        "content": "<p>in other words, if you want max perf for a mixed Rust/C++-level thing, then we try to get all the sources to the level of LLVM IR, and then apply a combined pipeline for profiling, inlining, and optimizing them..?</p>",
        "id": 161958374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783813
    },
    {
        "content": "<p>Or is that overly simplified :)</p>",
        "id": 161958398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783827
    },
    {
        "content": "<p>yes, it should work together with THinLTO</p>",
        "id": 161958403,
        "sender_full_name": "mw",
        "timestamp": 1553783830
    },
    {
        "content": "<p>that's basically how it works, yes</p>",
        "id": 161958457,
        "sender_full_name": "mw",
        "timestamp": 1553783853
    },
    {
        "content": "<p>you could also do Rust and C++ separately though</p>",
        "id": 161958561,
        "sender_full_name": "mw",
        "timestamp": 1553783893
    },
    {
        "content": "<p>ThinLTO is orthogonal</p>",
        "id": 161958575,
        "sender_full_name": "mw",
        "timestamp": 1553783902
    },
    {
        "content": "<p>also cross-language LTO is orthogonal</p>",
        "id": 161958593,
        "sender_full_name": "mw",
        "timestamp": 1553783913
    },
    {
        "content": "<p>but like with cross lang LTO you better make sure that your Clang and Rust's LLVM match :)</p>",
        "id": 161958654,
        "sender_full_name": "mw",
        "timestamp": 1553783959
    },
    {
        "content": "<blockquote>\n<p>ThinLTO is orthogonal</p>\n</blockquote>\n<p>in the sense that you could incorporate the pgo data when compiling the rust code on its own</p>",
        "id": 161958678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553783988
    },
    {
        "content": "<p>yes</p>",
        "id": 161958688,
        "sender_full_name": "mw",
        "timestamp": 1553783996
    },
    {
        "content": "<p>it seems like pgo would however be helpful to ThinLTO (to guide inlining decisions)</p>",
        "id": 161958691,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553784000
    },
    {
        "content": "<p>yep</p>",
        "id": 161958752,
        "sender_full_name": "mw",
        "timestamp": 1553784012
    },
    {
        "content": "<p>and ThinLTO makes use of PGO data indeed</p>",
        "id": 161958763,
        "sender_full_name": "mw",
        "timestamp": 1553784024
    },
    {
        "content": "<p>so, that's pretty much my update</p>",
        "id": 161958830,
        "sender_full_name": "mw",
        "timestamp": 1553784076
    },
    {
        "content": "<p>questions?</p>",
        "id": 161958851,
        "sender_full_name": "mw",
        "timestamp": 1553784093
    },
    {
        "content": "<p>I'm trying to think</p>",
        "id": 161958947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553784140
    },
    {
        "content": "<p>it all makes sense of course</p>",
        "id": 161958949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553784145
    },
    {
        "content": "<p>we could use it, of course, to make the compiler itself faster too</p>",
        "id": 161958982,
        "sender_full_name": "mw",
        "timestamp": 1553784179
    },
    {
        "content": "<p>Maybe orthogonal Q: what is our current policy about when ThinLTO is enabled?</p>",
        "id": 161958986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784180
    },
    {
        "content": "<p>I guess my question is -- what is your next step? and to what extent is this work (along with ThinLTO) going to be something that we can help projects beyond FF take advantage of?</p>",
        "id": 161958994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553784183
    },
    {
        "content": "<p>And maybe if you have any sense of how <em>much</em> work remains -- it's fine if it's too early to say.</p>",
        "id": 161959020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553784209
    },
    {
        "content": "<blockquote>\n<p>what is your next step?</p>\n</blockquote>\n<p>verifying that rustc's version of LLVM uses the data correctly</p>",
        "id": 161959103,
        "sender_full_name": "mw",
        "timestamp": 1553784246
    },
    {
        "content": "<blockquote>\n<p>to what extent is this work (along with ThinLTO) going to be something that we can help projects beyond FF take advantage of?</p>\n</blockquote>\n<p>Once it's stable, any project can use it to get better performance for their release builds</p>",
        "id": 161959137,
        "sender_full_name": "mw",
        "timestamp": 1553784287
    },
    {
        "content": "<p>PGO is very popular amoing game developers, usually</p>",
        "id": 161959167,
        "sender_full_name": "mw",
        "timestamp": 1553784310
    },
    {
        "content": "<p>but anywhere where you have the resources to set up some automation for this can take advantage</p>",
        "id": 161959197,
        "sender_full_name": "mw",
        "timestamp": 1553784342
    },
    {
        "content": "<p>it would be interesting to see this used with, for example, ripgrep</p>",
        "id": 161959282,
        "sender_full_name": "mw",
        "timestamp": 1553784374
    },
    {
        "content": "<p>which is performance sensitive</p>",
        "id": 161959291,
        "sender_full_name": "mw",
        "timestamp": 1553784382
    },
    {
        "content": "<p>yeah</p>",
        "id": 161959304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553784391
    },
    {
        "content": "<p>and you mentioned rustc, of course</p>",
        "id": 161959311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553784395
    },
    {
        "content": "<blockquote>\n<p>Maybe orthogonal Q: what is our current policy about when ThinLTO is enabled?</p>\n</blockquote>\n<p>ThinLTO is the default for <code>cargo build --release</code></p>",
        "id": 161959348,
        "sender_full_name": "mw",
        "timestamp": 1553784422
    },
    {
        "content": "<p>iirc</p>",
        "id": 161959363,
        "sender_full_name": "mw",
        "timestamp": 1553784426
    },
    {
        "content": "<p>hmm</p>",
        "id": 161959391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784448
    },
    {
        "content": "<p>oh, <em>cargo</em></p>",
        "id": 161959413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784466
    },
    {
        "content": "<p>which may differ from the defaults of <code>rustc</code>, right?</p>",
        "id": 161959477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784484
    },
    {
        "content": "<p>I need to keep that in mind when I benchmark in the future. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 161959497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784498
    },
    {
        "content": "<p>I think <code>rustc</code> uses it by default for opt-level &gt;= 2 and codegen-units &gt; 1</p>",
        "id": 161959519,
        "sender_full_name": "mw",
        "timestamp": 1553784521
    },
    {
        "content": "<p>right, the problem I saw</p>",
        "id": 161959528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784527
    },
    {
        "content": "<p>was that it isn't enabled for codegen-units=1</p>",
        "id": 161959536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784534
    },
    {
        "content": "<p>yes</p>",
        "id": 161959558,
        "sender_full_name": "mw",
        "timestamp": 1553784547
    },
    {
        "content": "<p>but you need codegen-units=1 to observe optimal performance in some cases</p>",
        "id": 161959559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784547
    },
    {
        "content": "<p>this was what I was looking at: <a href=\"https://github.com/rust-lang/rust/issues/11084#issuecomment-475577073\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/11084#issuecomment-475577073\">https://github.com/rust-lang/rust/issues/11084#issuecomment-475577073</a></p>",
        "id": 161959584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784567
    },
    {
        "content": "<p>and also the comment immediately above it</p>",
        "id": 161959608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784592
    },
    {
        "content": "<p>anyway I know this is not the problem of PGO</p>",
        "id": 161959615,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784597
    },
    {
        "content": "<p>it just reminded me that I was idly wondering about whether our defaults for <code>-C opt-level=3</code> are \"good\"</p>",
        "id": 161959682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784619
    },
    {
        "content": "<p>yeah, the defaults won't give you  the best performance</p>",
        "id": 161959724,
        "sender_full_name": "mw",
        "timestamp": 1553784657
    },
    {
        "content": "<p>I guess I should probably look for pre-existing issues about the UX here</p>",
        "id": 161959763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784681
    },
    {
        "content": "<p><em>anyway</em></p>",
        "id": 161959789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784700
    },
    {
        "content": "<p><code>-Ccodegen-units</code> could be made to default to <code>1</code> if <code>-Copt-level=3</code>?</p>",
        "id": 161959853,
        "sender_full_name": "mw",
        "timestamp": 1553784723
    },
    {
        "content": "<p>That was something I was indeed musing about</p>",
        "id": 161959902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784740
    },
    {
        "content": "<p>(and have it <em>still</em> default to lto=thin, I <em>think</em>, based on what I observed on that ticket I linked)</p>",
        "id": 161959930,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784771
    },
    {
        "content": "<p>well, there are two ways of doing THinLTO with rustc</p>",
        "id": 161959957,
        "sender_full_name": "mw",
        "timestamp": 1553784796
    },
    {
        "content": "<p>7 minutes left, and 7 <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\">nominated issues</a></p>",
        "id": 161959964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784800
    },
    {
        "content": "<p>\"local\" and \"crate-graph\"</p>",
        "id": 161959970,
        "sender_full_name": "mw",
        "timestamp": 1553784804
    },
    {
        "content": "<blockquote>\n<p>\"local\" and \"crate-graph\"</p>\n</blockquote>\n<p>oh I'm not familiar with this</p>",
        "id": 161959985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784813
    },
    {
        "content": "<p>\"local\" makes no sense with 1 cgu...</p>",
        "id": 161959987,
        "sender_full_name": "mw",
        "timestamp": 1553784815
    },
    {
        "content": "<p>let me quickly run through the nominations</p>",
        "id": 161960074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784851
    },
    {
        "content": "<p>anyway, let's discuss nominated issues</p>",
        "id": 161960078,
        "sender_full_name": "mw",
        "timestamp": 1553784853
    },
    {
        "content": "<p>make sure there are no fires</p>",
        "id": 161960081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784854
    },
    {
        "content": "<p><span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> \"Refactor rustc_codegen_ssa (part 2)\" <a href=\"https://github.com/rust-lang/rust/issues/56636\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56636\">#56636</a> is crying out for a reviewer</p>",
        "id": 161960111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784878
    },
    {
        "content": "<p>any volunteers?</p>",
        "id": 161960113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784881
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  is assigned but I think we should hand it off to someone else)</p>",
        "id": 161960129,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784896
    },
    {
        "content": "<p>((if we're going to do that refactoring at all))</p>",
        "id": 161960150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784907
    },
    {
        "content": "<p>It's blocked on <a href=\"https://github.com/rust-lang/rust/pull/58846\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58846\">https://github.com/rust-lang/rust/pull/58846</a></p>",
        "id": 161960171,
        "sender_full_name": "centril",
        "timestamp": 1553784918
    },
    {
        "content": "<p>I'll skip <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a> since we already discussed it</p>",
        "id": 161960178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784922
    },
    {
        "content": "<blockquote>\n<p>It's blocked on <a href=\"https://github.com/rust-lang/rust/pull/58846\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58846\">https://github.com/rust-lang/rust/pull/58846</a></p>\n</blockquote>\n<p>okay then ...</p>",
        "id": 161960203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784943
    },
    {
        "content": "<p><span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> also seeking reviewer for \"Misc refactorings to rustc_codegen_ssa\" <a href=\"https://github.com/rust-lang/rust/issues/58846\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58846\">#58846</a></p>",
        "id": 161960268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553784966
    },
    {
        "content": "<p>(but that one could use a reviewer since eddyb hasn't done much here)</p>",
        "id": 161960269,
        "sender_full_name": "centril",
        "timestamp": 1553784967
    },
    {
        "content": "<p>\"Rustc should use a variable other than RUST_LOG for env_logger.\" <a href=\"https://github.com/rust-lang/rust/issues/57985\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57985\">#57985</a> was accidentally still nominated; fixed now.</p>",
        "id": 161960340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785016
    },
    {
        "content": "<p>next, \"beta 1.33 seems to break tarpaulin on multithreading\" <a href=\"https://github.com/rust-lang/rust/issues/58104\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58104\">#58104</a> : as announced in an <span aria-label=\"alert\" class=\"emoji emoji-1f6a8\" role=\"img\" title=\"alert\">:alert:</span> at start of meeting, I'm planning to close this as non-actionable if no-one speaks up</p>",
        "id": 161960402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785053
    },
    {
        "content": "<p>next: \"Implement \"pipelined\" rustc compilation (compiler side)\" <a href=\"https://github.com/rust-lang/rust/issues/58465\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58465\">#58465</a>. This needs prioritization</p>",
        "id": 161960430,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785079
    },
    {
        "content": "<p>or we need to explicitly put it on a steering meeting agenda</p>",
        "id": 161960485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785092
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what do you think at this point? I'm not sure we're ever going to have time for <a href=\"https://github.com/rust-lang/rust/issues/58465\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58465\">#58465</a> at the thursday meetings, unless we allocate a WG-checkin slot to it on its own, and assign someone to drive discussion.</p>",
        "id": 161960498,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785105
    },
    {
        "content": "<p>next: \"Incorporate RLS bug tracking into compiler team triage\" <a href=\"https://github.com/rust-lang/rust/issues/58858\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58858\">#58858</a>. This was left nominated from when it was originally created but I actually think we can un-nominate it, unless I continue to fail to make any progress on it.</p>",
        "id": 161960591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785179
    },
    {
        "content": "<p>I'm going to thus un-nominated <a href=\"https://github.com/rust-lang/rust/issues/58858\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58858\">#58858</a></p>",
        "id": 161960592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785184
    },
    {
        "content": "<p><strong>finally</strong>: \" Specific code layout can cause compiler panic with lto=true <a href=\"https://github.com/rust-lang/rust/issues/59137\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59137\">#59137</a>\"</p>",
        "id": 161960686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785211
    },
    {
        "content": "<p>didn't have time to look into that yet :/</p>",
        "id": 161960707,
        "sender_full_name": "mw",
        "timestamp": 1553785230
    },
    {
        "content": "<p>and, hah, that was another accidental nomination tag I forgot to remove</p>",
        "id": 161960714,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785235
    },
    {
        "content": "<p>that's okay <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, the nomination was left over from when I wanted a volunteer for it</p>",
        "id": 161960729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785246
    },
    {
        "content": "<p>we ... we actually \"got through\" everything</p>",
        "id": 161960763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785274
    },
    {
        "content": "<p>perhaps only in a superficial manner</p>",
        "id": 161960779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785282
    },
    {
        "content": "<p>but I like to stress the <strong>super</strong> in \"superficial\"</p>",
        "id": 161960792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785291
    },
    {
        "content": "<p>Okay then, thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 161960824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785315
    },
    {
        "content": "<p>thanks for driving, <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> !</p>",
        "id": 161960889,
        "sender_full_name": "mw",
        "timestamp": 1553785334
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  btw... re. the <code>Box</code> magic thing... is this something to discuss at T-Lang? If we can avoid putting more problems in front of de-magickifiying <code>Box</code> that would be nice.</p>",
        "id": 161961002,
        "sender_full_name": "centril",
        "timestamp": 1553785413
    },
    {
        "content": "<p>Should I actually unassign <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> from the review of PRs <a href=\"https://github.com/rust-lang/rust/issues/58846\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58846\">#58846</a> and <a href=\"https://github.com/rust-lang/rust/issues/56636\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56636\">#56636</a> ?</p>",
        "id": 161961010,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> not until you assign someone else</p>",
        "id": 161961035,
        "sender_full_name": "centril",
        "timestamp": 1553785437
    },
    {
        "content": "<p>I've grabbed 58846</p>",
        "id": 161961100,
        "sender_full_name": "oli",
        "timestamp": 1553785452
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 161961110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> let me make sure I understand the logic here</p>",
        "id": 161961131,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785477
    },
    {
        "content": "<p>if I decide I don't have time to review something, I can unassign myself without finding someone else</p>",
        "id": 161961153,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785495
    },
    {
        "content": "<p>I do think that the correct protocol here would be to first <em>ping</em> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  (or any other assigned reviewer) before just blindly unassigning them.</p>",
        "id": 161961228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785549
    },
    {
        "content": "<blockquote>\n<p>I can unassign myself without finding someone else</p>\n</blockquote>\n<p>Ideally not... at least the team should be pinged or so... All PRs should have reviewers</p>",
        "id": 161961234,
        "sender_full_name": "centril",
        "timestamp": 1553785553
    },
    {
        "content": "<p>Yes, pinging is right</p>",
        "id": 161961309,
        "sender_full_name": "centril",
        "timestamp": 1553785566
    },
    {
        "content": "<p>I agree that ideally, one would <em>delegate</em> a review to someone else rather than just ceding responsibility entirely.</p>",
        "id": 161961365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785603
    },
    {
        "content": "<p>I think reassigning is preferable to pinging tho it much time has gone by since it is usually faster</p>",
        "id": 161961372,
        "sender_full_name": "centril",
        "timestamp": 1553785605
    },
    {
        "content": "<p>but finding someone to take on a review is itself a task</p>",
        "id": 161961393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785625
    },
    {
        "content": "<p>and so I'm claiming that in the general case, we cannot avoid people unassigning themselves</p>",
        "id": 161961407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> we could make it a thing to unassign yourself and let T-release find a reviewer</p>",
        "id": 161961420,
        "sender_full_name": "centril",
        "timestamp": 1553785659
    },
    {
        "content": "<p>I guess all I'm saying is that there may be a process breakdown here</p>",
        "id": 161961491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785687
    },
    {
        "content": "<p>what I would prefer not to happen is for a PR to be unassigned for a long time without anything happening to it</p>",
        "id": 161961501,
        "sender_full_name": "centril",
        "timestamp": 1553785702
    },
    {
        "content": "<p>since I tend to assume that if a PR has an assignee, it <em>is</em> getting dealt wth</p>",
        "id": 161961504,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785703
    },
    {
        "content": "<p>and so I'll skim the PR list and look for ones that have <em>no</em> assignee</p>",
        "id": 161961538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785729
    },
    {
        "content": "<p>to try to determine what needs attention</p>",
        "id": 161961563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785741
    },
    {
        "content": "<p>but this process will break down if PR's are artifically holding on to their assignees, right?</p>",
        "id": 161961588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785759
    },
    {
        "content": "<p>btw I am hard to reach because of the choice of chat systems is horrible for me</p>",
        "id": 161961603,
        "sender_full_name": "eddyb",
        "timestamp": 1553785774
    },
    {
        "content": "<p>(I do agree that it would <em>also</em> be a break down in process for PR's to go unassigned for long periods of time)</p>",
        "id": 161961609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I understand that problem</p>",
        "id": 161961618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785791
    },
    {
        "content": "<p>IRC channels/PM &gt; Discord PMs &gt; Zulip PMs &gt; Discord channels (some of which I avoid because I still haven't processed the backlog) &gt; Zulip topics</p>",
        "id": 161961692,
        "sender_full_name": "eddyb",
        "timestamp": 1553785811
    },
    {
        "content": "<p>where do Zulip topics rank compared to Github notifications though? <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 161961729,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785847
    },
    {
        "content": "<p>as for GH notification I still have a backlog but try to often go through the last N pings, using <a href=\"http://octobox.io\" target=\"_blank\" title=\"http://octobox.io\">octobox.io</a></p>",
        "id": 161961730,
        "sender_full_name": "eddyb",
        "timestamp": 1553785847
    },
    {
        "content": "<p>well I can't see GH notification context without clicking on them</p>",
        "id": 161961759,
        "sender_full_name": "eddyb",
        "timestamp": 1553785866
    },
    {
        "content": "<p>I cannot hope to keep up with Discord myself</p>",
        "id": 161961765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785872
    },
    {
        "content": "<p>srsly talk to me in PM if you need me personally</p>",
        "id": 161961782,
        "sender_full_name": "eddyb",
        "timestamp": 1553785884
    },
    {
        "content": "<p>(I still find the Discord mention system to be inscrutable.)</p>",
        "id": 161961796,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785897
    },
    {
        "content": "<p>you can use Discord's search instead</p>",
        "id": 161961809,
        "sender_full_name": "eddyb",
        "timestamp": 1553785906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  I think that 1) if unassigning without assigning someone else is a thing, then we need a T-compiler/T-release process for reassignment. 2) If folks cannot review a PR they should either a) unassign themselves, b) reassign someone else.</p>",
        "id": 161961811,
        "sender_full_name": "centril",
        "timestamp": 1553785909
    },
    {
        "content": "<p>and search for mentions: or something</p>",
        "id": 161961817,
        "sender_full_name": "eddyb",
        "timestamp": 1553785914
    },
    {
        "content": "<p>also highfive is assigning me a ridiculous amount of things, most of which are irrelevant for my particular areas of the compiler I care about or can honestly review</p>",
        "id": 161961904,
        "sender_full_name": "eddyb",
        "timestamp": 1553785944
    },
    {
        "content": "<p>I was filing an issue about that earlier</p>",
        "id": 161961920,
        "sender_full_name": "eddyb",
        "timestamp": 1553785958
    },
    {
        "content": "<p>highfive shouldn't be assigning Niko and <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  all the time</p>",
        "id": 161961941,
        "sender_full_name": "centril",
        "timestamp": 1553785974
    },
    {
        "content": "<blockquote>\n<p>1) if unassigning without assigning someone else is a thing, then we need a T-compiler/T-release process for reassignment. </p>\n</blockquote>\n<p>Hmm. true, I do visit the P-high issues each week looking in part for the unassigned cases</p>",
        "id": 161961948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785977
    },
    {
        "content": "<p>arguably I should also be visiting the PR's</p>",
        "id": 161961975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785990
    },
    {
        "content": "<p>but those aren't always explicitly marked with T-compiler, right?</p>",
        "id": 161961993,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553785999
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  PRs? no.</p>",
        "id": 161962006,
        "sender_full_name": "centril",
        "timestamp": 1553786008
    },
    {
        "content": "<p>yeah. So it would not be trivial for me to include the PRs in the weekly triage right now</p>",
        "id": 161962093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786045
    },
    {
        "content": "<p>it's incredible how many bad repercussions shipping Rust 2018 + taking work in December had on my ability to stay on top of things</p>",
        "id": 161962117,
        "sender_full_name": "eddyb",
        "timestamp": 1553786065
    },
    {
        "content": "<p>but I suppose if someone, before unassigning themself, did have to at least tag the team who should find the next reviewer</p>",
        "id": 161962122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786070
    },
    {
        "content": "<p>then that would help there, right <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> ?</p>",
        "id": 161962137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786079
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+no%3Aassignee\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+no%3Aassignee\">https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+no%3Aassignee</a> the list is pretty small</p>",
        "id": 161962152,
        "sender_full_name": "centril",
        "timestamp": 1553786095
    },
    {
        "content": "<p>yeah assigning the team would be good</p>",
        "id": 161962210,
        "sender_full_name": "centril",
        "timestamp": 1553786124
    },
    {
        "content": "<p>anyway, small announcement, I got a 1440p 24\" monitor this week, and will try to more aggressively go through things. I wish chrome had tree-style tabs or firefox was easy to swap all the state to...</p>",
        "id": 161962213,
        "sender_full_name": "eddyb",
        "timestamp": 1553786125
    },
    {
        "content": "<p>or fallback to t-release if no team is there</p>",
        "id": 161962226,
        "sender_full_name": "centril",
        "timestamp": 1553786131
    },
    {
        "content": "<p>the Zulip app is worse than ever, perf-wise, though, jeeez</p>",
        "id": 161962243,
        "sender_full_name": "eddyb",
        "timestamp": 1553786144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  did you kill your laptop yet?</p>",
        "id": 161962259,
        "sender_full_name": "centril",
        "timestamp": 1553786156
    },
    {
        "content": "<blockquote>\n<p>the Zulip app is worse than ever, perf-wise, though, jeeez</p>\n</blockquote>\n<p>on the mobile device? Or on the computer?</p>",
        "id": 161962267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786160
    },
    {
        "content": "<p>on my laptop. on my phone it's much worse</p>",
        "id": 161962320,
        "sender_full_name": "eddyb",
        "timestamp": 1553786172
    },
    {
        "content": "<p>/me must have stockholm syndrome when it comes to Zulip</p>",
        "id": 161962345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786191
    },
    {
        "content": "<p>the mobile app may be a phone health risk, more so than mobile games</p>",
        "id": 161962351,
        "sender_full_name": "eddyb",
        "timestamp": 1553786194
    },
    {
        "content": "<p>I like Zulip's ideas but the UI and UX are depressing</p>",
        "id": 161962391,
        "sender_full_name": "eddyb",
        "timestamp": 1553786219
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+no%3Aassignee\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+no%3Aassignee\">https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+no%3Aassignee</a> the list is pretty small</p>\n</blockquote>\n<p>let me try adding this to the list of weekly triage items, see if its worth including in that parallel topic</p>",
        "id": 161962443,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786251
    },
    {
        "content": "<p>oh hmm, Zulip looks way less bad when tall</p>",
        "id": 161962466,
        "sender_full_name": "eddyb",
        "timestamp": 1553786272
    },
    {
        "content": "<p>if the list grows significnatly in the future, then that will be a sign that we need more pro-active T-tagging on it</p>",
        "id": 161962468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786276
    },
    {
        "content": "<p>but no chat app deserves a full column of my tiled layout</p>",
        "id": 161962526,
        "sender_full_name": "eddyb",
        "timestamp": 1553786290
    },
    {
        "content": "<p>At least zulip can deal with being squished sideways</p>",
        "id": 161962539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786303
    },
    {
        "content": "<p>Discord wont let me</p>",
        "id": 161962544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> so... re. <code>Box</code> &amp; magic...  discuss on T-Lang meeting?</p>",
        "id": 161962562,
        "sender_full_name": "centril",
        "timestamp": 1553786322
    },
    {
        "content": "<p>What I would like most is to understand the issue</p>",
        "id": 161962570,
        "sender_full_name": "centril",
        "timestamp": 1553786332
    },
    {
        "content": "<p>what the magic consists of exactly and document it well on a GH issue</p>",
        "id": 161962599,
        "sender_full_name": "centril",
        "timestamp": 1553786347
    },
    {
        "content": "<p>oooh I can make Zulip taller at the expense of IRC &amp; DIscord</p>",
        "id": 161962605,
        "sender_full_name": "eddyb",
        "timestamp": 1553786350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> <code>DerefMove</code> but without an <code>impl</code> opt-in</p>",
        "id": 161962624,
        "sender_full_name": "eddyb",
        "timestamp": 1553786364
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> so... re. <code>Box</code> &amp; magic...  discuss on T-Lang meeting?</p>\n</blockquote>\n<p>If you want to add it as an item, I guess you can. I think most people who care about the issue tend to think that the solution is to factor the magic into its own <code>DerefMove</code> trait</p>",
        "id": 161962635,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786373
    },
    {
        "content": "<p>the semantics are what I want for <code>DerefMove</code></p>",
        "id": 161962647,
        "sender_full_name": "eddyb",
        "timestamp": 1553786380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is <code>DerefMove</code> the only thing?</p>",
        "id": 161962668,
        "sender_full_name": "centril",
        "timestamp": 1553786395
    },
    {
        "content": "<p>or is there additional magic now?</p>",
        "id": 161962676,
        "sender_full_name": "centril",
        "timestamp": 1553786401
    },
    {
        "content": "<p>(wrt. <a href=\"https://github.com/rust-lang/rust/pull/58021\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58021\">https://github.com/rust-lang/rust/pull/58021</a>)</p>",
        "id": 161962748,
        "sender_full_name": "centril",
        "timestamp": 1553786413
    },
    {
        "content": "<p>regarding <a href=\"https://github.com/rust-lang/rust/issues/58021\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58021\">#58021</a>, I have no idea</p>",
        "id": 161962774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786434
    },
    {
        "content": "<p>I still haven't processed what the heck happened there. Thus my desire to make a regression test.</p>",
        "id": 161962806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786454
    },
    {
        "content": "<p>The destructor is magical.</p>",
        "id": 161962816,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1553786461
    },
    {
        "content": "<p>But perhaps it needs to be for any <code>DerefMove</code>,  not sure.</p>",
        "id": 161962857,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1553786485
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> I think the right solution is what <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> came up with, which is that <code>DerefMove</code> opts into drop glue being <code>drop_in_place(&amp;mut *x); Drop::drop(&amp;mut x);</code></p>",
        "id": 161962878,
        "sender_full_name": "eddyb",
        "timestamp": 1553786504
    },
    {
        "content": "<p>I suppose that needs to make <code>Drop</code> an <code>unsafe impl</code></p>",
        "id": 161962918,
        "sender_full_name": "eddyb",
        "timestamp": 1553786523
    },
    {
        "content": "<p>Support for <code>box</code> patterns is magical.<br>\nAlso seems a part of <code>DerefMove</code>.</p>",
        "id": 161962974,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1553786552
    },
    {
        "content": "<p>/me needs to go AFK, but feel free to carry on chatting. <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> : double check whether niko will be at the meeting tonight. If not, then I wouldn't try to do the <code>Box</code> Q at tonight's meeting, unless <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <strong>is</strong> attending.</p>",
        "id": 161962987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786572
    },
    {
        "content": "<p><code>Box</code>s ABI was also very special, not sure about the current status.</p>",
        "id": 161963011,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1553786587
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  care to join the meeting?</p>",
        "id": 161963029,
        "sender_full_name": "centril",
        "timestamp": 1553786593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  so... I forget, are you attending the T-Lang meeting today?</p>",
        "id": 161963047,
        "sender_full_name": "centril",
        "timestamp": 1553786609
    },
    {
        "content": "<p>ah, patterns, well, I think we should maybe consider checking the MIR via borrowck instead of having a separate pattern checker...</p>",
        "id": 161963056,
        "sender_full_name": "eddyb",
        "timestamp": 1553786618
    },
    {
        "content": "<p>(<code>box</code> patterns are unstable)</p>",
        "id": 161963091,
        "sender_full_name": "centril",
        "timestamp": 1553786641
    },
    {
        "content": "<p>i.e. check that the <code>if-else</code> chains or <code>switch</code> w/e generated by pattern lowering are exhaustive</p>",
        "id": 161963133,
        "sender_full_name": "eddyb",
        "timestamp": 1553786643
    },
    {
        "content": "<p>not sure I can join voice/video meetings, given my new office situation</p>",
        "id": 161963184,
        "sender_full_name": "eddyb",
        "timestamp": 1553786668
    },
    {
        "content": "<p>also, is the DST hell over?</p>",
        "id": 161963205,
        "sender_full_name": "eddyb",
        "timestamp": 1553786689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> no, not until next week</p>",
        "id": 161963226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786705
    },
    {
        "content": "<p>because I think the meeting is after the time I have  to leave to catch the subway during this time</p>",
        "id": 161963236,
        "sender_full_name": "eddyb",
        "timestamp": 1553786711
    },
    {
        "content": "<p>(which I was mistaken about up until last monday)</p>",
        "id": 161963247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786732
    },
    {
        "content": "<p>so was I pinged only for <a href=\"https://github.com/rust-lang/rust/issues/58021\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58021\">#58021</a>?</p>",
        "id": 161963248,
        "sender_full_name": "eddyb",
        "timestamp": 1553786735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> there were some PR's in your review queue that we also discussed</p>",
        "id": 161963268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786758
    },
    {
        "content": "<p>right, sorry about that</p>",
        "id": 161963324,
        "sender_full_name": "eddyb",
        "timestamp": 1553786765
    },
    {
        "content": "<p>in terms of whether to delegate the reviews to other people</p>",
        "id": 161963325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786768
    },
    {
        "content": "<p>people need to contaact me personally, GH pings will not guarantee I will see it</p>",
        "id": 161963342,
        "sender_full_name": "eddyb",
        "timestamp": 1553786781
    },
    {
        "content": "<p>(I don't think you need to apologize.)</p>",
        "id": 161963344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786784
    },
    {
        "content": "<p>good idea to ask before reassigning, some things I can review on the spot</p>",
        "id": 161963359,
        "sender_full_name": "eddyb",
        "timestamp": 1553786793
    },
    {
        "content": "<p>(we know you've juggling a lot)</p>",
        "id": 161963360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553786795
    },
    {
        "content": "<p>again, much easier since this week</p>",
        "id": 161963366,
        "sender_full_name": "eddyb",
        "timestamp": 1553786801
    },
    {
        "content": "<p>it's less being busy and more a cascading failure to keep up :P</p>",
        "id": 161963387,
        "sender_full_name": "eddyb",
        "timestamp": 1553786822
    },
    {
        "content": "<p>like leaving one minute late and being an hour late by the time you reach wherever you want to get</p>",
        "id": 161963431,
        "sender_full_name": "eddyb",
        "timestamp": 1553786866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=dae27f4169c6e5cf24c73dd763984055\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=dae27f4169c6e5cf24c73dd763984055\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=dae27f4169c6e5cf24c73dd763984055</a></p>",
        "id": 161963812,
        "sender_full_name": "centril",
        "timestamp": 1553787074
    },
    {
        "content": "<p>5 happens before 3</p>",
        "id": 161963835,
        "sender_full_name": "centril",
        "timestamp": 1553787097
    },
    {
        "content": "<p>thus making it observable</p>",
        "id": 161963843,
        "sender_full_name": "centril",
        "timestamp": 1553787104
    },
    {
        "content": "<p>hehehe I just realized I can give Zulip more vertical screenspace</p>",
        "id": 161964191,
        "sender_full_name": "eddyb",
        "timestamp": 1553787296
    },
    {
        "content": "<blockquote>\n<p>5 happens before 3</p>\n</blockquote>\n<p>hmm isn't that what's supposed to happen there? Is that actually an example of weirdness...?</p>",
        "id": 161964276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787351
    },
    {
        "content": "<p>since you used a <code>_</code> pattern in that arm that causes <code>dbg!(5)</code> ?</p>",
        "id": 161964282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  changing it to <code>b =&gt; { dbg!(5); }</code> makes no difference</p>",
        "id": 161964390,
        "sender_full_name": "centril",
        "timestamp": 1553787410
    },
    {
        "content": "<p>(or <code>b =&gt; { dbg!(b); }</code>)</p>",
        "id": 161964437,
        "sender_full_name": "centril",
        "timestamp": 1553787435
    },
    {
        "content": "<p>I'm still not convinced this is what matters</p>",
        "id": 161964438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787438
    },
    {
        "content": "<p>(i.e., <code>b</code> <em>should</em> be dropped <code>5</code> is printed...)</p>",
        "id": 161964467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> not sure I get what you mean... this is just demonstrating the drop order that ariel noted</p>",
        "id": 161964537,
        "sender_full_name": "centril",
        "timestamp": 1553787484
    },
    {
        "content": "<p>but you are correct that I was wrong to think that the  <code>_</code> pattern mattered there</p>",
        "id": 161964543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787486
    },
    {
        "content": "<p>my claim is that the drop order you are describing is what we would want to adhere to, even with the changes ariel wants</p>",
        "id": 161964596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787529
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/TkG4MkZKV5yOUp587KPKhqmd/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/TkG4MkZKV5yOUp587KPKhqmd/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/TkG4MkZKV5yOUp587KPKhqmd/pasted_image.png\"></a></div>",
        "id": 161964610,
        "sender_full_name": "eddyb",
        "timestamp": 1553787534
    },
    {
        "content": "<p>this seems more workable</p>",
        "id": 161964620,
        "sender_full_name": "eddyb",
        "timestamp": 1553787541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  oh... well I don't disagree with that</p>",
        "id": 161964648,
        "sender_full_name": "centril",
        "timestamp": 1553787561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I mostly thought it would be good to proactively discuss and affirm our view with the whole language team</p>",
        "id": 161964684,
        "sender_full_name": "centril",
        "timestamp": 1553787585
    },
    {
        "content": "<p>okay ... but this doesn't directly show the duplicated storage-dead's that <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> described.</p>",
        "id": 161964801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787654
    },
    {
        "content": "<p>but ooh maybe we can get miri to complain about them!</p>",
        "id": 161964835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787677
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  yeah I only went for drop order since that's easiest to show ;)</p>",
        "id": 161964855,
        "sender_full_name": "centril",
        "timestamp": 1553787698
    },
    {
        "content": "<p>ill nominate then</p>",
        "id": 161964874,
        "sender_full_name": "centril",
        "timestamp": 1553787721
    },
    {
        "content": "<p>well if you nominate I'm not sure I'm going to be able to present tonight</p>",
        "id": 161965035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787817
    },
    {
        "content": "<p>someone will need to drive that discussion but I doubt it will be me, at least not this week (DST hell)</p>",
        "id": 161965123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> worst case we delay till next week</p>",
        "id": 161965177,
        "sender_full_name": "centril",
        "timestamp": 1553787894
    },
    {
        "content": "<p>k</p>",
        "id": 161965185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553787901
    },
    {
        "content": "<blockquote>\n<p>I guess that the concerns <span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> raised were mostly kind of \"memory usage is too high, let's not regress, even a bit\"?</p>\n</blockquote>\n<p>FWIW I managed to build rustc on a 4G 64-bit VM, so there’s that. I’m significantly less concerned about our memory usage now.</p>",
        "id": 161983822,
        "sender_full_name": "nagisa",
        "timestamp": 1553800577
    },
    {
        "content": "<p>That was FreeBSD btw.</p>",
        "id": 161983847,
        "sender_full_name": "nagisa",
        "timestamp": 1553800604
    },
    {
        "content": "<p>Regarding the test, I originally thought of using miri, because it can test memory semantics apart from double free which the allocator wouldn't care otherwise. But for a \"regression\" test it could be written without miri. I didn't bother with the miri test because I was short on time and didn't know how miri based tests work.</p>",
        "id": 162005867,
        "sender_full_name": "Tatsuyuki Ishi",
        "timestamp": 1553819110
    },
    {
        "content": "<p>(that was about <a href=\"https://github.com/rust-lang/rust/issues/58021\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58021\">#58021</a>)</p>",
        "id": 162005954,
        "sender_full_name": "Tatsuyuki Ishi",
        "timestamp": 1553819272
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117366\">@Tatsuyuki Ishi</span> ah, I didn't look properly at <em>where</em> this change was being applied before. I had thought it was some <code>fn map</code> in <code>libstd</code>, not <code>libsyntax</code></p>",
        "id": 162027837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553848817
    },
    {
        "content": "<p>i am far far far less concerned about this now.</p>",
        "id": 162027841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1553848827
    }
]