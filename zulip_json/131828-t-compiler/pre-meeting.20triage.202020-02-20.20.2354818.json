[
    {
        "content": "<p>I will be doing pre-triage in this channel.</p>",
        "id": 188634177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582203241
    },
    {
        "content": "<p>I'm going to try to get through the agenda as best I can, but I had a rough night last night (very sick kid) and will need to go AFK for 40min or so very soon</p>",
        "id": 188634973,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582203851
    },
    {
        "content": "<p>anyway I'll do what I can now, and resume again when I can</p>",
        "id": 188634987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582203878
    },
    {
        "content": "<p>First up: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\">unprioritized nominated issues</a></p>",
        "id": 188635199,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204063
    },
    {
        "content": "<p>there are nine</p>",
        "id": 188635208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204071
    },
    {
        "content": "<p>unpri nom 1/9: \"internal compiler error: src/librustc_mir_build/hair/constant.rs:60: impossible case reached\" <a href=\"https://github.com/rust-lang/rust/issues/69310\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69310\">#69310</a></p>",
        "id": 188635258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204088
    },
    {
        "content": "<p>seems bad.  doesn't include any useful diagnostic prior to ICE'ing. Its probably because the HAIR builder assumes you cannot have floating point numbers as array lengths. (and maybe that is supposed to be impossible in the HAIR.)</p>",
        "id": 188635332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204184
    },
    {
        "content": "<p>its also a stable-to-beta regression</p>",
        "id": 188635342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204198
    },
    {
        "content": "<p>P-high, assigning to self. But also: <span class=\"user-mention\" data-user-id=\"225192\">@Nell Shamrell-Harrington</span> , would you be interesting in partnering up on this?</p>",
        "id": 188635402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204225
    },
    {
        "content": "<p>(removing from nominations list)</p>",
        "id": 188635437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204264
    },
    {
        "content": "<p>unpri nom 2/9: \"ICE: src/librustc/middle/region.rs:1037: Encountered greater count 28\" <a href=\"https://github.com/rust-lang/rust/issues/69307\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69307\">#69307</a></p>",
        "id": 188635456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204293
    },
    {
        "content": "<p>happens on stable. not clear to be if this ever worked.</p>",
        "id": 188635539,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204360
    },
    {
        "content": "<p>its already tagged with A-async-await; <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , am I right that the combination of that tag and I-nominated means that it will be triaged by the async-await WG?</p>",
        "id": 188635572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204408
    },
    {
        "content": "<p>(I'm currently downloading 1.39 to see if it already ICE's)</p>",
        "id": 188635576,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1582204414
    },
    {
        "content": "<p>(if I'm correct about this being in the WG-async-await queue, we probably need to figure out some  system for marking things as \"in the triage queue for team X\".  Or more specifically, some way for <em>T-compiler</em> to tag something as \"not actually nominated for us...\")</p>",
        "id": 188635668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204523
    },
    {
        "content": "<p>(but I'm also not clear on whether this bug is best handled by WG-async-await or T-compiler, given that its arising from the region system.)</p>",
        "id": 188635752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204606
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/69307\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69307\">#69307</a> triage: P-high. Leaving I-nominated as to not disrupt WG-async-await workflow.</p>",
        "id": 188635797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204666
    },
    {
        "content": "<p>unpri nom 3/9: \"Inconsistent Self behavior with generic structs\" <a href=\"https://github.com/rust-lang/rust/issues/69306\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69306\">#69306</a></p>",
        "id": 188635859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582204693
    },
    {
        "content": "<p>(I'm leaving some comments)</p>",
        "id": 188636274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205095
    },
    {
        "content": "<p>triage: P-high. Leaving nominated for T-lang to discuss.</p>",
        "id": 188636555,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205355
    },
    {
        "content": "<p>unpri nom 4/9: \"Compiler bug: type parameter <code>T/#0</code> (T/0) out of range when substituting\" <a href=\"https://github.com/rust-lang/rust/issues/69296\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69296\">#69296</a></p>",
        "id": 188636645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205411
    },
    {
        "content": "<p>doesn't include any useful diagnostic prior to ICE'ing.</p>",
        "id": 188636700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205466
    },
    {
        "content": "<p>triage: P-high. Assigning to self. Removing nomination.</p>",
        "id": 188636810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205550
    },
    {
        "content": "<p>unpri nom 5/9 \"<code>rls</code> no longer builds after <a href=\"https://github.com/rust-lang/rust/issues/69265\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69265\">rust-lang/rust#69265</a>\" <a href=\"https://github.com/rust-lang/rust/issues/69286\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69286\">#69286</a></p>",
        "id": 188636859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205604
    },
    {
        "content": "<p>historically we've treated tool failures like this as P-medium</p>",
        "id": 188636936,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205654
    },
    {
        "content": "<p>(and its auto-assigned to Xanewok)</p>",
        "id": 188637009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205712
    },
    {
        "content": "<p>I'm sort of surprised we don't have a tool-failure label, BTW</p>",
        "id": 188637027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205735
    },
    {
        "content": "<p>triage: P-medium. Removing nomination label.</p>",
        "id": 188637048,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205750
    },
    {
        "content": "<p>unpri nom 6/9: \"const generic ICE on <em>stable</em>\" <a href=\"https://github.com/rust-lang/rust/issues/69239\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69239\">#69239</a></p>",
        "id": 188637157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582205856
    },
    {
        "content": "<p>left some comnents but gotta go AFK</p>",
        "id": 188637594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582206193
    },
    {
        "content": "<p>okay back</p>",
        "id": 188638468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582206854
    },
    {
        "content": "<p>Hmm I wonder if this is related to <a href=\"https://github.com/rust-lang/rust/issues/69296\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69296\">#69296</a> ...</p>",
        "id": 188638534,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582206907
    },
    {
        "content": "<p>anyway this isn't as bad as the title makes it sound; we do emit the expected diagnostic alerting the user to the fact that they are making use of an unstable feature. We just don't include the info about <code>#![feature(...)]</code> in this context.</p>",
        "id": 188638677,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207008
    },
    {
        "content": "<p>triage: P-medium, removing nomination label. Assigning to self. (Since this is leveraging a nightly-only feature, and we do emit the diagnostic saying so, this gets relatively lower priority.)</p>",
        "id": 188638828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207099
    },
    {
        "content": "<p>unpri nom 7/9: \"Memory unsafety problem in safe Rust\" <a href=\"https://github.com/rust-lang/rust/issues/69225\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69225\">#69225</a></p>",
        "id": 188638864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207140
    },
    {
        "content": "<p>lots of discussion.</p>",
        "id": 188639118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207315
    },
    {
        "content": "<p>seems like an LLVM misoptimziation, which can be worked-around (papered-over ) by reverting a Rust stdlib change (done in <a href=\"https://github.com/rust-lang/rust/issues/69241\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69241\">#69241</a>) that should be valid in principle.</p>",
        "id": 188639208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207374
    },
    {
        "content": "<p>ooh awesome <span class=\"user-mention\" data-user-id=\"198590\">@comex</span> made an LLVM IR reproducer!</p>",
        "id": 188639320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207453
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/69225#issuecomment-588888172\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69225#issuecomment-588888172\">comex comment</a> with LLVM IR reproducer . That comment relays a claim that LLVM 10 is not affected by this.</p>",
        "id": 188639413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207541
    },
    {
        "content": "<p>and in fact points out a specific reversion commit that we may be able to apply to our version of LLVM</p>",
        "id": 188639487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207575
    },
    {
        "content": "<p>(and then presumably readd the change from PR <a href=\"https://github.com/rust-lang/rust/issues/67174\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67174\">#67174</a> )</p>",
        "id": 188639522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207610
    },
    {
        "content": "<p>SO: What priority to give this...</p>",
        "id": 188639551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207627
    },
    {
        "content": "<p>we are almost in place to land llvm 10, fwiw</p>",
        "id": 188639563,
        "sender_full_name": "simulacrum",
        "timestamp": 1582207638
    },
    {
        "content": "<p>though it's blocked on sort of \"performance\"</p>",
        "id": 188639570,
        "sender_full_name": "simulacrum",
        "timestamp": 1582207646
    },
    {
        "content": "<p>I'd personally say p-med as we're not actively planning on taking action here, I would not personally aim to bother with the llvm backport, but I guess we <em>could</em></p>",
        "id": 188639658,
        "sender_full_name": "simulacrum",
        "timestamp": 1582207701
    },
    {
        "content": "<p>It seems like the remaining work items for <a href=\"https://github.com/rust-lang/rust/issues/69225\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69225\">#69225</a> are 1. fix LLVM (either by cherry-picking their <a href=\"https://github.com/rust-lang/rust/commit/58e8c793d0e43150a6452e971a32d7407a8a7401\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/58e8c793d0e43150a6452e971a32d7407a8a7401\">58e8c793d0e43150a6452e971a32d7407a8a7401</a> or by upgrading to LLVM 10) and then 2. readd PR <a href=\"https://github.com/rust-lang/rust/issues/67174\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67174\">#67174</a>.</p>",
        "id": 188639661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207704
    },
    {
        "content": "<p>it's not clear to me that this affects more cases</p>",
        "id": 188639665,
        "sender_full_name": "simulacrum",
        "timestamp": 1582207708
    },
    {
        "content": "<p>however neither of these strike me as high-priority items.</p>",
        "id": 188639675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207717
    },
    {
        "content": "<p>At least, this LLVM  bug does not seem any better or worse than other LLVM codegen bugs. Which I guess is what <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> just said.</p>",
        "id": 188639715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207746
    },
    {
        "content": "<p>triage: P-medium. Removing nomination.</p>",
        "id": 188639871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207870
    },
    {
        "content": "<p>leaving unassigned.</p>",
        "id": 188639906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207897
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is there an issue tracking the effort to upgrade to LLVM 10 ?</p>",
        "id": 188639925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582207913
    },
    {
        "content": "<p>The PR is <a href=\"https://github.com/rust-lang/rust/issues/67759\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67759\">#67759</a></p>",
        "id": 188640031,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1582207977
    },
    {
        "content": "<p>I don't know of a tracking issue</p>",
        "id": 188640059,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1582208004
    },
    {
        "content": "<p>PR is good enough for me.</p>",
        "id": 188640084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208018
    },
    {
        "content": "<p>yes, I would also note that I wouldn't feel comfortable just backporting the LLVM thing</p>",
        "id": 188640199,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208073
    },
    {
        "content": "<p>it could have other implications</p>",
        "id": 188640205,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208077
    },
    {
        "content": "<p>hmm. I had impression that we cherry-picked the commit being reverted</p>",
        "id": 188640230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208100
    },
    {
        "content": "<p>but I guess your point is that there must have been a reason for that</p>",
        "id": 188640258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208120
    },
    {
        "content": "<p>and those would be the biggest potential downstream effects</p>",
        "id": 188640278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208134
    },
    {
        "content": "<p>unpri nom 8/9: \"<code>_</code> in associated types causes nightly and beta compiler to panic\" <a href=\"https://github.com/rust-lang/rust/issues/69204\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69204\">#69204</a></p>",
        "id": 188640315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208154
    },
    {
        "content": "<p>triage: P-high. Has PR. Removing nomination tag.</p>",
        "id": 188640402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208186
    },
    {
        "content": "<p>(awessome work <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> !)</p>",
        "id": 188640445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208214
    },
    {
        "content": "<p>yes, correct</p>",
        "id": 188640597,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208300
    },
    {
        "content": "<p>unpri nom 9/9: \"Worsened debug build codegen in beta\" <a href=\"https://github.com/rust-lang/rust/issues/68855\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68855\">#68855</a></p>",
        "id": 188640679,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208361
    },
    {
        "content": "<p>glad to see there was discussion of the matter on the ticket</p>",
        "id": 188640789,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208425
    },
    {
        "content": "<p>but I cannot imagine this to be P-high priority.</p>",
        "id": 188640840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208455
    },
    {
        "content": "<p>triage: P-medium. I'd like to assign it to someone. Who is best to take lead here: <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> ? <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> ? <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ?</p>",
        "id": 188640881,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208495
    },
    {
        "content": "<p>I'll take point on that</p>",
        "id": 188640973,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1582208545
    },
    {
        "content": "<p>assigning to <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and removing nomination.</p>",
        "id": 188640987,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208559
    },
    {
        "content": "<p>okay that's all the un-prioritized nominations</p>",
        "id": 188641029,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208591
    },
    {
        "content": "<p>next: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\">unprioritized beta regressions</a></p>",
        "id": 188641063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208626
    },
    {
        "content": "<p>there are 2</p>",
        "id": 188641073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208634
    },
    {
        "content": "<p>unpri Î² regr 1/2: \"beta regression: ICE on Tried to access field 0 of union Layout\" <a href=\"https://github.com/rust-lang/rust/issues/69191\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69191\">#69191</a></p>",
        "id": 188641142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208668
    },
    {
        "content": "<p>it would be good to identify which PR from  <a href=\"https://github.com/rust-lang/rust/issues/68078\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68078\">#68078</a> injected the regression</p>",
        "id": 188641318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> hey, the builds that the CI keeps around that we use for cargo-bisect-rustc ... does that include the CI builds for all PR's ?</p>",
        "id": 188641351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208803
    },
    {
        "content": "<p>if I follow you, that's the only builds we have?</p>",
        "id": 188641380,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208820
    },
    {
        "content": "<p>namely, is there some dumb way we could have it traverse rollup PR's ?</p>",
        "id": 188641382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208822
    },
    {
        "content": "<p>no, because rollup PRs don't produce artifacts (unless someone ran try)</p>",
        "id": 188641403,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208838
    },
    {
        "content": "<p>what I mean is, do we keep around build artifacts for PR's that weren't directly merged</p>",
        "id": 188641407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208841
    },
    {
        "content": "<p>okay</p>",
        "id": 188641408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208843
    },
    {
        "content": "<p>only stuff that has a bors merge commit will have artifacts</p>",
        "id": 188641435,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208861
    },
    {
        "content": "<p>is it possible for someone to run try on a closed PR?</p>",
        "id": 188641438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208864
    },
    {
        "content": "<p>(incl. try builds and auto builds)</p>",
        "id": 188641442,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208868
    },
    {
        "content": "<p>not today, no</p>",
        "id": 188641451,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208878
    },
    {
        "content": "<p>I'm basically wondering out loud if we can get these build artifacts for rollup PR's after the fact</p>",
        "id": 188641497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208887
    },
    {
        "content": "<p>without forcing people to do it locally</p>",
        "id": 188641512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208898
    },
    {
        "content": "<p>I have historically wanted to make rollups produce artifacts for just linux, I suspect we have capacity for that</p>",
        "id": 188641515,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208900
    },
    {
        "content": "<p>but it's somewhat painful to do architecturally today</p>",
        "id": 188641531,
        "sender_full_name": "simulacrum",
        "timestamp": 1582208921
    },
    {
        "content": "<p>anyway</p>",
        "id": 188641614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582208990
    },
    {
        "content": "<p>another thing we could do is have cargo-bisect-rustc figuring out it found a rollup and going down automatically with a bisect on the rust repo</p>",
        "id": 188641616,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1582208990
    },
    {
        "content": "<p>it will take a lot of time because one would need to build rustc but at least is automated</p>",
        "id": 188641649,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1582209003
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> but cargo-bisect-rustc doesn't do local builds, does it?</p>",
        "id": 188641675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209009
    },
    {
        "content": "<p>are you suggesting <del>you</del> we would add that?</p>",
        "id": 188641684,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209016
    },
    {
        "content": "<p>I am against adding that support, I think</p>",
        "id": 188641701,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209025
    },
    {
        "content": "<p>it does not, I'm suggesting that we could implement that</p>",
        "id": 188641710,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1582209032
    },
    {
        "content": "<p>seems quite complicated</p>",
        "id": 188641711,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209033
    },
    {
        "content": "<p>maybe there</p>",
        "id": 188641742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209055
    },
    {
        "content": "<p>maybe there is a way to abstract it out</p>",
        "id": 188641757,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209066
    },
    {
        "content": "<p>another maybe easier thing is to have the tool pointing out what between which shas is the problem so one can manually bisect over rustc repo</p>",
        "id": 188641788,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1582209094
    },
    {
        "content": "<p>i.e. user provides driver script to do the builds, and cargo-bisect-rustc handles the mechanical stuff.</p>",
        "id": 188641794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209097
    },
    {
        "content": "<p>anyway</p>",
        "id": 188641818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209117
    },
    {
        "content": "<p>back to triage</p>",
        "id": 188641823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209120
    },
    {
        "content": "<p>this strikes me as very much P-high</p>",
        "id": 188641867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209130
    },
    {
        "content": "<p>triage: P-high, <del>removing nomination</del> (non-existant), assigning to self.</p>",
        "id": 188641882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209139
    },
    {
        "content": "<p>unpri Î² regr 2/2: \"beta regression: $crate may not be imported\" <a href=\"https://github.com/rust-lang/rust/issues/69190\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69190\">#69190</a></p>",
        "id": 188641967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you know if the root crate (piston2d-gfx_graphics?) has an updated version that fixes the issue?</p>",
        "id": 188642099,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209290
    },
    {
        "content": "<p>I do not, no</p>",
        "id": 188642130,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209308
    },
    {
        "content": "<p>I have not had time to revisit since I did initial triage</p>",
        "id": 188642161,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209326
    },
    {
        "content": "<p>no problem, just figured I'd ask.</p>",
        "id": 188642274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209364
    },
    {
        "content": "<p>I personally think ensuring that such an updated version exists is all we can expect to do here for now.</p>",
        "id": 188642312,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209384
    },
    {
        "content": "<p>/me really wants to get moving on <a href=\"https://github.com/rust-lang/rfcs/issues/2834\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/issues/2834\">rfc#2834</a></p>",
        "id": 188642344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209406
    },
    {
        "content": "<p>certainly looks like it</p>",
        "id": 188642397,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209426
    },
    {
        "content": "<p>the crater logs have v0.27, and the most recent is .68</p>",
        "id": 188642425,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209437
    },
    {
        "content": "<p>including a release 10 days ago</p>",
        "id": 188642440,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209450
    },
    {
        "content": "<p>otoh, there may not be a .27.1 so to speak</p>",
        "id": 188642453,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209458
    },
    {
        "content": "<p>it is ~4 years old at this point</p>",
        "id": 188642477,
        "sender_full_name": "simulacrum",
        "timestamp": 1582209475
    },
    {
        "content": "<p>okay, triaged as P-high and assigned to self. (I strongly suspect I'll just look, confirm, and close the issue as expected breakage.)</p>",
        "id": 188642630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209547
    },
    {
        "content": "<p>next: unprioritized nightly regressions</p>",
        "id": 188642686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209586
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-infra+-label%3AT-rustdoc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-infra+-label%3AT-rustdoc\">there are two</a></p>",
        "id": 188642707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209600
    },
    {
        "content": "<p>unpri Î½ regr 1/2: \"Significant performance regression on the <code>encoding</code> benchmark\" <a href=\"https://github.com/rust-lang/rust/issues/69197\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69197\">#69197</a></p>",
        "id": 188642788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209631
    },
    {
        "content": "<p>hmm.  Not sure if I can justify making this P-high...</p>",
        "id": 188642926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209696
    },
    {
        "content": "<p>lets nominate for discussion at meeting.</p>",
        "id": 188642960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209710
    },
    {
        "content": "<p>unpri Î½ regr 2/2: \" <code>is_x86_feature_detected!(\"avx512f\")</code> fails to build on nightly\" <a href=\"https://github.com/rust-lang/rust/issues/68905\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68905\">#68905</a></p>",
        "id": 188643118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209769
    },
    {
        "content": "<p>hmm this does not seem like a T-compiler Q</p>",
        "id": 188643213,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209831
    },
    {
        "content": "<p>oh indeed, it is already tagged as T-libs, not T-compiler</p>",
        "id": 188643266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209843
    },
    {
        "content": "<p>I'll let the libs team make decisions about how to handle this.</p>",
        "id": 188643292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209857
    },
    {
        "content": "<p>but I'll also nominate it to draw it to their attention</p>",
        "id": 188643301,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209869
    },
    {
        "content": "<p>normally at this point in pre-triage I would walk through the I-nominated issues to try to identify ones that do not need the tag any more.</p>",
        "id": 188643514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582209972
    },
    {
        "content": "<p>but given that the meeting is starting in 14 minutes, I don't have time. I'll focus on setting up the beta-nomination and stable-nomination lists, and then on trying to cherry-pick which nominations we might try to focus on at todays' meeting.</p>",
        "id": 188643600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582210013
    },
    {
        "content": "<p>there are 5 <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler+-label%3Abeta-accepted\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler+-label%3Abeta-accepted\">beta nominations</a></p>",
        "id": 188643697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582210077
    },
    {
        "content": "<p>oh you know, this process doesn't need to be spelled out in this topic. I've already created a <a href=\"https://hackmd.io/gfEQaT8IRPeX9crGFhMwpA?edit\" target=\"_blank\" title=\"https://hackmd.io/gfEQaT8IRPeX9crGFhMwpA?edit\">hackmd for the meeting today</a> ; I'll just put them in there now.</p>",
        "id": 188643833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582210144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I'm pretty surprised <a href=\"https://github.com/rust-lang/rust/issues/69306\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69306\">https://github.com/rust-lang/rust/issues/69306</a> is still a thing</p>",
        "id": 188644716,
        "sender_full_name": "centril",
        "timestamp": 1582210699
    },
    {
        "content": "<p>I don't think T-Lang needs to discuss; it's an obvious bug (it shouldn't compile)</p>",
        "id": 188644752,
        "sender_full_name": "centril",
        "timestamp": 1582210723
    },
    {
        "content": "<p>okay we can probably just remove the nomination then. Or maybe I'll see if someone in the meeting thinks they can resolve it.</p>",
        "id": 188645205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582210980
    },
    {
        "content": "<p>I've cced <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  who made a related fix; I'll remove t-lang under \"clearly bug\"</p>",
        "id": 188645260,
        "sender_full_name": "centril",
        "timestamp": 1582211025
    },
    {
        "content": "<p>(but it is important that we fix it sooner rather than later due to forward compat)</p>",
        "id": 188645339,
        "sender_full_name": "centril",
        "timestamp": 1582211049
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"126931\">centril</span> <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-20.20.2354818/near/188645339\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-20.20.2354818/near/188645339\">said</a>:</p>\n<blockquote>\n<p>(but it is important that we fix it sooner rather than later due to forward compat)</p>\n</blockquote>\n<p>yes. it might be quite hard/impossible to warning cycle such a fix</p>",
        "id": 188645648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582211268
    },
    {
        "content": "<p>Maybe; let's see what crater says</p>",
        "id": 188645764,
        "sender_full_name": "centril",
        "timestamp": 1582211312
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 188649793,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1582213764
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-20.20.2354818/near/188635402\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-20.20.2354818/near/188635402\">said</a>:</p>\n<blockquote>\n<p>P-high, assigning to self. But also: <span class=\"user-mention silent\" data-user-id=\"225192\">Nell Shamrell-Harrington</span> , would you be interesting in partnering up on this?</p>\n</blockquote>\n<p>Would love to!</p>",
        "id": 188650041,
        "sender_full_name": "Nell Shamrell-Harrington",
        "timestamp": 1582213890
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-20.20.2354818/near/188641967\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-20.20.2354818/near/188641967\">said</a>:</p>\n<blockquote>\n<p>unpri Î² regr 2/2: \"beta regression: $crate may not be imported\" <a href=\"https://github.com/rust-lang/rust/issues/69190\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69190\">#69190</a></p>\n</blockquote>\n<p>hey <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> , am I correct that generally the PR's that upgrade future-compat lints to hard errors are <em>not</em> tagged with <code>relnotes</code> ?  I only did a quick sampling.</p>",
        "id": 188656730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582218474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  generally speaking that's correct</p>",
        "id": 188657656,
        "sender_full_name": "centril",
        "timestamp": 1582219123
    },
    {
        "content": "<p>subject to exceptions for e.g. NLL migrate mode and whatnot</p>",
        "id": 188657672,
        "sender_full_name": "centril",
        "timestamp": 1582219138
    },
    {
        "content": "<p>would it be overload to start including them? I wonder if there's some easy way to summarize them.</p>",
        "id": 188658341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582219573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  it's probably OK to include them under \"compatibility section\"; we don't have that many each time</p>",
        "id": 188658445,
        "sender_full_name": "centril",
        "timestamp": 1582219659
    },
    {
        "content": "<p>want to file a policy question for release team and nominate?</p>",
        "id": 188658457,
        "sender_full_name": "centril",
        "timestamp": 1582219670
    },
    {
        "content": "<p>yeah will do</p>",
        "id": 188659079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1582220092
    }
]