[
    {
        "content": "<p>I'm currently working on a document for a project and I've been able to document almost all mitigations, how they apply to Rust, and their story with it (with comprehensive references, including all relevant GitHub issues and pull requests). However, I couldn't find any information about control flow enforcement, safe stack, and speculative load hardening (besides <a href=\"https://internals.rust-lang.org/t/thoughts-on-hardening/4771\">https://internals.rust-lang.org/t/thoughts-on-hardening/4771</a>). What is the Compiler team stance on these? Where would be the best place to contribute it to? (I've been pointed out to  <a href=\"https://doc.rust-lang.org/rustc/\">https://doc.rust-lang.org/rustc/</a> or <a href=\"https://doc.rust-lang.org/unstable-book/\">https://doc.rust-lang.org/unstable-book/</a>.)</p>\n<p>I also couldn't find an official stance on stack smashing protection. What is the Compiler team stance on it?</p>\n<p>(I originally asked these questions on <a class=\"stream\" data-stream-id=\"146229\" href=\"/#narrow/stream/146229-wg-secure-code\">#wg-secure-code</a>.)</p>",
        "id": 199823553,
        "sender_full_name": "Ramon de C Valle",
        "timestamp": 1591315241
    },
    {
        "content": "<p>I wonder if we inherit any of the stack guard stuff from LLVM? Of course, one could consider the borrow checker to be a mitigation, too, but stack guard, cf enforcement, etc would be good</p>",
        "id": 199831418,
        "sender_full_name": "mark-i-m",
        "timestamp": 1591325351
    },
    {
        "content": "<p>Regarding speculative load hardening, I believe that's implemented in LLVM, so clang and rustc and a bunch of other languages got them automatically</p>",
        "id": 199831428,
        "sender_full_name": "mark-i-m",
        "timestamp": 1591325385
    },
    {
        "content": "<p>(well, at least, I know that was the case for spectre v2; not sure if there are other mitigations that need to be applied too)</p>",
        "id": 199831477,
        "sender_full_name": "mark-i-m",
        "timestamp": 1591325424
    },
    {
        "content": "<p>We do inherit the functionality from LLVM, but I don't believe any of it is enabled by default. I don't know if rust exposes any flags for this.</p>",
        "id": 199964765,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1591434564
    },
    {
        "content": "<p>Looks like there is <code>-Z control-flow-guard</code> at least: <a href=\"https://github.com/rust-lang/rust/issues/68793\">https://github.com/rust-lang/rust/issues/68793</a></p>",
        "id": 199964846,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1591434681
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/72655\">https://github.com/rust-lang/rust/pull/72655</a> might also be of interest (LVI).</p>",
        "id": 199964907,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1591434747
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> and <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span>  for all the information and links. Much appreciated. They were all very helpful and led me to the following two issues and associated commits (including commits on the LLVM Project) that answered most of my questions:</p>\n<p><a href=\"https://github.com/rust-lang/rust/issues/68793\">https://github.com/rust-lang/rust/issues/68793</a><br>\n<a href=\"https://github.com/rust-lang/rust/issues/39699\">https://github.com/rust-lang/rust/issues/39699</a></p>",
        "id": 204252019,
        "sender_full_name": "Ramon de C Valle",
        "timestamp": 1595016247
    }
]