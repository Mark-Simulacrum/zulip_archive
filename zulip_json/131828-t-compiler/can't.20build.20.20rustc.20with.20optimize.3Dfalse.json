[
    {
        "content": "<p>Trying to build rustc with <code>optimize=false</code> is giving me ...</p>",
        "id": 216375776,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605116248
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>[2414/2614] Linking CXX executable bin/bugpoint\nFAILED: bin/bugpoint\n: &amp;&amp; /usr/bin/c++ -ffunction-sections -fdata-sections -fPIC -m64 -fPIC -fvisibility-inlines-hidden -Werror=date-time -Wall -Wextra -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wno-missing-field-initializers -pedantic -Wno-long-long -Wimplicit-fallthrough -Wno-maybe-uninitialized -Wno-class-memaccess -Wno-redundant-move -Wno-noexcept-type -Wdelete-non-virtual-dtor -Wno-comment -fdiagnostics-color -g -Wl,-allow-shlib-undefined   -Wl,--export-dynamic  -Wl,-rpath-link,/home/santiago/src/oss/rust2/build/x86_64-unknown-linux-gnu/llvm/build/./lib tools/bugpoint/CMakeFiles/bugpoint.dir/BugDriver.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/CrashDebugger.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/ExecutionDriver.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/ExtractFunction.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/FindBugs.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/Miscompilation.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/OptimizerDriver.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/ToolRunner.cpp.o tools/bugpoint/CMakeFiles/bugpoint.dir/bugpoint.cpp.o -o bin/bugpoint  -Wl,-rpath,&quot;\\$ORIGIN/../lib&quot;  lib/libLLVMAArch64AsmParser.a  lib/libLLVMARMAsmParser.a  lib/libLLVMHexagonAsmParser.a  lib/libLLVMMSP430AsmParser.a  lib/libLLVMMipsAsmParser.a  lib/libLLVMPowerPCAsmParser.a  lib/libLLVMRISCVAsmParser.a  lib/libLLVMSparcAsmParser.a  lib/libLLVMSystemZAsmParser.a  lib/libLLVMWebAssemblyAsmParser.a  lib/libLLVMX86AsmParser.a  lib/libLLVMAVRAsmParser.a  lib/libLLVMAArch64CodeGen.a  lib/libLLVMARMCodeGen.a  lib/libLLVMHexagonCodeGen.a  lib/libLLVMMSP430CodeGen.a  lib/libLLVMMipsCodeGen.a  lib/libLLVMNVPTXCodeGen.a  lib/libLLVMPowerPCCodeGen.a  lib/libLLVMRISCVCodeGen.a  lib/libLLVMSparcCodeGen.a  lib/libLLVMSystemZCodeGen.a  lib/libLLVMWebAssemblyCodeGen.a  lib/libLLVMX86CodeGen.a  lib/libLLVMAVRCodeGen.a  lib/libLLVMAArch64Desc.a  lib/libLLVMARMDesc.a  lib/libLLVMHexagonDesc.a  lib/libLLVMMSP430Desc.a  lib/libLLVMMipsDesc.a  lib/libLLVMNVPTXDesc.a  lib/libLLVMPowerPCDesc.a  lib/libLLVMRISCVDesc.a  lib/libLLVMSparcDesc.a  lib/libLLVMSystemZDesc.a  lib/libLLVMWebAssemblyDesc.a  lib/libLLVMX86Desc.a  lib/libLLVMAVRDesc.a  lib/libLLVMAArch64Info.a  lib/libLLVMARMInfo.a  lib/libLLVMHexagonInfo.a  lib/libLLVMMSP430Info.a  lib/libLLVMMipsInfo.a  lib/libLLVMNVPTXInfo.a  lib/libLLVMPowerPCInfo.a  lib/libLLVMRISCVInfo.a  lib/libLLVMSparcInfo.a  lib/libLLVMSystemZInfo.a  lib/libLLVMWebAssemblyInfo.a  lib/libLLVMX86Info.a  lib/libLLVMAVRInfo.a  lib/libLLVMAnalysis.a  lib/libLLVMBitWriter.a  lib/libLLVMCodeGen.a  lib/libLLVMExtensions.a  lib/libLLVMCore.a  lib/libLLVMipo.a  lib/libLLVMIRReader.a  lib/libLLVMAggressiveInstCombine.a  lib/libLLVMInstCombine.a  lib/libLLVMInstrumentation.a  lib/libLLVMLinker.a  lib/libLLVMObjCARCOpts.a  lib/libLLVMScalarOpts.a  lib/libLLVMSupport.a  lib/libLLVMTarget.a  lib/libLLVMTransformUtils.a  lib/libLLVMVectorize.a  -lpthread  lib/libLLVMAArch64Utils.a  lib/libLLVMARMUtils.a  lib/libLLVMHexagonAsmParser.a  lib/libLLVMHexagonDesc.a  lib/libLLVMHexagonInfo.a  lib/libLLVMAsmParser.a  lib/libLLVMFrontendOpenMP.a  lib/libLLVMRISCVUtils.a  lib/libLLVMMCDisassembler.a  lib/libLLVMCFGuard.a  lib/libLLVMGlobalISel.a  lib/libLLVMAsmPrinter.a  lib/libLLVMDebugInfoDWARF.a  lib/libLLVMSelectionDAG.a  lib/libLLVMCodeGen.a  lib/libLLVMBitWriter.a  lib/libLLVMScalarOpts.a  lib/libLLVMAggressiveInstCombine.a  lib/libLLVMInstCombine.a  lib/libLLVMTarget.a  lib/libLLVMTransformUtils.a  lib/libLLVMAnalysis.a  lib/libLLVMProfileData.a  lib/libLLVMObject.a  lib/libLLVMMCParser.a  lib/libLLVMMC.a  lib/libLLVMDebugInfoCodeView.a  lib/libLLVMDebugInfoMSF.a  lib/libLLVMBitReader.a  lib/libLLVMTextAPI.a  lib/libLLVMCore.a  lib/libLLVMBinaryFormat.a  lib/libLLVMRemarks.a  lib/libLLVMBitstreamReader.a  lib/libLLVMSupport.a  -lz  -lrt  -ldl  -lpthread  -lm  lib/libLLVMDemangle.a &amp;&amp; :\ncollect2: fatal error: ld terminated with signal 9 [Killed]\ncompilation terminated.\n[2417/2614] Linking CXX executable bin/llc\nFAILED: bin/llc\n: &amp;&amp; /usr/bin/c++ -ffunction-sections -fdata-sections -fPIC -m64 -fPIC -fvisibility-inlines-hidden -Werror=date-time -Wall -Wextra -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wno-missing-field-initializers -pedantic -Wno-long-long -Wimplicit-fallthrough -Wno-maybe-uninitialized -Wno-class-memaccess -Wno-redundant-move -Wno-noexcept-type -Wdelete-non-virtual-dtor -Wno-comment -fdiagnostics-color -g -Wl,-allow-shlib-undefined   -Wl,--export-dynamic  -Wl,-rpath-link,/home/santiago/src/oss/rust2/build/x86_64-unknown-linux-gnu/llvm/build/./lib tools/llc/CMakeFiles/llc.dir/llc.cpp.o -o bin/llc  -Wl,-rpath,&quot;\\$ORIGIN/../lib&quot;  lib/libLLVMAArch64AsmParser.a  lib/libLLVMARMAsmParser.a  lib/libLLVMHexagonAsmParser.a  lib/libLLVMMSP430AsmParser.a  lib/libLLVMMipsAsmParser.a  lib/libLLVMPowerPCAsmParser.a  lib/libLLVMRISCVAsmParser.a  lib/libLLVMSparcAsmParser.a  lib/libLLVMSystemZAsmParser.a  lib/libLLVMWebAssemblyAsmParser.a  lib/libLLVMX86AsmParser.a  lib/libLLVMAVRAsmParser.a  lib/libLLVMAArch64CodeGen.a  lib/libLLVMARMCodeGen.a  lib/libLLVMHexagonCodeGen.a  lib/libLLVMMSP430CodeGen.a  lib/libLLVMMipsCodeGen.a  lib/libLLVMNVPTXCodeGen.a  lib/libLLVMPowerPCCodeGen.a  lib/libLLVMRISCVCodeGen.a  lib/libLLVMSparcCodeGen.a  lib/libLLVMSystemZCodeGen.a  lib/libLLVMWebAssemblyCodeGen.a  lib/libLLVMX86CodeGen.a  lib/libLLVMAVRCodeGen.a  lib/libLLVMAArch64Desc.a  lib/libLLVMARMDesc.a  lib/libLLVMHexagonDesc.a  lib/libLLVMMSP430Desc.a  lib/libLLVMMipsDesc.a  lib/libLLVMNVPTXDesc.a  lib/libLLVMPowerPCDesc.a  lib/libLLVMRISCVDesc.a  lib/libLLVMSparcDesc.a  lib/libLLVMSystemZDesc.a  lib/libLLVMWebAssemblyDesc.a  lib/libLLVMX86Desc.a  lib/libLLVMAVRDesc.a  lib/libLLVMAArch64Info.a  lib/libLLVMARMInfo.a  lib/libLLVMHexagonInfo.a  lib/libLLVMMSP430Info.a  lib/libLLVMMipsInfo.a  lib/libLLVMNVPTXInfo.a  lib/libLLVMPowerPCInfo.a  lib/libLLVMRISCVInfo.a  lib/libLLVMSparcInfo.a  lib/libLLVMSystemZInfo.a  lib/libLLVMWebAssemblyInfo.a  lib/libLLVMX86Info.a  lib/libLLVMAVRInfo.a  lib/libLLVMAnalysis.a  lib/libLLVMAsmParser.a  lib/libLLVMAsmPrinter.a  lib/libLLVMCodeGen.a  lib/libLLVMCore.a  lib/libLLVMIRReader.a  lib/libLLVMMC.a  lib/libLLVMMIRParser.a  lib/libLLVMRemarks.a  lib/libLLVMScalarOpts.a  lib/libLLVMSelectionDAG.a  lib/libLLVMSupport.a  lib/libLLVMTarget.a  lib/libLLVMTransformUtils.a  lib/libLLVMVectorize.a  -lpthread  lib/libLLVMAArch64Utils.a  lib/libLLVMARMUtils.a  lib/libLLVMHexagonAsmParser.a  lib/libLLVMHexagonDesc.a  lib/libLLVMHexagonInfo.a  lib/libLLVMipo.a  lib/libLLVMIRReader.a  lib/libLLVMVectorize.a  lib/libLLVMFrontendOpenMP.a  lib/libLLVMInstrumentation.a  lib/libLLVMLinker.a  lib/libLLVMRISCVUtils.a  lib/libLLVMMCDisassembler.a  lib/libLLVMCFGuard.a  lib/libLLVMGlobalISel.a  lib/libLLVMDebugInfoDWARF.a  lib/libLLVMSelectionDAG.a  lib/libLLVMAsmParser.a  lib/libLLVMCodeGen.a  lib/libLLVMScalarOpts.a  lib/libLLVMAggressiveInstCombine.a  lib/libLLVMInstCombine.a  lib/libLLVMTransformUtils.a  lib/libLLVMBitWriter.a  lib/libLLVMTarget.a  lib/libLLVMAnalysis.a  lib/libLLVMProfileData.a  lib/libLLVMObject.a  lib/libLLVMMCParser.a  lib/libLLVMBitReader.a  lib/libLLVMTextAPI.a  lib/libLLVMCore.a  lib/libLLVMRemarks.a  lib/libLLVMBitstreamReader.a  lib/libLLVMMC.a  lib/libLLVMDebugInfoCodeView.a  lib/libLLVMDebugInfoMSF.a  lib/libLLVMBinaryFormat.a  lib/libLLVMSupport.a  -lz  -lrt  -ldl  -lpthread  -lm  lib/libLLVMDemangle.a &amp;&amp; :\ncollect2: fatal error: ld terminated with signal 9 [Killed]\ncompilation terminated.\n[2418/2614] Linking CXX shared library lib/libLTO.so.11-rust-dev\nFAILED: lib/libLTO.so.11-rust-dev\n</code></pre></div>",
        "id": 216375936,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605116333
    },
    {
        "content": "<p>more complete output <a href=\"https://gist.github.com/spastorino/6d6f38b473aa6d12d2167c4c765c8abe\">https://gist.github.com/spastorino/6d6f38b473aa6d12d2167c4c765c8abe</a></p>",
        "id": 216375954,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605116343
    },
    {
        "content": "<p>any idea on why?</p>",
        "id": 216375983,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605116361
    },
    {
        "content": "<p>just in case, I'm getting that right after removing <code>build</code> and running <code>./x.py build library/std</code></p>",
        "id": 216376008,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605116385
    },
    {
        "content": "<p>Check dmesg.</p>",
        "id": 216376243,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605116518
    },
    {
        "content": "<p>You're probably running out of memory, and the OOM killer is killing the linker.</p>",
        "id": 216376303,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605116537
    },
    {
        "content": "<p>that's right, I thought 32GB were enough :P</p>",
        "id": 216376838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605116846
    },
    {
        "content": "<p>I think it will work when you compile just LLVM with optimizations.</p>",
        "id": 216376971,
        "sender_full_name": "bjorn3",
        "timestamp": 1605116908
    },
    {
        "content": "<p>At least I was able to bootstrap rustc using cg_clif with only 4GB ram + 6GB swap which wasn't used much if I recall correctly.</p>",
        "id": 216377074,
        "sender_full_name": "bjorn3",
        "timestamp": 1605116968
    },
    {
        "content": "<p>You probably know already, but optimize = false isn't really supported</p>",
        "id": 216377400,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605117149
    },
    {
        "content": "<p>You might need to set <code>[llvm] link-jobs</code> to something reasonable, especially if using static LLVM</p>",
        "id": 216377656,
        "sender_full_name": "cuviper",
        "timestamp": 1605117302
    },
    {
        "content": "<p>otherwise, you'll get a bunch of llvm tools all trying to link with the giant LLVM in parallel</p>",
        "id": 216377692,
        "sender_full_name": "cuviper",
        "timestamp": 1605117338
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 216378471,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1605117723
    },
    {
        "content": "<p>What's the main thing that is making this a problem?  Is it the explosion of generics / monomorphization, where zillions of little functions are not being inlined during debug builds?</p>",
        "id": 216507322,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1605205209
    },
    {
        "content": "<p>that's what I would expect, rustc_middle is a beast <a href=\"#narrow/stream/131828-t-compiler/topic/Making.20rustc_middle.20faster.20to.20compile\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Making.20rustc_middle.20faster.20to.20compile</a></p>",
        "id": 216507419,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605205257
    }
]