[
    {
        "content": "<p>is there a way for libcore/libstd macros to detect whether the toolchain is a stable or unstable toolchain ?</p>",
        "id": 175816862,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568643997
    },
    {
        "content": "<p>we currently have a bug in which <code>is_x86_feature_detected!(\"unstable-target-feature\")</code> works on stable</p>",
        "id": 175816921,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568644046
    },
    {
        "content": "<p>that macro looks like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">is_x86_feature_detected</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"s\">&quot;avx&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"s\">&quot;some-unstable-feature&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"cp\">$tt</span>:<span class=\"nc\">tt</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">compile_error</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;unknown target feature: {}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$tt</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 175816950,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568644072
    },
    {
        "content": "<p>but I can't place a stability attribute in the macro arms</p>",
        "id": 175817090,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568644152
    },
    {
        "content": "<p>I suppose I could do something like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"s\">&quot;unstable-feature&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"cp\">#[unstable(...)]</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>instead</p>",
        "id": 175817236,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568644217
    },
    {
        "content": "<p>but this errors with: error: stability attributes may not be used outside of the standard library</p>",
        "id": 175818624,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568645026
    },
    {
        "content": "<p>apparently because the macro expands code to a user crate that uses the stability attribute</p>",
        "id": 175818638,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568645041
    },
    {
        "content": "<p>(i'm using  <code> #[allow_internal_unstable(staged_api)]</code> on the macro though)</p>",
        "id": 175818760,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568645113
    },
    {
        "content": "<p><code>staged_api</code> AFAIK is a crate-level attribute and has no effect when used elsewhere</p>",
        "id": 175831088,
        "sender_full_name": "RalfJ",
        "timestamp": 1568653172
    },
    {
        "content": "<p>So I didn't manage to expand the function items in the macro, but I'm expanding a new module inside libstd that contains the functions, and have the macro expand calls to those.</p>",
        "id": 175863555,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568677737
    },
    {
        "content": "<p>However, user code is not failing to compile when using unstable APIs from this module via the macro</p>",
        "id": 175863574,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568677758
    },
    {
        "content": "<p>:/</p>",
        "id": 175863577,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568677759
    }
]