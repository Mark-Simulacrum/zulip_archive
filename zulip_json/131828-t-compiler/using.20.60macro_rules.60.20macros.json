[
    {
        "content": "<p>My understanding is that <code>macro_rules</code> macros can't be imported with <code>use</code>, because there are some unresolved questions about macro-expansion ordering.  However, I've now discovered that one <em>can</em> in fact use this macro, via reexport and new-style lexically scoped <code>use</code>. Is this a feature, or a bug?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">mod</span> <span class=\"nn\">macros</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">_my_macro</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">crate</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">_my_macro</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">my_macro</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">mod</span> <span class=\"nn\">b</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">crate</span>::<span class=\"n\">macros</span>::<span class=\"n\">my_macro</span><span class=\"o\">!</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">super</span>::<span class=\"n\">macros</span>::<span class=\"n\">my_macro</span><span class=\"o\">!</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// my_macro!();</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>cc <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></p>",
        "id": 181994951,
        "sender_full_name": "matklad",
        "timestamp": 1574838131
    },
    {
        "content": "<p>This is a direct consequence of \"uniform paths\", if the macro can be called, then it can be used as well.</p>",
        "id": 182051303,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1574883042
    },
    {
        "content": "<p>Not sure what are the unresolved questions here.</p>",
        "id": 182051359,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1574883086
    },
    {
        "content": "<p>So, <code>use</code>ing <code>macro_rules</code>  macros (without this hack) is not allowed simply because it's not implemented, and not because there's some big reason not to allow it?</p>",
        "id": 182053421,
        "sender_full_name": "matklad",
        "timestamp": 1574884554
    },
    {
        "content": "<p>They can't be used because they have strange scoping, not because there's a special rule for <code>use</code> and macros.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}}</span><span class=\"w\"></span>\n\n<span class=\"k\">mod</span> <span class=\"nn\">x</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// OK on 2018 - This isn&#39;t allowed on 2015 because `::m!()` isn&#39;t either.</span>\n<span class=\"w\">    </span><span class=\"n\">k</span><span class=\"o\">!</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 182053903,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1574884875
    }
]