[
    {
        "content": "<p>I have been wondering recently if we could rely solely on ThinLTO for all inlining - that should work (from my understanding) with the exception of when dylibs are used (e.g. rustc).<br>\nSo far I think all <code>#[inline]</code> imports are codegen-ed at downstream crates. Is my understanding correct and do you think the above idea is worth implementing?</p>",
        "id": 177143703,
        "sender_full_name": "Tatsuyuki Ishi",
        "timestamp": 1570018472
    },
    {
        "content": "<p>One way of experimenting with this without too much upfront implementation effort would be to modify the compiler to not duplicate inline functions across codegen units and then do performance tests with different numbers of codegen units.</p>",
        "id": 177144005,
        "sender_full_name": "mw",
        "timestamp": 1570018706
    },
    {
        "content": "<p>I suspect that ThinLTO can't quite reach the same runtime performance, but it might be worth a try.</p>",
        "id": 177144107,
        "sender_full_name": "mw",
        "timestamp": 1570018802
    },
    {
        "content": "<p>I could imagine <code>-Copt-level=2</code> doing only ThinLTO while <code>-Copt-level=3</code> would do the code duplication.</p>",
        "id": 177144174,
        "sender_full_name": "mw",
        "timestamp": 1570018864
    },
    {
        "content": "<p>I think that logic is implemented <a href=\"https://github.com/rust-lang/rust/blob/f2023ac599c38a59f86552089e6791c5a73412d3/src/librustc_mir/monomorphize/item.rs#L65\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/f2023ac599c38a59f86552089e6791c5a73412d3/src/librustc_mir/monomorphize/item.rs#L65\">here</a> but for non-optimized builds. Should I try having a build with this line changed?</p>",
        "id": 177144681,
        "sender_full_name": "Tatsuyuki Ishi",
        "timestamp": 1570019337
    },
    {
        "content": "<p>Actually there's a debugging opt so I can just do lolbench</p>",
        "id": 177148898,
        "sender_full_name": "Tatsuyuki Ishi",
        "timestamp": 1570022578
    },
    {
        "content": "<p>I'm abandoning lolbench since it keeps refusing to work, if anyone know a good alternative or whatever please let me know</p>",
        "id": 177202979,
        "sender_full_name": "Tatsuyuki Ishi",
        "timestamp": 1570059561
    }
]