[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will be starting in 20 hours</p>",
        "id": 194969124,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587578487
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> will be doing pre-triage in <a class=\"stream-topic\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/pre-meeting.20triage.202020-04-23.20.2354818\">#t-compiler/wg-prioritization &gt; pre-meeting triage 2020-04-23 #54818</a></p>",
        "id": 194969301,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587578564
    },
    {
        "content": "<p>we are supposed to have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1117\">@WG-parallel-rustc</span> and <span class=\"user-group-mention\" data-user-group-id=\"1184\">@WG-polonius</span></p>",
        "id": 194969414,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587578628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I don't think there's stuff going on about parallel, right?</p>",
        "id": 194969498,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587578657
    },
    {
        "content": "<p>not right this minute</p>",
        "id": 194969539,
        "sender_full_name": "simulacrum",
        "timestamp": 1587578679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> is there something to share about polonius?</p>",
        "id": 194969571,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587578697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I very likely won't be able to attend the meeting, but I can provide an update :)</p>",
        "id": 194969643,
        "sender_full_name": "lqd",
        "timestamp": 1587578730
    },
    {
        "content": "<p>I'll prepare that now</p>",
        "id": 194969762,
        "sender_full_name": "lqd",
        "timestamp": 1587578782
    },
    {
        "content": "<p>we are preparing the <a href=\"https://hackmd.io/sUmyIVXkSvmLzy7KKKjExg?view\" title=\"https://hackmd.io/sUmyIVXkSvmLzy7KKKjExg?view\">agenda here</a></p>",
        "id": 194969992,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587578885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> here's the update we have for you :)</p>\n<div class=\"codehilite\"><pre><span></span>The Polonius WG has many threads of ongoing work but our strategy is still to first achieve completeness/correctness to match rustc&#39;s\nexisting NLL analyses.\n\nTowards that goal, we have:\n- landed universal region errors in both polonius and rustc a while back; (and we&#39;ve kept working on computing these\nerrors in all of the polonius variants, but that&#39;s a piece of work more related to performance than completeness)\n- and we are currently working towards one of the last missing pieces, computing move errors:\npart of this work has landed in polonius itself\nalready, but we haven&#39;t yet done the rustc counterpart -- polonius will compute move errors, but rustc doesn&#39;t\nemit those just yet, instead of the ones it computes on its own.\n(That also means that this part of the work has not been fully tested yet and we expect to iterate on this)\n- after that, some interaction with chalk will be needed to handle subtyping involving higher-ranked types, which is the\nlast big piece of work remaining (but mostly on the chalk side, rather than polonius)\n\n- We have worked towards fixing the 2 OOM errors happening in rustc tests under `-Z polonius`: the cause is known and we have\na tentative fix for it but no PRs yet as it currently moves the OOMs from rustc to polonius, and that will be taken care of\nwhile finishing up the move errors work.\n\n- On a more administrative note: most of the WG members don&#39;t have a lot of time to dedicate to it, so we&#39;re trying to\norganize differently. The weekly meeting has been postponed in favor of a more periodical model (a small scale All Hands),\nwhere we instead gather for a few mornings/days once every few months to achieve bigger pieces of work together.\nWe&#39;ve done one of these already, and were hoping to have another one soon-ish.\n</pre></div>",
        "id": 194978584,
        "sender_full_name": "lqd",
        "timestamp": 1587583149
    },
    {
        "content": "<p>(if there are any questions though, I'll make sure to reply as I'm finished with work, but of course Niko will be there)</p>",
        "id": 194978997,
        "sender_full_name": "lqd",
        "timestamp": 1587583351
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, our meeting starts in 19 minutes, you can check out the <a href=\"https://hackmd.io/sUmyIVXkSvmLzy7KKKjExg?view\" title=\"https://hackmd.io/sUmyIVXkSvmLzy7KKKjExg?view\">agenda here</a></p>",
        "id": 195062047,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587649280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/194978997\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/194978997\">said</a>:</p>\n<blockquote>\n<p>(if there are any questions though, I'll make sure to reply as I'm finished with work, but of course Niko will be there)</p>\n</blockquote>\n<p>(in fact Niko is absent today and tomorrow. but someone will answer your questions ... eventually...)</p>",
        "id": 195063813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650071
    },
    {
        "content": "<p>I've also been kind of absent but I'll try to be here today. PM me for anything urgent, I won't get to GH notifications until next week I don't think</p>",
        "id": 195064321,
        "sender_full_name": "eddyb",
        "timestamp": 1587650320
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 195064769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650521
    },
    {
        "content": "<p>We'll start off with five minutes for ...</p>",
        "id": 195064839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650539
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 195064846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650541
    },
    {
        "content": "<ul>\n<li>My machine is pretty pokey today, and github has been having issues too on their side, so today's meeting is going to be ... interesting ...</li>\n</ul>",
        "id": 195064912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650574
    },
    {
        "content": "<ul>\n<li>Today we are releasing Rust 1.43.0</li>\n</ul>",
        "id": 195064954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650597
    },
    {
        "content": "<ul>\n<li>Tomorrow (Friday) we will have a compiler team meeting about <a href=\"https://github.com/rust-lang/compiler-team/issues/267\" title=\"https://github.com/rust-lang/compiler-team/issues/267\">\"Standard library implementation ownership\" #267</a></li>\n</ul>",
        "id": 195064977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650606
    },
    {
        "content": "<ul>\n<li>My machine has also been sort of slow for some reason, and due to github being down we don't yet have that release going, but soon(tm)</li>\n</ul>",
        "id": 195064987,
        "sender_full_name": "simulacrum",
        "timestamp": 1587650611
    },
    {
        "content": "<ul>\n<li>as I mentioned above, niko is out today and tomorrow, so I will be taking the reins for tomorrow's steering meeting (<a href=\"https://github.com/rust-lang/compiler-team/issues/267\" title=\"https://github.com/rust-lang/compiler-team/issues/267\">compiler-team#267</a>, mentioned above)</li>\n</ul>",
        "id": 195065105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650649
    },
    {
        "content": "<ul>\n<li>There are 5 major changes proposals<ul>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/277\" title=\"https://github.com/rust-lang/compiler-team/issues/277\">Decentralize queries #277</a></li>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/276\" title=\"https://github.com/rust-lang/compiler-team/issues/276\">Major change proposal: Support collecting all identifiers encountered during compilation #276</a></li>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/274\" title=\"https://github.com/rust-lang/compiler-team/issues/274\">Move <code>src/test/run-fail</code> tests to UI #274</a></li>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/270\" title=\"https://github.com/rust-lang/compiler-team/issues/270\">Integration of the Cranelift backend with rustc #270</a></li>\n<li><a href=\"https://github.com/rust-lang/compiler-team/issues/233\" title=\"https://github.com/rust-lang/compiler-team/issues/233\">[major change] MIR librarification #233</a></li>\n</ul>\n</li>\n</ul>\n<p>If you have feedback or objections on any of the above, or would like to second one or volunteer to be the reviewer, then please leave comments on the relevant issue</p>",
        "id": 195065236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650703
    },
    {
        "content": "<p>(or in the associated zulip topic under <a class=\"stream\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes\">#t-compiler/major changes</a> )</p>",
        "id": 195065309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650727
    },
    {
        "content": "<p>(remember <code>@rustbot seconded</code> on the github thread is the way to second)</p>",
        "id": 195065338,
        "sender_full_name": "simulacrum",
        "timestamp": 1587650740
    },
    {
        "content": "<p>the only thing I'd like to point out is that we should have a standard naming scheme :P</p>",
        "id": 195065381,
        "sender_full_name": "eddyb",
        "timestamp": 1587650759
    },
    {
        "content": "<p>(RFCs have had this problem for a while, we just don't look at PR titles for them a lot listed like that)</p>",
        "id": 195065481,
        "sender_full_name": "eddyb",
        "timestamp": 1587650788
    },
    {
        "content": "<p>time to make a meta MCP!</p>",
        "id": 195065482,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650788
    },
    {
        "content": "<p>Its certainly something we can try to do for the agenda itself, but it would make sense to also do it consistently on the issue titles themselves</p>",
        "id": 195065565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650825
    },
    {
        "content": "<p>okay so lets move along then</p>",
        "id": 195065782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650915
    },
    {
        "content": "<p>Normally on a release day we wouldn't have any beta nominations, but today is exceptional in so many respects...</p>",
        "id": 195065876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650957
    },
    {
        "content": "<p>namely, we have a beta-nom: - \"[beta] fix failing const validation\" <a href=\"https://github.com/rust-lang/rust/pull/71441\" title=\"https://github.com/rust-lang/rust/pull/71441\">#71441</a></p>",
        "id": 195065903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650975
    },
    {
        "content": "<p>this is not a backport; it is a revert</p>",
        "id": 195065920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650983
    },
    {
        "content": "<p>is <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> here? I'm curious why we don't just go ahead and revert on master too?</p>",
        "id": 195065950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587650999
    },
    {
        "content": "<p>rather than let beta and master diverge so much?</p>",
        "id": 195066008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651012
    },
    {
        "content": "<p>he has mentioned on the issue that a proper fix for master is being cooked</p>",
        "id": 195066059,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587651035
    },
    {
        "content": "<p>but given the time constraints I guess he thought would be safer to revert for beta instead of risking too much ?</p>",
        "id": 195066106,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587651062
    },
    {
        "content": "<p>yeah, but, ... so what?</p>",
        "id": 195066109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651062
    },
    {
        "content": "<p>oh heh this is const-prop again</p>",
        "id": 195066123,
        "sender_full_name": "eddyb",
        "timestamp": 1587651067
    },
    {
        "content": "<p>What i mean is: we could <em>still</em> revert on master</p>",
        "id": 195066141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651075
    },
    {
        "content": "<p>this is for post-release beta, right?</p>",
        "id": 195066153,
        "sender_full_name": "eddyb",
        "timestamp": 1587651080
    },
    {
        "content": "<p>and reland the original PR along with its fixes</p>",
        "id": 195066159,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> that's my understanding, yes. As in, not something that is going to end up in the release</p>",
        "id": 195066201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651104
    },
    {
        "content": "<p>then yeah let's land the revert on master then backport it to beta</p>",
        "id": 195066262,
        "sender_full_name": "eddyb",
        "timestamp": 1587651122
    },
    {
        "content": "<p>also it's tiny so it won't hurt anything to do the revert</p>",
        "id": 195066307,
        "sender_full_name": "eddyb",
        "timestamp": 1587651136
    },
    {
        "content": "<p>yeah, makes sense</p>",
        "id": 195066344,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587651153
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> here. Without more explicit explanation of why not to revert on master, I think that is the way to go</p>",
        "id": 195066350,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651156
    },
    {
        "content": "<p>maybe I should go through <code>const-prop</code> and do an in-depth review, although it would've been helpful to do this <em>before</em> all the ICEs it caused :P</p>",
        "id": 195066418,
        "sender_full_name": "eddyb",
        "timestamp": 1587651187
    },
    {
        "content": "<p>We can approve the backport today though, right? Doesn't seem like it makes sense to wait on that</p>",
        "id": 195066448,
        "sender_full_name": "simulacrum",
        "timestamp": 1587651199
    },
    {
        "content": "<p>but I have to say, <code>if rvalue.needs_subst() {</code> looks very suspicious :P</p>",
        "id": 195066449,
        "sender_full_name": "eddyb",
        "timestamp": 1587651199
    },
    {
        "content": "<p>(A troubling aspect to this is that the PR itself is failing for some reason; its suspected to be spurious failures, but <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> mentioned something about how all three builders failed in the reattempt</p>",
        "id": 195066464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I also think we can approve the backport today too</p>",
        "id": 195066501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651221
    },
    {
        "content": "<p>I'm just saying we should land the revert on master as well</p>",
        "id": 195066519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651230
    },
    {
        "content": "<p>build failure is definitely not related to pr</p>",
        "id": 195066530,
        "sender_full_name": "simulacrum",
        "timestamp": 1587651235
    },
    {
        "content": "<p>yes, I would agree with that (presuming there's not a pr fixing master properly in the same timeframe as we can prepare a revert, I guess)</p>",
        "id": 195066619,
        "sender_full_name": "simulacrum",
        "timestamp": 1587651259
    },
    {
        "content": "<p>Okay seems like no one present is going to object. I can prepare a revert on master to match what <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> did in PR <a href=\"https://github.com/rust-lang/rust/issues/71441\" title=\"https://github.com/rust-lang/rust/issues/71441\">#71441</a>.</p>",
        "id": 195066647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651270
    },
    {
        "content": "<p>lets move on then</p>",
        "id": 195066683,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651285
    },
    {
        "content": "<p>there are no stable backport nominations</p>",
        "id": 195066726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651301
    },
    {
        "content": "<p>There are two T-compiler PR's marked <a href=\"http://(https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler+)\" title=\"http://(https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AS-waiting-on-team+label%3AT-compiler+)\">S-waiting-on-team</a></p>",
        "id": 195066787,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651329
    },
    {
        "content": "<p>waiting 1/2: \"Add Option to Force Unwind Tables\" <a href=\"https://github.com/rust-lang/rust/pull/69984\" title=\"https://github.com/rust-lang/rust/pull/69984\">#69984</a></p>",
        "id": 195066826,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651344
    },
    {
        "content": "<p>(status: FCP finished, disposition merge.) So this is just a general heads up to everyone</p>",
        "id": 195066901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651363
    },
    {
        "content": "<p>waiting 2/2: \"Remove -Z no-landing-pads flag\" <a href=\"https://github.com/rust-lang/rust/pull/70175\" title=\"https://github.com/rust-lang/rust/pull/70175\">#70175</a></p>",
        "id": 195066923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651371
    },
    {
        "content": "<p>(status: FCP finished, disposition merge.) So the same deal here.</p>",
        "id": 195066961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651388
    },
    {
        "content": "<p>And that takes us to what I think will be the bulk of today's meeting: The \"Issues of Note\"</p>",
        "id": 195067012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651412
    },
    {
        "content": "<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\">1 P-critical issues</a> (same as last week)</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">43 P-high issues</a> (2 less than last week)<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\">22 of those are unassigned</a> (4 less than last week)</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-high, 2 P-medium, 1 P-low, 2 T-libs and 1 T-rustdoc regression-from-stable-to-beta</a><ul>\n<li>The only assigned is the P-high one. One of the T-libs and the T-rustdoc are unassigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">3 P-high, 3 P-medium, 1 P-low and 1 T-libs regression-from-stable-to-nightly</a><ul>\n<li>Only 2 P-high are assigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">69 regression-from-stable-to-stable</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\">24 of those are not prioritized</a>.</li>\n</ul>\n</li>\n</ul>",
        "id": 195067047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651425
    },
    {
        "content": "<p>nice</p>",
        "id": 195067080,
        "sender_full_name": "eddyb",
        "timestamp": 1587651438
    },
    {
        "content": "<p>The <code>P-critical</code> issue has a pr waiting to merge (thanks <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>!)</p>",
        "id": 195067100,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1587651452
    },
    {
        "content": "<p>(thank's to <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> for putting that summary together, as well as the whole agenda for today)</p>",
        "id": 195067145,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651475
    },
    {
        "content": "<p>right</p>",
        "id": 195067206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651483
    },
    {
        "content": "<p>There is only one thing I think we might discuss regarding the P-critical issue</p>",
        "id": 195067276,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651512
    },
    {
        "content": "<p>which is in the agenda:</p>",
        "id": 195067295,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651522
    },
    {
        "content": "<p>- This is <code>P-critical</code> but is not going to be included in 1.43.0. <code>P-critical</code> means that it potentially blocks the release and this time it didn't block it.<br>\n  - Should this one be beta-nominated after the nightly to beta promotion happens? (If PR <a href=\"https://github.com/rust-lang/rust/issues/71078\" title=\"https://github.com/rust-lang/rust/issues/71078\">#71078</a> lands before promotion then point is moot.)</p>",
        "id": 195067318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651535
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> the nightly to beta promotion has already happened, right? Otherwise we wouldn't have had that previous discussion of <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> 's revert PR?</p>",
        "id": 195067393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651577
    },
    {
        "content": "<p>yes</p>",
        "id": 195067409,
        "sender_full_name": "simulacrum",
        "timestamp": 1587651589
    },
    {
        "content": "<p>this also means stable-to-stable regressions were stable-to-beta days ago?</p>",
        "id": 195067486,
        "sender_full_name": "eddyb",
        "timestamp": 1587651611
    },
    {
        "content": "<p>I don't know if we've updated the stable-to-beta regressions to be stable-to-stable already</p>",
        "id": 195067543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651638
    },
    {
        "content": "<p>that might only happen after the release itself...?</p>",
        "id": 195067569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651646
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195067047\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195067047\">said</a>:</p>\n<blockquote>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\">1 P-critical issues</a> (same as last week)</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">43 P-high issues</a> (2 less than last week)<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\">22 of those are unassigned</a> (4 less than last week)</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-high, 2 P-medium, 1 P-low, 2 T-libs and 1 T-rustdoc regression-from-stable-to-beta</a><ul>\n<li>The only assigned is the P-high one. One of the T-libs and the T-rustdoc are unassigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">3 P-high, 3 P-medium, 1 P-low and 1 T-libs regression-from-stable-to-nightly</a><ul>\n<li>Only 2 P-high are assigned.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">69 regression-from-stable-to-stable</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\">24 of those are not prioritized</a>.</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>one thing that I wanted to note about this is that we are consistenly taking the <code>P-high</code> count down, which is great :). Keep fixing stuff :).</p>",
        "id": 195067594,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587651654
    },
    {
        "content": "<p>that is, are the 24 unprioritized ones left over from the past 6 weeks?</p>",
        "id": 195067664,
        "sender_full_name": "eddyb",
        "timestamp": 1587651682
    },
    {
        "content": "<p>I could just open one and see :P</p>",
        "id": 195067700,
        "sender_full_name": "eddyb",
        "timestamp": 1587651696
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195067569\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195067569\">said</a>:</p>\n<blockquote>\n<p>that might only happen after the release itself...?</p>\n</blockquote>\n<p>(and I don't think you'd want to update the stable-to-nightly labels to be stable-to-beta until <em>after</em> you've taken care of updating the stable-to-beta ones to be stable-to-stable...)</p>",
        "id": 195067704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651698
    },
    {
        "content": "<p>we haven't yet automated stable-to* regression label switching, I don't know if we've done that manually. I've never done it in the past but it has presumably \"magically\" happened thanks to some hardworking triagers</p>",
        "id": 195067812,
        "sender_full_name": "simulacrum",
        "timestamp": 1587651730
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195067664\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195067664\">said</a>:</p>\n<blockquote>\n<p>that is, are the 24 unprioritized ones left over from the past 6 weeks?</p>\n</blockquote>\n<p>I think we tend to be pretty good at prioiritizing all stable-to-beta and stable-to-nightly regressions</p>",
        "id": 195067813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651731
    },
    {
        "content": "<p>ah that explains it, thanks!</p>",
        "id": 195067847,
        "sender_full_name": "eddyb",
        "timestamp": 1587651750
    },
    {
        "content": "<p>so I was assuming that all the unprioritized stable-to-stable regressions are not recent injections</p>",
        "id": 195067875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651764
    },
    {
        "content": "<p>yeah those are not recent, just 4 of them are from this year and just 1 of those <code>T-compiler</code></p>",
        "id": 195067953,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587651800
    },
    {
        "content": "<p>Anyway, regarding PR <a href=\"https://github.com/rust-lang/rust/issues/71078\" title=\"https://github.com/rust-lang/rust/issues/71078\">#71078</a>, I think my attitude there is that I <em>will</em> beta nominate it, but we do not need to discuss its backport this week</p>",
        "id": 195068009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651839
    },
    {
        "content": "<p>that's the only P-critical bug</p>",
        "id": 195068079,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651862
    },
    {
        "content": "<p>next up:</p>",
        "id": 195068086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651866
    },
    {
        "content": "<h3>Unassigned P-high regressions</h3>\n<ul>\n<li>\"<code>broken MIR</code> <code>NoSolution</code> sized array initialiser with addition in generic tuple destructure\" <a href=\"https://github.com/rust-lang/rust/issues/71344\" title=\"https://github.com/rust-lang/rust/issues/71344\">#71344</a></li>\n</ul>",
        "id": 195068092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651868
    },
    {
        "content": "<p>injected by PR <a href=\"https://github.com/rust-lang/rust/issues/70452\" title=\"https://github.com/rust-lang/rust/issues/70452\">#70452</a> according to bisection</p>",
        "id": 195068185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  do you want to look at this one?</p>",
        "id": 195068208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651915
    },
    {
        "content": "<p>huh, I would've expected crater to find all such bugs</p>",
        "id": 195068297,
        "sender_full_name": "eddyb",
        "timestamp": 1587651961
    },
    {
        "content": "<p>there were a lot of intersecting requirements in the MCVE</p>",
        "id": 195068378,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587651979
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> if you need help I can take a look at it and ask you questions if it's fine to you</p>",
        "id": 195068442,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587652012
    },
    {
        "content": "<p>anyway I'll assign to <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> for now; if you have too much on your plate, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> , let me know and we can work on reassigning</p>",
        "id": 195068445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652013
    },
    {
        "content": "<p>I have nothing on my plate until I open GH notifications again :P</p>",
        "id": 195068489,
        "sender_full_name": "eddyb",
        "timestamp": 1587652029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> thanks, that might be the best way to deal with this quickly</p>",
        "id": 195068561,
        "sender_full_name": "eddyb",
        "timestamp": 1587652059
    },
    {
        "content": "<p>/me goes to write a comment on the issue</p>",
        "id": 195068578,
        "sender_full_name": "eddyb",
        "timestamp": 1587652066
    },
    {
        "content": "<p>okay, we have three nominated issues on the agenda</p>",
        "id": 195068660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652090
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195068561\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195068561\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> thanks, that might be the best way to deal with this quickly</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, feel free to assign to me then</p>",
        "id": 195068706,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587652112
    },
    {
        "content": "<p>nom 1/3: \"<code>unsized_locals</code> fails to uphold alignment requirements\" <a href=\"https://github.com/rust-lang/rust/issues/71416\" title=\"https://github.com/rust-lang/rust/issues/71416\">#71416</a></p>\n<p>- We need to discuss about a possible solution for this one.</p>",
        "id": 195068710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652114
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> ^</p>",
        "id": 195068794,
        "sender_full_name": "oli",
        "timestamp": 1587652169
    },
    {
        "content": "<p>I like this remark from <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> : \"Unlike the other unsound features, this is one where we don't even have a plan for how to soundly implement it. Not sure how much I like keeping that around.\"</p>",
        "id": 195068799,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652170
    },
    {
        "content": "<p>so, I guess the most interested people in discussing this are <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> but given they are not around I guess we could also leave this nomination up for next meeting and try to have <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> around?</p>",
        "id": 195068968,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587652239
    },
    {
        "content": "<p>and to clarify, I think this is the big issue (from a comment from niko): \"part of the challenge here is that the alignment of a dyn Value is totally unknown -- it's not like we can conservatively align to 64 bytes or something.\"</p>",
        "id": 195069054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652270
    },
    {
        "content": "<p>leaving a comment now</p>",
        "id": 195069076,
        "sender_full_name": "eddyb",
        "timestamp": 1587652278
    },
    {
        "content": "<p>unsized_locals is unstable, right?</p>",
        "id": 195069086,
        "sender_full_name": "nagisa",
        "timestamp": 1587652281
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> that's right, this is all under a feature gate</p>",
        "id": 195069114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652292
    },
    {
        "content": "<p>There is concurrent discussion in the issue of splitting it into two separate feature-gates</p>",
        "id": 195069143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652309
    },
    {
        "content": "<p>so that we could distinguish the part we actually know how to implement from the other nonsense</p>",
        "id": 195069221,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> can you dynamically query a dyn Value for its alignment?</p>",
        "id": 195069266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652345
    },
    {
        "content": "<p>I'm surprised we landed the <code>Box&lt;dyn FnOnce()&gt;</code> change w/o a separate feature gate</p>",
        "id": 195069277,
        "sender_full_name": "eddyb",
        "timestamp": 1587652348
    },
    {
        "content": "<p>or is that info not in the vtable?</p>",
        "id": 195069310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> ofc, IIRC you even implemented the correct field offset logic that uses dynamic alignment :P</p>",
        "id": 195069318,
        "sender_full_name": "eddyb",
        "timestamp": 1587652369
    },
    {
        "content": "<p>but also, <code>align_of_val</code> is a thing</p>",
        "id": 195069332,
        "sender_full_name": "eddyb",
        "timestamp": 1587652377
    },
    {
        "content": "<p>hell if I remember that</p>",
        "id": 195069339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195069266\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195069266\">said</a>:</p>\n<blockquote>\n<p>can you dynamically query a dyn Value for its alignment?</p>\n</blockquote>\n<p>yes, but the LLVM <code>alloca</code> can't take dynamic alignment</p>",
        "id": 195069367,
        "sender_full_name": "oli",
        "timestamp": 1587652392
    },
    {
        "content": "<p>so its not like we <em>can't</em> fall back on using that, right?</p>",
        "id": 195069371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195069277\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195069277\">said</a>:</p>\n<blockquote>\n<p>I'm surprised we landed the <code>Box&lt;dyn FnOnce()&gt;</code> change w/o a separate feature gate</p>\n</blockquote>\n<p>If you captured a highly aligned variable, wouldn’t the bug in question make it potentially misaligned?</p>",
        "id": 195069376,
        "sender_full_name": "nagisa",
        "timestamp": 1587652396
    },
    {
        "content": "<p>right, we cannot use a fast <code>alloca</code> path</p>",
        "id": 195069401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652407
    },
    {
        "content": "<p>anyway left a comment</p>",
        "id": 195069410,
        "sender_full_name": "eddyb",
        "timestamp": 1587652413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> there are 0 <code>memcpy</code>s of the <code>dyn FnOnce()</code> left now (when using <code>Box&lt;dyn FnOnce()&gt;</code> from stable code)</p>",
        "id": 195069436,
        "sender_full_name": "eddyb",
        "timestamp": 1587652425
    },
    {
        "content": "<p>okay, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> left a comment that basically got to what I was thinking of but couldn't express directly</p>",
        "id": 195069464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652436
    },
    {
        "content": "<p>oh, but we can <code>alloca</code> a <code>size + align</code> allocation and manually align</p>",
        "id": 195069467,
        "sender_full_name": "oli",
        "timestamp": 1587652438
    },
    {
        "content": "<p>that's literally what I wrote in my comment, yes :P</p>",
        "id": 195069522,
        "sender_full_name": "eddyb",
        "timestamp": 1587652447
    },
    {
        "content": "<p>well, literally off by one</p>",
        "id": 195069546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652457
    },
    {
        "content": "<p>XD</p>",
        "id": 195069550,
        "sender_full_name": "oli",
        "timestamp": 1587652457
    },
    {
        "content": "<p><span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 195069586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652470
    },
    {
        "content": "<p>anyway that's great, glad to get some attention on this</p>",
        "id": 195069630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652488
    },
    {
        "content": "<p>(I do think it would make sense to divide up the feature gate here, so that we separate the more experimental stuff from the more established stuff)</p>",
        "id": 195069730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652525
    },
    {
        "content": "<p>but I also think we can move along</p>",
        "id": 195069748,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652535
    },
    {
        "content": "<p>I could make the assert fail in stable</p>",
        "id": 195069794,
        "sender_full_name": "nagisa",
        "timestamp": 1587652549
    },
    {
        "content": "<p>nom 2/3: \"Debuginfo tests are not running\" <a href=\"https://github.com/rust-lang/rust/issues/47163\" title=\"https://github.com/rust-lang/rust/issues/47163\">#47163</a></p>\n<p>- According to @jonas-schievink, we have not been able to run these tests for over 2 years. There are some PRs by @tromey. It's not clear if <a href=\"https://github.com/rust-lang/rust/pull/71428\" title=\"https://github.com/rust-lang/rust/pull/71428\">#71428</a> fixes this problem entirely or partially.</p>",
        "id": 195069805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652552
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d6f0aa4af7af2fa82670dcf0958b5199\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d6f0aa4af7af2fa82670dcf0958b5199\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d6f0aa4af7af2fa82670dcf0958b5199</a></p>",
        "id": 195069816,
        "sender_full_name": "nagisa",
        "timestamp": 1587652557
    },
    {
        "content": "<p>oh noes not the debuginfo tests</p>",
        "id": 195069893,
        "sender_full_name": "eddyb",
        "timestamp": 1587652577
    },
    {
        "content": "<p>ah <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> what did you do</p>",
        "id": 195069906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652584
    },
    {
        "content": "<p>/me looks</p>",
        "id": 195069924,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> but it's fixed on nightly</p>",
        "id": 195069946,
        "sender_full_name": "eddyb",
        "timestamp": 1587652605
    },
    {
        "content": "<p>Ah good then, never mind me then</p>",
        "id": 195069990,
        "sender_full_name": "nagisa",
        "timestamp": 1587652625
    },
    {
        "content": "<p>oh right /me looks at first line of <a href=\"https://github.com/rust-lang/rust/issues/71416\" title=\"https://github.com/rust-lang/rust/issues/71416\">#71416</a> again, sees reference to PR <a href=\"https://github.com/rust-lang/rust/issues/71170\" title=\"https://github.com/rust-lang/rust/issues/71170\">#71170</a></p>",
        "id": 195070049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652648
    },
    {
        "content": "<p>so, back to debuginfo tests</p>",
        "id": 195070105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> the problems remaining are that the sound thing is not under its own stricter feature-gate (so that core/alloc/std can be kept away from the general feature) and that the general feature is still unsound</p>",
        "id": 195070201,
        "sender_full_name": "eddyb",
        "timestamp": 1587652690
    },
    {
        "content": "<p>so I run both gdb and lldb debuginfo tests locally</p>",
        "id": 195070339,
        "sender_full_name": "eddyb",
        "timestamp": 1587652747
    },
    {
        "content": "<p>my build command removes one of the tests which crashes lldb</p>",
        "id": 195070384,
        "sender_full_name": "eddyb",
        "timestamp": 1587652760
    },
    {
        "content": "<p>I never managed to run gdb/lldb tests locally</p>",
        "id": 195070389,
        "sender_full_name": "nagisa",
        "timestamp": 1587652763
    },
    {
        "content": "<p>the gdb tests were broken for a long time I believe, until my system gdb was new enough, or something else happened</p>",
        "id": 195070534,
        "sender_full_name": "eddyb",
        "timestamp": 1587652803
    },
    {
        "content": "<p>I use locally-built lldb (i.e. via <code>config.toml</code>) which means I have to run a <code>patchelf</code> command to fix a relative RPATH in a python .so, which is broken for some reason, every single time lldb gets rebuilt</p>",
        "id": 195070610,
        "sender_full_name": "eddyb",
        "timestamp": 1587652834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> what does this imply for trying to run these debuginfo tests on CI?</p>",
        "id": 195070705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652877
    },
    {
        "content": "<p>I made sure all of this worked locally for MIR debuginfo work, since I didn't trust myself to not break debuginfo :P</p>",
        "id": 195070753,
        "sender_full_name": "eddyb",
        "timestamp": 1587652898
    },
    {
        "content": "<p>(which is what I assume is the real point of issue <a href=\"https://github.com/rust-lang/rust/issues/47163\" title=\"https://github.com/rust-lang/rust/issues/47163\">#47163</a>)</p>",
        "id": 195070762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587652905
    },
    {
        "content": "<p>if we don't build <code>lldb</code> on CI already, we would need to. we should see what slowdown that imposes</p>",
        "id": 195070838,
        "sender_full_name": "eddyb",
        "timestamp": 1587652923
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span></p>",
        "id": 195070864,
        "sender_full_name": "eddyb",
        "timestamp": 1587652934
    },
    {
        "content": "<p>The debuginfo tests work and run on CI, this is how most of us get those tests actually run if we end up changing something and don’t test it locally.</p>",
        "id": 195070901,
        "sender_full_name": "nagisa",
        "timestamp": 1587652945
    },
    {
        "content": "<p>for GDB, we need to make sure we can get a compatible version</p>",
        "id": 195070908,
        "sender_full_name": "eddyb",
        "timestamp": 1587652949
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> wait so what is the issue about?</p>",
        "id": 195070920,
        "sender_full_name": "eddyb",
        "timestamp": 1587652958
    },
    {
        "content": "<p>anymore, I mean</p>",
        "id": 195070932,
        "sender_full_name": "eddyb",
        "timestamp": 1587652964
    },
    {
        "content": "<p>as opposed to when it was originally opened</p>",
        "id": 195070956,
        "sender_full_name": "eddyb",
        "timestamp": 1587652973
    },
    {
        "content": "<p>about being able to run them locally, no?</p>",
        "id": 195070967,
        "sender_full_name": "nagisa",
        "timestamp": 1587652976
    },
    {
        "content": "<p>ah, tromey is saying that we have ignored/commented out tests</p>",
        "id": 195071033,
        "sender_full_name": "nagisa",
        "timestamp": 1587653000
    },
    {
        "content": "<p>Hmm I thought it was about the tests that had been disabled</p>",
        "id": 195071041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653002
    },
    {
        "content": "<p>but if they don’t work on CI, they can’t work locally either, no?</p>",
        "id": 195071087,
        "sender_full_name": "nagisa",
        "timestamp": 1587653016
    },
    {
        "content": "<p>maybe there are two distinct issues that we need to follow up and perhaps should file distinct tickets for</p>",
        "id": 195071119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653030
    },
    {
        "content": "<p>I personally feel like this is mostly an issue of someone figuring out what needs to be installed for the tests to work -- I think a more interesting question here might be \"what should we support?\"</p>",
        "id": 195071121,
        "sender_full_name": "simulacrum",
        "timestamp": 1587653030
    },
    {
        "content": "<p>some of the builders are running ancient CentOS or something</p>",
        "id": 195071138,
        "sender_full_name": "eddyb",
        "timestamp": 1587653037
    },
    {
        "content": "<p>only the dist builders run ancient CentOS, test builders should be on recent-ish ubuntu lts I think (and we can bump that without major issues)</p>",
        "id": 195071231,
        "sender_full_name": "simulacrum",
        "timestamp": 1587653064
    },
    {
        "content": "<p>since tromey posed this question, lets maybe quickly look at it here: What version(s) of gdb do we need to support? And how should we go about doing so?</p>",
        "id": 195071252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653075
    },
    {
        "content": "<p>I think the problem was that the output changes</p>",
        "id": 195071286,
        "sender_full_name": "eddyb",
        "timestamp": 1587653090
    },
    {
        "content": "<p>Realistically we can only \"support\" versions that we have available on CI</p>",
        "id": 195071287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> okay, but we could hypothetically deal with that, right?</p>",
        "id": 195071317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653106
    },
    {
        "content": "<p>One limiting factor for the range of versions we support is the dwarf version (4) we emit</p>",
        "id": 195071329,
        "sender_full_name": "nagisa",
        "timestamp": 1587653109
    },
    {
        "content": "<p>I mean, we already have to deal with lldb vs gdb output, right?</p>",
        "id": 195071359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653116
    },
    {
        "content": "<p>yeah but when that was brought up before, nobody seemed to want to have even more outputs</p>",
        "id": 195071392,
        "sender_full_name": "eddyb",
        "timestamp": 1587653131
    },
    {
        "content": "<p>fair</p>",
        "id": 195071405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653137
    },
    {
        "content": "<p>maybe if we made them like UI tests and blessable</p>",
        "id": 195071423,
        "sender_full_name": "eddyb",
        "timestamp": 1587653143
    },
    {
        "content": "<p>I think it's mostly a matter of being pretty annoying to update locally even if they're blessable</p>",
        "id": 195071448,
        "sender_full_name": "simulacrum",
        "timestamp": 1587653154
    },
    {
        "content": "<p>(since you need to go get lots of gdb versions)</p>",
        "id": 195071499,
        "sender_full_name": "simulacrum",
        "timestamp": 1587653162
    },
    {
        "content": "<p>and e.g. on macos gdb installation is a <em>pain</em> since you need to sign it</p>",
        "id": 195071558,
        "sender_full_name": "simulacrum",
        "timestamp": 1587653180
    },
    {
        "content": "<p>yeah I used to build it locally and it was indeed a pain</p>",
        "id": 195071593,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653196
    },
    {
        "content": "<p>they rarely ever change, though. hmpf</p>",
        "id": 195071607,
        "sender_full_name": "eddyb",
        "timestamp": 1587653204
    },
    {
        "content": "<p>yeah I don't know</p>",
        "id": 195071616,
        "sender_full_name": "eddyb",
        "timestamp": 1587653208
    },
    {
        "content": "<p>so realistically then</p>",
        "id": 195071631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653214
    },
    {
        "content": "<p>I'm not sure what is in the wild either</p>",
        "id": 195071642,
        "sender_full_name": "simulacrum",
        "timestamp": 1587653218
    },
    {
        "content": "<p>what should we do?</p>",
        "id": 195071649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653220
    },
    {
        "content": "<p>anyway, I don't get failures with GDB 9.1 locally but I don't know which tests run via GDB</p>",
        "id": 195071652,
        "sender_full_name": "eddyb",
        "timestamp": 1587653221
    },
    {
        "content": "<p>e.g. maybe we can just say \"We only test whatever is in latest ubuntu lts\"</p>",
        "id": 195071698,
        "sender_full_name": "simulacrum",
        "timestamp": 1587653236
    },
    {
        "content": "<p>i.e. I might just be succeeding because of ignored tests and not realizing</p>",
        "id": 195071717,
        "sender_full_name": "eddyb",
        "timestamp": 1587653247
    },
    {
        "content": "<p>would it be possible</p>",
        "id": 195071747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653257
    },
    {
        "content": "<p>to test other versions of gdb</p>",
        "id": 195071752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653261
    },
    {
        "content": "<p>one way to find out would probably be to make <code>-Cdebuginfo</code> do nothing in rustc :P</p>",
        "id": 195071767,
        "sender_full_name": "eddyb",
        "timestamp": 1587653264
    },
    {
        "content": "<p>without inspecting the output?</p>",
        "id": 195071770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653267
    },
    {
        "content": "<p>maybe that's nuts</p>",
        "id": 195071779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653273
    },
    {
        "content": "<p>no, it's not, you'd just e.g. build field access expressions</p>",
        "id": 195071839,
        "sender_full_name": "eddyb",
        "timestamp": 1587653286
    },
    {
        "content": "<p>I guess I'm just thinking of something like making sure that the debugger doesn't crash before the program gets to the expected point(s)</p>",
        "id": 195071868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653301
    },
    {
        "content": "<p>heh have we ever crashed debuggers :P?</p>",
        "id": 195071907,
        "sender_full_name": "eddyb",
        "timestamp": 1587653316
    },
    {
        "content": "<p>Maybe the concept of having debugger tests (as opposed to debug info tests) is flawed in the first placE?</p>",
        "id": 195071910,
        "sender_full_name": "nagisa",
        "timestamp": 1587653317
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> can you say more of what you are thinking?</p>",
        "id": 195071929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653324
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> so the problem is how e.g. tuples are pretty-printed by the debugger</p>",
        "id": 195071959,
        "sender_full_name": "eddyb",
        "timestamp": 1587653337
    },
    {
        "content": "<p>in terms of how it would help to build field access expressions? Woludjthat normalize the output?</p>",
        "id": 195071964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653342
    },
    {
        "content": "<p>you can just print each field instead of the whole tuple</p>",
        "id": 195071972,
        "sender_full_name": "eddyb",
        "timestamp": 1587653344
    },
    {
        "content": "<p>(in the debugger)</p>",
        "id": 195071990,
        "sender_full_name": "eddyb",
        "timestamp": 1587653353
    },
    {
        "content": "<p>yes okay, you are indeed suggesting normalization of the output</p>",
        "id": 195072001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653357
    },
    {
        "content": "<p>I'd be cool with that, personally</p>",
        "id": 195072022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653367
    },
    {
        "content": "<p>and then the testing of the pretty-printing of more complicated types would be restricted to just one version of GDB ?</p>",
        "id": 195072072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653386
    },
    {
        "content": "<p>this sounds like a MCP, to be honest</p>",
        "id": 195072091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653398
    },
    {
        "content": "<p>what @nagisa is proposing makes a lot more sense, OTOH</p>",
        "id": 195072258,
        "sender_full_name": "eddyb",
        "timestamp": 1587653450
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195071910\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195071910\">said</a>:</p>\n<blockquote>\n<p>Maybe the concept of having debugger tests (as opposed to debug info tests) is flawed in the first placE?</p>\n</blockquote>\n<p>So you think the answer may instead me to use some tool (perhaps homegrown) to inspect the DWARF we generate?</p>",
        "id": 195072267,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653451
    },
    {
        "content": "<p>LLVM has a tool, for example</p>",
        "id": 195072300,
        "sender_full_name": "eddyb",
        "timestamp": 1587653463
    },
    {
        "content": "<p>I'm okay with that idea too. I think it would also be a MCP, but a worthwhile one</p>",
        "id": 195072345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653482
    },
    {
        "content": "<p>having looked at the DWARF standard in the past few months, I'm much more in favor of that approach</p>",
        "id": 195072367,
        "sender_full_name": "eddyb",
        "timestamp": 1587653492
    },
    {
        "content": "<p>Okay, this was productive, but lets move on to the last nominated issue</p>",
        "id": 195072371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653493
    },
    {
        "content": "<p>we'd want to normalize addresses somehow but that's about it</p>",
        "id": 195072394,
        "sender_full_name": "eddyb",
        "timestamp": 1587653499
    },
    {
        "content": "<p>nom 3/3 \"Rename mir::Rvalue to Op.\" <a href=\"https://github.com/rust-lang/rust/pull/70928\" title=\"https://github.com/rust-lang/rust/pull/70928\">#70928</a></p>\n<p>- We discussed this one last week. It would be good to mention that the discussion keeps going and Zulip may be a good place for it.</p>",
        "id": 195072422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653510
    },
    {
        "content": "<p>I haven't seen most of the recent discussion</p>",
        "id": 195072506,
        "sender_full_name": "eddyb",
        "timestamp": 1587653524
    },
    {
        "content": "<p>So yeah, I kind of want to close this PR, but the discussion <em>is</em> moving forward</p>",
        "id": 195072533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653536
    },
    {
        "content": "<p>I just don't think github is a great place for this kind of discussion ...</p>",
        "id": 195072575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653551
    },
    {
        "content": "<p>(I'm happy to be overruled)</p>",
        "id": 195072591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653557
    },
    {
        "content": "<p>GitHub Discussions, OTOH</p>",
        "id": 195072602,
        "sender_full_name": "eddyb",
        "timestamp": 1587653559
    },
    {
        "content": "<p>My personal suggestion was to open a Zulip topic right now, post a link to the Zulip discussion, and then close the PR</p>",
        "id": 195072649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653580
    },
    {
        "content": "<p>but if people would prefer e.g. internals.rlo</p>",
        "id": 195072664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653586
    },
    {
        "content": "<p>I'm open to that</p>",
        "id": 195072681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653591
    },
    {
        "content": "<p>anyway closing the PR is fine especially since we'd want to do the rename from scratch anyway when we pick an alternative</p>",
        "id": 195072730,
        "sender_full_name": "eddyb",
        "timestamp": 1587653614
    },
    {
        "content": "<p>Right; the main thing is, as you (<span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> ) pointed out long ago, is that we would need to decide <em>where</em> to hold the bikeshed</p>",
        "id": 195072829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653644
    },
    {
        "content": "<p>yet another option would be to post this as an MCP</p>",
        "id": 195072861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653658
    },
    {
        "content": "<p>but I suspect that is overkill?</p>",
        "id": 195072875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653665
    },
    {
        "content": "<p>Meta-bikeshed discussion</p>",
        "id": 195072881,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1587653666
    },
    {
        "content": "<p>I'll just open a Zulip</p>",
        "id": 195072900,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653677
    },
    {
        "content": "<p>maybe ping everyone who had an opinion on-thread?</p>",
        "id": 195072956,
        "sender_full_name": "eddyb",
        "timestamp": 1587653701
    },
    {
        "content": "<p>fresh thread: <a href=\"#narrow/stream/131828-t-compiler/topic/To.20what.20to.20rename.20mir.3A.3ARvalue.20.2370928/near/195072985\" title=\"#narrow/stream/131828-t-compiler/topic/To.20what.20to.20rename.20mir.3A.3ARvalue.20.2370928/near/195072985\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/To.20what.20to.20rename.20mir.3A.3ARvalue.20.2370928/near/195072985</a></p>",
        "id": 195073027,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653723
    },
    {
        "content": "<p>(I'm mostly saying that because w/o a ping I'll likely never see that thread again :P)</p>",
        "id": 195073046,
        "sender_full_name": "eddyb",
        "timestamp": 1587653730
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195072956\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195072956\">said</a>:</p>\n<blockquote>\n<p>maybe ping everyone who had an opinion on-thread?</p>\n</blockquote>\n<p>will do after I close the PR</p>",
        "id": 195073073,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653744
    },
    {
        "content": "<p>okay so that's all the nom's</p>",
        "id": 195073105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653760
    },
    {
        "content": "<p>we had two WG checkins scheduled</p>",
        "id": 195073171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653773
    },
    {
        "content": "<p>WG-parallel-rustc says there are no updates</p>",
        "id": 195073191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653779
    },
    {
        "content": "<p>and WG-polonius shared an update <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/194978584\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/194978584\">up above</a></p>",
        "id": 195073224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653796
    },
    {
        "content": "<p>So that's all, folks! Thank you so much to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! you are awesome. Stay healthy, stay safe!</p>",
        "id": 195073516,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587653918
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195071910\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195071910\">said</a>:</p>\n<blockquote>\n<p>Maybe the concept of having debugger tests (as opposed to debug info tests) is flawed in the first placE?</p>\n</blockquote>\n<p>I disagree. I just had an instance today where the debuginfo generated by cg_clif looked plausible, but it violated the DWARF spec in such a way that gdb ignored it. (missing some mandatory attributes) Using a debugger test detects this, while using a debug info test, it is hard for reviewers to know that there is a problem. Debug info tests can be used to complement debugger tests though.</p>\n<p><a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/pull/978\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/pull/978\">https://github.com/bjorn3/rustc_codegen_cranelift/pull/978</a></p>",
        "id": 195113837,
        "sender_full_name": "bjorn3",
        "timestamp": 1587672951
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195065950\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-04-23.20.2354818/near/195065950\">said</a>:</p>\n<blockquote>\n<p>is <span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> here? I'm curious why we don't just go ahead and revert on master too?</p>\n</blockquote>\n<p>hm, good question. I thought we'd get a fix on master quickly.</p>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> looks like you are taking care of that?</p>",
        "id": 195184933,
        "sender_full_name": "RalfJ",
        "timestamp": 1587733709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> yeah that's my plan. I didn't follow through yesterday (childcare stuff got in way), but hope to do so today.</p>",
        "id": 195187791,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587735113
    },
    {
        "content": "<p>great, thanks!</p>",
        "id": 195190785,
        "sender_full_name": "RalfJ",
        "timestamp": 1587736507
    }
]