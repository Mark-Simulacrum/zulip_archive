[
    {
        "content": "<p>Hi! As part of implementing RFC-2229 (capture disjoint fields in closures) , we would like to modify <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_mir/src/interpret/validity.rs#L107\"><code>PathElem::CapturedVar</code></a> to be <code>CapturedPlace(HirPlace)</code>, where <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/hir/place/struct.Place.html\"><code>HirPlace</code></a> is a  somewhat lossy hir equivalent of MIR Place. </p>\n<p>We use HirPlace to now represent closure captures and we are in process of removing closure_captures that is currently used to generate PathElem::CapturedVar in favor of <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TypeckResults.html#structfield.closure_min_captures\"><code>closure_min_captures</code></a> which uses <code>HirPlace</code></p>\n<p>From what I can see within rustc it is only used for writing out paths, but I wanted to check in to see if it's used somewhere I'm not aware of and if the decision to use HirPlace cause problems down the line? </p>\n<p>cc <span class=\"user-mention\" data-user-id=\"300388\">@Logan Mosier</span>  <span class=\"user-mention\" data-user-id=\"303529\">@Jennifer Wills</span></p>",
        "id": 219305020,
        "sender_full_name": "Aman Arora",
        "timestamp": 1607499695
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"146212\" href=\"/#narrow/stream/146212-t-compiler.2Fconst-eval/topic/Update.20PathElem.3A.3ACapturedVar\">#t-compiler/const-eval &gt; Update PathElem::CapturedVar</a> by <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span></p>",
        "id": 219308238,
        "sender_full_name": "Notification Bot",
        "timestamp": 1607502544
    }
]