[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, thanks for volunteering to reproduce <a href=\"https://github.com/rust-lang/rust/issues/74551\">#74551</a>. I don't have the hardware or the time set up a SPARC/PPC QEMU machine. I'm curious to see whether the problem reproduces on master, since I believe there was an LLVM version bump in 1.45. If so, I think we should seriously consider disabling the optimization in <a href=\"https://github.com/rust-lang/rust/issues/68528\">#68528</a> while we figure this out. Unfortunately this will <a href=\"https://perf.rust-lang.org/compare.html?start=d55f3e9f1da631c636b54a7c22c1caccbe4bf0db&amp;end=0077a7aa11ebc2462851676f9f464d5221b17d6a\">regress compile times</a> somewhat. </p>\n<p>I don't have a working theory as to why my PR would cause a miscompilation on these architectures. I suspect the fact that they are both big-endian is a red herring, but I could be wrong. For reference, <a href=\"https://github.com/rust-lang/rust/blob/db870ea71b6dcc7a91b999420b88f41d3cdd13e1/src/librustc_mir/dataflow/drop_flag_effects.rs#L238-L270\">here is the code</a> that calls a function for each move path that ends in a <code>Downcast</code> projection to anything besides a given variant. It's used <a href=\"https://github.com/rust-lang/rust/blob/db870ea71b6dcc7a91b999420b88f41d3cdd13e1/src/librustc_mir/dataflow/impls/mod.rs#L357-L375\">here</a> to mark all move paths for known-inactive variants as <em>not</em> \"maybe uninitialized\". The dataflow engine invokes that method <a href=\"https://github.com/rust-lang/rust/blob/db870ea71b6dcc7a91b999420b88f41d3cdd13e1/src/librustc_mir/dataflow/framework/direction.rs#L491-L528\">here</a> on <code>SwitchInt</code> terminators whose discriminant is an enum discriminant.</p>",
        "id": 206061411,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1596652596
    },
    {
        "content": "<p>Anyways, I'm happy to help if you have any questions. I wish I had a better idea of what was going wrong here.</p>",
        "id": 206061689,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1596652746
    },
    {
        "content": "<p>Perhaps we could ask the PowerPC user to try to reproduce on master or at least with the latest stable?</p>",
        "id": 206062895,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1596653348
    },
    {
        "content": "<p>Seems like it would be easier for them than for the OP</p>",
        "id": 206062925,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1596653369
    },
    {
        "content": "<p>yes focusing on the PPC64 variant would probably be profitable</p>",
        "id": 206065670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596654783
    },
    {
        "content": "<p>I have at least managed to dial into gcc compile farm machines, both a SPARC Solaris one and a PPC64 one</p>",
        "id": 206065718,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596654806
    },
    {
        "content": "<p>haven't yet reproduced problem though; was trying to avoid firing off a full firefox build ...</p>",
        "id": 206065742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1596654829
    }
]