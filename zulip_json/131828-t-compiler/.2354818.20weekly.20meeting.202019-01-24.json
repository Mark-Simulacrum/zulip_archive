[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; our meeting will start in about 80 minutes. I'm just going to take pre-meeting triage notes here in the meantime.</p>",
        "id": 156772423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337118
    },
    {
        "content": "<p>first up: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">P-high issues</a></p>",
        "id": 156772596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337312
    },
    {
        "content": "<p>there are 9 on the list but a bunch are tagged as A-NLL.</p>",
        "id": 156772649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337331
    },
    {
        "content": "<p>All the ones tagged with A-NLL have assignees. I haven't yet reviewed the notes from last night's NLL triage meeting but I'm going to assume for now that all the P-high issues tagged with A-NLL are under control from our point of view.</p>",
        "id": 156772697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337387
    },
    {
        "content": "<p>So, first up is: \"Compiler crash\" <a href=\"https://github.com/rust-lang/rust/issues/57843\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57843\">#57843</a> (filed two days ago)</p>",
        "id": 156772711,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337409
    },
    {
        "content": "<p>its a (stable-to-beta) regression. Its already tagged as P-high.</p>",
        "id": 156772804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337493
    },
    {
        "content": "<p>I'll assign to self for initial investigation.</p>",
        "id": 156772854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337556
    },
    {
        "content": "<p>(The good news is that someone already bisected it and it was injected by one of <a href=\"https://github.com/rust-lang/rust/issues/55517\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55517\">#55517</a> <a href=\"https://github.com/rust-lang/rust/issues/56507\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56507\">#56507</a> <a href=\"https://github.com/rust-lang/rust/issues/57282\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57282\">#57282</a>. Of those, I think <a href=\"https://github.com/rust-lang/rust/issues/55517\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55517\">#55517</a> is most suspicious.)</p>",
        "id": 156772951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337631
    },
    {
        "content": "<p>next: \"ICE on nightly when dereferencing boxed Iterator trait object\" <a href=\"https://github.com/rust-lang/rust/issues/57673\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57673\">#57673</a></p>",
        "id": 156772975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337666
    },
    {
        "content": "<p>I worked on this and posted a \"fix\", PR <a href=\"https://github.com/rust-lang/rust/issues/57835\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57835\">#57835</a>. We'll discuss it more when we talk about beta-backports.</p>",
        "id": 156773050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337727
    },
    {
        "content": "<p>next: \"Regression in trait bounds that are redundant with associated type's HRTB\" <a href=\"https://github.com/rust-lang/rust/issues/57639\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57639\">#57639</a></p>",
        "id": 156773071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337748
    },
    {
        "content": "<p>niko has some notes and discussion on the ticket. I mostly am curious about <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> most recent comment, \"If it didn't appear in crater, and there isn't an easy fix, it seems fine to postpone until the trait solver is better prepared to support this case\" -- how long are we talking about being willing to wait?</p>",
        "id": 156773235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337897
    },
    {
        "content": "<p>I would assume the hope is that we would find a fix before this bug leaks out into beta? I'll post that Q (aimed at <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ) on the ticket itself.</p>",
        "id": 156773304,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548337930
    },
    {
        "content": "<p>oh the bug has already leaked out onto beta</p>",
        "id": 156773431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338060
    },
    {
        "content": "<p>next: \"[NLL] Bad higher ranked subtype error\" <a href=\"https://github.com/rust-lang/rust/issues/57374\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57374\">#57374</a></p>",
        "id": 156773584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338183
    },
    {
        "content": "<p>oh sorry I forgot I'm skipping A-NLL stuff. Never mind that one. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 156773601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338206
    },
    {
        "content": "<p>next: \"Confusing error message associated with universe transition: 'one type is more general than the other'\" <a href=\"https://github.com/rust-lang/rust/issues/57362\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57362\">#57362</a></p>",
        "id": 156773622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338227
    },
    {
        "content": "<p>There hasn't been any activity since niko left notes 9 days ago. <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span>  : you assigned yourself 8 days ago, do you have any updates here? Feel free to leave comment on ticket if so.</p>",
        "id": 156773712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338312
    },
    {
        "content": "<p>(we also need to ask ourselves if his is indeed P-high. It probably is, but I want to make sure we at least consider the question.)</p>",
        "id": 156773754,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338378
    },
    {
        "content": "<p>next: \"PhantomData fields in repr(C) structs change ABI on aarch64\" <a href=\"https://github.com/rust-lang/rust/issues/56877\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56877\">#56877</a></p>",
        "id": 156773812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338407
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  yeah I'm working on it: fixing the immediate problem isn't enough, the error messages need to be a bit clearer or it wouldn't improve these errors enough, so niko gave me the couple pointers I needed to be unblocked yesterday. The activity is in the \"<a href=\"https://github.com/rust-lang/rust/issues/57362\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57362\">#57362</a> confusing errors after universe transition\" topic</p>",
        "id": 156773882,
        "sender_full_name": "lqd",
        "timestamp": 1548338495
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> ah I should have thought to look for a stream with the issue number.  thanks!</p>",
        "id": 156773966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338527
    },
    {
        "content": "<p>(I'll update the issue later today to mention the status, but probably couldn't do so before the team meeting)</p>",
        "id": 156774000,
        "sender_full_name": "lqd",
        "timestamp": 1548338572
    },
    {
        "content": "<p>for <a href=\"https://github.com/rust-lang/rust/issues/56877\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56877\">#56877</a>, there's been a fair amount of recent discussion.</p>",
        "id": 156774136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338681
    },
    {
        "content": "<p>it looks like <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has identified two different strategies for a change to the logic that decides whether (for FFI/ABI purposes) whether a type definition is a homogeneous aggregate.</p>",
        "id": 156774362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338872
    },
    {
        "content": "<p>yes. <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> had a particularly way that they wanted me to implement the change, which I will hopefully do today</p>",
        "id": 156774433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548338938
    },
    {
        "content": "<p>i left a couple comments.</p>",
        "id": 156774463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338971
    },
    {
        "content": "<p>the rest are all NLL things. (Oh god I really need to pick back up <a href=\"https://github.com/rust-lang/rust/issues/56254\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56254\">#56254</a>)</p>",
        "id": 156774486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548338999
    },
    {
        "content": "<p>so okay that's all the P-high things that aren't tagged A-NLL.</p>",
        "id": 156774541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339018
    },
    {
        "content": "<p>next up: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\">beta-nominated PRs</a>. I'll jump in now and add T-compiler tags to the ones that are obviously for us.</p>",
        "id": 156774586,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339070
    },
    {
        "content": "<p>first up: \"Fix issue 57762\" <a href=\"https://github.com/rust-lang/rust/issues/57840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57840\">#57840</a>. This is a patch to librustc_codegen_llvm</p>",
        "id": 156774663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339134
    },
    {
        "content": "<p>its just forcing us to use a more recent version of LLVM.</p>",
        "id": 156774682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339162
    },
    {
        "content": "<p>I see ... no reason to not beta-accept this. The only drawback is that it might cause problems for some people trying to build their own <code>rustc</code> with an older (system) LLVM, right? (see e.g. <a href=\"https://github.com/rust-lang/rust/issues/57762\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57762\">#57762</a>)</p>",
        "id": 156774722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339212
    },
    {
        "content": "<p>Well I'll wait until the actual meeting to add the <code>beta-accepted</code> tag, to ensure attending members get a chance to voice an objection.</p>",
        "id": 156774811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339278
    },
    {
        "content": "<p>next: \"typeck: remove leaky nested probe during trait object method resolution\" <a href=\"https://github.com/rust-lang/rust/issues/57835\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57835\">#57835</a></p>",
        "id": 156774821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339294
    },
    {
        "content": "<p>this is my patch to fix <a href=\"https://github.com/rust-lang/rust/issues/57673\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57673\">#57673</a>. <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> has noted that this may not be quite right because it will cause a conditional <code>deref</code> to be forced to occur, which may \"pollute the other candidates\". I'm not 100% sure how to interpret \"pollute\" there; it could mean \"we will fail to consider candidates that we should.\" But it might <em>also</em> mean \"we may consider candidates that we shouldn't.\"</p>",
        "id": 156774969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339429
    },
    {
        "content": "<p>If \"pollute\" can mean \"we may consider candidates that we shouldn't\", then I would not be in favor of a backport.</p>",
        "id": 156775053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ^ can you clarify this detail?</p>",
        "id": 156775059,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339499
    },
    {
        "content": "<p>if \"pollute\" solely means \"we will fail to consider candidates that we should be considering\") then I am in favor of a backport, based on a rough impression that I don't know when <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> will get around to supplying a proper fix.</p>",
        "id": 156775116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339571
    },
    {
        "content": "<p>Also: if someone can supply a concrete example showing the case <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> is concerned about, then I might be able to come up with a better patch on my own...</p>",
        "id": 156775186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339612
    },
    {
        "content": "<p>next: \"Fix typo bug in DepGraph::try_mark_green().\" <a href=\"https://github.com/rust-lang/rust/issues/57698\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57698\">#57698</a></p>",
        "id": 156775209,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339635
    },
    {
        "content": "<p>omg</p>",
        "id": 156775225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339650
    },
    {
        "content": "<p>dep_dep_dep_dep_node</p>",
        "id": 156775228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339657
    },
    {
        "content": "<p>anyway, I see no reason not to backport this. I'll wait until the actual meeting to add tags though.</p>",
        "id": 156775251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339672
    },
    {
        "content": "<p>okay that's all the T-compiler PR's nominated for beta backport.</p>",
        "id": 156775274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339702
    },
    {
        "content": "<p>the PR <a href=\"https://github.com/rust-lang/rust/issues/57840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57840\">#57840</a> is also nominated for a stable backport.</p>",
        "id": 156775327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339725
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> <span class=\"user-mention silent\" data-user-id=\"116009\">@nikomatsakis</span> ^ can you clarify this detail?</p>\n</blockquote>\n<p>to be quite honest I haven't had any time to really look into that PR or think about it (I hadn't even seen Ariel's comment, for example)</p>",
        "id": 156775363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548339774
    },
    {
        "content": "<p>I should probably prioritize that</p>",
        "id": 156775370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548339783
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> referred to something called a \"conditional deref\"</p>",
        "id": 156775387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339794
    },
    {
        "content": "<p>I don't know when that would arise. Something with autoref?</p>",
        "id": 156775398,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339809
    },
    {
        "content": "<blockquote>\n<p>the PR <a href=\"https://github.com/rust-lang/rust/issues/57840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57840\">#57840</a> is also nominated for a stable backport.</p>\n</blockquote>\n<p>(i ... dont know what to think about a backport to stable for that. It doesn't seem worth a point release on its own. But if we're already doing a point release for other reasons ... ?)</p>",
        "id": 156775490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339888
    },
    {
        "content": "<p>okay. Next up is the list of stable-to-beta regressions.</p>",
        "id": 156775515,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339918
    },
    {
        "content": "<p>we've already talked about all of the T-compiler ones since they are marked as P-high</p>",
        "id": 156775536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339942
    },
    {
        "content": "<p>next is <a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">stable-to-nightly regressions</a></p>",
        "id": 156775549,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339957
    },
    {
        "content": "<p>only one is potentially T-compiler and not already tagged as P-high</p>",
        "id": 156775623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548339996
    },
    {
        "content": "<p>namely: \"Project fails to compile on latest stable and nightly (hang/stackoverflow)\" <a href=\"https://github.com/rust-lang/rust/issues/57735\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57735\">#57735</a></p>",
        "id": 156775636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340008
    },
    {
        "content": "<p>worth noting that on an updated nightly the reporter indicates that on the platform where they can reproduce, the compilation succeeds but takes a \"long time\"</p>",
        "id": 156775701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340069
    },
    {
        "content": "<p>reporter also indicates that \"nightly-x86_64-apple-darwin (rustc 1.33.0 nightly c2d381d 2019-01-10)\" does not suffer from the problem. (Or at least that's how I interpret <a href=\"https://github.com/rust-lang/rust/issues/57735#issuecomment-455599451\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57735#issuecomment-455599451\">their comment</a>)</p>",
        "id": 156775827,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340152
    },
    {
        "content": "<p>okay well I'll tag this as P-high and assign to self.</p>",
        "id": 156775944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340262
    },
    {
        "content": "<p>next: PR <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\">waiting for our team</a> (and other teams): \"Automatically open an issue when a tool breaks\" <a href=\"https://github.com/rust-lang/rust/issues/56951\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56951\">#56951</a></p>",
        "id": 156776279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340552
    },
    {
        "content": "<p>actually, skimming over the checkbox list, looks to me like everyone on T-compiler has already checked off their box</p>",
        "id": 156776400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340624
    },
    {
        "content": "<p>perhaps a faux pas, but posted comment pinging the people whose checkboxes are unchecked</p>",
        "id": 156776634,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340784
    },
    {
        "content": "<p>I left PR <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a> on the I-nominated list. I'll keep it here until we've resolved the schedule for the all-hands</p>",
        "id": 156776910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548340998
    },
    {
        "content": "<p>Okay so  I think I've finished the pretriage.</p>",
        "id": 156777874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548341809
    },
    {
        "content": "<p>with 3 minutes left until <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> should show up. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 156777891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548341826
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 156777903,
        "sender_full_name": "mw",
        "timestamp": 1548341842
    },
    {
        "content": "<p>Is it 2 minutes past 17 now?</p>",
        "id": 156778362,
        "sender_full_name": "nagisa",
        "timestamp": 1548342138
    },
    {
        "content": "<p>/me reads the backlog</p>",
        "id": 156778366,
        "sender_full_name": "nagisa",
        "timestamp": 1548342141
    },
    {
        "content": "<p>yeah sorry</p>",
        "id": 156778441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342218
    },
    {
        "content": "<p>/me got distracted closing Open Windows</p>",
        "id": 156778453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342226
    },
    {
        "content": "<p>I did pre-mtg triage and there isn't too too much to report.</p>",
        "id": 156778528,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342256
    },
    {
        "content": "<p>I would like to put some sort of triage comment into <a href=\"https://github.com/rust-lang/rust/issues/57362\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57362\">#57362</a></p>",
        "id": 156778591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342315
    },
    {
        "content": "<p>\"in progress\"</p>",
        "id": 156778610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548342330
    },
    {
        "content": "<p>I think we're getting close</p>",
        "id": 156778618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548342338
    },
    {
        "content": "<p>I can write an update</p>",
        "id": 156778621,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548342340
    },
    {
        "content": "<p>okay I'll leave that to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> or <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> to take care of</p>",
        "id": 156778707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342389
    },
    {
        "content": "<p>I don't think any of the other P-high issues (that aren't otherwise beta-nominated) warrant discussion now</p>",
        "id": 156778736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342414
    },
    {
        "content": "<p>so, moving onto <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\">beta-nominations</a></p>",
        "id": 156778768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342435
    },
    {
        "content": "<p>First up: \"Fix issue 57762\" <a href=\"https://github.com/rust-lang/rust/issues/57840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57840\">#57840</a> is nominated for backport to both beta and stable.</p>",
        "id": 156778809,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342464
    },
    {
        "content": "<p>It is just updating a version check to ensure that when you link to a system LLVM, you need to use version &gt;=8</p>",
        "id": 156778877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342487
    },
    {
        "content": "<p>so: <em>I</em> think this is fine for backport to beta</p>",
        "id": 156778906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342512
    },
    {
        "content": "<blockquote>\n<p>okay I'll leave that to <span class=\"user-mention silent\" data-user-id=\"116009\">@nikomatsakis</span> or <span class=\"user-mention silent\" data-user-id=\"116113\">@lqd</span> to take care of</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/57362#issuecomment-457230511\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57362#issuecomment-457230511\">added a comment</a></p>",
        "id": 156778909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548342513
    },
    {
        "content": "<p>so I'm going to tag <a href=\"https://github.com/rust-lang/rust/issues/57840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57840\">#57840</a> as beta-accepted. If someone objects before end of meeting, we can discuss.</p>",
        "id": 156778934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342534
    },
    {
        "content": "<p>what about the backport to stable, though?</p>",
        "id": 156778999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342587
    },
    {
        "content": "<p>I don't personally think this is worth a point release on its own</p>",
        "id": 156779011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342599
    },
    {
        "content": "<p>For context, this fixes rustc built against LLVM 7.0.1, which is a problem a few distros ran into recently. It's probably good to backport to beta as a courtesy to distributors, but a stable backport seems superfluous. They are perfectly capable of patching code themselves.</p>",
        "id": 156779051,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1548342603
    },
    {
        "content": "<p>so the main thing I'm wonderng</p>",
        "id": 156779141,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342667
    },
    {
        "content": "<p>if we were to happen to have a point release for <em>other</em> reasons</p>",
        "id": 156779155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342675
    },
    {
        "content": "<p>would we want this change in there in that case?</p>",
        "id": 156779162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342680
    },
    {
        "content": "<p>there's another stable-accepted PR for rustdoc with a similar \"not worth it on its own but could be included with others\" rationale</p>",
        "id": 156779173,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342693
    },
    {
        "content": "<blockquote>\n<p>would we want this change in there in that case?</p>\n</blockquote>\n<p>seems small enough</p>",
        "id": 156779196,
        "sender_full_name": "mw",
        "timestamp": 1548342708
    },
    {
        "content": "<p>I'm essentially wondering if it makes sense to still backport this to stable branch but somehow indicate \"we're not expected to get a point release based on this\"</p>",
        "id": 156779198,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342709
    },
    {
        "content": "<p>core/release teams still need to decide on the release, even if a PR is stable-accepted</p>",
        "id": 156779255,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342729
    },
    {
        "content": "<p>(Or is that a bad idea, in terms of some philosophy that the tip of the stable branch needs to match the stable release itself?)</p>",
        "id": 156779269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342740
    },
    {
        "content": "<p>at least, that was my takeaway from talking with pietro about the rustdoc PR</p>",
        "id": 156779272,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342745
    },
    {
        "content": "<p>Hmm. Okay. So maybe we should just be evaluating risk/effort on its own for <em>our team</em> on <em>this PR</em> on its own?</p>",
        "id": 156779310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342768
    },
    {
        "content": "<p>and not worry about the broader questions ?</p>",
        "id": 156779318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342776
    },
    {
        "content": "<p>basically, yeah</p>",
        "id": 156779347,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342792
    },
    {
        "content": "<p>(in which case, I would probably be in favor of marking as stable-accepted ?)</p>",
        "id": 156779354,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342796
    },
    {
        "content": "<blockquote>\n<p>(Or is that a bad idea, in terms of some philosophy that the tip of the stable branch needs to match the stable release itself?)</p>\n</blockquote>\n<p>I feel like this is what tags are for.</p>",
        "id": 156779357,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1548342798
    },
    {
        "content": "<p>effectively, marking something stable-accepted means \"this is worth including in a hypothetical point release, should one happen\"</p>",
        "id": 156779382,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342825
    },
    {
        "content": "<p>okay then, I guess my current inclination is to then mark this as stable-accepted but leave a comment saying that this PR on its own does not warrant a point  release</p>",
        "id": 156779396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342841
    },
    {
        "content": "<p>as opposed to beta-accepted's meaning of \"please move this to beta\"</p>",
        "id": 156779442,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342846
    },
    {
        "content": "<p>it's worth mentioning something in the release team's channel on discord, but otherwise yeah</p>",
        "id": 156779461,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342871
    },
    {
        "content": "<p>a meta question: if something is beta accepted, who is doing the backporting? in the past I often did the backport if I was the original author of the PR, but more recently there seem to be quite a few people who are happy to provide this service. Is this codified somewhere? I.e. do we have designated \"backporters\"?</p>",
        "id": 156779469,
        "sender_full_name": "mw",
        "timestamp": 1548342876
    },
    {
        "content": "<p>afaik release team batches up beta backport PRs?</p>",
        "id": 156779482,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1548342894
    },
    {
        "content": "<p>Yeah in my experience the release team often seems to take care of beta backports before <em>I</em> get around to doing it, at least.</p>",
        "id": 156779512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548342919
    },
    {
        "content": "<p>that's my experience too. the question is: do I have to keep up-to-date with backporting progress?</p>",
        "id": 156779600,
        "sender_full_name": "mw",
        "timestamp": 1548342969
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> it seems like it might be a good idea to at least keep tabs on it, but maybe that's more a job for me or whomever else is running the compiler meeting each week...?</p>",
        "id": 156779642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343001
    },
    {
        "content": "<p>I feel like it would make sense to have some kind of 'release-compiler sync'</p>",
        "id": 156779690,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343036
    },
    {
        "content": "<p>not necessarily a <em>meeting</em></p>",
        "id": 156779695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343040
    },
    {
        "content": "<p>it probably depends on how hard it is to keep track of this</p>",
        "id": 156779698,
        "sender_full_name": "mw",
        "timestamp": 1548343041
    },
    {
        "content": "<p>but some clearer way to communicate with one another when things need doing</p>",
        "id": 156779714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343054
    },
    {
        "content": "<p>which might be something we could check in on during these meetings, for example</p>",
        "id": 156779726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343066
    },
    {
        "content": "<blockquote>\n<p>do I have to keep up-to-date with backporting progress?</p>\n</blockquote>\n<p>No, from what I've seen.<br>\nIf something happens (e.g. the patch doesn't apply cleanly), then you are pinged.</p>",
        "id": 156779735,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1548343073
    },
    {
        "content": "<p>I mean I guess we sort of do, via the existing labels</p>",
        "id": 156779737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343075
    },
    {
        "content": "<p>anyway, just to keep things humming along here (though I don't mind continuing this parallel conversation regarding backport policy), the next beta nomination is \"typeck: remove leaky nested probe during trait object method resolution\" <a href=\"https://github.com/rust-lang/rust/issues/57835\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57835\">#57835</a></p>",
        "id": 156779782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343090
    },
    {
        "content": "<p>it seems like we're still debating the fix itself at this point, right?</p>",
        "id": 156779792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343105
    },
    {
        "content": "<p>well, <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> approved it for nightly</p>",
        "id": 156779807,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343118
    },
    {
        "content": "<p>so the main Q is whether we want to wait to see further work before doing any backport at all</p>",
        "id": 156779821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343138
    },
    {
        "content": "<p>or if it would still make sense to backport <em>this</em></p>",
        "id": 156779840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343146
    },
    {
        "content": "<p>and, if something else comes up, we can independently consider whether to backport <em>that</em> too</p>",
        "id": 156779851,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343158
    },
    {
        "content": "<p>oh, I see, ok</p>",
        "id": 156779858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343172
    },
    {
        "content": "<p>I guess so</p>",
        "id": 156779863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343180
    },
    {
        "content": "<p>we could sit on it for a week</p>",
        "id": 156779873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343193
    },
    {
        "content": "<p>(to see what happens when it hits nightly)</p>",
        "id": 156779933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343206
    },
    {
        "content": "<p>the backstory here, y'all, is that there's this ICE and ariel has a comment saying that the proposed fix is not ideal</p>",
        "id": 156779944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343209
    },
    {
        "content": "<p>but I do not completely understand the exact repercussions of the scenario that <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> outlined in their comment</p>",
        "id": 156779962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343234
    },
    {
        "content": "<p>and I am also a little worried about how much free time <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> has to enlighten me about it</p>",
        "id": 156779980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343257
    },
    {
        "content": "<p>having said that</p>",
        "id": 156779999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343274
    },
    {
        "content": "<p>lets wait a week!</p>",
        "id": 156780002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343277
    },
    {
        "content": "<p>:)</p>",
        "id": 156780004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343279
    },
    {
        "content": "<p>Note that the next train rollover is in march 1st. So a lot of time.</p>",
        "id": 156780116,
        "sender_full_name": "nagisa",
        "timestamp": 1548343380
    },
    {
        "content": "<p>okay, next: \"Fix typo bug in DepGraph::try_mark_green().\" <a href=\"https://github.com/rust-lang/rust/issues/57698\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57698\">#57698</a></p>",
        "id": 156780158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343419
    },
    {
        "content": "<p>we should back_backport this</p>",
        "id": 156780182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343435
    },
    {
        "content": "<p>oh wow, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>, what's your objection here?</p>",
        "id": 156780251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343465
    },
    {
        "content": "<p>hmm, mixed signals</p>",
        "id": 156780270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343476
    },
    {
        "content": "<p>I’m just making things easy for people to click.</p>",
        "id": 156780271,
        "sender_full_name": "nagisa",
        "timestamp": 1548343479
    },
    {
        "content": "<p>oh. hmm.</p>",
        "id": 156780278,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343486
    },
    {
        "content": "<p>nagisa adds both :) then removes one</p>",
        "id": 156780283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343488
    },
    {
        "content": "<p>okay I see.</p>",
        "id": 156780292,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343495
    },
    {
        "content": "<p>I'll maybe do that myself</p>",
        "id": 156780315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343505
    },
    {
        "content": "<p>so that I know what's going on</p>",
        "id": 156780323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343510
    },
    {
        "content": "<p>seems we could do with a Zulip triage bot</p>",
        "id": 156780337,
        "sender_full_name": "varkor",
        "timestamp": 1548343525
    },
    {
        "content": "<p>okay that's all the beta-nominations for T-compiler</p>",
        "id": 156780372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343555
    },
    {
        "content": "<p>that's all the standing items for the triage meeting</p>",
        "id": 156780450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343594
    },
    {
        "content": "<p>but maybe we could all move over to the <a href=\"#narrow/stream/131828-t-compiler/topic/all.20hands.20meeting.20planning\" title=\"#narrow/stream/131828-t-compiler/topic/all.20hands.20meeting.20planning\">all hands planning</a> topic ?</p>",
        "id": 156780478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343623
    },
    {
        "content": "<p>(or maybe I should first ask if anyone has any items they want to discuss here that wouldn't fit into the all hands planning topic.)</p>",
        "id": 156780519,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343667
    },
    {
        "content": "<p>I have one thing to discuss: <a href=\"https://github.com/rust-lang/cargo/pull/6564\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo/pull/6564\">https://github.com/rust-lang/cargo/pull/6564</a></p>",
        "id": 156780533,
        "sender_full_name": "mw",
        "timestamp": 1548343681
    },
    {
        "content": "<p>it's about making incr. comp. the default for --release builds</p>",
        "id": 156780590,
        "sender_full_name": "mw",
        "timestamp": 1548343700
    },
    {
        "content": "<p>since we have ThinLTO + incr. comp., we might want to do this</p>",
        "id": 156780608,
        "sender_full_name": "mw",
        "timestamp": 1548343720
    },
    {
        "content": "<p>i.e. generated code has very good runtime performance</p>",
        "id": 156780622,
        "sender_full_name": "mw",
        "timestamp": 1548343736
    },
    {
        "content": "<p>what do you think this means \"Gosh, I'm a little sad that not having had time for a try feature could now be a part of the geology of master :P.\" ?</p>",
        "id": 156780626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343738
    },
    {
        "content": "<p>are they concerned that it hasn't gotten enough testing?</p>",
        "id": 156780645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548343751
    },
    {
        "content": "<p>There is still <a href=\"https://github.com/rust-lang/rust/issues/47745\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47745\">this</a>. Is it in any way applicable to this change?</p>",
        "id": 156780666,
        "sender_full_name": "nagisa",
        "timestamp": 1548343774
    },
    {
        "content": "<p>(I believe codegen-units+thinlto is already a default, perhaps turning incremental on changes something here?)</p>",
        "id": 156780694,
        "sender_full_name": "nagisa",
        "timestamp": 1548343799
    },
    {
        "content": "<p>I'm basically in favor of this. My only concern is that there remain some cases (notably, servo's script crate) where incremental is quite a bit slower. But I guess that's essentially an orthogonal concern, as long as it's not a widespread thing (we should work on it though)</p>",
        "id": 156780722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343803
    },
    {
        "content": "<p>performance overall would be a bit worse again, compared to non-incrmental builds</p>",
        "id": 156780761,
        "sender_full_name": "mw",
        "timestamp": 1548343821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I feel like <code>--release</code> is a misleading name, since you'd probably want a full LTO, 1 CGU, non-incremental build for actual releases</p>",
        "id": 156780807,
        "sender_full_name": "Zoxc",
        "timestamp": 1548343867
    },
    {
        "content": "<p>my suggestion is to enable this temporarily so we get some numbers from lolbench</p>",
        "id": 156780808,
        "sender_full_name": "mw",
        "timestamp": 1548343868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> yes, I want a dev-opt profile</p>",
        "id": 156780827,
        "sender_full_name": "mw",
        "timestamp": 1548343894
    },
    {
        "content": "<p>but the cargo team seems to not want that :)</p>",
        "id": 156780842,
        "sender_full_name": "mw",
        "timestamp": 1548343908
    },
    {
        "content": "<p>This has been a perennial topic :/</p>",
        "id": 156780850,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343919
    },
    {
        "content": "<p>I'd also like a <code>fast</code> profile too. Generating debug info is slow =P</p>",
        "id": 156780882,
        "sender_full_name": "Zoxc",
        "timestamp": 1548343923
    },
    {
        "content": "<p>I still favor dev-opt</p>",
        "id": 156780891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343924
    },
    {
        "content": "<p>hmm</p>",
        "id": 156780914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343944
    },
    {
        "content": "<p>as far as I understand it: if we enable this now and revert in a few weeks, no actual release would be affected</p>",
        "id": 156780932,
        "sender_full_name": "mw",
        "timestamp": 1548343967
    },
    {
        "content": "<p>it feels like there is maybe a mildly bigger conversation than just yay/nay here?</p>",
        "id": 156780934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548343968
    },
    {
        "content": "<p>but we'd still get some numbers from lolbench about the runtime performance of incrementally compiled release builds</p>",
        "id": 156780971,
        "sender_full_name": "mw",
        "timestamp": 1548343995
    },
    {
        "content": "<blockquote>\n<p>what do you think this means \"Gosh, I'm a little sad that not having had time for a try feature could now be a part of the geology of master :P.\" ?</p>\n</blockquote>\n<p>(Oh oh, I see now: a \"try feature\" is talking about a weakness in lolbench)</p>",
        "id": 156780998,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344018
    },
    {
        "content": "<p>we can also make it a topic for discussion at the all hands</p>",
        "id": 156781002,
        "sender_full_name": "mw",
        "timestamp": 1548344021
    },
    {
        "content": "<p>and pester the cargo people for dev-opt there :P</p>",
        "id": 156781077,
        "sender_full_name": "mw",
        "timestamp": 1548344055
    },
    {
        "content": "<p>I kind of like the idea of turning it on with the understanding that we will turn it off very eagerly</p>",
        "id": 156781089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344065
    },
    {
        "content": "<p>But <code>--release</code> as we have it now effectively is <code>dev-opt</code>, so I'd be fine with having incremental ThinLTO on by default</p>",
        "id": 156781097,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344067
    },
    {
        "content": "<p>well, add a <code>--publish</code>.</p>",
        "id": 156781122,
        "sender_full_name": "nagisa",
        "timestamp": 1548344083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>, yes but people only recently have gotten around to doing their benchmarks with --release</p>",
        "id": 156781169,
        "sender_full_name": "mw",
        "timestamp": 1548344107
    },
    {
        "content": "<p>now <em>that</em> does really drive it home this is the release-release configuration</p>",
        "id": 156781171,
        "sender_full_name": "nagisa",
        "timestamp": 1548344107
    },
    {
        "content": "<p>I don't want to increase the confusion :)</p>",
        "id": 156781203,
        "sender_full_name": "mw",
        "timestamp": 1548344126
    },
    {
        "content": "<p>And I expect users who need better performance manually tweak cargo options (which is currently needed for CGUs, panic=abort and full LTOs anyway)</p>",
        "id": 156781210,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344130
    },
    {
        "content": "<p>I'd hope so, yeah</p>",
        "id": 156781273,
        "sender_full_name": "mw",
        "timestamp": 1548344163
    },
    {
        "content": "<p>we should write a \"compiling your Rust code\" book</p>",
        "id": 156781297,
        "sender_full_name": "mw",
        "timestamp": 1548344176
    },
    {
        "content": "<p>that goes into detail about the options available and their consequences</p>",
        "id": 156781314,
        "sender_full_name": "mw",
        "timestamp": 1548344193
    },
    {
        "content": "<p>I'd also expect incremental ThinLTO's runtime performance to improve over time, making it matter less</p>",
        "id": 156781316,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344198
    },
    {
        "content": "<p>can we compare \"make this change now\" vs \"decide at all-hands whether to make the change\" ?</p>",
        "id": 156781319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344204
    },
    {
        "content": "<p>I think we'd be better off making the change now so that we (potentially) have feedback data to discuss at all-hands</p>",
        "id": 156781357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344230
    },
    {
        "content": "<p>making this change now gives us a month and a week or so. Deciding on it during all hands gives us 3 weeks for experimentation and potential revert.</p>",
        "id": 156781375,
        "sender_full_name": "nagisa",
        "timestamp": 1548344246
    },
    {
        "content": "<p>we could enable now and collect data until the all hands</p>",
        "id": 156781376,
        "sender_full_name": "mw",
        "timestamp": 1548344246
    },
    {
        "content": "<p>maybe that's even better: Enable now. Uncondtionally revert shortly before the all-hands.</p>",
        "id": 156781410,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344272
    },
    {
        "content": "<p>i.e. lolbench profits from testing multiple nightlies</p>",
        "id": 156781418,
        "sender_full_name": "mw",
        "timestamp": 1548344279
    },
    {
        "content": "<p>then we'd get feedback about <em>both</em> directions</p>",
        "id": 156781422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344281
    },
    {
        "content": "<p>(since people don't complain about improvements)</p>",
        "id": 156781466,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> interesting</p>",
        "id": 156781489,
        "sender_full_name": "mw",
        "timestamp": 1548344307
    },
    {
        "content": "<p>a jedi trick</p>",
        "id": 156781498,
        "sender_full_name": "mw",
        "timestamp": 1548344312
    },
    {
        "content": "<p>I also wonder at what point we should enabled parallel computation in rustc. I also want to test that on nighties and turn it off later</p>",
        "id": 156781504,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344319
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> we should open an issue that lists the blockers for that</p>",
        "id": 156781571,
        "sender_full_name": "mw",
        "timestamp": 1548344382
    },
    {
        "content": "<p>We'd have to land <a href=\"https://github.com/rust-lang/rust/pull/56946\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/56946\">https://github.com/rust-lang/rust/pull/56946</a> first, ping <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ;)   I don't think there's any other blockers though?</p>",
        "id": 156781667,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344425
    },
    {
        "content": "<p>how is the test suite doing these days?</p>",
        "id": 156781683,
        "sender_full_name": "mw",
        "timestamp": 1548344445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> we should review the <code>optimize(foo)</code> attribute implementation at some point</p>",
        "id": 156781691,
        "sender_full_name": "nagisa",
        "timestamp": 1548344455
    },
    {
        "content": "<blockquote>\n<p>how is the test suite doing these days?</p>\n</blockquote>\n<p>what do you mean by this?</p>",
        "id": 156781701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>  although, maybe let's make a decision about the other topic first</p>",
        "id": 156781714,
        "sender_full_name": "mw",
        "timestamp": 1548344472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> that's re: parallel queries</p>",
        "id": 156781732,
        "sender_full_name": "mw",
        "timestamp": 1548344489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> yes</p>",
        "id": 156781737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344490
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/55641\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55641\">#55641</a> is currently tagged as waiting-on-author, lets see</p>",
        "id": 156781822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344531
    },
    {
        "content": "<p>that is probably a mis-tag at this point, I'm guessing.</p>",
        "id": 156781844,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> How bad is the runtime performance regressions with incremental ThinLTO?</p>",
        "id": 156781868,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344575
    },
    {
        "content": "<p>so, judging from the responses so far, it looks like I can tell <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> that we are OK with doing <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s proposal</p>",
        "id": 156781881,
        "sender_full_name": "mw",
        "timestamp": 1548344582
    },
    {
        "content": "<p>that is, enable now until just before the all hands</p>",
        "id": 156781900,
        "sender_full_name": "mw",
        "timestamp": 1548344595
    },
    {
        "content": "<blockquote>\n<p>that is probably a mis-tag at this point, I'm guessing.</p>\n</blockquote>\n<p>(yeah that tag dates from November. I'll tag it back to waiting on review)</p>",
        "id": 156781904,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> these are the best numbers we have so far: <a href=\"https://github.com/rust-lang/rust/pull/56678\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/56678\">https://github.com/rust-lang/rust/pull/56678</a></p>",
        "id": 156781931,
        "sender_full_name": "mw",
        "timestamp": 1548344639
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> Also how does incremental ThinLTO work, is there some LLVM docs to link to?</p>",
        "id": 156781992,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I want to just have a general r=me with compile issues fixed, at which point I’ll just fix them, because rebasing the PR gets really boring very quick when the conflict is always in the area where the stability attributes are defined.</p>",
        "id": 156782011,
        "sender_full_name": "nagisa",
        "timestamp": 1548344676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> the non-incremental builds indicate how much slower the compiler got due to being compiled incrementally</p>",
        "id": 156782047,
        "sender_full_name": "mw",
        "timestamp": 1548344701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> sure. I'll do a re-review pronto. I was trusting the tags and didn't see your comments.</p>",
        "id": 156782068,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548344711
    },
    {
        "content": "<p>regression looks to be &lt; 1%, except for edge cases</p>",
        "id": 156782076,
        "sender_full_name": "mw",
        "timestamp": 1548344719
    },
    {
        "content": "<p>well, more like 0.5 - 3%</p>",
        "id": 156782179,
        "sender_full_name": "mw",
        "timestamp": 1548344767
    },
    {
        "content": "<p>but if some critical inlining is missed, performance is destroyed (e.g. + 25% for hello workd)</p>",
        "id": 156782232,
        "sender_full_name": "mw",
        "timestamp": 1548344806
    },
    {
        "content": "<p>we've seen similar things when making ThinLTO the default for regular builds</p>",
        "id": 156782252,
        "sender_full_name": "mw",
        "timestamp": 1548344823
    },
    {
        "content": "<p>Do you know why hello-world is much slower? Is the rustc startup cost just worse? Can we avoid that with <code>#[inline]</code>?</p>",
        "id": 156782384,
        "sender_full_name": "Zoxc",
        "timestamp": 1548344895
    },
    {
        "content": "<p>@Zoxc inlining the appropriate functions would probably help. but it doesn't really matter. the compiler is just used as a benchmark here</p>",
        "id": 156782491,
        "sender_full_name": "mw",
        "timestamp": 1548344994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> <a href=\"https://github.com/rust-lang/rust/pull/53673\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53673\">https://github.com/rust-lang/rust/pull/53673</a> has some discussion on how incr. ThinLTO is implemented in rustc</p>",
        "id": 156782556,
        "sender_full_name": "mw",
        "timestamp": 1548345027
    },
    {
        "content": "<p>LLD does it similarly</p>",
        "id": 156782570,
        "sender_full_name": "mw",
        "timestamp": 1548345044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> <a href=\"http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html\" target=\"_blank\" title=\"http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html\">http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html</a> has some background on it too</p>",
        "id": 156782609,
        "sender_full_name": "mw",
        "timestamp": 1548345091
    },
    {
        "content": "<p>I'm just wondering if <code>#[inline]</code> actually has an effect, or if incremental ThinLTO actually avoids inlining in other to be more incremental.</p>",
        "id": 156782718,
        "sender_full_name": "Zoxc",
        "timestamp": 1548345193
    },
    {
        "content": "<p><code>#[inline]</code> is respected by release builds, even in incremental mode</p>",
        "id": 156782746,
        "sender_full_name": "mw",
        "timestamp": 1548345232
    },
    {
        "content": "<p>25% seems pretty bad though, but I'd be fine with having it temporarily enabled to find out of if that's more of a fluke or more common</p>",
        "id": 156782865,
        "sender_full_name": "Zoxc",
        "timestamp": 1548345306
    },
    {
        "content": "<p>yeah</p>",
        "id": 156782905,
        "sender_full_name": "mw",
        "timestamp": 1548345339
    },
    {
        "content": "<p>I think the situation is very similar to when we made ThinLTO the default a while ago</p>",
        "id": 156782981,
        "sender_full_name": "mw",
        "timestamp": 1548345367
    },
    {
        "content": "<p>performance was \"roughly\" the same but some microbenchmarks tanked :)</p>",
        "id": 156783011,
        "sender_full_name": "mw",
        "timestamp": 1548345393
    },
    {
        "content": "<p>hello-world is probably quite representative of our test suite though =P</p>",
        "id": 156783069,
        "sender_full_name": "Zoxc",
        "timestamp": 1548345443
    },
    {
        "content": "<p>that's true, but the default would just be for cargo, so the compiler would not be affected</p>",
        "id": 156783165,
        "sender_full_name": "mw",
        "timestamp": 1548345496
    },
    {
        "content": "<p>or at least, we would keep it opt-in</p>",
        "id": 156783192,
        "sender_full_name": "mw",
        "timestamp": 1548345514
    },
    {
        "content": "<p>I'd probably use it for actual development though =P</p>",
        "id": 156783251,
        "sender_full_name": "Zoxc",
        "timestamp": 1548345557
    },
    {
        "content": "<p>yes, that's one case where many cpu cores should help mitigate the problem :)</p>",
        "id": 156783293,
        "sender_full_name": "mw",
        "timestamp": 1548345587
    },
    {
        "content": "<p>btw, if you compiling with --incremental right now, you are already using it</p>",
        "id": 156783416,
        "sender_full_name": "mw",
        "timestamp": 1548345647
    },
    {
        "content": "<p>but is <code>--incremental</code> synonymous with <code>incremental=true</code> in the <code>config.toml</code>? Its not, right?</p>",
        "id": 156783480,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548345702
    },
    {
        "content": "<p>it is, as far as I know</p>",
        "id": 156783491,
        "sender_full_name": "mw",
        "timestamp": 1548345714
    },
    {
        "content": "<p>hmm okay I could have sworn I was observing differing behavior (in terms of one being more reliable than the other, and thus I switched my own behavior)</p>",
        "id": 156783553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548345739
    },
    {
        "content": "<p>anyway its past the hour and I gotta jet! Thanks for coming everyone!</p>",
        "id": 156783571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1548345757
    },
    {
        "content": "<p><code>x.py</code>'s use of incremental is a bit unsound, I think</p>",
        "id": 156783579,
        "sender_full_name": "mw",
        "timestamp": 1548345767
    },
    {
        "content": "<p>it should really only use incr. comp. for stage 0 to be correct in all cases</p>",
        "id": 156783602,
        "sender_full_name": "mw",
        "timestamp": 1548345794
    },
    {
        "content": "<p>but in <em>most</em> cases it doesn't seem to matter</p>",
        "id": 156783615,
        "sender_full_name": "mw",
        "timestamp": 1548345806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> Tests pass for parallel queries when we only use one thread now</p>",
        "id": 156783736,
        "sender_full_name": "Zoxc",
        "timestamp": 1548345894
    },
    {
        "content": "<p>That's a good start :)</p>",
        "id": 156783764,
        "sender_full_name": "mw",
        "timestamp": 1548345916
    },
    {
        "content": "<p>I wonder if that would be enough to ensure correctness</p>",
        "id": 156783784,
        "sender_full_name": "mw",
        "timestamp": 1548345934
    },
    {
        "content": "<p>one can imagine bugs that only occur with more than one thread</p>",
        "id": 156783818,
        "sender_full_name": "mw",
        "timestamp": 1548345958
    },
    {
        "content": "<p>otoh the small test cases might not catch them anyway</p>",
        "id": 156783877,
        "sender_full_name": "mw",
        "timestamp": 1548345974
    },
    {
        "content": "<p>We can't really detect race conditions in those tests anyway. We'd probably need some larger crates for that</p>",
        "id": 156783879,
        "sender_full_name": "Zoxc",
        "timestamp": 1548345980
    },
    {
        "content": "<p>exactly</p>",
        "id": 156783892,
        "sender_full_name": "mw",
        "timestamp": 1548345992
    },
    {
        "content": "<p>the compiler compiling itself would be such a test case</p>",
        "id": 156783953,
        "sender_full_name": "mw",
        "timestamp": 1548346044
    },
    {
        "content": "<p>that is, we'd get at least some testing via stage 2</p>",
        "id": 156783979,
        "sender_full_name": "mw",
        "timestamp": 1548346073
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> Did you look at <code>-Z time-passes</code> for the hello-world regression?</p>",
        "id": 156788506,
        "sender_full_name": "Zoxc",
        "timestamp": 1548349722
    }
]