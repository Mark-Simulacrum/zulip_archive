[
    {
        "content": "<p>I've noticed that we recently added a bunch of <code>run-pass</code> tests for stdlib functionality, like this one: <a href=\"https://github.com/rust-lang/rust/pull/76206/files#diff-48ce30297662d3fd30868a0d48aee6c3\">https://github.com/rust-lang/rust/pull/76206/files#diff-48ce30297662d3fd30868a0d48aee6c3</a></p>\n<p>is this a right thing to do? My gut reaction is no -- I feel that run-pass tests are very costly (as they require linking a separate binary, and launching a separate process). </p>\n<p>Right now test suite is pretty fast (or rather, everything else about build is very slow), but I worry that we might end up with a slow and unoptimizable test-suite.</p>\n<p>I would suggest moving all such tests to <code>#[test]</code> tests, which are in principle much faster.</p>",
        "id": 208820220,
        "sender_full_name": "matklad",
        "timestamp": 1599052065
    },
    {
        "content": "<p>Am I missing something that makes <code>run-pass</code> test more preferable/less costly here?</p>",
        "id": 208820296,
        "sender_full_name": "matklad",
        "timestamp": 1599052091
    },
    {
        "content": "<p>run-pass tests are sometimes nice because they give you easy expect! testing if you need to compare outputs</p>",
        "id": 208821013,
        "sender_full_name": "simulacrum",
        "timestamp": 1599052406
    },
    {
        "content": "<p>I don't know why that test is run-pass though, it seems like it should indeed just be a (series of) unit tests</p>",
        "id": 208821128,
        "sender_full_name": "simulacrum",
        "timestamp": 1599052446
    },
    {
        "content": "<p>Yeah, run-pass tests have some advantages for stdlib, but <code>#[test]</code> tests even more so (a big one is that <code>./x.py test library/std</code> works as expected). </p>\n<p>Basically, I think a useful guideline is \"std/core tests go to ./library, unless you are doing something <strong>really</strong> weird\". Should we document this issue somewhere? </p>\n<p>Also cc <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> as the reviewer of the said PRs.</p>",
        "id": 208822066,
        "sender_full_name": "matklad",
        "timestamp": 1599052825
    },
    {
        "content": "<p>I was thinking that perhaps we could have a highfive warning if you modify src/test without changing compiler/ or something like that</p>",
        "id": 208823502,
        "sender_full_name": "simulacrum",
        "timestamp": 1599053446
    },
    {
        "content": "<p>obviously not a hard error -- you could be adding tests without compiler changes -- but seems relatively likely to warn on that</p>",
        "id": 208823546,
        "sender_full_name": "simulacrum",
        "timestamp": 1599053466
    },
    {
        "content": "<p>(please also include <code>src/librustdoc</code> in 'directories that need modifying <code>src/test</code>')</p>",
        "id": 208824042,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599053668
    },
    {
        "content": "<p>I am not sure -- adding regression tests is pretty common, so I would thing that FPR would be higher than TPR.</p>",
        "id": 208828058,
        "sender_full_name": "matklad",
        "timestamp": 1599055333
    },
    {
        "content": "<p>Not sure what are definitely impactful action items here, except that look through each ui test if it makes sense :)</p>",
        "id": 208828102,
        "sender_full_name": "matklad",
        "timestamp": 1599055359
    },
    {
        "content": "<p>I have no objection to making these kinds of tests into unit tests and can recommend that people do this in the future.  However, there are a large number of them already in <code>src/test/ui</code> (many were moved from the old <code>run-pass</code> directory), so enforcing this retroactively will require a decent chunk of time for a pretty small benefit.</p>",
        "id": 208862790,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1599069401
    },
    {
        "content": "<p>It might be good to have an open issue for this?</p>",
        "id": 208865587,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1599070702
    },
    {
        "content": "<p>FWIW I've found that <code>E-easy</code> <code>E-mentor</code> issues get a <em>lot</em> of people from the community helping on them :)</p>",
        "id": 208887695,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599080735
    },
    {
        "content": "<p>so if there was a tracking issue with a list I imagine it would get done sooner than expected</p>",
        "id": 208887721,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599080751
    },
    {
        "content": "<blockquote>\n<p>for a pretty small benefit.</p>\n</blockquote>\n<p>I kind of feel that the benefit would be substantional over the lifetime of the project, but I also don't feel motivated enough right now to spearhead this effort :)</p>\n<p>I'd be happy  to do reviews for moved tests, if someone else creates the issue :-)</p>",
        "id": 208903919,
        "sender_full_name": "matklad",
        "timestamp": 1599090840
    },
    {
        "content": "<p>I'll make an issue</p>",
        "id": 208907821,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599094089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> do you have an example PR I could reference in the issue?</p>",
        "id": 208908078,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599094376
    },
    {
        "content": "<p>and do you have recommendations for how to find tests that could be made into unit tests?</p>",
        "id": 208908433,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599094722
    },
    {
        "content": "<p>hmm I guess as a very rough first approximation they'd need <code>run-pass</code></p>",
        "id": 208908448,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599094741
    },
    {
        "content": "<p>and they couldn't have <code>WARN</code> either because those can't be tested with unit tests</p>",
        "id": 208908725,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599095008
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/76268\">https://github.com/rust-lang/rust/issues/76268</a></p>",
        "id": 208909166,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599095517
    },
    {
        "content": "<p>feel free to edit the description, not sure how clear it is</p>",
        "id": 208909207,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599095526
    },
    {
        "content": "<p>opened <a href=\"https://github.com/rust-lang/highfive/issues/286\">https://github.com/rust-lang/highfive/issues/286</a> too</p>",
        "id": 208909747,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599096120
    },
    {
        "content": "<p>I have interest in helping out with this, to dip my toes into the contribution process. Would this be the right place to ask questions about where to put things/how to convert some of these?</p>",
        "id": 208920041,
        "sender_full_name": "CraftSpider",
        "timestamp": 1599107803
    },
    {
        "content": "<p>Sure, this is a good spot :)</p>",
        "id": 208920518,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599108454
    },
    {
        "content": "<p>So, because I want to make sure I've got the basics: it looks like <code>ui/array-slice-vec/vec-slice.rs</code> is just checking that one can take a slice of a vec, and that it works. Would that be a good candidate to move into <code>alloc/tests/vec.rs</code> as, say, <code>test_slice_from_ref</code> (To match <code>test_slice_from_mut</code>)? As there appears to not be that test in there already</p>",
        "id": 208921079,
        "sender_full_name": "CraftSpider",
        "timestamp": 1599109107
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"319144\">@Rune Tynan</span> yeah, I think that that test should be fine to move, although it's not entirely clear cut. </p>\n<p>One way to decide here is to look at the commit/PR which added the test. If the commit did some changes to the stdlib, and then added a UI test, than the test almost certainly should be moved to stdlib. </p>\n<p>if the commit changed <em>compiler</em>, than that means the the tests actually tests something about the compiler, and probably should not be moved.</p>\n<p>In this particular case, this test was there from time immemorial, so it's unclear if it intends to check stdlib or compiler just from the git history. </p>\n<p>But today, it's pretty clear that it just exercises vec's and slice's API, so it should live in <code>/library</code> unit tests</p>",
        "id": 208947897,
        "sender_full_name": "matklad",
        "timestamp": 1599129489
    },
    {
        "content": "<p>(Added this info to the issue description )</p>",
        "id": 208950444,
        "sender_full_name": "matklad",
        "timestamp": 1599131166
    }
]