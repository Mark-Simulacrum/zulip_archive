[
    {
        "content": "<p>if you want a config option to have a different default value in release mode, should one change the parse function that's used?</p>",
        "id": 228658963,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802103
    },
    {
        "content": "<p>like</p>",
        "id": 228659004,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802117
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/247337f4093b3177760a25a11b3e1f130882c37c/compiler/rustc_session/src/options.rs#L1000-L1001\">https://github.com/rust-lang/rust/blob/247337f4093b3177760a25a11b3e1f130882c37c/compiler/rustc_session/src/options.rs#L1000-L1001</a></p>",
        "id": 228659006,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802118
    },
    {
        "content": "<p>instead of <code>parse_uint</code> use a different thing</p>",
        "id": 228659081,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802136
    },
    {
        "content": "<p>I was expecting to find some example or some other option that works like that but wasn't able</p>",
        "id": 228659146,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802160
    },
    {
        "content": "<p>\"release mode\" is a cargo concept really</p>",
        "id": 228659468,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614802288
    },
    {
        "content": "<p>there's no <code>--release</code> for the rust compiler itself</p>",
        "id": 228659496,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614802299
    },
    {
        "content": "<p>yeah, I meant with the \"release\" kind of optimizations on</p>",
        "id": 228659633,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802333
    },
    {
        "content": "<p>oh, like enable it with <code>-O2</code>? I'm not sure how to do that but it sounds reasonable</p>",
        "id": 228659778,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614802386
    },
    {
        "content": "<p>probably <code>tcx.sess.opts.optimize != OptLevel::No</code></p>",
        "id": 228659893,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802427
    },
    {
        "content": "<p>anyway, I guess I'd need to roll my own parse and do that</p>",
        "id": 228659950,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614802443
    },
    {
        "content": "<p>wait, I don't think you should do this in the parsing step</p>",
        "id": 228661187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614802888
    },
    {
        "content": "<p>isn't there a later point where we walk over the config and change its defaults based on other settings?</p>",
        "id": 228661219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614802905
    },
    {
        "content": "<p>/me looks</p>",
        "id": 228661235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614802913
    },
    {
        "content": "<p>Usually it's just a function on session that evaluates several different options and returns the canonical value.</p>",
        "id": 228661415,
        "sender_full_name": "simulacrum",
        "timestamp": 1614802980
    },
    {
        "content": "<p>Oh that's right! <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> , keep the field in <code>tcx.sess.opts</code> simple, but make a method on session that figures out the right value</p>",
        "id": 228661516,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614803020
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 228661649,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614803059
    },
    {
        "content": "<p>e.g. look at this <code>fn verify_llvm_ir()</code> method:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">verify_llvm_ir</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">opts</span><span class=\"p\">.</span><span class=\"n\">debugging_opts</span><span class=\"p\">.</span><span class=\"n\">verify_llvm_ir</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"fm\">option_env!</span><span class=\"p\">(</span><span class=\"s\">\"RUSTC_VERIFY_LLVM_IR\"</span><span class=\"p\">).</span><span class=\"n\">is_some</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 228661705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614803088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> right</p>",
        "id": 228663426,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614803742
    },
    {
        "content": "<p>the thing that bothers me a bit is that users of the code can just bypass this methods and go directly to opts and get the inner value</p>",
        "id": 228663523,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614803769
    },
    {
        "content": "<p>yeah it's unfortunate, if possible make them private</p>",
        "id": 228664125,
        "sender_full_name": "simulacrum",
        "timestamp": 1614804013
    },
    {
        "content": "<p>but we don't have great answer</p>",
        "id": 228664145,
        "sender_full_name": "simulacrum",
        "timestamp": 1614804018
    },
    {
        "content": "<p>in the future we should likely have some kind of wrapper type or something, but seems hard to get right</p>",
        "id": 228664201,
        "sender_full_name": "simulacrum",
        "timestamp": 1614804037
    },
    {
        "content": "<p>yeah but I think the macro makes it public</p>",
        "id": 228664303,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614804081
    },
    {
        "content": "<p>anyway good to know :)</p>",
        "id": 228664311,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614804086
    },
    {
        "content": "<p>another thing, is there a way to know if this was set by the user or just getting the default value?</p>",
        "id": 228664377,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614804116
    },
    {
        "content": "<p>I'd like to say, if the user didn't provide a value for this option and we're in \"release\" mode set this value, otherwise use whatever is in the opt</p>",
        "id": 228664510,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614804158
    },
    {
        "content": "<p>I don't want to just change the provided value if we are in \"release\" mode because the user provided a specific value for a reason</p>",
        "id": 228664589,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614804191
    },
    {
        "content": "<p>you could use Option and parse_opt_*</p>",
        "id": 228664631,
        "sender_full_name": "tm",
        "timestamp": 1614804214
    },
    {
        "content": "<p>oh right :facepalm:</p>",
        "id": 228664742,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614804251
    },
    {
        "content": "<p>yeah it makes sense</p>",
        "id": 228664753,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614804255
    }
]