[
    {
        "content": "<p>in trying to update wasi-libc, i discovered that the signature of a function was changed (<code>__wasilibc_find_relpath</code>), which kind of breaks <em>everything</em>. will the libc bindings need to be like majorly cycled or something? how can this be dealt with</p>",
        "id": 222190885,
        "sender_full_name": "devsnek",
        "timestamp": 1610228123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> maybe?</p>",
        "id": 222620673,
        "sender_full_name": "devsnek",
        "timestamp": 1610560846
    },
    {
        "content": "<p>I don't know about the <code>libc</code> crate itself, but there's a PR to update wasi-libc in rust-lang/rust already (been there for a few months)</p>",
        "id": 222622133,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1610561436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/131828-t-compiler/topic/libc.20symbol.20change/near/222622133\">said</a>:</p>\n<blockquote>\n<p>I don't know about the <code>libc</code> crate itself, but there's a PR to update wasi-libc in rust-lang/rust already (been there for a few months)</p>\n</blockquote>\n<p>thanks for pointing me to that. when i tried to make something similar, rustc would fail to build std because of the difference between <code>libc::__wasilibc_find_relpath</code> and the binding declared inline in <code>std</code></p>",
        "id": 222635934,
        "sender_full_name": "devsnek",
        "timestamp": 1610567515
    },
    {
        "content": "<p>and there are like seven different versions of libc used in various places around the std and its dependencies, all of them with the old symbol</p>",
        "id": 222636013,
        "sender_full_name": "devsnek",
        "timestamp": 1610567541
    }
]