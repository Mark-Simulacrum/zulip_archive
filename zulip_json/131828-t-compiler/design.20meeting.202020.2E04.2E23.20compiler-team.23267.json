[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; we will be starting the steering meeting regarding <a href=\"https://github.com/rust-lang/compiler-team/issues/267\" title=\"https://github.com/rust-lang/compiler-team/issues/267\">compiler-team#267</a>, Standard library implementation ownership, in about <strong>two minutes</strong></p>",
        "id": 195191224,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587736700
    },
    {
        "content": "<p>Go ahead and add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji above to show that you are here!</p>",
        "id": 195191865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587736980
    },
    {
        "content": "<p>We will start off with five minutes for ...</p>",
        "id": 195191894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587736997
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 195191903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587736999
    },
    {
        "content": "<p>I guess its a good thing when there are no announcements a day after a release. :)</p>",
        "id": 195192422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737244
    },
    {
        "content": "<p>I <em>did</em> manage to bork the beta (we're at 1.44.0-beta.752 somehow), but that's not really an announcement...</p>",
        "id": 195192591,
        "sender_full_name": "simulacrum",
        "timestamp": 1587737310
    },
    {
        "content": "<p>wow; like, that denotes that there were 753 versions on the beta channel before this one?</p>",
        "id": 195192660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737349
    },
    {
        "content": "<p>such progress!</p>",
        "id": 195192674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737359
    },
    {
        "content": "<p>well okay, lets move on to the topic at hand</p>",
        "id": 195192853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737424
    },
    {
        "content": "<p>the proposal is that our team, in addition to its existing responsibilities (design and implementation of the <code>rustc</code> compiler) would also take on maintenance duties for the standard library/ies (everything that feeds into libstd)</p>",
        "id": 195193040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737509
    },
    {
        "content": "<p>(libtest, probably, but yes)</p>",
        "id": 195193127,
        "sender_full_name": "simulacrum",
        "timestamp": 1587737527
    },
    {
        "content": "<p>and T-libs would reduce its scope to just being about the <em>design</em> of libstd</p>",
        "id": 195193161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737542
    },
    {
        "content": "<p>I did think that this sentence from the motivation was pretty interesting: \"The team (T-libs) selects for people with diverse library design experience, which means members tend to have active library projects outside the standard library; this is unlike the compiler team for whom their team role is usually their dominant project.\"</p>",
        "id": 195193268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737591
    },
    {
        "content": "<p>So where's the boundary? Any PR touching creating new stable APIs or stable API docs? Or Any PR touching public APIs or public API's docs?</p>",
        "id": 195193321,
        "sender_full_name": "oli",
        "timestamp": 1587737616
    },
    {
        "content": "<p>Because I totally see the point that libstd internals are an impl detail of the compiler</p>",
        "id": 195193351,
        "sender_full_name": "oli",
        "timestamp": 1587737635
    },
    {
        "content": "<p>after all, all functions could just invoke intrinsics</p>",
        "id": 195193364,
        "sender_full_name": "oli",
        "timestamp": 1587737641
    },
    {
        "content": "<p>instead of having a body</p>",
        "id": 195193411,
        "sender_full_name": "oli",
        "timestamp": 1587737645
    },
    {
        "content": "<p>exactly</p>",
        "id": 195193418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737650
    },
    {
        "content": "<p>as for the question of boundary</p>",
        "id": 195193436,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737657
    },
    {
        "content": "<p>yeah, so the idea is that t-libs would be \"called in\" for any \"rustdoc visible\" change, basically, though of course similar to lang it's often nice to ping/ask/etc for other changes too, if they affect \"API\" at a lower level (e.g. performance tradeoffs)</p>",
        "id": 195193532,
        "sender_full_name": "simulacrum",
        "timestamp": 1587737693
    },
    {
        "content": "<p>I was assuming that both creation of new public APIs and changes to existing public API's (both in stable and unstable/nightly) would remain the domain of T-libs</p>",
        "id": 195193533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737697
    },
    {
        "content": "<p>historically the libs team or a subset has been responsible for \"the standard library\" among other things, which encompasses:</p>\n<ul>\n<li>\n<p>reviewing implementation-only changes like cleanups, performance improvements, bugfixes, tests;</p>\n</li>\n<li>\n<p>reviewing procedural work like stabilization PRs and changes to unstable features agreed upon in their tracking issues;</p>\n</li>\n<li>\n<p>as a team, ratifying API changes and sensitive documentation changes</p>\n</li>\n</ul>",
        "id": 195193577,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587737712
    },
    {
        "content": "<p>the last is the only one i think needs to remain libs' role</p>",
        "id": 195193626,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587737727
    },
    {
        "content": "<p>Hmm. approving stabilization PR's might still need to remain under T-libs</p>",
        "id": 195193747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737768
    },
    {
        "content": "<p>or at least, I'm not sure if I would be comfortable trying to determine when an API was \"safe\" to stabilize ...</p>",
        "id": 195193793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737791
    },
    {
        "content": "<p>well, if the tracking issue has a finished FCP, does libs need to be involved in the stabilization PR?</p>",
        "id": 195193834,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587737808
    },
    {
        "content": "<p>oh maybe I misunderstand</p>",
        "id": 195193846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737817
    },
    {
        "content": "<p>basically at a high level, libs becomes like lang -- no direct involvement in PR approval</p>",
        "id": 195193877,
        "sender_full_name": "simulacrum",
        "timestamp": 1587737835
    },
    {
        "content": "<p>I see, so you're <em>just</em> talking about the PR that implements the stabilization itself</p>",
        "id": 195193888,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737839
    },
    {
        "content": "<p>right</p>",
        "id": 195193897,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587737846
    },
    {
        "content": "<p>This sounds fine to me. I mean, obviously its problematic to just take on more work</p>",
        "id": 195193959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737875
    },
    {
        "content": "<p>but I think we are learning better how to scale our existing processes</p>",
        "id": 195194016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737887
    },
    {
        "content": "<p>thanks in no small part to our various WG's</p>",
        "id": 195194049,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737900
    },
    {
        "content": "<p>(and at least part of the intent is that we'd likely want to spin up something like std-contributors or so, though perhaps not immediately; it's unclear whether it need be a separate group though from compiler-contributors)</p>",
        "id": 195194133,
        "sender_full_name": "simulacrum",
        "timestamp": 1587737942
    },
    {
        "content": "<p>So, here's a potentially silly question</p>",
        "id": 195194164,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737959
    },
    {
        "content": "<p>Obviously a change in scope like this means that <code>T-compiler</code> is a bit of a misnomer</p>",
        "id": 195194191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737976
    },
    {
        "content": "<p>would it be ... a nightmare ... to try to rename the team to T-implementation or something?</p>",
        "id": 195194235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587737995
    },
    {
        "content": "<p>I personally would be fine with just leaving the name as is</p>",
        "id": 195194320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738022
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I'm feeling like the compiler is the implementation</p>",
        "id": 195194322,
        "sender_full_name": "oli",
        "timestamp": 1587738024
    },
    {
        "content": "<p>and just acknowledge it as a historical artifact</p>",
        "id": 195194342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738031
    },
    {
        "content": "<p>I think I would hold off on renaming things at least for a while</p>",
        "id": 195194390,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738052
    },
    {
        "content": "<p>and if \"the compiler\" contains some libstd source... again <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 195194391,
        "sender_full_name": "oli",
        "timestamp": 1587738052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> but it isn't? The stdlib is distinct from the compiler. I mean, yes we could have intrinsics for everything</p>",
        "id": 195194407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738058
    },
    {
        "content": "<p>there's a good chance in my mind that we eventually create a parent team here -- e.g. we'd still have a compiler team but there'd be a \"rust source\" team or something</p>",
        "id": 195194456,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738081
    },
    {
        "content": "<p>so, lets take an example: The choice of what data structure for the standard HashMap</p>",
        "id": 195194465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738086
    },
    {
        "content": "<p>that is an implementation detail (right?)</p>",
        "id": 195194497,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738101
    },
    {
        "content": "<p>yes, though plausibly affects available APIs :)</p>",
        "id": 195194535,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738118
    },
    {
        "content": "<p>I mean, some hashmap designs would require multiple hash functions (e.g. cuckoo hashing)</p>",
        "id": 195194608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738139
    },
    {
        "content": "<p>but my point is, I do think that the hashmap internals are largely independent from the compiler internals</p>",
        "id": 195194643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738161
    },
    {
        "content": "<p>and I'd like to figure out a way to advertise this to volunteers</p>",
        "id": 195194704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738192
    },
    {
        "content": "<p>I guess the forge will just tell them where to go</p>",
        "id": 195194771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738227
    },
    {
        "content": "<p>or people will; i.e. T-libs can tell people if they are interested in helping with implementation, then they should come on over and talk to us over here</p>",
        "id": 195194874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738262
    },
    {
        "content": "<p>Anyway</p>",
        "id": 195194982,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738307
    },
    {
        "content": "<p>let me ask a more fundamental question</p>",
        "id": 195194999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738313
    },
    {
        "content": "<p>Does anyone present think that this is a <em>bad</em> idea?</p>",
        "id": 195195017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738321
    },
    {
        "content": "<p>i think \"taking on more work\" is a legitimate concern that we may want to try to settle</p>",
        "id": 195195181,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587738381
    },
    {
        "content": "<p>I agree with the rationale in the original proposal, but I am worried about the t-compiler's bandwith</p>",
        "id": 195195230,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1587738407
    },
    {
        "content": "<p>maybe by trying the change for a couple months only and reevaluating</p>",
        "id": 195195247,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587738416
    },
    {
        "content": "<p>I assume the current labels do not distinguish T-libs implementation issues from T-libs design issues, right?</p>",
        "id": 195195266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738425
    },
    {
        "content": "<p>we have very few implementation issues</p>",
        "id": 195195296,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738436
    },
    {
        "content": "<p>well that's good</p>",
        "id": 195195318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738443
    },
    {
        "content": "<p>pnkfelix no but I'm happy to share links to implementation issues, i have a list</p>",
        "id": 195195323,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587738446
    },
    {
        "content": "<p>(to some extent, C-feature-request/accepted is design)</p>",
        "id": 195195334,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738451
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> how do you track them?</p>",
        "id": 195195343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738456
    },
    {
        "content": "<p>just ran through \"is:pr assignee:dtolnay\" last night</p>",
        "id": 195195409,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587738482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I see, so search for T-libs on github but filter out the C-feature-request ones?</p>",
        "id": 195195437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738483
    },
    {
        "content": "<p>Heh, <em>all</em> implementation issues are assigned to you, <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> ?</p>",
        "id": 195195490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738503
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yeah, I think that's a good heuristic though not perfect</p>",
        "id": 195195522,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738517
    },
    {
        "content": "<p>so as a quick example</p>",
        "id": 195195605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738560
    },
    {
        "content": "<p>\"Implement TryInto&lt;CString&gt; for str and String\" <a href=\"https://github.com/rust-lang/rust/issues/71448\" title=\"https://github.com/rust-lang/rust/issues/71448\">#71448</a></p>",
        "id": 195195611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738564
    },
    {
        "content": "<p>this would remain a T-libs design issue, right?</p>",
        "id": 195195644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738576
    },
    {
        "content": "<p>because that's a public API change?</p>",
        "id": 195195670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738585
    },
    {
        "content": "<p>yeah, it was wrongly tagged</p>",
        "id": 195195691,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738594
    },
    {
        "content": "<p>:)</p>",
        "id": 195195708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738598
    },
    {
        "content": "<p>for implementing easy stuff, i can get it off the team by assigning it to newcomers who are willing to contribute. It adds a bit of review overhead on the team though</p>",
        "id": 195195757,
        "sender_full_name": "DPC",
        "timestamp": 1587738604
    },
    {
        "content": "<p>just want to double check my understanding</p>",
        "id": 195195765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738608
    },
    {
        "content": "<p>if it affects rustdoc, it's definitely design, basically</p>",
        "id": 195195774,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738610
    },
    {
        "content": "<p>if it needs FCP, it's design, which this one does</p>",
        "id": 195195804,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587738626
    },
    {
        "content": "<p>And likewise, C-tracking-issues are also T-libs design ?</p>",
        "id": 195195892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738663
    },
    {
        "content": "<p>or does that depend on context?</p>",
        "id": 195195910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738672
    },
    {
        "content": "<p>sort of, the <em>work</em> within them (e.g. if t-libs accepts an RFC) is not design-y in nature, but the stabilization and decision making for unanswered questions and such likely is t-libs</p>",
        "id": 195195989,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738710
    },
    {
        "content": "<p>yes, at least ones that track something unstable that will need FCP to stabilize</p>",
        "id": 195196005,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587738715
    },
    {
        "content": "<p>basically same as t-lang tracking issues</p>",
        "id": 195196012,
        "sender_full_name": "simulacrum",
        "timestamp": 1587738717
    },
    {
        "content": "<p>okay</p>",
        "id": 195196095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738735
    },
    {
        "content": "<p>this is all in service of me trying to get an actual count</p>",
        "id": 195196133,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738753
    },
    {
        "content": "<p>\"is:open is:issue label:T-libs -label:C-feature-request -label:C-tracking-issue \" says 375 open issues</p>",
        "id": 195196281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738811
    },
    {
        "content": "<p>that's actually quite promising</p>",
        "id": 195196288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738815
    },
    {
        "content": "<p>(I know that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> already said we have very few issues; I just wanted to see for myself)</p>",
        "id": 195196336,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738837
    },
    {
        "content": "<p>some of those are just a stabilisation away from being closed</p>",
        "id": 195196384,
        "sender_full_name": "DPC",
        "timestamp": 1587738844
    },
    {
        "content": "<p>I might also filger out the ones that have T-doc tagged as well</p>",
        "id": 195196447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738874
    },
    {
        "content": "<p>okay, so my guess is that we might be adding between 200 and 300 issues to our plate</p>",
        "id": 195196643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587738954
    },
    {
        "content": "<p>most of which have no P-label</p>",
        "id": 195196786,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739002
    },
    {
        "content": "<p>(which is not surprising since its largely T-compiler that makes use of the P-label)</p>",
        "id": 195196812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739014
    },
    {
        "content": "<p>essentially all t-libs issues are p-low, since they're just feature requests -- they're not stuff we \"must do\" unlike the typical t-compiler bug</p>",
        "id": 195196884,
        "sender_full_name": "simulacrum",
        "timestamp": 1587739039
    },
    {
        "content": "<p>or rather, the ones that <em>are</em> P-high or worse tend to get fixed quickly I imagine, right?</p>",
        "id": 195196946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739071
    },
    {
        "content": "<p>that is, its not that all T-libs issues that are filed are P-low</p>",
        "id": 195197008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739083
    },
    {
        "content": "<p>just that it tends to be easier to fix important issues there</p>",
        "id": 195197054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739100
    },
    {
        "content": "<p>i've been thinking more from the perspective of PRs than issues</p>",
        "id": 195197122,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739135
    },
    {
        "content": "<p>most of the PRs related to libs issues are not made by team members</p>",
        "id": 195197157,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739150
    },
    {
        "content": "<p>PRs come in at some rate and need attention</p>",
        "id": 195197172,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739159
    },
    {
        "content": "<p>okay, I was wondering why you were treating that as your query</p>",
        "id": 195197205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739176
    },
    {
        "content": "<p>The main problem there is that the current T-compiler team is not necessarily an expert in the stdlibs code</p>",
        "id": 195197302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739206
    },
    {
        "content": "<p>so the members may not all be comfortable with reviewing PR's against arbitrary portions of the stdlib</p>",
        "id": 195197379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739244
    },
    {
        "content": "<p>but we can try it and see</p>",
        "id": 195197391,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739251
    },
    {
        "content": "<p>maybe this is colored by experience at Facebook where any engineer can approve changes to anywhere in the codebase, but for something like <a href=\"https://github.com/rust-lang/rust/pull/68033\" title=\"https://github.com/rust-lang/rust/pull/68033\">https://github.com/rust-lang/rust/pull/68033</a> \"Don't use f64 shims for f32 cmath functions on non 32-bit x86 MSVC\" as a libs member I really have no more ability to review this than any competent Rust programmer at my company would have; it's not like I had any context on those shims before seeing the PR</p>",
        "id": 195197405,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739259
    },
    {
        "content": "<p>so it may also be interesting to consider whether we may be able to harness review bandwidth from companies</p>",
        "id": 195197487,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739297
    },
    {
        "content": "<p>possibly a separate discussion</p>",
        "id": 195197503,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739302
    },
    {
        "content": "<p>So let me try to explicitly tease out the different concerns here</p>",
        "id": 195197513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739306
    },
    {
        "content": "<ol>\n<li>There is an influx (and backlog?) of PR's to the stdlib</li>\n</ol>",
        "id": 195197542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739318
    },
    {
        "content": "<p>that need review or at least some sort of handling</p>",
        "id": 195197607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739329
    },
    {
        "content": "<ol start=\"2\">\n<li>There are a set of issues filed against the stdlib</li>\n</ol>",
        "id": 195197628,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739338
    },
    {
        "content": "<p>that need handling (e.g. prioritization)</p>",
        "id": 195197671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739354
    },
    {
        "content": "<ol start=\"3\">\n<li>There are procedural matters that need to be followed up on</li>\n</ol>",
        "id": 195197719,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739372
    },
    {
        "content": "<p>(e.g. filing of stabilization PR's for FCP'ed stuff)</p>",
        "id": 195197756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739389
    },
    {
        "content": "<p>That's everything I can think of... anything else?</p>",
        "id": 195197803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195193364\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195193364\">said</a>:</p>\n<blockquote>\n<p>after all, all functions could just invoke intrinsics</p>\n</blockquote>\n<p>(intrinsics are also t-lang territory though, to some extend ;) )</p>",
        "id": 195197842,
        "sender_full_name": "RalfJ",
        "timestamp": 1587739428
    },
    {
        "content": "<p>if you are looking for examples for implementation-only libs PRs, I think most of <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+author%3Assomers+is%3Aclosed\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+author%3Assomers+is%3Aclosed\">https://github.com/rust-lang/rust/pulls?q=is%3Apr+author%3Assomers+is%3Aclosed</a> are of that kind -- ssomer's BTree work seems to fit squarely into what T-libs would hand off to T-compiler with this change, if my reading is correct.</p>",
        "id": 195198017,
        "sender_full_name": "RalfJ",
        "timestamp": 1587739485
    },
    {
        "content": "<p>\"There are a set of issues filed against the stdlib that need handling (e.g. prioritization)\" -- we don't do much of this; things get fixed when it is important enough to someone outside the team to fix it</p>",
        "id": 195198150,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739526
    },
    {
        "content": "<p>\"There are procedural matters that need to be followed up on (e.g. filing of stabilization PR's for FCP'ed stuff)\" -- same</p>",
        "id": 195198205,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> so for items 2. and 3., you are saying that T-libs already does not do such activity</p>",
        "id": 195198426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739650
    },
    {
        "content": "<p>right</p>",
        "id": 195198606,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739691
    },
    {
        "content": "<p>I was assuming that was due to a lack of developer resources</p>",
        "id": 195198619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739697
    },
    {
        "content": "<p>but perhaps you are saying that it is not a worthwhile activity?</p>",
        "id": 195198648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739716
    },
    {
        "content": "<p>(since, if it were worthwhile, then an outside contributor would provide it?)</p>",
        "id": 195198709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739747
    },
    {
        "content": "<p>it's both, but the worthwhile things do tend to get picked up</p>",
        "id": 195198819,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739797
    },
    {
        "content": "<p>okay. My own preference would be to try to figure out how to actually resolve the issues that have been filed</p>",
        "id": 195198940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739833
    },
    {
        "content": "<p>since the issue database continues to grow</p>",
        "id": 195198969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739843
    },
    {
        "content": "<p>but we certainly haven't yet figured out how to deal with the backlog within T-compiler either</p>",
        "id": 195199018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739864
    },
    {
        "content": "<p>i think it's natural that the issue database would grow</p>",
        "id": 195199085,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587739897
    },
    {
        "content": "<p>(i am looking at getting some of the older issues closed)</p>",
        "id": 195199106,
        "sender_full_name": "DPC",
        "timestamp": 1587739908
    },
    {
        "content": "<p>so I'm willing to agree that item 2 is treated roughly the same by T-libs and T-compiler</p>",
        "id": 195199119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739914
    },
    {
        "content": "<p>We're nearing the hour</p>",
        "id": 195199197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739937
    },
    {
        "content": "<p>there's one thing I wanted to try to dive into a little more carefully</p>",
        "id": 195199226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739948
    },
    {
        "content": "<p>someone (cannot find the quote right now) earlier said</p>",
        "id": 195199299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739984
    },
    {
        "content": "<p>maybe we should just try this for a few months</p>",
        "id": 195199321,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587739991
    },
    {
        "content": "<p>The main issue there</p>",
        "id": 195199344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740003
    },
    {
        "content": "<p>well, maybe it doesn't matter</p>",
        "id": 195199363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740014
    },
    {
        "content": "<p>I was going to say</p>",
        "id": 195199372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740017
    },
    {
        "content": "<p>the main issue there is that I would think that a natural consequence of this</p>",
        "id": 195199396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740027
    },
    {
        "content": "<p>is that we would apply the T-compiler protocols</p>",
        "id": 195199418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740038
    },
    {
        "content": "<p>to the libs implementation issues</p>",
        "id": 195199470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740044
    },
    {
        "content": "<p>so we would want some way to incorporate handling them</p>",
        "id": 195199533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740075
    },
    {
        "content": "<p>into our existing systems</p>",
        "id": 195199546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740080
    },
    {
        "content": "<p>that means, to me, we either 1. start tagging them as T-compiler</p>",
        "id": 195199584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740096
    },
    {
        "content": "<p>or 2. our team starts surveying the things tagged as T-libs</p>",
        "id": 195199619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740110
    },
    {
        "content": "<p>or 3. we allocate a new label</p>",
        "id": 195199632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740114
    },
    {
        "content": "<p>if we are going to do this on some sort of trial period</p>",
        "id": 195199674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740125
    },
    {
        "content": "<p>then (1.) is bad</p>",
        "id": 195199681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740129
    },
    {
        "content": "<p>I would lean towards a new label; seems the easiest and most practical</p>",
        "id": 195199705,
        "sender_full_name": "simulacrum",
        "timestamp": 1587740142
    },
    {
        "content": "<p>I'm not a huge fan of (2.) unless we figure out a good way to differentiate the design stuff from impl stuff</p>",
        "id": 195199735,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740158
    },
    {
        "content": "<p>+1 for new label, they would be labelled T-libs + implementation</p>",
        "id": 195199736,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740159
    },
    {
        "content": "<p>so yes, I think I agree about a new label</p>",
        "id": 195199793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740169
    },
    {
        "content": "<p>maybe libs-implementation (or just libs-impl) ?</p>",
        "id": 195199920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740233
    },
    {
        "content": "<p>I don't know why I'm shying away from \"implementation\"</p>",
        "id": 195199957,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740249
    },
    {
        "content": "<p>T-implementation?</p>",
        "id": 195199967,
        "sender_full_name": "DPC",
        "timestamp": 1587740258
    },
    {
        "content": "<p>libs-impl seems good</p>",
        "id": 195199979,
        "sender_full_name": "simulacrum",
        "timestamp": 1587740265
    },
    {
        "content": "<p>one failure mode I would flag is that y'all start doing way more work on libs issues than libs has ever done, and conclude at the end of the trial period that you don't have bandwidth for it, but would totally have had bandwidth for the work that libs is actually trying to hand off</p>",
        "id": 195199992,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740273
    },
    {
        "content": "<p>shorter, anyway, which is nice in some sense</p>",
        "id": 195199996,
        "sender_full_name": "simulacrum",
        "timestamp": 1587740274
    },
    {
        "content": "<p>for some reason I want to embed the detail that this is about libs too</p>",
        "id": 195200010,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> yes I am inferring that was not your intention</p>",
        "id": 195200109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740312
    },
    {
        "content": "<p>which is why it was good we teased out the 3 potential concerns above</p>",
        "id": 195200192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740345
    },
    {
        "content": "<p>So for now</p>",
        "id": 195200225,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740358
    },
    {
        "content": "<p>Lets maybe plan it this way</p>",
        "id": 195200234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740365
    },
    {
        "content": "<p>Officially, what we're doing is taking on some additional review duties</p>",
        "id": 195200261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740378
    },
    {
        "content": "<p>PR's can start being marked with <code>libs-impl</code></p>",
        "id": 195200282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740390
    },
    {
        "content": "<p>and if they are so marked, then they end up in our pool of things to review</p>",
        "id": 195200353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740410
    },
    {
        "content": "<p>sounds great</p>",
        "id": 195200405,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740435
    },
    {
        "content": "<p>but at the same time</p>",
        "id": 195200406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740435
    },
    {
        "content": "<p>I'm interpreting all of this</p>",
        "id": 195200424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740444
    },
    {
        "content": "<p>as a sign that you all do not <em>object</em> to us trying to apply priority labels and such</p>",
        "id": 195200463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740462
    },
    {
        "content": "<p>to T-libs issues that are solely about implementation</p>",
        "id": 195200505,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740477
    },
    {
        "content": "<p>no objection</p>",
        "id": 195200512,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740480
    },
    {
        "content": "<p>for calibration, here is a diverse representative set of PRs that i think would be libs-impl</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/68033\" title=\"https://github.com/rust-lang/rust/pull/68033\">https://github.com/rust-lang/rust/pull/68033</a> \"Don't use f64 shims for f32 cmath functions on non 32-bit x86 MSVC\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/69209\" title=\"https://github.com/rust-lang/rust/pull/69209\">https://github.com/rust-lang/rust/pull/69209</a> \"Miscellaneous cleanup to formatting\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/70201\" title=\"https://github.com/rust-lang/rust/pull/70201\">https://github.com/rust-lang/rust/pull/70201</a> \"Small tweaks in ToOwned::clone_into\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/70486\" title=\"https://github.com/rust-lang/rust/pull/70486\">https://github.com/rust-lang/rust/pull/70486</a> \"Shrink Unicode tables (even more)\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/67930\" title=\"https://github.com/rust-lang/rust/pull/67930\">https://github.com/rust-lang/rust/pull/67930</a> \"Rename Result::as_deref_ok to as_deref\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/67321\" title=\"https://github.com/rust-lang/rust/pull/67321\">https://github.com/rust-lang/rust/pull/67321</a> \"make htons const fn\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/67035\" title=\"https://github.com/rust-lang/rust/pull/67035\">https://github.com/rust-lang/rust/pull/67035</a> \"Implement padding for IpAddr without heap alloc\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/66837\" title=\"https://github.com/rust-lang/rust/pull/66837\">https://github.com/rust-lang/rust/pull/66837</a> \"Clarify <code>{f32,f64}::EPSILON</code> docs\"</li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/66393\" title=\"https://github.com/rust-lang/rust/pull/66393\">https://github.com/rust-lang/rust/pull/66393</a> \"introduce benchmarks of HashSet operations\"</li>\n</ul>",
        "id": 195200568,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740499
    },
    {
        "content": "<p>Okay. In the past, I have avoided attaching P-labels to non T-compiler issues</p>",
        "id": 195200574,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740502
    },
    {
        "content": "<p>because the interpretation of the P-labels was not standardized across teams</p>",
        "id": 195200608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740515
    },
    {
        "content": "<p>I think we can also feel free to tag issues as <code>libs-impl</code> if we believe they are not design issues, just issues filed against implementation details</p>",
        "id": 195200708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740546
    },
    {
        "content": "<p>But that task is not officially what you are asking us to do</p>",
        "id": 195200737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740561
    },
    {
        "content": "<p>libs-impl on issues gets weird because design issues need implementation work too</p>",
        "id": 195200781,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740580
    },
    {
        "content": "<p>like in the Result::as_deref_ok tracking issue we decide to rename to as_deref, it's now a libs-impl issue?</p>",
        "id": 195200840,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740600
    },
    {
        "content": "<p>hmm</p>",
        "id": 195200868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740612
    },
    {
        "content": "<p>the issue remains a design/API issue</p>",
        "id": 195200927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740639
    },
    {
        "content": "<p>the PR that implements the rename could be <code>libs-impl</code></p>",
        "id": 195201001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740656
    },
    {
        "content": "<p>Right?</p>",
        "id": 195201007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740658
    },
    {
        "content": "<p>I'm more trying to figure out good ways , if I'm reviewing the issue database</p>",
        "id": 195201055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740678
    },
    {
        "content": "<p>sure, but nothing would be tracking that the issue requires implementation work</p>",
        "id": 195201060,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740679
    },
    {
        "content": "<p>Well don't all open issues require implementation work, in some sense?</p>",
        "id": 195201109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740698
    },
    {
        "content": "<p>anyway I'm rambling</p>",
        "id": 195201171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740720
    },
    {
        "content": "<p>and we're over our hour</p>",
        "id": 195201202,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740727
    },
    {
        "content": "<p>action items:</p>",
        "id": 195201211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740729
    },
    {
        "content": "<p>Allocate a new <code>libs-impl</code> label</p>",
        "id": 195201222,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740734
    },
    {
        "content": "<p>Start tagging PR's with <code>libs-impl</code></p>",
        "id": 195201235,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740741
    },
    {
        "content": "<p>and then T-compiler people should feel free to review such PR's.</p>",
        "id": 195201261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740754
    },
    {
        "content": "<p>(we'll have to see about auto-assignment of the reviews)</p>",
        "id": 195201337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740766
    },
    {
        "content": "<p>Sound okay everyone?</p>",
        "id": 195201370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740785
    },
    {
        "content": "<p>if an implementation PR is assigned to me, who do I reassign to?</p>",
        "id": 195201401,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740794
    },
    {
        "content": "<p>Anyway thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 195201412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740799
    },
    {
        "content": "<p>A summary of the decision points from this meeting would also be very helpful!</p>",
        "id": 195201435,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1587740806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119235\">David Tolnay</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195201401\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195201401\">said</a>:</p>\n<blockquote>\n<p>if an implementation PR is assigned to me, who do I reassign to?</p>\n</blockquote>\n<p>I don't know yet</p>",
        "id": 195201479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587740829
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> I think we should update highfive to not do so, but for now, let's tentatively just say reassign to me perhaps? I can try to help direct it to people (or review it) and we can work with wg-triage to figure that out more precisely</p>",
        "id": 195201551,
        "sender_full_name": "simulacrum",
        "timestamp": 1587740858
    },
    {
        "content": "<p>thanks, sgtm</p>",
        "id": 195201608,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740881
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195194235\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195194235\">said</a>:</p>\n<blockquote>\n<p>would it be ... a nightmare ... to try to rename the team to T-implementation or something?</p>\n</blockquote>\n<p>Let's ask the Rustc Dev Guide WG x)</p>\n<p>(I wanted to do that joke earlier but I didn't want to disrupt the meeting <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)</p>",
        "id": 195201705,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1587740909
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195201109\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020.2E04.2E23.20compiler-team.23267/near/195201109\">said</a>:</p>\n<blockquote>\n<p>Well don't all open issues require implementation work, in some sense?</p>\n</blockquote>\n<p>a tracking issue only sometimes needs implementation work (when a change has been requested by the team, or when FCP is done)</p>",
        "id": 195201729,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740924
    },
    {
        "content": "<p>the rest of the time there's no work to be done beyond collecting experience</p>",
        "id": 195201801,
        "sender_full_name": "David Tolnay",
        "timestamp": 1587740957
    },
    {
        "content": "<p>(Okay I've created the <code>libs-impl</code> label. Feel free to object to my color choice.)</p>",
        "id": 195201959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1587741010
    }
]