[
    {
        "content": "<p>I would like to set many cfg option on rustc. But it fails, as I exceed max argument length. Is there a way to write them in a file, and let rustc read from this file?</p>",
        "id": 212905766,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1602319220
    },
    {
        "content": "<p>The context is this issue, where we try to use the kconfig from linux to build rust conditionally <a href=\"https://github.com/Rust-for-Linux/linux/issues/17\">https://github.com/Rust-for-Linux/linux/issues/17</a></p>",
        "id": 212928347,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1602353911
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"322844\">@Finn Behrens</span> Yes - you can use <code>@file</code> on the command line. See <a href=\"https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/command-line-arguments.md#path-load-command-line-flags-from-a-path\">https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/command-line-arguments.md#path-load-command-line-flags-from-a-path</a></p>",
        "id": 212928465,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1602354062
    },
    {
        "content": "<p>Thanks a lot. Did not find that yet</p>",
        "id": 212928476,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1602354092
    },
    {
        "content": "<p>Would be great if I could also set env variables in this file. But I don't find a flag of rustc to do this.</p>\n<p>The idea is that I can have parameters, which can take a value, and so be read with then env! macro</p>",
        "id": 212933797,
        "sender_full_name": "Finn Behrens",
        "timestamp": 1602362645
    }
]