[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> I'm around if you want someone to bounce ideas off of or have any questions.</p>",
        "id": 212115605,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601665821
    },
    {
        "content": "<p>I left a comment on <a href=\"https://github.com/rust-lang/rust/issues/77382#issuecomment-702908970\">https://github.com/rust-lang/rust/issues/77382#issuecomment-702908970</a> as well.</p>",
        "id": 212116189,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601666081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> thanks! I'm not sure how to better dig into this.</p>",
        "id": 212116488,
        "sender_full_name": "cuviper",
        "timestamp": 1601666251
    },
    {
        "content": "<p>I can try to get that MIR you asked for</p>",
        "id": 212116499,
        "sender_full_name": "cuviper",
        "timestamp": 1601666259
    },
    {
        "content": "<p>For background (you might know some of this already), there's a MIR transformation called <code>ElaborateDrops</code> that adds drop flags to the MIR when necessary, as well as removing drops of locals that are always \"dead\" at that point in the CFG (usually because they have been moved out of).</p>",
        "id": 212116510,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601666264
    },
    {
        "content": "<p>Ah okay, I can get the MIR locally for the code in that stack trace, and it should be the same across platforms (modulo pointer width).</p>",
        "id": 212116658,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601666333
    },
    {
        "content": "<p>I'll try to collect several samples -- the passing 2020-07-05, failed 06, current nightly, and your pr with the flag</p>",
        "id": 212116697,
        "sender_full_name": "cuviper",
        "timestamp": 1601666358
    },
    {
        "content": "<p>would LLVM-IR help?</p>",
        "id": 212116707,
        "sender_full_name": "cuviper",
        "timestamp": 1601666363
    },
    {
        "content": "<p>Yes.</p>",
        "id": 212116726,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601666379
    },
    {
        "content": "<p>Also helpful would be the types that are being <code>drop_in_place</code>-ed in that stack trace so I can dump the MIR for their drop-glue and/or know what I'm looking for in <code>sources</code>. Another thing is that the MIR for <code>&lt;libcoreinst::source::FileLocation as libcoreinst::source::ImageLocation&gt;::sources</code> is too big for me to debug by inspection. Reducing it would be super helpful, but might be kind of hard.</p>",
        "id": 212117095,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601666567
    },
    {
        "content": "<p>ok. it's slow going, because our s390x mainframes are heavily partitioned, but I'll get started</p>",
        "id": 212117160,
        "sender_full_name": "cuviper",
        "timestamp": 1601666611
    },
    {
        "content": "<p>I don't know how much I can reduce it, because it seems pretty sensitive to changes, but I'll see</p>",
        "id": 212117200,
        "sender_full_name": "cuviper",
        "timestamp": 1601666629
    },
    {
        "content": "<p>No worries. I'm just super excited to have an actual chance at fixing this.</p>",
        "id": 212117365,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601666686
    },
    {
        "content": "<p>by inspection, I think the only thing that would be dropping there is <code>io::Error</code></p>",
        "id": 212117598,
        "sender_full_name": "cuviper",
        "timestamp": 1601666786
    },
    {
        "content": "<p>I do get that \"Couldn't read signature file\" output if I run the test <code>--nocapture</code></p>",
        "id": 212117713,
        "sender_full_name": "cuviper",
        "timestamp": 1601666848
    },
    {
        "content": "<p>True. Okay, <code>open</code> should never return the <code>Boxed</code> variant of <code>io::Error</code> AFAICT. I wonder if we're freeing that variant by mistake? That's the only memory access I see along the <code>drop</code> path.</p>",
        "id": 212119802,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601667919
    },
    {
        "content": "<p>or worse, it could be dropping the <code>io::Result</code> along the <code>Ok</code> variant</p>",
        "id": 212120290,
        "sender_full_name": "cuviper",
        "timestamp": 1601668207
    },
    {
        "content": "<p>speculation while compiling... <a href=\"https://xkcd.com/303/\">https://xkcd.com/303/</a></p>",
        "id": 212120303,
        "sender_full_name": "cuviper",
        "timestamp": 1601668218
    },
    {
        "content": "<p>doesn't help that I kicked off multiple builds in parallel, so I don't have to babysit it</p>",
        "id": 212120320,
        "sender_full_name": "cuviper",
        "timestamp": 1601668237
    },
    {
        "content": "<p>I probably should have scripted those in sequence, oh well</p>",
        "id": 212120340,
        "sender_full_name": "cuviper",
        "timestamp": 1601668256
    },
    {
        "content": "<p>I posted those files... let me know if there's any other useful data I can collect right now</p>",
        "id": 212140425,
        "sender_full_name": "cuviper",
        "timestamp": 1601681235
    },
    {
        "content": "<p>I probably won't touch this over the weekend :)</p>",
        "id": 212140432,
        "sender_full_name": "cuviper",
        "timestamp": 1601681244
    }
]