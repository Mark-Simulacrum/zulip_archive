[
    {
        "content": "<p>fresh topic</p>",
        "id": 179539595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534137
    },
    {
        "content": "<p>Some background context from weekly meeting thread</p>\n<blockquote>\n<p>not sure how much background is worth going into here. This has to do with a change to feature gate syntax like <code>box 22</code>, even if that occurs in a <code>#[cfg]</code> syntax. This affects \"stable\" code that used such features conditionally -- the correct way to do so after this PR is to put them in a separate file and use a <code>#[cfg(foo)] mod m;</code> statement</p>\n</blockquote>",
        "id": 179539661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534176
    },
    {
        "content": "<p>But, as we said, this is only partly about the specifics, and more a question of \"general policy\" --</p>",
        "id": 179539715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534208
    },
    {
        "content": "<p>right; one relevant issue (with a significant comment thread) is at <a href=\"https://github.com/rust-lang/rust/issues/65860\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65860\">#65860</a></p>",
        "id": 179539731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534216
    },
    {
        "content": "<p>We don't really know what add'l impact there may be, correct?</p>",
        "id": 179539767,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534238
    },
    {
        "content": "<p>On the one hand, we don't tend to have a knee-jerk \"oh a single user identified a regression; we must revert\"</p>",
        "id": 179539836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534253
    },
    {
        "content": "<p>That said, can I get a complete picture? I believe this PR is currently in nightly, not yet beta, right?</p>",
        "id": 179539846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534261
    },
    {
        "content": "<p>We can get a complete(er) picture, but it would take time -- a crater run and a few try builds</p>",
        "id": 179539870,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534280
    },
    {
        "content": "<p>the PR landed 8 days ago, so yes, I believe its currently in nightly only</p>",
        "id": 179539887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534288
    },
    {
        "content": "<p>I suppose that can be something that affects the revert calculation</p>",
        "id": 179539913,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534304
    },
    {
        "content": "<p>To be clear my primary argument for reverting is _not_ the regression. It is the fact that I expect an RFC (or design meeting or something along those lines) for this change -- at least, some discussion.</p>",
        "id": 179539925,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534309
    },
    {
        "content": "<p>I'm trying to remember if/where this change was discussed. It may have been, I'm not sure (which is perhaps part of the problem)</p>",
        "id": 179540057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534387
    },
    {
        "content": "<p>There are definitely hard technical constraints that may impede other solutions</p>",
        "id": 179540070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534399
    },
    {
        "content": "<blockquote>\n<p>To be clear my primary argument for reverting is _not_ the regression. It is the fact that I expect an RFC (or design meeting or something along those lines) for this change -- at least, some discussion.</p>\n</blockquote>\n<p>but what is the criteria you are using, besides the regression, to determine that there should have been a design meeting or discussion?</p>",
        "id": 179540114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534424
    },
    {
        "content": "<p>that is, I think it is the <em>coupling</em> of the two factors that leads one to consider reverting the change</p>",
        "id": 179540136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534439
    },
    {
        "content": "<p>I would expect an RFC to <em>not</em> pre-expansion gate --- taking away pre-expansion gating is easy; putting it back for (at least new stuff) is hard</p>",
        "id": 179540182,
        "sender_full_name": "centril",
        "timestamp": 1572534472
    },
    {
        "content": "<p>It seems clear that we need some solution</p>",
        "id": 179540276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534500
    },
    {
        "content": "<p>But the point is that an RFC would discuss what solution we want, and document why we want it</p>",
        "id": 179540325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534520
    },
    {
        "content": "<p>I agree that we need some solution. I feel like there are multiple options. This is a breaking change (even if allowed by a strict interpretation of our stability rules).</p>",
        "id": 179540331,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534522
    },
    {
        "content": "<blockquote>\n<p>I would expect an RFC to <em>not</em> pre-expansion gate --- taking away pre-expansion gating is easy; putting it back for (at least new stuff) is hard</p>\n</blockquote>\n<p>What is the reasoning here? Is the argument that the prior behavior was an accidental implementation artifact?</p>",
        "id": 179540382,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534548
    },
    {
        "content": "<p>On the other hand, it is clear that we make changes of this magnitude without RFCs -- though I'm not sure that's good</p>",
        "id": 179540383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534548
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yes, and we are pre-expansion gating all new features</p>",
        "id": 179540431,
        "sender_full_name": "centril",
        "timestamp": 1572534571
    },
    {
        "content": "<p>So to be clear I don't really care too much if this is a full fledged RFC, but at least <em>some</em> discussion and summary of alternatives would be good IMO</p>",
        "id": 179540449,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534582
    },
    {
        "content": "<p>AFAIK, that discussion has not happened (or, at least, it was not had in sufficient publicity)</p>",
        "id": 179540524,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534604
    },
    {
        "content": "<blockquote>\n<p>What is the reasoning here? Is the argument that the prior behavior was an accidental implementation artifact?</p>\n</blockquote>\n<p>I do think this is \"true\" -- of course, one that dates <em>way</em> back. But it's not like we intended to stabilize unstable syntax. :) We made efforts to avoid that with macros, which were only partly successfully, and overlooked this similar case.</p>",
        "id": 179540616,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534650
    },
    {
        "content": "<p>true, and we basically decided we couldn't afford to fix <code>macro_rules!</code> 100%</p>",
        "id": 179540689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534685
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> there are for example comments of yours in 2018 that we should have done pre-expansion gating and that we should do it on new stuff</p>",
        "id": 179540729,
        "sender_full_name": "centril",
        "timestamp": 1572534701
    },
    {
        "content": "<p>At the same time, I don't see how that makes RFCs (or other forms of discussion documents) inapplicable</p>",
        "id": 179540732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534704
    },
    {
        "content": "<p>can I get a clarification about \"new stuff\" ?</p>",
        "id": 179540805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534725
    },
    {
        "content": "<p>because I am getting impression that this change has affected old stuff</p>",
        "id": 179540829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534739
    },
    {
        "content": "<p>e.g. or patterns I believe</p>",
        "id": 179540832,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534740
    },
    {
        "content": "<p>those were gated upon landing</p>",
        "id": 179540847,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> new <code>active</code> feature gates; everything new for some months has been pre-expansion gated</p>",
        "id": 179540854,
        "sender_full_name": "centril",
        "timestamp": 1572534752
    },
    {
        "content": "<p>but maybe I misunderstand <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> 's complaint?</p>",
        "id": 179540861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534754
    },
    {
        "content": "<p>I think that's the change here -- it was extended to old stuff.</p>",
        "id": 179540863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534756
    },
    {
        "content": "<p>this specific issue is about gating old (but still unstable) syntax, e.g. box patterns, type ascription</p>",
        "id": 179540872,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534762
    },
    {
        "content": "<p>okay, so using a better technology to gate new stuff sounds great and its what we're doing and should be fine</p>",
        "id": 179540927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534799
    },
    {
        "content": "<p>yes, based on crater -- we didn't gate some of the old stuff where the regressions were too high</p>",
        "id": 179540930,
        "sender_full_name": "centril",
        "timestamp": 1572534802
    },
    {
        "content": "<p>and the question is then about when/if to extend the new gating system to apply it to the old stuff</p>",
        "id": 179540946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534812
    },
    {
        "content": "<p>Is that correct so far?</p>",
        "id": 179540954,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534817
    },
    {
        "content": "<p>My problem is that the specific form of gating seems not-perfect, globally</p>",
        "id": 179540976,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534825
    },
    {
        "content": "<p>not just for new stuff, but also for old things</p>",
        "id": 179540992,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534833
    },
    {
        "content": "<blockquote>\n<p>yes, based on crater -- we didn't gate some of the old stuff where the regressions were too high</p>\n</blockquote>\n<p>this is good, I was not aware of this</p>",
        "id": 179540994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  I think there's a point of view here that new stuff shouldn't be pre-expansion feature gated either</p>",
        "id": 179541046,
        "sender_full_name": "centril",
        "timestamp": 1572534843
    },
    {
        "content": "<p>mm I don't think so, but I think there's a view that we can find a better fix than the current one</p>",
        "id": 179541104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534875
    },
    {
        "content": "<p>because the inline attribute <code>#![cfg_blah_whatever(..)]</code> coding pattern just stops working for that new stuff ?</p>",
        "id": 179541110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572534877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> right; well -- Vadim's <code>delay_parsing!</code> macro sorta hacks back an inline approach</p>",
        "id": 179541164,
        "sender_full_name": "centril",
        "timestamp": 1572534908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  I know that is not <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>'s view, I think it's Ralf's view</p>",
        "id": 179541214,
        "sender_full_name": "centril",
        "timestamp": 1572534937
    },
    {
        "content": "<p>or at least that's the sense I get</p>",
        "id": 179541233,
        "sender_full_name": "centril",
        "timestamp": 1572534946
    },
    {
        "content": "<p>That is not my sense of Ralf's view.</p>",
        "id": 179541247,
        "sender_full_name": "simulacrum",
        "timestamp": 1572534954
    },
    {
        "content": "<p>I mean I don't think Ralf is saying \"we should implicitly stabilize new unstable syntax\"</p>",
        "id": 179541258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534959
    },
    {
        "content": "<p>but I think Ralf <em>is</em> saying that the current fix is crude</p>",
        "id": 179541324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572534973
    },
    {
        "content": "<p>and that having to isolate unstable syntax  into separate files is surprising and a pain, and a breaking change in practice</p>",
        "id": 179541373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535001
    },
    {
        "content": "<p>well again; <code>delay_parse!</code> <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 179541392,
        "sender_full_name": "centril",
        "timestamp": 1572535015
    },
    {
        "content": "<p>put it in the standard library, and you even have a \"documented solution with all the explanation of why\"</p>",
        "id": 179541416,
        "sender_full_name": "centril",
        "timestamp": 1572535037
    },
    {
        "content": "<p>(of course, that's for t-libs to decide...)</p>",
        "id": 179541429,
        "sender_full_name": "centril",
        "timestamp": 1572535046
    },
    {
        "content": "<p>I think, for me, it comes down to there being alternative implementation strategies (with other downsides, of course, doesn't seem like there is a 100% win solution, or we don't know about it) -- but we have not explored those, and have not discussed them</p>",
        "id": 179541435,
        "sender_full_name": "simulacrum",
        "timestamp": 1572535048
    },
    {
        "content": "<p>or at least I have not seen evidence of exploration or discussion</p>",
        "id": 179541450,
        "sender_full_name": "simulacrum",
        "timestamp": 1572535064
    },
    {
        "content": "<p>I think there has probably been discussion but it's been spread out in time and informal</p>",
        "id": 179541532,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I actually looked at the code for the <code>tt</code> idea -- it looked... complicated to me</p>",
        "id": 179541538,
        "sender_full_name": "centril",
        "timestamp": 1572535104
    },
    {
        "content": "<blockquote>\n<p>I think there has probably been discussion but it's been spread out in time and informal</p>\n</blockquote>\n<p>I would at least like a summary -- this is sort of what RFCs are for :)</p>",
        "id": 179541579,
        "sender_full_name": "simulacrum",
        "timestamp": 1572535132
    },
    {
        "content": "<p>e.g. it is good to know that crater was used to guide the set of old syntaxes we could gate; in an ideal world we'd have a documented plan saying that we are doing this, with a checklist, etc -- kind of like with NLL</p>",
        "id": 179541605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535150
    },
    {
        "content": "<p>but, regardless, even if the alternatives have downsides that are too big for us to allow, it does seem... like we should know that</p>",
        "id": 179541611,
        "sender_full_name": "simulacrum",
        "timestamp": 1572535154
    },
    {
        "content": "<p>and I also trust Petrochenkov's judgement on libsyntax a whole lot on this, and it jives with my own</p>",
        "id": 179541633,
        "sender_full_name": "centril",
        "timestamp": 1572535176
    },
    {
        "content": "<p>/me needs to step away from keyboard for a while; I will try to review the thread later.</p>",
        "id": 179541670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572535201
    },
    {
        "content": "<p>So let's step back a second, I think that getting into the altneratives in detail in this thread is beside the point</p>",
        "id": 179541762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535236
    },
    {
        "content": "<p>right, yeah</p>",
        "id": 179541776,
        "sender_full_name": "simulacrum",
        "timestamp": 1572535244
    },
    {
        "content": "<p>Having <a href=\"https://github.com/rust-lang/rust/pull/65974\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65974\">https://github.com/rust-lang/rust/pull/65974</a> also means that one entire class of \"crude\"-ness goes away</p>",
        "id": 179541779,
        "sender_full_name": "centril",
        "timestamp": 1572535246
    },
    {
        "content": "<p>(it's basically only <code>#[cfg]</code> and the transcriber side at this point)</p>",
        "id": 179541838,
        "sender_full_name": "centril",
        "timestamp": 1572535276
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> feels is that this change should get broader discussion and documentation -- I'm not 100% sure if that requires backing out.</p>",
        "id": 179541955,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535329
    },
    {
        "content": "<p>I'm not sure -- to me, it feels like we should not be landing changes which break code without a discussion and summary of alternatives. Whether that happens informally or not, I don't care too much, although I think I would prefer an RFC.</p>",
        "id": 179541970,
        "sender_full_name": "simulacrum",
        "timestamp": 1572535338
    },
    {
        "content": "<p>it sort of backs up the point <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> in its own way, as I don't really understand what that PR is doing :)</p>",
        "id": 179541974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535341
    },
    {
        "content": "<p>was there an FCP here?</p>",
        "id": 179542025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535372
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  pretty easy to explain: if a macro-matcher fails, throw away all the pre-expansion gating done in it</p>",
        "id": 179542057,
        "sender_full_name": "centril",
        "timestamp": 1572535392
    },
    {
        "content": "<p>we obviously do land name resolution changes often that are kind of \"just PRs\", but there is usually lang team check-off -- even if I think none of us are super happy with the amount of documentation and formality there</p>",
        "id": 179542059,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535394
    },
    {
        "content": "<p>(to be clear, not blaming <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> at all there! so happy they do what they do :)</p>",
        "id": 179542111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535426
    },
    {
        "content": "<p>FCPs for confirming that we want to fix bugs seems strange in general -- it should take the agreement of the whole team <em>not</em> to fix them, not the agreement of the team <em>to</em> fix them</p>",
        "id": 179542296,
        "sender_full_name": "centril",
        "timestamp": 1572535502
    },
    {
        "content": "<p>otherwise we have bad defaults in terms of soundness and whatnot</p>",
        "id": 179542325,
        "sender_full_name": "centril",
        "timestamp": 1572535513
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> this is not about \"fixing bugs\" or not, it's about practical impact</p>",
        "id": 179542367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535538
    },
    {
        "content": "<p>like I think we all agree we want to fix this bug</p>",
        "id": 179542387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> well let's focus on the practical impact; let's revert as needed based on data, going back to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s point about knee-jerk reactions</p>",
        "id": 179542469,
        "sender_full_name": "centril",
        "timestamp": 1572535586
    },
    {
        "content": "<p>and let's revert <em>specific gates</em> as needed</p>",
        "id": 179542489,
        "sender_full_name": "centril",
        "timestamp": 1572535598
    },
    {
        "content": "<p>and again, let the reviewer judge the practical impact</p>",
        "id": 179542529,
        "sender_full_name": "centril",
        "timestamp": 1572535622
    },
    {
        "content": "<p>I'm trying to decide my reaction here:)</p>",
        "id": 179542738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535721
    },
    {
        "content": "<p>take your time :P</p>",
        "id": 179542757,
        "sender_full_name": "centril",
        "timestamp": 1572535734
    },
    {
        "content": "<p>take a look at the <a href=\"https://forge.rust-lang.org/compiler/bug-fix-procedure.html\" target=\"_blank\" title=\"https://forge.rust-lang.org/compiler/bug-fix-procedure.html\">bug fix procedure</a></p>",
        "id": 179542917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535816
    },
    {
        "content": "<p>it mentions some specifics</p>",
        "id": 179542929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535826
    },
    {
        "content": "<p>for example:</p>\n<blockquote>\n<p>Every breaking change should be accompanied by a dedicated tracking issue for that change. The main text of this issue should describe the change being made, with a focus on what users must do to fix their code. The issue should be approachable and practical; it may make sense to direct users to an RFC or some other issue for the full details. The issue also serves as a place where users can comment with questions or other concerns.</p>\n</blockquote>",
        "id": 179542940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535832
    },
    {
        "content": "<p>it also says things like:</p>\n<blockquote>\n<p>Changes that are believed to have negligible impact can go directly to issuing an error. </p>\n</blockquote>\n<p>and advises breaking up changes into smaller parts (which I believe is the strategy being used here)</p>",
        "id": 179543014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535894
    },
    {
        "content": "<p>This procedure is what we use when we file C-future-compatibility issues that are linked to inside the compiler</p>",
        "id": 179543017,
        "sender_full_name": "centril",
        "timestamp": 1572535896
    },
    {
        "content": "<p>this procedure is what we use when we fix compiler bugs that affect existing code</p>",
        "id": 179543031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535909
    },
    {
        "content": "<p>it has nothing to do with C-xxx labels?</p>",
        "id": 179543085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535927
    },
    {
        "content": "<blockquote>\n<p>From time to time, we encounter the need to make a bug fix, soundness correction, or other change in the compiler which will cause existing code to stop compiling.</p>\n</blockquote>",
        "id": 179543099,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535937
    },
    {
        "content": "<p>we may not be perfectly consistent, but I think it expresses the values we are shooting for</p>",
        "id": 179543108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535946
    },
    {
        "content": "<p>anyway, the point that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> raised is more about how the decision to go forward was made in the first place</p>",
        "id": 179543120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572535963
    },
    {
        "content": "<p>huh; it describes the procedure for C-future-compatibility</p>",
        "id": 179543122,
        "sender_full_name": "centril",
        "timestamp": 1572535966
    },
    {
        "content": "<p>I mean I don't even know that that label means</p>",
        "id": 179543174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536008
    },
    {
        "content": "<p>:)</p>",
        "id": 179543176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536010
    },
    {
        "content": "<p>it describes the procedure for all bugs, indicating that if we do experience practical changes to end user code, we should likely file a tracking issue (which would indeed be tagged as C-future-compat)</p>",
        "id": 179543195,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536025
    },
    {
        "content": "<p>I think this is how I feel: I think this change has been made in a reasonable and responsible way overall, but corners were cut. Ther'es nothing implicitly wrong with that. We do it a lot, when we judge things will work out well, but it's always a kind of risk that somebody feels surprised or the impact is greater. In such cases, I think it is good for us to back rapidly off and \"re-approach\" -- even if the end result will be the same.</p>",
        "id": 179543274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536061
    },
    {
        "content": "<p>Making an issue for soft-gating pre-expansion and hard-gating post-expansion will be quite hard technically; and without doing that we don't actually have an issue to point to people in warning message; that seems rather useless -- no one is going to find said issue</p>",
        "id": 179543277,
        "sender_full_name": "centril",
        "timestamp": 1572536063
    },
    {
        "content": "<p>I also feel pushing hard back in response to complaints kind of pushes towards needing more process overall</p>",
        "id": 179543308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536088
    },
    {
        "content": "<p>Because part of how we can get by with less process is by responding kindly to objections</p>",
        "id": 179543328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536100
    },
    {
        "content": "<p>All of that said, I don't know that we need a full RFC here -- but it would be appropriate I think to document the plan, what it means for end-users -- I think <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is correct that the potential, complete impact of this change is large</p>",
        "id": 179543503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536196
    },
    {
        "content": "<p>we probably should've done that way back</p>",
        "id": 179543518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536206
    },
    {
        "content": "<p>but basically there's a \"best practice\" here for releasing crates that mix stable and unstable syntax, right?</p>",
        "id": 179543555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536227
    },
    {
        "content": "<p>(using modues)</p>",
        "id": 179543569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536232
    },
    {
        "content": "<p>yes, or <code>delay_parse!</code> if one objects to having several files</p>",
        "id": 179543580,
        "sender_full_name": "centril",
        "timestamp": 1572536246
    },
    {
        "content": "<p>that is a solution that has a lot going for it, given the internal architecture of the compiler, but basically the core decision here was to adopt that as the way forward, and then phase it in gradually</p>",
        "id": 179543596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536262
    },
    {
        "content": "<p>well, so that best practice is what <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> has been suggesting -- I personally would find it deeply wrong to make that a best practice</p>",
        "id": 179543604,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536267
    },
    {
        "content": "<p>(or at least am unconvinced at this point that we should recommend it)</p>",
        "id": 179543625,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536285
    },
    {
        "content": "<p>that's the point I think :) we've implicitly adopted that, and it has <del>big</del> medium implications, but there wasn't much conversation about it. Sometimes we get away with that, but sometimes we don't.</p>",
        "id": 179543710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536319
    },
    {
        "content": "<p>one alternative is allowing <em>more</em> in <code>#[cfg]</code>-out code, i.e. not properly parsing the contents (anything nested in <code>(...)</code>, <code>[...]</code>, or <code>{...}</code>)</p>",
        "id": 179543732,
        "sender_full_name": "eddyb",
        "timestamp": 1572536337
    },
    {
        "content": "<p>(yes, this is what I was trying to say on thread about <code>$tt</code>)</p>",
        "id": 179543758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> y'all will need to explain that to me; are you talking about laziness on the lexer level?</p>",
        "id": 179543767,
        "sender_full_name": "centril",
        "timestamp": 1572536372
    },
    {
        "content": "<p>(hold on, let's not lose the focus :)</p>",
        "id": 179543781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536380
    },
    {
        "content": "<p>(Yes, I think we know that there are at least possible alternatives, we should not discuss them just now)</p>",
        "id": 179543806,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536401
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> token trees are properly nested, so you can lex but not parse certain things if you don't want to</p>",
        "id": 179543863,
        "sender_full_name": "eddyb",
        "timestamp": 1572536413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> that also means we cannot look-ahead into <code>{</code> blocks, no?</p>",
        "id": 179543913,
        "sender_full_name": "centril",
        "timestamp": 1572536448
    },
    {
        "content": "<p>anyway if fallout wasn't properly investigated in the PR, that's reason enough for reverting and reconsidering</p>",
        "id": 179543939,
        "sender_full_name": "eddyb",
        "timestamp": 1572536478
    },
    {
        "content": "<p>Can we not discuss specific alternatives please? I don't want to get derailed :)</p>",
        "id": 179543954,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536495
    },
    {
        "content": "<p>I was led to believe, in the issue comments, that crater was used and the results were favorable, but that appears to not be the case?</p>",
        "id": 179544043,
        "sender_full_name": "eddyb",
        "timestamp": 1572536530
    },
    {
        "content": "<p>that is the case.</p>",
        "id": 179544053,
        "sender_full_name": "centril",
        "timestamp": 1572536539
    },
    {
        "content": "<blockquote>\n<p>anyway if fallout wasn't properly investigated in the PR, that's reason enough for reverting and reconsidering</p>\n</blockquote>\n<p>one thing I do think is that we should use an expedited process to \"reconsider\"</p>",
        "id": 179544054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536540
    },
    {
        "content": "<p>e.g., schedule a specific meeting to go over the alternatives and their pros/cons</p>",
        "id": 179544067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536553
    },
    {
        "content": "<p>And reverting makes it harder to e.g. land <a href=\"https://github.com/rust-lang/rust/pull/65974\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65974\">https://github.com/rust-lang/rust/pull/65974</a></p>",
        "id": 179544097,
        "sender_full_name": "centril",
        "timestamp": 1572536571
    },
    {
        "content": "<p>we could steal tomorrow's slot, but that might not be a good idea idk</p>",
        "id": 179544117,
        "sender_full_name": "eddyb",
        "timestamp": 1572536582
    },
    {
        "content": "<p>I am fine with that, and am willing to try and make time to help out with such an effort...</p>",
        "id": 179544129,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536586
    },
    {
        "content": "<blockquote>\n<p>we could steal tomorrow's slot, but that might not be a good idea idk</p>\n</blockquote>\n<p>I'd probably say just schedule a one-off thing next week?</p>",
        "id": 179544154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536602
    },
    {
        "content": "<p>I think we need a bit of prep work which would not be ready for tomorrow (but maybe next, or next next Friday)</p>",
        "id": 179544162,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536605
    },
    {
        "content": "<p>I don't want to pre-empt tomorrow's discussion, which has been a long time coming too</p>",
        "id": 179544173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536612
    },
    {
        "content": "<p>Although I forget what we're discussing next week, that could maybe work</p>",
        "id": 179544188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> is there a \"lightway\" way to revert?</p>",
        "id": 179544208,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536634
    },
    {
        "content": "<blockquote>\n<p>well, so that best practice is what @centril has been suggesting -- I personally would find it deeply wrong to make that a best practice</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  It sounds like you are saying that pre-expansion gating shouldn't happen for new stuff either until we make changes</p>",
        "id": 179544210,
        "sender_full_name": "centril",
        "timestamp": 1572536636
    },
    {
        "content": "<p>if we revert, I prefer we do so before beta branches, so we have a full cycle to test out whatever ends up landing</p>",
        "id": 179544258,
        "sender_full_name": "eddyb",
        "timestamp": 1572536646
    },
    {
        "content": "<p>(I didn't look at the PR, but I don't know if there's a way to keep most of the code intact but just disable some specific cases)</p>",
        "id": 179544289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536669
    },
    {
        "content": "<blockquote>\n<p>if we revert, I prefer we do so before beta branches, so we have a full cycle to test out whatever ends up landing</p>\n</blockquote>\n<p>this is another point</p>",
        "id": 179544301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536674
    },
    {
        "content": "<p>I feel like the ideal time for this change to land would be just <em>after</em> beta branches :)</p>",
        "id": 179544322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536692
    },
    {
        "content": "<p>we could maybe do a weird revert where we add the old logic back but don't delete the duplicate one that runs earlier</p>",
        "id": 179544353,
        "sender_full_name": "eddyb",
        "timestamp": 1572536703
    },
    {
        "content": "<p>This is why I've been pushing somewhat hard on this, I would like to land early in the cycle if we do land.</p>",
        "id": 179544357,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536705
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> the pre-expansion PR consists of moving individual PRs to pre-expansion gating in different commits</p>",
        "id": 179544385,
        "sender_full_name": "centril",
        "timestamp": 1572536719
    },
    {
        "content": "<p>and either silence, or turn into warnings, the new earlier errors</p>",
        "id": 179544392,
        "sender_full_name": "eddyb",
        "timestamp": 1572536726
    },
    {
        "content": "<p>(oh also, it fixes a syntax bug)</p>",
        "id": 179544397,
        "sender_full_name": "centril",
        "timestamp": 1572536728
    },
    {
        "content": "<p>I think we should do beta crater runs and backport fixes as needed</p>",
        "id": 179544506,
        "sender_full_name": "centril",
        "timestamp": 1572536767
    },
    {
        "content": "<p>that shouldn't be too hard and I can commit to doing so myself</p>",
        "id": 179544539,
        "sender_full_name": "centril",
        "timestamp": 1572536784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span>, could you elaborate more on why you're against trying to proceed more carefully here?</p>",
        "id": 179544566,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> if you like my plan I could spend a few hours trying it out</p>",
        "id": 179544582,
        "sender_full_name": "eddyb",
        "timestamp": 1572536805
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> idk why this is proceeding less carefully?</p>",
        "id": 179544596,
        "sender_full_name": "centril",
        "timestamp": 1572536815
    },
    {
        "content": "<p>....it seems clear that keeping the change in is less careful than backing it out and discussing before putting it back in?</p>",
        "id": 179544624,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536834
    },
    {
        "content": "<p>The end result seems the same: if we find too high regression counts on beta we revert those gates</p>",
        "id": 179544687,
        "sender_full_name": "centril",
        "timestamp": 1572536877
    },
    {
        "content": "<p>it seems clear that we prefer not to muck with beta</p>",
        "id": 179544823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572536950
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> after the matcher PR lands, we could do a \"beta\" crater run</p>",
        "id": 179544864,
        "sender_full_name": "centril",
        "timestamp": 1572536975
    },
    {
        "content": "<p>I think it's not about the destination, it's about the path. I would definitely find it less stressful to back this out and not need to worry about tracking bugfixes into beta, etc</p>",
        "id": 179544867,
        "sender_full_name": "simulacrum",
        "timestamp": 1572536976
    },
    {
        "content": "<p>(and here I thought setting up zulip notifications every time someone said \"crater\" was a good idea <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)</p>",
        "id": 179544977,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1572537011
    },
    {
        "content": "<p>the pre-expansion gating reaching beta would be a headache to deal with</p>",
        "id": 179544992,
        "sender_full_name": "eddyb",
        "timestamp": 1572537020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> wow you can do that?!</p>",
        "id": 179545016,
        "sender_full_name": "eddyb",
        "timestamp": 1572537030
    },
    {
        "content": "<p>(I just discovered that feature recently myself)</p>",
        "id": 179545044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537046
    },
    {
        "content": "<blockquote>\n<p>I think it's not about the destination, it's about the path. I would definitely find it less stressful to back this out and not need to worry about tracking bugfixes into beta, etc</p>\n</blockquote>\n<p>well put</p>",
        "id": 179545048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537050
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  huh? these are trivial reverts to make</p>",
        "id": 179545053,
        "sender_full_name": "centril",
        "timestamp": 1572537051
    },
    {
        "content": "<p>If they are trivial, then why not do them now?</p>",
        "id": 179545069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537061
    },
    {
        "content": "<p>I feel like we're all working pretty hard to be reasonable here, quite frankly, and it's frustrating to me that you're not listening.</p>",
        "id": 179545096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537077
    },
    {
        "content": "<p>in fact, we need beta crater runs to check if the previous crater run is wrong</p>",
        "id": 179545104,
        "sender_full_name": "centril",
        "timestamp": 1572537081
    },
    {
        "content": "<p>just compile the compiler as non-nightly?</p>",
        "id": 179545142,
        "sender_full_name": "eddyb",
        "timestamp": 1572537106
    },
    {
        "content": "<p>you don't need it to be a real beta, you can do this with a try build</p>",
        "id": 179545159,
        "sender_full_name": "eddyb",
        "timestamp": 1572537117
    },
    {
        "content": "<p>it's... somewhere in the codebase, I can look for it if you want</p>",
        "id": 179545218,
        "sender_full_name": "eddyb",
        "timestamp": 1572537132
    },
    {
        "content": "<p>(assuming you want <code>#![feature]</code> to be disabled)</p>",
        "id": 179545263,
        "sender_full_name": "eddyb",
        "timestamp": 1572537151
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  from my perspective it feels like this: we did a crater run; I spent a whole lot of time investigating <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>s report, a PR was filed to fix the matcher issue -- I think some of the data exists, so why are we ignoring the crater run?</p>",
        "id": 179545328,
        "sender_full_name": "centril",
        "timestamp": 1572537186
    },
    {
        "content": "<p>Fair. I think the answer is that most of us didn't really understand the full implications, and we'd like to review the options.</p>",
        "id": 179545376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537220
    },
    {
        "content": "<p>(I <em>do</em> think a beta crater run is a good idea though! I'd prefer to have that data on hand when having the discussion.)</p>",
        "id": 179545452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537247
    },
    {
        "content": "<p>That plus:</p>",
        "id": 179545459,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537252
    },
    {
        "content": "<p>It's better to make this change as early in cycle as possible regardless</p>",
        "id": 179545485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537260
    },
    {
        "content": "<p>I feel like we're quite likely going to do this change -- and I am not even trying to imply you handled it irresponsibly, quite the opposite.</p>",
        "id": 179545519,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537298
    },
    {
        "content": "<p>(Though I do think there are viable alternatives)</p>",
        "id": 179545539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537310
    },
    {
        "content": "<p>But some of us at least find having things on beta that we don't plan to ship stressful :)</p>",
        "id": 179545554,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537321
    },
    {
        "content": "<p>(I think those viable alternatives need to be presented as PRs to be believable)</p>",
        "id": 179545565,
        "sender_full_name": "centril",
        "timestamp": 1572537331
    },
    {
        "content": "<p>I don't think that's a reasonable attitude.</p>",
        "id": 179545599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537360
    },
    {
        "content": "<p>I agree with that as well, I think the process here was fine, but now that we have a few people who have -- IMO reasonable, but I am somewhat biased -- concerns, we should tend towards proceeding carefully, which to me means reverting the PR and waiting on that discussion to happen.</p>",
        "id": 179545647,
        "sender_full_name": "simulacrum",
        "timestamp": 1572537370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  are you objecting to pre-expansion gating new things?</p>",
        "id": 179545679,
        "sender_full_name": "centril",
        "timestamp": 1572537398
    },
    {
        "content": "<blockquote>\n<p>I don't think that's a reasonable attitude.</p>\n</blockquote>\n<p>to be clear, I don't mean that impl concerns don't matter, I just mean the fact that we don't have any PRs yet isn't evidence of anything.</p>",
        "id": 179545689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537403
    },
    {
        "content": "<p>I already have two things I'm tangentially involved in to worry about on beta (promotion/const-checking changes and caller_location), a third is too much stress, to the point where I'd rather help out on this just for the peace of mind</p>",
        "id": 179545694,
        "sender_full_name": "eddyb",
        "timestamp": 1572537409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm just looking at the actual code and matching that up with the <code>tt</code> idea and it does not seem realistic to me</p>",
        "id": 179545731,
        "sender_full_name": "centril",
        "timestamp": 1572537442
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I don't think anyone is proposing to back that out -- though I think that if we decide to take another approach, it would apply equally to new syntax.</p>",
        "id": 179545734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537445
    },
    {
        "content": "<p>but new syntax has no users yet</p>",
        "id": 179545742,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537451
    },
    {
        "content": "<p>so if we pre-expansion gate it while adding, that seems fine</p>",
        "id": 179545758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537464
    },
    {
        "content": "<p>(and of course in the fullness of time, we should use the same approach for all unstable syntax)</p>",
        "id": 179545765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  does ^-- reflect your view?</p>",
        "id": 179545815,
        "sender_full_name": "centril",
        "timestamp": 1572537487
    },
    {
        "content": "<p>seems so <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 179545819,
        "sender_full_name": "centril",
        "timestamp": 1572537493
    },
    {
        "content": "<p>I think, yes. But I will say that I have not had the time to fully think about this... this is at least part of why I would like for us to proceed less quickly</p>",
        "id": 179545848,
        "sender_full_name": "simulacrum",
        "timestamp": 1572537517
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  if you want to revert the PR (partially; the syntax bug needs to be fixed), that's fair; I will rebase my matcher PR to remove the newer pre-expansion gates -- can you run the \"beta\" crater stuff?</p>",
        "id": 179546071,
        "sender_full_name": "centril",
        "timestamp": 1572537651
    },
    {
        "content": "<p>I am unclear as to exactly what I am agreeing to. I can help run crater on some PR in a beta-esque fashion, but I do not know if I have the ability/time to dig into the code and figure out exactly what we should be running crater on.</p>\n<p>I am also unclear -- are you on board with a revert?</p>",
        "id": 179546211,
        "sender_full_name": "simulacrum",
        "timestamp": 1572537740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> my understanding is that we would test the same PR with crater but without it being a nightly compiler</p>",
        "id": 179546314,
        "sender_full_name": "centril",
        "timestamp": 1572537809
    },
    {
        "content": "<blockquote>\n<p>I am also unclear -- are you on board with a revert?</p>\n</blockquote>\n<p>Yes, but like everyone else, I have other PRs and work I need to do</p>",
        "id": 179546408,
        "sender_full_name": "centril",
        "timestamp": 1572537845
    },
    {
        "content": "<p>I think being cautious here and reverting the change (for now) helps users trust the stability of Rust because they can see that even if we're allowed to fix something that causes small breakages, we'll do so carefully. That trust is really valuable especially if (when) we need to make backwards-incompatible changes to resolve issues which affect larger parts of the ecosystem.</p>",
        "id": 179546417,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1572537853
    },
    {
        "content": "<p>(Yes, I think this is important too.)</p>",
        "id": 179546463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572537886
    },
    {
        "content": "<p>Okay -- I can put myself on the hook to put up a full revert, but since I don't know about the syntax bug you're referring to, I would need to dig in to the specific PR and try to figure things out.</p>",
        "id": 179546474,
        "sender_full_name": "simulacrum",
        "timestamp": 1572537901
    },
    {
        "content": "<p>I don't think I have the time to do that.</p>",
        "id": 179546496,
        "sender_full_name": "simulacrum",
        "timestamp": 1572537911
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> like I said, I can spend a few hours on a straight-forward revert, or one that doesn't kill the new code entirely (we could put it behind a feature-flag, turn it into  an error, etc.)</p>",
        "id": 179546530,
        "sender_full_name": "eddyb",
        "timestamp": 1572537939
    },
    {
        "content": "<p>I just need a confirmation that we're doing this</p>",
        "id": 179546572,
        "sender_full_name": "eddyb",
        "timestamp": 1572537957
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <a href=\"https://github.com/rust-lang/rust/pull/65742/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65742/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7\">https://github.com/rust-lang/rust/pull/65742/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7</a> needs to stay</p>",
        "id": 179546598,
        "sender_full_name": "centril",
        "timestamp": 1572537963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> are you talking about soft-gating the pre-expansion?</p>",
        "id": 179546690,
        "sender_full_name": "centril",
        "timestamp": 1572538009
    },
    {
        "content": "<p>OK, I have to go, I've skipped a meeting already and have to catch up with that now :)</p>",
        "id": 179546801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572538082
    },
    {
        "content": "<p>maybe? not sure what \"soft\" means in this context. I am mostly talking about keeping the new code around (just not with the errors it produces today) if that's desireable</p>",
        "id": 179546802,
        "sender_full_name": "eddyb",
        "timestamp": 1572538083
    },
    {
        "content": "<p>tests, too</p>",
        "id": 179546857,
        "sender_full_name": "eddyb",
        "timestamp": 1572538095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> got it :)</p>",
        "id": 179546892,
        "sender_full_name": "eddyb",
        "timestamp": 1572538121
    },
    {
        "content": "<p>I don't think that's useful</p>",
        "id": 179546893,
        "sender_full_name": "centril",
        "timestamp": 1572538122
    },
    {
        "content": "<p>I'm good with anything that stops the errors, I think a \"less disruptive\" PR seems fine, as long as it's not too much work</p>",
        "id": 179546897,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572538123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  soft means warnings for pre-expansion</p>",
        "id": 179546964,
        "sender_full_name": "centril",
        "timestamp": 1572538149
    },
    {
        "content": "<p>oops; <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> ^</p>",
        "id": 179546975,
        "sender_full_name": "centril",
        "timestamp": 1572538155
    },
    {
        "content": "<p>+ you also need hard gating for post-expansion</p>",
        "id": 179546990,
        "sender_full_name": "centril",
        "timestamp": 1572538166
    },
    {
        "content": "<p>but that work would be premature</p>",
        "id": 179547002,
        "sender_full_name": "centril",
        "timestamp": 1572538176
    },
    {
        "content": "<p>brb for a bt</p>",
        "id": 179547025,
        "sender_full_name": "centril",
        "timestamp": 1572538199
    },
    {
        "content": "<p>like a future-compatibility warning? I could live with that, though I think a straight revert would be easier -- the follow-up work would be delayed of course. If we do it, we'd need an issue documenting a bit what's going on etc. I guess it feels a bit like putting the cart before the horse.</p>",
        "id": 179547265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572538338
    },
    {
        "content": "<p>but I wouldn't stand in the way</p>",
        "id": 179547314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572538370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  a future compat warning isn't easy to do here</p>",
        "id": 179547773,
        "sender_full_name": "centril",
        "timestamp": 1572538698
    },
    {
        "content": "<p>well maybe not all that difficult; you mark spans with whether you are in expansion or not when parsing, then partition the set based on those; finally you warn/error based on those</p>",
        "id": 179548075,
        "sender_full_name": "centril",
        "timestamp": 1572538886
    },
    {
        "content": "<p>but it's a waste of effort; we should first check crater runs before adding hacks to the compiler</p>",
        "id": 179548158,
        "sender_full_name": "centril",
        "timestamp": 1572538924
    },
    {
        "content": "<p>So to circle up a bit here -- it sounds like <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> is going to try and get a PR going that reverts this change in some loose form (maybe fully, or perhaps in a softer way). Then we should try and pencil in a meeting next week to talk about this change and get a path forward, before which we would like to have a document with a beta-esque crater regression report (that has been triaged) and some document summarizing the current PR's rationale and decisions made and possible alternatives to those decisions.</p>",
        "id": 179548193,
        "sender_full_name": "simulacrum",
        "timestamp": 1572538967
    },
    {
        "content": "<p>concretely I don't think that work can happen in time for next week, so I would propose we try and schedule for two weeks from nowish.</p>",
        "id": 179548232,
        "sender_full_name": "simulacrum",
        "timestamp": 1572539000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  I think that if a new crater run doesn't turn up anything new for some gates then those should be re-reverted again basically</p>",
        "id": 179548610,
        "sender_full_name": "centril",
        "timestamp": 1572539219
    },
    {
        "content": "<p>alternatives like those pertaining to <code>tt</code> are non-trivial architectural changes, possibly in need to lang RFCs</p>",
        "id": 179548672,
        "sender_full_name": "centril",
        "timestamp": 1572539257
    },
    {
        "content": "<p>the PR shouldn't be reverted fully; <a href=\"https://github.com/rust-lang/rust/pull/65742/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65742/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7\">https://github.com/rust-lang/rust/pull/65742/commits/2e64bb2d37d5f15113e0a7199cd684504c6b8de7</a> needs to stay</p>",
        "id": 179548799,
        "sender_full_name": "centril",
        "timestamp": 1572539320
    },
    {
        "content": "<p>I disagree, I think, though I'd want to think more... but I also don't have any more time today to discuss this.</p>\n<p>(It, to me, seems odd to suggest that more specific, and as such less likely to cause breakage, forms of this change would need lang RFCs, while file-level tracking is fine without an RFC).</p>",
        "id": 179548816,
        "sender_full_name": "simulacrum",
        "timestamp": 1572539334
    },
    {
        "content": "<p>the <code>tt</code> change is an architectural one; and would have big implications for future language design; specific changes to one other the other gates are not; and pre-expansion gating those is a conservative default</p>",
        "id": 179548991,
        "sender_full_name": "centril",
        "timestamp": 1572539427
    },
    {
        "content": "<p>FWIW I'm testing my take on the partial revert right now, it went pretty smooth so far</p>",
        "id": 179552017,
        "sender_full_name": "eddyb",
        "timestamp": 1572541190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> please cc me on the PR</p>",
        "id": 179552465,
        "sender_full_name": "centril",
        "timestamp": 1572541415
    },
    {
        "content": "<p>ahh, I see why this was so easy: we already had early feature-gating, <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> only moved some other feature-gates to use the same system</p>",
        "id": 179555656,
        "sender_full_name": "eddyb",
        "timestamp": 1572543302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> opened <a href=\"https://github.com/rust-lang/rust/issues/66004\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66004\">#66004</a></p>",
        "id": 179556591,
        "sender_full_name": "eddyb",
        "timestamp": 1572543834
    },
    {
        "content": "<p>So, I just caught up on this entire thread, and I'm confused.</p>",
        "id": 180009329,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026606
    },
    {
        "content": "<p>First, I'm not sure what issue this is fixing. Any good source I could read for background on why we'd want to consider this?</p>",
        "id": 180009346,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026652
    },
    {
        "content": "<p>More importantly, I'm concerned about any change that would require moving cfg outwards to outside an entire module.</p>",
        "id": 180009362,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026680
    },
    {
        "content": "<p>In particular, consider the possibility that we may want to make <code>mod</code> unnecessary in the future.</p>",
        "id": 180009374,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026718
    },
    {
        "content": "<p>One issue there: it would be helpful to move cfg <em>inward</em>, inside a module, so that you don't have to add an explicit <code>mod</code> statement just to attach a cfg to it.</p>",
        "id": 180009437,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026781
    },
    {
        "content": "<p>But if we can't parse a file at all if it potentially uses new syntax, then we can't put <code>#![cfg]</code> inside the file.</p>",
        "id": 180009499,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026847
    },
    {
        "content": "<p>I would like to better understand the rationale here, and evaluate it as a trade-off.</p>",
        "id": 180009512,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026887
    },
    {
        "content": "<p>I'll also echo the feeling expressed by several here that this doesn't seem to have gotten discussed very visibly.</p>",
        "id": 180009537,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026941
    },
    {
        "content": "<p>I agree with the proposal to revert and proceed more cautiously.</p>",
        "id": 180009585,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1573026963
    }
]