[
    {
        "content": "<p>I feel like my eyes must be deceiving me, and I had to share. I couldn’t bring myself to allocate a topic describing the phenomenon that I am witnessing, thus the strange topic here</p>",
        "id": 242889272,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623853939
    },
    {
        "content": "<p>I’m trying to bisect something, and I hit upon this commit: <a href=\"https://github.com/rust-lang/rust/commit/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c\">ec38ea1ac1eac8efad1880fe33c49d65b8c4591c</a></p>",
        "id": 242889316,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623853959
    },
    {
        "content": "<p>I was utterly shocked to attempt a build there, and discover … there’s no <code>x.py</code> in the root directory</p>",
        "id": 242889375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623853990
    },
    {
        "content": "<p>And yet when I do <code>git history</code> on <code>x.py</code> on the HEAD mainline, it seems like the history is fine; I don’t see any mention of the file getting deleted in recent times (i.e. this year)</p>",
        "id": 242889544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623854052
    },
    {
        "content": "<p>am I misunderstanding how to use <code>git</code> to investigate something like this?</p>",
        "id": 242889568,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623854063
    },
    {
        "content": "<p>that's a clippy commit, I think</p>",
        "id": 242889847,
        "sender_full_name": "simulacrum",
        "timestamp": 1623854180
    },
    {
        "content": "<p>so it's part of the subtree</p>",
        "id": 242889862,
        "sender_full_name": "simulacrum",
        "timestamp": 1623854189
    },
    {
        "content": "<p>hmm</p>",
        "id": 242890041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623854274
    },
    {
        "content": "<p>I find this super-confusing</p>",
        "id": 242890134,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623854305
    },
    {
        "content": "<p>I’m sure its something wrong with my mental model of git/github</p>",
        "id": 242890163,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623854322
    },
    {
        "content": "<p>but the fact that “Browse files” on a commit on rust-lang/rust can end up in a subtree</p>",
        "id": 242890227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623854346
    },
    {
        "content": "<p>well, anyway, what’s the right way to <code>git bisect</code> in this scenario then? I.e. to focus solely on the commits on <code>rust-lang/rust</code> itself?</p>",
        "id": 242890284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623854370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is this an artifact of the history “pollution” that you mentioned <a href=\"#narrow/stream/131828-t-compiler/topic/Do.20subtree.20syncs.20need.20to.20be.20reviewed.3F/near/215473855\">here</a> in <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/Do.20subtree.20syncs.20need.20to.20be.20reviewed.3F\">#t-compiler &gt; Do subtree syncs need to be reviewed?</a>  ?</p>",
        "id": 242892479,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855271
    },
    {
        "content": "<p>yes, that's the cause of this</p>",
        "id": 242892586,
        "sender_full_name": "simulacrum",
        "timestamp": 1623855321
    },
    {
        "content": "<p>I'm not sure what the right way to git bisect is</p>",
        "id": 242892599,
        "sender_full_name": "simulacrum",
        "timestamp": 1623855329
    },
    {
        "content": "<p>in theory, such a commit could be 'git bisect skip'd</p>",
        "id": 242892622,
        "sender_full_name": "simulacrum",
        "timestamp": 1623855340
    },
    {
        "content": "<p>note that a commit is just some message and a \"pointer\" (via the hash) to a tree</p>",
        "id": 242892717,
        "sender_full_name": "simulacrum",
        "timestamp": 1623855375
    },
    {
        "content": "<p>and all the subtree commits are fully in-tree</p>",
        "id": 242892771,
        "sender_full_name": "simulacrum",
        "timestamp": 1623855404
    },
    {
        "content": "<p>This is super disruptful to the <code>git bisect</code> workflow, unless I’m missing some way to automatically skip the subtree commits</p>",
        "id": 242892828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855433
    },
    {
        "content": "<p>I think you can use <code>git bisect --first-parent</code> to force git to only use \"bors\" commits.</p>",
        "id": 242892847,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623855441
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> hmm, okay; I do use <code>—author=bors</code> already</p>",
        "id": 242892887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855465
    },
    {
        "content": "<p>(which doesn’t help here because bors is managing clippy)</p>",
        "id": 242892919,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855478
    },
    {
        "content": "<p>but your suggestion may be better</p>",
        "id": 242892984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855486
    },
    {
        "content": "<p><code>--first-parent</code> shouldn't catch commits like <a href=\"https://github.com/rust-lang/rust/commit/ec38ea1ac1eac8efad1880fe33c49d65b8c4591c\">ec38ea1ac1eac8efad1880fe33c49d65b8c4591c</a></p>",
        "id": 242893092,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623855534
    },
    {
        "content": "<p>A drawback I think is that it won't walk into a rollup PR.</p>",
        "id": 242893140,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623855555
    },
    {
        "content": "<p>that’s okay, <code>—author=bors</code> won’t either</p>",
        "id": 242893165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855571
    },
    {
        "content": "<p>But if you can't determine a regression in a rollup from just reading it, then you can do a normal bisect on just the rollup.</p>",
        "id": 242893196,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623855586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/131828-t-compiler/topic/felix.20chattering/near/242892847\">said</a>:</p>\n<blockquote>\n<p>I think you can use <code>git bisect --first-parent</code> to force git to only use \"bors\" commits.</p>\n</blockquote>\n<p><code>—first-parent</code> works as an input to <code>git log</code>, but so far it is not working for any of the <code>git bisect</code> subcommands I have tried</p>",
        "id": 242893428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855672
    },
    {
        "content": "<p>this is okay, I can manually look at the log. Its just unfortunate.</p>",
        "id": 242893470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855688
    },
    {
        "content": "<p>ah maybe I need a newer version of <code>git</code></p>",
        "id": 242893716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623855781
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/felix.20chattering/near/242889375\">said</a>:</p>\n<blockquote>\n<p>I was utterly shocked to attempt a build there, and discover … there’s no <code>x.py</code> in the root directory</p>\n</blockquote>\n<p>I hit this the other week and was <em>extremely</em> confused until I ran <code>git log</code> and realized all the commits were to clippy. IIRC I just ran <code>git bisect skip</code> a bunch of times until I was back into rustc proper. </p>\n<p>It would probably be good to document this somewhere (rustc dev guide perhaps) so have an easy reference to point contributors to.</p>",
        "id": 242895303,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1623856443
    },
    {
        "content": "<p>I’ll work on that. This <code>git bisect —first-parent</code> thing seems to work well, but my Linux distro didn’t have a sufficiently new <code>git</code> to use it out of the box, so it may be useful to document multiple patterns here.</p>",
        "id": 242895414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1623856502
    },
    {
        "content": "<p>Based on my completion history, it does look <code>git bisect skip</code> will eventually do the right thing and put you back into the regular repo history.</p>",
        "id": 242895772,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1623856645
    },
    {
        "content": "<p>ah, yea, <code>--first-parent</code> was added in 2.29 (released late 2020)</p>",
        "id": 242896819,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623857016
    }
]