[
    {
        "content": "<p>Could someone knowledgeable about the query system review the query part of  <a href=\"https://github.com/rust-lang/rust/issues/78407\">#78407</a>?</p>",
        "id": 221406441,
        "sender_full_name": "oli",
        "timestamp": 1609605180
    },
    {
        "content": "<p>Sure, I have started looking at it now.</p>",
        "id": 221534302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609773038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I could write this as a comment on the PR if you're busy, but I figured it'd be fastest to ask here: Are there potentially other things besides CTFE that would want access to the unoptimized MIR? I ask because I'm curious whether the table <code>mir_for_ctfe</code> should actually be named just <code>unoptimized_mir</code> ?</p>",
        "id": 221535133,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609773415
    },
    {
        "content": "<p>oli, can we use it for <code>mir_abstract_const</code>? I think not because <code>mir_for_ctfe</code> runs const prop afaik</p>",
        "id": 221535241,
        "sender_full_name": "lcnr",
        "timestamp": 1609773468
    },
    {
        "content": "<p>which we don't want for <code>AbstractConst</code>s</p>",
        "id": 221535293,
        "sender_full_name": "lcnr",
        "timestamp": 1609773482
    },
    {
        "content": "<p>(I suppose such a rename could wait util someone actually wants/needs it, except that such a name implies that it may not <em>always</em> be unoptimized. E.g. if someone were to identify a subset of optimizations that do not hide UB.)</p>",
        "id": 221535330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609773489
    },
    {
        "content": "<p>(which raises the idea of another potential name, instead of <code>unoptimized_mir</code>: <code>mir_with_ub_preserved</code>, or something along those lines.)</p>",
        "id": 221535503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1609773562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Review.20for.20.20.2378407/near/221535241\">said</a>:</p>\n<blockquote>\n<p>oli, can we use it for <code>mir_abstract_const</code>? I think not because <code>mir_for_ctfe</code> runs const prop afaik</p>\n</blockquote>\n<p>it is unclear whether we want to run const prop, but we should try that out in a separate PR</p>",
        "id": 221537712,
        "sender_full_name": "oli",
        "timestamp": 1609774467
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Review.20for.20.20.2378407/near/221535330\">said</a>:</p>\n<blockquote>\n<p>(I suppose such a rename could wait util someone actually wants/needs it, except that such a name implies that it may not <em>always</em> be unoptimized. E.g. if someone were to identify a subset of optimizations that do not hide UB.)</p>\n</blockquote>\n<p>yes, I think we may want to run some such optimizations at some point, but it's not really clear yet. So for now, the name is accurate, and we need to adjust it once more use cases come up.</p>",
        "id": 221538207,
        "sender_full_name": "oli",
        "timestamp": 1609774674
    },
    {
        "content": "<p>we also have a very badly named <code>mir_const</code> query, which we should totally rename or potentially merge into other queries (I think in the early days of MIR that was (supposed to be) the query that had the MIR for the pre-miri-but-still-MIR-based const evaluator</p>",
        "id": 221538695,
        "sender_full_name": "oli",
        "timestamp": 1609774877
    },
    {
        "content": "<p>I think formal analysis ppl will be very interested in the unoptimized MIR, though that may be better served by disabling all optimizations via <code>mir-opt-level=0</code>, since there are some non-optimizing transformations that clean up MIR</p>",
        "id": 221538997,
        "sender_full_name": "oli",
        "timestamp": 1609774996
    }
]