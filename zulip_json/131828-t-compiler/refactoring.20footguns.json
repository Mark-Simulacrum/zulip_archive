[
    {
        "content": "<p>When navigating around the codebase I see a lot of strange idiosyncrasies that can be refactored out (using a struct to namespace functions for instance, or poorly ordered/unscoped functions).<br>\nIs it simply not having enough manpower, or is there some form of api stability that I don't know about (what should I watch out for when refactoring)?</p>",
        "id": 250688079,
        "sender_full_name": "Ku",
        "timestamp": 1629928295
    },
    {
        "content": "<p>compiler internals are largely heavily unstable. Only the language itself (i.e. syntax, behaviour, etc.) and the standard library API are subject to the stability guarantees.</p>",
        "id": 250688484,
        "sender_full_name": "nagisa",
        "timestamp": 1629928551
    },
    {
        "content": "<p><code>rustc</code> is one of, if not the oldest Rust codebases on this planet. It having a fair amount of cruft is probably a fairly natural consequence of that.</p>",
        "id": 250688616,
        "sender_full_name": "nagisa",
        "timestamp": 1629928638
    },
    {
        "content": "<p>I think people just don't care much for ordering of internal things. For external documentation rustdoc already sorts the index alphabetically and when developing things most tools provide jump to source.<br>\nAnd the downside of refactoring is that it makes git history harder to trace.</p>",
        "id": 250688716,
        "sender_full_name": "The 8472",
        "timestamp": 1629928691
    },
    {
        "content": "<p>Some of the things you mentioned I wouldn't do on <em>any</em> project, it's silly to reorder functions after they're written</p>",
        "id": 250695362,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629932735
    },
    {
        "content": "<p>I would say refactoring is a good idea if</p>\n<ul>\n<li>you think it makes code easier to understand (not just look nicer)</li>\n<li>simplifies code, or removes code without making the remaining code much more complicated</li>\n<li>makes it significant easier to change or add to the code in the future. I would say \"significant\" is \"it would be a hassle to change the code as-is\"</li>\n<li>greatly decreases the amount of indentation in a block</li>\n</ul>\n<p>I don't think you should ever refactor just because you like the new code better (changing iterators to loops or vice versa, renaming variables, etc). I also think the barrier gets higher if the code isn't modified as often.</p>",
        "id": 250695764,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629932977
    },
    {
        "content": "<p>Alright, thanks for the advice ^-^</p>",
        "id": 250702041,
        "sender_full_name": "Ku",
        "timestamp": 1629937319
    },
    {
        "content": "<p>you could potentially refactor for speed benefits</p>",
        "id": 250712604,
        "sender_full_name": "Lokathor",
        "timestamp": 1629946867
    },
    {
        "content": "<p>sure, those too</p>",
        "id": 250713936,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629948145
    }
]