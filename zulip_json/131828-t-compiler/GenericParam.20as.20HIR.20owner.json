[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span>, I am rereading <a href=\"https://github.com/rust-lang/rust/issues/77546\">#77546</a>. I am wondering why we need GenericParams to be HIR owners. Removing this special case does not trip on the associated tests. Do you have pointers?</p>",
        "id": 231549562,
        "sender_full_name": "cjgillot",
        "timestamp": 1616536252
    },
    {
        "content": "<p>that's interesting, can't remember why it was needed here</p>",
        "id": 231550374,
        "sender_full_name": "lcnr",
        "timestamp": 1616536644
    },
    {
        "content": "<p>depending on the <code>ImplTraitContext</code> we already used an hir owner in one of the cases</p>",
        "id": 231550468,
        "sender_full_name": "lcnr",
        "timestamp": 1616536683
    },
    {
        "content": "<p>so it was inconsistent before that PR which caused the ICE</p>",
        "id": 231550478,
        "sender_full_name": "lcnr",
        "timestamp": 1616536693
    },
    {
        "content": "<p>if you are able to remove that special case, go ahead and do so  <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 231550594,
        "sender_full_name": "lcnr",
        "timestamp": 1616536750
    },
    {
        "content": "<p>Hmm, if const parameter has a default (not yet implemented) which is a constant expression, will it need the parameter to be a HIR owner?</p>",
        "id": 231559837,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1616542278
    },
    {
        "content": "<p>What is the point of HIR owners actually?<br>\nBeing starting points for HirId's? But that's DefIds/DefPath's that we are building in resolve, which seems a different thing.<br>\nOwning bodies? (E.g. pieces of executable code, including constant expressions.) Then why do you need anything besides functions and <code>AnonConst</code>s for that?</p>",
        "id": 231560532,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1616542770
    },
    {
        "content": "<p>And how is it related to queries/incremental (because I've seen that it is related from casually looking through cjgillot's PRs).</p>",
        "id": 231560667,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1616542864
    },
    {
        "content": "<p>HIR owners are a way to organise the HIR. They are a subset of all DefIds. The subtlety used to be largely ad-hoc.<br>\nIIUC, the new definition is that a HIR owner can be typechecked completely and independently from others. This motivates that closures (for instance) are not HIR owners. Likewise, GenericParams may depend on one another for typechecking, so will need to be in the same HIR owner.</p>",
        "id": 231624907,
        "sender_full_name": "cjgillot",
        "timestamp": 1616589142
    },
    {
        "content": "<blockquote>\n<p>Likewise, GenericParams may depend on one another for typechecking, so will need to be in the same HIR owner.</p>\n</blockquote>\n<p>they are currently not able to, and i assume that they will never be</p>",
        "id": 231648409,
        "sender_full_name": "lcnr",
        "timestamp": 1616597964
    },
    {
        "content": "<p>also, defaults are now implement: <a href=\"https://github.com/rust-lang/rust/issues/75384\">#75384</a></p>",
        "id": 231648446,
        "sender_full_name": "lcnr",
        "timestamp": 1616597975
    },
    {
        "content": "<blockquote>\n<p>will it need the parameter to be a HIR owner</p>\n</blockquote>\n<p>it needs the parameter to be a parent in the hir tree, but it's not an owner afaik</p>",
        "id": 231648911,
        "sender_full_name": "lcnr",
        "timestamp": 1616598095
    },
    {
        "content": "<blockquote>\n<p>IIUC, the new definition is that a HIR owner can be typechecked completely and independently from others. </p>\n</blockquote>\n<p>is this intended to be a requirement for something to be a HIR owner or the exact definition</p>",
        "id": 231650397,
        "sender_full_name": "lcnr",
        "timestamp": 1616598589
    },
    {
        "content": "<p>so if there is something that can be typechecked separately, should we make it a hir owner even if it isn't strictly needed?</p>",
        "id": 231650495,
        "sender_full_name": "lcnr",
        "timestamp": 1616598610
    },
    {
        "content": "<p>I don't know a precise definition. The best definition I have is \"HIR owners are the granularity of typeck queries\". If something can be typechecked independently from the surrounding code, it should be made a HIR owner.</p>",
        "id": 231664794,
        "sender_full_name": "cjgillot",
        "timestamp": 1616603304
    }
]