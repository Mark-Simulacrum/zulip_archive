[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; the triage meeting will be starting in 2 hours 44 minutes</p>",
        "id": 187542626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1580991388
    },
    {
        "content": "<p>I will be doing <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-06.20.2354818/near/187542642\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-02-06.20.2354818/near/187542642\">pre-triage in a parallel topic</a></p>",
        "id": 187542673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1580991451
    },
    {
        "content": "<p>this week's WG checkins are with <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> and <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span></p>",
        "id": 187542687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1580991475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> , will you be around in about 3.5 hours to provide checkin for RLS 2.0?</p>",
        "id": 187542767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1580991531
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> or <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , will you be around in about 3.5 hours to provide checkin for WG-self-profile?</p>",
        "id": 187542812,
        "sender_full_name": "pnkfelix",
        "timestamp": 1580991576
    },
    {
        "content": "<p>I'll be building up today's specific agenda on <a href=\"https://hackmd.io/0zIctajhTEWcZF-J0dWNhg?both\" target=\"_blank\" title=\"https://hackmd.io/0zIctajhTEWcZF-J0dWNhg?both\">this hackmd</a> as I do pre-triage</p>",
        "id": 187543737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1580992448
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I can give an update on WG-self-profile</p>",
        "id": 187544066,
        "sender_full_name": "mw",
        "timestamp": 1580992741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> will be there!</p>",
        "id": 187544627,
        "sender_full_name": "matklad",
        "timestamp": 1580993238
    },
    {
        "content": "<p>Write Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 187554925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001171
    },
    {
        "content": "<p>we'll start with five minutes for ...</p>",
        "id": 187554958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001198
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 187554989,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001202
    },
    {
        "content": "<ul>\n<li>We have  design meeting this week, on <a href=\"https://github.com/rust-lang/compiler-team/issues/237\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/237\">parser-librarification</a></li>\n</ul>",
        "id": 187555037,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001226
    },
    {
        "content": "<p>(meeting is, as usual, on Friday, starting same time as this meeting.)</p>",
        "id": 187555071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001251
    },
    {
        "content": "<p>there's some great stuff to read up on ahead of time, if you follow the link above.</p>",
        "id": 187555111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> are you around? Did you want to say anything about the status of your polymorphization work, or design questions there?</p>",
        "id": 187555204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001327
    },
    {
        "content": "<ul>\n<li>in case <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> is not available, I can at least point people to the ongoing conversation <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/187461928\" title=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/187461928\">here</a></li>\n</ul>",
        "id": 187555239,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001365
    },
    {
        "content": "<ul>\n<li>in the same vein, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> has a major change proposal at <a href=\"https://github.com/rust-lang/compiler-team/issues/245\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/245\">compiler-team#245</a>: to make incr. comp. respect the -Ccodegen-units setting</li>\n</ul>",
        "id": 187555309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001428
    },
    {
        "content": "<p>(as major changes go, the proposed change is rather minor <code>:)</code> I mostly wanted to give the new process a test drive)</p>",
        "id": 187555430,
        "sender_full_name": "mw",
        "timestamp": 1581001484
    },
    {
        "content": "<p>Makes sense! (and so it makes sense for me to announce it here,as part of that test drive.)</p>",
        "id": 187555475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001519
    },
    {
        "content": "<p>it does indeed</p>",
        "id": 187555516,
        "sender_full_name": "mw",
        "timestamp": 1581001552
    },
    {
        "content": "<p>one more announcement</p>",
        "id": 187555605,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001579
    },
    {
        "content": "<ul>\n<li>Cargo report future-incompat <a href=\"https://github.com/rust-lang/rfcs/issues/2834\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/issues/2834\">rfc#2834</a> is I think on track to get an FCP merge request from the cargo team in the near future.</li>\n</ul>",
        "id": 187555630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001604
    },
    {
        "content": "<p>but it does interact with <code>rustc</code> too, so feel free to take a look there and give feedback.</p>",
        "id": 187555704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001660
    },
    {
        "content": "<p>okay so having said all that, lets move on to the meeting agenda.</p>",
        "id": 187555716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001670
    },
    {
        "content": "<p><a href=\"https://hackmd.io/0zIctajhTEWcZF-J0dWNhg?both\" target=\"_blank\" title=\"https://hackmd.io/0zIctajhTEWcZF-J0dWNhg?both\">agenda items</a></p>",
        "id": 187555777,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001685
    },
    {
        "content": "<p>first, beta-nominations</p>",
        "id": 187555795,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001702
    },
    {
        "content": "<p>beta-nom 1/2: \"Correct ICE caused by macros generating invalid spans.\" <a href=\"https://github.com/rust-lang/rust/issues/68611\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68611\">#68611</a></p>",
        "id": 187555805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001711
    },
    {
        "content": "<p>I have to ask myself, should we be investing effort in fixing the fundamental brokenness with macros generating invalid spans? Hmm.</p>",
        "id": 187555962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001818
    },
    {
        "content": "<p>seems harmless to backport, though an unconditional <code>warn</code> is suboptimal</p>",
        "id": 187555986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581001840
    },
    {
        "content": "<p>er, I guess it's a warn through log</p>",
        "id": 187556006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581001862
    },
    {
        "content": "<p>are you concerned that it e.g. won't respect cap-lints ?</p>",
        "id": 187556012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001865
    },
    {
        "content": "<p>not sure what that does by default</p>",
        "id": 187556016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581001868
    },
    {
        "content": "<p>/me doesn't know</p>",
        "id": 187556017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001870
    },
    {
        "content": "<p>well I mean it's obviously debug spew:</p>",
        "id": 187556022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581001876
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span>         warn!(&quot;Invalid span {:?}. Err={:?}&quot;, sp, e);\n</pre></div>\n\n\n</blockquote>",
        "id": 187556023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581001877
    },
    {
        "content": "<p>i.e., not suitable for an end user</p>",
        "id": 187556035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581001892
    },
    {
        "content": "<p>right. so the question, as you point out, is what <em>does</em> <code>log::warn!</code> do for a <code>rustc</code> end-user in the first place...</p>",
        "id": 187556071,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001918
    },
    {
        "content": "<p>maybe we hold off on backporting this until after we resolve that question?</p>",
        "id": 187556132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001939
    },
    {
        "content": "<p>anyone want to take point on looking into that?</p>",
        "id": 187556160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001959
    },
    {
        "content": "<p>(I would but I already self-assigned a bunch of bugs during pre-triage...)</p>",
        "id": 187556182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581001979
    },
    {
        "content": "<p>well anyway the point is that we will wait a week on this. (and likewise for the corresponding stable nom of the same PR)</p>",
        "id": 187556249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002015
    },
    {
        "content": "<p>what is the timeline till next release?</p>",
        "id": 187556333,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002060
    },
    {
        "content": "<p>seems ok to wait a week, let's just leave a comment</p>",
        "id": 187556343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002064
    },
    {
        "content": "<p>it's also true that there's no test (as <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> pointed out on the PR)</p>",
        "id": 187556350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002075
    },
    {
        "content": "<p>we had a release last week</p>",
        "id": 187556358,
        "sender_full_name": "mw",
        "timestamp": 1581002078
    },
    {
        "content": "<p>5 weeks?</p>",
        "id": 187556366,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002082
    },
    {
        "content": "<p>March 12th 2020</p>",
        "id": 187556390,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002098
    },
    {
        "content": "<blockquote>\n<p>seems ok to wait a week, let's just leave a comment</p>\n</blockquote>\n<p>done</p>",
        "id": 187556404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002107
    },
    {
        "content": "<p>(a regression test might also have allowed for more immediate answer to our running Q regarding <code>warn!</code>)</p>",
        "id": 187556456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002147
    },
    {
        "content": "<p>beta-nom 2/2: \"Do not ICE on multipart suggestions touching multiple files\" <a href=\"https://github.com/rust-lang/rust/issues/68530\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68530\">#68530</a></p>",
        "id": 187556470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002161
    },
    {
        "content": "<p>another case where there is no regression test</p>",
        "id": 187556566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002220
    },
    {
        "content": "<p>yeah, I just left a comment about that</p>",
        "id": 187556593,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002239
    },
    {
        "content": "<p>it does seem \"obviously correct\" :)</p>",
        "id": 187556622,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002263
    },
    {
        "content": "<p>beta-approved then. We can do a regression test as a followup: <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you mind making a PR with a regression test (no need for backport of the test, i think)</p>",
        "id": 187556710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002307
    },
    {
        "content": "<blockquote>\n<p>it does seem \"obviously correct\" :)</p>\n</blockquote>\n<p>yes, I would be more interested in future refactorings maintaining that property</p>",
        "id": 187556728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002321
    },
    {
        "content": "<p>I wonder if one could even lint for this</p>",
        "id": 187556753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002351
    },
    {
        "content": "<p>I bet clippy aleady does</p>",
        "id": 187556756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002356
    },
    {
        "content": "<p>\"You're using unwrap in a method where <code>?</code> would work\"</p>",
        "id": 187556770,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002364
    },
    {
        "content": "<p>hm, that seems like not always correct, so would need to be allow by default at least</p>",
        "id": 187556910,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002439
    },
    {
        "content": "<p>oKay that's all the beta-noms, and we're skipping the single stable-nom (its the same as the first beta-nom that we are waiting a week on.)</p>",
        "id": 187556915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002443
    },
    {
        "content": "<p>That can change the logic: sometimes bubbling up the error is incorrect and panicking is</p>",
        "id": 187556928,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1581002452
    },
    {
        "content": "<blockquote>\n<p>hm, that seems like not always correct, so would need to be allow by default at least</p>\n</blockquote>\n<p>its definitely not always correct.</p>",
        "id": 187556934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002457
    },
    {
        "content": "<p>anyway we need not go into the weeds there.</p>",
        "id": 187557011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002499
    },
    {
        "content": "<p>there are three PRs marked S-waiting-on-team. I picked out one of them for us to discuss now:</p>",
        "id": 187557091,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002532
    },
    {
        "content": "<p>\"Print nicer async/await trait errors for generators in any place in the error 'stack'\"e <a href=\"https://github.com/rust-lang/rust/issues/67116\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67116\">#67116</a></p>",
        "id": 187557101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002539
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you want to drive discussion here, since you marked it thus?</p>",
        "id": 187557150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002569
    },
    {
        "content": "<p>I'm guessing its waiting on us to decide about the \"information overload\" questions ?</p>",
        "id": 187557183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002602
    },
    {
        "content": "<p>that's right</p>",
        "id": 187557210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002627
    },
    {
        "content": "<p>I kind of forgot about this</p>",
        "id": 187557216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002632
    },
    {
        "content": "<p>but basically we seem to be at an impasse</p>",
        "id": 187557225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002641
    },
    {
        "content": "<p>and I'm looking to broaden the set of folks and get some idea how to resolve</p>",
        "id": 187557268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002649
    },
    {
        "content": "<p>are there rustc flags to control the level of information output?</p>",
        "id": 187557285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002657
    },
    {
        "content": "<p>Not that I know of</p>",
        "id": 187557297,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002669
    },
    {
        "content": "<p>I think it's debatable if we want to go that road</p>",
        "id": 187557304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002673
    },
    {
        "content": "<p>We <em>have</em> talked in the past about a <code>--learn</code> flag, to give more useful output for beginners</p>",
        "id": 187557321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002688
    },
    {
        "content": "<p>but this would be something rather different I suppose</p>",
        "id": 187557326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002693
    },
    {
        "content": "<p>In any case, we don't have one.</p>",
        "id": 187557334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002701
    },
    {
        "content": "<p>I do see that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> suggested something similar on the comment thread</p>",
        "id": 187557337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002702
    },
    {
        "content": "<p>I remember scala had a flag like this</p>",
        "id": 187557355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002715
    },
    {
        "content": "<p>We do have -Zteach today</p>",
        "id": 187557358,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002717
    },
    {
        "content": "<p>I don't remember ever using it myself :)</p>",
        "id": 187557364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002719
    },
    {
        "content": "<p>Yeah, but this isn't really about <em>teaching</em></p>",
        "id": 187557370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002727
    },
    {
        "content": "<p>used... in some places</p>",
        "id": 187557372,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002729
    },
    {
        "content": "<p>This is an interesting point: \"The issue with this is that enabling it will require a full rebuilds if the entire crate graph (and then another rebuild when you disable it again).\"</p>",
        "id": 187557387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002743
    },
    {
        "content": "<p>Seems like we could/should have a way to work around that.</p>",
        "id": 187557400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002753
    },
    {
        "content": "<p>That's not actually true</p>",
        "id": 187557403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002755
    },
    {
        "content": "<p><code>cargo rustc -- -Zteach</code>, for example</p>",
        "id": 187557430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002762
    },
    {
        "content": "<p>would do the job</p>",
        "id": 187557461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002771
    },
    {
        "content": "<p>(though notably that won't <em>always</em> work)</p>",
        "id": 187557463,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002773
    },
    {
        "content": "<p>but I Think we'd really want</p>",
        "id": 187557469,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002780
    },
    {
        "content": "<p>cargo build --teach</p>",
        "id": 187557472,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002782
    },
    {
        "content": "<blockquote>\n<p><code>cargo rustc -- -Zteach</code>, for example</p>\n</blockquote>\n<p>as in, <code>cargo</code> does not treat <code>-Zteach</code> as something that should force a rebuild?</p>",
        "id": 187557486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002791
    },
    {
        "content": "<p>regardless, I maintain that this is more of a \"verbose\" output thing</p>",
        "id": 187557501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002796
    },
    {
        "content": "<p><code>cargo rustc</code> flags only affect the leaf compilation</p>",
        "id": 187557511,
        "sender_full_name": "eddyb",
        "timestamp": 1581002806
    },
    {
        "content": "<p>I don't think that <em>Teaching</em> and giving <em>all the info</em> are equivalent, in other words</p>",
        "id": 187557521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002814
    },
    {
        "content": "<p>Right, I agree that <code>teach</code> is not the right thing here.</p>",
        "id": 187557535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002828
    },
    {
        "content": "<p>In fact, maybe the opposite in some ways :)</p>",
        "id": 187557540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002829
    },
    {
        "content": "<blockquote>\n<p><code>cargo rustc</code> flags only affect the leaf compilation</p>\n</blockquote>\n<p>gotcha.</p>",
        "id": 187557552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002843
    },
    {
        "content": "<p>(so <code>cargo rustc -p foo -- bar</code> will build all dependencies of <code>foo</code> <em>then</em> run <code>rustc</code> for <code>foo</code> with <code>bar</code> as extra flags)</p>",
        "id": 187557562,
        "sender_full_name": "eddyb",
        "timestamp": 1581002852
    },
    {
        "content": "<p>(maybe I (and Aaron1011?) was thinking of <del><code>RUSTC_FLAGS</code></del> <code>RUSTFLAGS</code> ?)</p>",
        "id": 187557585,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002874
    },
    {
        "content": "<p>Yes, I think so</p>",
        "id": 187557595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002880
    },
    {
        "content": "<p>RUSTFLAGS, but yes</p>",
        "id": 187557636,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002885
    },
    {
        "content": "<p>Anyway, I guess I still believe that a more minimal output will be better, and that the danger of too much info is real, but as I wrote, i'm open to being told I am wrong. Maybe we should do some sort of poll on internals? twitter poll? I don't know</p>",
        "id": 187557642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002888
    },
    {
        "content": "<p><code>RUSTFLAGS</code> affects the entire dependency graph yeah</p>",
        "id": 187557646,
        "sender_full_name": "eddyb",
        "timestamp": 1581002890
    },
    {
        "content": "<p>Okay well we've given the PR some visibility</p>",
        "id": 187557692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002925
    },
    {
        "content": "<p>we don't need to make a decision right here</p>",
        "id": 187557702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002931
    },
    {
        "content": "<p>I (still) think we should land it in nightly a <code>note:</code> asking for feedback if people are overwhelmed</p>",
        "id": 187557708,
        "sender_full_name": "simulacrum",
        "timestamp": 1581002933
    },
    {
        "content": "<p>This is why I was suggesting that it'd be good to have some canonical writeup + example</p>",
        "id": 187557714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002936
    },
    {
        "content": "<blockquote>\n<p>I (still) think we should land it in nightly a <code>note:</code> asking for feedback if people are overwhelmed</p>\n</blockquote>\n<p>Interesting. We can discuss on thread. I feel like if they're overwhelmed, they'll skip past that too :)</p>",
        "id": 187557752,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002966
    },
    {
        "content": "<p>is there already a zulip topic for this PR for followup chat?</p>",
        "id": 187557780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581002986
    },
    {
        "content": "<p>Not that I'm aware of, discussion is on the PR</p>",
        "id": 187557796,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581002997
    },
    {
        "content": "<p>okay. I guess we can keep discussion on PR if people like that, the comment thread there hasn't gotten out of control (yet)</p>",
        "id": 187557862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003018
    },
    {
        "content": "<p>I'm going to try and open an internals topic I think</p>",
        "id": 187557865,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003020
    },
    {
        "content": "<p>I'd like feedback from users most of all</p>",
        "id": 187557874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003024
    },
    {
        "content": "<p>okay, I assume <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> will post link to internals thread on the PR <a href=\"https://github.com/rust-lang/rust/issues/67116\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67116\">#67116</a>'s comment thread</p>",
        "id": 187557942,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003063
    },
    {
        "content": "<p>so lets move on</p>",
        "id": 187557952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003070
    },
    {
        "content": "<p>I picked out five nominated issues for us to look at</p>",
        "id": 187557967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003082
    },
    {
        "content": "<p>nominated: \"TEXTREL in i686 since 1.41.0\" <a href=\"https://github.com/rust-lang/rust/issues/68794\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68794\">#68794</a></p>",
        "id": 187557995,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003097
    },
    {
        "content": "<p>a change to compiler-builtins has broken android-x86</p>",
        "id": 187558024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003117
    },
    {
        "content": "<p>I self-assigned this but I suspect there may be someone at this meeting better suited to investivgate</p>",
        "id": 187558095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003148
    },
    {
        "content": "<p>specifically it's <a href=\"https://github.com/rust-lang/rust/commit/76a252ea9e7be93a61ffdf33b3533e24a9cf459d\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/76a252ea9e7be93a61ffdf33b3533e24a9cf459d\">https://github.com/rust-lang/rust/commit/76a252ea9e7be93a61ffdf33b3533e24a9cf459d</a></p>",
        "id": 187558114,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003166
    },
    {
        "content": "<p>and also: Do we not test Android-x86 in our CI?</p>",
        "id": 187558116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003169
    },
    {
        "content": "<p>we test arm-linux-androideabi</p>",
        "id": 187558177,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003215
    },
    {
        "content": "<p>gotcha</p>",
        "id": 187558181,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003222
    },
    {
        "content": "<p>no idea whether that's x86, to be honest</p>",
        "id": 187558184,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003224
    },
    {
        "content": "<p>the fact that it says \"arm\" makes me assume it is not x86</p>",
        "id": 187558206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003236
    },
    {
        "content": "<p>sounds correct:)</p>",
        "id": 187558261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003250
    },
    {
        "content": "<p>we do build rust for some other androids</p>",
        "id": 187558281,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003264
    },
    {
        "content": "<p>but I'm the one who didn't know that SystemV meant \"everyone but windows\" so what do I know</p>",
        "id": 187558291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003272
    },
    {
        "content": "<p>I'm not yet clear if the problem is that you <em>cannot</em> build rust, or if it's some internal linting</p>",
        "id": 187558304,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003285
    },
    {
        "content": "<p>e.g. for whatever reason they don't want textrel</p>",
        "id": 187558321,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003295
    },
    {
        "content": "<p>anyway, is there anyone present with experience building for android-i686?</p>",
        "id": 187558344,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003307
    },
    {
        "content": "<p>(or \"x86\", whatever)</p>",
        "id": 187558353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003315
    },
    {
        "content": "<p>Breaking android definitely seems bad, though I don't know how common i686 is -- the problem is <em>specific</em> to i686?</p>",
        "id": 187558364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003321
    },
    {
        "content": "<p>I guess it'd be good to know which of those compiler-builtin PRs broke this, eh?</p>",
        "id": 187558414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003357
    },
    {
        "content": "<p>the hypothesis is that it was <a href=\"https://github.com/rust-lang/compiler-builtins/pull/328\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-builtins/pull/328\">https://github.com/rust-lang/compiler-builtins/pull/328</a></p>",
        "id": 187558490,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003389
    },
    {
        "content": "<p><del>and I think that was confirmed....?</del></p>",
        "id": 187558500,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003396
    },
    {
        "content": "<p>(Can I note one thing: it'd be nice if we had a github alias for \"folks who work on / maintain compiler-builtlins\")</p>",
        "id": 187558511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003405
    },
    {
        "content": "<p>I honestly have no idea who that is :)</p>",
        "id": 187558520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003411
    },
    {
        "content": "<blockquote>\n<p>and I think that was confirmed....?</p>\n</blockquote>\n<p>oh, no, just the rollup commit bumping compiler-builtins was confirmed</p>",
        "id": 187558546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003431
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> and <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> are probably good \"point people\" but not sure</p>",
        "id": 187558574,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003453
    },
    {
        "content": "<p>okay. Maybe I will try to ping them later, since no one else is jumping up and down saying that they are the local Android-x86 enthusiast</p>",
        "id": 187558650,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003487
    },
    {
        "content": "<p>lets move on</p>",
        "id": 187558667,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003505
    },
    {
        "content": "<p>nominated: \"Unable to compile syntex_syntax using Rust 1.41\" <a href=\"https://github.com/rust-lang/rust/issues/68729\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68729\">#68729</a></p>",
        "id": 187558692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003524
    },
    {
        "content": "<p>I nominated this because I wanted to draw attention to the issue</p>",
        "id": 187558730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003550
    },
    {
        "content": "<p>namely, we knew that this breakage was coming from a crater run</p>",
        "id": 187558763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003580
    },
    {
        "content": "<p>looks like a WONTFIX to me</p>",
        "id": 187558791,
        "sender_full_name": "mw",
        "timestamp": 1581003597
    },
    {
        "content": "<p>(it was noted back in <a href=\"https://github.com/rust-lang/rust/pull/65785#issuecomment-546499161\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65785#issuecomment-546499161\">october</a>)</p>",
        "id": 187558843,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003607
    },
    {
        "content": "<p>I personally suspect that we should just treat this as fuel to motivate moving on cargo-report-future-incompat</p>",
        "id": 187558863,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003630
    },
    {
        "content": "<p>I also recall seeing this in the beta crater run but think I skipped filing an issue due to finding the PR</p>",
        "id": 187558865,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003633
    },
    {
        "content": "<p>but I wanted to at least point it out.</p>",
        "id": 187558868,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003636
    },
    {
        "content": "<p>the bug filer said \"However, this kind of known breaking changes should be declared in blog posts of rustlang update.\"</p>",
        "id": 187558895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003662
    },
    {
        "content": "<p>I was just going to mention that</p>",
        "id": 187558915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003668
    },
    {
        "content": "<p>I think that is indeed reasonable, and I also liked your idea of keeping some kind of track, though I don't know how to do that in a reasonable way</p>",
        "id": 187558934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003692
    },
    {
        "content": "<p>I can imagine there is tension between not wanting to draw unnecessary attention to breakage (i.e. inviting people to say \"they're breaking their stability promise\" when the reality is that the breakage truly does not matter)</p>",
        "id": 187559007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003741
    },
    {
        "content": "<p>I think we've generally tried to stick it in compat notes</p>",
        "id": 187559024,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003760
    },
    {
        "content": "<p>where?</p>",
        "id": 187559036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003770
    },
    {
        "content": "<p>(RELEASES.md)</p>",
        "id": 187559046,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003777
    },
    {
        "content": "<p>but it's hard</p>",
        "id": 187559056,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003782
    },
    {
        "content": "<p>e.g. inference breakage is expansive</p>",
        "id": 187559064,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003787
    },
    {
        "content": "<p>I agree, I think the idea is to tag the PR as \"relnotes\" or something?</p>",
        "id": 187559065,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003787
    },
    {
        "content": "<p>if the PR is tagged as relnotes, it has a much higher chance of not getting forgotten :)</p>",
        "id": 187559087,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003804
    },
    {
        "content": "<p>/me looks to see if RELEASES.md is linked from the blog post</p>",
        "id": 187559088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003804
    },
    {
        "content": "<p>what is hard, naming all the crates?</p>",
        "id": 187559089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003804
    },
    {
        "content": "<p>I guess we can lean towards being less constrained</p>",
        "id": 187559108,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003824
    },
    {
        "content": "<p>no, figuring out \"Should we list this?\"</p>",
        "id": 187559129,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003831
    },
    {
        "content": "<p>what makes it hard?</p>",
        "id": 187559188,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003849
    },
    {
        "content": "<p>(maybe we should discuss offline; just trying to understand the details)</p>",
        "id": 187559207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003866
    },
    {
        "content": "<p>I guess -- tradeoff that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> mentioned</p>",
        "id": 187559209,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003868
    },
    {
        "content": "<blockquote>\n<p>I can imagine there is tension between not wanting to draw unnecessary attention to breakage (i.e. inviting people to say \"they're breaking their stability promise\" when the reality is that the breakage truly does not matter)</p>\n</blockquote>",
        "id": 187559213,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003873
    },
    {
        "content": "<p>OK.</p>",
        "id": 187559214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003873
    },
    {
        "content": "<p>well if an error message is associated with a new breaking-change, is there harm is just listing that error message? And saying \"you might want to try updating\" ...)</p>",
        "id": 187559223,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003882
    },
    {
        "content": "<p>I feel like we're overdue for a revisiting of what our stability guarantees can/should be</p>",
        "id": 187559237,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003892
    },
    {
        "content": "<p>(Separately)</p>",
        "id": 187559240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003896
    },
    {
        "content": "<p>Anyway, I have again achieved <em>my</em> goal of drawing attention to the issue</p>",
        "id": 187559244,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003899
    },
    {
        "content": "<p>But I guess I lean towards complete and honest reporting</p>",
        "id": 187559252,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003902
    },
    {
        "content": "<p>Not necessarily with an exhaustive list of affected crates (just because that's tedious and misleading, since we can't really know it)</p>",
        "id": 187559268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581003916
    },
    {
        "content": "<p>so I feel comfortable moving on. Maybe we will want a design meeting regarding stability guarantees going forward.</p>",
        "id": 187559273,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003919
    },
    {
        "content": "<p>I think we should be more eager to report yes</p>",
        "id": 187559290,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003939
    },
    {
        "content": "<p>Let's move on.</p>",
        "id": 187559293,
        "sender_full_name": "simulacrum",
        "timestamp": 1581003942
    },
    {
        "content": "<p>nominated: \"ICE field: higher-rank trait bound (HRTB) <code>for&lt;'a&gt; ...</code> hits OutputTypeParameterMismatch in librustc/traits/codegen\" <a href=\"https://github.com/rust-lang/rust/issues/62529\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62529\">#62529</a></p>",
        "id": 187559306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003960
    },
    {
        "content": "<p>I nominated this this morning</p>",
        "id": 187559353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003970
    },
    {
        "content": "<p>because it collects a large set of bugs, and I added another to the set this morning</p>",
        "id": 187559381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581003986
    },
    {
        "content": "<p>so I wanted to ask: \"even though these are all P-medium, they are piling up.\"</p>",
        "id": 187559406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004001
    },
    {
        "content": "<p>Does this imply that we should prioritize lazy-norm for this year?</p>",
        "id": 187559436,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004018
    },
    {
        "content": "<p>I thnk we should for various reasons (and, indeed, sort of are?)</p>",
        "id": 187559480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and I have had conversations of this on and off</p>",
        "id": 187559487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004046
    },
    {
        "content": "<p>Or at least we should prioritize resolving this problem</p>",
        "id": 187559490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004049
    },
    {
        "content": "<p>One challenge is that I am still struggling to dedicate time to technical work</p>",
        "id": 187559506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004065
    },
    {
        "content": "<p>Luckily others are routing around me</p>",
        "id": 187559510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004069
    },
    {
        "content": "<p>right, I honestly couldn't remember if this fell into the same bucket we discussed.</p>",
        "id": 187559514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004072
    },
    {
        "content": "<p>But I really want to be \"in the fray\" :)</p>",
        "id": 187559517,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004074
    },
    {
        "content": "<p>maybe this is just a topic for niko and I to discuss 1:1</p>",
        "id": 187559565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004087
    },
    {
        "content": "<p>(and potentially pull in T-compiler members who are interested in assisting in the effort.)</p>",
        "id": 187559610,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004125
    },
    {
        "content": "<p>anyway okay I guess  I can't ask for more than that</p>",
        "id": 187559686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004196
    },
    {
        "content": "<p>nominated: \"[spurious] thread 'rustc' panicked at 'slice index starts at 24722962 but ends at 13279232', src/libcore/slice/mod.rs:2680:5\" <a href=\"https://github.com/rust-lang/rust/issues/68132\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68132\">#68132</a></p>",
        "id": 187559753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004219
    },
    {
        "content": "<p>this is a bug that I left nominated because I didn't know how to prioritize it</p>",
        "id": 187559765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004232
    },
    {
        "content": "<p>its spurious, its perhaps non-actionable.</p>",
        "id": 187559784,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004247
    },
    {
        "content": "<p>I don't see any way to reproduce it</p>",
        "id": 187559791,
        "sender_full_name": "mw",
        "timestamp": 1581004252
    },
    {
        "content": "<p>as long as it doesn't show up with our regular backends, this is low priority, I'd say</p>",
        "id": 187559870,
        "sender_full_name": "mw",
        "timestamp": 1581004318
    },
    {
        "content": "<p>okay. I'll mark P-low with intent to close</p>",
        "id": 187559920,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004331
    },
    {
        "content": "<p>(close as non-actionable)</p>",
        "id": 187559928,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004337
    },
    {
        "content": "<p>do we know if adding <code>#[track_caller}</code> to the various slice methods would improve the panic feedback in cases like this? If so, is that worth doing, or is it too costly?</p>",
        "id": 187559960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004377
    },
    {
        "content": "<p>final nomination: \"Worsened debug build codegen in beta\" <a href=\"https://github.com/rust-lang/rust/issues/68855\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68855\">#68855</a></p>",
        "id": 187560044,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004436
    },
    {
        "content": "<p>I just wanted to draw attention to this bug. I don't think there's anything specific to discuss yet, besides \"someone noticed our codegen is worse in beta. It would be great if we could allocate resources to investigate that.\"</p>",
        "id": 187560139,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004493
    },
    {
        "content": "<p>there's a slightly higher priority thing</p>",
        "id": 187560162,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004510
    },
    {
        "content": "<p>Hmm</p>",
        "id": 187560181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> pointed out to me that there is a stable nomination that I overlooked</p>",
        "id": 187560183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004523
    },
    {
        "content": "<p>because I had wrongly assumeed that the stable-noms were always a subset of beta-nom</p>",
        "id": 187560197,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004536
    },
    {
        "content": "<p>stable-nom: \"Resolve long compile times when evaluating always valid constants\" <a href=\"https://github.com/rust-lang/rust/issues/67667\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67667\">#67667</a></p>",
        "id": 187560218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004555
    },
    {
        "content": "<p>possibly related to the other change :P</p>",
        "id": 187560319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004619
    },
    {
        "content": "<p>this apparently is indeed resolving a stable-to-stable regression; the associated issue's labels are (supposedly) out of date.</p>",
        "id": 187560327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004622
    },
    {
        "content": "<blockquote>\n<p>possibly related to the other change :P</p>\n</blockquote>\n<p>beg pardon?</p>",
        "id": 187560346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004636
    },
    {
        "content": "<p>I'm sure it's not</p>",
        "id": 187560370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004654
    },
    {
        "content": "<p>I have not confirmed the out of date problem to be clear</p>",
        "id": 187560373,
        "sender_full_name": "simulacrum",
        "timestamp": 1581004655
    },
    {
        "content": "<p>I was just noting that this touched constants</p>",
        "id": 187560382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004662
    },
    {
        "content": "<p>Looks very safe to me, I think</p>",
        "id": 187560464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004690
    },
    {
        "content": "<p>Anyway, yes, <span aria-label=\"back\" class=\"emoji emoji-1f519\" role=\"img\" title=\"back\">:back:</span> from me</p>",
        "id": 187560487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004705
    },
    {
        "content": "<p>stable-accepted then</p>",
        "id": 187560494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004711
    },
    {
        "content": "<p>okay</p>",
        "id": 187560523,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004736
    },
    {
        "content": "<p>WG checkins!</p>",
        "id": 187560527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004738
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> for <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> : ?</p>",
        "id": 187560538,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004750
    },
    {
        "content": "<p>Sure!</p>",
        "id": 187560545,
        "sender_full_name": "matklad",
        "timestamp": 1581004755
    },
    {
        "content": "<p>Nothing too big happened recently, we are just steadily improving things that we have</p>",
        "id": 187560589,
        "sender_full_name": "matklad",
        "timestamp": 1581004780
    },
    {
        "content": "<p>Like adapting the recent improvements in Chalk (which reduced crashes a lot) or moving <code>cargo check</code> handling into the server (which means errors in <em>any</em> editor, not just VS Code)</p>",
        "id": 187560673,
        "sender_full_name": "matklad",
        "timestamp": 1581004831
    },
    {
        "content": "<p>I think the biggest \"update\" might be that</p>",
        "id": 187560681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004833
    },
    {
        "content": "<p>okay. and of course we have that design meeting tomorrow.</p>",
        "id": 187560690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> and I have been slowly iterating on an RFC</p>",
        "id": 187560694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004842
    },
    {
        "content": "<p>to make the plan to merge RLS/rust-analyzer \"official\"</p>",
        "id": 187560710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004855
    },
    {
        "content": "<p>which we probably need to just finish up already</p>",
        "id": 187560721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004863
    },
    {
        "content": "<p>We also slowly working on <em>production readiness</em>: we now have binary releases, and are palning to publish extension to the  VS Code marketplace \"soon\".</p>",
        "id": 187560736,
        "sender_full_name": "matklad",
        "timestamp": 1581004875
    },
    {
        "content": "<p>Wow wow sounds great.</p>",
        "id": 187560759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004891
    },
    {
        "content": "<p>we were also discussing (just recently, when <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and I were in Berlin) how important it would be to use save-analysis at all</p>",
        "id": 187560765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004897
    },
    {
        "content": "<p>That is, we work on making it more \"just plug &amp; play\" from both directions: in practice, and via official RFC plan</p>",
        "id": 187560794,
        "sender_full_name": "matklad",
        "timestamp": 1581004921
    },
    {
        "content": "<p>i.e., if we just don't yet support find all usages, maybe we don't need it, which sidesteps some complexity and controversy, at the cost of a feature regerssion</p>",
        "id": 187560827,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004923
    },
    {
        "content": "<p>(something to be discussed separately, but which seems worth surfacing here)</p>",
        "id": 187560851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581004939
    },
    {
        "content": "<p>so yeah, everyone, if you're interested in that discussion</p>",
        "id": 187560860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004948
    },
    {
        "content": "<p>go find them in the <a class=\"stream\" data-stream-id=\"185405\" href=\"/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0\">#t-compiler/wg-rls-2.0</a> stream</p>",
        "id": 187560867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004958
    },
    {
        "content": "<p>next checkin</p>",
        "id": 187560870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> on WG-self-profile</p>",
        "id": 187560884,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004972
    },
    {
        "content": "<p>(if we haven't lost <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  due to going over time ... <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> )</p>",
        "id": 187560898,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581004982
    },
    {
        "content": "<p>yup, here goes:</p>",
        "id": 187560902,
        "sender_full_name": "mw",
        "timestamp": 1581004983
    },
    {
        "content": "<p>There's been quite a bit of progress!</p>",
        "id": 187560911,
        "sender_full_name": "mw",
        "timestamp": 1581004989
    },
    {
        "content": "<ul>\n<li>\n<p>We finished our <a href=\"https://github.com/rust-lang/rust/issues/58967\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58967\">\"Minimum Viable Product\"</a> <code>\\o/</code><br>\n  This basically means that self-profiling is enabled for all <a href=\"https://perf.rust-lang.org/\" target=\"_blank\" title=\"https://perf.rust-lang.org/\">perf.rlo</a> runs and we automatically provide<br>\n  detailed (comparison) views (<a href=\"https://perf.rust-lang.org/detailed-query.html?commit=3761dcd3467441f78939ccb3b341b03b6a7558d7&amp;base_commit=ac2f3fa41ac5ae8425b959f955bb7433b7c57aea&amp;benchmark=await-call-tree-debug&amp;run_name=clean\" target=\"_blank\" title=\"https://perf.rust-lang.org/detailed-query.html?commit=3761dcd3467441f78939ccb3b341b03b6a7558d7&amp;base_commit=ac2f3fa41ac5ae8425b959f955bb7433b7c57aea&amp;benchmark=await-call-tree-debug&amp;run_name=clean\">example</a>) of where the compiler spends its time. </p>\n<p>We should write a blog post about this some time soon.</p>\n</li>\n</ul>",
        "id": 187560920,
        "sender_full_name": "mw",
        "timestamp": 1581004997
    },
    {
        "content": "<ul>\n<li>We implemented query-key recording, which means that recorded events can now be attributed to individual query invocations. Arguments for non-query events are soon to follow (e.g. LLVM module names)</li>\n</ul>",
        "id": 187560927,
        "sender_full_name": "mw",
        "timestamp": 1581005008
    },
    {
        "content": "<ul>\n<li>There's an open PR by <span class=\"user-mention\" data-user-id=\"125799\">@andjo403</span> that adds tracking of individual LLVM passes <span aria-label=\"100\" class=\"emoji emoji-1f4af\" role=\"img\" title=\"100\">:100:</span></li>\n</ul>",
        "id": 187560937,
        "sender_full_name": "mw",
        "timestamp": 1581005014
    },
    {
        "content": "<ul>\n<li>\n<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>'s <a href=\"https://github.com/rust-lang/measureme/tree/master/crox\" target=\"_blank\" title=\"https://github.com/rust-lang/measureme/tree/master/crox\">crox</a> can now generate profiles for entire Cargo invocations via the <code>--dir</code> flag. This is incredibly useful and actually pretty easy to use. Being able to inspect the various rustc processes and their individual threads on a common timeline is quite eye opening. </p>\n<p>I think <code>crox</code> deserves a blog post by itself.</p>\n</li>\n</ul>",
        "id": 187560953,
        "sender_full_name": "mw",
        "timestamp": 1581005024
    },
    {
        "content": "<p>Recently activity of the working group has slowed down a bit since both <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and I have been working on other things. We'll see where we'll go from here. Publishing blog posts about the awesome tooling already implemented seems like a good idea.</p>",
        "id": 187560967,
        "sender_full_name": "mw",
        "timestamp": 1581005032
    },
    {
        "content": "<p>It's in the early stages but I've started writing a post for Inside-Rust</p>",
        "id": 187561032,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581005053
    },
    {
        "content": "<p>thank you for saying what crox is</p>",
        "id": 187561042,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581005066
    },
    {
        "content": "<p>I had seen references to that but hadn 't gotten context</p>",
        "id": 187561051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581005075
    },
    {
        "content": "<p>ChRomium OXide =&gt; visualizing the self-profilng data with Chromium's profiler</p>",
        "id": 187561124,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581005126
    },
    {
        "content": "<p>I'm happy to report that quite a few people gave feedback on how useful self-profiling was for them</p>",
        "id": 187561159,
        "sender_full_name": "mw",
        "timestamp": 1581005142
    },
    {
        "content": "<p>This is super awesome</p>",
        "id": 187561179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005156
    },
    {
        "content": "<p>I am going to ask my usual question</p>",
        "id": 187561230,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005169
    },
    {
        "content": "<p>Is there docs I can point people at? :)</p>",
        "id": 187561233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005173
    },
    {
        "content": "<p>(In particular, maybe in the unstable rustc guide?:)</p>",
        "id": 187561244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005181
    },
    {
        "content": "<p>I think that's what the blog posts should be?</p>",
        "id": 187561263,
        "sender_full_name": "mw",
        "timestamp": 1581005193
    },
    {
        "content": "<p>But seriously this really <em>is</em> very cool, I love the integration into perf</p>",
        "id": 187561265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005195
    },
    {
        "content": "<p>The rustc-guide will at least tell you where to go :) <a href=\"https://rust-lang.github.io/rustc-guide/profiling.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/profiling.html\">https://rust-lang.github.io/rustc-guide/profiling.html</a></p>",
        "id": 187561287,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581005207
    },
    {
        "content": "<p>OK, I was thinking of the rustc book</p>",
        "id": 187561308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005218
    },
    {
        "content": "<p>like, the user's guide</p>",
        "id": 187561320,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005223
    },
    {
        "content": "<p>but having the info in rustc-guide is a good start</p>",
        "id": 187561325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005232
    },
    {
        "content": "<p>maybe I'll open a PR copying the links...</p>",
        "id": 187561334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005240
    },
    {
        "content": "<p>Can always file an issue in .... some repo ...</p>",
        "id": 187561347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581005247
    },
    {
        "content": "<p>with that TODO item</p>",
        "id": 187561355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581005251
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> are you around? Did you want to say anything about the status of your polymorphization work, or design questions there?</p>\n</blockquote>\n<p>(sorry, missed the start of the meeting, the ongoing conversation you linked to summarizes the main decisions that I was unsure about)</p>",
        "id": 187561361,
        "sender_full_name": "davidtwco",
        "timestamp": 1581005255
    },
    {
        "content": "<p>okay this is great stuff</p>",
        "id": 187561364,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581005256
    },
    {
        "content": "<p>(side note, we don't describe unstable things in the \"rustc book\" anyway, though I'm unconvinced that's a good policy, so really it'd be the unstable guide)</p>",
        "id": 187561371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005260
    },
    {
        "content": "<blockquote>\n<p>I'm happy to report that quite a few people gave feedback on how useful self-profiling was for them</p>\n</blockquote>\n<p>mostly I want to keep directing people to this, I think there's a ton of value here</p>",
        "id": 187561397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005277
    },
    {
        "content": "<p>I'm going to tie the meeting itself off now (but people are free to keep discussing obviously).</p>",
        "id": 187561465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581005300
    },
    {
        "content": "<p>If you cc me on the issue, I'll make sure we include something there. I didn't know the unstable rustc book was a thing</p>",
        "id": 187561473,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581005304
    },
    {
        "content": "<p>Thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 187561480,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581005309
    },
    {
        "content": "<blockquote>\n<p>If you cc me on the issue, I'll make sure we include something there. I didn't know the unstable rustc book was a thing</p>\n</blockquote>\n<p>it's <a href=\"https://doc.rust-lang.org/unstable-book/\" target=\"_blank\" title=\"https://doc.rust-lang.org/unstable-book/\">published here</a>, and the <a href=\"https://github.com/rust-lang/rust/tree/master/src/doc/unstable-book\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/tree/master/src/doc/unstable-book\">sources are here</a> -- but I don't know how many people even look at it. Mostly I think that having a guide that explains how to use some of rustc's more esoteric features seems good though</p>",
        "id": 187561592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005380
    },
    {
        "content": "<p>personally I think we should document unstable flags in a special section of <a href=\"https://doc.rust-lang.org/rustc/index.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/rustc/index.html\">the rustc book</a></p>",
        "id": 187561765,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005466
    },
    {
        "content": "<p>especially \"semi-stable\" ones like this</p>",
        "id": 187561772,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005471
    },
    {
        "content": "<p>but in any case I think <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is right that a blog post is a better starting point and will get more attention :P</p>",
        "id": 187561791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005481
    },
    {
        "content": "<p>I'd just like to have something in there that's like \"you can profile your code! check out the README here to learn more\"</p>",
        "id": 187561810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005494
    },
    {
        "content": "<p>For the blog, my goal is to show step-by-step how to use all of the tools in <code>measureme</code> to diagnose/inspect where rustc is spending it's compile time. It should be easy to convert that into a tutorial in the crate docs later.</p>",
        "id": 187561992,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581005597
    },
    {
        "content": "<p>Yes, beautiful</p>",
        "id": 187562605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581005984
    },
    {
        "content": "<blockquote>\n<p>Anyway, I guess I still believe that a more minimal output will be better, and that the danger of too much info is real, but as I wrote, i'm open to being told I am wrong. Maybe we should do some sort of poll on internals? twitter poll? I don't know</p>\n</blockquote>\n<p><a href=\"https://internals.rust-lang.org/t/poll-how-much-context-to-give-for-async-error-messages/11753\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/poll-how-much-context-to-give-for-async-error-messages/11753\">I created an internals thread</a> that includes a poll about the async-await error message. cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> and maybe <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span> too? :)</p>",
        "id": 187563954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581006735
    }
]