[
    {
        "content": "<p>Rustdoc has been adding a few lints over the past year (e.g. <a href=\"https://github.com/rust-lang/rust/pull/77856\">https://github.com/rust-lang/rust/pull/77856</a>, <a href=\"https://github.com/rust-lang/rust/pull/77249\">https://github.com/rust-lang/rust/pull/77249</a>, <a href=\"https://github.com/rust-lang/rust/pull/77119\">https://github.com/rust-lang/rust/pull/77119</a>). <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> mentioned in <a href=\"https://github.com/rust-lang/rust/pull/80456#issuecomment-751882904\">https://github.com/rust-lang/rust/pull/80456#issuecomment-751882904</a> that new lints should be going through T-lang. Is that true even for lints only emitted by rustdoc? Is it ok for me to approve <a href=\"https://github.com/rust-lang/rust/pull/80456\">https://github.com/rust-lang/rust/pull/80456</a>, which turns an existing hard warning into a lint?</p>",
        "id": 221184203,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609294266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Do you know why rustdoc isn't using tool-scoped lints like <code>rustdoc::broken_intra_doc_links</code>?</p>",
        "id": 221185422,
        "sender_full_name": "Eric Huss",
        "timestamp": 1609296256
    },
    {
        "content": "<p>I think just no one thought of it</p>",
        "id": 221185429,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296267
    },
    {
        "content": "<p>I'd be happy to switch it, but we couldn't get rid of the old lints, that would be a breaking change</p>",
        "id": 221185433,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296280
    },
    {
        "content": "<p>they'd have to be deprecated instead</p>",
        "id": 221185438,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296295
    },
    {
        "content": "<p>It was part of <a href=\"https://github.com/rust-lang/rfcs/issues/2103\">RFC#2103</a></p>",
        "id": 221185442,
        "sender_full_name": "Eric Huss",
        "timestamp": 1609296300
    },
    {
        "content": "<p>then never implemented I guess <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> this is before I joined the team</p>",
        "id": 221185456,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span>  do you know?</p>",
        "id": 221185521,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296406
    },
    {
        "content": "<p>I'd rather not only add <code>rustdoc::</code> for new lints though, that seems even more inconsistent</p>",
        "id": 221185589,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296513
    },
    {
        "content": "<p>I would expect all existing lints to get renamed over to <code>rustdoc::</code>.  I'm not sure if the rename machinery can handle that, though.</p>",
        "id": 221185681,
        "sender_full_name": "Eric Huss",
        "timestamp": 1609296633
    },
    {
        "content": "<p>looks like other parts of the RFC weren't implemented either: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=abbc8977f2e7a17704f2858e7e350d71\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=abbc8977f2e7a17704f2858e7e350d71</a></p>",
        "id": 221185697,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296689
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/131828-t-compiler/topic/What.20is.20the.20policy.20for.20new.20lints.3F/near/221185681\">said</a>:</p>\n<blockquote>\n<p>I would expect all existing lints to get renamed over to <code>rustdoc::</code>.  I'm not sure if the rename machinery can handle that, though.</p>\n</blockquote>\n<p>ok - I expect this to be moderately disruptive for <code>broken_intra_doc_links</code>, but as long as the compiler suggests <code>rustdoc::broken_intra_doc_links</code> isntead I'm ok with that</p>",
        "id": 221185786,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296812
    },
    {
        "content": "<p>let me take a stab at that</p>",
        "id": 221185793,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296822
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/context/struct.LintStore.html#method.register_group\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/context/struct.LintStore.html#method.register_group</a> looks right</p>",
        "id": 221185902,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609296951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> do you happen to have a code sample to point me to?</p>",
        "id": 221186201,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609297328
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/131828-t-compiler/topic/What.20is.20the.20policy.20for.20new.20lints.3F/near/221185681\">said</a>:</p>\n<blockquote>\n<p>I would expect all existing lints to get renamed over to <code>rustdoc::</code>.  I'm not sure if the rename machinery can handle that, though.</p>\n</blockquote>\n<p>apparently not</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;compiler/rustc_lint/src/context.rs:267:18: invalid lint renaming of intra_doc_link_resolution_failure to rustdoc::broken_intra_doc_links&#39;, compiler/rustc_middle/src/util/bug.rs:34:26\n</code></pre></div>",
        "id": 221188088,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609300410
    },
    {
        "content": "<p>I do see <code>check_tool_name_for_backwards_compat</code> though, I'll try that</p>",
        "id": 221188132,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609300445
    },
    {
        "content": "<p>oh wait that won't help - rustdoc lints are now only registered when rustdoc runs</p>",
        "id": 221188223,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609300627
    },
    {
        "content": "<p>so people will still see 'unknown lint' when running rustc</p>",
        "id": 221188228,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609300637
    },
    {
        "content": "<p>yeah I have no idea how to do this</p>",
        "id": 221188231,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609300654
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/53762\">https://github.com/rust-lang/rust/pull/53762</a> seems relevant but I don't understand anything in that PR :/</p>",
        "id": 221188751,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609301554
    },
    {
        "content": "<p>well, at least I got something out of tonight <a href=\"https://github.com/rust-lang/rust/pull/80500\">https://github.com/rust-lang/rust/pull/80500</a></p>",
        "id": 221188993,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609302048
    },
    {
        "content": "<p>Keeping the old names as an alias seems reasonable for compatibility.</p>",
        "id": 221194359,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1609311523
    },
    {
        "content": "<p>As for approval processes, I don't think T-lang should be a gating approval for rustdoc lints.</p>",
        "id": 221194378,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1609311572
    },
    {
        "content": "<p>I'm also ok with requiring only rustdoc team approval, if the lints are scoped to rustdoc (implemented in rustdoc, maybe namespaced to <code>rustdoc::</code>) and follow naming conventions (<a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0344-conventions-galore.md#lints\">https://github.com/rust-lang/rfcs/blob/master/text/0344-conventions-galore.md#lints</a>).</p>",
        "id": 221204635,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1609325717
    },
    {
        "content": "<p>I didn't here there was one... You create it, add doc and test for it and I think that's it. The only \"policy\" I know about lints is about the naming, but I don't think it's what you're asking.</p>",
        "id": 221208957,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1609331150
    },
    {
        "content": "<p>As for the lint scoping, it's funny because we talked about it recently. :D</p>\n<p>However, it'd be a breaking change to just remove them so like <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> said: having them as aliases (at least for some time) will be needed).</p>",
        "id": 221209064,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1609331262
    },
    {
        "content": "<p>The aliases could only be removed on an edition boundary</p>",
        "id": 221209124,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609331308
    },
    {
        "content": "<p>So  the process would be to move rustdoc lints to scoped lints, with \"silent aliases\" (allow by default lint) and with edition 2021 make it warn-by-default and remove the aliases with edition 2024 completely?</p>",
        "id": 221212761,
        "sender_full_name": "flip1995",
        "timestamp": 1609335432
    },
    {
        "content": "<p>why not warn-by-default in 2018 and remove in 2021? the only lint I expect this to actually matter for is <code>broken_intra_doc_links</code>, which was just stabilized; the others are either nightly-only or not many people use them</p>",
        "id": 221214027,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609336657
    },
    {
        "content": "<p>I would also warn-by-default immediately (that's what Clippy did). But I interpreted <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> message like we would have to wait for the edition to emit a warning. But I think this is for T-rustdoc and T-lang to decide, so I don't want to get in the way here.</p>\n<p>If you need help to get the <code>rustdoc::</code> prefix to work let me know, though.</p>",
        "id": 221214392,
        "sender_full_name": "flip1995",
        "timestamp": 1609336955
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/80527\">https://github.com/rust-lang/rust/pull/80527</a></p>",
        "id": 221239366,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609356424
    }
]