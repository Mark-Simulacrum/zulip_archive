[
    {
        "content": "<p>We currently have a lot of methods accepting closures as arguments in the <code>Encoder</code> and <code>Decoder</code> traits. It looks like they are intended for the serialization format to do something before/after they encode/decode the actual types. Calls to these methods are automatically generated when deriving <code>{En, De}codable</code> implementations.</p>\n<p>Would changing these methods, e.g. instead of <code>e.emit_enum(|s| do_stuff(s))?</code>we have two methods: <code>e.begin_emit_enum()?; do_stuff(e)?; e.end_emit_enum()?</code> be beneficial? It would reduce some stress for monomorphization, and could improve bootstrap times. The only issue with that is that it could be a lot easier to write invalid code, for example calling <code>begin_emit_enum</code> but not  <code>end_emit_enum</code>, but given that it is mostly generated by procedural macros, I'd say that it is negligible.</p>\n<p><a href=\"/user_uploads/4715/QCpXJNBpZbWZKnsDHXCysHXx/image.png\">image.png</a> <br>\n<a href=\"/user_uploads/4715/zn2CmOx3g2hEI0_a9j_j2-L4/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/QCpXJNBpZbWZKnsDHXCysHXx/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/QCpXJNBpZbWZKnsDHXCysHXx/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/4715/zn2CmOx3g2hEI0_a9j_j2-L4/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/zn2CmOx3g2hEI0_a9j_j2-L4/image.png\"></a></div>",
        "id": 263108712,
        "sender_full_name": "fee1-dead",
        "timestamp": 1638257013
    },
    {
        "content": "<p>I got a PR to remove the json support. I believe this PR also completely eliminates these functions. I need to write an MCP for it though and rebase it.</p>",
        "id": 263120760,
        "sender_full_name": "bjorn3",
        "timestamp": 1638265569
    },
    {
        "content": "<p>Many of these closures today likely benefit codegen, as they force unique monomorphization per call site. So it's likely not trivial to just remove them, even if they're empty - e.g., see <a href=\"https://github.com/rust-lang/rust/pull/89881\">https://github.com/rust-lang/rust/pull/89881</a> which wasn't even an improvement in all cases.</p>",
        "id": 263141303,
        "sender_full_name": "simulacrum",
        "timestamp": 1638277902
    }
]