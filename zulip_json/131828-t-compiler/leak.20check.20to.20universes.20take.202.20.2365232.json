[
    {
        "content": "<p>since I have a little experience with region errors, I was looking at <a href=\"https://github.com/rust-lang/rust/issues/65232\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65232\">#65232</a>'s and have written down a couple of maybe-useful notes</p>",
        "id": 178841790,
        "sender_full_name": "lqd",
        "timestamp": 1571827743
    },
    {
        "content": "<p>especially about the \"expected X, found X\" errors, which we did somewhat improve before in <a href=\"https://github.com/rust-lang/rust/issues/57901\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57901\">#57901</a> (albeit with the \"little odd\" wording <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> reported -- and which is the work you asked me about a couple weeks back Matthew, it was merged but they mostly don't show with borrowck=mir, where we'd get the \"higher-ranked subtype error\" most of the time IIUC), and was reported in <a href=\"https://github.com/rust-lang/rust/issues/57362\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57362\">#57362</a></p>",
        "id": 178841874,
        "sender_full_name": "lqd",
        "timestamp": 1571827806
    },
    {
        "content": "<p>in particular I looked at <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/issues/issue-57362-2.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/issues/issue-57362-2.rs\">this test case</a> producing <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/test/ui/issues/issue-57362-2.stderr\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/test/ui/issues/issue-57362-2.stderr\">this output</a> with the PR</p>",
        "id": 178841971,
        "sender_full_name": "lqd",
        "timestamp": 1571827950
    },
    {
        "content": "<p>niko you <a href=\"https://github.com/rust-lang/rust/pull/65232#issuecomment-540567036\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65232#issuecomment-540567036\">mentioned</a> maybe breaking the previous work on these errors but no we can still <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/test/ui/issues/issue-57362-2.stderr#L1-L14\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/test/ui/issues/issue-57362-2.stderr#L1-L14\">see it in the output</a>.</p>",
        "id": 178842041,
        "sender_full_name": "lqd",
        "timestamp": 1571828038
    },
    {
        "content": "<p>in this case the difference is that there are 2 <code>RegionResolutionError</code>s instead of 1:</p>\n<ul>\n<li>a <code>SubSupConflict</code> which is the \"implementation is not general enough\" error with the \"odd wording\"</li>\n<li>your new <code>UpperBoundUniverseConflict</code> error, which ends up as the \"expected X found X\" error</li>\n</ul>",
        "id": 178842086,
        "sender_full_name": "lqd",
        "timestamp": 1571828050
    },
    {
        "content": "<p>did we want 2 errors here ? (or should one actually subsume/suppress the other, especially if upper bound universe conflicts partially overlap with sub-sup conflicts ?)</p>",
        "id": 178842127,
        "sender_full_name": "lqd",
        "timestamp": 1571828108
    },
    {
        "content": "<p>in any case, the <code>UpperBoundUniverseConflict</code> errors will not be using the <code>nice_region_errors</code> changes you added in <code>try_report_placeholder_conflict</code> <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/placeholder_error.rs#L110-L127\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/placeholder_error.rs#L110-L127\">here</a> to support them, because <code>try_report_nice_region_error</code> doesn't know about them <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L20\">here</a>, and also <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L80-L84\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L80-L84\">here</a> just a bit later via <code>try_report_named_anon_conflict</code></p>\n<p>this, IIUC, will reject the possibility of outputting a nice region error <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/mod.rs#L320\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/mod.rs#L320\">here</a> and emit a placeholder failure error via <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/mod.rs#L385-L407\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/mod.rs#L385-L407\">this</a> instead</p>\n<p>(but accepting this new region resolution error variant where I've linked might require the dummy sub region again, or making <code>get_regions</code> and eg <code>try_report_named_anon_conflict</code> -- which itself tries to report its own nice region errors before placeholder conflicts -- support optional sub/sup regions)</p>",
        "id": 178842269,
        "sender_full_name": "lqd",
        "timestamp": 1571828264
    },
    {
        "content": "<p>but with this, it will make the 2 errors trigger the <code>try_report_placeholders_trait</code> message</p>",
        "id": 178842336,
        "sender_full_name": "lqd",
        "timestamp": 1571828300
    },
    {
        "content": "<p>however the <code>ObligationCause</code> will be an item obligation, and the error message will think it's coming from a where clause, which is not technically in the surface syntax in this test but can probably be understood, or improved over time (and which I can do btw)</p>",
        "id": 178842373,
        "sender_full_name": "lqd",
        "timestamp": 1571828357
    },
    {
        "content": "<p>(so without other changes/improvements elsewhere, the second error </p>\n<div class=\"codehilite\"><pre><span></span>error[E0308]: mismatched types\n  --&gt; $DIR/issue-57362-2.rs:22:13\n   |\nLL |     let x = &lt;fn (&amp;())&gt;::make_g();\n   |             ^^^^^^^^^^^^^^^^^^ one type is more general than the other\n   |\n   = note: expected type `X`\n              found type `X`\n</pre></div>\n\n\n<p>would now be, say, <a href=\"https://gist.github.com/lqd/a91a6ef849f87f9a4b713b7958387372\" target=\"_blank\" title=\"https://gist.github.com/lqd/a91a6ef849f87f9a4b713b7958387372\">this</a>)</p>",
        "id": 178842629,
        "sender_full_name": "lqd",
        "timestamp": 1571828645
    },
    {
        "content": "<p>now that I've finished writing up the notes, I can mention <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> -- and if it helps I can also look at the other stderr files, to see if this little analysis applies to them as well, just let me know</p>",
        "id": 178842770,
        "sender_full_name": "lqd",
        "timestamp": 1571828822
    },
    {
        "content": "<p>also <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> about <a href=\"https://github.com/rust-lang/rust/pull/65232#discussion_r334280541\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65232#discussion_r334280541\">your question</a>, it seems the answer is \"yes and no\": there are 2 errors at this point, replacing <code>'x</code> with <code>'static</code> in the closure, or making <code>'x: 'static</code> in the fn, will both get rid of the second error but not the first one</p>",
        "id": 178844936,
        "sender_full_name": "lqd",
        "timestamp": 1571831036
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> thanks for this. I started doing some digging myself. One thing that seems surprising -- you said that the \"nice region errors\" don't consider <code>UpperBoundUniverseConflict</code>, but at least on my branch it <em>does</em></p>",
        "id": 180443659,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573494072
    },
    {
        "content": "<p>I'm actually not sure why it's not triggering</p>",
        "id": 180443665,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573494076
    },
    {
        "content": "<p>I'm adding a bit more debug</p>",
        "id": 180443667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573494078
    },
    {
        "content": "<p>that said, I agree that we don't really want two errors here anyway, they are effectively duplicates</p>",
        "id": 180443684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573494091
    },
    {
        "content": "<p>hum I did build your branch at the time to investigate, and it didnâ€™t seem to trigger until I made the changes I mentioned here</p>",
        "id": 180446846,
        "sender_full_name": "lqd",
        "timestamp": 1573496494
    },
    {
        "content": "<p>to maybe be more clear, the \"big match\" in <code>try_report_placeholder_conflict</code> does handle them, but they never did get there</p>",
        "id": 180447566,
        "sender_full_name": "lqd",
        "timestamp": 1573497046
    },
    {
        "content": "<p>because <code>try_report_nice_region_error</code> didn't itself know about this new variant</p>",
        "id": 180447597,
        "sender_full_name": "lqd",
        "timestamp": 1573497076
    },
    {
        "content": "<p>but maybe you've updated the branch since I last saw it though, let me check</p>",
        "id": 180447613,
        "sender_full_name": "lqd",
        "timestamp": 1573497098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> they'll trigger if you add the <code>UpperBoundUniverseConflict</code> variant here <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L20\">https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L20</a></p>",
        "id": 180448485,
        "sender_full_name": "lqd",
        "timestamp": 1573497842
    },
    {
        "content": "<p>and also here <a href=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L80-L84\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L80-L84\">https://github.com/rust-lang/rust/blob/b99b7325e36fb14ee4391f0d3193d2ea640dabcf/src/librustc/infer/error_reporting/nice_region_error/mod.rs#L80-L84</a></p>",
        "id": 180451791,
        "sender_full_name": "lqd",
        "timestamp": 1573500165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I think I found the bug</p>",
        "id": 180455635,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502842
    },
    {
        "content": "<p>oh, I see you .. yes</p>",
        "id": 180455646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502846
    },
    {
        "content": "<p>that is the change I made, more or less :)</p>",
        "id": 180455648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502851
    },
    {
        "content": "<p>haha</p>",
        "id": 180455649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502852
    },
    {
        "content": "<p>more to the point, I removed the match altogether</p>",
        "id": 180455663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502862
    },
    {
        "content": "<p>nice :)</p>",
        "id": 180455740,
        "sender_full_name": "lqd",
        "timestamp": 1573502912
    },
    {
        "content": "<p>this required a few other minor changes</p>",
        "id": 180455763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573502925
    },
    {
        "content": "<p>the change in <code>get_regions</code> might have required to use the dummy sub again</p>",
        "id": 180455817,
        "sender_full_name": "lqd",
        "timestamp": 1573502991
    },
    {
        "content": "<p>I made <code>get_regions</code> return an <code>Option</code></p>",
        "id": 180455877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503009
    },
    {
        "content": "<p>and the callers just use <code>?</code></p>",
        "id": 180455885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503019
    },
    {
        "content": "<p>about to push, I was making <code>x.py test --bless</code> work</p>",
        "id": 180455896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503029
    },
    {
        "content": "<p>yeah that's what I was mentioning last time as well :)</p>",
        "id": 180455903,
        "sender_full_name": "lqd",
        "timestamp": 1573503035
    },
    {
        "content": "<p>(including those 2 exact same links you know :p)</p>",
        "id": 180455918,
        "sender_full_name": "lqd",
        "timestamp": 1573503054
    },
    {
        "content": "<p>sigh</p>",
        "id": 180455929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503066
    },
    {
        "content": "<p>but buried among too many text for sure</p>",
        "id": 180455931,
        "sender_full_name": "lqd",
        "timestamp": 1573503068
    },
    {
        "content": "<p>glad it's working now</p>",
        "id": 180455942,
        "sender_full_name": "lqd",
        "timestamp": 1573503091
    },
    {
        "content": "<p>now the question is</p>",
        "id": 180455946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503100
    },
    {
        "content": "<p>you'll probably have the \"where clause\" error mesg tho now</p>",
        "id": 180455947,
        "sender_full_name": "lqd",
        "timestamp": 1573503102
    },
    {
        "content": "<p>it seems like we don't get 2 errors anymore</p>",
        "id": 180455956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503112
    },
    {
        "content": "<p>I think some duplicate suppression is working? not really sure what is happening :)</p>",
        "id": 180455960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503118
    },
    {
        "content": "<p>that's fortunate :)</p>",
        "id": 180456013,
        "sender_full_name": "lqd",
        "timestamp": 1573503131
    },
    {
        "content": "<p>the question is ... what do I have to do to land this branch besides this</p>",
        "id": 180456015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503132
    },
    {
        "content": "<blockquote>\n<p>I think some duplicate suppression is working? not really sure what is happening :)</p>\n</blockquote>\n<p>not 100% sure</p>",
        "id": 180456022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573503137
    },
    {
        "content": "<p>were you testing <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/issues/issue-57362-2.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/issues/issue-57362-2.rs\">https://github.com/rust-lang/rust/blob/master/src/test/ui/issues/issue-57362-2.rs</a> ?</p>",
        "id": 180456037,
        "sender_full_name": "lqd",
        "timestamp": 1573503160
    },
    {
        "content": "<p>some of Matthew's concerns can probably be dealt with in future PRs (which I can also work on, esp around the error messages and things like this)</p>",
        "id": 180456199,
        "sender_full_name": "lqd",
        "timestamp": 1573503286
    },
    {
        "content": "<p>but they still had some questions IIRC</p>",
        "id": 180456222,
        "sender_full_name": "lqd",
        "timestamp": 1573503313
    },
    {
        "content": "<p>maybe a crater run ?</p>",
        "id": 180456316,
        "sender_full_name": "lqd",
        "timestamp": 1573503375
    },
    {
        "content": "<p>(you left a list of TODO items in the PR text as well)</p>",
        "id": 180456375,
        "sender_full_name": "lqd",
        "timestamp": 1573503422
    },
    {
        "content": "<blockquote>\n<p>the question is ... what do I have to do to land this branch besides this</p>\n</blockquote>\n<p>I think that I was generally happy with it. There was a regression that I was somewhat concerned about ...</p>",
        "id": 180456389,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1573503434
    },
    {
        "content": "<p>src/test/ui/hrtb/issue-57639.rs<br>\n<a href=\"https://github.com/rust-lang/rust/pull/65232/files#diff-973f3a129f85d3c38af3cdbb4557fbc6\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65232/files#diff-973f3a129f85d3c38af3cdbb4557fbc6\">https://github.com/rust-lang/rust/pull/65232/files#diff-973f3a129f85d3c38af3cdbb4557fbc6</a></p>",
        "id": 180456479,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1573503486
    },
    {
        "content": "<p>this regression seemed uncommon last time (eg it didn't trigger on the universes crater run at the time)</p>",
        "id": 180457526,
        "sender_full_name": "lqd",
        "timestamp": 1573504376
    },
    {
        "content": "<p>One thing I am wondering about is the coherence effects</p>",
        "id": 180523344,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570174
    },
    {
        "content": "<p>I feel like there might need to be an RFC or other formal decision</p>",
        "id": 180523358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570184
    },
    {
        "content": "<p>I do think I could make a warning period, having thought about it some</p>",
        "id": 180523367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570191
    },
    {
        "content": "<p>I think I might prefer to put off the NLL work</p>",
        "id": 180523375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570198
    }
]