[
    {
        "content": "<p>Is there anyone currently pushing let-chains forward? <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>, it looks like you were involved - do you know what work is remaining? I'd be interested in picking it up.</p>",
        "id": 201247601,
        "sender_full_name": "davidtwco",
        "timestamp": 1592473914
    },
    {
        "content": "<p>I was reviewing changes, but I have absolutely no overview of the progress</p>",
        "id": 201247664,
        "sender_full_name": "oli",
        "timestamp": 1592473949
    },
    {
        "content": "<p>I that the following were what the next steps were:</p>\n<ul>\n<li>Reintroduce <code>hir::ExprKind::If</code> and also handle in mir lowering</li>\n<li>Add <code>hir::ExprKind::Let</code>, mir lowering could be split out here.</li>\n</ul>\n<p>I think Centril had a branch for <code>ExprKind::Let</code>, but it's a bit messy doing <code>ExprKind::Let</code> before <code>ExprKind::If</code>.</p>",
        "id": 201256771,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1592480925
    },
    {
        "content": "<p>And then at some point: make <code>let expressions + &amp;&amp;</code> lower to MIR that keeps the borrow checker happy.</p>",
        "id": 201256892,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1592480995
    },
    {
        "content": "<p>Thanks! I'll familiarize myself with the previous PRs and how things are being lowered currently with that in mind.</p>",
        "id": 201258976,
        "sender_full_name": "davidtwco",
        "timestamp": 1592482402
    },
    {
        "content": "<p>I would love to see someone pick up and run with <code>let</code> chains. I've found myself wanting them several times lately.</p>",
        "id": 201337118,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592522193
    },
    {
        "content": "<p>kind of funny that we're undoing the <code>if</code> removal (which by itself I guess wasn't that big of a win anyway :P)</p>",
        "id": 202045947,
        "sender_full_name": "eddyb",
        "timestamp": 1593137412
    },
    {
        "content": "<p>looking at the PR which simplified the HIR might reduce the work here to copy-paste.</p>",
        "id": 202137481,
        "sender_full_name": "nagisa",
        "timestamp": 1593202585
    },
    {
        "content": "<p>I’m going to start digging into this at the weekend now that I’ve gotten on top of other PRs.</p>",
        "id": 202146421,
        "sender_full_name": "davidtwco",
        "timestamp": 1593208061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> Did you end up picking this up? If not, I'd be interested in working on it</p>",
        "id": 206355441,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596905756
    },
    {
        "content": "<p>I haven’t yet, been meaning to carve out time to dig into it but always ended up doing something else, feel free to take it <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></p>",
        "id": 206355533,
        "sender_full_name": "davidtwco",
        "timestamp": 1596905880
    },
    {
        "content": "<p>It looks like the original RFC described a desugaring in terms of existing language features (labeled break with value). Is that the intended plan for implementing the desugaring, or is that just a way of conceptually understanding the feature?</p>",
        "id": 206358319,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596910922
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/pull/68577\">https://github.com/rust-lang/rust/pull/68577</a> seemed to be moving in the direction of not using labeled break at all</p>",
        "id": 206358361,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596910966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> ^</p>",
        "id": 206361604,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596916217
    },
    {
        "content": "<p>Yes, the rfc desugaring gives drop ordering inconsistent with with <code>if ... &amp;&amp; ...</code>. Reintroducing <code>if</code> in HIR and adding a <code>let</code> expression works better (and is easier to extend to general let expressions and/or <code>let else</code>.</p>",
        "id": 206363600,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1596919846
    },
    {
        "content": "<p>Can someone review <a href=\"https://github.com/rust-lang/rust/pull/79328\">https://github.com/rust-lang/rust/pull/79328</a>? I am really stuck with the UI tests and any help would be appreciated</p>",
        "id": 220481318,
        "sender_full_name": "Caio",
        "timestamp": 1608402518
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211466\">@Caio</span> what help do you need? all the tests are passing</p>",
        "id": 220481373,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608402629
    },
    {
        "content": "<p>Two tests were temporary changed to make CI green. The real problem comes down from the fact that some diagnostics disappeared and I couldn't find the root cause of such behaviors, e.g.,  <a href=\"https://github.com/rust-lang/rust/pull/79328/files#diff-c823c09660f5b112f95e97e8ff71f1797b6c7f37dbb3d16f8e98bbaea8072e95\">https://github.com/rust-lang/rust/pull/79328/files#diff-c823c09660f5b112f95e97e8ff71f1797b6c7f37dbb3d16f8e98bbaea8072e95</a>. Another worrisome thing is that MIR output has changed (not sure it was for better or for worse)</p>",
        "id": 220482044,
        "sender_full_name": "Caio",
        "timestamp": 1608403768
    },
    {
        "content": "<p>Ok. Just found out that <code>find_all_ret_expressions</code> wasn't visiting <code>hir::ExprKind::If</code> but there are still many tests to fix <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>",
        "id": 220483057,
        "sender_full_name": "Caio",
        "timestamp": 1608405390
    }
]