[
    {
        "content": "<p>I'm a little curious why are \"parse\" and \"expansion\" are two different phases? I feel the \"parse\" phase is just \"crate root parse\" or \"primary parse\" or something like that,  and maybe it's reasonable to be invoked by the expansion process? I'm raising this question because i saw <a href=\"https://github.com/rust-lang/rust/issues/64197\">#64197</a> . cc <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></p>",
        "id": 246817527,
        "sender_full_name": "Charles Lew",
        "timestamp": 1626939858
    },
    {
        "content": "<p>Does some documentation says that parsing and expansion are \"phases\"?</p>",
        "id": 246831684,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1626950720
    },
    {
        "content": "<p>Right now parsing, expansion and (early) name resolution are not phases but rather compiler areas, roughly corresponding to <code>rustc_parse</code>, <code>rustc_expand</code> and <code>rustc_resolve</code> crates.</p>",
        "id": 246831808,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1626950793
    },
    {
        "content": "<p>They all call each other recursively in a single top-level algorithm.</p>",
        "id": 246831842,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1626950853
    },
    {
        "content": "<p>I remembered i read it somewhere, but i couldn't find it now.</p>\n<p>This callback struct also leads to me thinking this way.<br>\n<a href=\"https://github.com/rust-lang/rust/blob/1.53.0/compiler/rustc_driver/src/lib.rs#L85\">https://github.com/rust-lang/rust/blob/1.53.0/compiler/rustc_driver/src/lib.rs#L85</a></p>\n<p>and also these queries here:</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/1.53.0/compiler/rustc_driver/src/lib.rs#L368\">https://github.com/rust-lang/rust/blob/1.53.0/compiler/rustc_driver/src/lib.rs#L368</a></p>",
        "id": 246833025,
        "sender_full_name": "Charles Lew",
        "timestamp": 1626951922
    },
    {
        "content": "<p>Somehow i feel maybe it's a unified, hir building process(also pulling in dependencies represented by DefIds and other things). Maybe the <code>parse</code> and <code>expansion</code> queries should not be separated... ?</p>",
        "id": 246833278,
        "sender_full_name": "Charles Lew",
        "timestamp": 1626952191
    },
    {
        "content": "<p>Maybe.<br>\nThe <code>after_parsing</code> callback is extremely useless now, the <code>extern_mod_loaded</code> callback executed on every module loading serves its role now.<br>\nThe <code>parse</code> query only produces the crate root now, a \"seed\" for all the further combined resolution-expansion-parsing.</p>",
        "id": 246834164,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1626952991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> can you open an E-easy/mentor issue for getting rid of after_parsing? I'm sure someone will grab it pretty quick :)</p>",
        "id": 246838452,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626956194
    },
    {
        "content": "<p>I wonder if we could get rid of the root parsing and treat it as a module. so the crate AST starts out sort of empty, with just a placeholder or something, and then the iterative/recursive expand&lt;-&gt;resolve algorithm gets engaged?</p>",
        "id": 247313913,
        "sender_full_name": "eddyb",
        "timestamp": 1627379963
    }
]