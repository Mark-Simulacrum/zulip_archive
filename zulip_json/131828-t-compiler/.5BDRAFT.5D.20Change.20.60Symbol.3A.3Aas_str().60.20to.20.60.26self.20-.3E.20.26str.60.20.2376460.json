[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 209693032,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764318
    },
    {
        "content": "<p>was going to take a look at this issue</p>",
        "id": 209693081,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764333
    },
    {
        "content": "<p>I was wondering ...</p>",
        "id": 209693143,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764355
    },
    {
        "content": "<p>why do we want to do this?</p>",
        "id": 209693173,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764368
    },
    {
        "content": "<p>what's the expected outcome?</p>",
        "id": 209693188,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764373
    },
    {
        "content": "<p>have you seen <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>'s comment?</p>",
        "id": 209693197,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764376
    },
    {
        "content": "<p>I see the \"&amp;str is nicer to work with than SymbolStr\"</p>",
        "id": 209693345,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764406
    },
    {
        "content": "<p>\"It would be nice to eliminate SymbolStr.\" unsure why this :)</p>",
        "id": 209693389,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764419
    },
    {
        "content": "<p>\"It avoids the lie that SymbolStr strings have a static lifetime, replacing it with a smaller lie that the strings have a lifetime tied to the lifetime of the input Symbol.\" unsure I understand what lie are we talking about :)</p>",
        "id": 209693444,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599764434
    },
    {
        "content": "<p>right now <code>SymbolStr</code> contains a <code>&amp;'static str</code></p>",
        "id": 209693519,
        "sender_full_name": "oli",
        "timestamp": 1599764461
    },
    {
        "content": "<p>and you can pass it around arbitrarily, but not across threads</p>",
        "id": 209693570,
        "sender_full_name": "oli",
        "timestamp": 1599764482
    },
    {
        "content": "<p>I'm not worried about</p>\n<blockquote>\n<p>We can't mark &amp;str as !Send and !Sync.</p>\n</blockquote>\n<p>because you can't send or share a <code>&amp;str</code> across threads without crossbeam like stuff and we have none of that</p>",
        "id": 209694920,
        "sender_full_name": "oli",
        "timestamp": 1599765114
    },
    {
        "content": "<p>I haven't looked at <code>to_stable_hash_key</code>, so idk what would be the problem there</p>",
        "id": 209695014,
        "sender_full_name": "oli",
        "timestamp": 1599765149
    },
    {
        "content": "<p>ok, gonna take a look at this</p>",
        "id": 209695828,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599765547
    },
    {
        "content": "<blockquote>\n<p>because you can't send or share a <code>&amp;str</code> across threads without crossbeam like stuff and we have none of that</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> Can you elaborate on that? Would there be a soundness hole if we started to use crossbeam in the compiler?</p>",
        "id": 209698010,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1599766500
    },
    {
        "content": "<p>one of the crossbeam packages appears to rely on a behavior that could be UB, so yes.</p>",
        "id": 209714590,
        "sender_full_name": "Jubilee",
        "timestamp": 1599774936
    },
    {
        "content": "<p>It's not very much, but it's the one, and it would be tedious to audit particular usages of crossbeam to guarantee it wasn't using that.</p>",
        "id": 209714723,
        "sender_full_name": "Jubilee",
        "timestamp": 1599774994
    },
    {
        "content": "<p>this is not at all related to that, presumably</p>",
        "id": 209715140,
        "sender_full_name": "simulacrum",
        "timestamp": 1599775224
    },
    {
        "content": "<p>I think sharing the &amp;str across threads is actually not UB, so long as it's <code>&amp;'a str</code> rather than 'static; a scoped thread should be fine? Not 100% sure</p>",
        "id": 209715235,
        "sender_full_name": "simulacrum",
        "timestamp": 1599775292
    },
    {
        "content": "<p>Probably wouldn't matter for this specific context no, question appeared more general.</p>",
        "id": 209715366,
        "sender_full_name": "Jubilee",
        "timestamp": 1599775379
    }
]