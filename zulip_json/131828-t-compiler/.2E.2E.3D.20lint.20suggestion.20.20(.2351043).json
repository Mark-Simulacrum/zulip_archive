[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> I'm fine with having it taken it off my hands, but I think it might be slightly less trivial than changing the suggestion applicability, although we _might_ be able to get away with it being that simple given that <code>cargo fix</code> will invoke rustc multiple times</p>",
        "id": 147308352,
        "sender_full_name": "Zack M. Davis",
        "timestamp": 1541692324
    },
    {
        "content": "<p>because it needs to apply two suggestions, rather than just one?</p>",
        "id": 147308414,
        "sender_full_name": "varkor",
        "timestamp": 1541692386
    },
    {
        "content": "<p>yes, where our known bug was that applying the lint suggestion resulted in a different error (which _was_ blocked on pattern_parentheses, but now may itself be <code>cargo fix</code>-able); if this \"recursive\" fix isn't good enough (either because I've misremembered how cargo fix works, or it's slow or something), we would want to lint suggestion to directly include the parentheses itself when applicable</p>",
        "id": 147308498,
        "sender_full_name": "Zack M. Davis",
        "timestamp": 1541692462
    },
    {
        "content": "<p>which is probably easy</p>",
        "id": 147308510,
        "sender_full_name": "Zack M. Davis",
        "timestamp": 1541692476
    },
    {
        "content": "<p>but like, order of 1 hour easy (rather than 2 minutes easy for s/MachineApplicable/MaybeIncorrect)</p>",
        "id": 147308560,
        "sender_full_name": "Zack M. Davis",
        "timestamp": 1541692530
    },
    {
        "content": "<p>okay, I'll look into that <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 147308689,
        "sender_full_name": "varkor",
        "timestamp": 1541692603
    },
    {
        "content": "<p>thanks for the extra context!</p>",
        "id": 147308696,
        "sender_full_name": "varkor",
        "timestamp": 1541692608
    },
    {
        "content": "<p>thanks (do you work on rustc full-time? I regret that my dayjob and other interests limit my availability)</p>",
        "id": 147308750,
        "sender_full_name": "Zack M. Davis",
        "timestamp": 1541692651
    },
    {
        "content": "<p>if only <span class=\"emoji emoji-1f601\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 147308910,
        "sender_full_name": "varkor",
        "timestamp": 1541692751
    },
    {
        "content": "<p>no, I just have some spare time this evening, so I thought I should be able to address this one quite quickly</p>",
        "id": 147308950,
        "sender_full_name": "varkor",
        "timestamp": 1541692777
    },
    {
        "content": "<p>looks like the recursive fix won't work (unless we reverse our earlier judgement call on the applicability of the ambiguous-range-interpretation error suggestion): <a href=\"https://github.com/rust-lang/rust/blob/653da4fd006c97625247acd7e076d0782cdc149b/src/libsyntax/parse/parser.rs#L4303-L4304\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/653da4fd006c97625247acd7e076d0782cdc149b/src/libsyntax/parse/parser.rs#L4303-L4304\">https://github.com/rust-lang/rust/blob/653da4fd006c97625247acd7e076d0782cdc149b/src/libsyntax/parse/parser.rs#L4303-L4304</a></p>",
        "id": 147309191,
        "sender_full_name": "Zack M. Davis",
        "timestamp": 1541692945
    },
    {
        "content": "<p>it's probably simplest to specifically check for the pattern <code>&amp;a..=b</code> and special-case it</p>",
        "id": 147309623,
        "sender_full_name": "varkor",
        "timestamp": 1541693312
    },
    {
        "content": "<p>it turns out to be a little more troublesome, because the recursive <code>check_pat</code> means if we check for <code>PatKind::Ref</code>, we end up throwing two errors</p>",
        "id": 147339290,
        "sender_full_name": "varkor",
        "timestamp": 1541721172
    }
]