[
    {
        "content": "<p>I was going to get around to fixing <a href=\"https://github.com/rust-lang/rust/pull/89871\">https://github.com/rust-lang/rust/pull/89871</a> when I had a rather neat idea:<br>\nCould this be generalized so that it catches a variety of invalid operators? (In this case, any sequence of operators that wouldn't otherwise parse, <code>&lt;=&gt;</code> included, but also <code>&gt;=&lt;</code>, <code>&lt;|</code>, <code>[=]</code>, etc.)<br>\nHow would I go about this? I'm not exactly familiar with rustc's parsing logic.<br>\nI'm imagining doing this \"correctly\" and catching all edge cases would be a pipe dream though.</p>",
        "id": 257638724,
        "sender_full_name": "moony [she/her]",
        "timestamp": 1634266832
    },
    {
        "content": "<p>that seems difficult to do generically, because for example, after <code>[</code> rustc expects an expr, so trying to generalize this for it to catch <code>[=]</code> seems a bit impossible to do without some hacks. Maybe for <code>&lt;=&gt;</code>, <code>&gt;=&lt;</code> and similar its possible, but i dont think its possible 100% generically, and id say a specialized approach for common operators in other langs is fine</p>",
        "id": 257644224,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1634271938
    }
]