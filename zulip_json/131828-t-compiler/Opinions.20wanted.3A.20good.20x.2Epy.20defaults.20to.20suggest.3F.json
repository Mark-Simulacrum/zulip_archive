[
    {
        "content": "<p>I'm working on <a href=\"https://github.com/rust-lang/rust/issues/76619\">https://github.com/rust-lang/rust/issues/76619</a>. What defaults would you like to see, both for new contributors, existing contributors, and users building rust from source? So far I have the following, but I'm not super tied to them.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cat config.toml.compiler\n# These defaults are meant for contributors to the compiler who do not modify codegen or LLVM.\n[rust]\n# This enables `RUSTC_LOG=debug`, avoiding confusing situations\n# where adding `debug!()` appears to do nothing.\n# However, it makes running the compiler slightly slower.\ndebug-logging = true\n# This greatly increases the speed of rebuilds, especially when there are only minor changes. However, it makes the initial build slightly slower.\nincremental = true\n\n$ cat config.toml.library\n# These defaults are meant for contributors to the standard library and documentation.\n[build]\n# When building the standard library, you almost never want to build the compiler itself.\nbuild-stage = 0\ntest-stage = 0\nbench-stage = 0\n\n[rust]\n# This greatly increases the speed of rebuilds, especially when there are only minor changes. However, it makes the initial build slightly slower.\nincremental = true\n\n$ cat config.toml.llvm\n# These defaults are meant for contributors to the compiler who modify codegen or LLVM.\n[llvm]\n# This enables debug-assertions in LLVM,\n# catching logic errors in codegen much earlier in the process.\nassertions = true\n\n[rust]\n# This enables `RUSTC_LOG=debug`, avoiding confusing situations\n# where adding `debug!()` appears to do nothing.\n# However, it makes running the compiler slightly slower.\ndebug-logging = true\n# This greatly increases the speed of rebuilds, especially when there are only minor changes. However, it makes the initial build slightly slower.\nincremental = true\n\n$ cat config.toml.maintainer\n# These defaults are meant for contributors building from source, without intending to make multiple changes.\n[build]\n# When compiling from source, you almost always want a full stage 2 build,\n# which has all the latest optimizations from nightly.\nbuild-stage = 2\ntest-stage = 2\ndoc-stage = 2\n# When compiling from source, you usually want all tools.\nextended = true\n</code></pre></div>\n\n\n<p>If there's another format that would make this easier to discuss (maybe individual github PRs?) I'm happy to do that as well.</p>",
        "id": 210596421,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600488659
    },
    {
        "content": "<p>You have set incremental = true in the first 3 scenarios. Why is it then not enabled by default?</p>",
        "id": 210597933,
        "sender_full_name": "est31",
        "timestamp": 1600491717
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120096\">@est31</span> <a href=\"https://github.com/rust-lang/rust/pull/76417\">https://github.com/rust-lang/rust/pull/76417</a></p>",
        "id": 210598109,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600492051
    },
    {
        "content": "<p>the main difference is these are opt-in, not opt-out</p>",
        "id": 210598113,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600492068
    },
    {
        "content": "<p>I see. Of course if you change the default you should set it to false in <code>config.toml.maintainer</code>, but then it'd still be technically opt out.</p>",
        "id": 210598164,
        "sender_full_name": "est31",
        "timestamp": 1600492172
    },
    {
        "content": "<p>the main point of this PR is that the defaults themselves are opt-in</p>",
        "id": 210598210,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600492212
    },
    {
        "content": "<p>Also is the config.toml.maintainer meant for <em>contributors</em> or for <em>distributors</em> ?</p>",
        "id": 210598213,
        "sender_full_name": "est31",
        "timestamp": 1600492215
    },
    {
        "content": "<p>you can ignore it ever happened and everything will still work the same</p>",
        "id": 210598219,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600492224
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120096\">est31</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Opinions.20wanted.3A.20good.20x.2Epy.20defaults.20to.20suggest.3F/near/210598213\">said</a>:</p>\n<blockquote>\n<p>Also is the config.toml.maintainer meant for <em>contributors</em> or for <em>distributors</em> ?</p>\n</blockquote>\n<p>'distro maintainers', maybe <code>users</code> would be a better name for it</p>",
        "id": 210598275,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600492371
    },
    {
        "content": "<p>Yeah users is best I think</p>",
        "id": 210599821,
        "sender_full_name": "est31",
        "timestamp": 1600495821
    },
    {
        "content": "<p>I would like to see hints for using quality-of-life things like ccache that are currently disabled by default because there's not a clear story for detecting them, even if it's not recommended per se.</p>",
        "id": 210695136,
        "sender_full_name": "Jubilee",
        "timestamp": 1600652575
    },
    {
        "content": "<p>hmm, that seems like it should go in the dev guide I think</p>",
        "id": 210695217,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600652760
    },
    {
        "content": "<p>it's useful, but solving a different problem</p>",
        "id": 210695255,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600652767
    },
    {
        "content": "<p>Oh that's fair then, consider my suggestion to be one that such information be preserved somewhere.</p>",
        "id": 210695268,
        "sender_full_name": "Jubilee",
        "timestamp": 1600652813
    },
    {
        "content": "<p>I definitely found \"oh, I can tweak these things about my setup to speed this up? Useful.\"  to be <em>helpful</em> even if the sheer amount of information currently in the config.toml.example itself is frankly just <em>noise</em> at this point.</p>",
        "id": 210695339,
        "sender_full_name": "Jubilee",
        "timestamp": 1600652952
    },
    {
        "content": "<blockquote>\n<p>```</p>\n<h1>When compiling from source, you almost always want a full stage 2 build,</h1>\n<h1>which has all the latest optimizations from nightly.</h1>\n<p>```</p>\n</blockquote>\n<p>I hardly ever need a stage 2 build and I do various things all across the codebase... what is the intended user of the \"maintainer\" template?</p>",
        "id": 211417705,
        "sender_full_name": "RalfJ",
        "timestamp": 1601214885
    },
    {
        "content": "<p>sorry - I renamed it to 'user' on master. It's intended for people who aren't working on the compiler itself, like gentoo users or distro maintainers</p>",
        "id": 211417770,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601214966
    },
    {
        "content": "<p>hm... but gentoo users should just use their distro package, right? the vast vast majority of users should never build rustc, they should use rustup or rustup-toolchain-install-master</p>",
        "id": 211417979,
        "sender_full_name": "RalfJ",
        "timestamp": 1601215307
    },
    {
        "content": "<p>maybe \"distro-maintainer\" or just \"distro\" would be a better name</p>",
        "id": 211417985,
        "sender_full_name": "RalfJ",
        "timestamp": 1601215317
    },
    {
        "content": "<p>gentoo users always build from source, it's the distinguishing feature of the distro</p>",
        "id": 211418178,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601215576
    },
    {
        "content": "<p>but yeah distro might be a better name</p>",
        "id": 211418185,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601215587
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Opinions.20wanted.3A.20good.20x.2Epy.20defaults.20to.20suggest.3F/near/211418178\">said</a>:</p>\n<blockquote>\n<p>gentoo users always build from source, it's the distinguishing feature of the distro</p>\n</blockquote>\n<p>I know. but I would think usually they do not edit the package. so they will never even see that config file.</p>",
        "id": 211418936,
        "sender_full_name": "RalfJ",
        "timestamp": 1601216928
    },
    {
        "content": "<p>basically, gentoo's equivalent of <code>apt install foo</code> is just slower than Debian's (okay and you can configure more flags and things), but the \"API\" between the user and the package manager is not all that different. so I dont see how being a gentoo user makes you any more likely to edit config.toml than an arch or debian user.</p>",
        "id": 211418952,
        "sender_full_name": "RalfJ",
        "timestamp": 1601216996
    },
    {
        "content": "<p>oh hmm you make a good point :/ At one point I suggested having <code>./configure</code> automatically <code>--set profile=distro</code> which might help with that</p>",
        "id": 211418997,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601217011
    }
]