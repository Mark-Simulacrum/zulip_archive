[
    {
        "content": "<p>Per issue <a href=\"https://github.com/rust-lang/rust/issues/79248\">#79248</a>, it's not currently possible to implement <code>Drop</code> for a type with a constrained const-generic parameter. I took a stab at fixing the issue just by calling <code>try_unify_abstract_consts</code> in <code>ensure_drop_predicates_are_implied_by_item_defn</code> for <code>PredicateKind::ConstEvaluatable</code>, but, while this seems to sort of work, I have no idea whether it's actually the correct thing to do.</p>",
        "id": 245016726,
        "sender_full_name": "Alex O'Brien",
        "timestamp": 1625565101
    },
    {
        "content": "<p>It does also provoke the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0367]: `Drop` impl requires `[(); _]: &#39;&lt;empty&gt;` but the struct it is implemented for does not\n</code></pre></div>\n<p>Which can be worked around by instead specifying <code>: Sized</code>, though I'm sure there's a better way to fix it.</p>",
        "id": 245016933,
        "sender_full_name": "Alex O'Brien",
        "timestamp": 1625565227
    },
    {
        "content": "<blockquote>\n<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> would have to compare the explicit predicates for the struct and the impl and see where they differ (or if they do)</p>\n</blockquote>\n<p>when I brought up <a href=\"https://github.com/rust-lang/rust/issues/79248\">#79248</a> lcnr said ^</p>",
        "id": 245017265,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1625565428
    },
    {
        "content": "<p>which kind of sounds like it might be what you're doing</p>",
        "id": 245017318,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1625565479
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344214\">Alex O'Brien</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Drop.20with.20const_evaluatable_checked/near/245016933\">said</a>:</p>\n<blockquote>\n<p>It does also provoke the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0367]: `Drop` impl requires `[(); _]: &#39;&lt;empty&gt;` but the struct it is implemented for does not\n</code></pre></div>\n<p>Which can be worked around by instead specifying <code>: Sized</code>, though I'm sure there's a better way to fix it.</p>\n</blockquote>\n<p>this error is kind of interesting <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 245017447,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1625565556
    },
    {
        "content": "<p>Do you have your code pushed somewhere to look at?</p>",
        "id": 245017546,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1625565613
    },
    {
        "content": "<p>I only made a pretty tiny change. Patch is attached to this message. </p>\n<p><a href=\"/user_uploads/4715/xU4nX8lWI4mJ3Dywtx2WB9Hf/0001-typeck-Allow-Drop-implementation-for-constrained-con.patch\">0001-typeck-Allow-Drop-implementation-for-constrained-con.patch</a></p>",
        "id": 245018134,
        "sender_full_name": "Alex O'Brien",
        "timestamp": 1625565972
    },
    {
        "content": "<p>But yeah that error seemed pretty weird to me too.</p>",
        "id": 245018206,
        "sender_full_name": "Alex O'Brien",
        "timestamp": 1625566024
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"326176\">Boxy [she/her]</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Drop.20with.20const_evaluatable_checked/near/245017318\">said</a>:</p>\n<blockquote>\n<p>which kind of sounds like it might be what you're doing</p>\n</blockquote>\n<p>That definitely makes it sound like more work than what I did is required to actually do this correctly. My understanding of this code is quite poor.</p>",
        "id": 245018509,
        "sender_full_name": "Alex O'Brien",
        "timestamp": 1625566221
    }
]