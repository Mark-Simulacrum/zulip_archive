[
    {
        "content": "<p>Is anyone here familiar with building the upstream LLVM repository? It seems to building every single test with LTO, which is taking an enormous amount of time and memory</p>",
        "id": 209652311,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1599747759
    },
    {
        "content": "<p>is there a way to turn that off?</p>",
        "id": 209652321,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1599747764
    },
    {
        "content": "<p>Hmm, you can turn off lto via cmake <code>LLVM_ENABLE_LTO</code><br>\n<a href=\"https://llvm.org/docs/CMake.html\">https://llvm.org/docs/CMake.html</a><br>\nbut you may have to recompile :/<br>\nI don't know of a way to compile llvm with lto and tests without lto that wouldn't require rebuilding a bunch of llvm stuff again for the tests (tests link against stuff from llvm iirc)</p>",
        "id": 209655353,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1599748806
    },
    {
        "content": "<p>if you're using ninja, set a limit on PARALLEL_LINK_JOBS too</p>",
        "id": 209655577,
        "sender_full_name": "cuviper",
        "timestamp": 1599748871
    },
    {
        "content": "<p>looking at my <code>CMakeCache.txt</code>, it looks like <code>LLVM_ENABLE_LTO</code> is off by default</p>",
        "id": 209658817,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1599749990
    },
    {
        "content": "<p>also, is building + testing supposed to take 56GB of storage???</p>",
        "id": 209658904,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1599750008
    },
    {
        "content": "<p>I seem to recall a debug build of LLVM taking up an enormous amount of space</p>",
        "id": 209659109,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1599750091
    },
    {
        "content": "<p>it also helps if you build a single <code>libLLVM.so</code>, and <em>not</em> the various static <code>libLLVMFoo.a</code>, but I forget the exact options for that</p>",
        "id": 209659142,
        "sender_full_name": "cuviper",
        "timestamp": 1599750106
    },
    {
        "content": "<p>LLVM_LINK_SHARED=1 I think</p>",
        "id": 209659451,
        "sender_full_name": "simulacrum",
        "timestamp": 1599750198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> For our in-tree LLVM, my <code>build\\x86_64-pc-windows-msvc\\llvm</code> is 15GB.  So 56GB seems high, but I did disable some targets and our in-tree one probably builds less than upstream.</p>",
        "id": 209685488,
        "sender_full_name": "scottmcm",
        "timestamp": 1599760992
    },
    {
        "content": "<p>Out of tree release build of clang+llvm+lld for windows-gnu takes less than 4 GiB.<br>\nAround ~50 GiB is what I would expect of debug build.</p>",
        "id": 209691238,
        "sender_full_name": "mati865",
        "timestamp": 1599763512
    }
]