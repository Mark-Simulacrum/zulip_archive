[
    {
        "content": "<p>We (ISRG - <a href=\"http://abetterinternet.org\">abetterinternet.org</a>, <a href=\"http://memorysafety.org\">memorysafety.org</a>) are looking for contractors to work on generally improving Rust compiler performance. If you or anyone you know might be interested please email me: <a href=\"mailto:josh@letsencrypt.org\">josh@letsencrypt.org</a></p>\n<p>(I'm not sure this is the right place to post this message, please redirect me if it's not.)</p>",
        "id": 252334265,
        "sender_full_name": "Josh Aas",
        "timestamp": 1631032874
    },
    {
        "content": "<p>out of curiosity, I'm wondering whether there is more that you could go into, as to specific usecases you have in mind</p>",
        "id": 252341564,
        "sender_full_name": "eddyb",
        "timestamp": 1631035855
    },
    {
        "content": "<p>e.g. between incremental and \"batch\" compilation, you can have different areas of the compiler that would need work, and so you may end up with different people interested/with prior experience/etc.</p>",
        "id": 252341801,
        "sender_full_name": "eddyb",
        "timestamp": 1631035962
    },
    {
        "content": "<p>there's a lot of \"latency vs throughput\" kind of tradeoffs - sadly, IDE focus on <code>rustc</code> itself seems to have died down (in favor of RA), so extremely-low-latency incremental is perhaps less of a priority nowadays (though I would have to talk to e.g. <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> to get an updated overview)</p>",
        "id": 252342218,
        "sender_full_name": "eddyb",
        "timestamp": 1631036127
    },
    {
        "content": "<p>I have been doing some refactoring of the metadata loader recently. My eventual goal with those refactorings is to hopefully (partially) separate the <code>CStore</code> from the <code>Session</code> so that already loaded metadata can be reused between compilation sessions when using a custom driver without having to locate and parse it every time. This may be useful for RLS and if rust-analyzer ever learns to load rlibs, it would be useful for rust-analyzer too.</p>",
        "id": 252343264,
        "sender_full_name": "bjorn3",
        "timestamp": 1631036558
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> perhaps</p>",
        "id": 252344612,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1631037133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Contractors.20to.20work.20on.20Rust.20compiler.20performance.3F/near/252341564\">said</a>:</p>\n<blockquote>\n<p>out of curiosity, I'm wondering whether there is more that you could go into, as to specific usecases you have in mind</p>\n</blockquote>\n<p>which crates need their compilation time to be improved would be nice to know as well</p>",
        "id": 252346715,
        "sender_full_name": "lqd",
        "timestamp": 1631037941
    },
    {
        "content": "<p>Still out of curiosity, who will manage/prioritize/review the contractors' work?<br>\n(Don't take me wrong: this is a fantastic idea. rustc just has chronic review load issues.)</p>",
        "id": 252347794,
        "sender_full_name": "cjgillot",
        "timestamp": 1631038392
    },
    {
        "content": "<p>parallel compiler work seems to have stalled too, that would be one possibility for throughput improvements</p>",
        "id": 252361994,
        "sender_full_name": "The 8472",
        "timestamp": 1631044168
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"248906\">cjgillot</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Contractors.20to.20work.20on.20Rust.20compiler.20performance.3F/near/252347794\">said</a>:</p>\n<blockquote>\n<p>Still out of curiosity, who will manage/prioritize/review the contractors' work?<br>\n(Don't take me wrong: this is a fantastic idea. rustc just has chronic review load issues.)</p>\n</blockquote>\n<p>I think anyone considering contracting work on this would need to take this into account.</p>",
        "id": 252373894,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631049766
    },
    {
        "content": "<p>should reviewers also be independent? paying people to review each other seems like a conflict of interest or at least a potential siloing problem. not sure how big an issue that is. how do other open source projects handle this?</p>",
        "id": 252374822,
        "sender_full_name": "The 8472",
        "timestamp": 1631050284
    },
    {
        "content": "<p>maybe the foundation could answer these kinds of questions</p>",
        "id": 252375201,
        "sender_full_name": "The 8472",
        "timestamp": 1631050494
    },
    {
        "content": "<p>FWIW Iâ€™ve opened <a href=\"https://github.com/rust-lang/compiler-team/issues/459\">this issue</a> regarding the fact there are no parallel rustc experts listed on the compiler team.</p>",
        "id": 252375565,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1631050698
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Contractors.20to.20work.20on.20Rust.20compiler.20performance.3F/near/252374822\">said</a>:</p>\n<blockquote>\n<p>should reviewers also be independent? paying people to review each other seems like a conflict of interest or at least a potential siloing problem. not sure how big an issue that is. how do other open source projects handle this?</p>\n</blockquote>\n<p>I think this part is addressed by <code>mw</code>'s work on <a href=\"https://github.com/rust-lang/rust-forge/pull/553/files#diff-411f66d4eb2789b42a60878c08e7dbc8457c5a6742bb7b1f8466ee1143871bd7R111-R122\">updating our review policy documentation</a>.</p>",
        "id": 252392134,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631062782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"248906\">cjgillot</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Contractors.20to.20work.20on.20Rust.20compiler.20performance.3F/near/252347794\">said</a>:</p>\n<blockquote>\n<p>Still out of curiosity, who will manage/prioritize/review the contractors' work?<br>\n(Don't take me wrong: this is a fantastic idea. rustc just has chronic review load issues.)</p>\n</blockquote>\n<p>This is a great point! In general, I think most everyone on compiler team/contributors is sympathetic to issues with rustc's performance and would like to see it improve. I personally would be happy to review some of the results of this effort and I can likely get additional time from MS to do these reviews. </p>\n<p>At the same time, I suspect there will not be any simple changes that make a significant difference. Part of the work here will also be going through the MCP process with large changes to make sure the rest of the group is onboard with the proposed direction.</p>",
        "id": 252393054,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1631063562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Contractors.20to.20work.20on.20Rust.20compiler.20performance.3F/near/252374822\">said</a>:</p>\n<blockquote>\n<p>should reviewers also be independent? paying people to review each other seems like a conflict of interest</p>\n</blockquote>\n<p>I agree completely. I think that's a great reason for people from different organizations with the same goal to work together.</p>",
        "id": 252503625,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123421
    }
]