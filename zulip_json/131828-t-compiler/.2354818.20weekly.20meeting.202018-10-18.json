[
    {
        "content": "<p>hey <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span> we'll be starting our weekly meeting here in about 10 minutes</p>",
        "id": 136044429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539870684
    },
    {
        "content": "<p>okay so i was a little overextended today and didn't get a chance to do a prepass</p>",
        "id": 136045060,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871223
    },
    {
        "content": "<p>But lets see what we have on our plates</p>",
        "id": 136045064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871230
    },
    {
        "content": "<p>Our <a href=\"https://github.com/rust-lang/rust/issues/54818\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54818\">agenda</a> is linked from the topic</p>",
        "id": 136045083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871248
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">P-high</a> first</p>",
        "id": 136045093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871263
    },
    {
        "content": "<p>from the bottom: \"ICE on edition 2018 with anonymous impl lifetime in the wrong place\" <a href=\"https://github.com/rust-lang/rust/issues/52098\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52098\">#52098</a></p>",
        "id": 136045120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871288
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can you put a status update on this issue?</p>",
        "id": 136045135,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871312
    },
    {
        "content": "<p>(should we reassign it?)</p>",
        "id": 136045143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871319
    },
    {
        "content": "<p>oh wait there's a PR</p>",
        "id": 136045202,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871344
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/55162\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55162\">#55162</a></p>",
        "id": 136045204,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871346
    },
    {
        "content": "<p>okay so that's in hand then</p>",
        "id": 136045210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871355
    },
    {
        "content": "<p>next: \"Underscore lifetimes are incorrectly accepted as lifetime bounds in impl headers\" <a href=\"https://github.com/rust-lang/rust/issues/54902\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54902\">#54902</a></p>",
        "id": 136045238,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871385
    },
    {
        "content": "<p>sorry sorry</p>",
        "id": 136045242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871391
    },
    {
        "content": "<p>was afk</p>",
        "id": 136045246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871396
    },
    {
        "content": "<p>but...yes there is a PR :)</p>",
        "id": 136045249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871400
    },
    {
        "content": "<p>same PR also covers <a href=\"https://github.com/rust-lang/rust/issues/54902\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54902\">#54902</a></p>",
        "id": 136045253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871407
    },
    {
        "content": "<p>hmm but github doesn't say so?</p>",
        "id": 136045265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871422
    },
    {
        "content": "<p>the PR says \"Fixes <a href=\"https://github.com/rust-lang/rust/issues/54902\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54902\">#54902</a>\" in the description... not sure why GH wouldn't link it</p>",
        "id": 136045317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871443
    },
    {
        "content": "<p>nonetheless your description for PR <a href=\"https://github.com/rust-lang/rust/issues/54902\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54902\">#54902</a> said so</p>",
        "id": 136045320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871446
    },
    {
        "content": "<p>yeah</p>",
        "id": 136045324,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871448
    },
    {
        "content": "<p>I just don't see the same message from github that \"PR <a href=\"https://github.com/rust-lang/rust/issues/54902\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54902\">#54902</a> will close this\")</p>",
        "id": 136045337,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871461
    },
    {
        "content": "<p>okay last p-high: \"Weird filesystem hierarchy with nested modules\" <a href=\"https://github.com/rust-lang/rust/issues/55094\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55094\">#55094</a></p>",
        "id": 136045347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871483
    },
    {
        "content": "<p>I've never noticed that before</p>",
        "id": 136045348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871486
    },
    {
        "content": "<p>ok, so, I was planning to investigate this this morning...</p>",
        "id": 136045360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871501
    },
    {
        "content": "<p>hmm there's a PR up, assigned to me for review</p>",
        "id": 136045371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871510
    },
    {
        "content": "<p>oh, I hadn't seen that</p>",
        "id": 136045381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871521
    },
    {
        "content": "<p>but it failed travis</p>",
        "id": 136045384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871521
    },
    {
        "content": "<p>b/c the PR doesn't backwards compatiibly support instances involving <code>#[path]</code>, i guess...?</p>",
        "id": 136045400,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871548
    },
    {
        "content": "<p>I see ehuss has a number of comments</p>",
        "id": 136045425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871562
    },
    {
        "content": "<p>yeah it's all a big mess</p>",
        "id": 136045448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871566
    },
    {
        "content": "<p>I'll assign self to <a href=\"https://github.com/rust-lang/rust/issues/55094\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55094\">#55094</a></p>",
        "id": 136045464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871600
    },
    {
        "content": "<p>it sounds like ehuss has explored some of the space</p>",
        "id": 136045483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871624
    },
    {
        "content": "<p>yeah I don't know if we're going to need to raise this up to a higher group for discussion</p>",
        "id": 136045489,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871636
    },
    {
        "content": "<p>and unfortunately I have like zero time between end of this meeting and the lang teasm mtg tonight...</p>",
        "id": 136045514,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871671
    },
    {
        "content": "<p>(sigh)</p>",
        "id": 136045518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871678
    },
    {
        "content": "<p>I can do that probably</p>",
        "id": 136045521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871680
    },
    {
        "content": "<p>I won't be at the lang team meeting though but I can try to investigate and write up some notes</p>",
        "id": 136045568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871690
    },
    {
        "content": "<p>of course another option would be to get someone other than the two of us ...</p>",
        "id": 136045592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871743
    },
    {
        "content": "<p>indeed :)</p>",
        "id": 136045600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871748
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> are you around by any chance? Probably <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> doesn't have much time either, but they implemented the \"non-mod-rs\" file change</p>",
        "id": 136045605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871769
    },
    {
        "content": "<p>if anyone from <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span> wants to volunteer to investigate <a href=\"https://github.com/rust-lang/rust/issues/55094\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55094\">#55094</a> and its associated PR in near term, please feel free to post a note on the issue and/or PR</p>",
        "id": 136045609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871782
    },
    {
        "content": "<p>Still, it seems like the P-high's are mostly in hand</p>",
        "id": 136045666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871804
    },
    {
        "content": "<p>so lets move along</p>",
        "id": 136045668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871807
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/milestone/56\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/milestone/56\">RC2</a></p>",
        "id": 136045686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871819
    },
    {
        "content": "<p>(I suspect <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> added this to our regular agenda)</p>",
        "id": 136045702,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871836
    },
    {
        "content": "<p>I did :)</p>",
        "id": 136045713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871846
    },
    {
        "content": "<p>so there's a bunch of NLL issues here</p>",
        "id": 136045717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871852
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+milestone%3A%22Edition+2018+RC+2%22+-label%3AA-nll\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+milestone%3A%22Edition+2018+RC+2%22+-label%3AA-nll\">list without NLL issues</a></p>",
        "id": 136045753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871883
    },
    {
        "content": "<p>Should we skip those here? I suspect mitigating them/reclassifying them should not wait until next NLL meeting</p>",
        "id": 136045766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871897
    },
    {
        "content": "<p>there were two I was not certain about:</p>\n<ul>\n<li>[Rust 2018] rustdoc doesn't link \"pub use whatever_crate;\" <a href=\"https://github.com/rust-lang/rust/issues/52509\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52509\">#52509</a> </li>\n<li>Rustc does not warn about <code>use</code> with paths incompatible with <code>uniform_paths</code> for edition 2018 <a href=\"https://github.com/rust-lang/rust/issues/53797\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53797\">#53797</a></li>\n</ul>",
        "id": 136045772,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871911
    },
    {
        "content": "<p>but I also think we shouldn't get bogged down in them during <em>this</em> meeting</p>",
        "id": 136045774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871913
    },
    {
        "content": "<p>so okay lets look at the list niko just postedd</p>",
        "id": 136045823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871930
    },
    {
        "content": "<p>I think you and I can prob triage the NLL ones — we had some discussion in <a class=\"stream\" data-stream-id=\"122657\" href=\"/#narrow/stream/122657-wg-nll\">#wg-nll</a> already, I didn't have time to fully follow up on that</p>",
        "id": 136045829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871938
    },
    {
        "content": "<p>For \"[Rust 2018] rustdoc doesn't link <code>\"pub use whatever_crate;\"</code>\" <a href=\"https://github.com/rust-lang/rust/issues/52509\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52509\">#52509</a></p>",
        "id": 136045836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871959
    },
    {
        "content": "<p>not clear if imperio will have time or what</p>",
        "id": 136045851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871987
    },
    {
        "content": "<p>I'm not really sure if T-compiler can or should do anything here</p>",
        "id": 136045853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539871989
    },
    {
        "content": "<p>I guess we can live with this</p>",
        "id": 136045855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871992
    },
    {
        "content": "<p>I mean, we certainly <em>could</em> :P</p>",
        "id": 136045858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539871998
    },
    {
        "content": "<p>well okay</p>",
        "id": 136045862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872004
    },
    {
        "content": "<p>it seems like it will..probably be backportable</p>",
        "id": 136045867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872013
    },
    {
        "content": "<p>I think the other matters are higher priority</p>",
        "id": 136045869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872015
    },
    {
        "content": "<p>I vote we either remove T-compiler, or take it off RC2</p>",
        "id": 136045882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872035
    },
    {
        "content": "<p>also</p>",
        "id": 136045885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872037
    },
    {
        "content": "<p>the crate is listed</p>",
        "id": 136045887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872039
    },
    {
        "content": "<p>it's just not <em>linked</em></p>",
        "id": 136045888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872041
    },
    {
        "content": "<p>I think we can take it off of RC2</p>",
        "id": 136045927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872045
    },
    {
        "content": "<p>lets do that</p>",
        "id": 136045932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872052
    },
    {
        "content": "<p>it's not a fatal flaw</p>",
        "id": 136045935,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872054
    },
    {
        "content": "<p>next: \"Rustc does not warn about <code>use</code> with paths incompatible with <code>uniform_paths</code> for edition 2018\" <a href=\"https://github.com/rust-lang/rust/issues/53797\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53797\">#53797</a></p>",
        "id": 136045964,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872084
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> left some comments there..</p>",
        "id": 136045988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539872102
    },
    {
        "content": "<p>okay</p>",
        "id": 136046980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539872991
    },
    {
        "content": "<p>(for reference, a <a href=\"#narrow/stream/131828-t-compiler/topic/.2353797.20uniform.20path.20ambiguity\" title=\"#narrow/stream/131828-t-compiler/topic/.2353797.20uniform.20path.20ambiguity\">separate topic was created</a>)</p>",
        "id": 136047053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873027
    },
    {
        "content": "<p>(for those looking at log of topic later, I forked off a discussion to topic \"<a href=\"https://github.com/rust-lang/rust/issues/53797\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53797\">#53797</a> uniform path ambiguity\" )</p>",
        "id": 136047054,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873029
    },
    {
        "content": "<p><span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
        "id": 136047058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873034
    },
    {
        "content": "<p>Okay so I think that's all of RC2</p>",
        "id": 136047062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873047
    },
    {
        "content": "<p>it's funny because I'm on the #t-compiler view so I see both topics at once</p>",
        "id": 136047108,
        "sender_full_name": "eddyb",
        "timestamp": 1539873068
    },
    {
        "content": "<p>next, <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\">beta-nominations</a></p>",
        "id": 136047112,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873073
    },
    {
        "content": "<blockquote>\n<p>it's funny because I'm on the #t-compiler view so I see both topics at once</p>\n</blockquote>\n<p>that's a feature</p>",
        "id": 136047122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873082
    },
    {
        "content": "<blockquote>\n<p>it's funny because I'm on the #t-compiler view so I see both topics at once</p>\n</blockquote>\n<p>try All Messages ;)</p>",
        "id": 136047144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873114
    },
    {
        "content": "<p>first up, \"resolve: Scale back hard-coded extern prelude additions on 2015 edition\" <a href=\"https://github.com/rust-lang/rust/issues/54671\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54671\">#54671</a></p>",
        "id": 136047191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873128
    },
    {
        "content": "<p>fyi, this cycle beta is going to be promoted to stable tomorrow (or the day after), not on monday</p>",
        "id": 136047205,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1539873146
    },
    {
        "content": "<p>so <a href=\"https://github.com/rust-lang/rust/issues/54671\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54671\">#54671</a> is said to fix <a href=\"https://github.com/rust-lang/rust/issues/53166\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53166\">#53166</a></p>",
        "id": 136047226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873184
    },
    {
        "content": "<p>(I approve the backport)</p>",
        "id": 136047234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873191
    },
    {
        "content": "<p>does anyone <em>object</em> to the backport?</p>",
        "id": 136047251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873225
    },
    {
        "content": "<p>It seems fine to me too</p>",
        "id": 136047257,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873238
    },
    {
        "content": "<p>marking as beta-accepted</p>",
        "id": 136047319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873267
    },
    {
        "content": "<p>no objections</p>",
        "id": 136047325,
        "sender_full_name": "nagisa",
        "timestamp": 1539873275
    },
    {
        "content": "<p>next, \"resolve: Do not skip extern prelude during speculative resolution\" <a href=\"https://github.com/rust-lang/rust/issues/55102\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55102\">#55102</a></p>",
        "id": 136047343,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873302
    },
    {
        "content": "<p>I don't object to this either.</p>",
        "id": 136047397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873348
    },
    {
        "content": "<p>+1 to backporting, critical bug :)</p>",
        "id": 136047399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873354
    },
    {
        "content": "<p>okay, since I don't see anyone voicing an objection to this either, marking as beta-accepted</p>",
        "id": 136047470,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873389
    },
    {
        "content": "<p>given <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> 's note above, it sounds like we may want to prioritize making the beta backports PR</p>",
        "id": 136047524,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873456
    },
    {
        "content": "<p>doing it right now :)</p>",
        "id": 136047530,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1539873467
    },
    {
        "content": "<p>oh great</p>",
        "id": 136047532,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873470
    },
    {
        "content": "<p>okay, that's all the beta-nominations</p>",
        "id": 136047581,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873487
    },
    {
        "content": "<p>(at least, the ones that were not already marked beta-accepted)</p>",
        "id": 136047592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873499
    },
    {
        "content": "<p>next up: stable-nominations</p>",
        "id": 136047596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873504
    },
    {
        "content": "<p>nada there</p>",
        "id": 136047604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873515
    },
    {
        "content": "<p>next: all stable-to-beta regressions: <a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta</a></p>",
        "id": 136047616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873532
    },
    {
        "content": "<p>\"[1.30 beta] Test suite of the jemalloc-ctl crate is failing\" <a href=\"https://github.com/rust-lang/rust/issues/54478\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54478\">#54478</a> has a fix that I believe is part of the aforementioned backport</p>",
        "id": 136047643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873564
    },
    {
        "content": "<p>next: \"[1.30 beta] Compiler hangs when compiling primal crate for armv7-apple-ios\" <a href=\"https://github.com/rust-lang/rust/issues/54627\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54627\">#54627</a></p>",
        "id": 136047661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> had various notes and filed an LLVM bug</p>",
        "id": 136047706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873604
    },
    {
        "content": "<p>I’ve filled an LLVM bug and have given a \"viable workaround\"</p>",
        "id": 136047707,
        "sender_full_name": "nagisa",
        "timestamp": 1539873604
    },
    {
        "content": "<p>not planning to put in any time into making an LLVM fix any time soon, though.</p>",
        "id": 136047728,
        "sender_full_name": "nagisa",
        "timestamp": 1539873622
    },
    {
        "content": "<p>as in, turning debug-assertions off ?</p>",
        "id": 136047736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873626
    },
    {
        "content": "<p>(or optimizations off)</p>",
        "id": 136047752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873643
    },
    {
        "content": "<p>yes. Stuff will still fail if an overflowing operation is used explicitly, though.</p>",
        "id": 136047755,
        "sender_full_name": "nagisa",
        "timestamp": 1539873645
    },
    {
        "content": "<p>Sounds like we just cannot fix this. Okay.</p>",
        "id": 136047793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873712
    },
    {
        "content": "<p>seems obscure <em>enough</em> that the workaround suffices for now</p>",
        "id": 136047842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873735
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>, nice job</p>",
        "id": 136047849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873740
    },
    {
        "content": "<p>also I don't think ios is a tier 1 platform</p>",
        "id": 136047865,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1539873764
    },
    {
        "content": "<p>This affects all 32-bit ARM targets to the best of my knowledge.</p>",
        "id": 136047871,
        "sender_full_name": "nagisa",
        "timestamp": 1539873783
    },
    {
        "content": "<p>I left a comment. I don't know if there's any relevant labels to change. Probably not.</p>",
        "id": 136047887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873802
    },
    {
        "content": "<p>Next up: \"Regression from stable: pointer to usize conversion no longer compiles\" <a href=\"https://github.com/rust-lang/rust/issues/54709\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54709\">#54709</a></p>",
        "id": 136047896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873820
    },
    {
        "content": "<p>FCP to close in progress.</p>",
        "id": 136047901,
        "sender_full_name": "nagisa",
        "timestamp": 1539873828
    },
    {
        "content": "<p>(and looks non-controversial)</p>",
        "id": 136047904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539873836
    },
    {
        "content": "<p>accidental stabilization being fixed</p>",
        "id": 136047905,
        "sender_full_name": "oli",
        "timestamp": 1539873838
    },
    {
        "content": "<p>yep</p>",
        "id": 136047906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873841
    },
    {
        "content": "<p>okay lets move along then</p>",
        "id": 136047971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873897
    },
    {
        "content": "<p>that was the last stable-to-beta regression</p>",
        "id": 136047984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873908
    },
    {
        "content": "<p>next: stable-to-nightly regressions: <a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly</a></p>",
        "id": 136047995,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873929
    },
    {
        "content": "<p>only one, \"Rustc panics on nightly with crate interpolate\" <a href=\"https://github.com/rust-lang/rust/issues/54654\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54654\">#54654</a></p>",
        "id": 136048005,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873942
    },
    {
        "content": "<p>d'oh, assigned to me</p>",
        "id": 136048014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873944
    },
    {
        "content": "<p>I've had no time</p>",
        "id": 136048021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873954
    },
    {
        "content": "<p>anyone else want to work-steal it?</p>",
        "id": 136048066,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873964
    },
    {
        "content": "<p>(if so, just assign yourself and  unassign me.) For now, I'll just leave myself assigned.</p>",
        "id": 136048080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539873997
    },
    {
        "content": "<p>Still need to even figure out if this should be P-high or what...</p>",
        "id": 136048086,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874006
    },
    {
        "content": "<p>next up: <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\">Waiting for our team</a></p>",
        "id": 136048109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874029
    },
    {
        "content": "<p>I put it into my queue</p>",
        "id": 136048111,
        "sender_full_name": "oli",
        "timestamp": 1539874030
    },
    {
        "content": "<p>from the bottom: \"Correct alignment of atomic types and (re)add Atomic{I,U}128\" <a href=\"https://github.com/rust-lang/rust/issues/53514\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53514\">#53514</a></p>",
        "id": 136048137,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> 's summary comment is <a href=\"https://github.com/rust-lang/rust/pull/53514#issuecomment-429060651\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/53514#issuecomment-429060651\">here</a>  (thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> !!)</p>",
        "id": 136048187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874083
    },
    {
        "content": "<p>There is some controversy on minor points of said summary comment</p>",
        "id": 136048216,
        "sender_full_name": "nagisa",
        "timestamp": 1539874112
    },
    {
        "content": "<p>I myself am very partial to making <code>#[repr(transparent, align(x))]</code> possible.</p>",
        "id": 136048251,
        "sender_full_name": "nagisa",
        "timestamp": 1539874155
    },
    {
        "content": "<p>I was just reading your comment <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>... very thorough, nice.</p>",
        "id": 136048269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874180
    },
    {
        "content": "<p>so the alignment would apply in-memory but the by-value ABI would be the same as that of the inner type?</p>",
        "id": 136048283,
        "sender_full_name": "eddyb",
        "timestamp": 1539874191
    },
    {
        "content": "<blockquote>\n<p>I myself am very partial to making <code>#[repr(transparent, align(x))]</code> possible.</p>\n</blockquote>\n<p>so we currently cannot express this?</p>",
        "id": 136048288,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  I expect it to work the same as the C's <code>typedef mytype inner __attribute__((align(x))</code> (with whatever the order in C is the right one)</p>",
        "id": 136048371,
        "sender_full_name": "nagisa",
        "timestamp": 1539874237
    },
    {
        "content": "<p>To my knowledge we cannot. I should probably write up an RFC to allow it.</p>",
        "id": 136048494,
        "sender_full_name": "nagisa",
        "timestamp": 1539874325
    },
    {
        "content": "<blockquote>\n<p>I myself am very partial to making <code>#[repr(transparent, align(x))]</code> possible.</p>\n</blockquote>\n<p>or did this mean \"we can express it, but it does not currently suffice as a solution. You want it to suffice as a solution\" ?</p>",
        "id": 136048499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874328
    },
    {
        "content": "<p>Nah, it fails during compilation with <code>error[E0692]: transparent struct cannot have other repr hints</code></p>",
        "id": 136048512,
        "sender_full_name": "nagisa",
        "timestamp": 1539874341
    },
    {
        "content": "<p>okay I see. <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> s comments make a little more sense to me now</p>",
        "id": 136048518,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874357
    },
    {
        "content": "<p>So it seems like <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> is aruging that ... <code>#[repr(C)]</code> should suffice here...? Is that true?</p>",
        "id": 136048575,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874424
    },
    {
        "content": "<p><code>#[repr(C, align(X))]</code> should, I think</p>",
        "id": 136048645,
        "sender_full_name": "nagisa",
        "timestamp": 1539874458
    },
    {
        "content": "<p>or okay, <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> says <code>#[repr(C, align(X))]</code></p>",
        "id": 136048647,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874465
    },
    {
        "content": "<p>what's the drawback of using that instead of going all the way to <code>#[repr(transparent, align(X))]</code> ?</p>",
        "id": 136048653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874478
    },
    {
        "content": "<p>unless there’s some sort of way that <code>repr(C)</code> could end up not laying out its first field at offset 0.</p>",
        "id": 136048659,
        "sender_full_name": "nagisa",
        "timestamp": 1539874485
    },
    {
        "content": "<p>(woah, GCC supports .. <code>typedef uint8_t more_aligned_uint8_t __attribute__ ((aligned (2)));</code>? sort of \"structural alignment types\"? wacky.)</p>",
        "id": 136048687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874510
    },
    {
        "content": "<p>I’m up for trying <code>repr(C, align(X))</code> with intent of having a fix soon</p>",
        "id": 136048790,
        "sender_full_name": "nagisa",
        "timestamp": 1539874572
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I kinda wanted <code>#[repr(align(64))] [u8; 64]</code> for a while :P</p>",
        "id": 136048810,
        "sender_full_name": "eddyb",
        "timestamp": 1539874596
    },
    {
        "content": "<p>Okay can we maybe try to move forward that way (with <code>#[repr(C, align(X))]</code>)? I guess we are worried about breakage from removing the recently added <code>#[repr(transparent)]</code> ??</p>",
        "id": 136048813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874602
    },
    {
        "content": "<p>but I cannot with clear conscience claim that it will work in all cases because I’m not sure if <code>repr(C)</code> will lay out the first field at offset 0</p>",
        "id": 136048822,
        "sender_full_name": "nagisa",
        "timestamp": 1539874619
    },
    {
        "content": "<p><code>type u32x4 = #[repr(simd)] [u32; 4];</code> etc.</p>",
        "id": 136048827,
        "sender_full_name": "eddyb",
        "timestamp": 1539874624
    },
    {
        "content": "<p>I see</p>",
        "id": 136048846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874640
    },
    {
        "content": "<p><code>repr(C)</code> always lays the first field at offset 0</p>",
        "id": 136048847,
        "sender_full_name": "eddyb",
        "timestamp": 1539874642
    },
    {
        "content": "<p>then it should be fine.</p>",
        "id": 136048859,
        "sender_full_name": "nagisa",
        "timestamp": 1539874664
    },
    {
        "content": "<p>it might even be guaranteed by the C standard, but at least all ABIs we support do it</p>",
        "id": 136048867,
        "sender_full_name": "eddyb",
        "timestamp": 1539874673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> can you take point on moving forward with this then? Which may mean just asking ollie to adopt this variation?</p>",
        "id": 136048876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874682
    },
    {
        "content": "<p>Yeah sure.</p>",
        "id": 136048921,
        "sender_full_name": "nagisa",
        "timestamp": 1539874690
    },
    {
        "content": "<p>Great!</p>",
        "id": 136048923,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874695
    },
    {
        "content": "<p>I have to say I found <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span>'s arguments persuasive</p>",
        "id": 136048924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874697
    },
    {
        "content": "<p>but I guess we can discuss on thread</p>",
        "id": 136048925,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874701
    },
    {
        "content": "<p>removing <code>#[repr(transparent)]</code> could technically be breakage if anyone is passing those types by value in FFI but that's about it</p>",
        "id": 136048932,
        "sender_full_name": "eddyb",
        "timestamp": 1539874711
    },
    {
        "content": "<p>(and using a non-struct type on the other side)</p>",
        "id": 136048938,
        "sender_full_name": "eddyb",
        "timestamp": 1539874722
    },
    {
        "content": "<p>that's sort of the guarantee we provide by slapping it onto a Rust type. for memory-only layout guarantees, use <code>#[repr(C)]</code> instead</p>",
        "id": 136048982,
        "sender_full_name": "eddyb",
        "timestamp": 1539874765
    },
    {
        "content": "<p>I'm going to remove the blocked-on label at this point</p>",
        "id": 136048984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874766
    },
    {
        "content": "<p>next: \"Report const eval error inside the query\" <a href=\"https://github.com/rust-lang/rust/issues/53821\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53821\">#53821</a></p>",
        "id": 136049057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874804
    },
    {
        "content": "<p>its in FCP</p>",
        "id": 136049084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874819
    },
    {
        "content": "<p>I'm going to remove the waiting-on-team label from this too</p>",
        "id": 136049110,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874842
    },
    {
        "content": "<p>(I'm going to have to drop out, will catch up on the backlog)</p>",
        "id": 136049122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539874857
    },
    {
        "content": "<p>last waiting-on-team issue is \"Support for the program data address space option of LLVM's Target Datalayout\" <a href=\"https://github.com/rust-lang/rust/issues/54993\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54993\">#54993</a></p>",
        "id": 136049150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874880
    },
    {
        "content": "<p>oh wow, a weird address space target that's not a GPU</p>",
        "id": 136049176,
        "sender_full_name": "eddyb",
        "timestamp": 1539874913
    },
    {
        "content": "<p>but since <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> just dropped off, I think we should just wait until next week to discuss this. (Or discuss it on threaD)</p>",
        "id": 136049177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874917
    },
    {
        "content": "<p>this is genuinely refreshing (cc <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> )</p>",
        "id": 136049222,
        "sender_full_name": "eddyb",
        "timestamp": 1539874927
    },
    {
        "content": "<p>Okay as usual we are out of time before we can address the I-nominated issues</p>",
        "id": 136049250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874955
    },
    {
        "content": "<p>/me wonders if maybe we should somewhat permute the agenda each week to avoid this regular recurrence)</p>",
        "id": 136049263,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874977
    },
    {
        "content": "<p>Thanks everyone for coming!</p>",
        "id": 136049285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539874994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> you could take every ARM MCU and call it something with multiple address spaces</p>",
        "id": 136049403,
        "sender_full_name": "nagisa",
        "timestamp": 1539875094
    },
    {
        "content": "<p>those just happen to be mapped into a global address space for reasons.</p>",
        "id": 136049424,
        "sender_full_name": "nagisa",
        "timestamp": 1539875109
    },
    {
        "content": "<p>heck, not even.</p>",
        "id": 136049428,
        "sender_full_name": "nagisa",
        "timestamp": 1539875116
    },
    {
        "content": "<p>yeah but that's not the same thing as what's exposed to LLVM</p>",
        "id": 136049433,
        "sender_full_name": "eddyb",
        "timestamp": 1539875123
    },
    {
        "content": "<p>the ARM MCU I work on has… 3 address spaces… 2 of which replace the \"code memory\" when a certain switch is flipped.</p>",
        "id": 136049458,
        "sender_full_name": "nagisa",
        "timestamp": 1539875156
    },
    {
        "content": "<p>so yeaaaaah…</p>",
        "id": 136049552,
        "sender_full_name": "nagisa",
        "timestamp": 1539875228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> hey, sorry I wasn't around-- I can investigate \"Weird filesystem hierarchy with nested modules\" <a href=\"https://github.com/rust-lang/rust/issues/55094\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55094\">#55094</a></p>",
        "id": 136050547,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1539876277
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> that'd be awesome</p>",
        "id": 136059359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1539884615
    }
]