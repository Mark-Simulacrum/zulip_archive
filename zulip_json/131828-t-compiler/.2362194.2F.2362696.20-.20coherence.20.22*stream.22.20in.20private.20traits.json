[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 172059536,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564508596
    },
    {
        "content": "<p>so my PR got broke by the changes in <a href=\"https://github.com/rust-lang/rust/issues/62194\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62194\">#62194</a>, and I don't think the removal of the error makes things better</p>",
        "id": 172059607,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564508619
    },
    {
        "content": "<p>the fix is:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Private</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">Private</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">//~^ ERROR conflicting implementations of trait `std::marker::Send` for type `&amp;_`</span>\n<span class=\"c1\">//~| note: downstream crates may implement trait `Private` for type `&amp;_`</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Where the note was removed if the trait is private</p>",
        "id": 172059744,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564508664
    },
    {
        "content": "<p>I think the error is more mysterious without the \"semi-incorrect\" note</p>",
        "id": 172059753,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564508681
    },
    {
        "content": "<p>plus, the PR (<a href=\"https://github.com/rust-lang/rust/issues/62696\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62696\">#62696</a>) basically <em>removed the notes</em> from all coherence note tests, so now they don't actually test anything, which is definitely wrong</p>",
        "id": 172059861,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564508754
    },
    {
        "content": "<p>btw, @estebank, about the <code>unwrap</code> comment</p>",
        "id": 172061809,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510110
    },
    {
        "content": "<blockquote>\n<p>You should use <code>if let Some(id) =</code> instead of <code>unwrap()</code>. Every <code>unwrap</code> is a potential ICE.</p>\n</blockquote>",
        "id": 172061824,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510123
    },
    {
        "content": "<p>the code above does <code> tcx.hir().as_local_hir_id(impl_def_id)</code> several times, all of them with <code>unwrap</code></p>",
        "id": 172061855,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510149
    },
    {
        "content": "<p>therefore, it can't fail</p>",
        "id": 172061867,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510156
    },
    {
        "content": "<p>adding <code>if let Some(_)</code> where the <code>None</code> case can't ever happen, with no comment that it can't ever happen, is bad practice</p>",
        "id": 172061879,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510166
    },
    {
        "content": "<p>I would change the <code>if impl_def_id.is_local()</code> to be an <code>if let Some(id) = tcx.hir().as_local_hir_id(impl_def_id)</code>. <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/coherence/builtin.rs#L80\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/coherence/builtin.rs#L80\">https://github.com/rust-lang/rust/blob/master/src/librustc_typeck/coherence/builtin.rs#L80</a> does the same</p>",
        "id": 172062362,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510472
    },
    {
        "content": "<p>or maybe do a <code>let id = tcx.hir().as_local_hir_id(impl_def_id).unwrap();</code> just inside the if</p>",
        "id": 172062405,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510502
    },
    {
        "content": "<p>depending on how I feel <code>as_local_hir_id</code> is normative for <code>is_local</code></p>",
        "id": 172062447,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564510522
    },
    {
        "content": "<p>/me shrugs. I’m strongly against compiler lying-but-not-really.</p>",
        "id": 172082153,
        "sender_full_name": "nagisa",
        "timestamp": 1564525854
    },
    {
        "content": "<blockquote>\n<p>plus, the PR (<a href=\"https://github.com/rust-lang/rust/issues/62696\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62696\">#62696</a>) basically <em>removed the notes</em> from all coherence note tests, so now they don't actually test anything, which is definitely wrong</p>\n</blockquote>\n<p>Hmm, I would not be surprised if the author did remove these by hand rather than by <code>bless</code>ing.</p>",
        "id": 172082209,
        "sender_full_name": "nagisa",
        "timestamp": 1564525905
    },
    {
        "content": "<blockquote>\n<p>/me shrugs. I’m strongly against compiler lying-but-not-really.</p>\n</blockquote>\n<p>Could we reword the previous message to make it !lie?</p>",
        "id": 172085823,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1564529898
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>/me shrugs. I’m strongly against compiler lying-but-not-really.</p>\n</blockquote>\n<p>Could we reword the previous message to make it !lie?</p>\n</blockquote>\n<p>I would be fine with anything that does not say somebody could implement a private trait.</p>",
        "id": 172088377,
        "sender_full_name": "nagisa",
        "timestamp": 1564532460
    },
    {
        "content": "<p>I think this may actually be a limitation that we might be interested lifting in the future and there’s nothing really preventing this from working other than our implementation.</p>",
        "id": 172088401,
        "sender_full_name": "nagisa",
        "timestamp": 1564532519
    },
    {
        "content": "<p>If that is indeed true, perhaps wording the message in that sense would work</p>",
        "id": 172088448,
        "sender_full_name": "nagisa",
        "timestamp": 1564532538
    },
    {
        "content": "<p>any ideas?</p>",
        "id": 172406632,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564838932
    },
    {
        "content": "<p>Not really, no. We could revert the PR and reopen the issue with a note that we should think of an alternative wording for the message.</p>",
        "id": 172408638,
        "sender_full_name": "nagisa",
        "timestamp": 1564842557
    },
    {
        "content": "<p>sounds like the best current idea to me. Any opinions <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ?</p>",
        "id": 172455391,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564936097
    },
    {
        "content": "<p>Sounds reasonable to me <span class=\"user-mention\" data-user-id=\"228094\">@Ariel Ben-Yehuda</span></p>",
        "id": 172456090,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1564937489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> <a href=\"https://github.com/rust-lang/rust/pull/63264\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/63264\">https://github.com/rust-lang/rust/pull/63264</a></p>",
        "id": 172456362,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1564937989
    }
]