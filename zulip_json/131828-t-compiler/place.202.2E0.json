[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> starting a thread here to talk about the Place refactor</p>",
        "id": 158043785,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1549902860
    },
    {
        "content": "<p>all-hands-discussion: <a href=\"https://paper.dropbox.com/doc/Topic-MIR-2.0-and-MIR-Optimizations--AXXCs_fiKzui0tii_ZOXNEJFAg-BwHR7kOhxDwL6vuAUoSTQ\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Topic-MIR-2.0-and-MIR-Optimizations--AXXCs_fiKzui0tii_ZOXNEJFAg-BwHR7kOhxDwL6vuAUoSTQ\">https://paper.dropbox.com/doc/Topic-MIR-2.0-and-MIR-Optimizations--AXXCs_fiKzui0tii_ZOXNEJFAg-BwHR7kOhxDwL6vuAUoSTQ</a></p>",
        "id": 158043905,
        "sender_full_name": "oli",
        "timestamp": 1549902960
    },
    {
        "content": "<p>previous zulip discussion <a href=\"#narrow/stream/122657-wg-nll/topic/.2352708-new-place\" title=\"#narrow/stream/122657-wg-nll/topic/.2352708-new-place\">https://rust-lang.zulipchat.com/#narrow/stream/122657-wg-nll/topic/.2352708-new-place</a></p>",
        "id": 158044126,
        "sender_full_name": "oli",
        "timestamp": 1549903100
    },
    {
        "content": "<p>so, I've more or less took over the work about <code>NeoPlace</code> and I could continue with that but I've heard there's a new design idea floating around</p>",
        "id": 158045526,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1549904099
    },
    {
        "content": "<p>sadly I miss the last All Hands day :(</p>",
        "id": 158045554,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1549904120
    },
    {
        "content": "<p>I do not think we discussed places too much on the last day.</p>",
        "id": 158046034,
        "sender_full_name": "nagisa",
        "timestamp": 1549904476
    },
    {
        "content": "<p>Well, there are future changes to it that will refactor it further</p>",
        "id": 158046431,
        "sender_full_name": "oli",
        "timestamp": 1549904751
    },
    {
        "content": "<p>we'll still need the <code>Vec&lt;Projection&gt;</code> setup</p>",
        "id": 158046489,
        "sender_full_name": "oli",
        "timestamp": 1549904768
    },
    {
        "content": "<p>So. In order to not waste any of your work, but instead merge it in small steps, we'd first need to add the <code>Iterator</code> interface to <code>Projection</code> which unfolds the recursive datastructure processing into iterative ones</p>",
        "id": 158046670,
        "sender_full_name": "oli",
        "timestamp": 1549904934
    },
    {
        "content": "<p>then you should be able to merge the algorithms that you already ported without having to modify the recursive datastructures</p>",
        "id": 158046712,
        "sender_full_name": "oli",
        "timestamp": 1549904975
    },
    {
        "content": "<p>once we have transformed all recursive algorithms into iterative ones, we should be able to swap out the datastructures without too much churn</p>",
        "id": 158046786,
        "sender_full_name": "oli",
        "timestamp": 1549905005
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 158047023,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1549905168
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> should we have a meeting with interested parties or build a document or something to state the work needed clearly?</p>",
        "id": 158047058,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1549905200
    },
    {
        "content": "<p>A document would be best I think</p>",
        "id": 158047083,
        "sender_full_name": "oli",
        "timestamp": 1549905234
    },
    {
        "content": "<p>Maybe you could start one and list what you already have?</p>",
        "id": 158047144,
        "sender_full_name": "oli",
        "timestamp": 1549905255
    },
    {
        "content": "<p>I'll add a proposed order of things to do and then we can discuss if that is a useful order</p>",
        "id": 158047164,
        "sender_full_name": "oli",
        "timestamp": 1549905295
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 158057174,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1549913298
    },
    {
        "content": "<p>Hmm, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>, if you are able to take over guiding <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> (and maybe <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span>) through these changes, that would be awesome.</p>",
        "id": 158479684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1550094094
    },
    {
        "content": "<p>I owe a document about this</p>",
        "id": 158481470,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550095529
    },
    {
        "content": "<p>gonna do it asap</p>",
        "id": 158481485,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550095541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> please don't put too much effort into it. Just a listing and some links of your current state is great</p>",
        "id": 158520468,
        "sender_full_name": "oli",
        "timestamp": 1550141921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> will do</p>",
        "id": 158520495,
        "sender_full_name": "oli",
        "timestamp": 1550141962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 158522101,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550143901
    },
    {
        "content": "<p>I am starting a document in <a href=\"https://paper.dropbox.com/doc/Place-2.0--AXuL44Wh7zhtQcgC2JYOuoiNAQ-9NjhX4N9I3dEt6YCJM8Ln\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Place-2.0--AXuL44Wh7zhtQcgC2JYOuoiNAQ-9NjhX4N9I3dEt6YCJM8Ln\">https://paper.dropbox.com/doc/Place-2.0--AXuL44Wh7zhtQcgC2JYOuoiNAQ-9NjhX4N9I3dEt6YCJM8Ln</a></p>",
        "id": 158710161,
        "sender_full_name": "oli",
        "timestamp": 1550347867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> great, gonna fill the document on monday</p>",
        "id": 158710306,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550348054
    },
    {
        "content": "<p>well, unless you finish it I guess :)</p>",
        "id": 158710313,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550348086
    },
    {
        "content": "<p>no hurry, I just ran out of PRs to write against rustc and actually went back to my TODO list to see what I can do</p>",
        "id": 158710334,
        "sender_full_name": "oli",
        "timestamp": 1550348107
    },
    {
        "content": "<p>are you documented what's done in the branch or what you want the Place 2.0 to be?</p>",
        "id": 158710339,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550348118
    },
    {
        "content": "<p>I'm documenting the Place 2.0 things we talked about at the all hands</p>",
        "id": 158710389,
        "sender_full_name": "oli",
        "timestamp": 1550348168
    },
    {
        "content": "<p>and the plan how to get there</p>",
        "id": 158710395,
        "sender_full_name": "oli",
        "timestamp": 1550348176
    },
    {
        "content": "<p>great, should I do then what was accomplished in the current PR?</p>",
        "id": 158710398,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550348198
    },
    {
        "content": "<p>jup</p>",
        "id": 158710400,
        "sender_full_name": "oli",
        "timestamp": 1550348205
    },
    {
        "content": "<p>ok</p>",
        "id": 158710401,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550348211
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> starting the document about the current status of things</p>",
        "id": 158807433,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550503640
    },
    {
        "content": "<p>so we can start discussing and start working on it :)</p>",
        "id": 158807445,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550503647
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <a href=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AXyh0a7OBh0StKNYTmaPcwtxAg-vmbnFv8VkCEuL57QfWWMH\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AXyh0a7OBh0StKNYTmaPcwtxAg-vmbnFv8VkCEuL57QfWWMH\">https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AXyh0a7OBh0StKNYTmaPcwtxAg-vmbnFv8VkCEuL57QfWWMH</a></p>",
        "id": 158811537,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550507231
    },
    {
        "content": "<p>have read your document and added a couple of comments there</p>",
        "id": 158811552,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550507241
    },
    {
        "content": "<p>I can continue in the direction stated in my document</p>",
        "id": 158811559,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550507253
    },
    {
        "content": "<p>I'm not stuck in the process I stopped for a bit working on the thing because <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> told me that after the last All Hands days there may have been changes to the design</p>",
        "id": 158811657,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550507314
    },
    {
        "content": "<p>So, there were only concerns about the viability of doing your PR in one go</p>",
        "id": 158812894,
        "sender_full_name": "oli",
        "timestamp": 1550508470
    },
    {
        "content": "<p>there are further design changes, but they are addons that can come afterwards and that are actually orthogonal imo</p>",
        "id": 158812955,
        "sender_full_name": "oli",
        "timestamp": 1550508492
    },
    {
        "content": "<p>ok</p>",
        "id": 158813293,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550508788
    },
    {
        "content": "<p>so ... what should I do? :)</p>",
        "id": 158813312,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550508800
    },
    {
        "content": "<p>is there an alternative/better strategy to the one taked in my branch?</p>",
        "id": 158813486,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550508925
    },
    {
        "content": "<p>The suggestion was to implement an iterator over <code>Place</code> which gives you the projections in the order that the slice would give us</p>",
        "id": 158813584,
        "sender_full_name": "oli",
        "timestamp": 1550508971
    },
    {
        "content": "<p>then implement the algorithms on top of that</p>",
        "id": 158813593,
        "sender_full_name": "oli",
        "timestamp": 1550508983
    },
    {
        "content": "<p>this way, every algorithm can be ported and merged without having to require a big PR like yours</p>",
        "id": 158813605,
        "sender_full_name": "oli",
        "timestamp": 1550509001
    },
    {
        "content": "<p>Since you already touched a lot of these algorithms, I have a question: Are most of these feasible on an iterator?</p>",
        "id": 158813642,
        "sender_full_name": "oli",
        "timestamp": 1550509046
    },
    {
        "content": "<p>(forward or backward)</p>",
        "id": 158813650,
        "sender_full_name": "oli",
        "timestamp": 1550509055
    },
    {
        "content": "<p>most of the algorithms were not implemented by me</p>",
        "id": 158813729,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509104
    },
    {
        "content": "<p>so, basically the work was, build the structure and implement the algorithms that was done by <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span></p>",
        "id": 158813765,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509139
    },
    {
        "content": "<p>then I took over when we started to make use of <code>NeoPlace</code> and start to replace the new structure with the current old <code>Place</code></p>",
        "id": 158813823,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> maybe I should just start from scratch and do what you're mentioning and see what happens</p>",
        "id": 158813908,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509222
    },
    {
        "content": "<p>the algorithms are there so, most of the stuff would be copying and pasting</p>",
        "id": 158813915,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509232
    },
    {
        "content": "<p>can use the opportunity to better review the algorithms, when I was working on the thing I found some issues on a couple</p>",
        "id": 158813974,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509284
    },
    {
        "content": "<p>Presumably all the neoplace algorithms can be copy pasted from your branch, yes</p>",
        "id": 158813976,
        "sender_full_name": "oli",
        "timestamp": 1550509294
    },
    {
        "content": "<p>ok, so I guess I should try that then :)</p>",
        "id": 158814155,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509424
    },
    {
        "content": "<p>Let me look at the branches again and summon eddyb XD I'll do that tomorrow</p>",
        "id": 158814166,
        "sender_full_name": "oli",
        "timestamp": 1550509436
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 158814218,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509450
    },
    {
        "content": "<p>I don't want you to waste any time, so let's have a closer look first</p>",
        "id": 158814229,
        "sender_full_name": "oli",
        "timestamp": 1550509461
    },
    {
        "content": "<p>makes sense</p>",
        "id": 158814239,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509471
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> actually, unsure if I'm understanding correctly the iterator idea</p>",
        "id": 158814384,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509602
    },
    {
        "content": "<p>why would that make things be easier and mergeable in tinier steps?</p>",
        "id": 158814414,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509630
    },
    {
        "content": "<p>I may have understood the idea wrong</p>",
        "id": 158814419,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550509639
    },
    {
        "content": "<p>because we wouldn't have to change the datastructure</p>",
        "id": 158822352,
        "sender_full_name": "oli",
        "timestamp": 1550517280
    },
    {
        "content": "<p>Note that I'm just repeating what was said, I have not looked at this in enough detail to have an educated opinion</p>",
        "id": 158822376,
        "sender_full_name": "oli",
        "timestamp": 1550517311
    },
    {
        "content": "<p>So I've looked into your PR. I think we can start pulling out some small changes and merge them without having big diffs and making your life easier by simplifying rebases</p>",
        "id": 158962852,
        "sender_full_name": "oli",
        "timestamp": 1550657277
    },
    {
        "content": "<p>I've added it to your <a href=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AX72Vb133Ny_V494ALjwz6dZAg-vmbnFv8VkCEuL57QfWWMH#:uid=518781409188999927847299&amp;h2=oli-obk-musings-for-incrementa\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AX72Vb133Ny_V494ALjwz6dZAg-vmbnFv8VkCEuL57QfWWMH#:uid=518781409188999927847299&amp;h2=oli-obk-musings-for-incrementa\">paper</a></p>",
        "id": 158962897,
        "sender_full_name": "oli",
        "timestamp": 1550657294
    },
    {
        "content": "<p>What do you think?</p>",
        "id": 158962909,
        "sender_full_name": "oli",
        "timestamp": 1550657327
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> sounds good</p>",
        "id": 158963862,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658468
    },
    {
        "content": "<p>I still don't understand how the iterator idea makes things easier</p>",
        "id": 158963906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658484
    },
    {
        "content": "<p>and what things are made easier by that</p>",
        "id": 158963924,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658509
    },
    {
        "content": "<p>because I still need to replace <code>Place</code> with <code>NeoPlace</code> at some point in the MIR</p>",
        "id": 158963935,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658529
    },
    {
        "content": "<p>and all that</p>",
        "id": 158963937,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658531
    },
    {
        "content": "<p>or by easier you meant that are less conflicts?</p>",
        "id": 158963948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658548
    },
    {
        "content": "<p>to be honest conflicts weren't bad</p>",
        "id": 158963952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658557
    },
    {
        "content": "<p>The thing is, each of these steps are single PRs that can be merged</p>",
        "id": 158963954,
        "sender_full_name": "oli",
        "timestamp": 1550658559
    },
    {
        "content": "<p>well, but reviewing the entire PR is bad ;)</p>",
        "id": 158963960,
        "sender_full_name": "oli",
        "timestamp": 1550658570
    },
    {
        "content": "<p>(I'm aware I created the miri PR last year that was way worse)</p>",
        "id": 158963968,
        "sender_full_name": "oli",
        "timestamp": 1550658587
    },
    {
        "content": "<p>yeah</p>",
        "id": 158964035,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658617
    },
    {
        "content": "<p>reviewing smaller PRs is much easier, and we can't do the <code>Place</code> -&gt; <code>NeoPlace</code> in master, it's too expensive I think</p>",
        "id": 158964046,
        "sender_full_name": "oli",
        "timestamp": 1550658624
    },
    {
        "content": "<p>though it might be worth measuring that</p>",
        "id": 158964062,
        "sender_full_name": "oli",
        "timestamp": 1550658648
    },
    {
        "content": "<p>yeah it would need to be merged when there's no <code>NeoPlace</code> in the PR</p>",
        "id": 158964071,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658657
    },
    {
        "content": "<p>so at the very last minute</p>",
        "id": 158964091,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550658679
    },
    {
        "content": "<p>We could do a test-PR for perf where all that happens is that you have the conversions, and drop the result immediately (after sending it into a black_box)</p>",
        "id": 158964196,
        "sender_full_name": "oli",
        "timestamp": 1550658801
    },
    {
        "content": "<p>if that's not too expensive, then we can just do the PR that you have in small steps</p>",
        "id": 158964210,
        "sender_full_name": "oli",
        "timestamp": 1550658829
    },
    {
        "content": "<p>but I do fear that it'll show up significantly</p>",
        "id": 158964262,
        "sender_full_name": "oli",
        "timestamp": 1550658855
    },
    {
        "content": "<p>yeah, the idea of this PR was not to have it merge by intermediate steps</p>",
        "id": 158964403,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550659077
    },
    {
        "content": "<p>it will be bad I think</p>",
        "id": 158964448,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550659088
    },
    {
        "content": "<p>anyway, let's switch to your idea :)</p>",
        "id": 158964459,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550659107
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> will ping you in 3/4 hours when I'm back so we can start with this</p>",
        "id": 158965160,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550659843
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> kind of back</p>",
        "id": 158970622,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666348
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 158970626,
        "sender_full_name": "oli",
        "timestamp": 1550666359
    },
    {
        "content": "<p>why did you remove this from the paper doc ...</p>",
        "id": 158970627,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666360
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// this might do the trick for iterating in the same direction that we&#39;d recurse</span>\n<span class=\"c1\">// though this is often not what we want, we want the reverse (iterating in source direction)</span>\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">Iterator</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"na\">&#39;a</span><span class=\"w\"> </span><span class=\"n\">PlaceProjection</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Item</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"na\">&#39;a</span><span class=\"w\"> </span><span class=\"n\">PlaceElem</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">next</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Self</span>::<span class=\"n\">Item</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">base</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">Place</span>::<span class=\"n\">Projection</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">elem</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 158970630,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666366
    },
    {
        "content": "<p>oh, because it seemed useless</p>",
        "id": 158970636,
        "sender_full_name": "oli",
        "timestamp": 1550666376
    },
    {
        "content": "<p>it's the wrong direction</p>",
        "id": 158970638,
        "sender_full_name": "oli",
        "timestamp": 1550666379
    },
    {
        "content": "<p>ok</p>",
        "id": 158970641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666387
    },
    {
        "content": "<p>but you can keep it if there are any algorithms that need it</p>",
        "id": 158970646,
        "sender_full_name": "oli",
        "timestamp": 1550666394
    },
    {
        "content": "<p>so ... let me read a bit and try to understand the directions I need to take</p>",
        "id": 158970702,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666418
    },
    {
        "content": "<p>the idea would be to ...</p>",
        "id": 158970718,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666450
    },
    {
        "content": "<p>1. add a <code>PlaceBase</code> and use that from <code>Place</code></p>",
        "id": 158970720,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666452
    },
    {
        "content": "<p>2. add an iterate method to <code>Place</code></p>",
        "id": 158970733,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666468
    },
    {
        "content": "<p>3. use iterate to implement the algorithms</p>",
        "id": 158970753,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666499
    },
    {
        "content": "<p>4. add <code>NeoPlace</code> with iterate method</p>",
        "id": 158970815,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666532
    },
    {
        "content": "<p>right?</p>",
        "id": 158970816,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666534
    },
    {
        "content": "<p>I'm not sure about 4.</p>",
        "id": 158970821,
        "sender_full_name": "oli",
        "timestamp": 1550666539
    },
    {
        "content": "<p>it might be that we'll have to go from <code>Place</code> to <code>NeoPlace</code> in one go</p>",
        "id": 158970829,
        "sender_full_name": "oli",
        "timestamp": 1550666552
    },
    {
        "content": "<p>ok, we can see as we go</p>",
        "id": 158970833,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666560
    },
    {
        "content": "<p>1 is clear</p>",
        "id": 158970842,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666576
    },
    {
        "content": "<p>about 2, couldn't that hurt performance?</p>",
        "id": 158970857,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666593
    },
    {
        "content": "<p>2 won't hurt perf, because the method would be unused ;)</p>",
        "id": 158970874,
        "sender_full_name": "oli",
        "timestamp": 1550666620
    },
    {
        "content": "<p>3. could hurt perf</p>",
        "id": 158970878,
        "sender_full_name": "oli",
        "timestamp": 1550666627
    },
    {
        "content": "<p>ahh well yeah :)</p>",
        "id": 158970888,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666637
    },
    {
        "content": "<p>but you can start in the code that uses <code>unroll_place</code></p>",
        "id": 158970937,
        "sender_full_name": "oli",
        "timestamp": 1550666644
    },
    {
        "content": "<p>that should be completely free from perf regressions</p>",
        "id": 158970964,
        "sender_full_name": "oli",
        "timestamp": 1550666655
    },
    {
        "content": "<p>since it already does this</p>",
        "id": 158970971,
        "sender_full_name": "oli",
        "timestamp": 1550666659
    },
    {
        "content": "<p>yeah</p>",
        "id": 158970990,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666687
    },
    {
        "content": "<p>and also, the idea is that that iterator iterates over PlaceProjections?</p>",
        "id": 158970994,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666688
    },
    {
        "content": "<p>what about Base?</p>",
        "id": 158971002,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666696
    },
    {
        "content": "<p>to be honest right now I don't remember how is the code layed out in that sense</p>",
        "id": 158971025,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666714
    },
    {
        "content": "<p>saw some bits of code were you were getting a collection with the projections and the base, with NeoPlace I think that was not true</p>",
        "id": 158971050,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666746
    },
    {
        "content": "<p>but just trying to understand what you mean exactly by that iterator</p>",
        "id": 158971056,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666759
    },
    {
        "content": "<p>it iterates over <code>PlaceProjection</code>s but you have access to the place the entire time</p>",
        "id": 158971119,
        "sender_full_name": "oli",
        "timestamp": 1550666774
    },
    {
        "content": "<p>The iterator is basically just a wrapper around the single linked list produces by <code>unroll_place</code></p>",
        "id": 158971136,
        "sender_full_name": "oli",
        "timestamp": 1550666796
    },
    {
        "content": "<p>just giving us a convenient API</p>",
        "id": 158971142,
        "sender_full_name": "oli",
        "timestamp": 1550666805
    },
    {
        "content": "<p>ahh ok ok</p>",
        "id": 158971147,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666811
    },
    {
        "content": "<p>you can start without the iterator if you want</p>",
        "id": 158971148,
        "sender_full_name": "oli",
        "timestamp": 1550666812
    },
    {
        "content": "<p>I see</p>",
        "id": 158971149,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666813
    },
    {
        "content": "<p>just putting the <code>unroll_place</code>onto <code>Place</code></p>",
        "id": 158971168,
        "sender_full_name": "oli",
        "timestamp": 1550666829
    },
    {
        "content": "<p>ok, let me go over all this 3 points and we can discuss after it</p>",
        "id": 158971181,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666846
    },
    {
        "content": "<p>I won't be able until a bit later today</p>",
        "id": 158971184,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666855
    },
    {
        "content": "<p>but anyway will ping you</p>",
        "id": 158971186,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550666858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> btw, just started to add <code>PlaceBase</code></p>",
        "id": 159079766,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765067
    },
    {
        "content": "<p>going through the compile errors</p>",
        "id": 159079771,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765073
    },
    {
        "content": "<p>:)</p>",
        "id": 159079777,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765077
    },
    {
        "content": "<p>Thanks so much for taking point on this</p>",
        "id": 159079838,
        "sender_full_name": "oli",
        "timestamp": 1550765132
    },
    {
        "content": "<p>310 errors :')</p>",
        "id": 159079927,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765178
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> may I have your branch url? or you just started locally.</p>",
        "id": 159080005,
        "sender_full_name": "csmoe",
        "timestamp": 1550765250
    },
    {
        "content": "<p>locally</p>",
        "id": 159080021,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765263
    },
    {
        "content": "<p>okay</p>",
        "id": 159080037,
        "sender_full_name": "csmoe",
        "timestamp": 1550765280
    },
    {
        "content": "<p>but I'm going to push as soon as there's something</p>",
        "id": 159080083,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550765284
    },
    {
        "content": "<p>I just had an idea for another intermediate step (added to <a href=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AX~vQTEYLbebQ8o~qNmVWNH9Ag-vmbnFv8VkCEuL57QfWWMH#:uid=518781409188999927847299&amp;h2=oli-obk-musings-for-incrementa\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AX~vQTEYLbebQ8o~qNmVWNH9Ag-vmbnFv8VkCEuL57QfWWMH#:uid=518781409188999927847299&amp;h2=oli-obk-musings-for-incrementa\">https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AX~vQTEYLbebQ8o~qNmVWNH9Ag-vmbnFv8VkCEuL57QfWWMH#:uid=518781409188999927847299&amp;h2=oli-obk-musings-for-incrementa</a>)</p>",
        "id": 159081427,
        "sender_full_name": "oli",
        "timestamp": 1550766164
    },
    {
        "content": "<p>We can rip out the base structure out of the projection structure and just have a \"leaf\" enum variant where the actual base would have been</p>",
        "id": 159081480,
        "sender_full_name": "oli",
        "timestamp": 1550766195
    },
    {
        "content": "<p>you meant, this part ...</p>",
        "id": 159082516,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550766786
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Place</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">base</span>: <span class=\"nc\">PlaceBase</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">projection</span>: <span class=\"nc\">PlaceProjection</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">enum</span> <span class=\"nc\">PlaceProjection</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Base</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Projection</span><span class=\"p\">(</span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">PlaceProjection</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Deref</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Index</span><span class=\"p\">(..),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 159082526,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550766791
    },
    {
        "content": "<p>jup</p>",
        "id": 159083098,
        "sender_full_name": "oli",
        "timestamp": 1550767178
    },
    {
        "content": "<p>so, one drawback of that is ... changing how you structure <code>Place</code> gives your ~ 300 errors :)</p>",
        "id": 159083218,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767247
    },
    {
        "content": "<p>I can go over all of them</p>",
        "id": 159083221,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767250
    },
    {
        "content": "<p>I was just thinking what are the benefits and drawbacks of splitting step 1 and step 3</p>",
        "id": 159083248,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767278
    },
    {
        "content": "<p>or doing them together so I go through the 300 errors at once</p>",
        "id": 159083264,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767291
    },
    {
        "content": "<p>in the first step I need to do changes like ...</p>",
        "id": 159083350,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767329
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>-            mir::Place::Promoted(ref promoted) =&gt; {\n+            mir::Place::Base(mir::PlaceBase::Promoted(ref promoted)) =&gt; {\n</pre></div>",
        "id": 159083357,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767333
    },
    {
        "content": "<p>but given that now is a struct I'd need to change again</p>",
        "id": 159083374,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767345
    },
    {
        "content": "<p>to be clear, I'm fine to doing all that twice</p>",
        "id": 159083392,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767357
    },
    {
        "content": "<p>no worries</p>",
        "id": 159083395,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767358
    },
    {
        "content": "<p>will practice a LOT my vim skills :P</p>",
        "id": 159083408,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767369
    },
    {
        "content": "<p>but just rising the issue :)</p>",
        "id": 159083430,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550767384
    },
    {
        "content": "<p>I'm fine with doing those in one sweep</p>",
        "id": 159096443,
        "sender_full_name": "oli",
        "timestamp": 1550777234
    },
    {
        "content": "<p>you're right, this is gonna touch all of the same code</p>",
        "id": 159096479,
        "sender_full_name": "oli",
        "timestamp": 1550777263
    },
    {
        "content": "<p>I'm kind of 60% with the task 1, so I guess I can just finish that and use the practice to do it again :)</p>",
        "id": 159097468,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550777879
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <a href=\"https://github.com/rust-lang/rust/pull/58631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631\">https://github.com/rust-lang/rust/pull/58631</a></p>",
        "id": 159129504,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550809773
    },
    {
        "content": "<p>At the all-hands, it was also suggested that <code>Deref</code> should move out of <code>PlaceProjection</code> and into <code>PlaceBase</code>. is that still planned (as a next step, I suppose)?</p>",
        "id": 159142819,
        "sender_full_name": "RalfJ",
        "timestamp": 1550828343
    },
    {
        "content": "<p>that's in the <a href=\"https://paper.dropbox.com/doc/Place-2.0--AX_j7bxqTEP6jsA7Ph_cZ6z9Ag-9NjhX4N9I3dEt6YCJM8Ln\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Place-2.0--AX_j7bxqTEP6jsA7Ph_cZ6z9Ag-9NjhX4N9I3dEt6YCJM8Ln\">second document</a></p>",
        "id": 159143111,
        "sender_full_name": "oli",
        "timestamp": 1550828615
    },
    {
        "content": "<p>and it is ignored for this refactoring, because moving <code>Deref</code> out is a change that has much deeper consequences than just a shallow restructuring of a datastructure</p>",
        "id": 159143187,
        "sender_full_name": "oli",
        "timestamp": 1550828650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I'd love to have a way of running <code>rustfmt</code> over the git diff output :)</p>",
        "id": 159149445,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550835132
    },
    {
        "content": "<p>saw your review, gonna fix it as soon as I can</p>",
        "id": 159149450,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550835144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> also <a href=\"https://github.com/rust-lang/rust/pull/58631#discussion_r259308597\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631#discussion_r259308597\">https://github.com/rust-lang/rust/pull/58631#discussion_r259308597</a></p>",
        "id": 159149877,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550835658
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> force pushed <a href=\"https://github.com/rust-lang/rust/pull/58631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631\">https://github.com/rust-lang/rust/pull/58631</a></p>",
        "id": 159212722,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1550895460
    },
    {
        "content": "<p>Awesome. Feel free to rebase and r=me if other PRs cause merge conflicts</p>",
        "id": 159220142,
        "sender_full_name": "oli",
        "timestamp": 1550910239
    },
    {
        "content": "<p>I p=1-ed in case you get conflicts so you dont have to do it so many times</p>",
        "id": 159220822,
        "sender_full_name": "centril",
        "timestamp": 1550911547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <a href=\"https://github.com/rust-lang/rust/pull/58631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631\">https://github.com/rust-lang/rust/pull/58631</a> saw some failures on src/tools/clipy and src/tools/miri, gonna fix when I have some time with the computer, probably tomorrow</p>",
        "id": 159283870,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551029200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> just got some minutes to fix this, how are things on <code>src/tools</code> adapter because those live in a different repo, I could provide a PR to each of those repos and as part of this PR bump the deps?</p>",
        "id": 159297797,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551044213
    },
    {
        "content": "<p>is that what I should do?</p>",
        "id": 159297801,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551044217
    },
    {
        "content": "<p>Wait until the beta cut, then you will be able to temporarily break them.</p>",
        "id": 159299043,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551045960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> when is the next beta cut? is there a release calendar out there?</p>",
        "id": 159299617,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551046937
    },
    {
        "content": "<p>I see the Rust release calendar that says the release is on feb 28th</p>",
        "id": 159299641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551047023
    },
    {
        "content": "<p>but that’s for stable when exactly beta happens?</p>",
        "id": 159299682,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551047043
    },
    {
        "content": "<p>Around the same time, release cut is usually on the Monday, but it might be a bit late this time due to some bugs. Beta cut is then later that week usually.</p>",
        "id": 159300816,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1551049131
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 159302644,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551052386
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> do you agree with what we've said with Matthew?</p>",
        "id": 159367446,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551125008
    },
    {
        "content": "<p>Yea, just waiting until the beta is cut sgtm, we'll prioritze the PR to reduce rebasing pains</p>",
        "id": 159405714,
        "sender_full_name": "oli",
        "timestamp": 1551167553
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> but should I already send PRs to tools repos?</p>",
        "id": 159422578,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551186862
    },
    {
        "content": "<p>Oh, that's a great idea, that will speed up fixing the tools after the breakage from your PR.</p>",
        "id": 159423213,
        "sender_full_name": "oli",
        "timestamp": 1551187486
    },
    {
        "content": "<p>ok, will do that in a bit</p>",
        "id": 159425209,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551189377
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <a href=\"https://github.com/rust-lang/miri/pull/647\" target=\"_blank\" title=\"https://github.com/rust-lang/miri/pull/647\">https://github.com/rust-lang/miri/pull/647</a> and <a href=\"https://github.com/rust-lang/rust-clippy/pull/3823\" target=\"_blank\" title=\"https://github.com/rust-lang/rust-clippy/pull/3823\">https://github.com/rust-lang/rust-clippy/pull/3823</a></p>",
        "id": 159443822,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551204313
    },
    {
        "content": "<p>and btw, rebased <a href=\"https://github.com/rust-lang/rust/pull/58631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631\">https://github.com/rust-lang/rust/pull/58631</a> because it was not mergeable anymore</p>",
        "id": 159444240,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551204681
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> meanwhile I wait for all this I was going to continue with what is next</p>",
        "id": 159453217,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551211314
    },
    {
        "content": "<p>basically is this iterate idea you had using the unroll_place fn</p>",
        "id": 159453284,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551211330
    },
    {
        "content": "<p>can you explain a bit more what your strategy is about and what do you want to accomplish with it?</p>",
        "id": 159453291,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551211335
    },
    {
        "content": "<p>what's the connection between this for instance with PlaceComponentsIter?</p>",
        "id": 159453477,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551211463
    },
    {
        "content": "<p>I guess if you can start explaining from the beginning would be great :)</p>",
        "id": 159453503,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551211483
    },
    {
        "content": "<p>hmm... I did not know about <code>PlaceComponentsIter</code></p>",
        "id": 159453585,
        "sender_full_name": "oli",
        "timestamp": 1551211559
    },
    {
        "content": "<p>looks to me like this is pretty much what we want</p>",
        "id": 159453633,
        "sender_full_name": "oli",
        "timestamp": 1551211572
    },
    {
        "content": "<p>I'm confused</p>",
        "id": 159453686,
        "sender_full_name": "oli",
        "timestamp": 1551211648
    },
    {
        "content": "<p>what was the code that I was looking at before...</p>",
        "id": 159453693,
        "sender_full_name": "oli",
        "timestamp": 1551211656
    },
    {
        "content": "<p>Ok, so basically that step is already done. I guess you can pull the <code>unroll_place</code> function onto <code>Place</code> and make it an <code>unroll</code> method</p>",
        "id": 159453776,
        "sender_full_name": "oli",
        "timestamp": 1551211701
    },
    {
        "content": "<p>Then have a look at which algorithms can be implemented via <code>unroll</code> instead of recursion</p>",
        "id": 159453808,
        "sender_full_name": "oli",
        "timestamp": 1551211730
    },
    {
        "content": "<p>ok, so we want to move all that into <code>Place</code></p>",
        "id": 159454940,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551212584
    },
    {
        "content": "<p>because there's a lot of things there that are only related to that</p>",
        "id": 159454955,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551212593
    },
    {
        "content": "<p>in particular here <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/places_conflict.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/places_conflict.rs\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/places_conflict.rs</a> is where <code>unroll_place</code> is defined and only used</p>",
        "id": 159455048,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551212659
    },
    {
        "content": "<p>so, we just move the function to <code>Place</code> as <code>unroll</code> and call that from there?</p>",
        "id": 159455105,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551212714
    },
    {
        "content": "<p>in particular that iterator exist for the only purpose of being used there</p>",
        "id": 159455601,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551213046
    },
    {
        "content": "<p>so I guess I can move that altogether to where <code>Place</code> is defined and use <code>unroll</code> there</p>",
        "id": 159455630,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551213067
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> let me know if this is more or less your idea</p>",
        "id": 159455636,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551213075
    },
    {
        "content": "<p>jup that fits my idea</p>",
        "id": 159455735,
        "sender_full_name": "oli",
        "timestamp": 1551213146
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> another thing is if I should push all this to the same PR or we should just wait until beta to get the first PR and then come back to this?</p>",
        "id": 159464464,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551219941
    },
    {
        "content": "<p>my guess is that I may be able to even change <code>Place</code> to be a struct in that 1 week window</p>",
        "id": 159464478,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551219961
    },
    {
        "content": "<p>so everything is a bit quicker</p>",
        "id": 159464527,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551219968
    },
    {
        "content": "<p>maybe these 2 changes some algorithms that use <code>unroll</code> instead of recursion if any and then change <code>Place</code> again to be a <code>struct</code> as you proposed</p>",
        "id": 159464552,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551220001
    },
    {
        "content": "<p>I wouldn't include unroll changes in the PR, but struct changes are fine with me</p>",
        "id": 159485573,
        "sender_full_name": "oli",
        "timestamp": 1551247517
    },
    {
        "content": "<p>We can start merging again</p>",
        "id": 159485578,
        "sender_full_name": "oli",
        "timestamp": 1551247534
    },
    {
        "content": "<p>Beta has been cut</p>",
        "id": 159485581,
        "sender_full_name": "oli",
        "timestamp": 1551247542
    },
    {
        "content": "<p>Beta has been cut</p>",
        "id": 159485651,
        "sender_full_name": "oli",
        "timestamp": 1551247667
    },
    {
        "content": "<p>Beta has been cut</p>",
        "id": 159485697,
        "sender_full_name": "oli",
        "timestamp": 1551247693
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> then merge what we have for now :)</p>",
        "id": 159510318,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551273763
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> this <a href=\"https://github.com/rust-lang/rust/pull/58631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631\">https://github.com/rust-lang/rust/pull/58631</a> is ready to r+</p>",
        "id": 159510412,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551273810
    },
    {
        "content": "<p>the unroll changes are ready too but I didn't push them there</p>",
        "id": 159510577,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551273889
    },
    {
        "content": "<p>and also ...</p>",
        "id": 159524219,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551281468
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>  - Proposed structure is like this (inspired by something @eddyb said, and I imagine that they will have suggestions too):\n\n\n    struct Place&lt;&#39;tcx&gt; {\n        base: PlaceBase&lt;&#39;tcx&gt;,\n        elem: &amp;&#39;tcx Slice&lt;ProjectionElem&lt;&#39;tcx&gt;&gt;,\n    }\n\n    enum PlaceBase&lt;&#39;tcx&gt; {\n        /// local variable\n        Local(Local),\n\n        /// static or static mut variable\n        Static(Box&lt;Static&lt;&#39;tcx&gt;&gt;),\n\n        /// Constant code promoted to an injected static\n        Promoted(Box&lt;(Promoted, Ty&lt;&#39;tcx&gt;)&gt;),\n    }\n</pre></div>",
        "id": 159524226,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551281472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> are we sold on this?</p>",
        "id": 159524236,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551281483
    },
    {
        "content": "<p>starting to change code to that</p>",
        "id": 159524247,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551281490
    },
    {
        "content": "<p>seems good to me, the thing is ... isn't that more or less how <code>NeoPlace</code> was going to look like?</p>",
        "id": 159524346,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551281555
    },
    {
        "content": "<p>won't that mean that I'm going to change all the algorithms at once to make all this compile?</p>",
        "id": 159524361,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551281580
    },
    {
        "content": "<blockquote>\n<p>I wouldn't include unroll changes in the PR, but struct changes are fine with me</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> also, I guess this is wrong</p>",
        "id": 159525035,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282009
    },
    {
        "content": "<p>if I do the struct changes before the unroll thing and mainly make all the algorithms that are recursive use unroll, my guess is that when I go and change to struct I'm going to need to change a lot of things</p>",
        "id": 159525089,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282058
    },
    {
        "content": "<p>it seems that we really want to make unroll and change the recursive algorithms to use unroll before we do the struct</p>",
        "id": 159525138,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282089
    },
    {
        "content": "<p>but anyway, the struct part, given that is not recursive anymore, it's probably going to be huge</p>",
        "id": 159525153,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282102
    },
    {
        "content": "<p>to be clear, at the beginning I didn't notice this <code>elem: &amp;'tcx Slice&lt;ProjectionElem&lt;'tcx&gt;&gt;,</code> there's <code>ProjectionElem</code> there and not <code>PlaceProjection</code></p>",
        "id": 159525698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282461
    },
    {
        "content": "<p>which is perfect but makes the change need to change all the algorithms at once</p>",
        "id": 159525765,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282494
    },
    {
        "content": "<p>anyway, the iterate idea seems fine at glance, it just that it has confused me a bit the last thing <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> have said about changing to struct before doing the <code>unroll</code> (iterate) thing</p>",
        "id": 159525945,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282637
    },
    {
        "content": "<p>that seems harder and seems like, let's make all the change at once</p>",
        "id": 159525957,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551282650
    },
    {
        "content": "<p>PS, I'm skimming <a href=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AYUrjpmSa7Puhd6_IXA1cxMMAg-vmbnFv8VkCEuL57QfWWMH\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Place-2.0-current-PR-status--AYUrjpmSa7Puhd6_IXA1cxMMAg-vmbnFv8VkCEuL57QfWWMH\">this paper document</a>, is this still the best place to catch up?</p>",
        "id": 159526400,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551282981
    },
    {
        "content": "<p>yep + <a href=\"https://paper.dropbox.com/doc/Place-2.0--AYUHQlgQ5SLF212yfVpmYBrEAg-9NjhX4N9I3dEt6YCJM8Ln\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Place-2.0--AYUHQlgQ5SLF212yfVpmYBrEAg-9NjhX4N9I3dEt6YCJM8Ln\">this paper doc</a> + this chat :)</p>",
        "id": 159526999,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551283425
    },
    {
        "content": "<p>The steps I see are:</p>\n<ul>\n<li>add a <code>PlaceBase</code> ( <span aria-label=\"check mark\" class=\"emoji emoji-2714\" role=\"img\" title=\"check mark\">:check_mark:</span> )</li>\n<li>add an <code>iterate</code> method ( <span aria-label=\"check mark\" class=\"emoji emoji-2714\" role=\"img\" title=\"check mark\">:check_mark:</span>, I definitely think trying to rewrite the algorithms to iterable form makes sense) </li>\n<li>change place to a pair of (base, projection) (huh? I don't understand the proposed struct, it doesn't seem quite right)</li>\n<li>add NeoPlace -- I don't get this part</li>\n</ul>\n<p>One thing that I brought up with with <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> a few times is that MIR <strong>construction</strong> will want to be changed to be efficient. I think it might make sense, after adding the <code>iterate</code> method, to try and introduce a <code>PlaceBuilder</code> and port MIR construction to use it. This would be relatively easy to write atop the existing <code>Place</code>. </p>\n<p>Once that is done, I think that we could probably do a \"final step\" that changes <code>Place</code> to the new structure -- the <strong>producers</strong> won't have to be changed, as they are now using <code>PlaceBuilder</code>. Most <strong>consumers</strong> won't have to be changed, as they are now using <code>iterate</code>. Only the <strong>tree-based consumers</strong> will have to be updated, and (if we use the slice representation I was suggesting) they can be ported with relative ease I think. (I'm not sure how many there are.)</p>",
        "id": 159527075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551283462
    },
    {
        "content": "<p>I successfully rewrote the place_confilct without <code>unroll</code> in the old PR with the new <code>Place</code>. it was kind easy, but not sure how it will be with place2.0</p>",
        "id": 159527131,
        "sender_full_name": "csmoe",
        "timestamp": 1551283507
    },
    {
        "content": "<p>OK, well, see my two cents there <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> </p>\n<p>tl;dr I think the first 2 steps seem good, but I suspect we can insert some transition steps before making the final conversion and things will go more smoothly.</p>",
        "id": 159527132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551283507
    },
    {
        "content": "<p>yes</p>",
        "id": 159527462,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551283735
    },
    {
        "content": "<p>seems good</p>",
        "id": 159527466,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551283736
    },
    {
        "content": "<p>The idea of the base,projection_tree pair is that it doesn't change how the recursive algorithms work, but enormously simplifies all the algorithms that just care about the base</p>",
        "id": 159534700,
        "sender_full_name": "oli",
        "timestamp": 1551288640
    },
    {
        "content": "<p>It is also closer to the final (base, projection_slice) structure</p>",
        "id": 159534744,
        "sender_full_name": "oli",
        "timestamp": 1551288670
    },
    {
        "content": "<p>I haven't looked at construction at all so far, I will do that and sketch some ideas</p>",
        "id": 159535194,
        "sender_full_name": "oli",
        "timestamp": 1551289016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> the struct in the doc says Slice, you meant to have the recursive form there?</p>",
        "id": 159535373,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551289194
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">Place</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">base</span>: <span class=\"nc\">PlaceBase</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">elem</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;tcx</span><span class=\"w\"> </span><span class=\"n\">Slice</span><span class=\"o\">&lt;</span><span class=\"n\">ProjectionElem</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">enum</span> <span class=\"nc\">PlaceBase</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"sd\">/// local variable</span>\n<span class=\"w\">        </span><span class=\"n\">Local</span><span class=\"p\">(</span><span class=\"n\">Local</span><span class=\"p\">),</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"sd\">/// static or static mut variable</span>\n<span class=\"w\">        </span><span class=\"n\">Static</span><span class=\"p\">(</span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">Static</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"sd\">/// Constant code promoted to an injected static</span>\n<span class=\"w\">        </span><span class=\"n\">Promoted</span><span class=\"p\">(</span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">Promoted</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Ty</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 159535435,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551289212
    },
    {
        "content": "<p><code>ProjectionElem</code> is the way it should look like when is not recursive anymore</p>",
        "id": 159535461,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551289238
    },
    {
        "content": "<p><code>PlaceProjection</code> is the current recursive form</p>",
        "id": 159535491,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551289268
    },
    {
        "content": "<p>That's the final form that we want to have. As a first step, just having the old ProjectionElem(without even the slice) there is what i meant. I'll elaborate in the doc when i get back on a PC</p>",
        "id": 159536393,
        "sender_full_name": "oli",
        "timestamp": 1551289961
    },
    {
        "content": "<p>ahh yeah</p>",
        "id": 159536408,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551289978
    },
    {
        "content": "<p>because I was confused that the third step says ... add that</p>",
        "id": 159536425,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551289993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> btw, I was mentioning this to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> too, should we have a synced Zulip meeting where we can lay out a plan for this that we all agree?</p>",
        "id": 159538778,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551291519
    },
    {
        "content": "<p>my main goal is to better understand what we are going to do, for now I'm following blindly because I don't understand what each step is for</p>",
        "id": 159538834,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551291557
    },
    {
        "content": "<p>I mean, is not exactly that I don't understand</p>",
        "id": 159538880,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551291590
    },
    {
        "content": "<p>maybe it's just because there are some things that needs clarification</p>",
        "id": 159538914,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551291602
    },
    {
        "content": "<p>but I don't see/understand the 100% of the idea yet</p>",
        "id": 159538961,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551291615
    },
    {
        "content": "<p>Oh, sorry. Please stop me from now on if I go off on an explanation that isn't helpful for comprehending what i mean</p>",
        "id": 159543005,
        "sender_full_name": "oli",
        "timestamp": 1551294482
    },
    {
        "content": "<p>Just ask any question you have or ask for a reexplanation. I'll happily provide that</p>",
        "id": 159543088,
        "sender_full_name": "oli",
        "timestamp": 1551294518
    },
    {
        "content": "<p>If a sync meeting helps, we can setup a time</p>",
        "id": 159543121,
        "sender_full_name": "oli",
        "timestamp": 1551294542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> thanks!, after talking a bit with you and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I guess I have some stuff to play with for a bit</p>",
        "id": 159543515,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551294795
    },
    {
        "content": "<blockquote>\n<p>The idea of the base,projection_tree pair is that it doesn't change how the recursive algorithms work, but enormously simplifies all the algorithms that just care about the base</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> maybe I didn't read closely enough, is one of the \"projection tree\" parts just a <code>Base</code> unit variant or something? I'm not convinced that this step is easier than adopting a slice that can be made into a tree by subslicing, <em>if</em> we lay the groundwork  first. That said, it seems like the first step (moving to an iterator) is clear, and I personally think introducing a \"builder\" or something would be a good second step, so it's some time before this becomes a prime concern.</p>",
        "id": 159551362,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> the reason i wanted that intermediate step is the base field, which we'll have in the end, too. The step to a slice would then be limited to the projection field. I think it's an orthogonal refactoring to the slicing/builder scheme, so we can do it afterwards (if even necessary anymore)</p>",
        "id": 159557903,
        "sender_full_name": "oli",
        "timestamp": 1551305788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> <a href=\"https://github.com/rust-lang/rust/pull/58631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631\">https://github.com/rust-lang/rust/pull/58631</a> conflicts again in the PR :(</p>",
        "id": 159643866,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551381922
    },
    {
        "content": "<p>going to rebase again</p>",
        "id": 159643902,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551381950
    },
    {
        "content": "<p>sorry, my bad :(</p>",
        "id": 159643961,
        "sender_full_name": "dlrobertson",
        "timestamp": 1551381974
    },
    {
        "content": "<p>That's due to the refactoring of each of the match arms in <code>codegen_terminator</code> into a separate method</p>",
        "id": 159644119,
        "sender_full_name": "dlrobertson",
        "timestamp": 1551382101
    },
    {
        "content": "<p>no worries, it's fine</p>",
        "id": 159644347,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551382230
    },
    {
        "content": "<p>just wondering how to escape that conflicts :)</p>",
        "id": 159644403,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551382273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I've just force pushed <a href=\"https://github.com/rust-lang/rust/pull/58631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58631\">https://github.com/rust-lang/rust/pull/58631</a></p>",
        "id": 159661675,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551395533
    },
    {
        "content": "<p>I haven't actually looked at the PR so ill let Oliver r+ and stuff</p>",
        "id": 159661814,
        "sender_full_name": "centril",
        "timestamp": 1551395663
    },
    {
        "content": "<p>the main question is, how to make this merge quickly</p>",
        "id": 159671041,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551404810
    },
    {
        "content": "<p>queue seems to be taking a couple of days and when it's about to be merged it ends with conflicts</p>",
        "id": 159671066,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551404860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you p=20 the PR <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 159673127,
        "sender_full_name": "centril",
        "timestamp": 1551407483
    },
    {
        "content": "<p>I'm not sure I have the rights</p>",
        "id": 159676904,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551412985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>  I did it</p>",
        "id": 159676991,
        "sender_full_name": "centril",
        "timestamp": 1551413137
    },
    {
        "content": "<p>whoo, we are live!</p>",
        "id": 159715555,
        "sender_full_name": "oli",
        "timestamp": 1551448906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> a couple of things</p>",
        "id": 159718472,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551450828
    },
    {
        "content": "<p>first there was a conflict on miri PR, I've force pushed some minutes ago</p>",
        "id": 159718549,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551450861
    },
    {
        "content": "<p>the other important thing is ... should I quickly go towards the move into a struct before this break everything window closes?</p>",
        "id": 159718573,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551450887
    },
    {
        "content": "<p>as you may have seen I've done some stuff related to iterators but I didn't review those things that much</p>",
        "id": 159718604,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551450909
    },
    {
        "content": "<p>anyway, I guess I could do first the struct move thing and have that merge before this window closes?</p>",
        "id": 159718630,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551450926
    },
    {
        "content": "<p>This \"break everything window\" closes only for a week every 6 weeks</p>",
        "id": 159722780,
        "sender_full_name": "oli",
        "timestamp": 1551454009
    },
    {
        "content": "<p>so I wouldn't worry</p>",
        "id": 159722786,
        "sender_full_name": "oli",
        "timestamp": 1551454015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> but I think I can do the struct thing quickly</p>",
        "id": 159722897,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454082
    },
    {
        "content": "<p>so the real questions is ... should I do the struct thing first or the iterate thing?</p>",
        "id": 159722960,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454099
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> and btw, my prs to miri and rust-clippy both are failing because it's using, I guess a previous rustc</p>",
        "id": 159723055,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454151
    },
    {
        "content": "<p>how do one change that?</p>",
        "id": 159723057,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454156
    },
    {
        "content": "<p>miri: wait a day</p>",
        "id": 159723066,
        "sender_full_name": "oli",
        "timestamp": 1551454163
    },
    {
        "content": "<p>clippy should work immediately</p>",
        "id": 159723072,
        "sender_full_name": "oli",
        "timestamp": 1551454169
    },
    {
        "content": "<p>ok, do I need to do something else with that then?</p>",
        "id": 159723088,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454187
    },
    {
        "content": "<p>or just wait and you are going to merge?</p>",
        "id": 159723145,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454204
    },
    {
        "content": "<p>I'm just waiting for travis, then I'll r+ it</p>",
        "id": 159723150,
        "sender_full_name": "oli",
        "timestamp": 1551454205
    },
    {
        "content": "<p>yes, you don't need to do anything further. Thanks for fixing it!</p>",
        "id": 159723194,
        "sender_full_name": "oli",
        "timestamp": 1551454233
    },
    {
        "content": "<p>ok that with clippy but what with miri</p>",
        "id": 159723201,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454240
    },
    {
        "content": "<p>you need to kick the ci I guess?</p>",
        "id": 159723216,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454249
    },
    {
        "content": "<p>with miri just wait until tomorrow and then I'll restart CI and merge it</p>",
        "id": 159723231,
        "sender_full_name": "oli",
        "timestamp": 1551454258
    },
    {
        "content": "<p>cool</p>",
        "id": 159723255,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454265
    },
    {
        "content": "<blockquote>\n<p>so the real questions is ... should I do the struct thing first or the iterate thing?</p>\n</blockquote>\n<p>in this regard I can go whatever you prefer</p>",
        "id": 159723264,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454280
    },
    {
        "content": "<p>it's more or less the same for me</p>",
        "id": 159723268,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454285
    },
    {
        "content": "<p>I'm maybe tempted to do merge the struct thing first</p>",
        "id": 159723295,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454297
    },
    {
        "content": "<p>given the pain that it is</p>",
        "id": 159723301,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454301
    },
    {
        "content": "<p>and so we don't need to wait for 6 weeks</p>",
        "id": 159723311,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551454309
    },
    {
        "content": "<p>sgtm. You are doing the impls, so you are calling the shots!</p>",
        "id": 159723409,
        "sender_full_name": "oli",
        "timestamp": 1551454357
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <a href=\"https://github.com/rust-lang/rust-clippy/pull/3823\" target=\"_blank\" title=\"https://github.com/rust-lang/rust-clippy/pull/3823\">clippy PR</a> fails on macOS</p>",
        "id": 159724363,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551455181
    },
    {
        "content": "<p>unsure how is that setup and it may use nighly on macOS?</p>",
        "id": 159724376,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551455194
    },
    {
        "content": "<blockquote>\n<p>Installing /Users/travis/.cargo/bin/rustup-toolchain-install-master<br>\ndetecting the channel of the <code>17add2498f20bb5a638a65c53407c72ac11becf6</code> toolchain...<br>\nerror: <a href=\"https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rustc-builds/17add2498f20bb5a638a65c53407c72ac11becf6/rust-src-nightly.tar.xz\" target=\"_blank\" title=\"https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rustc-builds/17add2498f20bb5a638a65c53407c72ac11becf6/rust-src-nightly.tar.xz\">https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rustc-builds/17add2498f20bb5a638a65c53407c72ac11becf6/rust-src-nightly.tar.xz</a>: timed out<br>\nerror: toolchain 'master' is not installed</p>\n</blockquote>",
        "id": 159724499,
        "sender_full_name": "oli",
        "timestamp": 1551455302
    },
    {
        "content": "<p>I guess mac os isn't uploaded yet?</p>",
        "id": 159724517,
        "sender_full_name": "oli",
        "timestamp": 1551455312
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> nice job btw -- I'm just sort of vaguely following along here =)</p>",
        "id": 159728140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551458300
    },
    {
        "content": "<p>ahh no idea</p>",
        "id": 159733513,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551463340
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I guess that with your struct idea you want to remove Projection struct, ProjectionElem and those structures, right?</p>",
        "id": 159733982,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551463354
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> nice job btw -- I'm just sort of vaguely following along here =)</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, for now is just moving things around :)</p>",
        "id": 159738646,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551466239
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> I guess that with your struct idea you want to remove Projection struct, ProjectionElem and those structures, right?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span>  unsure what happen with this message ^^^, because it was delivered 2hs later than what I've sent it</p>",
        "id": 159747748,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473356
    },
    {
        "content": "<p>just mentioning you in case you missed it :)</p>",
        "id": 159747759,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473365
    },
    {
        "content": "<p>and also, btw</p>",
        "id": 159747886,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473469
    },
    {
        "content": "<p>the idea is that base always have the base thing</p>",
        "id": 159747896,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473484
    },
    {
        "content": "<p>but projection field is really the one that defines in what part of the path I am, right?</p>",
        "id": 159747920,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473503
    },
    {
        "content": "<p>to be more concrete</p>",
        "id": 159747927,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473510
    },
    {
        "content": "<p>for instance ...</p>",
        "id": 159747931,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473513
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>-            mir::Place::Base(mir::PlaceBase::Local(ref local)) =&gt; {\n+            mir::Place { base: mir::PlaceBase::Local(ref local), projection: mir::PlaceProjection::Base } =&gt; {\n</pre></div>",
        "id": 159748011,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473551
    },
    {
        "content": "<p>this is the right diff</p>",
        "id": 159748019,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473558
    },
    {
        "content": "<p>so, a <code>Place</code> is really a base place when <code>projection</code> is <code>PlaceProjection::Base</code></p>",
        "id": 159748051,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473589
    },
    {
        "content": "<p>So, <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, in general I am <em>still</em> a bit confused by what oli's plan was about this (base, projection) tuple</p>",
        "id": 159748240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473733
    },
    {
        "content": "<p>I think maybe it was this</p>",
        "id": 159748248,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473741
    },
    {
        "content": "<p>Right now, we have a setup like so:</p>\n<div class=\"codehilite\"><pre><span></span>P = &lt;local variable&gt;\n    | &lt;static&gt;\n    | *P (deref)\n    | P.f\n    | P[P]\n</pre></div>",
        "id": 159748319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473779
    },
    {
        "content": "<p>does that notation make sense?</p>",
        "id": 159748325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473783
    },
    {
        "content": "<p>i.e., I'm using a grammar to describe the enum</p>",
        "id": 159748330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473788
    },
    {
        "content": "<p>yes</p>",
        "id": 159748349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473802
    },
    {
        "content": "<p>makes sense</p>",
        "id": 159748352,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473808
    },
    {
        "content": "<p>So I think what <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> was proposing was</p>",
        "id": 159748354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473811
    },
    {
        "content": "<p>To change it to this</p>",
        "id": 159748357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473813
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Place = (Base, Projection)\nBase = &lt;local varibable&gt; | &lt;static&gt;\nProjection = B | *Projection | Projection.F | Projection[Place]\n</pre></div>",
        "id": 159748392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473855
    },
    {
        "content": "<p>where <code>B</code> is kind of a \"special marker\" to mean</p>",
        "id": 159748402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473863
    },
    {
        "content": "<p>\"the base from this place\"</p>",
        "id": 159748407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473867
    },
    {
        "content": "<p>yes</p>",
        "id": 159748489,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473902
    },
    {
        "content": "<p>so now to represent <code>*x.y</code> you would not have</p>\n<ul>\n<li>*<ul>\n<li><code>.y</code><ul>\n<li><code>x</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>but rather</p>\n<p><code>(x, *B.y)</code></p>",
        "id": 159748493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473907
    },
    {
        "content": "<p>that is, the pair of <code>x</code> and</p>\n<ul>\n<li><code>.y</code><ul>\n<li><code>B</code></li>\n</ul>\n</li>\n</ul>",
        "id": 159748513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551473923
    },
    {
        "content": "<p>yep</p>",
        "id": 159748557,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473963
    },
    {
        "content": "<p>so, as I said, a base is a base when you have base = something and projection = that marker, right?</p>",
        "id": 159748581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551473995
    },
    {
        "content": "<p>the marker being <code>ProjectionPlace::Base</code></p>",
        "id": 159748665,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551474016
    },
    {
        "content": "<p>ah, right</p>",
        "id": 159748670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474024
    },
    {
        "content": "<p>yes</p>",
        "id": 159748672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474025
    },
    {
        "content": "<p>yes, that's more or less what I thought</p>",
        "id": 159748676,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551474037
    },
    {
        "content": "<p>so the path <code>x</code> is just <code>(x, B)</code></p>",
        "id": 159748677,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474037
    },
    {
        "content": "<p>ok</p>",
        "id": 159748682,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474042
    },
    {
        "content": "<p>yes</p>",
        "id": 159748684,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551474043
    },
    {
        "content": "<p>makes sense</p>",
        "id": 159748688,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551474048
    },
    {
        "content": "<p>Yeah, it makes some sense</p>",
        "id": 159748695,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474056
    },
    {
        "content": "<p>a lot of algorithms want \"easy access\" to the base</p>",
        "id": 159748705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474066
    },
    {
        "content": "<p>and this structure gives it to them</p>",
        "id": 159748712,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474071
    },
    {
        "content": "<p>it's also \"closer\" to the (base, [projection]) setup we were shooting for</p>",
        "id": 159748722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474088
    },
    {
        "content": "<p>So does that unblock you, or is your question something more involved? :)</p>",
        "id": 159748749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551474113
    },
    {
        "content": "<p>this is great</p>",
        "id": 159750713,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551475731
    },
    {
        "content": "<p>:)</p>",
        "id": 159750716,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551475734
    },
    {
        "content": "<p>starting to work on a change like this and figuring it out at the end that something is wrong would be very bad :)</p>",
        "id": 159750733,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551475752
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> I guess that with your struct idea you want to remove Projection struct, ProjectionElem and those structures, right?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> this was my other assumption from that code</p>",
        "id": 159750745,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551475773
    },
    {
        "content": "<p>that there are things that are not needed anymore</p>",
        "id": 159750756,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551475783
    },
    {
        "content": "<p>seems likely</p>",
        "id": 159750763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551475788
    },
    {
        "content": "<p>just super hyper checking stuff because this will be a massive change that would be, again, very bad if I do the wrong thing :)</p>",
        "id": 159750834,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551475811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> when does the break everything wondow closes?</p>",
        "id": 160205952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551971482
    },
    {
        "content": "<p>I mean, if I were landing the Place PR that changes the representation to be a struct</p>",
        "id": 160205974,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551971498
    },
    {
        "content": "<p>No idea, but I wouldn't worry, it's just a week, so at worst it'll be delayed by a week</p>",
        "id": 160205980,
        "sender_full_name": "oli",
        "timestamp": 1551971506
    },
    {
        "content": "<p>when is the last moment to do so?</p>",
        "id": 160205984,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551971507
    },
    {
        "content": "<p>usually the 7 days before a beta cut</p>",
        "id": 160206001,
        "sender_full_name": "oli",
        "timestamp": 1551971521
    },
    {
        "content": "<p>so like 14 days before a new stable release or sth?</p>",
        "id": 160206050,
        "sender_full_name": "oli",
        "timestamp": 1551971534
    },
    {
        "content": "<blockquote>\n<p>usually the 7 days before a beta cut</p>\n</blockquote>\n<p>ahhh</p>",
        "id": 160206054,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551971538
    },
    {
        "content": "<p>I thought that after the release it was 1 week of break everything in the 6 weeks period</p>",
        "id": 160206082,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551971558
    },
    {
        "content": "<p>I see that is 1 week of do not break in the 6 weeks window :)</p>",
        "id": 160206091,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551971571
    },
    {
        "content": "<p>ok</p>",
        "id": 160206092,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1551971573
    },
    {
        "content": "<p>nope, other way around</p>",
        "id": 160206095,
        "sender_full_name": "oli",
        "timestamp": 1551971575
    },
    {
        "content": "<p>we now have our own stream in the form of <a class=\"stream\" data-stream-id=\"189540\" href=\"/#narrow/stream/189540-t-compiler.2Fwg-mir-opt\">#t-compiler/wg-mir-opt</a> So any future discussion of place 2.0 should take place (heh) there</p>",
        "id": 161065027,
        "sender_full_name": "oli",
        "timestamp": 1552921477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I was very busy with conference organization so I haven't touch Place 2.0 for a while</p>",
        "id": 161084136,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1552934221
    },
    {
        "content": "<p>was just started again to do the struct thing we have pending :)</p>",
        "id": 161084156,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1552934234
    },
    {
        "content": "<p>no pressure!</p>",
        "id": 161129953,
        "sender_full_name": "oli",
        "timestamp": 1552983657
    }
]