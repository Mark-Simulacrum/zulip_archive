[
    {
        "content": "<p>Meanwhile I was working on <a href=\"https://github.com/rust-lang/rust/issues/71488\" title=\"https://github.com/rust-lang/rust/issues/71488\">#71488</a>, I've found a problem with <code>-Ztreat-err-as-bug</code></p>",
        "id": 195232374,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587755676
    },
    {
        "content": "<p>we were looking briefly with <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> and found an off by one issue in <code>delay_span_bug</code></p>",
        "id": 195232433,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587755712
    },
    {
        "content": "<p>opened <a href=\"https://github.com/rust-lang/rust/issues/71489\" title=\"https://github.com/rust-lang/rust/issues/71489\">#71489</a></p>",
        "id": 195232471,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587755728
    },
    {
        "content": "<p>I'm not proud of the code, maybe this needs a little better refactor because there are places where the count is incremented afterwards and other places when it's incremented beforehand</p>",
        "id": 195232571,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587755771
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> maybe this problem is related to what you were saying <a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/I-prioritize.20.2371359.20Regression.20in.20usable.20type.20complexity.3A.20ov/near/194823789\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/I-prioritize.20.2371359.20Regression.20in.20usable.20type.20complexity.3A.20ov/near/194823789\">here</a>?</p>",
        "id": 195232719,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587755852
    },
    {
        "content": "<p>also <code>-Ztreat-err-as-bug</code> is undertested so I'm pretty sure that there are more bugs :)</p>",
        "id": 195232859,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587755918
    },
    {
        "content": "<p>I'm not surprised, <code>treat-err-as-bug</code> had originally only a \"panic when encountering error\" strategy, and teaching it to accept a number was a hack that I hastily added in order to debug something else entirely :)</p>",
        "id": 195453603,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588010331
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> I have the feeling that we have this kind of issues in more places, I guess would be nice to add tests and then try to fix it and maybe even refactor the code a bit :)</p>",
        "id": 195458877,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588013001
    },
    {
        "content": "<p>any pointers on ideas you have or something are welcome, I have no idea about the code base but I may have time to take a look at it</p>",
        "id": 195458918,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588013028
    },
    {
        "content": "<p>The reason it's not as thoroughly tested is because we're the only ones using it</p>",
        "id": 195458972,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013043
    },
    {
        "content": "<p>And delay_span_bug is also kind of a hack</p>",
        "id": 195459005,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013057
    },
    {
        "content": "<p>who is we? :P</p>",
        "id": 195459012,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588013063
    },
    {
        "content": "<p>We could keep two different counts</p>",
        "id": 195459021,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013067
    },
    {
        "content": "<p>People hacking on rustc</p>",
        "id": 195459035,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013074
    },
    {
        "content": "<p>ahh right</p>",
        "id": 195459043,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588013078
    },
    {
        "content": "<p>right now seems to be that increasing the err count is some times done after emitting and in other places it's done before</p>",
        "id": 195459114,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588013125
    },
    {
        "content": "<p>I guess we may refactor the code to be more sure that we always emit and increment or vice-versa but always in the same order</p>",
        "id": 195459214,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588013162
    },
    {
        "content": "<p>Probably low prio but useful to do</p>",
        "id": 195459699,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013389
    },
    {
        "content": "<p>yep :)</p>",
        "id": 195459896,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588013490
    }
]