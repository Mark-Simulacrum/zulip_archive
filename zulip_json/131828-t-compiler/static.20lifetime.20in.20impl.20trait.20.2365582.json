[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> if you have a cargo bisect-rustc \"up and going\", do you think you could bisect something for me? :P</p>",
        "id": 178993678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571948767
    },
    {
        "content": "<p>definitely</p>",
        "id": 178993698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948783
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e71ddd385cc651b1a62affcb301b812e\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e71ddd385cc651b1a62affcb301b812e\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e71ddd385cc651b1a62affcb301b812e</a></p>",
        "id": 178993714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571948794
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 178993715,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948794
    },
    {
        "content": "<p>used to compile, now it doesn't</p>",
        "id": 178993727,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571948799
    },
    {
        "content": "<p>as it happens, this is a bug <em>fix</em></p>",
        "id": 178993740,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571948804
    },
    {
        "content": "<p>but I'm curious what caused it :)</p>",
        "id": 178993770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571948810
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 178993822,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948831
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 178993836,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948847
    },
    {
        "content": "<p>better have those removed :)</p>",
        "id": 178993947,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948893
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@galago niko-app (master)]$ cargo build\n   Compiling niko-app v0.1.0 (/home/santiago/src/oss/niko-app)\nerror: cannot infer an appropriate lifetime\n --&gt; src/main.rs:4:7\n  |\n3 | fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; {\n  |                                            ---------------------------------- this return type evaluates to the `&#39;static` lifetime...\n4 |     v.drain(..)\n  |     - ^^^^^\n  |     |\n  |     ...but this borrow...\n  |\nnote: ...can&#39;t outlive the anonymous lifetime #1 defined on the function body at 3:1\n --&gt; src/main.rs:3:1\n  |\n3 | / fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; {\n4 | |     v.drain(..)\n5 | | }\n  | |_^\nhelp: you can add a constraint to the return type to make it last less than `&#39;static` and match the anonymous lifetime #1 defined on the function body at 3:1\n  |\n3 | fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; + &#39;_ {\n  |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n\nerror: could not compile `niko-app`.\n\nTo learn more, run the command again with --verbose.\n[santiago@galago niko-app (master)]$ cargo +stable build\n   Compiling niko-app v0.1.0 (/home/santiago/src/oss/niko-app)\nwarning: function is never used: `drain_dyn`\n --&gt; src/main.rs:3:1\n  |\n3 | fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n    Finished dev [unoptimized + debuginfo] target(s) in 0.61s\n[santiago@galago niko-app (master)]$\n</pre></div>",
        "id": 178994041,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948979
    },
    {
        "content": "<p>at least I can reproduce what you're saying :)</p>",
        "id": 178994054,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948992
    },
    {
        "content": "<p>bisector is running, going to let you know when I have results</p>",
        "id": 178995401,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> how old this problem is supposed to be? or no idea really?</p>",
        "id": 178995585,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949816
    },
    {
        "content": "<p>well according to my tests should be between nightly and stable :)</p>",
        "id": 178995720,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> had to leave but the tool even the master version is not working correctly</p>",
        "id": 178998135,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571951539
    },
    {
        "content": "<p>that example compiles successfully on stable</p>",
        "id": 178998156,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571951557
    },
    {
        "content": "<p>will check it out and let you know when I can</p>",
        "id": 178998164,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571951565
    },
    {
        "content": "<p>it gives an error on beta/nightly I think</p>",
        "id": 178998167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571951567
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm back ... this is weird</p>",
        "id": 179005943,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571957489
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@galago niko-app (master)]$ rustup default stable\ninfo: using existing install for &#39;stable-x86_64-unknown-linux-gnu&#39;\ninfo: default toolchain set to &#39;stable-x86_64-unknown-linux-gnu&#39;\n\n  stable-x86_64-unknown-linux-gnu unchanged - rustc 1.38.0 (625451e37 2019-09-23)\n\n[santiago@galago niko-app (master)]$ rustc -V\nrustc 1.38.0 (625451e37 2019-09-23)\n[santiago@galago niko-app (master)]$ rustup default stable\ninfo: using existing install for &#39;stable-x86_64-unknown-linux-gnu&#39;\ninfo: default toolchain set to &#39;stable-x86_64-unknown-linux-gnu&#39;\n\n  stable-x86_64-unknown-linux-gnu unchanged - rustc 1.38.0 (625451e37 2019-09-23)\n\n[santiago@galago niko-app (master)]$ rustc src/main.rs\nwarning: function is never used: `drain_dyn`\n --&gt; src/main.rs:3:1\n  |\n3 | fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n[santiago@galago niko-app (master)]$ rustup default nightly\ninfo: using existing install for &#39;nightly-x86_64-unknown-linux-gnu&#39;\ninfo: default toolchain set to &#39;nightly-x86_64-unknown-linux-gnu&#39;\n\n  nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.40.0-nightly (0e8a4b441 2019-10-16)\n\n[santiago@galago niko-app (master)]$ rustc -V\nrustc 1.40.0-nightly (0e8a4b441 2019-10-16)\n[santiago@galago niko-app (master)]$ rustup default stable\ninfo: using existing install for &#39;stable-x86_64-unknown-linux-gnu&#39;\ninfo: default toolchain set to &#39;stable-x86_64-unknown-linux-gnu&#39;\n\n  stable-x86_64-unknown-linux-gnu unchanged - rustc 1.38.0 (625451e37 2019-09-23)\n\n[santiago@galago niko-app (master)]$ rustc -V\nrustc 1.38.0 (625451e37 2019-09-23)\n[santiago@galago niko-app (master)]$ rustc src/main.rs\nwarning: function is never used: `drain_dyn`\n --&gt; src/main.rs:3:1\n  |\n3 | fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n[santiago@galago niko-app (master)]$ rustup default nightly-2019-09-23\ninfo: using existing install for &#39;nightly-2019-09-23-x86_64-unknown-linux-gnu&#39;\ninfo: default toolchain set to &#39;nightly-2019-09-23-x86_64-unknown-linux-gnu&#39;\n\n  nightly-2019-09-23-x86_64-unknown-linux-gnu unchanged - rustc 1.39.0-nightly (1dd188489 2019-09-22)\n\n[santiago@galago niko-app (master)]$ rustc -V\nrustc 1.39.0-nightly (1dd188489 2019-09-22)\n[santiago@galago niko-app (master)]$ rustc src/main.rs\nerror: cannot infer an appropriate lifetime\n --&gt; src/main.rs:4:7\n  |\n3 | fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; {\n  |                                            ---------------------------------- this return type evaluates to the `&#39;static` lifetime...\n4 |     v.drain(..)\n  |     - ^^^^^\n  |     |\n  |     ...but this borrow...\n  |\nnote: ...can&#39;t outlive the anonymous lifetime #1 defined on the function body at 3:1\n --&gt; src/main.rs:3:1\n  |\n3 | / fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; {\n4 | |     v.drain(..)\n5 | | }\n  | |_^\nhelp: you can add a constraint to the return type to make it last less than `&#39;static` and match the anonymous lifetime #1 defined on the function body at 3:1\n  |\n3 | fn drain_dyn(v: &amp;mut Vec&lt;Box&lt;dyn Any&gt;&gt;) -&gt; impl Iterator&lt;Item = Box&lt;dyn Any&gt;&gt; + &#39;_ {\n  |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n</pre></div>",
        "id": 179005948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571957496
    },
    {
        "content": "<p>I guess the problem is related to something unstable that's not turned on on stable then</p>",
        "id": 179005958,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571957521
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> see comments recently posted to issue, e.g. <a href=\"https://github.com/rust-lang/rust/issues/65582#issuecomment-546125783\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65582#issuecomment-546125783\">my comment</a></p>",
        "id": 179006118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571957713
    },
    {
        "content": "<p>it was a change in behavior injected since the stable</p>",
        "id": 179006122,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571957729
    },
    {
        "content": "<p>ok I wasn't aware of any issue, Niko just asked me to run cargo-bisect-rustc</p>",
        "id": 179006180,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571957781
    },
    {
        "content": "<p>namely, <a href=\"https://github.com/rust-lang/rust/issues/63376\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63376\">#63376</a>  landed on august 20th</p>",
        "id": 179006189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571957794
    },
    {
        "content": "<p>(the issue is linked in the topic)</p>",
        "id": 179006192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571957801
    },
    {
        "content": "<p>but why does it fails on the nightly of the same date as stable</p>",
        "id": 179006193,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571957802
    },
    {
        "content": "<p>I don't think I understand your question</p>",
        "id": 179006291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571957939
    },
    {
        "content": "<p>how are you mapping a given stable compiler to the corresponding nightly?</p>",
        "id": 179006302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571957951
    },
    {
        "content": "<p>Felix, sorry, I see what’s going on</p>",
        "id": 179009867,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961456
    },
    {
        "content": "<p>I’m with the cellphone right now</p>",
        "id": 179009874,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961473
    },
    {
        "content": "<p>can update tomorrow</p>",
        "id": 179009879,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961480
    },
    {
        "content": "<p>but I was having an issue with cargo-bisect-rustc I think</p>",
        "id": 179009939,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961510
    },
    {
        "content": "<p>I believe the problem is in the exponential way of going back</p>",
        "id": 179009965,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961541
    },
    {
        "content": "<p>I think that by coincinde just an unfortunate thing, I never hit a working version</p>",
        "id": 179009987,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961573
    },
    {
        "content": "<p>it jumps all over the working releases (I believe)</p>",
        "id": 179009997,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961593
    },
    {
        "content": "<p>so giving the exactly right version that works is the right thing to do here</p>",
        "id": 179010067,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571961636
    },
    {
        "content": "<p>so ... to confirm here what I was saying before, sorry but I didn't pay attention to the bug</p>",
        "id": 179017337,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971027
    },
    {
        "content": "<p>I'm just talking about the bisect run I've done</p>",
        "id": 179017342,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971038
    },
    {
        "content": "<p>I was originally hitting a trouble that <code>cargo-bisect-rustc</code> going exponentially backwards just jumped over all the rights cases and tried an old rustc which failed too because of the lack of that feature probably, this is kind of a problem of the tool that I think <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is aware</p>",
        "id": 179017391,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971120
    },
    {
        "content": "<p>after kind of manually finding one that works</p>",
        "id": 179017395,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971131
    },
    {
        "content": "<p>I've set a start and end and run the bisect and got</p>",
        "id": 179017400,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971145
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@galago niko-app (master)]$ ../cargo-bisect-rustc/target/debug/cargo-bisect-rustc --start 2019-08-01 --end 2019-10-16 --preserve\nchecking nightly-2019-08-01\nverifying the start of the range does not reproduce the regression\ntested nightly-2019-08-01, got No\nconfirmed the start of the range does not reproduce the regression\nverifying the end of the range reproduces the regression\nstd for x86_64-unknown-linux-gnu: 175.32 MB / 175.32 MB [===============================================================================================================================================================] 100.00 % 7.90 MB/s\ntested nightly-2019-10-16, got Yes\nconfirmed the end of the range reproduces the regression\nstd for x86_64-unknown-linux-gnu: 174.98 MB / 174.98 MB [===============================================================================================================================================================] 100.00 % 7.23 MB/s\ntested nightly-2019-09-08, got Yes\nstd for x86_64-unknown-linux-gnu: 173.91 MB / 173.91 MB [===============================================================================================================================================================] 100.00 % 7.63 MB/s\ntested nightly-2019-08-20, got No\nstd for x86_64-unknown-linux-gnu: 174.39 MB / 174.39 MB [===============================================================================================================================================================] 100.00 % 7.39 MB/s\ntested nightly-2019-08-29, got Yes\nstd for x86_64-unknown-linux-gnu: 173.60 MB / 173.60 MB [===============================================================================================================================================================] 100.00 % 7.66 MB/s\ntested nightly-2019-08-24, got Yes\nstd for x86_64-unknown-linux-gnu: 173.78 MB / 173.78 MB [===============================================================================================================================================================] 100.00 % 7.80 MB/s\ntested nightly-2019-08-22, got Yes\nstd for x86_64-unknown-linux-gnu: 173.65 MB / 173.65 MB [===============================================================================================================================================================] 100.00 % 7.65 MB/s\ntested nightly-2019-08-21, got Yes\nsearched toolchains nightly-2019-08-01 through nightly-2019-10-16\nregression in nightly-2019-08-21\n</pre></div>",
        "id": 179017406,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971148
    },
    {
        "content": "<p>Yes, there is no (known to me at least) algorithm that is better than linear search if your \"function\" that you're trying to bisect isn't monotonic.</p>",
        "id": 179017458,
        "sender_full_name": "simulacrum",
        "timestamp": 1571971214
    },
    {
        "content": "<p>yep</p>",
        "id": 179017460,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971228
    },
    {
        "content": "<p>maybe a good thing to \"detect\" this problem is seeing if the failure is different?</p>",
        "id": 179017464,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971247
    },
    {
        "content": "<p>but that's not good neither a small change in diagnostics would make things different</p>",
        "id": 179017472,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971268
    },
    {
        "content": "<p>maybe looking for huger differences or an error code or something</p>",
        "id": 179017477,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so regression in nightly 2019-08-21, sorry but I didn't investigate on the issue, by know you may already be aware on what's going on and where the problem is but if you need I could also bisect from 2019-08-20 to 2019-08-21 looking for the commit that originates the problem</p>",
        "id": 179017527,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571971356
    },
    {
        "content": "<p>you probably won't need to do that, it is very likely <a href=\"https://github.com/rust-lang/rust/issues/63376\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63376\">#63376</a> as Felix mentioned; I just ran cargo-bisect-rustc to get you the commit (and it worked fine, there's no problem of exponentially going back in this case) and it's <a href=\"https://github.com/rust-lang/rust/issues/63715\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63715\">#63715</a> the rollup which merged this PR</p>",
        "id": 179034776,
        "sender_full_name": "lqd",
        "timestamp": 1571995682
    },
    {
        "content": "<p>(which reminds me both 1) that I've forgotten I wanted to document how to get bors' commits in the cargo-bisect-rustc tutorial 2) that the tool might need something to help continue bisection with the more frequent rollups; I've hit 2 rollups in bisections this morning and they're making them tougher indeed)</p>",
        "id": 179034991,
        "sender_full_name": "lqd",
        "timestamp": 1571995898
    },
    {
        "content": "<p>yeah I've tried \"manual bisection\" in the past -- getting the nouns right is usually hard</p>",
        "id": 179042349,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004325
    },
    {
        "content": "<p>e.g. do you ask \"is this still the regression?\" or \"was this commit fixing it?\" or what</p>",
        "id": 179042357,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004340
    },
    {
        "content": "<blockquote>\n<p>you probably won't need to do that, it is very likely <a href=\"https://github.com/rust-lang/rust/issues/63376\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63376\">#63376</a> as Felix mentioned; I just ran cargo-bisect-rustc to get you the commit (and it worked fine, there's no problem of exponentially going back in this case) and it's <a href=\"https://github.com/rust-lang/rust/issues/63715\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63715\">#63715</a> the rollup which merged this PR</p>\n</blockquote>\n<p>yeah, sorry for generating confusion here, I wasn't working on the issue, just Niko asked me to run cargo-bisect-rustc because I was coincidentially working on the tool</p>",
        "id": 179050706,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572011352
    },
    {
        "content": "<p>the tool if you don't give any parameters indeed doesn't report anything because it jumps over all the working versions, just try cargo-bisect-rustc without any param</p>",
        "id": 179050726,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572011389
    }
]