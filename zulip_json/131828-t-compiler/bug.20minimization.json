[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I wanted to give you a big thank you for writing <a href=\"http://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns\">http://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns</a>, it was super helpful for <a href=\"https://github.com/rust-lang/rust/pull/90489\">https://github.com/rust-lang/rust/pull/90489</a> ! :) \"cfgmenting\" especially was super useful. I also wanted to suggest another technique I didn't see in your blog - usually, when I cfg out a module, it's still used, but only one or two of the items. So I'll end up doing a transformation like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">mod</span> <span class=\"nn\">some_really_long_module</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">// 500+ lines of code</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>to</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">mod</span> <span class=\"nn\">some_really_long_module</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">A</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">B</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[cfg(FALSE)]</span><span class=\"w\"></span>\n<span class=\"k\">mod</span> <span class=\"nn\">some_really_long_module</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">// 500+ lines of code</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and then if that compiles, delete the original module</p>",
        "id": 260742937,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636420878
    },
    {
        "content": "<p>some of the techniques were less helpful for rustdoc (e.g. deleting function bodies almost never causes the bug to stop reproducing, and deleting doc-comments usually goes too far and doesn't reproduce the bug), but a lot of them were super useful</p>",
        "id": 260743076,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636421031
    },
    {
        "content": "<p>also now I'm motivated to make everybody_loops smarter and delete more haha, like remove non-doc-comments and unused imports</p>",
        "id": 260743143,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636421066
    },
    {
        "content": "<p>Hmm, I think the transformation you describe might be expressible by composing the transformations I did document? I’m not sure, I know I definitely do things like what you describe… its possible I simply didn’t categorize it because it requires too much “thinking” to do in one step and I was trying to focus on purely mechanical transformations.</p>",
        "id": 260743404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636421297
    },
    {
        "content": "<p>In any case, I’m super glad it came in helpful for someone!</p>",
        "id": 260743414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636421311
    },
    {
        "content": "<p>(And yes, I can imagine in the special case of rustdoc, you indeed need to pay way more attention to doc-comments and way less attention to function bodies. Indeed, I imagine there <em>are</em> a number of special transformations solely oriented around reducing doc-comment structure.)</p>",
        "id": 260743491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636421382
    },
    {
        "content": "<p>haha yup - fortunately most of the issues are related to intra-doc links and there's debug logging that prints the exact docs for each item being resolved, so it's not too hard to narrow down</p>",
        "id": 260743562,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636421423
    },
    {
        "content": "<p>e.g. I knew <code>[objr]</code> was the cause of the crash in <a href=\"https://github.com/jyn514/objr/commit/59bb084a8745761c64b59add0b3ace2a3460724f\">https://github.com/jyn514/objr/commit/59bb084a8745761c64b59add0b3ace2a3460724f</a> while it was still 4k+ lines</p>",
        "id": 260743602,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636421463
    },
    {
        "content": "<p>but yeah <a href=\"https://github.com/rust-lang/rust/pull/90489#issuecomment-962858127\">https://github.com/rust-lang/rust/pull/90489#issuecomment-962858127</a> would have taken me like 5x as long to come up with if not for the techniques you suggested :)</p>",
        "id": 260743631,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636421509
    },
    {
        "content": "<p>if you look at the edit history, I still didn't understand the bug very well even after I posted the MCVE <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> so having it be mostly mindless was very helpful</p>",
        "id": 260743711,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636421559
    }
]