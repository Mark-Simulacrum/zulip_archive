[
    {
        "content": "<p>I am just now able to come back to rust-lang, but this will be a tremendous help for the PPC target if it works :)  Then, it's just figuring out arm and it should be good to go.  I think I've found a better way to handle the toolchains, as well.</p>\n<p>I am splitting the <code>dist</code> into a HOST installers and a TARGET installers.</p>\n<div class=\"codehilite\"><pre><span></span><code>20M Nov 26 05:37 dl/rust-1.56.1-mips64-unknown-linux-muslabi64-install.tar.xz\n666M Nov 26 05:42 dl/rust-1.56.1-x86_64-unknown-linux-gnu-install.tar.xz\n</code></pre></div>\n<p>Question, is there a reason to keep <code>rust-nightly-dev</code>in the <code>dist</code> package I create?<br>\nOr rather, of the below packages, which can I get rid of as non-essential?  </p>\n<div class=\"codehilite\"><pre><span></span><code>cargo-nightly-x86_64-unknown-linux-gnu.tar.xz                rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\nclippy-nightly-x86_64-unknown-linux-gnu.tar.xz               rust-nightly-x86_64-unknown-linux-gnu.tar.xz\nllvm-tools-nightly-x86_64-unknown-linux-gnu.tar.xz           rust-src-nightly.tar.xz\nmiri-nightly-x86_64-unknown-linux-gnu.tar.xz                 rust-std-nightly-mips64-unknown-linux-muslabi64.tar.xz\nrls-nightly-x86_64-unknown-linux-gnu.tar.xz                  rust-std-nightly-x86_64-unknown-linux-gnu.tar.xz\nrust-analysis-nightly-mips64-unknown-linux-muslabi64.tar.xz  rustc-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\nrust-analysis-nightly-x86_64-unknown-linux-gnu.tar.xz        rustc-nightly-src.tar.xz\nrust-analyzer-nightly-x86_64-unknown-linux-gnu.tar.xz        rustc-nightly-x86_64-unknown-linux-gnu.tar.xz\nrust-demangler-nightly-x86_64-unknown-linux-gnu.tar.xz       rustfmt-nightly-x86_64-unknown-linux-gnu.tar.xz\n</code></pre></div>",
        "id": 262783076,
        "sender_full_name": "Grommish",
        "timestamp": 1637923776
    },
    {
        "content": "<p><code>rust-analysis</code> is not useful unless you want to support RLS</p>",
        "id": 262795630,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637932334
    },
    {
        "content": "<p><code>rustc-dev</code> is only useful if you want to write your own compiler tools (like an out-of-tree version of clippy)</p>",
        "id": 262795659,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637932363
    },
    {
        "content": "<p>rust-dev is not useful</p>",
        "id": 262795672,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637932371
    },
    {
        "content": "<p>I think the rest could be theoretically useful; it depends what you want to do with these</p>",
        "id": 262795742,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637932428
    },
    {
        "content": "<p>(although there's not really a reason to use <code>rust-analyzer-nightly</code> over just building rust-analyzer from source IMO)</p>",
        "id": 262795848,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637932496
    },
    {
        "content": "<p>I use <code>x.py dist</code> and just grab the <code>.xz</code> files from <code>build/dist</code> and archive them up.   I may just remove <code>rust-dev</code> and be done with it, since that's the big stall spot and leave the rest in case, somewhere down the line, someone wants to use the rust tools inside the build system.</p>",
        "id": 262805903,
        "sender_full_name": "Grommish",
        "timestamp": 1637938657
    },
    {
        "content": "<p>What about <code>rust-src</code>? (disregard: I saw someone answer about <code>rust-src</code>).. I think I'll just keep everything, because I have no idea what they might be using it for.</p>",
        "id": 262847490,
        "sender_full_name": "Grommish",
        "timestamp": 1637977619
    },
    {
        "content": "<p>Adding the below to my <code>configure</code> call resolved the issue, however now it appears LLVM is tossing errors.</p>\n<div class=\"codehilite\"><pre><span></span><code>  --set=llvm.cflags=-D__ppc__ \\\n  --set=llvm.cxxflags=-D__ppc__\n</code></pre></div>\n<p>This is outside the scope of <code>rust-lang</code> for certain, but any help anyone would like to give would be amazing..</p>\n<div class=\"codehilite\"><pre><span></span><code>FAILED: lib/Support/CMakeFiles/LLVMSupport.dir/Memory.cpp.o\nccache /usr/bin/c++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/build/x86_64-unknown-linux-gnu/llvm/build/lib/Support -I/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support -I/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/build/x86_64-unknown-linux-gnu/llvm/build/include -I/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/include -ffunction-sections -fdata-sections -fPIC -m64 -D__ppc__ -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -Werror=date-time -Wall -Wextra -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wno-missing-field-initializers -pedantic -Wno-long-long -Wimplicit-fallthrough -Wno-maybe-uninitialized -Wno-class-memaccess -Wno-redundant-move -Wno-pessimizing-move -Wno-noexcept-type -Wdelete-non-virtual-dtor -Wsuggest-override -Wno-comment -Wmisleading-indentation -fdiagnostics-color -ffunction-sections -fdata-sections -O3 -DNDEBUG -std=c++14  -fno-exceptions -fno-rtti -MD -MT lib/Support/CMakeFiles/LLVMSupport.dir/Memory.cpp.o -MF lib/Support/CMakeFiles/LLVMSupport.dir/Memory.cpp.o.d -o lib/Support/CMakeFiles/LLVMSupport.dir/Memory.cpp.o -c /home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Memory.cpp\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc: Assembler messages:\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:245: Error: no such instruction: `dcbf 0,%rdx&#39;\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:246: Error: no such instruction: `sync&#39;\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:249: Error: no such instruction: `icbi 0,%rax&#39;\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:250: Error: no such instruction: `isync&#39;\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:245: Error: no such instruction: `dcbf 0,%rdx&#39;\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:246: Error: no such instruction: `sync&#39;\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:249: Error: no such instruction: `icbi 0,%rax&#39;\n/home/grommish/openwrt/build_dir/hostpkg/rust-1.56.1/src/llvm-project/llvm/lib/Support/Unix/Memory.inc:250: Error: no such instruction: `isync&#39;\n[180/2804] Building CXX object utils/TableGen/CMakeFiles/llvm-tblgen.dir/FastISelEmitter.cpp.o\nninja: build stopped: subcommand failed.\nthread &#39;main&#39; panicked at &#39;\ncommand did not execute successfully, got: exit status: 1\n\nbuild script failed, must exit now&#39;, /home/grommish/.cargo/registry/src/github.com-1ecc6299db9ec823/cmake-0.1.44/src/lib.rs:885:5\n</code></pre></div>\n<p>Pg24 <a href=\"https://www.nxp.com/docs/en/white-paper/POWRPCARCPRMRM.pdf\">https://www.nxp.com/docs/en/white-paper/POWRPCARCPRMRM.pdf</a> shows those to be valid PPC Memory Registers..  Should I just go pester LLVM?</p>",
        "id": 262890492,
        "sender_full_name": "Grommish",
        "timestamp": 1638043529
    },
    {
        "content": "<p>Yeah that looks like an LLVM problem. Their PPC target certainly has given us Some Flak before.</p>",
        "id": 262893580,
        "sender_full_name": "Jubilee",
        "timestamp": 1638048088
    }
]