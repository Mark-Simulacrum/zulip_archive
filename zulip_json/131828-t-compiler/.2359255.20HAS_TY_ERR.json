[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I've been looking for some refactoring/cleanup issues to do and stumbled upon <a href=\"https://github.com/rust-lang/rust/issues/59255\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59255\">#59255</a>. Could you clarify that the issue is talking about removing <code>HAS_TY_ERROR</code> and just trying to get everything working again? I wasn't sure about where the comment was referring to when it said \"just return Error\", though it is ancient.</p>",
        "id": 165561412,
        "sender_full_name": "davidtwco",
        "timestamp": 1557776084
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> Well... <em>everywhere</em> :D this would be a major undertaking (getting rid of <code>TyKind::Err</code>) and changing loads of functions to return <code>Result</code>. Maybe even putting some of these results into stored values, not sure</p>",
        "id": 165561761,
        "sender_full_name": "oli",
        "timestamp": 1557776348
    },
    {
        "content": "<p>It wasn't clear to me from the issue whether it was just <code>HAS_TY_ERROR</code> or <code>TyKind::Err</code> too.</p>",
        "id": 165561812,
        "sender_full_name": "davidtwco",
        "timestamp": 1557776390
    },
    {
        "content": "<p>yea, XD that wasn't very clear from what I wrote, I agree</p>",
        "id": 165561904,
        "sender_full_name": "oli",
        "timestamp": 1557776439
    },
    {
        "content": "<p>The comment read to me as only talking about <code>HAS_TY_ERROR</code>.</p>",
        "id": 165561912,
        "sender_full_name": "davidtwco",
        "timestamp": 1557776444
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is this something we could bring up in a steering meeting? The general idea of using <code>Result</code> more?</p>",
        "id": 165561928,
        "sender_full_name": "oli",
        "timestamp": 1557776461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> as long as we have <code>TyKind::Err</code> we'll need to have <code>HAS_TY_ERROR</code> I believe</p>",
        "id": 165561965,
        "sender_full_name": "oli",
        "timestamp": 1557776483
    },
    {
        "content": "<p>I <a href=\"https://github.com/rust-lang/rust/commit/db003623134dbabae9a8065398644dc141b19d46\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/db003623134dbabae9a8065398644dc141b19d46\">found the commit</a> that introduced it, from March 20th 2013.</p>",
        "id": 165561968,
        "sender_full_name": "davidtwco",
        "timestamp": 1557776484
    },
    {
        "content": "<p>Unless that moved the comment and GitHub's collapsed diffs are making CTRL+F not find it.</p>",
        "id": 165562014,
        "sender_full_name": "davidtwco",
        "timestamp": 1557776523
    },
    {
        "content": "<p>yea, it's super old</p>",
        "id": 165562063,
        "sender_full_name": "oli",
        "timestamp": 1557776535
    },
    {
        "content": "<p>I suppose I'm up for the challenge.</p>",
        "id": 165562088,
        "sender_full_name": "davidtwco",
        "timestamp": 1557776563
    },
    {
        "content": "<p>It just depends if this is something we want to do or not.</p>",
        "id": 165562104,
        "sender_full_name": "davidtwco",
        "timestamp": 1557776578
    },
    {
        "content": "<p>yea, don't start on it yet :D let's wait for niko and/or steering meeting discussions</p>",
        "id": 165562158,
        "sender_full_name": "oli",
        "timestamp": 1557776624
    },
    {
        "content": "<p>Rust code using <code>Result</code>? Outrageous. Next you'll say we should use <code>Option</code> instead of null pointers.</p>",
        "id": 165568665,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1557781206
    },
    {
        "content": "<p>there are more subtle scenarios, though, e.g. where we currently return a result of a type</p>",
        "id": 165580240,
        "sender_full_name": "varkor",
        "timestamp": 1557791795
    },
    {
        "content": "<p>so valid return values are <code>Ok(some real type)</code>, <code>Ok(type error)</code> and <code>Err(error)</code></p>",
        "id": 165580270,
        "sender_full_name": "varkor",
        "timestamp": 1557791827
    },
    {
        "content": "<p>and the latter two behave differently</p>",
        "id": 165580284,
        "sender_full_name": "varkor",
        "timestamp": 1557791841
    },
    {
        "content": "<p>for example, in unification system</p>",
        "id": 165580296,
        "sender_full_name": "varkor",
        "timestamp": 1557791858
    },
    {
        "content": "<p>I think there are some subtleties here</p>",
        "id": 165580310,
        "sender_full_name": "varkor",
        "timestamp": 1557791877
    },
    {
        "content": "<p>will it handle all <code>Error(error)</code> variants differently? I would have assumed there are some terminating variants.</p>",
        "id": 165596624,
        "sender_full_name": "oli",
        "timestamp": 1557814633
    },
    {
        "content": "<p>I'm not sure; maybe it won't be too much of a pain to convert</p>",
        "id": 165663267,
        "sender_full_name": "varkor",
        "timestamp": 1557868604
    },
    {
        "content": "<p>This is a very impractical idea, if I understand it correctly.<br>\nReplacing e.g. <code>ExprKind::Err</code> or <code>Def::Err</code> with <code>Results</code> would make matching on expressions/definitions a nightmare, I'd expect a similar effect from removing <code>ty::Err</code>.</p>",
        "id": 165698539,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1557911764
    },
    {
        "content": "<p>Agree with petrochenkov here, removing <code>TyKind::Err</code> will mean making every type <code>node</code> be <code>Result&lt;TyKind, _&gt;</code>, which doesn't give us much</p>",
        "id": 166861437,
        "sender_full_name": "Esteban KÃ¼ber",
        "timestamp": 1559167483
    },
    {
        "content": "<p>wouldn't it just bubble up so the outermost node would end up being <code>Err(sth)</code>?</p>",
        "id": 166862224,
        "sender_full_name": "oli",
        "timestamp": 1559168135
    },
    {
        "content": "<p>I guess someone needs to try and see how it looks.</p>",
        "id": 166885793,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1559199623
    },
    {
        "content": "<blockquote>\n<p>The general idea of using Result more?</p>\n</blockquote>\n<p>Hm, from the IDE perspective, you really, really don't want <code>Either&lt;Value, Error&gt;</code>, you must use <code>(Value, Vec&lt;Error&gt;)</code></p>",
        "id": 166929984,
        "sender_full_name": "matklad",
        "timestamp": 1559238560
    },
    {
        "content": "<p>That is, you should resiliently recover from errors.</p>",
        "id": 166929996,
        "sender_full_name": "matklad",
        "timestamp": 1559238577
    },
    {
        "content": "<blockquote>\n<p>is this something we could bring up in a steering meeting? The general idea of using <code>Result</code> more?</p>\n</blockquote>\n<p>I've not read this whole topic, but to follow up here, we have a planning meeting tomorrow -- perhaps somebody can submit a short meeting proposal?</p>",
        "id": 167507290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559845097
    },
    {
        "content": "<blockquote>\n<p>Agree with petrochenkov here, removing <code>TyKind::Err</code> will mean making every type <code>node</code> be <code>Result&lt;TyKind, _&gt;</code>, which doesn't give us much</p>\n</blockquote>\n<p>but I definitely do NOT think we should do this</p>",
        "id": 167507335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559845123
    },
    {
        "content": "<p>if anything, I'd more go the opposite direction, and create more error sentinel values :)</p>",
        "id": 167507346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559845133
    },
    {
        "content": "<p>(roughly what <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> said)</p>",
        "id": 167507375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559845156
    }
]