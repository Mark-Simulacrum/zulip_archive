[
    {
        "content": "<p>Is the size of the ui test suite a concern, and should we make efforts to combine multiple tests into one if possible? That's what I am doing but the discussion came up in <a href=\"https://github.com/rust-lang/rust/pull/77512\">https://github.com/rust-lang/rust/pull/77512</a> and <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> disagrees, so I wonder what the compiler team thinks about this.</p>",
        "id": 212240424,
        "sender_full_name": "RalfJ",
        "timestamp": 1601843638
    },
    {
        "content": "<p>By the way, are they run in parallel? They seem to go sequentially, but it seems it would be easy to parallelize...</p>",
        "id": 212240568,
        "sender_full_name": "Noah Lev",
        "timestamp": 1601843763
    },
    {
        "content": "<p>they run in parallel</p>",
        "id": 212240614,
        "sender_full_name": "lcnr",
        "timestamp": 1601843813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> if you want to make the test suite run faster, print the amount of time it takes to run each test, sort it and start from the top. Trying to get PR authors to write a strictly minimal number of tests given the current structure of the code is not a productive use of time IMO. I'd rather have too much coverage than not enough.</p>",
        "id": 212240733,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601843976
    },
    {
        "content": "<p>There's also been an effort to port some UI tests to standard library unit tests, which doesn't reduce coverage at all. I think this is noble as well.</p>",
        "id": 212240814,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1601844061
    },
    {
        "content": "<p>there's a non-zero constant overhead per test, so just reducing the number of them IMO is a fair strategy to avoid test suite time blowup</p>",
        "id": 212240819,
        "sender_full_name": "RalfJ",
        "timestamp": 1601844067
    },
    {
        "content": "<p>That said, I am happy to follow t-compiler policy here, I just don't know their policy :)</p>",
        "id": 212240827,
        "sender_full_name": "RalfJ",
        "timestamp": 1601844090
    },
    {
        "content": "<p>I do not think there is policy.</p>\n<p>I think it makes sense to not duplicate tests, but it can be hard to say whether we're covering the same surface area with UI tests</p>",
        "id": 212240852,
        "sender_full_name": "simulacrum",
        "timestamp": 1601844121
    },
    {
        "content": "<p>maybe it would make sense to add unit tests for the compiler? Then the tests wouldn't take as long to run and you could write more of them</p>",
        "id": 212241334,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601844838
    },
    {
        "content": "<p>ideally it would even let you run tests without having to compile all crates, you'd only have to compile up to the one you're testing</p>",
        "id": 212241377,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601844868
    },
    {
        "content": "<p>definitely a longer-term project though</p>",
        "id": 212241386,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601844894
    },
    {
        "content": "<p>I think that's a bit \"draw the whole owl in step two\" in the sense that it's not something we can \"just do\"</p>",
        "id": 212241388,
        "sender_full_name": "simulacrum",
        "timestamp": 1601844899
    },
    {
        "content": "<p>I guess the hard part would be separating out things that can be tested on their own</p>",
        "id": 212241455,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601844987
    },
    {
        "content": "<p>I'd be lovely to have code coverage working and move all duplicated tests to separate repo/directory. They could be ran (bi-)weekly as a separate job just to make sure nothing regress.<br>\nSo we would test most important things every PR and do big test from time to time.</p>",
        "id": 212242166,
        "sender_full_name": "mati865",
        "timestamp": 1601846176
    },
    {
        "content": "<p>In regard to number of tests more small tests is definitely easier to work with for the developer but on the other hand it slows down CI much more than fewer big tests. Especially Windows based (who would have guessed...) runners which are already slowest runners take biggest hit from it.</p>",
        "id": 212242258,
        "sender_full_name": "mati865",
        "timestamp": 1601846393
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Size.20of.20the.20ui.20test.20suite/near/212241334\">said</a>:</p>\n<blockquote>\n<p>maybe it would make sense to add unit tests for the compiler? Then the tests wouldn't take as long to run and you could write more of them</p>\n</blockquote>\n<p>Those might be a pain to write since you have to setup all kinds of state in the compiler properly :/</p>",
        "id": 212251702,
        "sender_full_name": "Noah Lev",
        "timestamp": 1601862855
    }
]