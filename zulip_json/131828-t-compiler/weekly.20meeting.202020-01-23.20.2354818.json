[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; the triage meeting will be starting in 1 hour 33 minutes</p>",
        "id": 186387653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579786029
    },
    {
        "content": "<p>I will be doing <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-01-23.20.2354818/near/186387673\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202020-01-23.20.2354818/near/186387673\">pre-triage in a parallel topic</a></p>",
        "id": 186387706,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579786072
    },
    {
        "content": "<p>This week we are scheduled to hear from <span class=\"user-group-mention\" data-user-group-id=\"1122\">@WG-profile-guided-optimization</span> (which is ... heh, retired. Gotta change that part of the scheduler), and <span class=\"user-group-mention\" data-user-group-id=\"1325\">@WG-pipelining</span> .</p>",
        "id": 186387793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579786136
    },
    {
        "content": "<p>Will <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> be around to provide an update? (nnethercote is on PTO until Jan 28).</p>",
        "id": 186387848,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579786182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I can yeah, but there is also no update to give! It's likely safe to archive the WG now</p>",
        "id": 186393862,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1579789985
    },
    {
        "content": "<p>okay thanks <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> !</p>",
        "id": 186393875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579789999
    },
    {
        "content": "<p>Or at least no update that I know of</p>",
        "id": 186393881,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1579790003
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 186396659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791689
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 186396673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791699
    },
    {
        "content": "<p>wow what is up with duplication...</p>",
        "id": 186396705,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791718
    },
    {
        "content": "<p>(is it just on my zulip client? Or do others see the duplicate messages?)</p>",
        "id": 186396835,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791773
    },
    {
        "content": "<p>I do as well.</p>",
        "id": 186396844,
        "sender_full_name": "simulacrum",
        "timestamp": 1579791779
    },
    {
        "content": "<p>okay well if its just on the initial one I wrote, then I won't worry about it</p>",
        "id": 186396885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791800
    },
    {
        "content": "<p>so lets start with five minutes for ...</p>",
        "id": 186396925,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791833
    },
    {
        "content": "<h1>Announcements</h1>",
        "id": 186396927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791836
    },
    {
        "content": "<p>First up: no design meeting tomorrow</p>",
        "id": 186396975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791847
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> reached out and <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> cannot make either date, and then we failed to follow-up beyond there.)</p>",
        "id": 186397010,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579791872
    },
    {
        "content": "<p>I think the plan is that we'll discuss <a href=\"https://github.com/rust-lang/compiler-team/issues/237\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/237\">compiler-team#237</a> on Feb 7</p>",
        "id": 186397079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579791915
    },
    {
        "content": "<p>but we have to make the announcement, indeed</p>",
        "id": 186397088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579791921
    },
    {
        "content": "<p>The subject is \"parser library-ification\", and I would encourage folks to take a look at the existing write-ups that <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> and others have prepared there</p>",
        "id": 186397154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579791961
    },
    {
        "content": "<p>We would specifically like to discuss the proposal to extract out a portion of the parser that can be shared, to see whether that scheme could work and what complications might arise from it</p>",
        "id": 186397233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579791990
    },
    {
        "content": "<p>also: The next release is scheduled for January 30th (a week from today), and \"no breakage week\" started yesterday. See <a href=\"https://forge.rust-lang.org/\" target=\"_blank\" title=\"https://forge.rust-lang.org/\">https://forge.rust-lang.org/</a></p>",
        "id": 186397308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792051
    },
    {
        "content": "<p>what exactly does \"no breakage week\" mean?</p>",
        "id": 186397439,
        "sender_full_name": "mw",
        "timestamp": 1579792114
    },
    {
        "content": "<p>no tool breakage, I think.</p>",
        "id": 186397463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792123
    },
    {
        "content": "<p>you cannot land a change breaking clippy, rls, rustfmt</p>",
        "id": 186397476,
        "sender_full_name": "simulacrum",
        "timestamp": 1579792132
    },
    {
        "content": "<p>(miri can be broken I believe)</p>",
        "id": 186397483,
        "sender_full_name": "simulacrum",
        "timestamp": 1579792137
    },
    {
        "content": "<p>ah ok</p>",
        "id": 186397485,
        "sender_full_name": "mw",
        "timestamp": 1579792139
    },
    {
        "content": "<p>so PRs would be reverted?</p>",
        "id": 186397499,
        "sender_full_name": "mw",
        "timestamp": 1579792146
    },
    {
        "content": "<p>no they would not land</p>",
        "id": 186397518,
        "sender_full_name": "centril",
        "timestamp": 1579792163
    },
    {
        "content": "<p>in the first place</p>",
        "id": 186397525,
        "sender_full_name": "centril",
        "timestamp": 1579792168
    },
    {
        "content": "<p>do we check tool breakage before landing?</p>",
        "id": 186397545,
        "sender_full_name": "mw",
        "timestamp": 1579792179
    },
    {
        "content": "<p>yes</p>",
        "id": 186397551,
        "sender_full_name": "centril",
        "timestamp": 1579792182
    },
    {
        "content": "<p>cool! I never saw that</p>",
        "id": 186397581,
        "sender_full_name": "mw",
        "timestamp": 1579792198
    },
    {
        "content": "<p>so really its not anything you need to actually think about. Yay!</p>",
        "id": 186397660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792220
    },
    {
        "content": "<p>/me doesn't have such fortunes =D</p>",
        "id": 186397703,
        "sender_full_name": "centril",
        "timestamp": 1579792251
    },
    {
        "content": "<p>okay lets get started</p>",
        "id": 186397725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792263
    },
    {
        "content": "<p>today's agenda items are on this hackmd: <a href=\"https://hackmd.io/YBpyTmQ7S_uPhScJWDwBag?both\" target=\"_blank\" title=\"https://hackmd.io/YBpyTmQ7S_uPhScJWDwBag?both\">https://hackmd.io/YBpyTmQ7S_uPhScJWDwBag?both</a></p>",
        "id": 186397743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792273
    },
    {
        "content": "<p>(they are, as usual, derived from the list at <a href=\"https://github.com/rust-lang/rust/issues/54818\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54818\">#54818</a>)</p>",
        "id": 186397771,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792286
    },
    {
        "content": "<p>we have two <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\">beta backport nominations</a></p>",
        "id": 186397803,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792308
    },
    {
        "content": "<p>beta nom: \"Do not ICE on malformed suggestion spans\" <a href=\"https://github.com/rust-lang/rust/issues/68256\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68256\">#68256</a></p>",
        "id": 186397871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792327
    },
    {
        "content": "<p>(that code-path is pretty ICE happy... I fixed an ICE there a while ago as well)</p>",
        "id": 186397951,
        "sender_full_name": "centril",
        "timestamp": 1579792389
    },
    {
        "content": "<p>(I sort of shrug on this. Its fine, but the original bug showed that you got useful diagnostics before the ICE occurred, so it was only P-medium priority in the first place.)</p>",
        "id": 186398006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792440
    },
    {
        "content": "<p>but if no one objects, then we might as well backport.</p>",
        "id": 186398116,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792486
    },
    {
        "content": "<p><em>unless</em> we want to try to encourage a policy that beta-backports a week before release should be reserved for higher priority items?</p>",
        "id": 186398192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792546
    },
    {
        "content": "<p>Interesting</p>",
        "id": 186398244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579792564
    },
    {
        "content": "<p>That might indeed make sense</p>",
        "id": 186398257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579792575
    },
    {
        "content": "<p>Since said backports will hit stable with relatively little testing</p>",
        "id": 186398273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579792589
    },
    {
        "content": "<p>hmm; it seems to me that higher risk backports are the ones that should be avoided especially near release</p>",
        "id": 186398322,
        "sender_full_name": "centril",
        "timestamp": 1579792633
    },
    {
        "content": "<p>does higher prio mean higher risk / impact?</p>",
        "id": 186398334,
        "sender_full_name": "centril",
        "timestamp": 1579792641
    },
    {
        "content": "<p>no, not necessarily</p>",
        "id": 186398342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792648
    },
    {
        "content": "<p>at least, in my mind, there are some changes that obviously do not inject new faults</p>",
        "id": 186398429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792696
    },
    {
        "content": "<p>I definitely think we should avoid higher  risk, but I would guess higher priority would take both priority and risk into account; i.e., a high priority bug would probably make a higher level of risk acceptable</p>",
        "id": 186398434,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579792702
    },
    {
        "content": "<p>(since the alternative, a known and terrible bug, is clearly worse)</p>",
        "id": 186398469,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579792729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that seems like the practice we do have , e.g. remember the lifetime elision thing we backported</p>",
        "id": 186398491,
        "sender_full_name": "centril",
        "timestamp": 1579792752
    },
    {
        "content": "<p>(which was high risk but also high priority)</p>",
        "id": 186398501,
        "sender_full_name": "centril",
        "timestamp": 1579792761
    },
    {
        "content": "<p>there is one more point to be made here: I think <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> claimed on PR <a href=\"https://github.com/rust-lang/rust/issues/68256\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68256\">#68256</a> that the PR is also fixing the quality of some spans that were being ill-constructed.</p>",
        "id": 186398535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792790
    },
    {
        "content": "<p>but I personally don't see much wrong with backporting very low risk &amp; low reward PRs (although I'm not sure how that applies to this PR) near release</p>",
        "id": 186398618,
        "sender_full_name": "centril",
        "timestamp": 1579792812
    },
    {
        "content": "<p>so its possible that I was wrong in my claim that the currently issued diagnostic is good enough</p>",
        "id": 186398646,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792828
    },
    {
        "content": "<p>...it sounds like we are a go for backport?</p>",
        "id": 186398842,
        "sender_full_name": "centril",
        "timestamp": 1579792936
    },
    {
        "content": "<p>Yeah I think I've talked myself into believing that we should probably approve beta-backport here</p>",
        "id": 186398887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792967
    },
    {
        "content": "<p>anyone want to object given issues raised above?</p>",
        "id": 186398901,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792978
    },
    {
        "content": "<p>beta-approved</p>",
        "id": 186398934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579792998
    },
    {
        "content": "<p>beta nom: \"Revert parts of <a href=\"https://github.com/rust-lang/rust/issues/66405\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66405\">#66405</a>.\" <a href=\"https://github.com/rust-lang/rust/issues/67471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67471\">#67471</a></p>",
        "id": 186399052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793051
    },
    {
        "content": "<p>this <em>is</em> a high priority item. Or at least, <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote (PTO Dec 23 - Jan 28)</span> 's intention was that this land in time to avoid the perf regressions hitting stable...</p>",
        "id": 186399095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793085
    },
    {
        "content": "<p>The changes here are larger, but they are reverts</p>",
        "id": 186399157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793110
    },
    {
        "content": "<p>I'd be inclined to backport</p>",
        "id": 186399169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793118
    },
    {
        "content": "<p>yeah I think backport too</p>",
        "id": 186399206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793153
    },
    {
        "content": "<p>okay beta-accepted</p>",
        "id": 186399313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793206
    },
    {
        "content": "<p>there is one new PR that is tagged S-waiting-on-team</p>",
        "id": 186399348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793254
    },
    {
        "content": "<p>\" rustc_hir: add Expr! pattern macro and try it out in a couple places.\" <a href=\"https://github.com/rust-lang/rust/issues/68320\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68320\">#68320</a></p>",
        "id": 186399356,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793261
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 186399432,
        "sender_full_name": "oli",
        "timestamp": 1579793289
    },
    {
        "content": "<p>I definitely feel the motivation, but I do worry that this will be a obfuscating pattern that we come to regret over time.</p>",
        "id": 186399482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793328
    },
    {
        "content": "<p>I think the IDE support isn't there yet also</p>",
        "id": 186399566,
        "sender_full_name": "centril",
        "timestamp": 1579793385
    },
    {
        "content": "<p>not being able to do F12 (go to definition) would be frustrating</p>",
        "id": 186399578,
        "sender_full_name": "centril",
        "timestamp": 1579793395
    },
    {
        "content": "<p>I would be more positively inclined if we had pattern aliases (<a href=\"https://ghc.haskell.org/trac/ghc/wiki/PatternSynonyms\" target=\"_blank\" title=\"https://ghc.haskell.org/trac/ghc/wiki/PatternSynonyms\">https://ghc.haskell.org/trac/ghc/wiki/PatternSynonyms</a>) and used those, but we don't</p>",
        "id": 186399705,
        "sender_full_name": "centril",
        "timestamp": 1579793460
    },
    {
        "content": "<p><code>hir::Expr!(Lit(_))</code> is short-hand for <code>Expr { kind: ExprKind::Lit(_), .. }</code>; but the biggest pain there is what? The written-out <code>ExprKind::</code> ?</p>",
        "id": 186399716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I think so</p>",
        "id": 186399744,
        "sender_full_name": "centril",
        "timestamp": 1579793481
    },
    {
        "content": "<p>Or is even the <code>{ kind:</code> and <code>, .. }</code> annoying?</p>",
        "id": 186399747,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793484
    },
    {
        "content": "<p>because one could obviously import the variants (of <code>ExprKind</code>) into scope, right?</p>",
        "id": 186399765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793497
    },
    {
        "content": "<p>presumably the sum total <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 186399773,
        "sender_full_name": "centril",
        "timestamp": 1579793499
    },
    {
        "content": "<p>well in reality loads of code is matching on <code>expr.kind</code> instead of <code>expr</code></p>",
        "id": 186399808,
        "sender_full_name": "oli",
        "timestamp": 1579793519
    },
    {
        "content": "<p>and this leads to nested matches</p>",
        "id": 186399857,
        "sender_full_name": "oli",
        "timestamp": 1579793526
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> but that's mostly due to <code>P&lt;_&gt;</code> and the lack of arena allocation</p>",
        "id": 186399873,
        "sender_full_name": "centril",
        "timestamp": 1579793537
    },
    {
        "content": "<p>with the macro, those nested matches could become \"simple\" patterns</p>",
        "id": 186399876,
        "sender_full_name": "oli",
        "timestamp": 1579793541
    },
    {
        "content": "<p>which is fixed now, for HIR</p>",
        "id": 186399877,
        "sender_full_name": "centril",
        "timestamp": 1579793542
    },
    {
        "content": "<p>another example where I could see this pattern being of use is to \"group together\" some of the variants of types</p>",
        "id": 186399886,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793546
    },
    {
        "content": "<p>into categories</p>",
        "id": 186399923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793568
    },
    {
        "content": "<p>the alternative is to create nested enums, but that affects the memory layout</p>",
        "id": 186399960,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793582
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  can you give an example?</p>",
        "id": 186399963,
        "sender_full_name": "centril",
        "timestamp": 1579793583
    },
    {
        "content": "<blockquote>\n<p>the alternative is to create nested enums, but that affects the memory layout</p>\n</blockquote>\n<p>Well... <code>#[compact]</code> could be a thing :P</p>",
        "id": 186400006,
        "sender_full_name": "centril",
        "timestamp": 1579793610
    },
    {
        "content": "<p>example: <a href=\"https://github.com/nikomatsakis/chalk-ndm/blob/chalk-ir-proposal/book/src/types/rust_types.md#the-tydata-variants-and-how-they-map-to-rust-syntax\" target=\"_blank\" title=\"https://github.com/nikomatsakis/chalk-ndm/blob/chalk-ir-proposal/book/src/types/rust_types.md#the-tydata-variants-and-how-they-map-to-rust-syntax\">compare the chalk types to rustc types</a></p>",
        "id": 186400159,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793678
    },
    {
        "content": "<p>side note before we spend too much time on this: eddy mainly wanted to throw this into the room to show that it's possible. It's a low priority thing.</p>",
        "id": 186400169,
        "sender_full_name": "oli",
        "timestamp": 1579793686
    },
    {
        "content": "<p>if we solve the memory layout problem, that'd be a nice alternative (one I might prefer, even)</p>",
        "id": 186400178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793691
    },
    {
        "content": "<p>yeah, I understand</p>",
        "id": 186400184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793695
    },
    {
        "content": "<p>I mostly wanted to see if anyone here wants to champion this</p>",
        "id": 186400205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793706
    },
    {
        "content": "<p>in any case, even though I think I could see using it, I'm inclined to say \"it's a pattern we're gonna rip out someday\"</p>",
        "id": 186400222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579793713
    },
    {
        "content": "<blockquote>\n<p>in any case, even though I think I could see using it, I'm inclined to say \"it's a pattern we're gonna rip out someday\"</p>\n</blockquote>\n<p>In that case I think putting our energies into layout opts would be a better way to spend them</p>",
        "id": 186400251,
        "sender_full_name": "oli",
        "timestamp": 1579793738
    },
    {
        "content": "<p>well it sounds like no one here is enthusiastic about this.</p>",
        "id": 186400265,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793750
    },
    {
        "content": "<p><code>let_chains</code> and <code>or_patterns</code> should also help btw</p>",
        "id": 186400274,
        "sender_full_name": "centril",
        "timestamp": 1579793751
    },
    {
        "content": "<p>the latter of which we might get very soon (on nightly)</p>",
        "id": 186400285,
        "sender_full_name": "centril",
        "timestamp": 1579793758
    },
    {
        "content": "<p>so we can leave feedback saying so, and say that we'll close in a week unless a champion comes forward?</p>",
        "id": 186400351,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793774
    },
    {
        "content": "<p>okay, what next</p>",
        "id": 186400571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793907
    },
    {
        "content": "<p>given that its the week before release</p>",
        "id": 186400602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793930
    },
    {
        "content": "<p>lets look over the beta-regressions</p>",
        "id": 186400611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793934
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> also thanks for reviewing the or-patterns MIR PR btw!)</p>",
        "id": 186400642,
        "sender_full_name": "centril",
        "timestamp": 1579793952
    },
    {
        "content": "<p>I'm going to go over all of them, not just T-compiler ones</p>",
        "id": 186400688,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793983
    },
    {
        "content": "<p>beta regression: \"rustdoc only: duplicate lang item <code>panic_halt</code>\" <a href=\"https://github.com/rust-lang/rust/issues/68427\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68427\">#68427</a></p>",
        "id": 186400695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579793990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> says they are going to look into it</p>",
        "id": 186400707,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794000
    },
    {
        "content": "<p>beta regression: \"ICE: index out of bounds: the len is 0 but the index is 0\" <a href=\"https://github.com/rust-lang/rust/issues/67945\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67945\">#67945</a></p>",
        "id": 186400766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794017
    },
    {
        "content": "<p>interesting: skiny121 had a proposal to try to sidestep these ICEs, and put up a PR</p>",
        "id": 186400849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794074
    },
    {
        "content": "<p>but then <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> pointed out issues with that PR <a href=\"https://github.com/rust-lang/rust/issues/68356\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68356\">#68356</a> here: <a href=\"https://github.com/rust-lang/rust/pull/68356#issuecomment-576011329\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/68356#issuecomment-576011329\">comment</a></p>",
        "id": 186400922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794122
    },
    {
        "content": "<p>anyway we decided <a href=\"https://github.com/rust-lang/rust/issues/67945#issuecomment-572616705\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67945#issuecomment-572616705\">two weeks ago</a> that we wouldn't block a release on <a href=\"https://github.com/rust-lang/rust/issues/67945\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67945\">#67945</a></p>",
        "id": 186401047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794189
    },
    {
        "content": "<p>it might be interesting to try to investigate some of the alternative approaches <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> put forth in their comment above. But that does not need to happen in the next week.</p>",
        "id": 186401097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794232
    },
    {
        "content": "<p>so lets move on</p>",
        "id": 186401151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794247
    },
    {
        "content": "<p>beta regression: \"not Send due to await retainment\" <a href=\"https://github.com/rust-lang/rust/issues/67611\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67611\">#67611</a></p>",
        "id": 186401179,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794262
    },
    {
        "content": "<p>when I last spoke to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> about this, they said they were awaiting feedback on their comment <a href=\"https://github.com/rust-lang/rust/issues/67611#issuecomment-571760503\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67611#issuecomment-571760503\">here</a></p>",
        "id": 186401274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794317
    },
    {
        "content": "<p>there has been recent discussion with <span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span></p>",
        "id": 186401466,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794397
    },
    {
        "content": "<p>Hmm. I've been wanting to make time to dive a bit deeper into what is happening there</p>",
        "id": 186401473,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794401
    },
    {
        "content": "<p>but I'm still struggling to understand the outcome of that discussion</p>",
        "id": 186401485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794406
    },
    {
        "content": "<p>it seemed to me like they both agreed that using the Internal flag might be a reasonable solution?</p>",
        "id": 186401522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794427
    },
    {
        "content": "<p>but it seems unlikely that we would fix this in time?</p>",
        "id": 186401524,
        "sender_full_name": "centril",
        "timestamp": 1579794429
    },
    {
        "content": "<p>Even though I said I'd look into it this week-end, I have to prepare my talk for the FOSDEM so if you don't see anything coming from me, don't hesitate to take a look!</p>",
        "id": 186401530,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1579794434
    },
    {
        "content": "<blockquote>\n<p>it seemed to me like they both agreed that using the Internal flag might be a reasonable solution?</p>\n</blockquote>\n<p>I think that is right, and I lean this way as well</p>",
        "id": 186401578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794466
    },
    {
        "content": "<p>Hum... I actually wonder if I haven't been pinged from a previous meeting... :'(</p>",
        "id": 186401643,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1579794486
    },
    {
        "content": "<p>bottom line is that it seems like we're getting tripped up on something of an \"impl detail\" but I'm not sure what seems to be the best way to represent that impl detail</p>",
        "id": 186401694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> we don't normally go over the issues tagged T-rustdoc</p>",
        "id": 186401698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794525
    },
    {
        "content": "<p>but I figured with the release coming up, it would be good to do so</p>",
        "id": 186401713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794539
    },
    {
        "content": "<p>(T-rustdoc might want to consider its own triage process)</p>",
        "id": 186401751,
        "sender_full_name": "centril",
        "timestamp": 1579794570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Putting into my high priority todo list</p>",
        "id": 186401775,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1579794586
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> we're basically two currently with a third suddenly appearing with a lot of fixes before disappearing</p>",
        "id": 186401847,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1579794613
    },
    {
        "content": "<blockquote>\n<p>bottom line is that it seems like we're getting tripped up on something of an \"impl detail\" but I'm not sure what seems to be the best way to represent that impl detail</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> are you around? Do you think you'll have time in next few days to try to put together the <code>internal</code> approach?</p>",
        "id": 186401852,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794616
    },
    {
        "content": "<p>(I'll stop commenting to prevent more noise, sorry!)</p>",
        "id": 186401876,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1579794633
    },
    {
        "content": "<p>I haven't read the issue in depth, but T-Lang was cced, so is there a lang question here as well?</p>",
        "id": 186401952,
        "sender_full_name": "centril",
        "timestamp": 1579794673
    },
    {
        "content": "<p>I'll follow up with <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> regarding <a href=\"https://github.com/rust-lang/rust/issues/67611\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67611\">#67611</a> later</p>",
        "id": 186401958,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I think the lang question is regarding what guarantees we provide regarding auto traits</p>",
        "id": 186401981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794697
    },
    {
        "content": "<p>this in particular: <a href=\"https://github.com/rust-lang/rust/issues/67611#issuecomment-576003133\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67611#issuecomment-576003133\">https://github.com/rust-lang/rust/issues/67611#issuecomment-576003133</a></p>",
        "id": 186401990,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794707
    },
    {
        "content": "<p>(is there a typo there? Why does it use <code>!</code> for <code>*mut</code> but no <code>!</code> for <code>*const</code> ? )</p>",
        "id": 186402118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794761
    },
    {
        "content": "<p>It's basically about what types should appear in the generator</p>",
        "id": 186402122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794763
    },
    {
        "content": "<p>It's not really a general question about auto traits</p>",
        "id": 186402137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794773
    },
    {
        "content": "<p>That is clearly not a guarantee you get from auto traits</p>",
        "id": 186402152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794782
    },
    {
        "content": "<p>(In the general sense)</p>",
        "id": 186402175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794795
    },
    {
        "content": "<p>Since people can add their own impls, I mean</p>",
        "id": 186402177,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1579794799
    },
    {
        "content": "<blockquote>\n<p>I would argue that we're not making such (or really any) guarantees with user defined auto traits.<br>\nYeah, I don't think auto traits should expose layout implementation details of generators.</p>\n</blockquote>\n<p>Agree with this</p>",
        "id": 186402178,
        "sender_full_name": "centril",
        "timestamp": 1579794799
    },
    {
        "content": "<blockquote>\n<p>I'll follow up with <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span> regarding <a href=\"https://github.com/rust-lang/rust/issues/67611\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67611\">#67611</a> later</p>\n</blockquote>\n<p>Anyway I think we can keep going, assuming I actually follow through on this promise.</p>",
        "id": 186402298,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794854
    },
    {
        "content": "<p>beta regression: \"const_if_match ICE\" <a href=\"https://github.com/rust-lang/rust/issues/67405\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67405\">#67405</a></p>",
        "id": 186402360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794894
    },
    {
        "content": "<p>hmm I didn't record <em>why</em> we downgraded this to P-medium back in December</p>",
        "id": 186402401,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794919
    },
    {
        "content": "<p>oh is it one of those \"ICE after you get warned about using an unstable feature \" ?</p>",
        "id": 186402445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794947
    },
    {
        "content": "<p>/me <span aria-label=\"clock\" class=\"emoji emoji-1f557\" role=\"img\" title=\"clock\">:clock:</span> 5 minute warning</p>",
        "id": 186402457,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1579794950
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yea, <code>match</code> in const contexts is gated</p>",
        "id": 186402518,
        "sender_full_name": "centril",
        "timestamp": 1579794965
    },
    {
        "content": "<p>(on HIR)</p>",
        "id": 186402528,
        "sender_full_name": "centril",
        "timestamp": 1579794973
    },
    {
        "content": "<p>yeah okay so we can just let this slide I guess</p>",
        "id": 186402548,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579794986
    },
    {
        "content": "<p>that or we make it a non-recoverable error</p>",
        "id": 186402572,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795001
    },
    {
        "content": "<p>but I suspect falling through to an ICE is better.</p>",
        "id": 186402592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795015
    },
    {
        "content": "<p>error message before ICE seems good enough</p>",
        "id": 186402606,
        "sender_full_name": "centril",
        "timestamp": 1579795029
    },
    {
        "content": "<p>(it's a very weird edge case)</p>",
        "id": 186402647,
        "sender_full_name": "centril",
        "timestamp": 1579795063
    },
    {
        "content": "<blockquote>\n<p>/me <span aria-label=\"clock\" class=\"emoji emoji-1f557\" role=\"img\" title=\"clock\">:clock:</span> 5 minute warning</p>\n</blockquote>\n<p>(luckily both of our WG's  scheduled for checkin are (effectively) retired)</p>",
        "id": 186402653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795068
    },
    {
        "content": "<p>beta regression: \"Usage of errorneous constant can be omitted on nightly and beta\" <a href=\"https://github.com/rust-lang/rust/issues/67083\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67083\">#67083</a></p>",
        "id": 186402696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795083
    },
    {
        "content": "<p>cc <a href=\"https://github.com/rust-lang/rust/issues/679191\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/679191\">#679191</a></p>",
        "id": 186402793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795127
    },
    {
        "content": "<p>I fixed this I think but it stays fragile</p>",
        "id": 186402801,
        "sender_full_name": "oli",
        "timestamp": 1579795131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> did <a href=\"https://github.com/rust-lang/rust/issues/679191\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/679191\">#679191</a> get fixed as well?</p>",
        "id": 186402826,
        "sender_full_name": "centril",
        "timestamp": 1579795148
    },
    {
        "content": "<p>T-lang discussed that one and came to a conclusion</p>",
        "id": 186402843,
        "sender_full_name": "centril",
        "timestamp": 1579795159
    },
    {
        "content": "<p>so it's in t-compiler's court now</p>",
        "id": 186402846,
        "sender_full_name": "centril",
        "timestamp": 1579795164
    },
    {
        "content": "<p>namely <a href=\"https://github.com/rust-lang/rust/issues/67191#issuecomment-572810501\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67191#issuecomment-572810501\">Based on the consensus to use NLLs notion of liveness in erroring on live bad constants, I'm moving this over to the compiler team for the implementation.</a></p>",
        "id": 186402866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795179
    },
    {
        "content": "<p>uh, that's not a valid issue id</p>",
        "id": 186402868,
        "sender_full_name": "oli",
        "timestamp": 1579795180
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/67191\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67191\">#67191</a></p>",
        "id": 186402877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795189
    },
    {
        "content": "<p>sorry</p>",
        "id": 186402879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795191
    },
    {
        "content": "<p>ah, no that has not been addressed yet, but that's not a regression either</p>",
        "id": 186402888,
        "sender_full_name": "oli",
        "timestamp": 1579795200
    },
    {
        "content": "<p>but the known regression in <a href=\"https://github.com/rust-lang/rust/issues/67083\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67083\">#67083</a> <em>has</em> been addressed, right?</p>",
        "id": 186403025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795255
    },
    {
        "content": "<p>yes</p>",
        "id": 186403032,
        "sender_full_name": "oli",
        "timestamp": 1579795259
    },
    {
        "content": "<p>just checked on the playground</p>",
        "id": 186403039,
        "sender_full_name": "oli",
        "timestamp": 1579795263
    },
    {
        "content": "<p>right , fixed by PR <a href=\"https://github.com/rust-lang/rust/issues/67134\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67134\">#67134</a> it seems</p>",
        "id": 186403064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795280
    },
    {
        "content": "<p>okay so maybe we can just close <a href=\"https://github.com/rust-lang/rust/issues/67083\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67083\">#67083</a>  then since <a href=\"https://github.com/rust-lang/rust/issues/67134\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67134\">#67134</a> was backported?</p>",
        "id": 186403104,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795308
    },
    {
        "content": "<p>which is what the description of PR <a href=\"https://github.com/rust-lang/rust/issues/67134\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67134\">#67134</a> indeed implies.</p>",
        "id": 186403200,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795338
    },
    {
        "content": "<p>3 min over time <span aria-label=\"clock\" class=\"emoji emoji-1f557\" role=\"img\" title=\"clock\">:clock:</span></p>",
        "id": 186403309,
        "sender_full_name": "centril",
        "timestamp": 1579795399
    },
    {
        "content": "<p>right, well, the only beta-regression left is \"Regression in helpful compiler error message when working with lifetimes\" <a href=\"https://github.com/rust-lang/rust/issues/66406\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66406\">#66406</a></p>",
        "id": 186403423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795450
    },
    {
        "content": "<p>so we'll just have to live with that</p>",
        "id": 186403440,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795460
    },
    {
        "content": "<p>and we didn't get to the nominated issues. Sorry. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 186403456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795474
    },
    {
        "content": "<p>Thanks all in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 186403491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1579795486
    },
    {
        "content": "<blockquote>\n<p>nnethercote is on PTO until Jan 28</p>\n</blockquote>\n<p>Took me a second to figure out that PTO was not like PGO or LTO...</p>",
        "id": 186414835,
        "sender_full_name": "mark-i-m",
        "timestamp": 1579801526
    }
]