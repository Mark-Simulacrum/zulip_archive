[
    {
        "content": "<p>Is there a tracking issue or a documentation for known HRTB limitations? I couldn't find a relevant github issue label either.</p>",
        "id": 275904951,
        "sender_full_name": "Ali MJ Al-Nasrawy",
        "timestamp": 1647688686
    },
    {
        "content": "<p>more specifically, I faced a problem with this trivial code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Tr</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span>: <span class=\"o\">'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Tr</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">check</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">b</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">b</span><span class=\"w\"> </span><span class=\"p\">()</span>: <span class=\"nc\">Tr</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which results in <code>Implementation is onot general enough</code> but though it might be a good idea to search for known similar bugs than reporting a new one.</p>",
        "id": 275905514,
        "sender_full_name": "Ali MJ Al-Nasrawy",
        "timestamp": 1647689457
    },
    {
        "content": "<p><code>#![feature(nll)]</code> gives</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">higher</span><span class=\"o\">-</span><span class=\"n\">ranked</span><span class=\"w\"> </span><span class=\"n\">lifetime</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"o\">&lt;</span><span class=\"n\">anon</span><span class=\"o\">&gt;</span>:<span class=\"mi\">6</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"o\">^^^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">prove</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">b</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">b</span><span class=\"w\"> </span><span class=\"p\">()</span>: <span class=\"nc\">Tr</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275906948,
        "sender_full_name": "bjorn3",
        "timestamp": 1647691245
    },
    {
        "content": "<p>Note that HRTB handling is provably an undecidable problem. I wouldn't be surprised if this specific case can't be fixed without a special case just for this.</p>",
        "id": 275907059,
        "sender_full_name": "bjorn3",
        "timestamp": 1647691425
    },
    {
        "content": "<p>Generally, those will be tracked with A-hrtb, I think. But issue labeling isn't 100%</p>",
        "id": 275907793,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647692387
    },
    {
        "content": "<p>I expected to find such label, but there's seemingly none (edit: that I can find!).</p>",
        "id": 275908041,
        "sender_full_name": "Ali MJ Al-Nasrawy",
        "timestamp": 1647692715
    },
    {
        "content": "<p>Ah interesting. We should probably add one!</p>",
        "id": 275908179,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647692923
    },
    {
        "content": "<p>FWIW this is a difficult problem, but related to similar issues we run into HRTBs with GATs</p>",
        "id": 275908192,
        "sender_full_name": "Jack Huey",
        "timestamp": 1647692960
    }
]