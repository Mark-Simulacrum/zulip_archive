[
    {
        "content": "<p>The weekly meeting commences in slightly more than an hour.</p>",
        "id": 147742243,
        "sender_full_name": "nagisa",
        "timestamp": 1542290023
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span> no minna-san, meeting in 5 minutes!</p>",
        "id": 147746875,
        "sender_full_name": "nagisa",
        "timestamp": 1542293741
    },
    {
        "content": "<p>Since <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is on a vacation I’ll be driving this and possibly the next meeting. Lets begin, shall we.</p>",
        "id": 147747350,
        "sender_full_name": "nagisa",
        "timestamp": 1542294022
    },
    {
        "content": "<p>Going through the list in <a href=\"https://github.com/rust-lang/rust/issues/54818\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54818\">#54818</a>, as usual.</p>",
        "id": 147747370,
        "sender_full_name": "nagisa",
        "timestamp": 1542294038
    },
    {
        "content": "<p>one sec :)</p>",
        "id": 147747375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294042
    },
    {
        "content": "<p>I wanted to add something</p>",
        "id": 147747380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294045
    },
    {
        "content": "<p>we should go through P-high, but it's also a good idae for us to check the Rust 2018 Release milestone list</p>",
        "id": 147747402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294062
    },
    {
        "content": "<p>perhaps after</p>",
        "id": 147747405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294064
    },
    {
        "content": "<p>that's all :)</p>",
        "id": 147747409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294066
    },
    {
        "content": "<p>though of course those things ought to be P-high'd if applicable, not sure if they have been :)</p>",
        "id": 147747430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294087
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> spoiler alert: there are no issues for T-compiler on that list <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 147747432,
        "sender_full_name": "nagisa",
        "timestamp": 1542294090
    },
    {
        "content": "<p>heh that's... wrong</p>",
        "id": 147747439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294097
    },
    {
        "content": "<p>but that means I have to fix the list ;)</p>",
        "id": 147747443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294101
    },
    {
        "content": "<p>(that aren’t covered by other categories)</p>",
        "id": 147747445,
        "sender_full_name": "nagisa",
        "timestamp": 1542294104
    },
    {
        "content": "<p>yep ok</p>",
        "id": 147747449,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294107
    },
    {
        "content": "<p>that's fine</p>",
        "id": 147747453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294110
    },
    {
        "content": "<p># <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">P-high T-compiler</a></p>\n<p>8 issues, 2 issues without assignees, 3 issues meanigfully updated since the last meeting.</p>",
        "id": 147747511,
        "sender_full_name": "nagisa",
        "timestamp": 1542294127
    },
    {
        "content": "<p><em>Lifetimes bug on beta 1.31: the associated type may not live long enough <a href=\"https://github.com/rust-lang/rust/issues/55756\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55756\"><a href=\"https://github.com/rust-lang/rust/issues/55756\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55756\">#55756</a></a></em>: <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> bisected and crafted a reduced test case. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> then investigated this further…</p>",
        "id": 147747523,
        "sender_full_name": "nagisa",
        "timestamp": 1542294139
    },
    {
        "content": "<p>please tell about your investigation, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 147747548,
        "sender_full_name": "nagisa",
        "timestamp": 1542294154
    },
    {
        "content": "<p>tl;dr I know what the problem is, hope to have a fix today</p>",
        "id": 147747604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294196
    },
    {
        "content": "<p>/me assigns <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 147747619,
        "sender_full_name": "nagisa",
        "timestamp": 1542294212
    },
    {
        "content": "<p>I'm .. not <em>entirely</em> happy with the fix I have in mind :P but it's ok. It basically \"ports\" the NLL rule to lexical; the rule being that whenever a type T appears appears at some position P, all regions in that type must include that position P</p>",
        "id": 147747716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294263
    },
    {
        "content": "<p>(we currently require that <code>T: P</code>, which I believed to be equivalent, but it's not <em>quite</em>, in the case of associated types, which is the part I am not entirely happy with)</p>",
        "id": 147747743,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294295
    },
    {
        "content": "<p>in practice, I think it will be ok, and we have some room to tweak how we handle this once lazy norm lands (and once we start making some of the improvements to region inference I want to do)</p>",
        "id": 147747803,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294358
    },
    {
        "content": "<p>I’m having a hard time understanding where the differences come from at all… ah, normalization strikes again</p>",
        "id": 147747879,
        "sender_full_name": "nagisa",
        "timestamp": 1542294396
    },
    {
        "content": "<p>okay.</p>",
        "id": 147747880,
        "sender_full_name": "nagisa",
        "timestamp": 1542294398
    },
    {
        "content": "<p>the next one on the list is </p>\n<blockquote>\n<p>NLL error on closure, but not on equivalent function <a href=\"https://github.com/rust-lang/rust/issues/55526\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55526\">#55526</a></p>\n</blockquote>",
        "id": 147747900,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294412
    },
    {
        "content": "<p>which I had not seen yet actually</p>",
        "id": 147747908,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294420
    },
    {
        "content": "<p>Yes, <em>NLL error on closure, but not on equivalent function <a href=\"https://github.com/rust-lang/rust/issues/55526\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55526\"><a href=\"https://github.com/rust-lang/rust/issues/55526\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55526\">#55526</a></a></em>: <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> had no opportunity to look at this. No meanigful changes since the last week?</p>",
        "id": 147747913,
        "sender_full_name": "nagisa",
        "timestamp": 1542294423
    },
    {
        "content": "<p>no, I will assign to myself to investigate</p>",
        "id": 147747946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294454
    },
    {
        "content": "<p>as pnkfelix is on PTO</p>",
        "id": 147747948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294456
    },
    {
        "content": "<p>but it looks like it's not a release <em>blocker</em> since it's only a warning</p>",
        "id": 147747961,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294464
    },
    {
        "content": "<p>Those two are not equivalent, the <code>fn</code> _has_ a return type</p>",
        "id": 147747968,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542294469
    },
    {
        "content": "<p>the closure doesn't</p>",
        "id": 147747976,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542294479
    },
    {
        "content": "<p>yeah, it may well be legitimate</p>",
        "id": 147747978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294481
    },
    {
        "content": "<p>Okay, moving on.</p>",
        "id": 147748052,
        "sender_full_name": "nagisa",
        "timestamp": 1542294534
    },
    {
        "content": "<p><em>regression: stack overflow on macosx with xcode 6.4 <a href=\"https://github.com/rust-lang/rust/issues/55471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55471\"><a href=\"https://github.com/rust-lang/rust/issues/55471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55471\">#55471</a></a></em>: Stacker efforts are progressing, we did a crater run recently, no regressions there, can merge. Still not X-platform (only x86-64 windows/linux/osx), though, and my efforts on more portability that are progressing fairly slowly at the current time. <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span>, does your PR account for the supported platforms?</p>",
        "id": 147748059,
        "sender_full_name": "nagisa",
        "timestamp": 1542294541
    },
    {
        "content": "<p>not yet, I need to get MSVC working, too</p>",
        "id": 147748085,
        "sender_full_name": "oli",
        "timestamp": 1542294560
    },
    {
        "content": "<p>do we know about perf impact now?</p>",
        "id": 147748101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294566
    },
    {
        "content": "<p>1% on a few benchmarks</p>",
        "id": 147748113,
        "sender_full_name": "oli",
        "timestamp": 1542294575
    },
    {
        "content": "<p>3-4% on a few generally fluctuating ones</p>",
        "id": 147748128,
        "sender_full_name": "oli",
        "timestamp": 1542294592
    },
    {
        "content": "<p>On the PR I said that perf impact (as long as it is not too major) is secondary to making things work at all</p>",
        "id": 147748136,
        "sender_full_name": "nagisa",
        "timestamp": 1542294599
    },
    {
        "content": "<p>ok I just remembered <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> saying there was a bit hit initially</p>",
        "id": 147748216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294629
    },
    {
        "content": "<p>yes, that has been reduced</p>",
        "id": 147748223,
        "sender_full_name": "oli",
        "timestamp": 1542294637
    },
    {
        "content": "<p>there was stack thrashing and bad scaling for large stack uses</p>",
        "id": 147748281,
        "sender_full_name": "oli",
        "timestamp": 1542294668
    },
    {
        "content": "<p>both gone now</p>",
        "id": 147748288,
        "sender_full_name": "oli",
        "timestamp": 1542294670
    },
    {
        "content": "<p>In general I’d be comfortable even with rolling this out incrementally, as my \"portable\" stack manipulation library won’t materialize over a single weekend for sure.</p>",
        "id": 147748290,
        "sender_full_name": "nagisa",
        "timestamp": 1542294671
    },
    {
        "content": "<p>(latest <a href=\"https://perf.rust-lang.org/compare.html?start=485397e49a02a3b7ff77c17e4a3f16c653925cb3&amp;end=50090422044f60a331c227348157f4a963bb5c21\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=485397e49a02a3b7ff77c17e4a3f16c653925cb3&amp;end=50090422044f60a331c227348157f4a963bb5c21\">perf results</a>)</p>",
        "id": 147748315,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1542294698
    },
    {
        "content": "<p>after fixing MSVC we can roll this out for a few platforms</p>",
        "id": 147748319,
        "sender_full_name": "oli",
        "timestamp": 1542294701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> did you implement some sort of checking for support and correspondingly handling platforms where stacker does not support the platform?</p>",
        "id": 147748385,
        "sender_full_name": "nagisa",
        "timestamp": 1542294739
    },
    {
        "content": "<p>I don’t recall seeing such code last time I looked at the PR (admittedly quite a while ago)</p>",
        "id": 147748400,
        "sender_full_name": "nagisa",
        "timestamp": 1542294758
    },
    {
        "content": "<p>yes, but msvc should be handled, but it still keeps overflowing the stack in tests</p>",
        "id": 147748404,
        "sender_full_name": "oli",
        "timestamp": 1542294761
    },
    {
        "content": "<p>Okay, so progress here is clear, <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> keeps working on MSVC support, I’m working on more portability architecture wise and T-compiler is generally comfortable with this approach, right?</p>",
        "id": 147748465,
        "sender_full_name": "nagisa",
        "timestamp": 1542294821
    },
    {
        "content": "<p>Moving on, then, <em>[1.31 beta] Trait bound is not satisfied <a href=\"https://github.com/rust-lang/rust/issues/54467\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54467\"><a href=\"https://github.com/rust-lang/rust/issues/54467\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54467\">#54467</a></a></em>: <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> said “Maybe we need to reconsider backporting PR <a href=\"https://github.com/rust-lang/rust/issues/54701\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54701\">#54701</a> ... will investigate...”</p>",
        "id": 147748524,
        "sender_full_name": "nagisa",
        "timestamp": 1542294843
    },
    {
        "content": "<p>It doesn’t seem that the investigation results, if they exist, are public.</p>",
        "id": 147748560,
        "sender_full_name": "nagisa",
        "timestamp": 1542294873
    },
    {
        "content": "<p>hmm</p>",
        "id": 147748564,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294878
    },
    {
        "content": "<p>I'd be comfortable with a backport there</p>",
        "id": 147748570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294885
    },
    {
        "content": "<p>I could do it today</p>",
        "id": 147748610,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294922
    },
    {
        "content": "<p>I added you as an assignee</p>",
        "id": 147748693,
        "sender_full_name": "nagisa",
        "timestamp": 1542294968
    },
    {
        "content": "<p>reading the issue more closely</p>",
        "id": 147748711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294986
    },
    {
        "content": "<p>well, ok, I will investigate</p>",
        "id": 147748714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294990
    },
    {
        "content": "<p>probably <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> didn't get to it</p>",
        "id": 147748721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542294996
    },
    {
        "content": "<p>Though a question on whether we are comfortable with the backport is also here.</p>",
        "id": 147748723,
        "sender_full_name": "nagisa",
        "timestamp": 1542294998
    },
    {
        "content": "<p>yeah</p>",
        "id": 147748747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295029
    },
    {
        "content": "<p>Moving on, <em>Rustc does not warn about <code>use</code> with paths incompatible with <code>uniform_paths</code> for edition 2018 <a href=\"https://github.com/rust-lang/rust/issues/53797\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53797\"><a href=\"https://github.com/rust-lang/rust/issues/53797\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53797\">#53797</a></a></em>: no meaningful changes since the last week?</p>",
        "id": 147748749,
        "sender_full_name": "nagisa",
        "timestamp": 1542295030
    },
    {
        "content": "<p>not that I know of; might be fixed by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>'s PR</p>",
        "id": 147748761,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295048
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/55884\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55884\">https://github.com/rust-lang/rust/pull/55884</a></p>",
        "id": 147748785,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295058
    },
    {
        "content": "<p>which is worth discussing later :) in particular the unorthodox \"target beta first\" approach</p>",
        "id": 147748795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295071
    },
    {
        "content": "<p>Mhm, it is beta-nominated.</p>",
        "id": 147748851,
        "sender_full_name": "nagisa",
        "timestamp": 1542295085
    },
    {
        "content": "<p><em>ICE when running <code>cargo doc</code> on <code>typenum</code> at <code>librustc/traits/structural_impls.rs:178</code> <a href=\"https://github.com/rust-lang/rust/issues/52873\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52873\"><a href=\"https://github.com/rust-lang/rust/issues/52873\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52873\">#52873</a></a></em>: appears to have no meaningful changes since the last week, although there are <a href=\"https://github.com/rust-lang/rust/issues/52873#issuecomment-437011639\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52873#issuecomment-437011639\">some comments by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> on process issues</a>.</p>",
        "id": 147748872,
        "sender_full_name": "nagisa",
        "timestamp": 1542295107
    },
    {
        "content": "<p>Most notably:</p>",
        "id": 147748898,
        "sender_full_name": "nagisa",
        "timestamp": 1542295138
    },
    {
        "content": "<blockquote>\n<p>On the subject of closing: Can we close this issue in light of <a href=\"https://github.com/rust-lang/rust/issues/55738\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55738\">#55738</a>? Or do we need to wait until the 1.30.1 point release has officially been deployed?</p>\n</blockquote>",
        "id": 147748900,
        "sender_full_name": "nagisa",
        "timestamp": 1542295141
    },
    {
        "content": "<p>I feel like we can close once the backport PR lands?</p>",
        "id": 147748917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295161
    },
    {
        "content": "<p>the point release has been deployed either way, so it seems to me like we should close regardless</p>",
        "id": 147748931,
        "sender_full_name": "nagisa",
        "timestamp": 1542295173
    },
    {
        "content": "<p>yeah, moot point</p>",
        "id": 147748937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295179
    },
    {
        "content": "<p>Closed.</p>",
        "id": 147748960,
        "sender_full_name": "nagisa",
        "timestamp": 1542295199
    },
    {
        "content": "<p>Next is <em>[Rust 2018] rustdoc doesn't link \"pub use whatever_crate;\" <a href=\"https://github.com/rust-lang/rust/issues/52509\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52509\"><a href=\"https://github.com/rust-lang/rust/issues/52509\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52509\">#52509</a></a></em>: it seems that T-rustdoc claims this does not block Rust2018.</p>",
        "id": 147749010,
        "sender_full_name": "nagisa",
        "timestamp": 1542295205
    },
    {
        "content": "<p>This may or may not make this not P-high.</p>",
        "id": 147749083,
        "sender_full_name": "nagisa",
        "timestamp": 1542295252
    },
    {
        "content": "<p>And otherwise be more T-rustdoc than T-compiler.</p>",
        "id": 147749109,
        "sender_full_name": "nagisa",
        "timestamp": 1542295275
    },
    {
        "content": "<p>How about removing T-compiler so we don’t get back to this the following weeks, now that it is not as important to us?</p>",
        "id": 147749249,
        "sender_full_name": "nagisa",
        "timestamp": 1542295378
    },
    {
        "content": "<p>sounds good</p>",
        "id": 147749283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295407
    },
    {
        "content": "<p>Okay, removed T-compiler.</p>",
        "id": 147749305,
        "sender_full_name": "nagisa",
        "timestamp": 1542295429
    },
    {
        "content": "<p>Next up is <em>rewrite <code>...</code> to <code>..=</code> as an idiom lint for Rust 2018 edition <a href=\"https://github.com/rust-lang/rust/issues/51043\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51043\"><a href=\"https://github.com/rust-lang/rust/issues/51043\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51043\">#51043</a></a></em>: <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> posted a PR implementing such a lint (beta-nominated!). Has been removed from the Rust2018 milestone.</p>",
        "id": 147749308,
        "sender_full_name": "nagisa",
        "timestamp": 1542295436
    },
    {
        "content": "<p>Since we’ll be discussing beta-nominated issues next, feel free to also decide whether we should backport the PR or not <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 147749433,
        "sender_full_name": "nagisa",
        "timestamp": 1542295519
    },
    {
        "content": "<p>I'm in favor of backporting</p>",
        "id": 147749540,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295598
    },
    {
        "content": "<p>it's small, low risk</p>",
        "id": 147749544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295600
    },
    {
        "content": "<p>idiom lints are not enabled by default</p>",
        "id": 147749546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295603
    },
    {
        "content": "<p>but we do encourage people to try them out, seems ok</p>",
        "id": 147749551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295612
    },
    {
        "content": "<p>I’m also in favour.</p>",
        "id": 147749552,
        "sender_full_name": "nagisa",
        "timestamp": 1542295612
    },
    {
        "content": "<p>Is there anybody against?</p>",
        "id": 147749560,
        "sender_full_name": "nagisa",
        "timestamp": 1542295624
    },
    {
        "content": "<p>Okay, I marked it as beta-accepted.</p>",
        "id": 147749662,
        "sender_full_name": "nagisa",
        "timestamp": 1542295696
    },
    {
        "content": "<p>Going through the list… next is the 2018 milestone in which the only issues for T-compiler are also P-high and thus covered.</p>",
        "id": 147749694,
        "sender_full_name": "nagisa",
        "timestamp": 1542295729
    },
    {
        "content": "<p># <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\">beta-nominated</a></p>",
        "id": 147749710,
        "sender_full_name": "nagisa",
        "timestamp": 1542295744
    },
    {
        "content": "<p><em>xLTO: Don't pass --plugin-opt=thin to LLD. That's not supported anymore. <a href=\"https://github.com/rust-lang/rust/issues/55947\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55947\"><a href=\"https://github.com/rust-lang/rust/issues/55947\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55947\">#55947</a></a></em>: tiny patch, no tests.</p>",
        "id": 147749720,
        "sender_full_name": "nagisa",
        "timestamp": 1542295749
    },
    {
        "content": "<p>it's actually not very important to backport this since everything is unstable anyway</p>",
        "id": 147749750,
        "sender_full_name": "mw",
        "timestamp": 1542295782
    },
    {
        "content": "<p>I believe there are users of lld, though</p>",
        "id": 147749832,
        "sender_full_name": "nagisa",
        "timestamp": 1542295814
    },
    {
        "content": "<p>embedded, perhaps.</p>",
        "id": 147749840,
        "sender_full_name": "nagisa",
        "timestamp": 1542295819
    },
    {
        "content": "<p>yeah, but this only affects xLTO</p>",
        "id": 147749850,
        "sender_full_name": "mw",
        "timestamp": 1542295832
    },
    {
        "content": "<p>it (the features involved) being unstable also lowers the risk of the backport, so I’m somewhat in favour.</p>",
        "id": 147749853,
        "sender_full_name": "nagisa",
        "timestamp": 1542295841
    },
    {
        "content": "<p>there's basically no risk, since no one is using xLTO :)</p>",
        "id": 147749880,
        "sender_full_name": "mw",
        "timestamp": 1542295867
    },
    {
        "content": "<p>That too.</p>",
        "id": 147749887,
        "sender_full_name": "nagisa",
        "timestamp": 1542295875
    },
    {
        "content": "<p>The patch itself doesn't look risky at all</p>",
        "id": 147749892,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1542295881
    },
    {
        "content": "<p>Lets do it this way: +1 this comment if in favour, -1 if against <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 147749896,
        "sender_full_name": "nagisa",
        "timestamp": 1542295895
    },
    {
        "content": "<p>Seems unlikely to get 5 -1s now, so marking as beta accepted, I guess</p>",
        "id": 147749971,
        "sender_full_name": "nagisa",
        "timestamp": 1542295953
    },
    {
        "content": "<p>/me tries to add more than one <span class=\"emoji emoji-1f44e\" title=\"-1\">:-1:</span></p>",
        "id": 147749987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295972
    },
    {
        "content": "<p>/me fails</p>",
        "id": 147749993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295978
    },
    {
        "content": "<p>ok, I didn't really try</p>",
        "id": 147749998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542295982
    },
    {
        "content": "<p><em>[beta] resolve: Implement uniform paths 2.0 <a href=\"https://github.com/rust-lang/rust/issues/55884\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55884\"><a href=\"https://github.com/rust-lang/rust/issues/55884\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55884\">#55884</a></a></em>: part of Rust2018 milestone. HUGE change. Has not landed yet.</p>",
        "id": 147750026,
        "sender_full_name": "nagisa",
        "timestamp": 1542296040
    },
    {
        "content": "<p>So this is the PR that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has alluded to earlier.</p>",
        "id": 147750070,
        "sender_full_name": "nagisa",
        "timestamp": 1542296058
    },
    {
        "content": "<blockquote>\n<p>which is worth discussing later <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span> in particular the unorthodox \"target beta first\" approach</p>\n</blockquote>",
        "id": 147750113,
        "sender_full_name": "nagisa",
        "timestamp": 1542296112
    },
    {
        "content": "<p>indeed</p>",
        "id": 147750116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296115
    },
    {
        "content": "<p>so from what I understand, landing this change would mean that -- briefly -- there is a change that exists only on beta but not nightly</p>",
        "id": 147750122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296134
    },
    {
        "content": "<p>which isn't our usual way of doing things</p>",
        "id": 147750126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296137
    },
    {
        "content": "<p>So about this beta-first approach, what does it get us over landing the PR to master first, or even concurrently to both master <em>and</em> beta?</p>",
        "id": 147750132,
        "sender_full_name": "nagisa",
        "timestamp": 1542296142
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> explains their logic on the PR</p>",
        "id": 147750134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296145
    },
    {
        "content": "<blockquote>\n<p>Why beta:</p>\n<ul>\n<li>This is a breaking change on 2018 edition.</li>\n<li>This is a large PR, it's less risky to forward-port it to nightly, than back-port to beta.</li>\n</ul>\n</blockquote>",
        "id": 147750184,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296171
    },
    {
        "content": "<p>I think the tl;dr is that it's not ready for nightly yet :)</p>",
        "id": 147750194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296180
    },
    {
        "content": "<p>but we do (in their opinion, and perhaps mine) really want it for Rust 2018</p>",
        "id": 147750207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296191
    },
    {
        "content": "<p>I'm a bit nervous because it's a large change</p>",
        "id": 147750213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296196
    },
    {
        "content": "<p>coming late</p>",
        "id": 147750215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296198
    },
    {
        "content": "<p>I'm not esp. familiar with the code</p>",
        "id": 147750218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296202
    },
    {
        "content": "<p>otoh I of course know that <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> tends to be very careful :)</p>",
        "id": 147750220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296208
    },
    {
        "content": "<p>I'd love to hear what <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> thinks</p>",
        "id": 147750222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296213
    },
    {
        "content": "<p>Well, isn’t paths 2.0 absolutely necessary for 2018 if we want to make it complete?</p>",
        "id": 147750234,
        "sender_full_name": "nagisa",
        "timestamp": 1542296226
    },
    {
        "content": "<p>or am I confusing it somewhat with the module system rework?</p>",
        "id": 147750244,
        "sender_full_name": "nagisa",
        "timestamp": 1542296242
    },
    {
        "content": "<p>I guess there is a \"lang team\" aspect of this too</p>",
        "id": 147750249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296248
    },
    {
        "content": "<p>it's sort of complex :(</p>",
        "id": 147750260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296257
    },
    {
        "content": "<p>so the scenario is this</p>",
        "id": 147750261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296259
    },
    {
        "content": "<p>we started out with one change (\"anchored paths\") -- that was implemented for a long time</p>",
        "id": 147750273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296271
    },
    {
        "content": "<p>the main thing is that for <code>use foo::bar</code>, <code>foo</code> must be a crate</p>",
        "id": 147750324,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296284
    },
    {
        "content": "<p>then we experimented with this idea of <em>uniform paths</em>, where <code>foo</code> <em>can</em> be a crate, but it might also be something from the local module, and we error in the case of ambiguity</p>",
        "id": 147750342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296304
    },
    {
        "content": "<p>we wound up concluding that this was kind of better</p>",
        "id": 147750349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296316
    },
    {
        "content": "<p>however, the method of implementing was perhaps problematic</p>",
        "id": 147750360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296332
    },
    {
        "content": "<p>and so <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>  has this new implementation, which is also more general</p>",
        "id": 147750365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296340
    },
    {
        "content": "<p>in particular I think it handles cases like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">enum</span> <span class=\"nc\">Bar</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Y</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">Bar</span>::<span class=\"o\">*</span>:\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 147750378,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296356
    },
    {
        "content": "<p>where the <code>use Bar::*</code> is <em>not</em> equivalent to <code>use self::Bar::*</code></p>",
        "id": 147750381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296365
    },
    {
        "content": "<p>as that would draw from the <em>module</em></p>",
        "id": 147750387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296370
    },
    {
        "content": "<p>in fact, we have previously had no way to do that at all</p>",
        "id": 147750397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296378
    },
    {
        "content": "<p>(to import from a fn-local item)</p>",
        "id": 147750406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296382
    },
    {
        "content": "<p>looks like <a href=\"https://crater.rust-lang.org/ex/pr-55884-1\" target=\"_blank\" title=\"https://crater.rust-lang.org/ex/pr-55884-1\">crater check status</a> is  Running (75%)</p>",
        "id": 147750477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296412
    },
    {
        "content": "<blockquote>\n<p>I think the tl;dr is that it's not ready for nightly yet :)</p>\n</blockquote>\n<p>I'm confused, if the PR isn't ready for nightly, how can it be ok to land on beta? </p>\n<p>Or do you mean \"ready\" in the sense that it hasn't been rebased onto <code>master</code> yet?</p>",
        "id": 147750488,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1542296424
    },
    {
        "content": "<p>yes, that's what I mean</p>",
        "id": 147750495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296443
    },
    {
        "content": "<p>the code was written against beta first</p>",
        "id": 147750496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296447
    },
    {
        "content": "<p>and needs to be \"ported\" to nightly</p>",
        "id": 147750501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296450
    },
    {
        "content": "<p>I don't know how hard that will be</p>",
        "id": 147750504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296455
    },
    {
        "content": "<p>presumably not very</p>",
        "id": 147750508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296457
    },
    {
        "content": "<p>Got it. Thanks!</p>",
        "id": 147750509,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1542296458
    },
    {
        "content": "<p>so I guess the assumption is:</p>",
        "id": 147750569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296515
    },
    {
        "content": "<p>Would be amusing to see a scenario where this lands into beta but then we perpetually are unable to forward-port the PR in time</p>",
        "id": 147750570,
        "sender_full_name": "nagisa",
        "timestamp": 1542296517
    },
    {
        "content": "<p>if the crater run comes out clean</p>",
        "id": 147750573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296518
    },
    {
        "content": "<p>do we land this</p>",
        "id": 147750625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296532
    },
    {
        "content": "<p>I guess <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> did review and wrote</p>\n<blockquote>\n<p>I won't pretend to fully understand the inner workings of early_resolve_ident_in_lexical_scope, but if it worked before for macros, this PR LGTM.</p>\n</blockquote>",
        "id": 147750662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296577
    },
    {
        "content": "<p>they are certainly the other person who understands resolve best</p>",
        "id": 147750667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296584
    },
    {
        "content": "<p>I'm in favour but with stomach aches</p>",
        "id": 147750677,
        "sender_full_name": "oli",
        "timestamp": 1542296592
    },
    {
        "content": "<p>I think that's roughly where I am</p>",
        "id": 147750684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296598
    },
    {
        "content": "<p>do we want perhaps to use the FCP approach?</p>",
        "id": 147750694,
        "sender_full_name": "nagisa",
        "timestamp": 1542296610
    },
    {
        "content": "<p>I would love to give it a thorough look</p>",
        "id": 147750700,
        "sender_full_name": "nagisa",
        "timestamp": 1542296616
    },
    {
        "content": "<p>I'm fine with that but don't want to delay too much</p>",
        "id": 147750703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296623
    },
    {
        "content": "<p>we did want to get all things on beta landed by next wednesday</p>",
        "id": 147750710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296632
    },
    {
        "content": "<p>seeing as U.S. thanksgiving is Thu-Fri of next week</p>",
        "id": 147750715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296639
    },
    {
        "content": "<p>Hmm. Okay, I’m fine with landing without FCP then</p>",
        "id": 147750770,
        "sender_full_name": "nagisa",
        "timestamp": 1542296661
    },
    {
        "content": "<p>but by all means do take a look</p>",
        "id": 147750775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296668
    },
    {
        "content": "<p>I can always do that post-land and complain loudly later</p>",
        "id": 147750778,
        "sender_full_name": "nagisa",
        "timestamp": 1542296671
    },
    {
        "content": "<p>I plan to do some reviewing today too</p>",
        "id": 147750782,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296674
    },
    {
        "content": "<p>Okay, lets move on 15 minutes left</p>",
        "id": 147750830,
        "sender_full_name": "nagisa",
        "timestamp": 1542296721
    },
    {
        "content": "<p><em>Fix ICE in <code>return_type_impl_trait</code> <a href=\"https://github.com/rust-lang/rust/issues/55800\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55800\"><a href=\"https://github.com/rust-lang/rust/issues/55800\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55800\">#55800</a></a></em>: fairly small change, tested.</p>",
        "id": 147750834,
        "sender_full_name": "nagisa",
        "timestamp": 1542296727
    },
    {
        "content": "<p>I don’t see any reason to not backport</p>",
        "id": 147750860,
        "sender_full_name": "nagisa",
        "timestamp": 1542296758
    },
    {
        "content": "<p>Except perhaps for:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span>     // HACK: `type_of_def_id()` will fail on these (#55796), so return None\n</pre></div>\n\n\n</blockquote>",
        "id": 147750926,
        "sender_full_name": "nagisa",
        "timestamp": 1542296789
    },
    {
        "content": "<p>seems ok</p>",
        "id": 147750929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296791
    },
    {
        "content": "<p>not wild about the fix</p>",
        "id": 147750931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296793
    },
    {
        "content": "<p>not <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>'s fault per se</p>",
        "id": 147750942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296804
    },
    {
        "content": "<p>I'd like to get away from using HIR map -- I think at minimum these tests could be done on the def-path</p>",
        "id": 147750952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296814
    },
    {
        "content": "<p>(I am for the uniform paths refactor landing btw, but I cannot vouch for the implementation fully, btw)</p>",
        "id": 147750956,
        "sender_full_name": "eddyb",
        "timestamp": 1542296817
    },
    {
        "content": "<p>but anyway</p>",
        "id": 147750964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296826
    },
    {
        "content": "<p>(and maybe the setup can be otherwise cleaned)</p>",
        "id": 147750974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542296833
    },
    {
        "content": "<p>Since this fix has already landed to master, we’ll have to live with it one way or another</p>",
        "id": 147751000,
        "sender_full_name": "nagisa",
        "timestamp": 1542296868
    },
    {
        "content": "<p>unless it somehow gets improved before the next beta releases</p>",
        "id": 147751008,
        "sender_full_name": "nagisa",
        "timestamp": 1542296878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> The <em>proper</em> fix would be for <code>type_of_def_id</code> to return <code>Option&lt;DefId&gt;</code>, but that was a much larger PR :)</p>",
        "id": 147751053,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542296885
    },
    {
        "content": "<p>so I’m in favour.</p>",
        "id": 147751054,
        "sender_full_name": "nagisa",
        "timestamp": 1542296886
    },
    {
        "content": "<p>Anybody against?</p>",
        "id": 147751084,
        "sender_full_name": "nagisa",
        "timestamp": 1542296926
    },
    {
        "content": "<p>/me waits a little while</p>",
        "id": 147751092,
        "sender_full_name": "nagisa",
        "timestamp": 1542296936
    },
    {
        "content": "<p>/me abstains</p>",
        "id": 147751099,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542296944
    },
    {
        "content": "<p>/me wrote the summary comment and is marking as beta-accepted</p>",
        "id": 147751199,
        "sender_full_name": "nagisa",
        "timestamp": 1542297013
    },
    {
        "content": "<p>Next up is <em>Check for negative impls when finding auto traits <a href=\"https://github.com/rust-lang/rust/issues/55356\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55356\"><a href=\"https://github.com/rust-lang/rust/issues/55356\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55356\">#55356</a></a></em>: small change, tested.</p>",
        "id": 147751218,
        "sender_full_name": "nagisa",
        "timestamp": 1542297033
    },
    {
        "content": "<p>This fixes an ICE</p>",
        "id": 147751268,
        "sender_full_name": "nagisa",
        "timestamp": 1542297081
    },
    {
        "content": "<p>Although that ICE is a stable-to-stable regression</p>",
        "id": 147751279,
        "sender_full_name": "nagisa",
        "timestamp": 1542297096
    },
    {
        "content": "<p>so it does not seem to be critical to backport</p>",
        "id": 147751284,
        "sender_full_name": "nagisa",
        "timestamp": 1542297104
    },
    {
        "content": "<p>I think it also only affects unstable code</p>",
        "id": 147751339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297126
    },
    {
        "content": "<p>that is using <code>impl !Send</code> explicitly</p>",
        "id": 147751341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297130
    },
    {
        "content": "<p>I'm (weakly) inclined not to backport</p>",
        "id": 147751352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297137
    },
    {
        "content": "<p>Is there anybody strongly in favour?</p>",
        "id": 147751370,
        "sender_full_name": "nagisa",
        "timestamp": 1542297183
    },
    {
        "content": "<p>(well, <em>maybe</em> it would affect code using code from libstd based on UnsafeCell...? not sure)</p>",
        "id": 147751374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297185
    },
    {
        "content": "<p>Is there a workaround?</p>",
        "id": 147751394,
        "sender_full_name": "mw",
        "timestamp": 1542297218
    },
    {
        "content": "<p>but it sounds obscure from the issue (<a href=\"https://github.com/rust-lang/rust/issues/55321\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55321\">#55321</a>)</p>",
        "id": 147751396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297221
    },
    {
        "content": "<p>hm, if it only ICEs on unstable code then beta/stable can't compile it anyway...</p>",
        "id": 147751461,
        "sender_full_name": "mw",
        "timestamp": 1542297272
    },
    {
        "content": "<p>(^^^note to myself)</p>",
        "id": 147751466,
        "sender_full_name": "mw",
        "timestamp": 1542297281
    },
    {
        "content": "<p>I guess the consensus is here.</p>",
        "id": 147751491,
        "sender_full_name": "nagisa",
        "timestamp": 1542297314
    },
    {
        "content": "<p>Next is <em>resolve: Filter away macro prelude in modules with <code>#[no_implicit_prelude]</code> on 2018 edition <a href=\"https://github.com/rust-lang/rust/issues/55630\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55630\"><a href=\"https://github.com/rust-lang/rust/issues/55630\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55630\">#55630</a></a></em>: Is destined for T-lang, undergoing FCP, @<strong>nrc</strong> needs to mark their checkbox.</p>",
        "id": 147751497,
        "sender_full_name": "nagisa",
        "timestamp": 1542297333
    },
    {
        "content": "<p>oh nrc is no longer on T-compiler, are they?</p>",
        "id": 147751518,
        "sender_full_name": "nagisa",
        "timestamp": 1542297361
    },
    {
        "content": "<p>Then that is all for beta-nominated issues.</p>",
        "id": 147751568,
        "sender_full_name": "nagisa",
        "timestamp": 1542297381
    },
    {
        "content": "<p>/me double checks</p>",
        "id": 147751582,
        "sender_full_name": "nagisa",
        "timestamp": 1542297397
    },
    {
        "content": "<p>we don't need 100% for FCP anymore :)</p>",
        "id": 147751584,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297398
    },
    {
        "content": "<p>nrc is still on lang team, but I think they don't object</p>",
        "id": 147751587,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297406
    },
    {
        "content": "<p>(note that it already merged to nightly)</p>",
        "id": 147751599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297420
    },
    {
        "content": "<p>I think we should backport</p>",
        "id": 147751602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297423
    },
    {
        "content": "<p>it's a breaking change to Rust 2018 otherwise I thikn?</p>",
        "id": 147751607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297428
    },
    {
        "content": "<p>(plus very small etc etc)</p>",
        "id": 147751615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297440
    },
    {
        "content": "<p>I don’t mind accepting for backport</p>",
        "id": 147751631,
        "sender_full_name": "nagisa",
        "timestamp": 1542297472
    },
    {
        "content": "<p>beta-accepted.</p>",
        "id": 147751727,
        "sender_full_name": "nagisa",
        "timestamp": 1542297544
    },
    {
        "content": "<p>That’s all for the beta-nominated list.</p>",
        "id": 147751747,
        "sender_full_name": "nagisa",
        "timestamp": 1542297558
    },
    {
        "content": "<p>We have no stable-nominated issues/PRs!</p>",
        "id": 147751760,
        "sender_full_name": "nagisa",
        "timestamp": 1542297568
    },
    {
        "content": "<p>There is 1 stable-to-beta regression <em>Name _ defined multiple times <a href=\"https://github.com/rust-lang/rust/issues/55811\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55811\"><a href=\"https://github.com/rust-lang/rust/issues/55811\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55811\">#55811</a></a></em>: @<strong>petrochenkov</strong> self-assigned this.</p>",
        "id": 147751777,
        "sender_full_name": "nagisa",
        "timestamp": 1542297595
    },
    {
        "content": "<p>P-high I guess</p>",
        "id": 147751832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297609
    },
    {
        "content": "<p>The last thing on my list is a I-nominated issue that has been nominated for a loong time and had no activity for a month</p>",
        "id": 147751888,
        "sender_full_name": "nagisa",
        "timestamp": 1542297666
    },
    {
        "content": "<p>(<em>edition lint: migrating <code>extern crate</code> with <code>#[macro_use]</code> <a href=\"https://github.com/rust-lang/rust/issues/52043\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52043\"><a href=\"https://github.com/rust-lang/rust/issues/52043\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52043\">#52043</a></a></em>). But since we are over time, I’m inclined to call this meeting over instead <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 147751914,
        "sender_full_name": "nagisa",
        "timestamp": 1542297697
    },
    {
        "content": "<p>Thanks all for participating!</p>",
        "id": 147752004,
        "sender_full_name": "nagisa",
        "timestamp": 1542297733
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> for running</p>",
        "id": 147752022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297753
    },
    {
        "content": "<p>oh btw</p>",
        "id": 147752041,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297772
    },
    {
        "content": "<p>next week Thu is Thanksgiving here in the US</p>",
        "id": 147752051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297783
    },
    {
        "content": "<p>I at least won't be around, jfyi</p>",
        "id": 147752057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297787
    },
    {
        "content": "<p>also, steering meeting tomorrow</p>",
        "id": 147752081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297816
    },
    {
        "content": "<p>Same time as the T-compiler meeting?</p>",
        "id": 147752107,
        "sender_full_name": "nagisa",
        "timestamp": 1542297827
    },
    {
        "content": "<p>yes</p>",
        "id": 147752162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297845
    },
    {
        "content": "<p>see also <a href=\"https://internals.rust-lang.org/t/compiler-steering-committee-meeting/8588/19?u=nikomatsakis\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/compiler-steering-committee-meeting/8588/19?u=nikomatsakis\">this internals post and the replies</a>, where <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and I were brainstorming a bit what to discuss :)</p>",
        "id": 147752177,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1542297857
    }
]