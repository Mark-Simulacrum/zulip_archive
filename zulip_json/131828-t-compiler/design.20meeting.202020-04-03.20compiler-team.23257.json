[
    {
        "content": "<p>Dear <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> -- design meeting in 9 minutes on this topic.</p>",
        "id": 192806450,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585921915
    },
    {
        "content": "<p>Today's topic: Cranelift backend for rustc <a href=\"https://github.com/rust-lang/compiler-team/issues/257\" title=\"https://github.com/rust-lang/compiler-team/issues/257\">compiler-team#257</a> </p>\n<p>Details in <a href=\"https://hackmd.io/@bjorn3/HJL5ryFS8\" title=\"https://hackmd.io/@bjorn3/HJL5ryFS8\">this hackmd</a> (thanks <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>)</p>",
        "id": 192806568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585921956
    },
    {
        "content": "<p>To start....</p>\n<h1>Announcements</h1>",
        "id": 192806639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585921995
    },
    {
        "content": "<p>quick note: the <code>submodule</code> question will become a <code>subtree</code> question soon so we should adjust to that (which I think is more favorable than submodules anyway)</p>",
        "id": 192806681,
        "sender_full_name": "eddyb",
        "timestamp": 1585922010
    },
    {
        "content": "<ul>\n<li>Major Change Proposal (should have been on Thursday agenda): Use git subtree instead of git submodule for external deps: <a href=\"https://github.com/rust-lang/compiler-team/issues/266\" title=\"https://github.com/rust-lang/compiler-team/issues/266\">https://github.com/rust-lang/compiler-team/issues/266</a></li>\n</ul>",
        "id": 192806683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922012
    },
    {
        "content": "<p>(speak of the devil)</p>",
        "id": 192806695,
        "sender_full_name": "eddyb",
        "timestamp": 1585922019
    },
    {
        "content": "<p>Maybe we should think of some evaluation plan for the subtree thing</p>",
        "id": 192806838,
        "sender_full_name": "centril",
        "timestamp": 1585922061
    },
    {
        "content": "<p>like how much time do we wait until we apply this to Miri?</p>",
        "id": 192806849,
        "sender_full_name": "centril",
        "timestamp": 1585922070
    },
    {
        "content": "<p>I think we should not derail this meeting with that :)</p>",
        "id": 192806858,
        "sender_full_name": "simulacrum",
        "timestamp": 1585922073
    },
    {
        "content": "<p>1 month maybe?</p>",
        "id": 192806864,
        "sender_full_name": "centril",
        "timestamp": 1585922074
    },
    {
        "content": "<p>i even just noticed at the end of the hackmd regarding cg_clif it asks \"should this be a submodule or &lt;monorepo&gt;\"</p>",
        "id": 192806869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922078
    },
    {
        "content": "<p>so arguably we can spend a <em>little</em> time talking about our general policy here</p>",
        "id": 192806910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> fair point; I'll add comments to the MCP issue instead</p>",
        "id": 192806927,
        "sender_full_name": "centril",
        "timestamp": 1585922110
    },
    {
        "content": "<p>(but it can perhaps wait until the end.)</p>",
        "id": 192806980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922141
    },
    {
        "content": "<p>I think whether monorepo or submodule/subtree is a good question to address, but not \"should it be subtree or submodule\"</p>",
        "id": 192806984,
        "sender_full_name": "simulacrum",
        "timestamp": 1585922144
    },
    {
        "content": "<p>i.e. IMO subtree or submodule is an implementation detail, though an important one, and we should either do one or the other (globally, most likely)</p>",
        "id": 192807063,
        "sender_full_name": "simulacrum",
        "timestamp": 1585922171
    },
    {
        "content": "<p>I mostly agree with <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , but the the differences between submodule and subtree may be relevant to the decision</p>",
        "id": 192807092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922191
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192806681\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192806681\">said</a>:</p>\n<blockquote>\n<p>quick note: the <code>submodule</code> question will become a <code>subtree</code> question soon so we should adjust to that (which I think is more favorable than submodules anyway)</p>\n</blockquote>\n<p>that's what I was saying here heh</p>",
        "id": 192807120,
        "sender_full_name": "eddyb",
        "timestamp": 1585922207
    },
    {
        "content": "<p>e.g. i'd hate for us to say \"it has to be in-tree because submodule is so painful\", and then later determine we'll be switching to subtree</p>",
        "id": 192807124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922213
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192807120\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192807120\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192806681\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192806681\">said</a>:</p>\n<blockquote>\n<p>quick note: the <code>submodule</code> question will become a <code>subtree</code> question soon so we should adjust to that (which I think is more favorable than submodules anyway)</p>\n</blockquote>\n<p>that's what I was saying here heh</p>\n</blockquote>\n<p>ah that was definitely not clear to me</p>",
        "id": 192807156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922234
    },
    {
        "content": "<p>yeah my assumption was that the <code>subtree</code> MCP would go through</p>",
        "id": 192807173,
        "sender_full_name": "eddyb",
        "timestamp": 1585922251
    },
    {
        "content": "<p>and that phrasing presupposes the switch</p>",
        "id": 192807176,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922252
    },
    {
        "content": "<p>right</p>",
        "id": 192807187,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922256
    },
    {
        "content": "<p>Although I think there are good arguments for \"a codegen backend is different, its not a tool, it should be in tree\"</p>",
        "id": 192807285,
        "sender_full_name": "centril",
        "timestamp": 1585922296
    },
    {
        "content": "<p>anyway, as long as everyone is aware that we <em>might</em> switch to <code>subtree</code>, that should be enough to inform subsequent discussion</p>",
        "id": 192807287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922296
    },
    {
        "content": "<p>I <em>do</em> think it's highly likely we'll be switching to something like subtrees soon, and evaluating this can be done on the basis of a positive decision there. (Whether that's subtree or some other similar tooling, I think it's clear we want something like it).</p>",
        "id": 192807290,
        "sender_full_name": "simulacrum",
        "timestamp": 1585922297
    },
    {
        "content": "<p>my opinion is we should try to have <code>cg_clif</code> as a <code>subtree</code> for a while and only move upstream at some \"feature-parity\" milestone or w/e</p>",
        "id": 192807425,
        "sender_full_name": "eddyb",
        "timestamp": 1585922370
    },
    {
        "content": "<p>just to facilitate development if <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> primarily prefers out-of-tree</p>",
        "id": 192807450,
        "sender_full_name": "eddyb",
        "timestamp": 1585922385
    },
    {
        "content": "<p>Yeah I agree; directly into tree is a bit hasty <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 192807462,
        "sender_full_name": "centril",
        "timestamp": 1585922394
    },
    {
        "content": "<p>Sorry for being late.</p>",
        "id": 192807471,
        "sender_full_name": "bjorn3",
        "timestamp": 1585922397
    },
    {
        "content": "<p>you're not late.</p>",
        "id": 192807521,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922403
    },
    {
        "content": "<p>we're absurdly early</p>",
        "id": 192807537,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585922408
    },
    {
        "content": "<p>Now I notice :)</p>",
        "id": 192807555,
        "sender_full_name": "bjorn3",
        "timestamp": 1585922420
    },
    {
        "content": "<p><em>lurking</em> but hello everyone</p>",
        "id": 192807558,
        "sender_full_name": "Jason Williams",
        "timestamp": 1585922420
    },
    {
        "content": "<p>if things had gone differently (around the time of the <code>rustc_codegen_ssa</code> split) we might've had it in-tree and father along by now but we didn't and <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> has done a lot of work on this so I think we should try to avoid hindering that until circumstances change</p>",
        "id": 192807720,
        "sender_full_name": "eddyb",
        "timestamp": 1585922504
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ... design meeting starting now. There's already been some pre-chatter about modules/subtrees/etc. Let's give a few minutes for folks to gather. Any further <strong>announcements</strong>?</p>",
        "id": 192807823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922538
    },
    {
        "content": "<ul>\n<li>I spent some time finishing up the 'major change proposal RFC' this morning. Take a look at <a class=\"stream-topic\" data-stream-id=\"185694\" href=\"/#narrow/stream/185694-t-compiler.2Fwg-meta/topic/MCP.20process.20RFC.20ready.3F\">#t-compiler/wg-meta &gt; MCP process RFC ready?</a> if you'd like</li>\n</ul>",
        "id": 192807895,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922579
    },
    {
        "content": "<p>Shall we get started?</p>",
        "id": 192808178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922718
    },
    {
        "content": "<p>Some potential additional design questions for the agenda:</p>\n<ul>\n<li>When do we start gating UI tests on cranelift? Should we have some compiletest flag for that?</li>\n<li>Should we start perftesting the cranelift backend?</li>\n</ul>",
        "id": 192808192,
        "sender_full_name": "centril",
        "timestamp": 1585922727
    },
    {
        "content": "<p>Can you add those to the end of the hackmd?</p>",
        "id": 192808233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922748
    },
    {
        "content": "<p>sure</p>",
        "id": 192808259,
        "sender_full_name": "centril",
        "timestamp": 1585922762
    },
    {
        "content": "<p>I guess let's start with a brief overview of the cranelift backend, history / status? There's a good detailed rundown of the bugs and things in <a href=\"https://hackmd.io/VnVX5bEHR268SDH4R7izLw?view\" title=\"https://hackmd.io/VnVX5bEHR268SDH4R7izLw?view\">the hackmd</a>, but I figure it's good to bring people a bit up to speed</p>",
        "id": 192808358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922804
    },
    {
        "content": "<p>(I for one had a few questions about the reference to \"JIT\" compilation, for example)</p>",
        "id": 192808392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> do you want to talk a bit about that?</p>",
        "id": 192808441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922853
    },
    {
        "content": "<p>(I guess I'm thinking of some of the stuff that's in the \"motivation\")</p>",
        "id": 192808529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922884
    },
    {
        "content": "<blockquote>\n<p>Cranelift has the potential to improve compilation time, as it is optimized for compilation time as opposed to being optimized for good optimizations like LLVM. Over the course of the past ~1.5 year I have been working on a Cranelift based codegen backend for rustc (rustc_codegen_cranelift or cg_clif for short). It is currently complete enough to compile many programs. While there are cases where LLVM is faster, Cranelift is already faster than LLVM in many cases.</p>\n</blockquote>",
        "id": 192808600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922920
    },
    {
        "content": "<p>Basically the main goal remains having an alternative backend that could be used for faster, non-optimized builds?</p>",
        "id": 192808660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585922942
    },
    {
        "content": "<p>Yes</p>",
        "id": 192808686,
        "sender_full_name": "bjorn3",
        "timestamp": 1585922952
    },
    {
        "content": "<p>Can you say a bit about how it's loaded and built today? I have a vague understanding but I'd like to understand it a bit better. What I know is roughly</p>\n<ul>\n<li>we have an interface for backends that is also used by LLVM, and we've been factoring out logic that can be shraed across backends</li>\n</ul>",
        "id": 192808892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923011
    },
    {
        "content": "<ul>\n<li>it is being developed in a separate repository... and we have a mechanism to link in alternative backends as a dll? Or is it a custom wrapper around rustc?</li>\n</ul>",
        "id": 192809024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923058
    },
    {
        "content": "<p>I'm not sure how much we've removed, we used to have a way to use an alternative codegen backend for <code>emscripten</code> because it needed an older (modified) LLVM</p>",
        "id": 192809070,
        "sender_full_name": "eddyb",
        "timestamp": 1585923083
    },
    {
        "content": "<p>It is build as a normal dylib. When you pass -Zcodegen-backend=/path/to/dylib to rustc, it will dlopen the specified dylib and call <code>__rustc_codegen_backend</code>, which returns a <code>Box&lt;dyn CodegenBackend&gt;</code></p>",
        "id": 192809099,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923094
    },
    {
        "content": "<p>and it relied on loading dylibs from the sysroot (or alternatively, a full path to a dylib)</p>",
        "id": 192809122,
        "sender_full_name": "eddyb",
        "timestamp": 1585923101
    },
    {
        "content": "<p>so we still have the functionality then, makes sense</p>",
        "id": 192809144,
        "sender_full_name": "eddyb",
        "timestamp": 1585923114
    },
    {
        "content": "<p>For me, another motivation is independence from LLVM and their goals (which tend towards C++'s needs)</p>",
        "id": 192809152,
        "sender_full_name": "centril",
        "timestamp": 1585923118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> I am not sure if the sysroot part still works, but the full path version is what I use.</p>",
        "id": 192809240,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923139
    },
    {
        "content": "<p>OK. That's helpful.</p>",
        "id": 192809313,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923162
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> are you still the only person working on this backend?</p>",
        "id": 192809367,
        "sender_full_name": "Jason Williams",
        "timestamp": 1585923189
    },
    {
        "content": "<p>Yes</p>",
        "id": 192809390,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923202
    },
    {
        "content": "<p>and separately, <code>rustc_codegen_ssa</code> was an attempt years ago at creating a shared API that both LLVM and Cranelift can implement to build some low-level SSA IR (with load/store for memory accesses) to codegen MIR into</p>",
        "id": 192809409,
        "sender_full_name": "eddyb",
        "timestamp": 1585923212
    },
    {
        "content": "<p>So far I have only received a few small pull requests</p>",
        "id": 192809417,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923217
    },
    {
        "content": "<p>So I guess the current status is that things 'mostly work' but there's a number of missing features, partly (mostly?) because of limitations of cranelift, right?</p>",
        "id": 192809466,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923241
    },
    {
        "content": "<p>the <code>rustc_codegen_ssa</code> effort was started by @dmerigoux and later <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> improved it further, IIRC</p>",
        "id": 192809477,
        "sender_full_name": "eddyb",
        "timestamp": 1585923242
    },
    {
        "content": "<p>I use some of the parts of <code>rustc_codegen_ssa</code> like the linker code, but the the function builder part is still too much tied to LLVM.</p>",
        "id": 192809543,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192809466\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192809466\">said</a>:</p>\n<blockquote>\n<p>So I guess the current status is that things 'mostly work' but there's a number of missing features, partly (mostly?) because of limitations of cranelift, right?</p>\n</blockquote>\n<p>Yes</p>",
        "id": 192809587,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923278
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192809543\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192809543\">said</a>:</p>\n<blockquote>\n<p>I use some of the parts of <code>rustc_codegen_ssa</code> like the linker code, but the the function builder part is still too much tied to LLVM.</p>\n</blockquote>\n<p>oh we should be fixing those, maybe we should do a better job at tracking what's too LLVM-specific</p>",
        "id": 192809702,
        "sender_full_name": "eddyb",
        "timestamp": 1585923331
    },
    {
        "content": "<p>OK. I'd like to hear a bit about the motivations to bring things in tree -- what problems are we hoping to fix :) (seems like some are obvious, but I figure good to state them explicitly)</p>",
        "id": 192809754,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923355
    },
    {
        "content": "<p>It seems like one of them is probably building a bigger maintainer base :)</p>",
        "id": 192809821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923367
    },
    {
        "content": "<p>That would be nice :)</p>",
        "id": 192809852,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923381
    },
    {
        "content": "<p>And maybe getting more serious about the \"backend-independent parts\" of the code?</p>",
        "id": 192809867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923386
    },
    {
        "content": "<p>(i.e., what <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> just said)</p>",
        "id": 192809883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923393
    },
    {
        "content": "<p>Sorry if this is offtopic, but does having a cranelift backend for development help with Debugging symbols/information? <br>\nThis is a major painpoint for many users right now? I hear some of it is to do with LLVM optimising away too much</p>",
        "id": 192810062,
        "sender_full_name": "Jason Williams",
        "timestamp": 1585923463
    },
    {
        "content": "<p>LLVM should be optimizing away none of it if optimizations are off</p>",
        "id": 192810168,
        "sender_full_name": "eddyb",
        "timestamp": 1585923488
    },
    {
        "content": "<p>Cranelift doesn't really have optimizations AFAIK the way LLVM does</p>",
        "id": 192810214,
        "sender_full_name": "eddyb",
        "timestamp": 1585923507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"244614\">@Jason Williams</span> Line debuginfo is supported, though things like is_stmt are not set. Other debuginfo is not implemented yet</p>",
        "id": 192810224,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923513
    },
    {
        "content": "<p>long-term, maybe Cranelift can be better than LLVM by providing debuginfo-preserving optimizations, but I don't think it's that relevant right now</p>",
        "id": 192810264,
        "sender_full_name": "eddyb",
        "timestamp": 1585923528
    },
    {
        "content": "<p>ok thanks</p>",
        "id": 192810298,
        "sender_full_name": "Jason Williams",
        "timestamp": 1585923542
    },
    {
        "content": "<p>Cranelift has DCE, LICM (broken with jumptables) and a few other simple optimizations</p>",
        "id": 192810348,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923562
    },
    {
        "content": "<p>(Some of the debug complains I've seen might be specific to LLVM's support for CodeView/pdb on Windows)</p>",
        "id": 192810361,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585923572
    },
    {
        "content": "<p>CodeView/pdb support is not implemented in cg_clif. As far as I know there is no writer crate for it.</p>",
        "id": 192810460,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923609
    },
    {
        "content": "<p>I guess the meta question that I'm thinking about is what our \"overall strategy\" is around alternative backends. Like, how much do we want to prioritize this, relative to other goals? Maybe that's not something we can decide in this meeting.</p>\n<p>My sense though is that it's a \"background task\", that we'd like to support \"increasingly well\", but not a \"first class\" goal that we really want to pour total energy into.</p>",
        "id": 192810607,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923680
    },
    {
        "content": "<p>I'm thinking about the first \"key design question\" raised in the hackmd, in particular:</p>\n<ul>\n<li>Should we support cg_clif in tree?<ul>\n<li>If so, use a submodule or merge it into rust-lang/rust? (See also <a href=\"https://github.com/rust-lang/compiler-team/issues/257\" title=\"https://github.com/rust-lang/compiler-team/issues/257\">https://github.com/rust-lang/compiler-team/issues/257</a>)</li>\n</ul>\n</li>\n</ul>",
        "id": 192810688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923717
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> Do you find that there's a lot of churn on the parts of rustc you integrate with? How painful are rebases on top of the latest rustc usually? Might be another reason to do something in-tree...</p>",
        "id": 192810741,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585923724
    },
    {
        "content": "<blockquote>\n<p>My sense though is that it's a \"background task\", that we'd like to support \"increasingly well\", but not a \"first class\" goal that we really want to pour total energy into.</p>\n</blockquote>\n<p>I think that makes sense in terms of work hours; but personally I do think that when problems are created for the cg_clif backend, we should prioritize cg_clif highly</p>",
        "id": 192810802,
        "sender_full_name": "centril",
        "timestamp": 1585923761
    },
    {
        "content": "<p>It would interesting to know how the answer to the \"in tree\" question affects the \"broadening the contributor set\" goal</p>",
        "id": 192810847,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585923782
    },
    {
        "content": "<p>I could imagine it helping or hurting</p>",
        "id": 192810861,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585923789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> There is not that much churn. Most changes are simple search-replace fixes. There are rarely any changes that need significant fixes</p>",
        "id": 192810871,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923793
    },
    {
        "content": "<p>Maybe it's useful to enumerate some of the \"variables\"? I think we have a good start in the document already. I'm thinking of:</p>\n<ul>\n<li>subtree vs fully in tree</li>\n<li>do we ensure it builds with CI?</li>\n<li>do we run tests in CI? (e.g., with compare-mode)</li>\n<li>do test failures block CI?</li>\n</ul>",
        "id": 192811097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923884
    },
    {
        "content": "<p><code>git subtree</code> would give us the ability to change the in-tree version as we do breaking changes</p>",
        "id": 192811183,
        "sender_full_name": "eddyb",
        "timestamp": 1585923929
    },
    {
        "content": "<p>and then the separate repository can get sync'd from that</p>",
        "id": 192811216,
        "sender_full_name": "eddyb",
        "timestamp": 1585923943
    },
    {
        "content": "<p>we have a few existing models to build from, I guess:</p>\n<ul>\n<li>normal rustc code</li>\n<li>active transitions, like when we were moving to NLL (I actually don't remember all the phasees we went through)</li>\n<li>external tools like miri, clippy (currently evolving our strategy)</li>\n</ul>\n<p>and I'm wondering which seems to \"fit best\"</p>",
        "id": 192811235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923948
    },
    {
        "content": "<p>I prefer subtree.</p>",
        "id": 192811243,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923950
    },
    {
        "content": "<blockquote>\n<p>do test failures block CI?</p>\n</blockquote>\n<p>We could solve this with <code>// ignore-cranelift-backend</code></p>",
        "id": 192811258,
        "sender_full_name": "centril",
        "timestamp": 1585923958
    },
    {
        "content": "<p>OK, it sounds like this is roughly \"external tool\" integration</p>",
        "id": 192811267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923961
    },
    {
        "content": "<p>yeah, at least for the initial stages</p>",
        "id": 192811340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585923980
    },
    {
        "content": "<p>But I guess that is the next question -- should we be running tests? (Maybe not yet?)</p>",
        "id": 192811353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585923987
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> would you like to see it move into tree in maybe 1.5 years or so though?</p>",
        "id": 192811358,
        "sender_full_name": "centril",
        "timestamp": 1585923991
    },
    {
        "content": "<p>For LLVM only tests <code>// only-llvm-backend</code> would be nice.</p>",
        "id": 192811367,
        "sender_full_name": "bjorn3",
        "timestamp": 1585923997
    },
    {
        "content": "<p>Maybe we should integrate support for running tests easily into <code>x.py</code>, but not gate CI on it?</p>",
        "id": 192811412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924018
    },
    {
        "content": "<p>I like that, to start</p>",
        "id": 192811445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924031
    },
    {
        "content": "<p>I think we can reasonably gate in maybe 1 month or so and ignore the relevant tests</p>",
        "id": 192811474,
        "sender_full_name": "centril",
        "timestamp": 1585924045
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"126931\">centril</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192811358\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192811358\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> would you like to see it move into tree in maybe 1.5 years or so though?</p>\n</blockquote>\n<p>I don't know: <a href=\"https://internals.rust-lang.org/t/experience-report-contributing-to-rust-lang-rust/12012/45\" title=\"https://internals.rust-lang.org/t/experience-report-contributing-to-rust-lang-rust/12012/45\">https://internals.rust-lang.org/t/experience-report-contributing-to-rust-lang-rust/12012/45</a></p>",
        "id": 192811511,
        "sender_full_name": "bjorn3",
        "timestamp": 1585924059
    },
    {
        "content": "<p>I would like to be informed of in what the delta in the tests are in terms of support, and when a new feature causes problems for the cranelift backend</p>",
        "id": 192811649,
        "sender_full_name": "centril",
        "timestamp": 1585924096
    },
    {
        "content": "<p>Hmm, let's not worry about 1.5 years from now. I personally think this question will be informed by the developments about library-ification and the like.</p>",
        "id": 192811676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924109
    },
    {
        "content": "<p>Sure, let's not <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 192811723,
        "sender_full_name": "centril",
        "timestamp": 1585924132
    },
    {
        "content": "<p>It seems clear we're not moving into tree now at least</p>",
        "id": 192811779,
        "sender_full_name": "centril",
        "timestamp": 1585924153
    },
    {
        "content": "<p>It seems like so far we've sketched out:</p>\n<ul>\n<li>Add via \"git subtree\" and gate on it building :)</li>\n<li>Integrate some kind of compare-mode=cranelift for running tests, and add a way to skip LLVM-specific tests</li>\n</ul>",
        "id": 192811787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924155
    },
    {
        "content": "<p>Since no one is arguing for that</p>",
        "id": 192811792,
        "sender_full_name": "centril",
        "timestamp": 1585924160
    },
    {
        "content": "<p>I want to double-check: <em>are</em> we gating on it building? That seems like it won't be a big hurdle, based on what <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> said</p>",
        "id": 192811825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924177
    },
    {
        "content": "<p>I think we should personally, with opt-outs in tests</p>",
        "id": 192811867,
        "sender_full_name": "centril",
        "timestamp": 1585924195
    },
    {
        "content": "<p>wait, does \"in tree\" include `git subtree\" ?</p>",
        "id": 192811873,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924198
    },
    {
        "content": "<p>I guess it does</p>",
        "id": 192811918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924204
    },
    {
        "content": "<p>oops sorry</p>",
        "id": 192811923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924207
    },
    {
        "content": "<p>I meant \"git subtree\"</p>",
        "id": 192811934,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924211
    },
    {
        "content": "<p>let me edit</p>",
        "id": 192811939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> in-tree means not subtree/submodule</p>",
        "id": 192811954,
        "sender_full_name": "centril",
        "timestamp": 1585924217
    },
    {
        "content": "<p>okay well then that's not what <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> asked for</p>",
        "id": 192811985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924229
    },
    {
        "content": "<p>yeah, I edited</p>",
        "id": 192812003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> feel free to withdraw your <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> emoji if that changes your opinion</p>",
        "id": 192812028,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924254
    },
    {
        "content": "<p>but I think it was what you were saying :)</p>",
        "id": 192812034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924258
    },
    {
        "content": "<p>Yeah, I assumed you meant <code>subtree</code> with in-tree.</p>",
        "id": 192812084,
        "sender_full_name": "bjorn3",
        "timestamp": 1585924277
    },
    {
        "content": "<p>One of the questions that comes up is \"who will sync the subtree\"</p>",
        "id": 192812129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924300
    },
    {
        "content": "<p>I'm assuming the answer is <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> or other people working on the backend</p>",
        "id": 192812162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924316
    },
    {
        "content": "<p>with Clippy it would be the Clippy maintainers</p>",
        "id": 192812174,
        "sender_full_name": "centril",
        "timestamp": 1585924320
    },
    {
        "content": "<p>How frequently should the syncing to rust-lang/rust be?</p>",
        "id": 192812284,
        "sender_full_name": "bjorn3",
        "timestamp": 1585924361
    },
    {
        "content": "<p>we don't know?</p>",
        "id": 192812319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924378
    },
    {
        "content": "<p>If you're not hitting a lot of issues now doing <del>rebases</del> rustups, it probably doesn't need to be that frequent.</p>",
        "id": 192812338,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585924387
    },
    {
        "content": "<p>I am not doing rebases. I just add a rustup commit. (cg_clif is not a fork of the rust repo)</p>",
        "id": 192812421,
        "sender_full_name": "bjorn3",
        "timestamp": 1585924423
    },
    {
        "content": "<p>with the subtrree thing, if people break the cranelift backend, then they have to fix it in their PR</p>",
        "id": 192812458,
        "sender_full_name": "centril",
        "timestamp": 1585924441
    },
    {
        "content": "<p>Would the PR fail if someone updated the subtree and it it doesn't build?</p>",
        "id": 192812579,
        "sender_full_name": "Jason Williams",
        "timestamp": 1585924486
    },
    {
        "content": "<p>Relatively big rustup commit: <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/commit/ac1c5d69544450d30785d001224f7233da48cbda\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/commit/ac1c5d69544450d30785d001224f7233da48cbda\">https://github.com/bjorn3/rustc_codegen_cranelift/commit/ac1c5d69544450d30785d001224f7233da48cbda</a><br>\nMore normal rustup commit: <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/commit/786c7d8d8ce3a21a394404c41a01a666c26071f3\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/commit/786c7d8d8ce3a21a394404c41a01a666c26071f3\">https://github.com/bjorn3/rustc_codegen_cranelift/commit/786c7d8d8ce3a21a394404c41a01a666c26071f3</a></p>",
        "id": 192812586,
        "sender_full_name": "bjorn3",
        "timestamp": 1585924487
    },
    {
        "content": "<p>subtree updates are just regular PRs</p>",
        "id": 192812680,
        "sender_full_name": "oli",
        "timestamp": 1585924524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"244614\">@Jason Williams</span>  it should if we gate on cranelift</p>",
        "id": 192812711,
        "sender_full_name": "centril",
        "timestamp": 1585924537
    },
    {
        "content": "<p>so yes, they would fail if the update isn't compatible with the rest</p>",
        "id": 192812716,
        "sender_full_name": "oli",
        "timestamp": 1585924539
    },
    {
        "content": "<p>OK, so, if the module is a git subtree, we're saving <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> the work of rebasing, but that's not that much. We're adding the ability to run tests, which is relatively easy for us to do, but if we don't gate CI on it, that updating will still have to be done by <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> or other cranelift-backend maintainers.</p>",
        "id": 192813036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924646
    },
    {
        "content": "<p>I'm trying to think about the concrete benefits here</p>",
        "id": 192813054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924652
    },
    {
        "content": "<p>we're not gating CI on it?</p>",
        "id": 192813134,
        "sender_full_name": "centril",
        "timestamp": 1585924682
    },
    {
        "content": "<p>I am also thinking a bit about the \"commitment and maintainance\" -- I don't think we're ready to take on a \"high commitment\" thing, but I think doing support is good. Some other steps we could consider are creating an experimental working group, i.e., a zulip stream to talk about the development</p>",
        "id": 192813177,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924689
    },
    {
        "content": "<p>I thought we were, with an opt-out mechanism for tests</p>",
        "id": 192813189,
        "sender_full_name": "centril",
        "timestamp": 1585924694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"126931\">centril</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192813134\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192813134\">said</a>:</p>\n<blockquote>\n<p>we're not gating CI on it?</p>\n</blockquote>\n<p>this was a question up above</p>",
        "id": 192813198,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924698
    },
    {
        "content": "<p>Well, that wasn't in my list, let's ask? Do we want to gate CI on it.</p>",
        "id": 192813206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924700
    },
    {
        "content": "<p>I <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192811412\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192811412\">had proposed</a> making it <em>easy</em> to opt-in to run the tests via <code>x.py</code>, but not making it the default nor gating CI on it</p>",
        "id": 192813264,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924722
    },
    {
        "content": "<p>at least initially</p>",
        "id": 192813285,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924730
    },
    {
        "content": "<p>(in particular, having it as an active WG might help to get folks to drop in and offer to help)</p>",
        "id": 192813293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924733
    },
    {
        "content": "<p>Yeah, let's figure out the test question. (I guess the other variable is distribution -- but I think we're pretty clearly not ready to be distributing, right?)</p>",
        "id": 192813371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924768
    },
    {
        "content": "<p>I'd prefer to catch problems around e.g. unsized locals and whatnot early in CI and make it easy to grep for what tests work and don't</p>",
        "id": 192813429,
        "sender_full_name": "centril",
        "timestamp": 1585924794
    },
    {
        "content": "<p>distributing as nightly only component is possible given that many programs work</p>",
        "id": 192813556,
        "sender_full_name": "bjorn3",
        "timestamp": 1585924831
    },
    {
        "content": "<p>I'd prefer not to gate CI on it until we have a firmer commitment to shipping it</p>",
        "id": 192813600,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924853
    },
    {
        "content": "<p><a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/247\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/247\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/247</a></p>",
        "id": 192813602,
        "sender_full_name": "bjorn3",
        "timestamp": 1585924855
    },
    {
        "content": "<p>Implications of gating:</p>\n<ul>\n<li>ensures that test annotations are up to date -- though we can perhaps encouage folks to \"just add skip cranelift\" annotations if anything is non-trivial</li>\n<li>means that we are not only ensuring that things <em>build</em> but ensuring that they work as well as they ever did</li>\n<li>but that in turn means more work shared out, higher level of commitment</li>\n<li>longer CI and build times (edited in after the fact)</li>\n</ul>",
        "id": 192813613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924860
    },
    {
        "content": "<p>I know compare-mode=nll was/is super painful because it's not on by default and (roughly) doubles test time, and this seems like we'd at least initially have even more tests affected?</p>",
        "id": 192813792,
        "sender_full_name": "simulacrum",
        "timestamp": 1585924929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> if we do that, should we revisit at some point?</p>",
        "id": 192813802,
        "sender_full_name": "centril",
        "timestamp": 1585924932
    },
    {
        "content": "<p>of course I would want to revisit it</p>",
        "id": 192813832,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924945
    },
    {
        "content": "<p>namely, once the feature set is more filled out</p>",
        "id": 192813853,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924953
    },
    {
        "content": "<p>so I personally would rather not gate until we have parity etc</p>",
        "id": 192813857,
        "sender_full_name": "simulacrum",
        "timestamp": 1585924955
    },
    {
        "content": "<p>sure, but like in some scheduled time <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 192813869,
        "sender_full_name": "centril",
        "timestamp": 1585924960
    },
    {
        "content": "<p>That was a concern of mine, I should've added it -- CI time</p>",
        "id": 192813878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924963
    },
    {
        "content": "<p>and we can start asking the question \"shall we ship this\"</p>",
        "id": 192813882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924967
    },
    {
        "content": "<p>I don't think we can afford to schedule when the feature set will be filled in</p>",
        "id": 192813922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585924982
    },
    {
        "content": "<p>I don't feel ready to set a scheduled time. I feel wary of over-extending ourselves right now.</p>",
        "id": 192813947,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585924988
    },
    {
        "content": "<p>There are only two workers on which cg_clif works: x86_64 Linux and x86_64 MacOS</p>",
        "id": 192813970,
        "sender_full_name": "bjorn3",
        "timestamp": 1585925000
    },
    {
        "content": "<p>If we gate on the backend building, every change to the compiler would cause <code>./x.py test</code> to rebuild the entire backend, right? How long would that take?</p>",
        "id": 192814013,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1585925018
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192813857\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192813857\">said</a>:</p>\n<blockquote>\n<p>so I personally would rather not gate until we have parity etc</p>\n</blockquote>\n<p>Fair point, but I'd also like to make sure that the LLVM backend doesn't increase the gap to parity, from my personal perspective on the lang team</p>",
        "id": 192814030,
        "sender_full_name": "centril",
        "timestamp": 1585925025
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192814013\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192814013\">said</a>:</p>\n<blockquote>\n<p>If we gate on the backend building, every change to the compiler would cause <code>./x.py test</code> to rebuild the entire backend, right? How long would that take?</p>\n</blockquote>\n<p>If only cg_clif is rebuild and not it's dependencies for me ~40s in release mode with incr comp.</p>",
        "id": 192814154,
        "sender_full_name": "bjorn3",
        "timestamp": 1585925064
    },
    {
        "content": "<p>If it were easy to run the tests with cranelift via <code>x.py</code> I probably would. On the other hand, it seems weird to gate the CI for something we don't ship at all. Looking at it from a platform support perspective, that would be like tier 3 which we don't run CI for.</p>",
        "id": 192814250,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585925094
    },
    {
        "content": "<p>Yes, I think that's a good way to look at it. I'd be happy moving it to something more like \"tier 3\"</p>",
        "id": 192814322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925119
    },
    {
        "content": "<p>Similarly, we don't run clippy tests</p>",
        "id": 192814332,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925123
    },
    {
        "content": "<p>(Well, maybe we do? I forget, we do for some tools maybe?)</p>",
        "id": 192814366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925135
    },
    {
        "content": "<p>it might be helpful to consider how we handled the transition to MIR</p>",
        "id": 192814367,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925135
    },
    {
        "content": "<p>I was just thinking about that :) I couldn't remember very precisely</p>",
        "id": 192814398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925146
    },
    {
        "content": "<p>-Zorbit</p>",
        "id": 192814422,
        "sender_full_name": "bjorn3",
        "timestamp": 1585925154
    },
    {
        "content": "<p>we had the <code>-Z orbit</code> for that, right? <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> do you remember how we handled it?</p>",
        "id": 192814432,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925156
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192814332\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192814332\">said</a>:</p>\n<blockquote>\n<p>Similarly, we don't run clippy tests</p>\n</blockquote>\n<p>We do, and we gate on it during the toolstate week</p>",
        "id": 192814477,
        "sender_full_name": "centril",
        "timestamp": 1585925162
    },
    {
        "content": "<p>I wish I could remember, hmpf</p>",
        "id": 192814511,
        "sender_full_name": "eddyb",
        "timestamp": 1585925169
    },
    {
        "content": "<p>I think we kind of gradually phased it in --</p>",
        "id": 192814534,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925177
    },
    {
        "content": "<p>Its awesome that's we've all forgotten</p>",
        "id": 192814546,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925180
    },
    {
        "content": "<p>I think we had a <code>./configure</code> flag that enabled it globally</p>",
        "id": 192814562,
        "sender_full_name": "eddyb",
        "timestamp": 1585925187
    },
    {
        "content": "<p>it started out with specific tests, then we added orbit, then we started gating CI but not doing it by deafult, etc</p>",
        "id": 192814568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925190
    },
    {
        "content": "<p>probably means it was an incredible success</p>",
        "id": 192814570,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925191
    },
    {
        "content": "<p>and I just fix every issue I could find</p>",
        "id": 192814575,
        "sender_full_name": "eddyb",
        "timestamp": 1585925193
    },
    {
        "content": "<p>vs NLL that everyone remembers because they hated compare-mode</p>",
        "id": 192814602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925203
    },
    {
        "content": "<p>oh yeah didn't we add a separate CI builder?</p>",
        "id": 192814605,
        "sender_full_name": "eddyb",
        "timestamp": 1585925204
    },
    {
        "content": "<p>that went full <code>-Zorbit</code></p>",
        "id": 192814643,
        "sender_full_name": "eddyb",
        "timestamp": 1585925216
    },
    {
        "content": "<p>cg_clif tests take about 9min on gh actions</p>",
        "id": 192814651,
        "sender_full_name": "bjorn3",
        "timestamp": 1585925219
    },
    {
        "content": "<p>or maybe just for tests</p>",
        "id": 192814658,
        "sender_full_name": "eddyb",
        "timestamp": 1585925222
    },
    {
        "content": "<p>I think compare-mode is mostly a pain cause we don't do it on PR builders</p>",
        "id": 192814666,
        "sender_full_name": "centril",
        "timestamp": 1585925224
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"126931\">centril</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192814477\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192814477\">said</a>:</p>\n<blockquote>\n<p>We do, and we gate on it during the toolstate week</p>\n</blockquote>\n<p>(yeah, I withdraw the clippy comparison, but also that's a tool that we ship and support)</p>",
        "id": 192814793,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925274
    },
    {
        "content": "<p>Actually, now that I think about it</p>",
        "id": 192814800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925277
    },
    {
        "content": "<p>the toolstate comparison may be apt</p>",
        "id": 192814840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925282
    },
    {
        "content": "<p>have we talked about not gating bors merge on it, but still having CI run the tests?</p>",
        "id": 192814879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925295
    },
    {
        "content": "<p>and then update the PR's with notice if they break it?</p>",
        "id": 192814902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925302
    },
    {
        "content": "<p>analogous to toolstate?</p>",
        "id": 192814915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  that's a good compromise <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 192814956,
        "sender_full_name": "centril",
        "timestamp": 1585925321
    },
    {
        "content": "<p><em>if</em> we can afford it</p>",
        "id": 192815001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925338
    },
    {
        "content": "<p>in terms of CI time</p>",
        "id": 192815007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925340
    },
    {
        "content": "<p>why <em>don't</em> we run compare-mode=nll on UI builders?</p>",
        "id": 192815018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925343
    },
    {
        "content": "<p>GHA should make that possible</p>",
        "id": 192815033,
        "sender_full_name": "centril",
        "timestamp": 1585925346
    },
    {
        "content": "<p>presumably CI time?</p>",
        "id": 192815035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925347
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah</p>",
        "id": 192815049,
        "sender_full_name": "centril",
        "timestamp": 1585925351
    },
    {
        "content": "<p>so like...why <em>would</em> we do this?</p>",
        "id": 192815071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925360
    },
    {
        "content": "<p>it seems like we should do both :)</p>",
        "id": 192815114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925372
    },
    {
        "content": "<p>My memory of the NLL thing</p>",
        "id": 192815121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925375
    },
    {
        "content": "<p>was that we originally had it on by default for everyone</p>",
        "id": 192815143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> well GHA will sorta change the CI calculus :P</p>",
        "id": 192815167,
        "sender_full_name": "centril",
        "timestamp": 1585925391
    },
    {
        "content": "<p>and developers, I remember <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> in particular, raised concerns</p>",
        "id": 192815171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925393
    },
    {
        "content": "<p>2 vcpus vs. 8 vcpus</p>",
        "id": 192815185,
        "sender_full_name": "centril",
        "timestamp": 1585925400
    },
    {
        "content": "<p>because it was adding <em>local testing overhead</em></p>",
        "id": 192815229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925403
    },
    {
        "content": "<p>Not CI overhead</p>",
        "id": 192815243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925405
    },
    {
        "content": "<p>and so they pushed for us to turn it off by default</p>",
        "id": 192815269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925416
    },
    {
        "content": "<p>I cannot remember anymore whether CI was a side-effect of that change</p>",
        "id": 192815307,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925429
    },
    {
        "content": "<p>OK, well, we're 50 minutes in</p>",
        "id": 192815314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925434
    },
    {
        "content": "<p>or a separate deliberate decision</p>",
        "id": 192815326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925438
    },
    {
        "content": "<p>Should we summarize?</p>",
        "id": 192815363,
        "sender_full_name": "centril",
        "timestamp": 1585925451
    },
    {
        "content": "<p>Maybe worth summarizing what we said, what we agreed upon, and what we didn't agree on yet</p>",
        "id": 192815402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925465
    },
    {
        "content": "<ul>\n<li>git subtree and gating on builds -- general support for trying this out, I believe</li>\n</ul>",
        "id": 192815445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925484
    },
    {
        "content": "<ul>\n<li>extending <code>x.py test</code> with annotations oriented around backends -- general support for <em>this</em></li>\n</ul>",
        "id": 192815486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925502
    },
    {
        "content": "<p>(and presumably some way to build/test the cranelift backend manually?)</p>",
        "id": 192815586,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925527
    },
    {
        "content": "<ul>\n<li>testing on PRs and gating on CI -- not clear</li>\n</ul>",
        "id": 192815631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925547
    },
    {
        "content": "<p>concerns raised were about time, and also (I think) about the level of commitment implied, effect on contributors</p>",
        "id": 192815734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925579
    },
    {
        "content": "<p>Proposals for gating on tests where:</p>\n<ul>\n<li>Do it like toolstate (e.g., during the last week)</li>\n<li>Only notify when breakage happens on PRs.</li>\n<li>Always do it</li>\n<li>Don't do it at all</li>\n</ul>",
        "id": 192815758,
        "sender_full_name": "centril",
        "timestamp": 1585925588
    },
    {
        "content": "<p>balanced against the benefits of keeping tests up to date</p>",
        "id": 192815762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925589
    },
    {
        "content": "<p>actually I don't think anyone talked about \"blocking on it during the last week\"</p>",
        "id": 192815832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925615
    },
    {
        "content": "<p>at least I don't think <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> meant to imply that</p>",
        "id": 192815878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925633
    },
    {
        "content": "<p>(Certainly doesn't make sense for last week -- it'd be similar I think to how we gate miri toolstate -- i.e. never)</p>",
        "id": 192815888,
        "sender_full_name": "simulacrum",
        "timestamp": 1585925638
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192815878\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192815878\">said</a>:</p>\n<blockquote>\n<p>at least I don't think <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> meant to imply that</p>\n</blockquote>\n<p>I definitely didn't want to imply that</p>",
        "id": 192815959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925653
    },
    {
        "content": "<p>Ah so there's a fourth proposal</p>",
        "id": 192815961,
        "sender_full_name": "centril",
        "timestamp": 1585925653
    },
    {
        "content": "<p>If we're not shipping a rustup component, I don't know why we'd block during the last week.</p>",
        "id": 192815963,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585925654
    },
    {
        "content": "<p>that's my sense as well, if it's not something we're going to ship in stable, who cares what week it is?</p>",
        "id": 192815965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925654
    },
    {
        "content": "<p>not until we ship this</p>",
        "id": 192815991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1585925664
    },
    {
        "content": "<p>(added the 4th proposal)</p>",
        "id": 192816072,
        "sender_full_name": "centril",
        "timestamp": 1585925695
    },
    {
        "content": "<p>OK, great.</p>",
        "id": 192816122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925709
    },
    {
        "content": "<ul>\n<li>The other thing we raised but didn't really discuss was creating a working group.</li>\n</ul>",
        "id": 192816155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925720
    },
    {
        "content": "<p>So how do folks feel about?:</p>\n<ul>\n<li>Only notify when test breakage happens on PRs</li>\n</ul>",
        "id": 192816161,
        "sender_full_name": "centril",
        "timestamp": 1585925723
    },
    {
        "content": "<p>I want to think about it</p>",
        "id": 192816224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925742
    },
    {
        "content": "<p>I would be happy to make some decisions about that after we've taken a few other steps, too, so we have some more experience</p>",
        "id": 192816251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925759
    },
    {
        "content": "<p>(Personally I think we should get all the infrastructure in place before figuring out to what extent to gate)</p>",
        "id": 192816317,
        "sender_full_name": "simulacrum",
        "timestamp": 1585925772
    },
    {
        "content": "<p>OK, thanks everyone, productive meeting. One final question: </p>\n<p>Is there someone who would be willing to go through and make a PR with minutes from this meeting?</p>",
        "id": 192816454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925826
    },
    {
        "content": "<p>I will</p>",
        "id": 192816561,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1585925867
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192816155\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192816155\">said</a>:</p>\n<blockquote>\n<ul>\n<li>The other thing we raised but didn't really discuss was creating a working group.</li>\n</ul>\n</blockquote>\n<p>Folks can notify <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> of their interest?</p>",
        "id": 192816569,
        "sender_full_name": "centril",
        "timestamp": 1585925870
    },
    {
        "content": "<p>(Also, <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>, I think that an appropriate next step would be to make a \"major change proposal\" with the \"consensus changes\" described above described in a bit more detail.)</p>",
        "id": 192816653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925887
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> re: minutes, and thanks to everyone else for attending!</p>",
        "id": 192816745,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585925924
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192816653\" title=\"#narrow/stream/131828-t-compiler/topic/design.20meeting.202020-04-03.20compiler-team.23257/near/192816653\">said</a>:</p>\n<blockquote>\n<p>(Also, <span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span>, I think that an appropriate next step would be to make a \"major change proposal\" with the \"consensus changes\" described above described in a bit more detail.)</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/compiler-team/issues/270\" title=\"https://github.com/rust-lang/compiler-team/issues/270\">compiler-team#270</a></p>",
        "id": 192911519,
        "sender_full_name": "bjorn3",
        "timestamp": 1586012363
    }
]