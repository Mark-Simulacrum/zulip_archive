[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> btw <a href=\"https://github.com/rust-lang/rust/pull/65037\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65037\">https://github.com/rust-lang/rust/pull/65037</a></p>",
        "id": 177208847,
        "sender_full_name": "anp",
        "timestamp": 1570068023
    },
    {
        "content": "<p>nothing to do there, just giving the heads up that i'm doing it</p>",
        "id": 177208915,
        "sender_full_name": "anp",
        "timestamp": 1570068149
    },
    {
        "content": "<p>Added some comments <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 177209860,
        "sender_full_name": "centril",
        "timestamp": 1570069678
    },
    {
        "content": "<p><span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 177210203,
        "sender_full_name": "anp",
        "timestamp": 1570070246
    },
    {
        "content": "<p>i think at this point you've read ayosec's code more closely than i have <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 177210211,
        "sender_full_name": "anp",
        "timestamp": 1570070271
    },
    {
        "content": "<p><span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 177210263,
        "sender_full_name": "centril",
        "timestamp": 1570070322
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130111\">@Adam Perry</span> btw, we can implement this in several steps (PRs)</p>",
        "id": 177210275,
        "sender_full_name": "centril",
        "timestamp": 1570070346
    },
    {
        "content": "<p>e.g. the AST + gating parts, MIR, etc.</p>",
        "id": 177210277,
        "sender_full_name": "centril",
        "timestamp": 1570070359
    },
    {
        "content": "<p>sure, wfm</p>",
        "id": 177210280,
        "sender_full_name": "anp",
        "timestamp": 1570070366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130111\">@anp</span> btw, personally I just dispense with error codes and use <code>struct_span_err</code></p>",
        "id": 177215589,
        "sender_full_name": "centril",
        "timestamp": 1570079428
    },
    {
        "content": "<p>much less hassle</p>",
        "id": 177215591,
        "sender_full_name": "centril",
        "timestamp": 1570079436
    },
    {
        "content": "<p>cool, i'm not sure how to act on this advice :P</p>",
        "id": 177215597,
        "sender_full_name": "anp",
        "timestamp": 1570079454
    },
    {
        "content": "<p>eli5?</p>",
        "id": 177215606,
        "sender_full_name": "anp",
        "timestamp": 1570079464
    },
    {
        "content": "<p>basically: error codes are not required, it's \"extra\" if you do it</p>",
        "id": 177215609,
        "sender_full_name": "centril",
        "timestamp": 1570079486
    },
    {
        "content": "<p>ok, i think i'll put a little time into doing it and bail if i turn out to be lazy</p>",
        "id": 177215741,
        "sender_full_name": "anp",
        "timestamp": 1570079716
    },
    {
        "content": "<p>only semi related, i'm seeing these tests failing locally:</p>\n<div class=\"codehilite\"><pre><span></span>failures:\n    [ui] ui/consts/miri_unleashed/mutable_references_ice.rs\n    [ui] ui/pattern/const-pat-ice.rs\n    [ui] ui/traits/cycle-cache-err-60010.rs\n</pre></div>\n\n\n<p>is this normal?</p>",
        "id": 177215752,
        "sender_full_name": "anp",
        "timestamp": 1570079753
    },
    {
        "content": "<p>what are the failures?</p>",
        "id": 177215793,
        "sender_full_name": "centril",
        "timestamp": 1570079768
    },
    {
        "content": "<p>here's one:</p>\n<div class=\"codehilite\"><pre><span></span>---- [ui] ui/traits/cycle-cache-err-60010.rs stdout ----\ndiff of stderr:\n\n6      |\n7      = note: required because of the requirements on the impl of `Query&lt;RootDatabase&gt;` for `ParseQuery`\n8\n-   error[E0275]: overflow evaluating the requirement `RootDatabase: SourceDatabase`\n-     --&gt; $DIR/cycle-cache-err-60010.rs:30:6\n-      |\n-   LL | impl Database for RootDatabase {\n-      |      ^^^^^^^^\n-      |\n-      = note: required because of the requirements on the impl of `Query&lt;RootDatabase&gt;` for `ParseQuery`\n-      = note: required because it appears within the type `SalsaStorage`\n-\n-   error: aborting due to 2 previous errors\n+   error: aborting due to previous error\n19\n20  For more information about this error, try `rustc --explain E0275`.\n21\n\n\nThe actual stderr differed from the expected stderr.\n</pre></div>",
        "id": 177215950,
        "sender_full_name": "anp",
        "timestamp": 1570080112
    },
    {
        "content": "<p>did you rebase atop master?</p>",
        "id": 177216011,
        "sender_full_name": "centril",
        "timestamp": 1570080220
    },
    {
        "content": "<p>might be a non-determinism issue otherwise</p>",
        "id": 177216013,
        "sender_full_name": "centril",
        "timestamp": 1570080226
    },
    {
        "content": "<p>yeah i'm at top of tree</p>",
        "id": 177216528,
        "sender_full_name": "anp",
        "timestamp": 1570081080
    },
    {
        "content": "<p>hm yeah cleaning seems to get rid of it for now</p>",
        "id": 177216569,
        "sender_full_name": "anp",
        "timestamp": 1570081092
    },
    {
        "content": "<p>ok two of them are thread names being unnamed on my machine instead of <code>&lt;rustc&gt;</code></p>",
        "id": 177217984,
        "sender_full_name": "anp",
        "timestamp": 1570083365
    },
    {
        "content": "<p>the third is the one i  pasted</p>",
        "id": 177217986,
        "sender_full_name": "anp",
        "timestamp": 1570083376
    },
    {
        "content": "<p>and they're still here after cleaning <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 177217989,
        "sender_full_name": "anp",
        "timestamp": 1570083381
    },
    {
        "content": "<p>repro'ing on master and will file an issue once i figure out more detail</p>",
        "id": 177219667,
        "sender_full_name": "anp",
        "timestamp": 1570085859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> i think this is ready for re-review <a href=\"https://github.com/rust-lang/rust/pull/65037\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65037\">https://github.com/rust-lang/rust/pull/65037</a></p>",
        "id": 177304923,
        "sender_full_name": "anp",
        "timestamp": 1570154814
    },
    {
        "content": "<p>actually, just realized that the patch i started from didn't cover an important case. i pushed a failing test to the PR and am looking at how to fix it now</p>\n<p>the issue is that the <code>#[track_caller]</code> attribute must be prohibited in traits, but <a href=\"https://github.com/anp/rust/blob/track-caller/src/librustc_typeck/check/wfcheck.rs#L176-L186\" target=\"_blank\" title=\"https://github.com/anp/rust/blob/track-caller/src/librustc_typeck/check/wfcheck.rs#L176-L186\">https://github.com/anp/rust/blob/track-caller/src/librustc_typeck/check/wfcheck.rs#L176-L186</a> only covers items within the trait item itself, not in impl blocks for traits</p>\n<p>i <em>think</em> what i want to do is add something here: <a href=\"https://github.com/anp/rust/blob/track-caller/src/librustc_typeck/check/wfcheck.rs#L193\" target=\"_blank\" title=\"https://github.com/anp/rust/blob/track-caller/src/librustc_typeck/check/wfcheck.rs#L193\">https://github.com/anp/rust/blob/track-caller/src/librustc_typeck/check/wfcheck.rs#L193</a>, like</p>\n<div class=\"codehilite\"><pre><span></span>if method_sig.is_some() &amp;&amp; has_attr(impl_item.attrs, sym::track_caller) {\n    // TODO figure out if the owning Item has a TraitRef?\n}\n</pre></div>\n\n\n<p>i'm not sure how to find out about the owning Item from the ImplItem. i think i see a path like <code>let owning_item = tcx.expect_item(tcx.hir().def_index_to_hir_id(impl_item.hir.owner));</code>, is that the \"right\" way to look that up? it seems also possible that this information should be passed down in a different way, or that this check should occur elsewhere?</p>",
        "id": 177386559,
        "sender_full_name": "anp",
        "timestamp": 1570230465
    },
    {
        "content": "<p>(figured this out)</p>",
        "id": 177420601,
        "sender_full_name": "anp",
        "timestamp": 1570292022
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130111\">@anp</span></p>",
        "id": 177931552,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570816420
    },
    {
        "content": "<p>sup? there's an rfc-2091 topic btw</p>",
        "id": 177931667,
        "sender_full_name": "anp",
        "timestamp": 1570816479
    },
    {
        "content": "<p>oh i see, from github</p>",
        "id": 177931692,
        "sender_full_name": "anp",
        "timestamp": 1570816498
    },
    {
        "content": "<p>ya i'm definitely misunderstanding something</p>",
        "id": 177931708,
        "sender_full_name": "anp",
        "timestamp": 1570816508
    },
    {
        "content": "<p>Look at the macros in this file for an example: <a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/macros.rs#L56\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/libstd/macros.rs#L56\">https://github.com/rust-lang/rust/blob/master/src/libstd/macros.rs#L56</a></p>",
        "id": 177931828,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570816595
    },
    {
        "content": "<p><code>#[allow_internal_unstable(whatever_unstable_feature_you_want_to_use_from_inside_the_expanded_macro)]</code> is what you want</p>",
        "id": 177931841,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570816618
    },
    {
        "content": "<p>sweeet</p>",
        "id": 177931872,
        "sender_full_name": "anp",
        "timestamp": 1570816644
    },
    {
        "content": "<blockquote>\n<p>rfc-2091 topic btw</p>\n</blockquote>\n<p>oh, sorry, I didn't see that. We can move there if you have more q's</p>",
        "id": 177931882,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570816657
    },
    {
        "content": "<p>actually, IIRC there's some way to merge streams?</p>",
        "id": 177931903,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570816680
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/47809#issuecomment-541163961\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47809#issuecomment-541163961\">https://github.com/rust-lang/rust/issues/47809#issuecomment-541163961</a></p>",
        "id": 177931995,
        "sender_full_name": "anp",
        "timestamp": 1570816736
    },
    {
        "content": "<p>there we go</p>",
        "id": 177932008,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570816745
    },
    {
        "content": "<p>i dont think there is, also insert ghostbusters reference here</p>",
        "id": 177932010,
        "sender_full_name": "anp",
        "timestamp": 1570816747
    },
    {
        "content": "<p>I just did it</p>",
        "id": 177932026,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1570816760
    },
    {
        "content": "<p>merge != cross<br>\nyou <em>set me up</em> for it</p>",
        "id": 177932054,
        "sender_full_name": "anp",
        "timestamp": 1570816784
    },
    {
        "content": "<p>:P</p>",
        "id": 177932062,
        "sender_full_name": "anp",
        "timestamp": 1570816788
    },
    {
        "content": "<p>oh wait these are actually called topics not streams</p>",
        "id": 177932119,
        "sender_full_name": "anp",
        "timestamp": 1570816803
    },
    {
        "content": "<p>nmlol</p>",
        "id": 177932138,
        "sender_full_name": "anp",
        "timestamp": 1570816810
    },
    {
        "content": "<p>i'm a very proficient zulip user.</p>",
        "id": 177932149,
        "sender_full_name": "anp",
        "timestamp": 1570816819
    },
    {
        "content": "<p>@Centril you around to r+ this now that CI is passing again? <a href=\"https://github.com/rust-lang/rust/pull/65664\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65664\">https://github.com/rust-lang/rust/pull/65664</a><br>\nthink i have all of @eddyb's nits addressed and fixed the query hashing issue</p>",
        "id": 179183673,
        "sender_full_name": "anp",
        "timestamp": 1572204786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> apparently i dont know how to tag in zulip</p>",
        "id": 179183680,
        "sender_full_name": "anp",
        "timestamp": 1572204836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130111\">@anp</span> I would prefer for eddyb to do the approving</p>",
        "id": 179183731,
        "sender_full_name": "centril",
        "timestamp": 1572204891
    },
    {
        "content": "<p>they are easier to reach on discord</p>",
        "id": 179183740,
        "sender_full_name": "centril",
        "timestamp": 1572204903
    },
    {
        "content": "<p>kk</p>",
        "id": 179183867,
        "sender_full_name": "anp",
        "timestamp": 1572205109
    },
    {
        "content": "<p>they were still awake!</p>",
        "id": 179185528,
        "sender_full_name": "anp",
        "timestamp": 1572208041
    },
    {
        "content": "<p>miracle.</p>",
        "id": 179185531,
        "sender_full_name": "anp",
        "timestamp": 1572208045
    }
]