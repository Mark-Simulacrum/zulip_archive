[
    {
        "content": "<blockquote>\n<p>(presumably due to PR <a href=\"https://github.com/rust-lang/rust/issues/60444\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60444\">#60444</a>; the running hypothesis that niko and I share is that most instances of this are cases where the input code was unsound, and thus the fallout is expected. I don't think we can readily warning-cycle this change.)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  I don't see how my code could have been unsound...</p>",
        "id": 167488050,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559832338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> the code may be just fine, but the <strong>trait resolution algorithm</strong> was unsound</p>",
        "id": 167488849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559832874
    },
    {
        "content": "<p>i.e., it permitted things that could be used to go wrong</p>",
        "id": 167488856,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559832881
    },
    {
        "content": "<p>that said, if you have a minimized version of your code...</p>",
        "id": 167488922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559832935
    },
    {
        "content": "<p>I rather assume that the problem is that the structs are very deep, so minimal might be hard</p>\n<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.36-2/beta-2019-05-30/reg/fuzzy-pickles-0.1.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/beta-1.36-2/beta-2019-05-30/reg/fuzzy-pickles-0.1.0/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.36-2/beta-2019-05-30/reg/fuzzy-pickles-0.1.0/log.txt</a></p>",
        "id": 167489041,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559832990
    },
    {
        "content": "<p>fuzzy-pickles is a Rust parser, so the AST types are nested</p>",
        "id": 167489096,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559833031
    },
    {
        "content": "<p>I could try with something like <code>struct A0(A1);</code> repeated for N=500; or such.</p>",
        "id": 167489299,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559833140
    },
    {
        "content": "<p>I think fuzzy-pickles did work once we increased the overflow counter?</p>",
        "id": 167489602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559833313
    },
    {
        "content": "<p>still, hmm, I am looking at some improved caching,</p>",
        "id": 167489611,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559833321
    },
    {
        "content": "<p>I wonder if that might actually affect the value of the recursion counter too</p>",
        "id": 167489661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559833328
    },
    {
        "content": "<p>I suppose it would</p>",
        "id": 167489667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559833332
    },
    {
        "content": "<p>if only we had a chalk like system which has no recursion counter</p>",
        "id": 167489680,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559833344
    },
    {
        "content": "<p>/me someday</p>",
        "id": 167489683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559833346
    },
    {
        "content": "<p>My gut says that some caching would help, or an iterative solution instead of recursive?</p>",
        "id": 167489754,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559833405
    },
    {
        "content": "<blockquote>\n<p>I think fuzzy-pickles did work once we increased the overflow counter?</p>\n</blockquote>\n<p>yes, that is what I found at least.</p>",
        "id": 167490172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559833680
    },
    {
        "content": "<p>I added a repro, but 63 nested structs will trigger the overflow</p>",
        "id": 167490461,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559833857
    },
    {
        "content": "<p>In my case, I also have things like <code>Vec</code> which count as 3 types</p>",
        "id": 167490648,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559833973
    }
]