[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> , <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 163186929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074176
    },
    {
        "content": "<p>Actually <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> maybe you can lay out some of your thoughts / questions to start?</p>",
        "id": 163186991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074229
    },
    {
        "content": "<p>Yeah, will do</p>",
        "id": 163187002,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074240
    },
    {
        "content": "<p>(Also, should we cc matklad (not cc'ing yet so as not to bother them if not))</p>",
        "id": 163187075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074256
    },
    {
        "content": "<p>it's mostly about RLS 1.0 but we could</p>",
        "id": 163187088,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074272
    },
    {
        "content": "<p>let's wait until it makes sense :)</p>",
        "id": 163187097,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074279
    },
    {
        "content": "<p>So I'm happy with what's been done so far - most of the work was focused on paying the tech debt, fixing tests, doing issue triage, rewriting the extension</p>",
        "id": 163187130,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074301
    },
    {
        "content": "<p>and didn't yet focus on implementing much of the new features (except some minor things like rustfmt returning only modified lines for reformatting and so on)</p>",
        "id": 163187179,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074336
    },
    {
        "content": "<p>I did some profiling and came to the conclusion that a very significant portion of our time we spend on (de)serializing save-analysis data and synchronizing multiple rustc instances and cargo in one process (whereas we could parallelize that somewhat easily)</p>",
        "id": 163187259,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074388
    },
    {
        "content": "<p>is there a place to look to get a sense of what the \"new features\" are etc?</p>",
        "id": 163187261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074390
    },
    {
        "content": "<p>(also, should we .. make a wg-rls-1.0? should we maybe consider renaming wg-rls-2.0 to something a bit different? I'm not convinced we have the right naming here -- think on it)</p>",
        "id": 163187306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074434
    },
    {
        "content": "<p>yeah,  one way to look for new features would be to support more LSP requests, like hierarchical symbol outline (which itself needs a bit of work in rls-analysis)</p>",
        "id": 163187309,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074437
    },
    {
        "content": "<p>Do we know if the save-analysis serialization overhead is due to the sheer amount of data being serialized?</p>",
        "id": 163187322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555074448
    },
    {
        "content": "<p>or is the format itself compact, and the overhead arises from the traversal of structures to build the analysis data ?</p>",
        "id": 163187338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555074472
    },
    {
        "content": "<p>I'd think so, we now easily serialize 5-30 megs of JSON back and forth</p>",
        "id": 163187347,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074479
    },
    {
        "content": "<p>I imagine binary format would help here</p>",
        "id": 163187399,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074486
    },
    {
        "content": "<p>does serde have a binary encoder/decoder?</p>",
        "id": 163187411,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074499
    },
    {
        "content": "<p>and possibly investigate using serde in the compiler itself instead of rustc_serialize</p>",
        "id": 163187425,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074511
    },
    {
        "content": "<p>bincode supports serde, yeah</p>",
        "id": 163187447,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074527
    },
    {
        "content": "<p>(re wg-rls-1.0 probably, it'd be good to clarify a bit what's the connection between 1.0 and 2.0)</p>",
        "id": 163187499,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074570
    },
    {
        "content": "<p>so there's that, another area which would be good to explore is to support more project layouts than Cargo to provide a bit more fault-tolerancy there</p>",
        "id": 163187524,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074599
    },
    {
        "content": "<blockquote>\n<p>and possibly investigate using serde in the compiler itself instead of rustc_serialize</p>\n</blockquote>\n<p>oh right I forgot we're not using serde yet</p>",
        "id": 163187573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074604
    },
    {
        "content": "<p>one (long-term, I bet!) thing worth exploring would be to work towards daemonizing rustc</p>",
        "id": 163187680,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074698
    },
    {
        "content": "<blockquote>\n<p>(re wg-rls-1.0 probably, it'd be good to clarify a bit what's the connection between 1.0 and 2.0)</p>\n</blockquote>\n<p>yes, I'm thinking about this some. I feel we should really try not to have \"two teams\", but think in terms of a good experience for users and building next gen tooling.</p>",
        "id": 163187697,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074711
    },
    {
        "content": "<blockquote>\n<p>one (long-term, I bet!) thing worth exploring would be to work towards daemonizing rustc</p>\n</blockquote>\n<p>hmm. I mean the rust-analyzer approach kind of already does this, right?</p>",
        "id": 163187711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074721
    },
    {
        "content": "<p>on every change (after some dynamic timeout) we spin up a rustc to emit the save-analysis and update the index</p>",
        "id": 163187765,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074728
    },
    {
        "content": "<p>are we using incremental yet?</p>",
        "id": 163187781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074740
    },
    {
        "content": "<p>which means reading/saving the depgraph and doing all the work, but that's effectively end-to-end queries</p>",
        "id": 163187785,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074742
    },
    {
        "content": "<blockquote>\n<p>are we using incremental yet</p>\n</blockquote>\n<p>yes</p>",
        "id": 163187799,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074751
    },
    {
        "content": "<p>ok. do we know if we are very <em>effective</em> at it?</p>",
        "id": 163187817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074763
    },
    {
        "content": "<p>by which I mean:</p>",
        "id": 163187831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074772
    },
    {
        "content": "<p>I don't know how the save-analysis code is setup, but if it e.g. emits one huge blob for the crate, I suspect it is re-doing a lot of work</p>",
        "id": 163187877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074796
    },
    {
        "content": "<p>didn't measure what is the cache hit ratio</p>",
        "id": 163187881,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074797
    },
    {
        "content": "<p>though perhaps that's not the significant part</p>",
        "id": 163187883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074799
    },
    {
        "content": "<blockquote>\n<p>I don't know how the save-analysis code is setup, but if it e.g. emits one huge blob for the crate, I suspect it is re-doing a lot of work</p>\n</blockquote>\n<p>yeah :( that also means more work to (de)serialize data again and so forth</p>",
        "id": 163187900,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074819
    },
    {
        "content": "<p>(i.e., maybe it's stuff like parsing, HIR lowering, that comes earlier in the pipeline)</p>",
        "id": 163187907,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074823
    },
    {
        "content": "<p>this is an area where having self-profile would be very useful</p>",
        "id": 163187928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074836
    },
    {
        "content": "<p>it'd be great if we could maybe redo parsing/HIR lowering but not emitting all of the data for a given crate target with each change</p>",
        "id": 163188000,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074866
    },
    {
        "content": "<p>so if you were going to rank the \"major problems\" that remain in RLS 1.0 (i.e., without trying to dramatically change its infrastructure), would perf be the main one?</p>",
        "id": 163188025,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074887
    },
    {
        "content": "<blockquote>\n<p>it'd be great if we could maybe redo parsing/HIR lowering but not emitting all of the data for a given crate target with each change</p>\n</blockquote>\n<p>I feel like this should be possible, but it'd require changing save-analysis presumably to be grouped differently (e.g., something like codegen-units)</p>",
        "id": 163188071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074911
    },
    {
        "content": "<p>alternatively, or as a mid point, if we structure save-analysis code right,</p>",
        "id": 163188090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074926
    },
    {
        "content": "<p>I think so - I believe we can cut corners without changing the arch <em>that</em> much while still getting the greatly improved latency</p>",
        "id": 163188094,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074927
    },
    {
        "content": "<p>it should at least not have to redo the work to generate the data that is being serialized</p>",
        "id": 163188108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074935
    },
    {
        "content": "<blockquote>\n<p>I think so - I believe we can cut corners without changing the arch <em>that</em> much while still getting the greatly improved latency</p>\n</blockquote>\n<p>this seems like it might make a huge difference in user perception</p>",
        "id": 163188137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555074958
    },
    {
        "content": "<p>agreed</p>",
        "id": 163188190,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555074970
    },
    {
        "content": "<p>I'm trying to make sure I understand what is being proposed</p>",
        "id": 163188232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555075015
    },
    {
        "content": "<p>first of all, I think it'd be good to move the compilation pipeline out of rls process itself</p>",
        "id": 163188263,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075065
    },
    {
        "content": "<p>can you explain what you mean by the \"compilation pipeline\"</p>",
        "id": 163188328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555075089
    },
    {
        "content": "<p>which means increased overhead of passing the data over IPC but I believe we'd get more speedup with parallelization alone</p>",
        "id": 163188332,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075090
    },
    {
        "content": "<p>and instead the compilation pipeline would live in a rustc daemon?</p>",
        "id": 163188347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555075103
    },
    {
        "content": "<p>(i guess answer <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> 's Q first. <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span> if they don't know then I surely don't.)</p>",
        "id": 163188374,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555075138
    },
    {
        "content": "<p>so right now we first shell out to Cargo to \"understand\" the project - then we reuse the 'crate dep graph' to orchestrate the compilation ourselves (but inside the one <code>rls</code> process)</p>",
        "id": 163188376,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075139
    },
    {
        "content": "<p>we do this by matching which file was dirty (we collect information which file is associated with each crate target in the graph)</p>",
        "id": 163188400,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075160
    },
    {
        "content": "<p>(ps, remind me <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span>, in the runup to the All Hands, did you make a video or writeup of RLS architecture? did it cover this?)</p>",
        "id": 163188405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555075168
    },
    {
        "content": "<p>(yep! it's here - <a href=\"https://github.com/rust-lang/rls/blob/master/architecture.md\" target=\"_blank\" title=\"https://github.com/rust-lang/rls/blob/master/architecture.md\">https://github.com/rust-lang/rls/blob/master/architecture.md</a>)</p>",
        "id": 163188424,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075196
    },
    {
        "content": "<p>so we queue the 'dirty' crate targets and then linearly compile them in-process</p>",
        "id": 163188485,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075219
    },
    {
        "content": "<p>the 'optimization' here is that for the leaf crates we pass the resulting save-analysis in-memory, which is good</p>",
        "id": 163188507,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075248
    },
    {
        "content": "<p>(for deps we still emit the save-analysis data in blobs)</p>",
        "id": 163188516,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075261
    },
    {
        "content": "<p>however because we compile it once per process, we can't manage to quickly compile anything that's more complex than a single crate target</p>",
        "id": 163188548,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075293
    },
    {
        "content": "<p>because we can't parallelize this</p>",
        "id": 163188550,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075299
    },
    {
        "content": "<p>and unfortunately each instance reads/saves dep graph alone and redoes all of the analysis, which we replace as a whole in the rls-analysis (our save-analysis indexer)</p>",
        "id": 163188629,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075340
    },
    {
        "content": "<blockquote>\n<p>the 'optimization' here is that for the leaf crates we pass the resulting save-analysis in-memory, which is good</p>\n</blockquote>\n<p>this is something we already do?</p>",
        "id": 163188791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555075483
    },
    {
        "content": "<blockquote>\n<p>however because we compile it once per process, we can't manage to quickly compile anything that's more complex than a single crate target</p>\n</blockquote>\n<p>does this apply to deps too? just things within the workspace?</p>",
        "id": 163188823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555075510
    },
    {
        "content": "<p>If you have only one crate in the workspace, presumably in the \"steady state\" we are typically compiling only some leaf crate that changed?</p>",
        "id": 163188851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555075539
    },
    {
        "content": "<p>But if you have multiple crates, I guess you are compiling the crate that changed plus anything dependent on it?</p>",
        "id": 163188864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555075553
    },
    {
        "content": "<p>so the current setup is we run cargo, let the inner dep nodes output the JSON blob (and we also don't intercept <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> runs)</p>",
        "id": 163189340,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075884
    },
    {
        "content": "<p>but we intercept the leaf notes, for which we pass the save-analysis data in-memory</p>",
        "id": 163189372,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075903
    },
    {
        "content": "<p>in the cargo run, we use the <code>Executor</code> trait there, where Cargo is responsible for coordinating the jobs, however on its own it spawns the command whereas we execute the compilation in-process</p>",
        "id": 163189493,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075959
    },
    {
        "content": "<p>and by leaf node I mean the 'primary' node inside a given workplace (incl. path-based dependencies) and not deps</p>",
        "id": 163189542,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555075992
    },
    {
        "content": "<blockquote>\n<p>If you have only one crate in the workspace, presumably in the \"steady state\" we are typically compiling only some leaf crate that changed?</p>\n</blockquote>\n<p>yes, exactly</p>",
        "id": 163189562,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076011
    },
    {
        "content": "<p>it seems like some of the revision of coordination between <code>cargo</code>+<code>rustc</code> that the WG-pipelining group wants <em>might</em> overlap with <del>desirata</del> objectives here?</p>",
        "id": 163189569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076015
    },
    {
        "content": "<p>at least, it sounds like RLS is jumping through hoops in order to take over for some of the <code>rustc</code> invocations that <code>cargo</code> would make</p>",
        "id": 163189671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076069
    },
    {
        "content": "<p>(sorry, just thinking out loud.)</p>",
        "id": 163189680,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076083
    },
    {
        "content": "<blockquote>\n<p>so the current setup is we run cargo, let the inner dep nodes output the JSON blob (and we also don't intercept <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> runs)</p>\n</blockquote>\n<p>what are \"dep nodes\" here?</p>",
        "id": 163189702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076102
    },
    {
        "content": "<p>is that referring to something in cargo?</p>",
        "id": 163189717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076107
    },
    {
        "content": "<p>i.e., each node represents a crate?</p>",
        "id": 163189729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076114
    },
    {
        "content": "<blockquote>\n<p>in the cargo run, we use the <code>Executor</code> trait there, where Cargo is responsible for coordinating the jobs, however on its own it spawns the command whereas we execute the compilation in-process</p>\n</blockquote>\n<p>I presume this is also some kind of hook that cargo provides -- the ability to control execution so that it runs in-process?</p>",
        "id": 163189768,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076144
    },
    {
        "content": "<p>if I am understanding this correctly, <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span>, then the parallelism you are hoping to exploit would be between crates? (i.e., what cargo normally gets you)</p>",
        "id": 163189858,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076177
    },
    {
        "content": "<blockquote>\n<p>if I am understanding this correctly, <span class=\"user-mention silent\" data-user-id=\"153740\">Igor Matuszewski</span>, then the parallelism you are hoping to exploit would be between crates? (i.e., what cargo normally gets you)</p>\n</blockquote>\n<p>yup, which might be prominent in bigger workspaces where we don't have an obvious linear dep chain between primary packages but some of those may be spread out</p>",
        "id": 163189905,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076214
    },
    {
        "content": "<p>yes, my experience with the RLS has often been that</p>",
        "id": 163189970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076257
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>so the current setup is we run cargo, let the inner dep nodes output the JSON blob (and we also don't intercept <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> runs)</p>\n</blockquote>\n<p>what are \"dep nodes\" here?</p>\n</blockquote>\n<p>by dep node I mean a crate to be compiled (bin, lib, <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a>) in the crate dep graph</p>",
        "id": 163189971,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076258
    },
    {
        "content": "<p>it works \"ok\" if you have a single crate</p>",
        "id": 163189982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076266
    },
    {
        "content": "<p>but workspaces .. not so well</p>",
        "id": 163189994,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076274
    },
    {
        "content": "<p>and maybe this is why</p>",
        "id": 163189995,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076276
    },
    {
        "content": "<blockquote>\n<p>it works \"ok\" if you have a single crate</p>\n</blockquote>\n<p>to be clear, by this I mean \"it could definitely still be snappier\" :)</p>",
        "id": 163190051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076292
    },
    {
        "content": "<p>that definitely contributes - right now we use naive linear compilation queue</p>",
        "id": 163190057,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076299
    },
    {
        "content": "<p>but I guess that the single crate scenario is not going to be helped here</p>",
        "id": 163190071,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076305
    },
    {
        "content": "<p>which case is the most important to address?</p>",
        "id": 163190180,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076383
    },
    {
        "content": "<p>for a single crate scenario it'd be ideal to either be able to ask for a 'portion' of save-analysis to be incrementally updated (something that still needs to be implemented in the rls-analysis) or even better to use rustc as a deamon and ask for analysis directly</p>",
        "id": 163190201,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076395
    },
    {
        "content": "<p>(but that's changing a lot of arch at this point)</p>",
        "id": 163190256,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076404
    },
    {
        "content": "<p>seems like if we cannot scale to workspaces, while single crate is \"okay but not great\", then we should prioritize workspaces</p>",
        "id": 163190297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076420
    },
    {
        "content": "<p>I think I agree with that</p>",
        "id": 163190319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076434
    },
    {
        "content": "<p>because in the end, if we cannot scale, we fail, right?</p>",
        "id": 163190326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076436
    },
    {
        "content": "<p>(\"fail\" as in the tool won't be used)</p>",
        "id": 163190360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076454
    },
    {
        "content": "<p>yeah, I think we'll have more and more workspace users and the linear approach definitely holds us back here</p>",
        "id": 163190363,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076456
    },
    {
        "content": "<blockquote>\n<p>(but that's changing a lot of arch at this point)</p>\n</blockquote>\n<p>I'd like to drill into this a bit more -- I feel like it may be worth putting energy here, but it's probably correct that we should do this <em>after</em> we try to get parallelism for workspaces?</p>",
        "id": 163190396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076477
    },
    {
        "content": "<p>this is also visible with many Cargo integration tests, which are seen by Cargo as separate crates - these are also unfortunately compiled linearly</p>",
        "id": 163190413,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076494
    },
    {
        "content": "<p>so the single crate scenario might be also somewhat affected if there are a lot of <code>cfg(test)</code> crates to be analyzed as well (right now, by default, we analyze every Cargo crate target)</p>",
        "id": 163190521,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076540
    },
    {
        "content": "<p>ok so it sounds like we are saying that the rls 1.0 top priority right now is improving workspace performance, primarily through parallelization. maybe next priority would be improving response time for single crates, or maybe other feature work, that isn't decided yet.</p>",
        "id": 163190569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076570
    },
    {
        "content": "<p>Yup, sounds good</p>",
        "id": 163190663,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076641
    },
    {
        "content": "<p>a functional feature that would be nice to tackle is to support more (non-Cargo) project layouts somehow to improve the tool usability</p>",
        "id": 163190740,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076666
    },
    {
        "content": "<p>(I'd like to return a bit to the \"RLS 1.0\" and \"RLS 2.0\" questions, then, unless there is more we should discuss now.)</p>",
        "id": 163190747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076671
    },
    {
        "content": "<p>but that's not the top priority</p>",
        "id": 163190757,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076676
    },
    {
        "content": "<blockquote>\n<p>a functional feature that would be nice to tackle is to support more (non-Cargo) project layouts somehow to improve the tool usability</p>\n</blockquote>\n<p>yes, prime example perhaps being rustc itself?</p>",
        "id": 163190766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076684
    },
    {
        "content": "<p>but I've definitely heard from multiple production users that they cannot use RLS 1.0 for this reason -- otoh they are all using rust-analyzer</p>",
        "id": 163190826,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076708
    },
    {
        "content": "<p>which, might be ok</p>",
        "id": 163190836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076714
    },
    {
        "content": "<p>Why doesn't RLS use rustc queries directly?</p>",
        "id": 163190839,
        "sender_full_name": "Zoxc",
        "timestamp": 1555076715
    },
    {
        "content": "<p>the support is surprisingly okay, but works better when initialized in the crate directly (e.g. <code>librustc_save_analysis/</code>)</p>",
        "id": 163190860,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076731
    },
    {
        "content": "<blockquote>\n<p>so the single crate scenario might be also somewhat affected if there are a lot of <code>cfg(test)</code> crates to be analyzed as well (right now, by default, we analyze every Cargo crate target)</p>\n</blockquote>\n<p>regarding this point: I am curious about whether the user experience here is that, from the RLS point of view, all the tests are always part of the analysis?</p>",
        "id": 163190867,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076733
    },
    {
        "content": "<blockquote>\n<p>Why doesn't RLS use rustc queries directly?</p>\n</blockquote>\n<p>that was one of the things we were talking about as a possible refactoring</p>",
        "id": 163190891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076751
    },
    {
        "content": "<blockquote>\n<p>the support is surprisingly okay, but works better when initialized in the crate directly (e.g. <code>librustc_save_analysis/</code>)</p>\n</blockquote>\n<p>support for what exactly? in rustc you mean?</p>",
        "id": 163190948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076766
    },
    {
        "content": "<p>in other words, are they always paying for the overhead of analyzing and processing them? Is that overhead they want to pay for when they are trying to understand the <em>non</em>-test portin of their codebase?</p>",
        "id": 163190953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076771
    },
    {
        "content": "<blockquote>\n<p>Why doesn't RLS use rustc queries directly?</p>\n</blockquote>\n<p>that's part of the end-to-end-queries as I understand it, which seems like the end-goal, especially if we could combine it with cargo/rustc pipelining effort</p>",
        "id": 163190957,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076773
    },
    {
        "content": "<p>so one thing I did want to bring up <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span>, regarding prioritizing parallelization for workspaces, is whether it would impact using rustc queries directly</p>",
        "id": 163191009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076808
    },
    {
        "content": "<blockquote>\n<p>in other words, are they always paying for the overhead of analyzing and processing them? Is that overhead they want to pay for when they are trying to understand the <em>non</em>-test portin of their codebase?</p>\n</blockquote>\n<p>not sure I get it, but if we always want them to be analyzed, then potentially on every lib change we need to reanalyze cfg tests because something might have changed upstream</p>",
        "id": 163191016,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076815
    },
    {
        "content": "<p>Does RLS predate queries? =P</p>",
        "id": 163191017,
        "sender_full_name": "Zoxc",
        "timestamp": 1555076815
    },
    {
        "content": "<p>Yes</p>",
        "id": 163191033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076824
    },
    {
        "content": "<blockquote>\n<p>if we always want them to be analyzed</p>\n</blockquote>\n<p>I guess this \"if\" here is what I'm interested in</p>",
        "id": 163191090,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076870
    },
    {
        "content": "<blockquote>\n<p>(I'd like to return a bit to the \"RLS 1.0\" and \"RLS 2.0\" questions, then, unless there is more we should discuss now.)</p>\n</blockquote>\n<p>regarding this topic -- maybe we should schedule another time to chat, this time with <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> and maybe <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> -- and dig into this</p>",
        "id": 163191153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076893
    },
    {
        "content": "<p>(I don't know enough about RLS usage to know how it interacts with cfg-flags)</p>",
        "id": 163191161,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555076903
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>if we always want them to be analyzed</p>\n</blockquote>\n<p>I guess this \"if\" here is what I'm interested in</p>\n</blockquote>\n<p>that's our default setting, we could disable it now but a lot of users are surprised because they're not</p>",
        "id": 163191166,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076909
    },
    {
        "content": "<p>in particular <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> was asking me about nomenclature already, I think we both agreed we don't love RLS 2.0</p>",
        "id": 163191173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076915
    },
    {
        "content": "<p>if we parallelize this here then the overhead of linear compilation of cfg(test) targets shouldn't matter that much</p>",
        "id": 163191186,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076929
    },
    {
        "content": "<p>and I really feel like I want the RLS to be more \"first class\" in our team</p>",
        "id": 163191189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076930
    },
    {
        "content": "<p>and having a working group around it seems like an obvious way to do that</p>",
        "id": 163191207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555076943
    },
    {
        "content": "<blockquote>\n<p>so one thing I did want to bring up <span class=\"user-mention silent\" data-user-id=\"153740\">Igor Matuszewski</span>, regarding prioritizing parallelization for workspaces, is whether it would impact using rustc queries directly</p>\n</blockquote>\n<p>it would unfortunately - by doing stuff out of process we technically lose the API access to rustc internals</p>",
        "id": 163191229,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076960
    },
    {
        "content": "<p>but that might be sort of okay until the end-to-end queries story matures somehow?</p>",
        "id": 163191252,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555076977
    },
    {
        "content": "<p>I think a major question is</p>",
        "id": 163191354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077031
    },
    {
        "content": "<p>do we ever expect to transition RLS away from save-analysis to queries</p>",
        "id": 163191364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077039
    },
    {
        "content": "<p>maybe WG-RLS with \"1.0\" and \"2.0\" subgroups work? (although I'm afraid to overhierachize this, e.g. WG-RLS/2.0/chalk subsubgroup)</p>",
        "id": 163191365,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077039
    },
    {
        "content": "<blockquote>\n<p>do we ever expect to transition RLS away from save-analysis to queries</p>\n</blockquote>\n<p>like, I think at some point we need to pick a lane and stay in it</p>",
        "id": 163191400,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077067
    },
    {
        "content": "<p>and maybe the answer is that we are going to push on the rust-analyzer approach</p>",
        "id": 163191408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077078
    },
    {
        "content": "<p>I think save-analysis as a format definitely has value</p>",
        "id": 163191413,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077083
    },
    {
        "content": "<p>to be used in code indexers and such</p>",
        "id": 163191417,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077088
    },
    {
        "content": "<blockquote>\n<p>it would unfortunately - by doing stuff out of process we technically lose the API access to rustc internals</p>\n</blockquote>\n<p>I'm not entirely sure how much this matter btw</p>",
        "id": 163191432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077102
    },
    {
        "content": "<p>(e.g. Microsoft started LSIF standard to improve that, similar to LSP)</p>",
        "id": 163191434,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077104
    },
    {
        "content": "<p>i.e., we could have the processes communicating using IPC or something</p>",
        "id": 163191442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077113
    },
    {
        "content": "<p>but the end-goal would be for IDEs to uses queries directly, I believe</p>",
        "id": 163191451,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077121
    },
    {
        "content": "<p>I think the end-goal is for the IDEs to \"use queries\", but not necessarily <em>in process</em></p>",
        "id": 163191503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077137
    },
    {
        "content": "<p>but definitely for rustc to be resident</p>",
        "id": 163191518,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077149
    },
    {
        "content": "<p>i.e., daemon-like</p>",
        "id": 163191519,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077152
    },
    {
        "content": "<p>yeah, that makes sense as well</p>",
        "id": 163191525,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077154
    },
    {
        "content": "<p>I guess it seems like shifting to using rustc + save-analysis out of process is, in <em>some sense</em>, a step in the \"wrong direction\" architecturally, but still maybe the right move :)</p>",
        "id": 163191557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077186
    },
    {
        "content": "<p>I guess it depends how mcuh work it is</p>",
        "id": 163191562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077194
    },
    {
        "content": "<p>and whether it would make it much harder later on to try and adopt the daemon, query-like approach</p>",
        "id": 163191576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077208
    },
    {
        "content": "<p>I mean it seems clear we're going to want to compile crates in parallel regardless</p>",
        "id": 163191599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077234
    },
    {
        "content": "<p>or at least we'll want parallelization, probably also intra-crate</p>",
        "id": 163191654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077246
    },
    {
        "content": "<p>let me rephrase this</p>",
        "id": 163191662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077252
    },
    {
        "content": "<p>the crate boundary is not necessarily meaningful, but it's clear we want parallelization</p>",
        "id": 163191673,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077262
    },
    {
        "content": "<p>(and I believe rust-analyzer, for example, has this today? it certainly has the ability to do it)</p>",
        "id": 163191689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077275
    },
    {
        "content": "<p>anyway, steering meeting starting soon, this was useful</p>",
        "id": 163191735,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077317
    },
    {
        "content": "<p>one interesting case, if RLS is to still coordinate the editor side of things, is that we'd have to support some sort of a inter-process VFS</p>",
        "id": 163191737,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077319
    },
    {
        "content": "<p>so that rustc can use the editor in-memory buffers instead of the files on disk</p>",
        "id": 163191747,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077334
    },
    {
        "content": "<p>hmm</p>",
        "id": 163191748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077334
    },
    {
        "content": "<p>which I'm not sure how to solve it yet, it's something worth having in mind</p>",
        "id": 163191831,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077376
    },
    {
        "content": "<p>can we just steal rust-analyzer's?</p>",
        "id": 163191839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555077387
    },
    {
        "content": "<p>I suppose that's not addressing the real problem of adding the plumbing for it</p>",
        "id": 163191846,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555077403
    },
    {
        "content": "<p>(oh, and that's not inter-process, is it...)</p>",
        "id": 163191860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555077415
    },
    {
        "content": "<p>RLS has its VFS implementation - the real challenge is for spawned rustc instances to use it</p>",
        "id": 163191879,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077429
    },
    {
        "content": "<p>it's not, but it should be possible to make it so</p>",
        "id": 163191890,
        "sender_full_name": "matklad",
        "timestamp": 1555077438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> can't we just write a small <code>FileLoader</code> in the rustc which opens a unix-socket or something like that?</p>",
        "id": 163191921,
        "sender_full_name": "matklad",
        "timestamp": 1555077472
    },
    {
        "content": "<p>Or, rather, can we just have pass modified files as \"input\" to rustc?</p>",
        "id": 163191982,
        "sender_full_name": "matklad",
        "timestamp": 1555077493
    },
    {
        "content": "<p>like <code>--memfile foo.rs= \"fn main {}\"</code>...</p>",
        "id": 163192015,
        "sender_full_name": "matklad",
        "timestamp": 1555077526
    },
    {
        "content": "<p>Given that we should support only modified files, this doesn't seem like a perf bottlneck</p>",
        "id": 163192049,
        "sender_full_name": "matklad",
        "timestamp": 1555077549
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> we could, the real difficulty would be to have a robust cross-platform implementation</p>",
        "id": 163192081,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077601
    },
    {
        "content": "<p>the args approach is interesting - what is the limit to shell invocation/args length?</p>",
        "id": 163192159,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> what do you think about finding a time to talk abut the whole rls 1.0 vs 2.0 naming + branding + overall strategy?</p>",
        "id": 163192189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077638
    },
    {
        "content": "<p>I'd love to do that, yeah</p>",
        "id": 163192199,
        "sender_full_name": "matklad",
        "timestamp": 1555077648
    },
    {
        "content": "<p>somebody make a doodle :P</p>",
        "id": 163192210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077656
    },
    {
        "content": "<p>I'm very busy today, or i'd say let's just do later today</p>",
        "id": 163192225,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077664
    },
    {
        "content": "<p>not today: on <span aria-label=\"fire\" class=\"emoji emoji-1f525\" role=\"img\" title=\"fire\">:fire:</span> prepping the lecture :D</p>",
        "id": 163192241,
        "sender_full_name": "matklad",
        "timestamp": 1555077670
    },
    {
        "content": "<p>but early next week sems good</p>",
        "id": 163192242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555077672
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 163192380,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077756
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> could you make a doodle? I'll forget (offtopic: is it possible to mark 1-hr chunks en-masse in doodle?) by the end of the lecture</p>",
        "id": 163192460,
        "sender_full_name": "matklad",
        "timestamp": 1555077809
    },
    {
        "content": "<p>yup, will do</p>",
        "id": 163192544,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077844
    },
    {
        "content": "<p>for the next week?</p>",
        "id": 163192552,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555077848
    },
    {
        "content": "<p>yep</p>",
        "id": 163192692,
        "sender_full_name": "matklad",
        "timestamp": 1555077951
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 163192758,
        "sender_full_name": "matklad",
        "timestamp": 1555077967
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"153740\">Igor Matuszewski</span> could you make a doodle? I'll forget (offtopic: is it possible to mark 1-hr chunks en-masse in doodle?) by the end of the lecture</p>\n</blockquote>\n<p>it sort of is -- if you go to the weekly view, you can at least repeat the days very easily</p>",
        "id": 163193092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555078194
    },
    {
        "content": "<p>Went away for the weekend so made the poll just now: <a href=\"https://doodle.com/poll/xmz2ckttftaw7d2y\" target=\"_blank\" title=\"https://doodle.com/poll/xmz2ckttftaw7d2y\">https://doodle.com/poll/xmz2ckttftaw7d2y</a></p>",
        "id": 163336103,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555277688
    },
    {
        "content": "<p>Which means it might be hard to schedule early Monday morning but please write down your availability, the date will be picked by the end of tomorrow if there will be no strong preference for a single time slot</p>",
        "id": 163336172,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555277765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 163336186,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555277800
    },
    {
        "content": "<p>should I cc rls 2.0 WG as well?</p>",
        "id": 163336189,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555277809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> could you fill the poll today/tomorrow if you prefer early this week?</p>",
        "id": 163418419,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555364187
    },
    {
        "content": "<p>The meeting will be on Zulip right? (and not in a Zoom call)</p>",
        "id": 163461367,
        "sender_full_name": "detrumi",
        "timestamp": 1555415048
    },
    {
        "content": "<p>(i have no strong preference for the medium of communication. i'm assuming Zulip. but i have no problem with Zoom.)</p>",
        "id": 163461588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555415296
    },
    {
        "content": "<p>+1 to Zulip</p>",
        "id": 163469166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555421549
    },
    {
        "content": "<p>sorry <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> for not participating but the time looks good to me</p>",
        "id": 163469171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555421559
    },
    {
        "content": "<p>^ starting in about an hour</p>",
        "id": 163554172,
        "sender_full_name": "detrumi",
        "timestamp": 1555502875
    },
    {
        "content": "<p>I'm sure you got the invite but just in case - <a href=\"https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ\">https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ</a> (not sure how much should we document explicitly if there's a conversation history here)</p>",
        "id": 163554245,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555502917
    },
    {
        "content": "<p>Feel free to add items to the agenda</p>",
        "id": 163554252,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555502927
    },
    {
        "content": "<p>Yes, just noticed it. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 163554257,
        "sender_full_name": "detrumi",
        "timestamp": 1555502942
    },
    {
        "content": "<p>We don't need to write down everything we talked about in detail, but a high-level overview of the main points is always nice</p>",
        "id": 163554508,
        "sender_full_name": "detrumi",
        "timestamp": 1555503139
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 163557546,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506057
    },
    {
        "content": "<p>since the info was posted here, I think we might continue here as well</p>",
        "id": 163557564,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506073
    },
    {
        "content": "<p>unless you prefer otherwise</p>",
        "id": 163557572,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506085
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Are you around?</p>",
        "id": 163557663,
        "sender_full_name": "detrumi",
        "timestamp": 1555506127
    },
    {
        "content": "<p>Let's start anyway <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 163557729,
        "sender_full_name": "detrumi",
        "timestamp": 1555506195
    },
    {
        "content": "<p>On a high level it'd be good to discuss about the RLS 1.0 and 2.0, more specifically how we should talk about it and what's our strategy about it</p>",
        "id": 163557738,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506203
    },
    {
        "content": "<p>so</p>",
        "id": 163557750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555506214
    },
    {
        "content": "<p>I admit I haven't been following stuff too too closely</p>",
        "id": 163557759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555506226
    },
    {
        "content": "<p>I know that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> briefly mentioned an idea about WG-RLS-1.0 - I'm not sure whether we should do it and if so what would be the benefits</p>",
        "id": 163557764,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506234
    },
    {
        "content": "<p>no worries</p>",
        "id": 163557818,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506251
    },
    {
        "content": "<p>but my understanding was that RLS 2.0 was (and is) an <em>experiment</em> to determine if we can leverage the work of rust-analyzer to make a better foundation</p>",
        "id": 163557822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555506254
    },
    {
        "content": "<p>for a future RLS (and that might also tie into the future of rustc itself)</p>",
        "id": 163557854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555506280
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 163557885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506312
    },
    {
        "content": "<p>so this idea of a WG-RLS-1.0 ... I would assume would be dedicated to addressing issues in the RLS <em>as it exists today</em> ?</p>",
        "id": 163557891,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555506317
    },
    {
        "content": "<p>ah well maybe <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> can explain</p>",
        "id": 163557912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555506329
    },
    {
        "content": "<p>Agreed - I think it's worth underlining that RLS is available now and shipped officially and it sort of works in most of the cases and keep the RLS 2.0 on the experimental/future side</p>",
        "id": 163557916,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506333
    },
    {
        "content": "<p>Since it's a first item on the list and we're discussing it now - <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> could you explain more what you have in mind with the WG RLS 1.0 idea?</p>",
        "id": 163557986,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506370
    },
    {
        "content": "<p>Yes I mean roughly what I was thinking is (a) the RLS 1.0 exists and has users and is our official IDE :)</p>",
        "id": 163558008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506388
    },
    {
        "content": "<p>so we should definitely be supporting it</p>",
        "id": 163558010,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506393
    },
    {
        "content": "<p>as in, tracking bugs, fixing them</p>",
        "id": 163558013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506398
    },
    {
        "content": "<p>we should also be considering improvements and extensions</p>",
        "id": 163558019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506406
    },
    {
        "content": "<p>One thing that I raised in the rust dev tools meething yday is that we struggle with contributors now</p>",
        "id": 163558047,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506425
    },
    {
        "content": "<p>Yes, that was part of my thinking</p>",
        "id": 163558058,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506436
    },
    {
        "content": "<p>we did an issue triage and cleaned things up a bit to improve the contributability factor but I think we should improve in that area</p>",
        "id": 163558074,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506451
    },
    {
        "content": "<p>on the other hand, so long as we are pursuing a \"new and exciting\" RLS 2.0 this is possibly to be expected</p>",
        "id": 163558078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506454
    },
    {
        "content": "<p>(still need to talk to <span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> what might be a good thing to do)</p>",
        "id": 163558104,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506473
    },
    {
        "content": "<p>basically I'm concerned that right now the only person really following the details there is <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span></p>",
        "id": 163558161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506488
    },
    {
        "content": "<p>That is true right now, unfortunately</p>",
        "id": 163558231,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506569
    },
    {
        "content": "<p>Well, it feels like many people are moving to RLS2 already, as RLS2+<code>cargo watch</code> already works better for many people than the old RLS</p>",
        "id": 163558232,
        "sender_full_name": "detrumi",
        "timestamp": 1555506570
    },
    {
        "content": "<p>This I think is the key question: when do we expect rls2 to be generally useful?</p>",
        "id": 163558305,
        "sender_full_name": "matklad",
        "timestamp": 1555506604
    },
    {
        "content": "<p>It definitely seems like one option is to just try and adopt RLS 2.0</p>",
        "id": 163558318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506608
    },
    {
        "content": "<p>the main pain point is latency for RLS1.0 I believe, and rightfully so</p>",
        "id": 163558319,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506609
    },
    {
        "content": "<blockquote>\n<p>This I think is the key question: when do we expect rls2 to be generally useful?</p>\n</blockquote>\n<p>I think part of the problem here is defining what <em>generally useful</em> means more precisely</p>",
        "id": 163558329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506631
    },
    {
        "content": "<p>It would be nice if we could have some kind of checklist of like \"these are the things we would need to have working, and a set of crates they have to be working on\"</p>",
        "id": 163558344,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506655
    },
    {
        "content": "<blockquote>\n<p>the main pain point is latency for RLS1.0 I believe, and rightfully so</p>\n</blockquote>\n<p>that makes sense to me -- but i'm not entirely sure if it's true</p>",
        "id": 163558376,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506685
    },
    {
        "content": "<p>I think the better definition would be \"when users are more satisfied with it\"</p>",
        "id": 163558380,
        "sender_full_name": "matklad",
        "timestamp": 1555506688
    },
    {
        "content": "<p>maybe it all comes down to latency</p>",
        "id": 163558385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506693
    },
    {
        "content": "<blockquote>\n<p>I think the better definition would be \"when users are more satisfied with it\"</p>\n</blockquote>\n<p>that..doesn't feel better to me :) it seems sort of unactionable.</p>",
        "id": 163558392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506706
    },
    {
        "content": "<p>there's one thing to keep in mind and that's parity with the compiler</p>",
        "id": 163558397,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506708
    },
    {
        "content": "<p>as in, it's hard to predict which features are crucial for workdlow</p>",
        "id": 163558408,
        "sender_full_name": "matklad",
        "timestamp": 1555506716
    },
    {
        "content": "<blockquote>\n<p>there's one thing to keep in mind and that's parity with the compiler</p>\n</blockquote>\n<p>yes, you mean, as we implement new features and the like</p>",
        "id": 163558474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506739
    },
    {
        "content": "<p>it's great to have the IDE do the right thing most of the time... I'm not sure about the times when it doesn't</p>",
        "id": 163558481,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506743
    },
    {
        "content": "<p>Latency is a big one, but the rls doesn't work for big codebases for other reasons than latency, AFAIK</p>",
        "id": 163558516,
        "sender_full_name": "detrumi",
        "timestamp": 1555506775
    },
    {
        "content": "<p>in a way I believe we should converge to a model where we have rustc-as-a-language-server as a daemon we can throw requests at</p>",
        "id": 163558518,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506777
    },
    {
        "content": "<p>latency isn't the only thing -- correct me if I'm wrong, but I think RLS's architecture makes it very hard to implement new assists and so on</p>",
        "id": 163558541,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1555506795
    },
    {
        "content": "<blockquote>\n<p>it seems sort of unactionable.</p>\n</blockquote>\n<p>Agree here. I currently have no idea about how much rls2 is actually used in the wild: we don't have any telemetry.</p>",
        "id": 163558555,
        "sender_full_name": "matklad",
        "timestamp": 1555506824
    },
    {
        "content": "<p>RLS 1.0 doesn't operate on AST directly</p>",
        "id": 163558557,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506826
    },
    {
        "content": "<p>it asks the compiler to traverse it, dump all the data and the internal \"index db\" backend collects that and lets the RLS answer all the relevant language queries</p>",
        "id": 163558629,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506860
    },
    {
        "content": "<blockquote>\n<p>in a way I believe we should converge to a </p>\n</blockquote>\n<p>+1 to the idea of convergance. The approach with out of process rustc might actually allow us to get the best of both worlds in a single codebase</p>",
        "id": 163558649,
        "sender_full_name": "matklad",
        "timestamp": 1555506881
    },
    {
        "content": "<p>I think we should step back a <em>hair</em> here -- and try to identify the aims of this meeting a bit? I'm not sure for example whether I consider it 'in scope' for us right now to decide to focus purely on rust-analyzer, etc. Though we might think about trying to come up with \"angles\" on the discussion Basically looking at each of the plans and trying to identify the crucial questions involved.</p>",
        "id": 163558651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555506882
    },
    {
        "content": "<p>so right now there is a split between 1.0 and 2.0 - it'd be good to talk how these relate to each other and how should we brand this</p>",
        "id": 163558737,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506944
    },
    {
        "content": "<p>Main agenda items: 1. What would be mission of a hypothetical WG-RLS-1.0 ?, and 2. Do we form such a WG ?</p>",
        "id": 163558740,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555506945
    },
    {
        "content": "<p>and also what to do with 1.0 now</p>",
        "id": 163558744,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506950
    },
    {
        "content": "<p>As with every software project, list of stuff to do is potentially endless when it comes to improving the 1.0</p>",
        "id": 163558819,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555506986
    },
    {
        "content": "<p>it'd be good to tackle compiling out of process, improving projecy layout detection, incrementalizing and possibly parallelizing the rls-analysis (indexer) and so on</p>",
        "id": 163558841,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507014
    },
    {
        "content": "<p>so in that sense I believe WG-RLS-1.0 could find work to do, so that's not a problem</p>",
        "id": 163558866,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507030
    },
    {
        "content": "<blockquote>\n<p>Main agenda items: 1. What would be mission of a hypothetical WG-RLS-1.0 ?, and 2. Do we form such a WG ?</p>\n</blockquote>\n<p>and perhaps a (3), what do we call \"RLS 2.0\" and how do we think about it? The name itself implies a certain... evolution that is perhaps not what we want to imply.</p>",
        "id": 163558868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507030
    },
    {
        "content": "<p>Maybe there's also improvements that benefit both RLS1 and RLS2</p>",
        "id": 163558999,
        "sender_full_name": "detrumi",
        "timestamp": 1555507105
    },
    {
        "content": "<p>I love the experiment and how it's capable right now, I'm mostly worried about the compiler parity and accuracy so as <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm not sure that's a clear evolution path and what RLS 1.0 \"should become\"</p>",
        "id": 163559008,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507113
    },
    {
        "content": "<p>So the original plan as I understood it was roughly</p>\n<p>1. We continue to support RLS as it exists today, but in <em>something</em> of a holding pattern.<br>\n2. We evolve rust-analyzer (I'm going to stick with this name for now), trying to get it to the point of general usability.<br>\nIn particular, we aim to extend rust-analyzer by creating external crates that can be shared with rustc wherever possible, so as to improve rustc and rust-analyzer simultaneously. </p>\n<p>Then, at some unspecified point, we try to figure out how to merge rustc and RA.</p>",
        "id": 163559053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507151
    },
    {
        "content": "<p>Right, that's how I understood it initially</p>",
        "id": 163559147,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507214
    },
    {
        "content": "<p>the main problem that seems to have arisen</p>",
        "id": 163559151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555507218
    },
    {
        "content": "<p>The questions we're facing now are sort of obvious follow-ons from that I think:</p>\n<ul>\n<li>How exactly are we going to ensure RLS 1.0 maintenance happens?</li>\n</ul>\n<p>What kinds of features <em>do</em> we want to support? How much refactoring will we do? Are things like a rustc daemon \"out of scope\"?</p>\n<ul>\n<li>To the extent that rust-analyzer starts to get use, we have de facto two compilers to support, so how are we going to ensure feature parity between them and so forth?</li>\n</ul>",
        "id": 163559152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507219
    },
    {
        "content": "<p>is that we lack manpower/initiative to support RLS 1.0 ?</p>",
        "id": 163559172,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555507234
    },
    {
        "content": "<p>The latter hasn't become a big problem yet but I think it will be</p>",
        "id": 163559178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507237
    },
    {
        "content": "<p>I guess there is a third one</p>\n<ul>\n<li>How quickly can we start moving things into libraries</li>\n</ul>\n<p>That process is hard =)</p>",
        "id": 163559201,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507252
    },
    {
        "content": "<blockquote>\n<p>is that we lack manpower/initiative to support RLS 1.0 ?</p>\n</blockquote>\n<p>And maybe RLS 2.0 =) I know that <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> has wished for more involvement, for example</p>",
        "id": 163559224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507265
    },
    {
        "content": "<p>I wonder if we should put more emphasis into sharing and librarifying what we can to somehow amortize the cost of maintaining two compilers</p>",
        "id": 163559277,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507318
    },
    {
        "content": "<p>hmm.  I guess I know that <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> has wanted more involvement with RLS 2.0, but I had thought there at least were external contributors there. Am I wrong?</p>",
        "id": 163559353,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555507349
    },
    {
        "content": "<blockquote>\n<p>What kinds of features <em>do</em> we want to support? How much refactoring will we do? Are things like a rustc daemon \"out of scope\"?</p>\n</blockquote>\n<p>Thinking about this, I feel like there is a similarity here to the idea of introducing shared crates and so forth. That is -- in this case, by pursuing a rustc daemon, the <em>RLS codebase</em> is kind of evolving. This seems like a concept that rust-analyzer too may wind up wanting? (Although the main benefits I think are parallelism, which rust-analyzer can get in other ways?)</p>",
        "id": 163559370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507362
    },
    {
        "content": "<p>(I'm mentally trying to compare contributions to RLS 1.0 vs RLS 2.0 ...)</p>",
        "id": 163559375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555507368
    },
    {
        "content": "<p>FWIW the save-analysis infrastructure should survive to support more code-indexer-oriented features (rather than lazy IDE ones)</p>",
        "id": 163559377,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507369
    },
    {
        "content": "<p>The \"elephant in the room\" perhaps is <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>'s thoughts on evolving rustc itself. I know they've been talking about some more ideas here and I'd like to learn more about them. But basically there isn't universal consensus on some details from rust-analyzer.</p>",
        "id": 163559450,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507432
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> there are awesome external contributors, but only two people who can do mentoring (me and <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> ). Given that rls2.0 is 90% E-needs-design, just the <em>volume</em> of contributors does not solve all of the problmesn</p>",
        "id": 163559500,
        "sender_full_name": "matklad",
        "timestamp": 1555507443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> to measure manpower on the RLS 1.0, unfortunately right now it's me working on the project</p>",
        "id": 163559549,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507476
    },
    {
        "content": "<p>you mentioned at one point some other person who was regularly contributing, right?</p>",
        "id": 163559569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507495
    },
    {
        "content": "<p>apart from an occasional contributor but retention seems to be low (is the project not accessible enough?)</p>",
        "id": 163559594,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507508
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> part of my motivation for this design meeting concept I talked about at the last steering meeting, btw, was helping to drive some of that design and discussion, although maybe it won't work as well for RLS2.0-specific experiments</p>",
        "id": 163559624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507534
    },
    {
        "content": "<p>yes, @alexheretic but he's busy atm and mostly sporadically replies to issue reports now</p>",
        "id": 163559636,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507544
    },
    {
        "content": "<blockquote>\n<p>apart from an occasional contributor but retention seems to be low (is the project not accessible enough?)</p>\n</blockquote>\n<p>maybe, but this is partly what I was hoping to address via a RLS working group</p>",
        "id": 163559648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507555
    },
    {
        "content": "<p>i.e., maybe it's also visibility</p>",
        "id": 163559652,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507560
    },
    {
        "content": "<p>I <em>think</em> the RLS 2.0 brand makes it so that RLS 1.0 is marked as obsolete - it'd be good to step back and to think if that's the case</p>",
        "id": 163559752,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507601
    },
    {
        "content": "<p>do we want it to run parallel or to move towards 2.0</p>",
        "id": 163559773,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507616
    },
    {
        "content": "<p>Yes, I worry about that.</p>",
        "id": 163559777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507619
    },
    {
        "content": "<p>I feel two conflicting things</p>",
        "id": 163559793,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507627
    },
    {
        "content": "<p>I guess the main problem is that we came up with branding <em>before</em> we came up with actual plan of action :-)</p>",
        "id": 163559836,
        "sender_full_name": "matklad",
        "timestamp": 1555507646
    },
    {
        "content": "<p>it doesn't seem to me like the RLS 2.0 brand is very visible outside this zulip though?</p>",
        "id": 163559861,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1555507663
    },
    {
        "content": "<p>On the one hand, I feel great about rust-analyzer, and I think that if we could just throw our energy behind such a design we could make fast progress.</p>\n<p>On the other hand, I know that we in t-compiler have a habit of grand visions that take a long time to come to fruition, and our track record on doing the detailed, follow-on work is less good.</p>",
        "id": 163559943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507698
    },
    {
        "content": "<p>so we want a label for RLS 2.0 that would simultaneously not scare away contributors from RLS 2.0 but also would not steal potential contributors to RLS 1.0 ?</p>",
        "id": 163559984,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555507732
    },
    {
        "content": "<p>(that's assuming we <em>do</em> want to run in parallel; which is what <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> asked above...)</p>",
        "id": 163560052,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555507791
    },
    {
        "content": "<p>Well, before we go there, let's ask this question:</p>\n<p>Do we want to be doing maintenance and improvements to the existing RLS?</p>\n<p>If so, I think we need to make good plans for doing that.</p>",
        "id": 163560059,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507795
    },
    {
        "content": "<p>I <em>believe</em> there is also clear path to improve RLS-rustc by putting more work into pipelining and which can also benefit rustc (with our current incremental/on-demand setup)</p>",
        "id": 163560063,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555507797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> let me ask another question :)</p>",
        "id": 163560138,
        "sender_full_name": "matklad",
        "timestamp": 1555507822
    },
    {
        "content": "<p>Can it be the case that, for average user, rls2 is already more useful than rls?</p>",
        "id": 163560161,
        "sender_full_name": "matklad",
        "timestamp": 1555507845
    },
    {
        "content": "<p>I think there are definitely users for which this is the case</p>",
        "id": 163560182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507863
    },
    {
        "content": "<p>I think the answer is no (actually, I think yes, but I am biased), but it could be pretty close</p>",
        "id": 163560196,
        "sender_full_name": "matklad",
        "timestamp": 1555507869
    },
    {
        "content": "<p>If we could <em>measure</em> this, that should inform the strategy better</p>",
        "id": 163560221,
        "sender_full_name": "matklad",
        "timestamp": 1555507893
    },
    {
        "content": "<p>Yes. So this is an interesting thought.</p>",
        "id": 163560245,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507913
    },
    {
        "content": "<p>When we were writing up the roadmap, I remember struggling a bit with what to say about our RLS strategy</p>",
        "id": 163560307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507933
    },
    {
        "content": "<p>It felt to me at that time that we had made a kind of momentous decision in the all hands</p>",
        "id": 163560322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507947
    },
    {
        "content": "<p>without really admitting it to ourselves</p>",
        "id": 163560331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507955
    },
    {
        "content": "<p>or doing widespread consultation</p>",
        "id": 163560334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507959
    },
    {
        "content": "<p>in terms of calling something RLS 2.0</p>",
        "id": 163560343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507967
    },
    {
        "content": "<p>I'm not sure lots of bikeshedding would've helped (in terms of speed/initiative)</p>",
        "id": 163560381,
        "sender_full_name": "detrumi",
        "timestamp": 1555507995
    },
    {
        "content": "<p>I mean we talked about it :) but there is a kind of \"whole product\" aspect to this that feels a bit beyond the compiler team, in some sense</p>",
        "id": 163560390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555507999
    },
    {
        "content": "<p>Well, it's not so much about the technical design or even the <em>name</em></p>",
        "id": 163560416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508011
    },
    {
        "content": "<p>But IDE  support is very important to the rust project</p>",
        "id": 163560440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508030
    },
    {
        "content": "<p>Well for Rust, 2.0 can mean “is never going to arrive”</p>",
        "id": 163560444,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555508030
    },
    {
        "content": "<p>100% agree. Descisions on all-hands were very ad-hoc, and with zero consultation with wider commnunity</p>",
        "id": 163560463,
        "sender_full_name": "matklad",
        "timestamp": 1555508039
    },
    {
        "content": "<p>if we could tackle this from a slightly different angle - what are the pros/cons of commiting to either of the RLSes?</p>",
        "id": 163560531,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508054
    },
    {
        "content": "<p>does running both in parallel bring us net positive?</p>",
        "id": 163560548,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508066
    },
    {
        "content": "<p>I agree that immediate architecture of RLS 1.0 is limiting, whereas I imagine long-term investing a lot of work in the RLS 2.0 infra means we have two compilers</p>",
        "id": 163560579,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508094
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>  could we focus more on the sharing/librarification? Would that bring us some gains and limit the duplication of effort somehow?</p>",
        "id": 163560622,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508127
    },
    {
        "content": "<p>I imagine working directly on RLS 1.0 would mean more benefit to the actual rustc in terms of making it more IDE-friendly</p>",
        "id": 163560704,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508174
    },
    {
        "content": "<p>I guess, we already are focusing on sharing: chalk is shared, I am trying to extract rustc-lexer rigtht now, and, hopefully, tommorrow <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> will come up with plan of extracting the name resolution</p>",
        "id": 163560720,
        "sender_full_name": "matklad",
        "timestamp": 1555508194
    },
    {
        "content": "<p>It doesn't feel like those efforts directly help RLS 1.0 though</p>",
        "id": 163560888,
        "sender_full_name": "detrumi",
        "timestamp": 1555508331
    },
    {
        "content": "<blockquote>\n<p>100% agree. Descisions on all-hands were very ad-hoc, and with zero consultation with wider commnunity</p>\n</blockquote>\n<p>I'm trying to think what this consultation might look like.</p>",
        "id": 163560892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508335
    },
    {
        "content": "<p>I think there are two angles here</p>",
        "id": 163560921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508353
    },
    {
        "content": "<p>One question is what <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> raised -- what features do users want, and on what range of codebases?</p>",
        "id": 163560981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508399
    },
    {
        "content": "<p>(Sorry, not ignoring the library comments, just continuing to think aloud)</p>",
        "id": 163561081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508445
    },
    {
        "content": "<p>I'm not entirely sure what my second question was :)</p>",
        "id": 163561193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508526
    },
    {
        "content": "<p>well, it'd be good to think what benefit do users have from using the either</p>",
        "id": 163561246,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508577
    },
    {
        "content": "<p>hm, I guess this duplicates the question what features do users want</p>",
        "id": 163561297,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508612
    },
    {
        "content": "<p>Should we run some kind of survey among users who tried both rls and rust-analyzer?</p>",
        "id": 163561306,
        "sender_full_name": "matklad",
        "timestamp": 1555508620
    },
    {
        "content": "<p>I was thinking about that</p>",
        "id": 163561316,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508628
    },
    {
        "content": "<p>Should we ask people on IRLO about all of that?</p>",
        "id": 163561319,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508628
    },
    {
        "content": "<p>It's the obvious next step, if that's the question we're trying to answer</p>",
        "id": 163561372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508643
    },
    {
        "content": "<p>I'm pretty sure people will mention RLS 1.0 as being unbearably sluggish <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 163561389,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508652
    },
    {
        "content": "<p>If we were going to do that, we would want to work in consultation with a few others (e.g., on the community team) that have experience drawing up surveys</p>",
        "id": 163561403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508664
    },
    {
        "content": "<p>But it'd be good to try and brainstorm what info precisely we're looking for</p>",
        "id": 163561417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508676
    },
    {
        "content": "<p>What would we do with those results? I think we'll still be in the same situation</p>",
        "id": 163561458,
        "sender_full_name": "detrumi",
        "timestamp": 1555508705
    },
    {
        "content": "<p>e.g., trying to tease out -- perf is part of it, but also like \"what kinds of codebases\" (how many crates, workspaces, how much is it stable/nightly features), what IDE features do people use (completions, jump to def, not sure what else there is), what do they try to do and it doesn't work?</p>",
        "id": 163561479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508733
    },
    {
        "content": "<p>Because RLS 2.0 is still far off from going all the way with reporting compiler errors</p>",
        "id": 163561484,
        "sender_full_name": "detrumi",
        "timestamp": 1555508734
    },
    {
        "content": "<p>Well, if it happens that a feature X is the main reason 1.0 is used and not 2.0 then it might give us an idea where 2.0 needs to be improved</p>",
        "id": 163561485,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508735
    },
    {
        "content": "<p>(go to symbol is another big one)</p>",
        "id": 163561509,
        "sender_full_name": "detrumi",
        "timestamp": 1555508759
    },
    {
        "content": "<p>it's great that 2.0 doesn't need Cargo project layout (something I wanted to work on for 1.0)</p>",
        "id": 163561568,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508774
    },
    {
        "content": "<p>Well, a hypothetical fast path is that everyone says that rls2 works better right now, and, if that's the case, we can expedite shipping by implementing rustc-out-of-process in RLS1 and than merging it with RLS2</p>",
        "id": 163561581,
        "sender_full_name": "matklad",
        "timestamp": 1555508783
    },
    {
        "content": "<blockquote>\n<p>what do they try to do and it doesn't work?</p>\n</blockquote>\n<p>specifically asking: \"What code base (or feature) did you stop using IDE X with\" might be good for that.</p>",
        "id": 163561601,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555508802
    },
    {
        "content": "<blockquote>\n<p>What would we do with those results? I think we'll still be in the same situation</p>\n</blockquote>\n<p>a good question :) it seems like useful data whatever we do, but it is good to think a bit further ahead. I thnk we are considering a few things:</p>\n<ul>\n<li>Should we just focus exclusively on a rust-analyzer like approach, in order to get a responsive IDE architecture out as quickly as possible? How long will it take to get RA to cover the features people want, and how much \"reconciliation work\" are we committed ourselves to in that case? (Since we all agree we don't want to maintain two compilers forever)</li>\n<li>How do we prioritize the work on RLS and rust-analyzer, assuming we maintain them both</li>\n</ul>",
        "id": 163561646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508841
    },
    {
        "content": "<blockquote>\n<p>Well, a hypothetical fast path is that everyone says that rls2 works better right now, and, if that's the case, we can expedite shipping by implementing rustc-out-of-process in RLS1 and than merging it with RLS2</p>\n</blockquote>\n<p>I don't quite follow this</p>",
        "id": 163561725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508883
    },
    {
        "content": "<p>but I think it's kind of the same thing I just said</p>",
        "id": 163561743,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508902
    },
    {
        "content": "<p>If we're able to think of a fast path from where we're at right now, I think we should just follow that (but maybe I'm biased)</p>",
        "id": 163561787,
        "sender_full_name": "detrumi",
        "timestamp": 1555508935
    },
    {
        "content": "<blockquote>\n<p>I don't quite follow this</p>\n</blockquote>\n<p>There's two points:</p>\n<ul>\n<li>if rls2 is useful, we should ship it</li>\n<li>I think that we can relatively easy merge current archictecture of rls with rls2, if we do \"out of process rustc\" refactoring</li>\n</ul>",
        "id": 163561843,
        "sender_full_name": "matklad",
        "timestamp": 1555508963
    },
    {
        "content": "<p>what do we specifically mean by out of process rustc here?</p>",
        "id": 163561878,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555508989
    },
    {
        "content": "<p>I guess the second half is what I don't understand :)</p>",
        "id": 163561884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555508992
    },
    {
        "content": "<p>in the RLS case, we do it to generate save-analysis artifacts which tie into the whole SA/rls-analysis architecture</p>",
        "id": 163561950,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509010
    },
    {
        "content": "<p>so I'm not sure how that's applicable rn to rls 2.0</p>",
        "id": 163561965,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509026
    },
    {
        "content": "<p>If we can generate save-analysis for current state of the world by just shelling out to Cargo, we can share the infra that transformes save-analysis into LSP between RLS 1 and 2.</p>",
        "id": 163562065,
        "sender_full_name": "matklad",
        "timestamp": 1555509092
    },
    {
        "content": "<p>(so fyi I have another call in 9 minutes (on the hour))</p>",
        "id": 163562075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509101
    },
    {
        "content": "<p>maybe we should just make a proper release of RA and see how many people are interested? so far, it's been kind of stealthy and has never had a release that said \"this might actually be useful for you\", right?</p>",
        "id": 163562084,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1555509109
    },
    {
        "content": "<p>(maybe after Chalk integration lands ;)</p>",
        "id": 163562159,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1555509133
    },
    {
        "content": "<p>That is, we can do sort-of racer/RLS setup, but with rls2/rls</p>",
        "id": 163562169,
        "sender_full_name": "matklad",
        "timestamp": 1555509140
    },
    {
        "content": "<p>I think I'm biased but I believe RA is very popular right now, no?</p>",
        "id": 163562186,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509149
    },
    {
        "content": "<p>Maybe, yeah, but I think we have to be cautious about branding. (Regarding a release.)</p>",
        "id": 163562201,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509160
    },
    {
        "content": "<p>People will want to know what the plan is</p>",
        "id": 163562206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509166
    },
    {
        "content": "<p>And we should have an answer :)</p>",
        "id": 163562215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509172
    },
    {
        "content": "<p>if it's not, I'm afraid 1.0 could be considered dead by now, even if it's used by a lot of the people thanks to rustup xd</p>",
        "id": 163562219,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509173
    },
    {
        "content": "<p>yeah, I don't mean it should be branded as \"RLS 2\", it should be clear that it's still an experiment</p>",
        "id": 163562237,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1555509185
    },
    {
        "content": "<p>so I'm curious about the 1.0-2.0 bridge and would love to talk more to <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> about it</p>",
        "id": 163562262,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509204
    },
    {
        "content": "<p>yes, that's an interesting thought I hadn't heard before</p>",
        "id": 163562275,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509214
    },
    {
        "content": "<p>this was an interesting discussion, even if we didn't really get to the original agenda :)</p>",
        "id": 163562303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509232
    },
    {
        "content": "<p>it'd be good to also talk to <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> and <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> at some point regarding the rustc arch and if they have a vision what to do next (sorry for not pinging you before!)</p>",
        "id": 163562350,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509243
    },
    {
        "content": "<p>I guess I used the wrong words all the previos times I've tried to articulate the idea :)</p>",
        "id": 163562362,
        "sender_full_name": "matklad",
        "timestamp": 1555509249
    },
    {
        "content": "<p>I think my current feeling is roughly this:</p>\n<ul>\n<li>a survey is something we might consider</li>\n<li>we really need to spend some more time getting on the same page about the overall plan</li>\n</ul>\n<p>towards the second point, I could see value in trying to articulate out the options in more detail.</p>",
        "id": 163562418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509289
    },
    {
        "content": "<p>so to slowly start summing it up, we'd love to have more data</p>",
        "id": 163562420,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509291
    },
    {
        "content": "<p>=&gt; we need to do a survey and consult with more people?</p>",
        "id": 163562431,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509303
    },
    {
        "content": "<p>in particular, I think it'd be nice to be thinking beyond RLS + Rust-analyzer, and thinking a bit about the \"incremental rustc\" evolution</p>",
        "id": 163562442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509311
    },
    {
        "content": "<p>I also think we should think about how/when to involve the wider team + community (beyond compiler team)</p>",
        "id": 163562482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509328
    },
    {
        "content": "<p>Doing a survey also gives people the expectation that we'll listen to the result, and that might turn out to be problematic implementation-wise</p>",
        "id": 163562503,
        "sender_full_name": "detrumi",
        "timestamp": 1555509340
    },
    {
        "content": "<p>Well it's not a  \"what do you think we should do\" type of survey here, so I think we're safe on that front</p>",
        "id": 163562592,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509377
    },
    {
        "content": "<p>rather collect people's experiences and figure out what might be some options/problems we didn't see</p>",
        "id": 163562620,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509399
    },
    {
        "content": "<p>Maybe the thing to do is to think about action items. I see a few things that might be useful to give overall context</p>\n<ul>\n<li>sketch out what a survey might look like -- what information do we want?</li>\n<li>describe RLS 'roadmap':<br>\n    - as below</li>\n<li>describe the rust-analyzer 'roadmap':<br>\n    - what features work now, what shortcomings<br>\n    - what integrations we are working on<br>\n    - what integrations we foresee in the future</li>\n</ul>\n<p>?</p>",
        "id": 163562814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509523
    },
    {
        "content": "<p>I'm not imagining very long 'roadmaps', just some bullets</p>",
        "id": 163562834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509538
    },
    {
        "content": "<p>anyway, I gotta go, I'll try to follow on async</p>",
        "id": 163562871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509560
    },
    {
        "content": "<p>apart from roadmaps, it'd be good to maybe figure out a couple of approaches in more detail and what would it mean</p>",
        "id": 163562877,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509563
    },
    {
        "content": "<p>i'm torn about whether the roadmap(s) would be useful in constructing the survey</p>",
        "id": 163562888,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555509571
    },
    {
        "content": "<p>I guess a very <em>simple</em> action item is to summarize some of this conversaton :)</p>",
        "id": 163562891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509575
    },
    {
        "content": "<blockquote>\n<p>apart from roadmaps, it'd be good to maybe figure out a couple of approaches in more detail and what would it mean</p>\n</blockquote>\n<p>yeah this is kind of what I was trying to do</p>",
        "id": 163562904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509584
    },
    {
        "content": "<p>or if the survery results useful in constructing the roadmaps</p>",
        "id": 163562906,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555509586
    },
    {
        "content": "<p>i'm not sure if roadmap is the word I wanted</p>",
        "id": 163562914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509590
    },
    {
        "content": "<p>I was going to say \"skech out various possible plans and how they would work\"</p>",
        "id": 163562930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509600
    },
    {
        "content": "<p>but as I tried to enumerate what those plans were, I thought maybe they would be constructed by starting from information about the existing approaches? but maybe not</p>",
        "id": 163563006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509619
    },
    {
        "content": "<p>that looks reasonable</p>",
        "id": 163563101,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509684
    },
    {
        "content": "<p>thanks everybody!</p>",
        "id": 163563113,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509692
    },
    {
        "content": "<p>and please note down things at <a href=\"https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ\">https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ</a> if you can, whether it's your idea what is a good action item from now on (I guess putting it to words is the biggest hurdle?)</p>",
        "id": 163563141,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509716
    },
    {
        "content": "<p>seems clear we need to have another discussion or two like this :)</p>",
        "id": 163563199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509730
    },
    {
        "content": "<p>or if you'd like to sum it up or highlight a particular point of this convo</p>",
        "id": 163563205,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509735
    },
    {
        "content": "<blockquote>\n<p>seems clear we need to have another discussion or two like this :)</p>\n</blockquote>\n<p>should I create a doodle for next week or should we first do the survey?</p>",
        "id": 163563246,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509757
    },
    {
        "content": "<p>I don't think we should block on doing the survey, it'll take some time to craft; I think it'd make sense to do a bit of prep work before we talk again of some kind though.</p>",
        "id": 163563320,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509815
    },
    {
        "content": "<p>I think trying to elaborate out possible plans and what the challenges will be with each one is a good idea</p>",
        "id": 163563341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509829
    },
    {
        "content": "<p>maybe we can collaboratively do that</p>",
        "id": 163563406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509850
    },
    {
        "content": "<blockquote>\n<p>or if you'd like to sum it up or highlight a particular point of this convo</p>\n</blockquote>\n<p>if nothing else, making sure all the <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> -labelled messages are reflected in the notes is a good heuristic.</p>",
        "id": 163563411,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555509851
    },
    {
        "content": "<p>yeah, today's convo were unstructured.... Should  we create a brainstorming paper docs or somehting like that?</p>",
        "id": 163563418,
        "sender_full_name": "matklad",
        "timestamp": 1555509854
    },
    {
        "content": "<p>My bad, I should've created a better agenda beforehand :(</p>",
        "id": 163563438,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555509873
    },
    {
        "content": "<p>I think we need a paper doc where we can start to sketch out the plans, and leave comments for one another, etc</p>",
        "id": 163563444,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509877
    },
    {
        "content": "<blockquote>\n<p>My bad, I should've created a better agenda beforehand :(</p>\n</blockquote>\n<p>no worries, it turned out quite productive I think :) it seems like we were all sort of unaware of how much uncertainty we had</p>",
        "id": 163563462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1555509898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> I think we are <strong>all</strong> genuinely don't know what we are doing</p>",
        "id": 163563502,
        "sender_full_name": "matklad",
        "timestamp": 1555509931
    },
    {
        "content": "<p>:)</p>",
        "id": 163563510,
        "sender_full_name": "matklad",
        "timestamp": 1555509936
    },
    {
        "content": "<p>also, unstructured does not mean bad, it was productive!</p>",
        "id": 163563583,
        "sender_full_name": "matklad",
        "timestamp": 1555509968
    },
    {
        "content": "<p>A short agenda is better than following the wrong agenda</p>",
        "id": 163563605,
        "sender_full_name": "detrumi",
        "timestamp": 1555509995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> I'd love to chat about 1-2 bridge later toady, if that's possible?</p>",
        "id": 163563810,
        "sender_full_name": "matklad",
        "timestamp": 1555510155
    },
    {
        "content": "<p>aaaaaaaaaaah this is too much discussion to  read :(</p>",
        "id": 163563813,
        "sender_full_name": "eddyb",
        "timestamp": 1555510159
    },
    {
        "content": "<p>I have to go right now but I just went through all the mentions over the past few months, in case anything important was forgotten</p>",
        "id": 163563864,
        "sender_full_name": "eddyb",
        "timestamp": 1555510200
    },
    {
        "content": "<p>(and saw I was pinged here)</p>",
        "id": 163563915,
        "sender_full_name": "eddyb",
        "timestamp": 1555510206
    },
    {
        "content": "<blockquote>\n<p>aaaaaaaaaaah this is too much discussion to  read :(</p>\n</blockquote>\n<p>Uses the <a href=\"https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Meeting-notes-RLS-1.0-2.0-brandingstrategy--AbbU0brN20uW8EHVrWwq50MEAg-xBajGKDvnVoyzJZUGSzhZ\">notes</a> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 163564785,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555510815
    },
    {
        "content": "<p>oh this is a meeting, not random discussion?</p>",
        "id": 163564800,
        "sender_full_name": "eddyb",
        "timestamp": 1555510833
    },
    {
        "content": "<p>the topic didn't make it clear :P</p>",
        "id": 163564808,
        "sender_full_name": "eddyb",
        "timestamp": 1555510840
    },
    {
        "content": "<p>We started the meeting in the same topic as the planning of said meeting, might not have been the best option for those reading back afterwards</p>",
        "id": 163564899,
        "sender_full_name": "detrumi",
        "timestamp": 1555510913
    },
    {
        "content": "<p>oh, for other meetings there are usually separate topics</p>",
        "id": 163565367,
        "sender_full_name": "eddyb",
        "timestamp": 1555511195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I promised you something so I opened inkscape, and, well, here's a sneak peek <a href=\"/user_uploads/4715/eyd5S8HPZRLlbY6QANll4SWq/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/eyd5S8HPZRLlbY6QANll4SWq/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/eyd5S8HPZRLlbY6QANll4SWq/pasted_image.png\"></a></div>",
        "id": 163565414,
        "sender_full_name": "eddyb",
        "timestamp": 1555511225
    },
    {
        "content": "<p>I'll either try to make it nice or do it in a Markdown table</p>",
        "id": 163565430,
        "sender_full_name": "eddyb",
        "timestamp": 1555511235
    },
    {
        "content": "<blockquote>\n<p>We started the meeting in the same topic as the planning of said meeting, might not have been the best option for those reading back afterwards</p>\n</blockquote>\n<p>I knew there was some reason my spidey-sense was tingling when we didn't make a fresh topic</p>",
        "id": 163565573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1555511310
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> yes please (sorry, didn't see the message)</p>",
        "id": 163575346,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555517264
    },
    {
        "content": "<p>Let's make a stream for it ... somewhere? I guess rls2.0 might be a better fit?</p>",
        "id": 163575452,
        "sender_full_name": "matklad",
        "timestamp": 1555517299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> sounds good!</p>",
        "id": 163576376,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1555517885
    },
    {
        "content": "<p>moved to <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/RLS.201.2E0.20--.20RLS.202.2E0.20bridge\" title=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/RLS.201.2E0.20--.20RLS.202.2E0.20bridge\">https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/RLS.201.2E0.20--.20RLS.202.2E0.20bridge</a></p>",
        "id": 163576400,
        "sender_full_name": "matklad",
        "timestamp": 1555517911
    },
    {
        "content": "<p>OK <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> -- so, right, out of process works now :)</p>",
        "id": 176007003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568814914
    },
    {
        "content": "<p>(Separate question: Should we have a Zulip stream for the rls, btw?)</p>",
        "id": 176007012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568814926
    },
    {
        "content": "<p>Yes <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 176007017,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568814930
    },
    {
        "content": "<p>Anyway I didn't quite follow whether one can work on the RLS w/ (e.g.) a nightly rustc or not</p>",
        "id": 176007037,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568814948
    },
    {
        "content": "<p>uh, I feel like we come back to the old problems again of compiler/rls/WG rls 2.0 <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 176007040,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568814951
    },
    {
        "content": "<p>either works for me, we can stay here</p>",
        "id": 176007046,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568814959
    },
    {
        "content": "<p>yeah, I think <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> and I are both not super comfortable with that name</p>",
        "id": 176007094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568814967
    },
    {
        "content": "<p>yeah  I was just going to say that (about compiler/rls/rls2.0)</p>",
        "id": 176007097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568814970
    },
    {
        "content": "<p>but for now let's just chat and stop moving around :\")</p>",
        "id": 176007100,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568814975
    },
    {
        "content": "<p>let's get back to that later <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 176007122,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568814992
    },
    {
        "content": "<p>(though one of the things I would like us to talk about is trying to unify our \"IDE story\", which is related to the naming question)</p>",
        "id": 176007129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815001
    },
    {
        "content": "<p>out of process works right now - the support has to be compiled in and by default is turned off in Rust tree and in the separate repository</p>",
        "id": 176007142,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815017
    },
    {
        "content": "<p>this is done because we're currently using Tokio and the async stuff for the communication</p>",
        "id": 176007194,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815063
    },
    {
        "content": "<p>using JSON-RPC over IPC (UDS on Unix, named pipes on Windows)</p>",
        "id": 176007205,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815077
    },
    {
        "content": "<p>ok</p>",
        "id": 176007299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815121
    },
    {
        "content": "<p>not sure if this is premature optimization - I wanted to avoid spawning a thread and blocking on each connection</p>",
        "id": 176007302,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815126
    },
    {
        "content": "<p>and felt like latency would be a problem in this push to decrease latency as much as we can</p>",
        "id": 176007312,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815140
    },
    {
        "content": "<p>each connection == running rustc?</p>",
        "id": 176007314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815141
    },
    {
        "content": "<p>yes</p>",
        "id": 176007328,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815149
    },
    {
        "content": "<p>ok. seems like it may be premature to me in that case</p>",
        "id": 176007362,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815178
    },
    {
        "content": "<p>just because the overhead of running rustc is high enough</p>",
        "id": 176007367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815180
    },
    {
        "content": "<p>but right now it's not really optimal as well, since we spawn the tokio runtime, run the thing, shutdown the runtime</p>",
        "id": 176007368,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815181
    },
    {
        "content": "<p>so it's almost worst of two worlds <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span> but I imagined we can later set up one server for that</p>",
        "id": 176007397,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815199
    },
    {
        "content": "<p>how much data goes over this connection?</p>",
        "id": 176007414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815203
    },
    {
        "content": "<p>or we can just spawn threads and block on the connection</p>",
        "id": 176007448,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815206
    },
    {
        "content": "<p>I guess the VFS primarily?</p>",
        "id": 176007461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815209
    },
    {
        "content": "<p>also save-analysis output?</p>",
        "id": 176007490,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815219
    },
    {
        "content": "<p>save-analysis would be the biggest one, yes</p>",
        "id": 176007505,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815229
    },
    {
        "content": "<p>we serialize to a JSON - effectively send SA index file contents</p>",
        "id": 176007523,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815251
    },
    {
        "content": "<p>and send that over the JSON-RPC</p>",
        "id": 176007551,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815271
    },
    {
        "content": "<p>I think it's less than 5 MB in most cases</p>",
        "id": 176007566,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815284
    },
    {
        "content": "<p>obviously depends on the crates - winapi is considerably bigger for example (don't have numbers rn)</p>",
        "id": 176007584,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815305
    },
    {
        "content": "<p>OK. Well, the details of how it's setup don't seem like the most important thing.</p>",
        "id": 176007597,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815314
    },
    {
        "content": "<p>I guess we'll just have to measure</p>",
        "id": 176007654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815329
    },
    {
        "content": "<p>I do suspect a simple setup would suffice</p>",
        "id": 176007672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815341
    },
    {
        "content": "<p>I measured the performance overhead of doing this in the out-of-process way</p>",
        "id": 176007691,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815355
    },
    {
        "content": "<p>nothing big, just a couple warm runs on some medium sized projects</p>",
        "id": 176007705,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815368
    },
    {
        "content": "<p>and it's &lt;5-10% slower</p>",
        "id": 176007742,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815394
    },
    {
        "content": "<p>performance overhead of tokio-runtime + added rls process?</p>",
        "id": 176007759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815415
    },
    {
        "content": "<p>yes</p>",
        "id": 176007765,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815423
    },
    {
        "content": "<p>I imagine that means compared to running rust <em>in</em> process, right?</p>",
        "id": 176007770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815429
    },
    {
        "content": "<p>start to finish for a couple of primary crate targets in a workspace</p>",
        "id": 176007776,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815440
    },
    {
        "content": "<p>that is, you're not comparing the cost of different forms of out-of-process</p>",
        "id": 176007815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815444
    },
    {
        "content": "<p>yes</p>",
        "id": 176007824,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815449
    },
    {
        "content": "<p>sorry</p>",
        "id": 176007830,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815454
    },
    {
        "content": "<p>makes sense</p>",
        "id": 176007838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815466
    },
    {
        "content": "<p>that's &lt;5-10% slower when running RLS out-of-process comparing to the current mode where we run things in-process</p>",
        "id": 176007841,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815469
    },
    {
        "content": "<p>which sort of makes sense, but I'm mostly happy about potentially dropping the non-obvious locking environment setup</p>",
        "id": 176007876,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815502
    },
    {
        "content": "<p>and there seems to be a memory leak - either in Cargo or rustc?</p>",
        "id": 176007899,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815525
    },
    {
        "content": "<p>let me link an issue</p>",
        "id": 176007905,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815530
    },
    {
        "content": "<p>(which running this out-of-process basically \"fixes\")</p>",
        "id": 176007915,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815548
    },
    {
        "content": "<p>and that 5-10% overhead includes the time to start up tokio runtime (as well as run rustc and serialize and transmit the save-analysis  data), right?</p>",
        "id": 176007916,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815550
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rls/issues/1188\" target=\"_blank\" title=\"https://github.com/rust-lang/rls/issues/1188\">https://github.com/rust-lang/rls/issues/1188</a></p>",
        "id": 176007968,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815566
    },
    {
        "content": "<p>I guess the running rustc was included in the baseline, of course...</p>",
        "id": 176007977,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815573
    },
    {
        "content": "<p>yes, entirely start to finish</p>",
        "id": 176007978,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815573
    },
    {
        "content": "<p>rn we spawn Tokio runtime before each rustc invocation and then tear it down which is less than ideal</p>",
        "id": 176008000,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815593
    },
    {
        "content": "<p>I didn't actually know that the tokio runtime was expensive</p>",
        "id": 176008004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815599
    },
    {
        "content": "<p>you probably could measure that on its own, if you wanted</p>",
        "id": 176008018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815614
    },
    {
        "content": "<p>the factors important here is that save-analysis is serialized and deserialized over the wire</p>",
        "id": 176008020,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815616
    },
    {
        "content": "<p>(by adding the startup/shutdown of tokio to the <em>in-process</em> RLS benchmarking)</p>",
        "id": 176008046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815637
    },
    {
        "content": "<p>also lock contention on the environment (each rustc instance wants a dedicated access to the <code>env</code>)</p>",
        "id": 176008049,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815638
    },
    {
        "content": "<p>that's a fair point!</p>",
        "id": 176008070,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815658
    },
    {
        "content": "<p>we could try that</p>",
        "id": 176008072,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815663
    },
    {
        "content": "<p>but I'm also willing to believe that its expensive. :)</p>",
        "id": 176008083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815673
    },
    {
        "content": "<p>we could also spawn a dedicated IPC server thread and run it all there - that'd avoid the startup/teardown on each execution</p>",
        "id": 176008140,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815694
    },
    {
        "content": "<blockquote>\n<p>(which running this out-of-process basically \"fixes\")</p>\n</blockquote>\n<p>are you satisfied with this \"fix\"? any thoughts or ideas of what the problem was before? something internal to rls?</p>",
        "id": 176008168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815711
    },
    {
        "content": "<p>could it have been (e.g.) rustc interning pools or other static data?</p>",
        "id": 176008179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815721
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> also had a point - we could just spawn a thread and do a blocking I/O with JSON separated with newlines to drop the async ecosystem</p>",
        "id": 176008181,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815723
    },
    {
        "content": "<p>(personally, I'd prefer something like that, just because it seems simpler and has fewer deps, but I don't care very much)</p>",
        "id": 176008214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815747
    },
    {
        "content": "<p>(my personal experience has been that spawning threads is usually not a big thing, but I guess it will depend if we ever get to the point where we're doing these calls at a really fine-grained level)</p>",
        "id": 176008244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I didn't dig deep enough (started though) - I know that Cargo interners came up as the leaked \"source\" but didn't investigate fully so don't want to say anything for certain</p>",
        "id": 176008256,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815790
    },
    {
        "content": "<p>ok. Have you verified that this out-of-process work fixes the problem?</p>",
        "id": 176008319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815808
    },
    {
        "content": "<p>Or you are just hypothesizing?</p>",
        "id": 176008322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815810
    },
    {
        "content": "<p>It seems like a reasonable guess, to be clear, just wanted to be sure</p>",
        "id": 176008345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815827
    },
    {
        "content": "<p>hypothesizing unfortunately</p>",
        "id": 176008346,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815827
    },
    {
        "content": "<blockquote>\n<p>also lock contention on the environment (each rustc instance wants a dedicated access to the <code>env</code>)</p>\n</blockquote>\n<p>Does this imply that you cannot even have the invocations of <code>rustc</code> running in parallel, even if you <em>did</em> implement it via distinct spawned threads?</p>",
        "id": 176008359,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568815837
    },
    {
        "content": "<p>OK.</p>",
        "id": 176008360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yes, that's one of the reasons we wanted to pursue out-of-process compilation</p>",
        "id": 176008393,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815867
    },
    {
        "content": "<p>So now we can support multiple instances of rustc?</p>",
        "id": 176008415,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815889
    },
    {
        "content": "<p>(Are we taking advantage of that?)</p>",
        "id": 176008428,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815901
    },
    {
        "content": "<p>right now we cache the build plan by Cargo whenever something major happens (changed Cargo.{toml,lock} files, removed <code>/target</code> etc.) and executed these in serial fashion</p>",
        "id": 176008429,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815901
    },
    {
        "content": "<p>OK. It seems like that might well offset the 5-10% overhead</p>",
        "id": 176008448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815913
    },
    {
        "content": "<p>We're not taking advantage of that yet</p>",
        "id": 176008452,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815918
    },
    {
        "content": "<p>Was wondering if we could extract the graph processing logic that Cargo has out to a crate with <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span></p>",
        "id": 176008534,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815942
    },
    {
        "content": "<p>but didn't progress further</p>",
        "id": 176008561,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815956
    },
    {
        "content": "<p>Interesting. Might be worth looping in <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> (on vacation this week) and/or jsgf</p>",
        "id": 176008603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568815984
    },
    {
        "content": "<p>technically we could run <code>IPC_ENDPOINT=... cargo check</code></p>",
        "id": 176008608,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568815986
    },
    {
        "content": "<p>because this seems to relate to the \"cargo build plan\" support that more complex build systems want (e.g. bazel or what have you)</p>",
        "id": 176008626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568816002
    },
    {
        "content": "<p>I know that Cargo can emit build plans and we can leverage that as well</p>",
        "id": 176008717,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816049
    },
    {
        "content": "<p>anyway, very exciting that out-of-process is working -- what is next on your plate? (I'm going to hvae to run in a few minutes, fyi)</p>",
        "id": 176008721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568816053
    },
    {
        "content": "<p>I've been thinking about converging the IDE effort, finally</p>",
        "id": 176008747,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816081
    },
    {
        "content": "<p>since the query infra is now in place I was wondering if it'd be feasible to wrap the query system somehow out-of-process</p>",
        "id": 176008790,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816118
    },
    {
        "content": "<p>like - execute rustc but only really ask it to parse/nameres and then execute a single query and come back with results</p>",
        "id": 176008816,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816147
    },
    {
        "content": "<p>to probably rely less on save-analysis itself</p>",
        "id": 176008874,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816172
    },
    {
        "content": "<p>that sounds very experimental though</p>",
        "id": 176008905,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816197
    },
    {
        "content": "<p>I think this could help us look a bit more on how rustc itself could be changed internally rather than redoing the frontend?</p>",
        "id": 176008943,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816225
    },
    {
        "content": "<p>For example IIRC we can't change inputs in the rustc session from the query system PoV</p>",
        "id": 176008959,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816243
    },
    {
        "content": "<p>I know that <span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> also wanted to work on something similar for Rust REPL</p>",
        "id": 176008983,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816262
    },
    {
        "content": "<p>but apart from that I wanted to verify the memory leak issues, see if we can drop down Tokio and what would be the cost of that</p>",
        "id": 176009050,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816293
    },
    {
        "content": "<blockquote>\n<p>I've been thinking about converging the IDE effort, finally</p>\n</blockquote>\n<p>maybe <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> (and/or <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span>), you, and I (and whomever else) should try to schedule some time to think about this specifically?</p>",
        "id": 176009091,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568816338
    },
    {
        "content": "<p>I think it would be great if we could start to move towards a single \"framework\"</p>",
        "id": 176009129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568816365
    },
    {
        "content": "<p>though I'm not entirely sure what that means</p>",
        "id": 176009139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568816373
    },
    {
        "content": "<p>also right now tools are not available on tier 2 platforms due to proc macros and cross-compilation - while tangentially related, it'd reduce some development friction (for example for rls-data to switch to serde it had to manually expand the serde_derive code because x.py couldn't cope with multiple serde_derive available)</p>",
        "id": 176009145,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816376
    },
    {
        "content": "<p>well one crazy idea would be to investigate doing dot completion using the existing rustc query infra</p>",
        "id": 176009254,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816420
    },
    {
        "content": "<p>and honestly this would fix a lot of outstanding issues such as 'can't complete anything that needs type inference because of Racer'</p>",
        "id": 176009293,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816450
    },
    {
        "content": "<p>or type-checking expressions (which is really handy)</p>",
        "id": 176009311,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816465
    },
    {
        "content": "<p>catching up with conversation, but cargo definitelly leaked tons of strings for interning at one point</p>",
        "id": 176009341,
        "sender_full_name": "matklad",
        "timestamp": 1568816481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> I’m about to publish it in fact. :-)</p>",
        "id": 176009354,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1568816487
    },
    {
        "content": "<p>So yeah, still a lot of things we can tackle at first =)</p>",
        "id": 176009498,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816568
    },
    {
        "content": "<p>Maybe a bit (too?) specific question - when fixing save-analysis generation at <a href=\"https://github.com/rust-lang/rust/pull/64250#issuecomment-531521579\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64250#issuecomment-531521579\">https://github.com/rust-lang/rust/pull/64250#issuecomment-531521579</a> I was bit by missing typeck tables for a synthetic def</p>",
        "id": 176009594,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816637
    },
    {
        "content": "<p>which is an impl trait in return position</p>",
        "id": 176009635,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816643
    },
    {
        "content": "<blockquote>\n<p>technically we could run <code>IPC_ENDPOINT=... cargo check</code></p>\n</blockquote>\n<p>I am very pro this approach, as it allows to move <code>cargo</code> out of RLS, which seems like a huge source of complexity, and it also would work for rust-analyzer</p>",
        "id": 176009657,
        "sender_full_name": "matklad",
        "timestamp": 1568816656
    },
    {
        "content": "<p>(I was wondering if it's a bug that we don't have these? Clippy also hit some missing typeck tables where one would expect them IIRC at <a href=\"https://github.com/rust-lang/rust-clippy/pull/4545#issuecomment-532171307\" target=\"_blank\" title=\"https://github.com/rust-lang/rust-clippy/pull/4545#issuecomment-532171307\">https://github.com/rust-lang/rust-clippy/pull/4545#issuecomment-532171307</a>)</p>",
        "id": 176009755,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816725
    },
    {
        "content": "<p>I promoted the debug assertion to a regular one when using hir id and typeck tables but I'm wondering if it's causing more harm now than good <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 176009837,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816761
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> that's fair! I think that an extracted 'executor' crate would be also helpful, since I imagine things like Buck would want to be supported in similar vein</p>",
        "id": 176010172,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816920
    },
    {
        "content": "<p>but I agree, reducing coupling and code duplication would be great!</p>",
        "id": 176010239,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568816974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> let's find time for \"rls/rust-analyzer joint planning\" meeting: <a href=\"https://doodle.com/poll/t42575t79pbxmasa\" target=\"_blank\" title=\"https://doodle.com/poll/t42575t79pbxmasa\">https://doodle.com/poll/t42575t79pbxmasa</a></p>",
        "id": 176010713,
        "sender_full_name": "matklad",
        "timestamp": 1568817246
    },
    {
        "content": "<p>I'll be on vacation all of next week, but I'm probably not essential for the meeting <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 176010887,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568817364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> sorry for the off hours, I'm in the US timezone for a week</p>",
        "id": 176044223,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568839197
    },
    {
        "content": "<p>filled</p>",
        "id": 176044226,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568839201
    },
    {
        "content": "<p>rls/rust-analyzer meeting will happen later today: <a href=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NTNxdXU4MDQ0ZDFsZ2lkamk1NTcwcTY4dHVfMjAxOTA5MTlUMTQwMDAwWiA2dTVycnRjZTZscnR2MDdwZmkzZGFtZ2p1c0Bn&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com&amp;scp=ALL\" target=\"_blank\" title=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NTNxdXU4MDQ0ZDFsZ2lkamk1NTcwcTY4dHVfMjAxOTA5MTlUMTQwMDAwWiA2dTVycnRjZTZscnR2MDdwZmkzZGFtZ2p1c0Bn&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com&amp;scp=ALL\">https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NTNxdXU4MDQ0ZDFsZ2lkamk1NTcwcTY4dHVfMjAxOTA5MTlUMTQwMDAwWiA2dTVycnRjZTZscnR2MDdwZmkzZGFtZ2p1c0Bn&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com&amp;scp=ALL</a></p>\n<p>let me pre-emptively create a stream...</p>",
        "id": 176094441,
        "sender_full_name": "matklad",
        "timestamp": 1568896704
    },
    {
        "content": "<p>Note, the link above is wrong, the right one is this: </p>\n<p><a href=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NzZmMnRoYzQ2MnYxcDZnY28zcHA5cGhyaWsgNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com\" target=\"_blank\" title=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NzZmMnRoYzQ2MnYxcDZnY28zcHA5cGhyaWsgNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com\">https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NzZmMnRoYzQ2MnYxcDZnY28zcHA5cGhyaWsgNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com</a></p>",
        "id": 176100090,
        "sender_full_name": "matklad",
        "timestamp": 1568900453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 177056175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 177056553,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937758
    },
    {
        "content": "<p>I'm here</p>",
        "id": 177056557,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937761
    },
    {
        "content": "<p>So how goes</p>",
        "id": 177056582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937775
    },
    {
        "content": "<p>(also, cc <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> in case you're interested)</p>",
        "id": 177056592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937783
    },
    {
        "content": "<p>Nothing new on the RLS side in the recent days</p>",
        "id": 177056693,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937831
    },
    {
        "content": "<p>was in a bit of a flux due to the Colorado Gold Rust conference and travel</p>",
        "id": 177056719,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937846
    },
    {
        "content": "<p>Ah, yeah, ok</p>",
        "id": 177056764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937869
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/64659\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64659\">https://github.com/rust-lang/rust/issues/64659</a> is on my list for this week</p>",
        "id": 177056770,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937873
    },
    {
        "content": "<p>Did you see the issue we tagged you with in the compiler meeting?</p>",
        "id": 177056773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937875
    },
    {
        "content": "<p>I think that's the one</p>",
        "id": 177056783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937886
    },
    {
        "content": "<p>ok</p>",
        "id": 177056786,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937887
    },
    {
        "content": "<p>yeah</p>",
        "id": 177056796,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937899
    },
    {
        "content": "<p>so that's planned now, I believe I made the mistake of promoting a debug assertion to regular one close to beta cut-off and just realized that this might be in the current beta</p>",
        "id": 177056863,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937930
    },
    {
        "content": "<p>so the fix will probably need to be backported</p>",
        "id": 177056869,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937936
    },
    {
        "content": "<p>ok</p>",
        "id": 177056871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937938
    },
    {
        "content": "<p>although in <em>principle</em> that should be ok?</p>",
        "id": 177056888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937958
    },
    {
        "content": "<p>like, the debug-assertion <em>ought</em> to always be true...?</p>",
        "id": 177056910,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937973
    },
    {
        "content": "<p>the fix to the bug uncovered by the assertion promotion in itself should be backported</p>",
        "id": 177056917,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569937982
    },
    {
        "content": "<p>ok</p>",
        "id": 177056923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569937993
    },
    {
        "content": "<p>and not the demotion to debug assertion <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 177056940,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938011
    },
    {
        "content": "<p>need to fix the VS Code extension since it waited for 1.38 to land to fix the false positive 'unknown RLS configuration' warning we've been giving due to stable not supporting certain new configuration</p>",
        "id": 177057031,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938065
    },
    {
        "content": "<p>but 1.38 has landed so this is unblocked</p>",
        "id": 177057034,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938071
    },
    {
        "content": "<p>also because of it it'd be good to think of how we can manage the settings 'deprecation' wrt different toolchains in the RLS</p>",
        "id": 177057060,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938096
    },
    {
        "content": "<p>I don't quite know what you mean</p>",
        "id": 177057098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938131
    },
    {
        "content": "<p>since people will use one exact version of the extension and it comes with a set of 'supported' configurations, but the user can opt-in into different toolchains</p>",
        "id": 177057100,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938133
    },
    {
        "content": "<p>but that's a detail and should be discussed separately I believe</p>",
        "id": 177057111,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938146
    },
    {
        "content": "<p>briefly: since 1.38 we can now suppress a spurious warning in the VSCode</p>",
        "id": 177057178,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938172
    },
    {
        "content": "<p>ok</p>",
        "id": 177057206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938193
    },
    {
        "content": "<p>apart from that, next thing up would be to probably try and get rid of Tokio deps in the out-of-process scheme</p>",
        "id": 177057226,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938212
    },
    {
        "content": "<p>what do you plan to replace with?</p>",
        "id": 177057240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938225
    },
    {
        "content": "<p>or maybe just enable them and see if there's any meaningful cost in the CI/CD pipeline</p>",
        "id": 177057251,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938234
    },
    {
        "content": "<p>threads with blocking I/O based on JSONs per line</p>",
        "id": 177057271,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938245
    },
    {
        "content": "<p>ok ok</p>",
        "id": 177057277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938248
    },
    {
        "content": "<p>but I believe we also talked about it; just wanted to say what's up next</p>",
        "id": 177057295,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938264
    },
    {
        "content": "<p>yeah, hmm, maybe worth measuring -- though I somewhat favor a simpler approach just in general, because fewer deps can be useful</p>",
        "id": 177057299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938266
    },
    {
        "content": "<p>yep, whichever way you find best I guess</p>",
        "id": 177057313,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938277
    },
    {
        "content": "<p>yeah, will measure the overhead beforehand</p>",
        "id": 177057375,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938301
    },
    {
        "content": "<p>so yeah, that's it for me - sorry for the list being so short now <span aria-label=\"bow\" class=\"emoji emoji-1f647\" role=\"img\" title=\"bow\">:bow:</span></p>",
        "id": 177057445,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938357
    },
    {
        "content": "<p>no worries, I'm happy to have a bit of time to do reviews :)</p>",
        "id": 177057456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938367
    },
    {
        "content": "<p>I'd like us to make more progress on the \"bigger IDE story\" questions but I don't have much new to bring to the table there right now</p>",
        "id": 177057488,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938395
    },
    {
        "content": "<p>and I'm also glad we have a dedicated time slot to talk about it <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 177057490,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938396
    },
    {
        "content": "<p>Yes</p>",
        "id": 177057495,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938401
    },
    {
        "content": "<p>All set then?</p>",
        "id": 177057558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938413
    },
    {
        "content": "<p>yeah</p>",
        "id": 177057564,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938417
    },
    {
        "content": "<p><span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> sounds good</p>",
        "id": 177057576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938426
    },
    {
        "content": "<p>wrt bigger IDE story - that's a fair point, I believe it'd be good for me to focus on that as well</p>",
        "id": 177057591,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938434
    },
    {
        "content": "<p>I'll report back with any progress :)</p>",
        "id": 177057620,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938455
    },
    {
        "content": "<p>I didn't read the VFS discussion in detail but it seemed like there might be something there</p>",
        "id": 177057807,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569938584
    },
    {
        "content": "<p>that'd be a good first step, yes :)</p>",
        "id": 177057838,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1569938617
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 178194658,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147284
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span></p>",
        "id": 178194726,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147334
    },
    {
        "content": "<p>Hey there</p>",
        "id": 178194755,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147340
    },
    {
        "content": "<p>How are things?</p>",
        "id": 178194787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147354
    },
    {
        "content": "<p>I think the recent theme was fixing the fallout from the assertion promotion</p>",
        "id": 178194800,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147358
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/65353\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65353\">https://github.com/rust-lang/rust/pull/65353</a></p>",
        "id": 178194810,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147361
    },
    {
        "content": "<p>I feel the current approach is somewhat hacky wrt the nesting and the def/hir ids</p>",
        "id": 178194940,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147409
    },
    {
        "content": "<p>but things seems to be working</p>",
        "id": 178194951,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147419
    },
    {
        "content": "<p>hmm ok</p>",
        "id": 178194974,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147436
    },
    {
        "content": "<p>this awaits your approval and I'd like to nominate this for beta, since the breakage hit quite a bit of deps on beta still</p>",
        "id": 178194984,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147441
    },
    {
        "content": "<p>I hadn't seen that PR yet</p>",
        "id": 178194985,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147443
    },
    {
        "content": "<p>the first commit seems fine</p>",
        "id": 178195031,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147481
    },
    {
        "content": "<p>I'm not sure what <code>nest_tables</code> does</p>",
        "id": 178195035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147484
    },
    {
        "content": "<p>but that also \"seems fine\", I just have to look into the code a bit</p>",
        "id": 178195052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147499
    },
    {
        "content": "<p>the visitor has a 'current/local' view on the typeck tables, that's used to resolve a qpath</p>",
        "id": 178195180,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147572
    },
    {
        "content": "<p>originally we nested the tables when visiting nested bodies to update that</p>",
        "id": 178195215,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147603
    },
    {
        "content": "<p>but in this particular case we have a struct which doesn't have a body per se, but its member type has a definition defined under that struct instead</p>",
        "id": 178195260,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147634
    },
    {
        "content": "<p>because it's a qpath, we tried previously to resolve that using the old/stale tables</p>",
        "id": 178195320,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147654
    },
    {
        "content": "<p>so the new approach is rather than leaving the old tables, whenever we nest into a definition/body and can't find tables, we just use  empty ones instead</p>",
        "id": 178195346,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147681
    },
    {
        "content": "<p>ah ok</p>",
        "id": 178195349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147683
    },
    {
        "content": "<p>if that makes sense</p>",
        "id": 178195350,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147686
    },
    {
        "content": "<p>so the ICE was arising because <code>T::Assoc</code> was being resolved relative to the tables from <code>main</code>, you're saying</p>",
        "id": 178195374,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147705
    },
    {
        "content": "<p>(speaking specifically about the bug that unearthed this interaction)</p>",
        "id": 178195383,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147710
    },
    {
        "content": "<p>and I guess there is some logic that's like \"is there a key for this id\"</p>",
        "id": 178195387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147713
    },
    {
        "content": "<p>or someting</p>",
        "id": 178195393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147717
    },
    {
        "content": "<p>that was going wrong,..somehow</p>",
        "id": 178195395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147719
    },
    {
        "content": "<p>yes</p>",
        "id": 178195397,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147722
    },
    {
        "content": "<p>specifically the <code>T::Assoc</code> had a def path under <code>struct</code>, but we had tables for <code>main</code></p>",
        "id": 178195421,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147748
    },
    {
        "content": "<p>and since the IDs have <code>(root, local_key)</code> layout, it can easily provide to a key lookup mismatch by using a wrong local key (using a wrong point of reference, wrong def root)</p>",
        "id": 178195509,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147779
    },
    {
        "content": "<p>that's specifically what the debug assertion was about, which was promoted recently to a regular one</p>",
        "id": 178195531,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147793
    },
    {
        "content": "<p>ok, r+'d</p>",
        "id": 178195546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147803
    },
    {
        "content": "<p>great!</p>",
        "id": 178195594,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> will you be at RBR? I think so, right?</p>",
        "id": 178195625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147870
    },
    {
        "content": "<p>yes</p>",
        "id": 178195629,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147874
    },
    {
        "content": "<p>flying tomorrow</p>",
        "id": 178195701,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147894
    },
    {
        "content": "<p>ok great</p>",
        "id": 178195714,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147905
    },
    {
        "content": "<p>I think I gotta run early today</p>",
        "id": 178195717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147909
    },
    {
        "content": "<p>no worries</p>",
        "id": 178195724,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147915
    },
    {
        "content": "<p>but we can catch up a bit there, too :)</p>",
        "id": 178195728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147918
    },
    {
        "content": "<p>I'll be there</p>",
        "id": 178195731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571147920
    },
    {
        "content": "<p>I know, I'm speaking just before you <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 178195752,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147931
    },
    {
        "content": "<p>let's definitely do that, then</p>",
        "id": 178195782,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147954
    },
    {
        "content": "<p>apart from that we published a 0.7 version of the extension which fixed an annoying warning (fixed in RLS 1.38) and we introduced extension-side support for project layout</p>",
        "id": 178195810,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147981
    },
    {
        "content": "<p>I was w ondering if it'd be feasible to create a single Rust IDE extension but that's a topic for another time</p>",
        "id": 178195838,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571147999
    },
    {
        "content": "<p>and for completeness sake we tried to flesh out a potential rustc (v)fs design so the only thing left is to create and submit a patch</p>",
        "id": 178195938,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571148037
    },
    {
        "content": "<p>:)</p>",
        "id": 178195948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571148043
    },
    {
        "content": "<p>(in terms of unified IDE effort)</p>",
        "id": 178195952,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571148046
    },
    {
        "content": "<p>okay then, let's catch up during the event!</p>",
        "id": 178196114,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1571148132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> so</p>",
        "id": 179330214,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357268
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 179330221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357274
    },
    {
        "content": "<p>I'm currently working on <a href=\"https://github.com/rust-lang/rust/issues/65590\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65590\">https://github.com/rust-lang/rust/issues/65590</a> and I think I'll need some help</p>",
        "id": 179330251,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357297
    },
    {
        "content": "<p>OK</p>",
        "id": 179330294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357321
    },
    {
        "content": "<p>this is yet another ICE unearthed by the HIR ID validation when resolving qualified paths</p>",
        "id": 179330298,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357327
    },
    {
        "content": "<p>hopefully the last one</p>",
        "id": 179330315,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357342
    },
    {
        "content": "<p>We queued a crater run at <a href=\"https://github.com/rust-lang/rust/issues/65590#issuecomment-547391047\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65590#issuecomment-547391047\">https://github.com/rust-lang/rust/issues/65590#issuecomment-547391047</a> to see if there is any other fallout we should be looking at</p>",
        "id": 179330379,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357364
    },
    {
        "content": "<p>per <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s suggestion I also tried to run our internal test suite with <code>-Zsave-analysis</code> locally but didn't find anything</p>",
        "id": 179330423,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357396
    },
    {
        "content": "<p>but let's come back to the ICE in a second</p>",
        "id": 179330449,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357418
    },
    {
        "content": "<p>OK. I see the problem has to do with the more \"advanced\" lowerings done by things like async blocks?</p>",
        "id": 179330462,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357425
    },
    {
        "content": "<p>it seems so, from what I understand</p>",
        "id": 179330485,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357444
    },
    {
        "content": "<p>is save-analysis walking the AST, or HIR?</p>",
        "id": 179330500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357462
    },
    {
        "content": "<p>AST</p>",
        "id": 179330557,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357484
    },
    {
        "content": "<p>a simple reproduction is:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">Trait</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">T</span>::<span class=\"n\">Assoc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 179330569,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357494
    },
    {
        "content": "<p>it requires the <code>T: Trait</code> I guess</p>",
        "id": 179330585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357513
    },
    {
        "content": "<p>and <code>T::Assoc</code></p>",
        "id": 179330589,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357516
    },
    {
        "content": "<p>when we encounter <code>T::Assoc</code> we are looking it up at typeck tables for foo, so to speak</p>",
        "id": 179330602,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357525
    },
    {
        "content": "<p>Does this ICE occur with just <code>-Zsave-analysis</code>?</p>",
        "id": 179330623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357541
    },
    {
        "content": "<p>yes</p>",
        "id": 179330637,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357545
    },
    {
        "content": "<p>OK, so we can easily create a standalone test case then</p>",
        "id": 179330662,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357560
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">Assoc</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>I omitted that for brevity</p>",
        "id": 179330675,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357566
    },
    {
        "content": "<p>sure</p>",
        "id": 179330686,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357574
    },
    {
        "content": "<p>yep, working on a fix right now but not sure how best to tackle it tbh</p>",
        "id": 179330701,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357589
    },
    {
        "content": "<p>/me wonders if there would be value in adding a <code>-Z save-analysis</code> output target to <a href=\"http://play.rust-lang.org\" target=\"_blank\" title=\"http://play.rust-lang.org\">play.rust-lang.org</a></p>",
        "id": 179330716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572357599
    },
    {
        "content": "<p>seems plausible</p>",
        "id": 179330802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357616
    },
    {
        "content": "<p>there's a question whether we should consider this format for stabilization</p>",
        "id": 179330814,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357624
    },
    {
        "content": "<p>(if so)</p>",
        "id": 179330823,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357627
    },
    {
        "content": "<p>but also, it seems like we lack any tests targeting <code>-&gt; T::Assoc</code> in the async fn test base, eh?</p>",
        "id": 179330827,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357629
    },
    {
        "content": "<p>(since you said that running all tests with <code>-Zsave-analysis</code> didn't turn up anything)</p>",
        "id": 179330846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357640
    },
    {
        "content": "<blockquote>\n<p>there's a question whether we should consider this format for stabilization</p>\n</blockquote>\n<p>well, that seems like a distinct question</p>",
        "id": 179330866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357659
    },
    {
        "content": "<p>like, we can test without stabilizing</p>",
        "id": 179330893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357676
    },
    {
        "content": "<p>(play.rlo has other stuff that only works on nightly, like WASM)</p>",
        "id": 179330903,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572357684
    },
    {
        "content": "<blockquote>\n<p>/me wonders if there would be value in adding a <code>-Z save-analysis</code> output target to <a href=\"http://play.rust-lang.org\" target=\"_blank\" title=\"http://play.rust-lang.org\">play.rust-lang.org</a></p>\n</blockquote>\n<p>oh, I misread this anyway, I thought you meant CI</p>",
        "id": 179330921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357700
    },
    {
        "content": "<p>as for the bug itself</p>",
        "id": 179330937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357715
    },
    {
        "content": "<p>I guess I don't know what best approach is but</p>",
        "id": 179330987,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357723
    },
    {
        "content": "<p>there's Language Server Index Format (<a href=\"https://github.com/microsoft/language-server-protocol/issues/623\" target=\"_blank\" title=\"https://github.com/microsoft/language-server-protocol/issues/623\">https://github.com/microsoft/language-server-protocol/issues/623</a>) to consider as a \"stable\" API</p>",
        "id": 179330998,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357729
    },
    {
        "content": "<p>but we can continue about that later I imagine</p>",
        "id": 179331008,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357736
    },
    {
        "content": "<p>now <em>that</em>s interesting</p>",
        "id": 179331018,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357738
    },
    {
        "content": "<p>yes</p>",
        "id": 179331022,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357739
    },
    {
        "content": "<blockquote>\n<p>oh, I misread this anyway, I thought you meant CI</p>\n</blockquote>\n<p>/me is scared to add more passes to CI after seeing the dev reactions to NLL's compare-mode</p>",
        "id": 179331029,
        "sender_full_name": "pnkfelix",
        "timestamp": 1572357747
    },
    {
        "content": "<p>could imagine it being a non-blocking thing, sort of like toolstate</p>",
        "id": 179331086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357783
    },
    {
        "content": "<p>anyway, point is, ICEs in save-analysis pretty clearly affect the RLS</p>",
        "id": 179331100,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357791
    },
    {
        "content": "<p>let's not get <em>too</em> distracted tho</p>",
        "id": 179331112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357799
    },
    {
        "content": "<p>right now I'm trying a weird approach of checking if a function is async and if so, somehow try to get a parent id of body but that's not the case</p>",
        "id": 179331120,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357808
    },
    {
        "content": "<p>maybe I'll have a better luck with actual parameter parent</p>",
        "id": 179331136,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357818
    },
    {
        "content": "<p>I don't really understand the problem yet</p>",
        "id": 179331139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357821
    },
    {
        "content": "<p>can you say just a bit more ?</p>",
        "id": 179331153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357829
    },
    {
        "content": "<p>yes</p>",
        "id": 179331158,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357834
    },
    {
        "content": "<p>(or maybe we should find another time to do a deeper technical dive?)</p>",
        "id": 179331199,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357843
    },
    {
        "content": "<p>as a disclaimer this is what I <em>presume</em> is happening</p>",
        "id": 179331208,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357847
    },
    {
        "content": "<p>well that's a good idea, although hopefully the fix is not so engaging</p>",
        "id": 179331227,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357860
    },
    {
        "content": "<p>depends what else you have in mind</p>",
        "id": 179331241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357874
    },
    {
        "content": "<p>I do want to talk some about the eternal \"IDE strategy\" question -- was just discussing that with <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> a <em>tiny</em> bit</p>",
        "id": 179331255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357890
    },
    {
        "content": "<p>okay then,  let's schedule the problem for later then</p>",
        "id": 179331272,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357903
    },
    {
        "content": "<p>the only real thing I wanted to talk about with regard to IDE strategy was which of these sounded best to you</p>",
        "id": 179331309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572357930
    },
    {
        "content": "<p>hopefully a crater run will tell us if we're missing something else than that (I plan to land the fix before the next beta/stable promotion)</p>",
        "id": 179331314,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572357934
    },
    {
        "content": "<p>do you mean what tool should we focus on (to simplify)?</p>",
        "id": 179331437,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358004
    },
    {
        "content": "<p>I think we need to try and \"map out\" the various \"high level\" options -- basically what you and I are started doing -- and their pros/cons and (I think) examples of their implications, and then commit to a course</p>",
        "id": 179331439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358009
    },
    {
        "content": "<p>I am not sure how best to do this, it is hard :)</p>",
        "id": 179331451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358020
    },
    {
        "content": "<p>right</p>",
        "id": 179331486,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358052
    },
    {
        "content": "<p>I think the first step might be to spend some time on this in a very small gruop, e.g. I could imagine felix and I trying to do it, to figure out the overall shape.</p>",
        "id": 179331502,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358068
    },
    {
        "content": "<p>do you have something specific in mind now, in addition to what we started doing?</p>",
        "id": 179331504,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358068
    },
    {
        "content": "<p>I think the next step would be discussing with you + <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></p>",
        "id": 179331559,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358082
    },
    {
        "content": "<p>and maybe after that a wider design meeting?</p>",
        "id": 179331585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358100
    },
    {
        "content": "<p>sounds reasonable =)</p>",
        "id": 179331622,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358123
    },
    {
        "content": "<blockquote>\n<p>do you have something specific in mind now, in addition to what we started doing?</p>\n</blockquote>\n<p>not exactly, I think that was roughly in the right direction -- I think just trying to organize that information in a hackmd, and one thing I would specifically want to do is to evaluate different proposed bits of work against these plans, and maybe look at a few scenarios: like \"what kind of RLS support are we doing here\" etc</p>",
        "id": 179331634,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358138
    },
    {
        "content": "<p>basically I think the more we can make the plans <em>concrete</em> in terms of what we would do or not do, the better</p>",
        "id": 179331656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358153
    },
    {
        "content": "<p>I think it'd be also great to have a more specific set of deliverables</p>",
        "id": 179331664,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358158
    },
    {
        "content": "<p>but I don't think this has to be that horribly complex</p>",
        "id": 179331667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358160
    },
    {
        "content": "<p>in the sense that it'd be good to say, e.g. the goal of working on X is to separate parser data structures in rustc, or fully integrate Chalk or something</p>",
        "id": 179331719,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358200
    },
    {
        "content": "<p>I was telling Felix that I think we should be aiming to have some form of decision by 2020, or very early therein</p>",
        "id": 179331721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358201
    },
    {
        "content": "<p>so that 2020's roadmap is to \"execute\"</p>",
        "id": 179331773,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358205
    },
    {
        "content": "<p>if that makes sense</p>",
        "id": 179331779,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358208
    },
    {
        "content": "<blockquote>\n<p>in the sense that it'd be good to say, e.g. the goal of working on X is to separate parser data structures in rustc, or fully integrate Chalk or something</p>\n</blockquote>\n<p>incidentally I think that <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a> has the same problem :)</p>",
        "id": 179331804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358218
    },
    {
        "content": "<p>not to trap ourselves a bit in the \"continuous improvement\" (which is obviously  good but it'd be great to ship in that sense)</p>",
        "id": 179331819,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358230
    },
    {
        "content": "<p>i.e., the question of \"to chalk or not to chalk\" has a lot of the same feeling</p>",
        "id": 179331821,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358232
    },
    {
        "content": "<blockquote>\n<p>not to trap ourselves a bit in the \"continuous improvement\" (which is obviously  good but it'd be great to ship in that sense)</p>\n</blockquote>\n<p>can you say what you mean by \"continuous improvement\"?</p>",
        "id": 179331843,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358252
    },
    {
        "content": "<p>sorry if I'm being overly general <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 179331880,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358275
    },
    {
        "content": "<p>constantly working something and improving is good, but if we come up with a plan it'd be good for it to have a well-defined 'end' so to speak</p>",
        "id": 179331930,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358304
    },
    {
        "content": "<p>like NLL migration work</p>",
        "id": 179331944,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358315
    },
    {
        "content": "<p>ok ok</p>",
        "id": 179332001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358330
    },
    {
        "content": "<p>or e.g. librarification until now sharing the lexer</p>",
        "id": 179332004,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358332
    },
    {
        "content": "<p>I think probably a good ingredient here is</p>",
        "id": 179332020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358342
    },
    {
        "content": "<p>\"where can we realistically expect to be in a year\" (say)</p>",
        "id": 179332043,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358353
    },
    {
        "content": "<p>(to Chalk or not to Chalk is actually a good summary)</p>",
        "id": 179332047,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358359
    },
    {
        "content": "<p>which sort of fits in</p>",
        "id": 179332051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358361
    },
    {
        "content": "<p>that's a good question</p>",
        "id": 179332119,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358398
    },
    {
        "content": "<p>I think it's both useful to know on its own, but it probably also helps to define the \"goals\"</p>",
        "id": 179332242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358459
    },
    {
        "content": "<p>so we should think about that before coming up with a more fleshed out strategy?</p>",
        "id": 179332243,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358459
    },
    {
        "content": "<p>it'd be good to analyze the landscape a bit and see what's missing/not great</p>",
        "id": 179332302,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358502
    },
    {
        "content": "<p>hmm let's just do this :)</p>",
        "id": 179332333,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358522
    },
    {
        "content": "<p>I know that compiler-backed completion isn't really done the way users would expect it to in either of the tools/models</p>",
        "id": 179332335,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358523
    },
    {
        "content": "<p>when is a good time to start talking this out</p>",
        "id": 179332339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358532
    },
    {
        "content": "<p>/me thinks about his own calendar</p>",
        "id": 179332349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358545
    },
    {
        "content": "<blockquote>\n<p>I know that compiler-backed completion isn't really done the way users would expect it to in either of the tools/models</p>\n</blockquote>\n<p>say a bit more about that?</p>",
        "id": 179332406,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358566
    },
    {
        "content": "<p>I have to admit I don't have exact knowledge on the RA side of the things</p>",
        "id": 179332435,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358595
    },
    {
        "content": "<p>but Racer is lacking (simplistic type system), RLS doesn't do it</p>",
        "id": 179332460,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358617
    },
    {
        "content": "<p>ok ok</p>",
        "id": 179332510,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358644
    },
    {
        "content": "<p>and I think just having a bulletproof completion, following through type inference, derefs, trait resolution would be very useful  for the end users</p>",
        "id": 179332521,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358648
    },
    {
        "content": "<p>hm, so I wanted to lay out a couple of perspectives such as project support, \"indexing\" features but I'm not sure if that's a good idea</p>",
        "id": 179332625,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358699
    },
    {
        "content": "<p>maybe another perspective would be how convenient is getting all the tooling for the end-user</p>",
        "id": 179332647,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358717
    },
    {
        "content": "<p>sorry, in the weeds here</p>",
        "id": 179332840,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358813
    },
    {
        "content": "<p>those are useful details</p>",
        "id": 179332882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358838
    },
    {
        "content": "<p>ok, so, I've <a href=\"https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw\" target=\"_blank\" title=\"https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw\">created a hackmd</a> -- I'm going to schedule some time to try and transcribe our notes from rustbeltrust and see how I feel.</p>",
        "id": 179332989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358900
    },
    {
        "content": "<p>sure thing</p>",
        "id": 179332999,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358907
    },
    {
        "content": "<p>feel free to add some notes in there yourself</p>",
        "id": 179333003,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358914
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> also mentioned that it if a language feature is harder to get a proper IDE support it might be worth warning against</p>",
        "id": 179333004,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358914
    },
    {
        "content": "<p>e.g. the above content</p>",
        "id": 179333009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358916
    },
    {
        "content": "<p>one such example might be a deeply nested <code>mod file</code> statements or impl blocks inside function bodies that affect global resolution</p>",
        "id": 179333084,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358934
    },
    {
        "content": "<p>indeed</p>",
        "id": 179333103,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572358944
    },
    {
        "content": "<p>maybe it'd be good to lay down a tiered support model</p>",
        "id": 179333120,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358953
    },
    {
        "content": "<p>e.g. \"we will work on fully supporting regular Rust without X,Y,Z\"</p>",
        "id": 179333164,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358979
    },
    {
        "content": "<p>once that's somewhat done, we could move on to gradually work on and polish other features</p>",
        "id": 179333209,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572358999
    },
    {
        "content": "<p>maybe that's also connected in general to what people want to see from their tooling rather than just blindly trying to support everything or supporting fully a very specific subset</p>",
        "id": 179333264,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572359033
    },
    {
        "content": "<p>will take a look at the doc</p>",
        "id": 179333323,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572359048
    },
    {
        "content": "<p>I think the main idea was to split the data and logic so you could specialize over tool-specific structures to optimize for a specific use case? (batch compilation vs ide)</p>",
        "id": 179333472,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572359160
    },
    {
        "content": "<p>/me trying not to forget all of what we talked about at rustbeltrust</p>",
        "id": 179333549,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1572359193
    },
    {
        "content": "<p>I am semi-here, will catch up on the discussion later!</p>",
        "id": 179334015,
        "sender_full_name": "matklad",
        "timestamp": 1572359475
    },
    {
        "content": "<p>Yep, answering the IDE question would be great! I feel like between various meeting we had we've covered the design space pretty thoroughly (in partciular, these notes: <a href=\"https://hackmd.io/S5wub4mfToSnnLGvK3I-ew?edit\" target=\"_blank\" title=\"https://hackmd.io/S5wub4mfToSnnLGvK3I-ew?edit\">https://hackmd.io/S5wub4mfToSnnLGvK3I-ew?edit</a>). So, we probably might want place emphasis on picking a concrete actionable tactical plan</p>",
        "id": 179343650,
        "sender_full_name": "matklad",
        "timestamp": 1572364802
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 180523066,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573569998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 180523106,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570028
    },
    {
        "content": "<p>So recently we fixed hopefully the last ICE that I mentioned during our last meeting</p>",
        "id": 180523172,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570069
    },
    {
        "content": "<p>with the associated type in impl trait in async lowering</p>",
        "id": 180523232,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570088
    },
    {
        "content": "<p>and it seems that was the last of it now <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 180523240,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570097
    },
    {
        "content": "<p>before the release cut, so that's good news</p>",
        "id": 180523264,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570116
    },
    {
        "content": "<p>That's good :)</p>",
        "id": 180523295,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570145
    },
    {
        "content": "<p>in terms of unifying IDE effort I was wondering if we can at least unify the VS Code extension for RLS/RA</p>",
        "id": 180523319,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570162
    },
    {
        "content": "<p>and we talked briefly with <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> about it</p>",
        "id": 180523325,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570166
    },
    {
        "content": "<p>but the concern was whether RA is of \"production quality\" which I believe leans a bit more into the discussion you had</p>",
        "id": 180523360,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570188
    },
    {
        "content": "<p>with Felix as well</p>",
        "id": 180523374,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570197
    },
    {
        "content": "<p>so I'm interesting if it touches on that anyhow</p>",
        "id": 180523429,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570204
    },
    {
        "content": "<p>Good question</p>",
        "id": 180523448,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570214
    },
    {
        "content": "<p>I was just talking to <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 180523451,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570217
    },
    {
        "content": "<p>I want to try and pull those notes together into something a bit more \"approachable\" but I think my main takeaway from the conversation with <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> was</p>",
        "id": 180523486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570237
    },
    {
        "content": "<p>Well we kind of landed on two alternatives, and explored them somewhat:</p>",
        "id": 180523501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570246
    },
    {
        "content": "<ul>\n<li>libraryification, where rust-analyzer + rustc are two separate projects and we try to create shared libraries</li>\n<li>take lessons from rust-analyzer and try to \"rebuild it\" atop rustc, incrementally</li>\n</ul>",
        "id": 180523548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570278
    },
    {
        "content": "<p>I feel pretty persuaded that, given where we are now, the first path makes more sense</p>",
        "id": 180523568,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570293
    },
    {
        "content": "<p>Among other things, rust-analyzer is delivering value to users now, and basically each successful library-ification will increase that value</p>",
        "id": 180523591,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570309
    },
    {
        "content": "<p>However, there remain some open questions</p>",
        "id": 180523606,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570317
    },
    {
        "content": "<p>and I think the biggest one is how rust-analyzer and RLS \"relate\"</p>",
        "id": 180523670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570330
    },
    {
        "content": "<p>I'm not sure I fully understand the range of choices here</p>",
        "id": 180523707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570355
    },
    {
        "content": "<p>I had in mind two options, but you just raised an (appealing) third</p>",
        "id": 180523716,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570361
    },
    {
        "content": "<p>I was thinking of</p>",
        "id": 180523728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570368
    },
    {
        "content": "<ul>\n<li>rust-analyzer takes the place of racer in the RLS, as the \"fast but (for now) approximate\" option, and perhaps the means to handle completions etc</li>\n</ul>",
        "id": 180523774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570392
    },
    {
        "content": "<p>or</p>",
        "id": 180523778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570394
    },
    {
        "content": "<ul>\n<li>we deprecate RLS and encourage people to adopt rust-analyzer</li>\n</ul>",
        "id": 180523799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570406
    },
    {
        "content": "<p>I am not sure I understand what is required to do the second or under what conditions it makes sense</p>",
        "id": 180523822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570419
    },
    {
        "content": "<p>I do think it would be good to see if we can create some metrics to help drive our effort, whichever we do</p>",
        "id": 180523845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570438
    },
    {
        "content": "<p>I am also open that these two options are overly \"rust-analyzer\" centric</p>",
        "id": 180523888,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570444
    },
    {
        "content": "<p>in any case you raised an interesting third option</p>",
        "id": 180523904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570455
    },
    {
        "content": "<p>what do you specifically refer to by a third option?</p>",
        "id": 180523972,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570505
    },
    {
        "content": "<blockquote>\n<p>I do think it would be good to see if we can create some metrics to help drive our effort, whichever we do</p>\n</blockquote>\n<p>(to circle back to this slightly, I remember that we had some controversy around whether RLS was \"ready\" to be 1.0 -- I think part of the problem there was we never did much work in establishing a set of projects and functionality that we deemed \"sufficient\"? maybe? I'm also worried about wasting time building up definitions that won't in reality be of much use)</p>",
        "id": 180523976,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570508
    },
    {
        "content": "<blockquote>\n<p>what do you specifically refer to by a third option?</p>\n</blockquote>\n<p>sorry, what I meant is</p>",
        "id": 180523982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570515
    },
    {
        "content": "<ul>\n<li>having shared plugin</li>\n</ul>",
        "id": 180523992,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570524
    },
    {
        "content": "<p>it's not really a third option on its own</p>",
        "id": 180523999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570528
    },
    {
        "content": "<p>just a separate part of it, rather, right</p>",
        "id": 180524042,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570546
    },
    {
        "content": "<p>but it might be an aspect of the final choice I guess</p>",
        "id": 180524046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570549
    },
    {
        "content": "<p>my concern with trying to have rust-analyzer play the role of racer is that it's .. kind of too complex and heavy-weight for that role, maybe?</p>",
        "id": 180524132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570584
    },
    {
        "content": "<p>so anything in the long run that's beneficial for the user is the best for us</p>",
        "id": 180524137,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570588
    },
    {
        "content": "<p>I worry about memory usage, etc, and basically just creating more complexity than we solve</p>",
        "id": 180524155,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570595
    },
    {
        "content": "<p>Yes, memory usage was of a primary concern from what I understand that <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> told about the performance overhead of the RA</p>",
        "id": 180524193,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570624
    },
    {
        "content": "<p>having a unified front in some form, like the extension is good</p>",
        "id": 180524228,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570647
    },
    {
        "content": "<p>but the problem is that it's only there for a single editor</p>",
        "id": 180524251,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570662
    },
    {
        "content": "<p>what do you .. oh, like VSCode</p>",
        "id": 180524271,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570678
    },
    {
        "content": "<p>I see</p>",
        "id": 180524274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570681
    },
    {
        "content": "<p>and doing this for two editor-agnostic tools seems somewhat counterintuitive (although it might be productive seeing as vscode is one of the most popular ones)</p>",
        "id": 180524323,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570690
    },
    {
        "content": "<p>because the other integrations are not managed by us</p>",
        "id": 180524329,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570696
    },
    {
        "content": "<p>is there some way to do it at the \"LSP\" level?</p>",
        "id": 180524342,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570708
    },
    {
        "content": "<p>huh</p>",
        "id": 180524360,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570718
    },
    {
        "content": "<p>we could in theory somewhat unify that</p>",
        "id": 180524374,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570723
    },
    {
        "content": "<p>I don't really understand the division of responsibilities between the plugin and the LSP</p>",
        "id": 180524379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570729
    },
    {
        "content": "<p>but the deeper we go in this direction the quicker we approach the RA-in-RLS approach</p>",
        "id": 180524385,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570736
    },
    {
        "content": "<p>right now our VSCode plugin does VS Code workspace detection</p>",
        "id": 180524406,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570756
    },
    {
        "content": "<p>maybe the real question is: in what way would adopting rust-analyzer seem a \"regression\" for end-users vs RLS? One thing I know is precision of \"Go To Definition\"</p>",
        "id": 180524436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570779
    },
    {
        "content": "<p>and delegates where and how to spawn rls instances for the relevant folders, it synchronizes the configuration and it's capable of installing the Rust toolchains (and Rust as well)</p>",
        "id": 180524446,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570790
    },
    {
        "content": "<p>Actually, let me back up, I want to ask another question</p>",
        "id": 180524524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570809
    },
    {
        "content": "<p>FWIU find all references does not work in RA</p>",
        "id": 180524526,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570812
    },
    {
        "content": "<p>(I think that may have recently changed)</p>",
        "id": 180524544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570827
    },
    {
        "content": "<p>go to definition might be precise but sometimes we don't have total knowledge and that's there the heuristical approach works somewhat good (where we use Racer for it now)</p>",
        "id": 180524578,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570847
    },
    {
        "content": "<p>How much work is it to \"maintain\" RLS in its current form, without making architectural changes?</p>",
        "id": 180524582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570849
    },
    {
        "content": "<p>It seems like we have had a reasonably steady stream of ICEs</p>",
        "id": 180524592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570856
    },
    {
        "content": "<p>But those may be linked to other refactorings?</p>",
        "id": 180524620,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570870
    },
    {
        "content": "<p>I forget</p>",
        "id": 180524622,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570871
    },
    {
        "content": "<p>oh that was due to the change of save-analysis - it seems that was caused by doing the wrong thing and having only a <em>debug</em> assertion</p>",
        "id": 180524640,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570883
    },
    {
        "content": "<p>one bug report popped up, we fixed that and promoted the assertion but this in turn unearthed a couple of different bad interactions in the form of ICEs</p>",
        "id": 180524676,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570910
    },
    {
        "content": "<p>so it was save-analysis refactoring purely</p>",
        "id": 180524746,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570929
    },
    {
        "content": "<p>we could considerably do the other integration, so try to embed RLS in RA</p>",
        "id": 180524796,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570955
    },
    {
        "content": "<p>in the sense that RA would accept a save-analysis files and use the existing infrastructure to lower all that into a single interface</p>",
        "id": 180524854,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573570979
    },
    {
        "content": "<p>( regarding find usages in rust-analyzer, see <a href=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/weekly.20sync-up/near/179233513\" title=\"#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/weekly.20sync-up/near/179233513\">this comment</a> from <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> )</p>",
        "id": 180524855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573570980
    },
    {
        "content": "<p>Oh, that's great to hear!</p>",
        "id": 180524894,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571006
    },
    {
        "content": "<p>that's true. I am not sure how plausible that is (rust-analyzer integrating save analysis). It is conceivable at least.</p>",
        "id": 180524921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571023
    },
    {
        "content": "<p>it seemed like the most obvious \"blocker\"</p>",
        "id": 180524932,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571031
    },
    {
        "content": "<p>I guess what I'm wondering is</p>",
        "id": 180525013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571061
    },
    {
        "content": "<p>by embedding save-analysis support in the RA we could potentially get the quick and alzy approach of RA but where we're concerned we could get the data dump as done by rustc exactly</p>",
        "id": 180525024,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571067
    },
    {
        "content": "<p>if we opted to put \"all our energies\" into rust-analyzer, while keeping RLS as the deprecated, but usable option in the meantime, how much work would it be to maintain it. My hope would be that you would be able to instead to come up to speed on rust-analyzer and work on pushing that to the point where it can be used instead.</p>",
        "id": 180525113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571111
    },
    {
        "content": "<blockquote>\n<p>How much work is it to \"maintain\" RLS in its current form, without making architectural changes?</p>\n</blockquote>\n<p>To come back to that, the save-analysis regressions were unrelated to the RLS itself and so maintaining what we have in the current form is not that time-consuming</p>",
        "id": 180525136,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571126
    },
    {
        "content": "<p>yeah, it's an interesting thought</p>",
        "id": 180525137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571126
    },
    {
        "content": "<p>This seems like it would be worth trying to have a focused meeting with you, <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>, plus maybe myself + <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 180525183,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571157
    },
    {
        "content": "<p>definitely</p>",
        "id": 180525277,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571185
    },
    {
        "content": "<p>+1</p>",
        "id": 180525287,
        "sender_full_name": "matklad",
        "timestamp": 1573571189
    },
    {
        "content": "<p>personally I'd feel comfortable if we try to polish and improve the shared library approach</p>",
        "id": 180525331,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571207
    },
    {
        "content": "<p>I think that's the best way to improve two sides at the same time</p>",
        "id": 180525343,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571218
    },
    {
        "content": "<p>rather than just writing another compiler, if that makes sense</p>",
        "id": 180525363,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571226
    },
    {
        "content": "<blockquote>\n<p>personally I'd feel comfortable if we try to polish and improve the shared library approach</p>\n</blockquote>\n<p>\"libraryification\"?</p>",
        "id": 180525396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571247
    },
    {
        "content": "<p>to do so, I think it'd be good to gauge the user experience</p>",
        "id": 180525402,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571248
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>personally I'd feel comfortable if we try to polish and improve the shared library approach</p>\n</blockquote>\n<p>\"libraryification\"?</p>\n</blockquote>\n<p>Yes, as I understand it and what you proposed as the \"1st approach\" and what's been happening with lexer for example</p>",
        "id": 180525436,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571274
    },
    {
        "content": "<p>in other words, that's what you meant by \"shared library\", right?</p>",
        "id": 180525438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571276
    },
    {
        "content": "<p>OK</p>",
        "id": 180525507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571294
    },
    {
        "content": "<p>so if we were to do the switch</p>",
        "id": 180525537,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571308
    },
    {
        "content": "<p>it'd be good to see what RLS features RA might be lacking and the other way around</p>",
        "id": 180525570,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571330
    },
    {
        "content": "<p>to promote around the better parts (quick, lazy?)</p>",
        "id": 180525598,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571347
    },
    {
        "content": "<p>and to see what we might want to prioritize on the RA side</p>",
        "id": 180525636,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571380
    },
    {
        "content": "<p>to provide parity</p>",
        "id": 180525650,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571386
    },
    {
        "content": "<p>if that makes sense</p>",
        "id": 180525658,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571391
    },
    {
        "content": "<p>or rather, to smoothen the transition</p>",
        "id": 180525722,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571410
    },
    {
        "content": "<p>On that note, I agree with <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> general sentiment that save-analysis is useful for the offline code indexing</p>",
        "id": 180525782,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571456
    },
    {
        "content": "<p>so it'd be good to not fully deprecate/remove RLS as it's a convenient tool to drive the generation of SA</p>",
        "id": 180525827,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571478
    },
    {
        "content": "<p>and from that we might consider following the LSIF and possibly power the code smartness in the GitHub</p>",
        "id": 180525855,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571497
    },
    {
        "content": "<p>which I think would be valuable and very marketable</p>",
        "id": 180525865,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571504
    },
    {
        "content": "<p>but I'm getting a little off-track <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 180525877,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571515
    },
    {
        "content": "<p>Hm, I guess, if we implement rename refactoring via save-analysis in rust-analyzer, than ra can keep sa from bitrotting?</p>",
        "id": 180525951,
        "sender_full_name": "matklad",
        "timestamp": 1573571535
    },
    {
        "content": "<p>well, I think the LSIF (this is the offline language server stuff?) is really interesting</p>",
        "id": 180526045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571585
    },
    {
        "content": "<p>yeah that's one usage/approach</p>",
        "id": 180526050,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571587
    },
    {
        "content": "<p>one of my concerns with save-analysis as is is that it is just kind our own one-off thing</p>",
        "id": 180526078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571599
    },
    {
        "content": "<blockquote>\n<p>well, I think the LSIF (this is the offline language server stuff?) is really interesting</p>\n</blockquote>\n<p>It is, it's basically save-analysis-by-microsoft</p>",
        "id": 180526080,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571600
    },
    {
        "content": "<p><em>very</em> oversimplifying</p>",
        "id": 180526097,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571607
    },
    {
        "content": "<p>oh about that, it'd be good to also consult the Mozilla engineers working on searchfox</p>",
        "id": 180526126,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571623
    },
    {
        "content": "<p>since they rely on SA for the indexer</p>",
        "id": 180526142,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571632
    },
    {
        "content": "<p>yep</p>",
        "id": 180526154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571640
    },
    {
        "content": "<p>so</p>",
        "id": 180526216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571658
    },
    {
        "content": "<p>let's schedule a meeting but</p>",
        "id": 180526221,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571661
    },
    {
        "content": "<p>I was wondering what would be a good \"prep work\" to do</p>",
        "id": 180526231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571668
    },
    {
        "content": "<p>is enumerating the set of \"features\" a useful thing to do, to aid in comparison?</p>",
        "id": 180526256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571680
    },
    {
        "content": "<p>and other parties possibly interested, like <span class=\"user-mention\" data-user-id=\"120096\">@est31</span> ? I know they consumed the save-analysis format so it'd be good to gauge how the data is useful in the current format</p>",
        "id": 180526270,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571683
    },
    {
        "content": "<blockquote>\n<p>it'd be good to see what RLS features RA might be lacking and the other way around</p>\n</blockquote>\n<p>(I'm thinking about this question that <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> raised)</p>",
        "id": 180526289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571694
    },
    {
        "content": "<p>a simple side-by-side pros/cons would be good to do, wrt to above ^</p>",
        "id": 180526336,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571718
    },
    {
        "content": "<p>as part of prep work</p>",
        "id": 180526345,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571723
    },
    {
        "content": "<p>possibly first by going over the LSP methods to get a good idea and then filling with external stuff, like project detection/integration?</p>",
        "id": 180526445,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do you have a hackmd document handy?</p>",
        "id": 180526511,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571813
    },
    {
        "content": "<p>I'm trying to find it</p>",
        "id": 180526642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571890
    },
    {
        "content": "<p><a href=\"https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw\" target=\"_blank\" title=\"https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw\">https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw</a></p>",
        "id": 180526644,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571895
    },
    {
        "content": "<p>we could use this</p>",
        "id": 180526649,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571900
    },
    {
        "content": "<p>too many documents :)</p>",
        "id": 180526683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571922
    },
    {
        "content": "<p><a href=\"https://hackmd.io/66OlBzy-RyW0YdXuUyJkuQ\" target=\"_blank\" title=\"https://hackmd.io/66OlBzy-RyW0YdXuUyJkuQ\">https://hackmd.io/66OlBzy-RyW0YdXuUyJkuQ</a></p>",
        "id": 180526699,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571942
    },
    {
        "content": "<p>OK, let's link them all together :)</p>",
        "id": 180526710,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573571948
    },
    {
        "content": "<p>oh whoops</p>",
        "id": 180526739,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571962
    },
    {
        "content": "<p>let's use the one you linked then</p>",
        "id": 180526753,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573571983
    },
    {
        "content": "<p>actually I disagree :)</p>",
        "id": 180526873,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573572027
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw\" target=\"_blank\" title=\"https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw\">https://hackmd.io/9qrJYdSLTK2MWG4-pbmpWw</a></p>\n</blockquote>\n<p>I like the title of this one</p>",
        "id": 180526887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573572034
    },
    {
        "content": "<p>let's use that as the \"master doc\"</p>",
        "id": 180526891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573572037
    },
    {
        "content": "<p>and I'll link other things into it</p>",
        "id": 180526896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573572042
    },
    {
        "content": "<p>These are great metics and notes, thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> !</p>",
        "id": 180527851,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573572556
    },
    {
        "content": "<p>OK <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I <a href=\"https://doodle.com/poll/x35wtanin5y5impw\" target=\"_blank\" title=\"https://doodle.com/poll/x35wtanin5y5impw\">created a doodle poll</a> to schedule the next discussion on this topic</p>",
        "id": 180528108,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573572689
    },
    {
        "content": "<p>I'm going to extract those notes, <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span>, into a fresh hackmd, and link from that main document</p>",
        "id": 180528251,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573572772
    },
    {
        "content": "<p>I'm on the move and still in Barcelona, so including prep work the next week would work best for me</p>",
        "id": 180528675,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573573031
    },
    {
        "content": "<p>OK, looks like Mon at 9am (Boston time) is maybe best for everyone?</p>",
        "id": 180528770,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573573090
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> there's a full green column on the 20th</p>",
        "id": 180528953,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573573192
    },
    {
        "content": "<p>(because I think the one you're referring to is \"Yes, if need be\" instead?)</p>",
        "id": 180529027,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573573220
    },
    {
        "content": "<p>True. I'm ok with either, but earlier might be better</p>",
        "id": 180529044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573573232
    },
    {
        "content": "<p>either is fine by me, obviously</p>",
        "id": 180529053,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573573235
    },
    {
        "content": "<p>so finally Mon 9am (Boston time)?</p>",
        "id": 180529481,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1573573509
    },
    {
        "content": "<p>let's do monday</p>",
        "id": 180530925,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573574265
    },
    {
        "content": "<p>I'll make a calendar invite (ps, I'd like to keep the meeting small for max productivity, but not trying to exclude anyone)</p>",
        "id": 180530998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573574286
    },
    {
        "content": "<p>Done</p>",
        "id": 180531128,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573574362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> ping</p>",
        "id": 181017445,
        "sender_full_name": "matklad",
        "timestamp": 1574085680
    },
    {
        "content": "<p>ah on my way</p>",
        "id": 181017554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1574085757
    },
    {
        "content": "<p>am here</p>",
        "id": 181017656,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1574085825
    },
    {
        "content": "<p><a href=\"https://hackmd.io/fAnj6pNqRRGIyDQ4el5tcQ\" target=\"_blank\" title=\"https://hackmd.io/fAnj6pNqRRGIyDQ4el5tcQ\">https://hackmd.io/fAnj6pNqRRGIyDQ4el5tcQ</a></p>",
        "id": 181017731,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1574085862
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"153740\">Igor Matuszewski</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rls.20sync/near/180526270\" title=\"#narrow/stream/131828-t-compiler/topic/rls.20sync/near/180526270\">said</a>:</p>\n<blockquote>\n<p>and other parties possibly interested, like <span class=\"user-mention silent\" data-user-id=\"120096\">est31</span> ? I know they consumed the save-analysis format so it'd be good to gauge how the data is useful in the current format</p>\n</blockquote>\n<p>Hi I'm rarely on zulip so I only saw this now (I hope one day Rust will switch to Matrix, or something else like IRC that allows me to have all my FLOSS discussions in one place)... sorry for replying late.</p>\n<p>I consume save-analysis format for two projects of mine:</p>\n<ol>\n<li><a href=\"https://github.com/est31/cargo-udeps\" target=\"_blank\" title=\"https://github.com/est31/cargo-udeps\">cargo-udeps</a>. It doesn't actually use most of the save-analysis format. All it extracts is the list of crates that the compilation used, which save-analysis contains. I've wondered about using <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> 's cargo-expand tool for improving performance, but it's not much faster than save-analysis. I'd say the two are roughly equivalent in the average case. cargo-expand still performs full cargo check on all dependencies, just merely dumps the source in the end. I've wondered about an improved cargo-expand that only runs the resolution phase on the non-build and non-proc macro dependencies of a project. Typecheck and beyond aren't needed. I think the plans to split up compiler crates and upload them to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> is very helpful for this goal. Maybe one day cargo-expand can just use the compiler's crates instead of requiring an unstable compiler executable. An alternative would be to make cargo-expand a cargo builtin and to have a proper expand-only mode of rustc that doesn't run the full cargo check equivalent, but only runs until expansion. IDK which of the two is better. Anyways to get back to the topic, cargo-udeps will somehow manage if save-analysis is frozen/removed, but I guess I should increase research in alternatives.</li>\n<li><a href=\"https://github.com/est31/warnalyzer\" target=\"_blank\" title=\"https://github.com/est31/warnalyzer\">warnalyzer</a>. Compared to cargo-udeps, it's probably less well known and has a smaller user base. It's also harder to use atm. I've mostly stopped working on it due to bugs/limitations in save-analysis (see bug section in readme). The goal of the project is to find unused <em>code</em> within a workspace. Many crates have only a limited set of users, whose source code is available. Any public items of those crates that aren't used by any crate from inside that limited set can safely be warned about, as there are no outside users. rustc can't see beyond the scope of the crate. This is where warnalyzer comes in. It takes the save-analysis info of all involved crates and bases its warnings on those. I'd love to get in contact with rust-analyzer folks to discuss about migrating it to rust-analyzer somehow. The main issue is the different paradigm of rust-analyzer: I need to iterate over <em>all</em> public items of a crate and filter them by specific criteria. When I last checked, rust-analyzer's API was limited to querying single items.</li>\n</ol>\n<p>I've also wondered about integrating both projects into one, or integrating them into rust-analyzer/the RLS plugin. cargo-udeps is probably more straightforward to integrate, but warnalyzer needs explicit buy in as you have to specify when to enable it and if so, the list of users of a crate (most times it's probably only the crates in the workspace, but sometimes it might also be few workspace-external crates).</p>",
        "id": 188909101,
        "sender_full_name": "est31",
        "timestamp": 1582534834
    }
]