[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> how many crates depend on that traitobject crate?</p>",
        "id": 152261744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545318175
    },
    {
        "content": "<p>I wonder if we can find some other solution</p>",
        "id": 152261758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545318191
    },
    {
        "content": "<p>I was thinking the same</p>",
        "id": 152261987,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318381
    },
    {
        "content": "<p>let me see...</p>",
        "id": 152261990,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318383
    },
    {
        "content": "<p>one extreme possibility might be finding some way to accept the specific thing the traitobject crate does</p>",
        "id": 152262004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545318403
    },
    {
        "content": "<p>(e.g., with some form of warning)</p>",
        "id": 152262011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545318409
    },
    {
        "content": "<p>at least for a time</p>",
        "id": 152262016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545318413
    },
    {
        "content": "<p>I have to go refresh my memory though of what it is doing</p>",
        "id": 152262033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545318429
    },
    {
        "content": "<p>wait, where did the crater run go?</p>",
        "id": 152262163,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318531
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/55994\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55994\">https://github.com/rust-lang/rust/pull/55994</a></p>",
        "id": 152262166,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318533
    },
    {
        "content": "<p>I thought it owuld be there</p>",
        "id": 152262172,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318536
    },
    {
        "content": "<p>it's in the hidden comments at the middle</p>",
        "id": 152262210,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545318569
    },
    {
        "content": "<p>I'm kind of annoyed to be honest that this guy has carelessly put in silly incoherent impls and then isn't replying to any attempts to fix his crate.</p>",
        "id": 152262231,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> right, thanks.</p>",
        "id": 152262293,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> could we get some sort of transitive dependency analysis on crater runs in the future, per chance? :-) like, crater suggesting that large subsets of failures may be due to including a certain crate.</p>",
        "id": 152262653,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545318965
    },
    {
        "content": "<p>at the moment you can use <a href=\"https://github.com/pietroalbini/crater-tree\" target=\"_blank\" title=\"https://github.com/pietroalbini/crater-tree\">https://github.com/pietroalbini/crater-tree</a> to do that</p>",
        "id": 152262677,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319003
    },
    {
        "content": "<p>it's a really big hack, but it sort of works</p>",
        "id": 152262679,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319009
    },
    {
        "content": "<p>aha</p>",
        "id": 152262729,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319053
    },
    {
        "content": "<p>sometimes that also outputs the right data!</p>",
        "id": 152262817,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319103
    },
    {
        "content": "<p>anyway, will give it a run, thanks.</p>",
        "id": 152262979,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319243
    },
    {
        "content": "<p>holy... this is going to take forever.</p>",
        "id": 152263410,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319611
    },
    {
        "content": "<p>creating dummy cargo projects for every regressed crate was the easiest way to get the dependency graphs <em>shrugs</em></p>",
        "id": 152263448,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319652
    },
    {
        "content": "<p>some refactorings I'm doing right now should allow crater itself to get this information though</p>",
        "id": 152263565,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> yeah, I don't doubt it heh. eventually I guess you'll build dependency graph generation into crater itself, but that's a lot more work. ;-)</p>",
        "id": 152263570,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319738
    },
    {
        "content": "<p>^</p>",
        "id": 152263572,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319741
    },
    {
        "content": "<p>I think the easiest solution is to just get the name of the crate that actually failed from the build logs</p>",
        "id": 152263604,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319779
    },
    {
        "content": "<p>and soon crater will be able to do that</p>",
        "id": 152263696,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319820
    },
    {
        "content": "<p>ah</p>",
        "id": 152263706,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319826
    },
    {
        "content": "<p>very good</p>",
        "id": 152263716,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319835
    },
    {
        "content": "<p>that should also allow to categorize regressions by error code</p>",
        "id": 152263721,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319841
    },
    {
        "content": "<p>and to detect regressions in crates that fail to build</p>",
        "id": 152263738,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1545319858
    },
    {
        "content": "<p>yes</p>",
        "id": 152263802,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319910
    },
    {
        "content": "<p>would be very useful</p>",
        "id": 152263808,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545319914
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> here's the output of crater-tree... seems a bit worse than I thought. traitobject is responsible for most failures still (I think?), but there are clearly some other not-so-common crates too.</p>",
        "id": 152264760,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545320707
    },
    {
        "content": "<p><a href=\"https://gist.github.com/d305248be22d77c97c60dc0b1833dd46\" target=\"_blank\" title=\"https://gist.github.com/d305248be22d77c97c60dc0b1833dd46\">https://gist.github.com/d305248be22d77c97c60dc0b1833dd46</a></p>",
        "id": 152264767,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1545320721
    },
    {
        "content": "<p>the problem with the traitobject crate is basically</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>::<span class=\"n\">std</span>::<span class=\"n\">marker</span>::<span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Trait</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>::<span class=\"n\">std</span>::<span class=\"n\">marker</span>::<span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>If we can enable <code>overlapping_marker_traits</code>, then the problem will be solved because there will be no problem with the double impl.</p>",
        "id": 152326198,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1545394245
    },
    {
        "content": "<p>We might do a point fix that is equivalent to <code>overlapping_marker_traits</code> but only for principal-less trait objects.</p>",
        "id": 152326266,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1545394342
    },
    {
        "content": "<ul>\n<li>the feature name is <code>overlapping_marker_traits</code></li>\n</ul>",
        "id": 152326305,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1545394433
    },
    {
        "content": "<blockquote>\n<p>We might do a point fix that is equivalent to <code>overlapping_marker_traits</code> but only for principal-less trait objects.</p>\n</blockquote>\n<p>that is sort of what I had in mind, <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span></p>",
        "id": 152560138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545841880
    },
    {
        "content": "<p>or at least we might do this with a warning period for <em>that</em></p>",
        "id": 152560144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545841904
    },
    {
        "content": "<p>though I could imagine also just saying \"ah screw it, that's ok because back-compat\", though it's quite a hack</p>",
        "id": 152560197,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545841943
    },
    {
        "content": "<p>I'm OK with a warning period, but we might want to try more and more creative ways to reach <code>@reem</code> and ask them to fix it; if that doesn't work I have a controversial solution: we push a point release ourselves by virtue of asking T-crates-io nicely; what the crate does is sorta UB anyways</p>",
        "id": 152561868,
        "sender_full_name": "centril",
        "timestamp": 1545844494
    },
    {
        "content": "<p>its assuming ABI details about trait objects; not OK... :P</p>",
        "id": 152561875,
        "sender_full_name": "centril",
        "timestamp": 1545844506
    },
    {
        "content": "<p>I've wondered about that from time to time</p>",
        "id": 152561943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545844569
    },
    {
        "content": "<p>whatever we do I strongly feel that its a bug (that must be fixed) in the type system not to have <code>dyn A + B + A == dyn A + B</code> or <code>dyn A + B == dyn B + A</code> be true</p>",
        "id": 152562035,
        "sender_full_name": "centril",
        "timestamp": 1545844688
    },
    {
        "content": "<p>that seems clear</p>",
        "id": 152562500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545845345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hmm... reem seems like a fellow someone should know personally; maybe they can contact them outside of the internetz?</p>",
        "id": 152562660,
        "sender_full_name": "centril",
        "timestamp": 1545845552
    },
    {
        "content": "<p>maybe</p>",
        "id": 152563563,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545846861
    },
    {
        "content": "<p>I've sent an email to @reem to try to speed up the process</p>",
        "id": 152626379,
        "sender_full_name": "centril",
        "timestamp": 1545953753
    },
    {
        "content": "<p>I have the fix working locally</p>",
        "id": 154262442,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546545405
    },
    {
        "content": "<p>will push it later today</p>",
        "id": 154262449,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546545414
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> what fix are you doing exactly?</p>",
        "id": 154267109,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546550398
    },
    {
        "content": "<p>Just pushed it</p>",
        "id": 154269134,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546552252
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/56837/commits/ae924b45608a17f859a1576c905c6ac81558e093\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/56837/commits/ae924b45608a17f859a1576c905c6ac81558e093\">https://github.com/rust-lang/rust/pull/56837/commits/ae924b45608a17f859a1576c905c6ac81558e093</a></p>",
        "id": 154269149,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546552277
    },
    {
        "content": "<p>if you're still online</p>",
        "id": 154269218,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546552339
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> ah, nice</p>",
        "id": 154429822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546629281
    },
    {
        "content": "<p>just read it</p>",
        "id": 154429830,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546629285
    },
    {
        "content": "<p>@nikomatsakis: Would you want to r+ <a href=\"https://github.com/rust-lang/rust/pull/57335\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/57335\">https://github.com/rust-lang/rust/pull/57335</a></p>",
        "id": 154430373,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546629747
    },
    {
        "content": "<p>to fix that ICE</p>",
        "id": 154430375,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546629753
    },
    {
        "content": "<p>or should we wait for <a href=\"https://github.com/rust-lang/rust/pull/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/56837\">https://github.com/rust-lang/rust/pull/56837</a> ?</p>",
        "id": 154430380,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546629759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> what's your opinion?</p>",
        "id": 154431232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630569
    },
    {
        "content": "<p>not sure much about the compat risk</p>",
        "id": 154431244,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630582
    },
    {
        "content": "<p>that's what i'm wondering about — is this a beta regression yet?</p>",
        "id": 154431258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630595
    },
    {
        "content": "<p>or is still nightly only</p>",
        "id": 154431259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630598
    },
    {
        "content": "<p>no</p>",
        "id": 154431260,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630599
    },
    {
        "content": "<p>still nightly only</p>",
        "id": 154431262,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630602
    },
    {
        "content": "<p>ok</p>",
        "id": 154431263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630602
    },
    {
        "content": "<p>but merging 56837 means that \"traitobject-like, but not exactly traitobject\" crates will go to hard error with no warning cycle</p>",
        "id": 154431277,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630623
    },
    {
        "content": "<p>I'm <em>maybe</em> inclined to land <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a> — I guess I have to check but iirc the code felt pretty clean</p>",
        "id": 154431281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630625
    },
    {
        "content": "<p>in that case, let me merge the test</p>",
        "id": 154431289,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630635
    },
    {
        "content": "<p>and the log changes</p>",
        "id": 154431292,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630637
    },
    {
        "content": "<p>I don't think we've seen such crates in crater runs, though of course they might be outside the scope of crater</p>",
        "id": 154431307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630658
    },
    {
        "content": "<p>sure</p>",
        "id": 154431310,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630661
    },
    {
        "content": "<p>I guess it seems like something people are not <em>that</em> likely to abuse to me?</p>",
        "id": 154431312,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630667
    },
    {
        "content": "<p>but you never know</p>",
        "id": 154431313,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630668
    },
    {
        "content": "<p>I think that's the main question</p>",
        "id": 154431315,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630670
    },
    {
        "content": "<p>we didn't think anything like traitobject would exist</p>",
        "id": 154431322,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630677
    },
    {
        "content": "<p>indeed :)</p>",
        "id": 154431326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630681
    },
    {
        "content": "<p>I guess the alternative is to land the ICE fix</p>",
        "id": 154431377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630698
    },
    {
        "content": "<p>and do a crater run on <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a> to gather more data?</p>",
        "id": 154431382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630704
    },
    {
        "content": "<p>did we already do a crater run?</p>",
        "id": 154431383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630707
    },
    {
        "content": "<p>yea</p>",
        "id": 154431386,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630710
    },
    {
        "content": "<p>I can't remember</p>",
        "id": 154431387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630711
    },
    {
        "content": "<p>ok</p>",
        "id": 154431388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630712
    },
    {
        "content": "<p>so no more data to be had</p>",
        "id": 154431390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630714
    },
    {
        "content": "<p>and it discovered that the only issue was traitobject</p>",
        "id": 154431391,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630716
    },
    {
        "content": "<p>please do not start crater run right now</p>",
        "id": 154431393,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1546630722
    },
    {
        "content": "<p>then I feel like we'll never know more than we do now</p>",
        "id": 154431395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630727
    },
    {
        "content": "<p>well I guess the point is they would at least have a warning cycle</p>",
        "id": 154431399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630733
    },
    {
        "content": "<p>why?</p>",
        "id": 154431411,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630744
    },
    {
        "content": "<p>how much time until the next beta release?</p>",
        "id": 154431417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630751
    },
    {
        "content": "<p>2 weeks</p>",
        "id": 154431420,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630754
    },
    {
        "content": "<p>that's why the \"land <a href=\"https://github.com/rust-lang/rust/issues/57335\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57335\">#57335</a> to fix ICE, wait 2 weeks, then land <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a>\" approach is tempting</p>",
        "id": 154431437,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630782
    },
    {
        "content": "<p>have to deploy a change, should take a few minutes</p>",
        "id": 154431440,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1546630784
    },
    {
        "content": "<p>it will give us that 6 week warning cycle</p>",
        "id": 154431441,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630787
    },
    {
        "content": "<p>if these theoretical crates are testing against nightly, they'll have already started seeing warnings, right?</p>",
        "id": 154431442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630790
    },
    {
        "content": "<p>sure</p>",
        "id": 154431444,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630794
    },
    {
        "content": "<blockquote>\n<p>that's why the \"land <a href=\"https://github.com/rust-lang/rust/issues/57335\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57335\">#57335</a> to fix ICE, wait 2 weeks, then land <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a>\" approach is tempting</p>\n</blockquote>\n<p>yeah I mean it is the conservative thing to do</p>",
        "id": 154431491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630808
    },
    {
        "content": "<p>I guess the question is how much stuff is \"blocked\" on <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a></p>",
        "id": 154431496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630816
    },
    {
        "content": "<p>I would prefer to land @alexreg's PR after <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a></p>",
        "id": 154431507,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630834
    },
    {
        "content": "<p>it has some cross-cutting concerns</p>",
        "id": 154431512,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630839
    },
    {
        "content": "<p>that's the thing I was thinking about</p>",
        "id": 154431514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630842
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> )</p>",
        "id": 154431533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630865
    },
    {
        "content": "<p>I'm not sure how critical is landing his PR in the next 2 weeks</p>",
        "id": 154431541,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630878
    },
    {
        "content": "<p>well, it's just been open for a long time</p>",
        "id": 154431550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630892
    },
    {
        "content": "<p>sure</p>",
        "id": 154431554,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630897
    },
    {
        "content": "<p>I'm not sure it's <em>criticial</em>, I think it's all specific to trait aliases</p>",
        "id": 154431557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630899
    },
    {
        "content": "<p>otoh the question is how likely it is that there is a crater which:</p>\n<ul>\n<li>is trait object like</li>\n<li>is not covered by crater</li>\n<li>is not testing against nightly or is ignoring warnings</li>\n</ul>\n<p>hard to say...</p>",
        "id": 154431617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630934
    },
    {
        "content": "<p>it seems clear that if we landed <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a> we will not \"break the ecosystem\"</p>",
        "id": 154431628,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630953
    },
    {
        "content": "<p>sure</p>",
        "id": 154431635,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630965
    },
    {
        "content": "<p>I'm always afraid of something like \"we break winapi\"</p>",
        "id": 154431639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630968
    },
    {
        "content": "<p>since that is not tested on crater</p>",
        "id": 154431645,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630975
    },
    {
        "content": "<p>:)</p>",
        "id": 154431647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630976
    },
    {
        "content": "<p>(I think we test that specific crate now anyway, but you know what I mean)</p>",
        "id": 154431661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630987
    },
    {
        "content": "<p>but we would have knew <em>that</em></p>",
        "id": 154431666,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546630994
    },
    {
        "content": "<p>right, hopefully</p>",
        "id": 154431670,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546630999
    },
    {
        "content": "<p>because winapi runs on windows</p>",
        "id": 154431671,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546631000
    },
    {
        "content": "<p>(we don't test winapi on crater)</p>",
        "id": 154431672,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1546631000
    },
    {
        "content": "<p>I know we don't test on crater</p>",
        "id": 154431683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631009
    },
    {
        "content": "<p>but I think we test it somewhere else?</p>",
        "id": 154431687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631012
    },
    {
        "content": "<p>(as part of bors?)</p>",
        "id": 154431692,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631018
    },
    {
        "content": "<p>or maybe I'm misremembering</p>",
        "id": 154431694,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631022
    },
    {
        "content": "<p>we've talked about it</p>",
        "id": 154431696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631025
    },
    {
        "content": "<p>I think we test it in bors</p>",
        "id": 154431883,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546631163
    },
    {
        "content": "<p>so what we'll do?/</p>",
        "id": 154432042,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546631296
    },
    {
        "content": "<p>I'm sort of inclined to land <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a></p>",
        "id": 154432089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631363
    },
    {
        "content": "<p>even though I guess prudence would push towards the other path</p>",
        "id": 154432099,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631378
    },
    {
        "content": "<p>in particular, it feels like a clear bug fix, and fixing the affected code is pretty easy (kill the second impl)</p>",
        "id": 154432175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631420
    },
    {
        "content": "<p>the main concern is that it'll be some dependency that's hard to fix</p>",
        "id": 154432182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631430
    },
    {
        "content": "<p>and I <em>think</em> I consider that unlikely at this point given the crater results</p>",
        "id": 154432193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631447
    },
    {
        "content": "<p>sure</p>",
        "id": 154432215,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546631477
    },
    {
        "content": "<p>that sounds like an ok idea</p>",
        "id": 154432233,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546631491
    },
    {
        "content": "<p>let's go with that? I'll cherry-pick the improvements</p>",
        "id": 154432250,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546631504
    },
    {
        "content": "<p>ok</p>",
        "id": 154432348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631554
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 154432352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546631558
    },
    {
        "content": "<p>pushed</p>",
        "id": 154432387,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546631603
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> did you plan to fix <a href=\"https://github.com/rust-lang/rust/issues/56934\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56934\">https://github.com/rust-lang/rust/issues/56934</a> in a follow-up PR?</p>",
        "id": 154436148,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546634878
    },
    {
        "content": "<p>seems like it's worth closing sooner rather than later</p>",
        "id": 154436192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546634889
    },
    {
        "content": "<p>yes</p>",
        "id": 154437027,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546635831
    },
    {
        "content": "<p>I'll do it now</p>",
        "id": 154437030,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546635834
    },
    {
        "content": "<p>but <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a> is already growing a bit too big</p>",
        "id": 154437078,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546635850
    },
    {
        "content": "<p>and I'll like to crater that other PR</p>",
        "id": 154437085,
        "sender_full_name": "Ariel Ben-Yehuda",
        "timestamp": 1546635858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> sorry, I can't see what you CCed me on. (Zulip UI is terrible, eh...)</p>",
        "id": 154437463,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1546636321
    },
    {
        "content": "<p>something about that regression?</p>",
        "id": 154437506,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1546636330
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124069\">@Alexander Regueiro</span> the context is that <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a> will land and it intersects the trait alias PR you've been working on; might be good to rebase that atop <a href=\"https://github.com/rust-lang/rust/issues/56837\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56837\">#56837</a></p>",
        "id": 154437530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546636379
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> oh, I guess you didn't see my PM. :-)</p>",
        "id": 154437560,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1546636414
    },
    {
        "content": "<p>(from yesterday)</p>",
        "id": 154437626,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1546636468
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> sorry, I can't see what you CCed me on. (Zulip UI is terrible, eh...)</p>\n</blockquote>\n<p>You can click the mentions button in the top left sidebar and it'll show all of your mentions for all of time, if you click on a message that mentions you so it is highlighted then click on the topic name just above it'll take you to the full conversation and the context.</p>",
        "id": 154438278,
        "sender_full_name": "davidtwco",
        "timestamp": 1546637049
    }
]