[
    {
        "content": "<p>Meeting in 5 minutes, <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 171172164,
        "sender_full_name": "nagisa",
        "timestamp": 1563458148
    },
    {
        "content": "<p>Lets begin I guess. First, are there any announcements?</p>",
        "id": 171172605,
        "sender_full_name": "nagisa",
        "timestamp": 1563458412
    },
    {
        "content": "<p>I did <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-07-18.20.2354818/near/171162438\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-07-18.20.2354818/near/171162438\">some pre-triage</a>, I expect the coming weeks to be quite quiet in terms of actionability on issues, but that is fine, I think.</p>",
        "id": 171172680,
        "sender_full_name": "nagisa",
        "timestamp": 1563458485
    },
    {
        "content": "<p>to add to the quiet vibe, I've been spending some time on #wg-grammar-related things this week (but feel free to ping me if you need me for something)</p>",
        "id": 171172891,
        "sender_full_name": "eddyb",
        "timestamp": 1563458605
    },
    {
        "content": "<p>Another thing, we will likely have no WG check-in this week at least, because I have no idea where the schedule currently is.</p>",
        "id": 171172971,
        "sender_full_name": "nagisa",
        "timestamp": 1563458645
    },
    {
        "content": "<p>Okay, so moving on, I’d like to get backport nominations handled first, there quite a few of them.</p>",
        "id": 171173066,
        "sender_full_name": "nagisa",
        "timestamp": 1563458708
    },
    {
        "content": "<p><strong>Fix <a href=\"https://github.com/rust-lang/rust/issues/62660\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62660\"><a href=\"https://github.com/rust-lang/rust/issues/62660\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62660\">#62660</a></a></strong> <a href=\"https://github.com/rust-lang/rust/issues/62668\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62668\">#62668</a></p>",
        "id": 171173085,
        "sender_full_name": "nagisa",
        "timestamp": 1563458724
    },
    {
        "content": "<p>This is a tiny PR, fixes an ICE, well tested.</p>",
        "id": 171173187,
        "sender_full_name": "nagisa",
        "timestamp": 1563458790
    },
    {
        "content": "<p>Note that this PR is also nominated for a stable backport, on which we will vote later.</p>",
        "id": 171173247,
        "sender_full_name": "nagisa",
        "timestamp": 1563458817
    },
    {
        "content": "<p>It appears that the consensus is to backport.</p>",
        "id": 171173286,
        "sender_full_name": "nagisa",
        "timestamp": 1563458845
    },
    {
        "content": "<p>The next one is <strong>Cancel unemitted diagnostics during error recovery</strong> <a href=\"https://github.com/rust-lang/rust/issues/62666\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62666\">#62666</a></p>",
        "id": 171173313,
        "sender_full_name": "nagisa",
        "timestamp": 1563458867
    },
    {
        "content": "<p>This is similarly small, but hasn’t tests, fixes an ICE.</p>",
        "id": 171173466,
        "sender_full_name": "nagisa",
        "timestamp": 1563458945
    },
    {
        "content": "<p>Perhaps a good idea to vote on <strong>Handle errors during error recovery gracefully</strong> <a href=\"https://github.com/rust-lang/rust/issues/62604\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62604\">#62604</a> at the same time, as these are strongly related</p>",
        "id": 171173520,
        "sender_full_name": "nagisa",
        "timestamp": 1563458995
    },
    {
        "content": "<p>That one adds tests.</p>",
        "id": 171173593,
        "sender_full_name": "nagisa",
        "timestamp": 1563459022
    },
    {
        "content": "<p>Next up is <strong>Correctly break out of recovery loop</strong> <a href=\"https://github.com/rust-lang/rust/issues/62607\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62607\">#62607</a></p>",
        "id": 171173799,
        "sender_full_name": "nagisa",
        "timestamp": 1563459172
    },
    {
        "content": "<p>(again the vote is for a beta-backport, we’ll vote for stable backports later)</p>",
        "id": 171173843,
        "sender_full_name": "nagisa",
        "timestamp": 1563459210
    },
    {
        "content": "<p>Much like the previous PRs, small, tested, fixes ICE.</p>",
        "id": 171173915,
        "sender_full_name": "nagisa",
        "timestamp": 1563459248
    },
    {
        "content": "<p>Okay, I see a majority.</p>",
        "id": 171174114,
        "sender_full_name": "nagisa",
        "timestamp": 1563459375
    },
    {
        "content": "<p>Moving on there is a pair of related PRs, first  <strong>Emit warning when trying to use PGO in conjunction with unwinding on Windows</strong> <a href=\"https://github.com/rust-lang/rust/issues/61853\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61853\">#61853</a> and then <strong>Only error about MSVC + PGO + unwind if we're generating code</strong> <a href=\"https://github.com/rust-lang/rust/issues/62615\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62615\">#62615</a></p>",
        "id": 171174163,
        "sender_full_name": "nagisa",
        "timestamp": 1563459403
    },
    {
        "content": "<p>The 2nd PR is essentially a revert of the first</p>",
        "id": 171174202,
        "sender_full_name": "nagisa",
        "timestamp": 1563459423
    },
    {
        "content": "<p>The first PR seemed semi-controversial last week and I volunteered to find an alternative approach which is <a href=\"https://github.com/rust-lang/rust/issues/62615\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62615\">#62615</a>.</p>",
        "id": 171174255,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563459455
    },
    {
        "content": "<p>(<a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202019-07-11.20.2354818/near/170638451\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202019-07-11.20.2354818/near/170638451\">Last week's discussion</a>)</p>",
        "id": 171174366,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563459501
    },
    {
        "content": "<p>I suggest that we vote for the end result, which would occur after both PRs are backported in correct order.</p>",
        "id": 171174378,
        "sender_full_name": "nagisa",
        "timestamp": 1563459512
    },
    {
        "content": "<p>In essence that would mean that the behaviour implemented by the 2nd PR gets backported.</p>",
        "id": 171174403,
        "sender_full_name": "nagisa",
        "timestamp": 1563459531
    },
    {
        "content": "<p>This fixes Firefox use-cases I believe.</p>",
        "id": 171174452,
        "sender_full_name": "nagisa",
        "timestamp": 1563459571
    },
    {
        "content": "<p>so it isn’t exactly something that we keep broken.</p>",
        "id": 171174489,
        "sender_full_name": "nagisa",
        "timestamp": 1563459595
    },
    {
        "content": "<p>As I noted <a href=\"https://github.com/rust-lang/rust/pull/62615#issuecomment-510927632\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62615#issuecomment-510927632\">here</a>, only commit <a href=\"https://github.com/rust-lang/rust/commit/3622311d53b6aeb454bfc55cec5e6b06f88597c8\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/3622311d53b6aeb454bfc55cec5e6b06f88597c8\">3622311d53</a> has to be backported if my patch is approved.</p>",
        "id": 171174492,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563459598
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> okay, in that case I’ll reject the backport for the <strong>Emit warning when trying to use PGO in conjunction with unwinding on Windows</strong> <a href=\"https://github.com/rust-lang/rust/issues/61853\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61853\">#61853</a> now.</p>",
        "id": 171174596,
        "sender_full_name": "nagisa",
        "timestamp": 1563459633
    },
    {
        "content": "<p>Please vote for/against backporting <strong>Only error about MSVC + PGO + unwind if we're generating code</strong> <a href=\"https://github.com/rust-lang/rust/issues/62615\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62615\">#62615</a>  on the emojis above.</p>",
        "id": 171174805,
        "sender_full_name": "nagisa",
        "timestamp": 1563459739
    },
    {
        "content": "<p>I find the approach there okay, but I would also ask <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> how confident they are in implementation</p>",
        "id": 171175002,
        "sender_full_name": "nagisa",
        "timestamp": 1563459852
    },
    {
        "content": "<p>one question imediately arises is that the title says \"when we are generating code\"</p>",
        "id": 171175026,
        "sender_full_name": "nagisa",
        "timestamp": 1563459871
    },
    {
        "content": "<p>but what the implementation really checks for is <code>sess.opts.prints.iter().all(|&amp;p| p == PrintRequest::NativeStaticLibs)</code></p>",
        "id": 171175050,
        "sender_full_name": "nagisa",
        "timestamp": 1563459888
    },
    {
        "content": "<p><code>PrintRequest::NativeStaticLibs</code> is special in that it's the only <code>--print</code> flag in which we actually generate code in addition to printing something out.</p>",
        "id": 171175116,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563459929
    },
    {
        "content": "<p>but it is possible for code to be generated with PGO without anything being printed at all as well, isn’t it?</p>",
        "id": 171175145,
        "sender_full_name": "nagisa",
        "timestamp": 1563459953
    },
    {
        "content": "<p>i.e. assume <code>rustc -Zwhatever-flag-that-enables-pgo --emit=link src/lib.rs</code></p>",
        "id": 171175219,
        "sender_full_name": "nagisa",
        "timestamp": 1563459980
    },
    {
        "content": "<p>Am I misunderstanding the initial issue?</p>",
        "id": 171175244,
        "sender_full_name": "nagisa",
        "timestamp": 1563460000
    },
    {
        "content": "<p>Oh, I see, <code>all([])</code> is also true, never mind me</p>",
        "id": 171175282,
        "sender_full_name": "nagisa",
        "timestamp": 1563460029
    },
    {
        "content": "<p>Yes, but in that case <code>sess.opts.prints.iter().all(|&amp;p| p == PrintRequest::NativeStaticLibs)</code> will return true which causes the error to be emitted.</p>",
        "id": 171175294,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563460034
    },
    {
        "content": "<p><code>Iterator::all()</code> on an empty iterable returns <code>true</code></p>",
        "id": 171175316,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563460051
    },
    {
        "content": "<p>Okay, I guess 3 for to 0 against is positive enough. Gimme a sec to mark as accepted for backport.</p>",
        "id": 171175380,
        "sender_full_name": "nagisa",
        "timestamp": 1563460082
    },
    {
        "content": "<p>Final beta backport is <strong>rustc_target: avoid negative register counts in the SysV x86_64 ABI.</strong> <a href=\"https://github.com/rust-lang/rust/issues/62380\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62380\">#62380</a></p>",
        "id": 171175443,
        "sender_full_name": "nagisa",
        "timestamp": 1563460129
    },
    {
        "content": "<p>Unlike the other backports, this is not as trivial, but we have tests!</p>",
        "id": 171175474,
        "sender_full_name": "nagisa",
        "timestamp": 1563460158
    },
    {
        "content": "<p>Fixes a soundness issue.</p>",
        "id": 171175495,
        "sender_full_name": "nagisa",
        "timestamp": 1563460180
    },
    {
        "content": "<p>A long standing one, though, so the only thing a backport achieves is fix arriving to users sooner.</p>",
        "id": 171175606,
        "sender_full_name": "nagisa",
        "timestamp": 1563460220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> want to elaborate?</p>",
        "id": 171175684,
        "sender_full_name": "nagisa",
        "timestamp": 1563460284
    },
    {
        "content": "<p>I'm fine with backporting, just don't think it's overly relevant to backport it</p>",
        "id": 171175721,
        "sender_full_name": "oli",
        "timestamp": 1563460320
    },
    {
        "content": "<p>Does it help if the backport is motivated by Firefox folks having to actively work-around this issue for extra 6 weeks if this does not get backported?</p>",
        "id": 171175824,
        "sender_full_name": "nagisa",
        "timestamp": 1563460394
    },
    {
        "content": "<p>definitely :D</p>",
        "id": 171175833,
        "sender_full_name": "oli",
        "timestamp": 1563460401
    },
    {
        "content": "<p>Got it, okay, accepting for backport.</p>",
        "id": 171175867,
        "sender_full_name": "nagisa",
        "timestamp": 1563460424
    },
    {
        "content": "<p>yeah I think the only user who cares right now is Firefox, given nobody seems to have hit it so far</p>",
        "id": 171175885,
        "sender_full_name": "eddyb",
        "timestamp": 1563460435
    },
    {
        "content": "<p>(you need a combination of floating-point, integer and struct arguments that is kind of rare in FFI outside of code like this that communicates internal browser stuff between C++ and Rust)</p>",
        "id": 171176001,
        "sender_full_name": "eddyb",
        "timestamp": 1563460480
    },
    {
        "content": "<p>Two of the PRs we discussed for backport are also nominated for a stable backport. While the release team has expressed no intention for a stable point release this cycle, we are supposed to handle these nominations disregarding this piece of information</p>",
        "id": 171176057,
        "sender_full_name": "nagisa",
        "timestamp": 1563460507
    },
    {
        "content": "<p>The PRs are:</p>",
        "id": 171176074,
        "sender_full_name": "nagisa",
        "timestamp": 1563460519
    },
    {
        "content": "<p><strong>Fix <a href=\"https://github.com/rust-lang/rust/issues/62660\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62660\"><a href=\"https://github.com/rust-lang/rust/issues/62660\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62660\">#62660</a></a></strong> <a href=\"https://github.com/rust-lang/rust/issues/62668\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62668\">#62668</a></p>",
        "id": 171176082,
        "sender_full_name": "nagisa",
        "timestamp": 1563460522
    },
    {
        "content": "<p><strong>Correctly break out of recovery loop</strong> <a href=\"https://github.com/rust-lang/rust/issues/62607\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62607\">#62607</a></p>",
        "id": 171176097,
        "sender_full_name": "nagisa",
        "timestamp": 1563460528
    },
    {
        "content": "<p>Note that both ICEs fixed by these are already stable-to-stable regressions</p>",
        "id": 171176212,
        "sender_full_name": "nagisa",
        "timestamp": 1563460583
    },
    {
        "content": "<p>In that sense I personally feel these are not critical enough to backport to stable, even if we did end up making a point release.</p>",
        "id": 171176376,
        "sender_full_name": "nagisa",
        "timestamp": 1563460691
    },
    {
        "content": "<p>It is not like these fix a soundness issue or anything like that.</p>",
        "id": 171176387,
        "sender_full_name": "nagisa",
        "timestamp": 1563460700
    },
    {
        "content": "<p>(I myself vote <span aria-label=\"stop\" class=\"emoji emoji-1f91a\" role=\"img\" title=\"stop\">:stop:</span>, need more votes for consensus <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>)</p>",
        "id": 171176513,
        "sender_full_name": "nagisa",
        "timestamp": 1563460794
    },
    {
        "content": "<p>Okay, lets proceed, feel free to vote while meeting is still in progress and I’ll check if we reach a consensus there by the time meeting is over.</p>",
        "id": 171176811,
        "sender_full_name": "nagisa",
        "timestamp": 1563460960
    },
    {
        "content": "<p>Lets proceed with a mix of nominated and P-high issues.</p>",
        "id": 171176848,
        "sender_full_name": "nagisa",
        "timestamp": 1563460986
    },
    {
        "content": "<p>The first one I think we should check is <strong>STATUS_ACCESS_VIOLATION on 'index out of bounds' Windows 7 with lto and avx</strong> <a href=\"https://github.com/rust-lang/rust/issues/62762\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62762\">#62762</a></p>",
        "id": 171176882,
        "sender_full_name": "nagisa",
        "timestamp": 1563461012
    },
    {
        "content": "<p>it appears like a fairly serious codegen issue to me, the question is whether anybody wants to be assigned on this?</p>",
        "id": 171176999,
        "sender_full_name": "nagisa",
        "timestamp": 1563461064
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> perhaps?</p>",
        "id": 171177003,
        "sender_full_name": "nagisa",
        "timestamp": 1563461070
    },
    {
        "content": "<p>I guess I can assign to myself and Nikic seeing as they are already somewhat actively interacting with the reporter.</p>",
        "id": 171177214,
        "sender_full_name": "nagisa",
        "timestamp": 1563461203
    },
    {
        "content": "<p><strong>Spurious unused variable lint warning on enum with no variants</strong> <a href=\"https://github.com/rust-lang/rust/issues/62083\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62083\">#62083</a>  is nominated for a T-compiler decision on what the compiler should be allowed to do</p>",
        "id": 171177393,
        "sender_full_name": "nagisa",
        "timestamp": 1563461310
    },
    {
        "content": "<p>I essentially share <a href=\"https://github.com/rust-lang/rust/issues/62083#issuecomment-510840877\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62083#issuecomment-510840877\">pnkfelix’s opinion</a> on this issue</p>",
        "id": 171177463,
        "sender_full_name": "nagisa",
        "timestamp": 1563461356
    },
    {
        "content": "<p>Are there any objections to closing this as WORKS-AS-INTENDED?</p>",
        "id": 171177599,
        "sender_full_name": "nagisa",
        "timestamp": 1563461442
    },
    {
        "content": "<p>Nope, this is all perfectly fine imo (other than it could have more lints complaining about dead code)</p>",
        "id": 171177664,
        "sender_full_name": "oli",
        "timestamp": 1563461490
    },
    {
        "content": "<p>There is then <strong>ICE: Rust spins when referencing associated types in <code>where</code> clause</strong> <a href=\"https://github.com/rust-lang/rust/issues/62430\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62430\">#62430</a></p>",
        "id": 171177806,
        "sender_full_name": "nagisa",
        "timestamp": 1563461568
    },
    {
        "content": "<p>Ah, never mind I assigned myself on this.</p>",
        "id": 171177852,
        "sender_full_name": "nagisa",
        "timestamp": 1563461602
    },
    {
        "content": "<p>Moving on…</p>",
        "id": 171177864,
        "sender_full_name": "nagisa",
        "timestamp": 1563461608
    },
    {
        "content": "<p>There is <strong>ICE: Generic type alias to invalid type crashes during type check on latest stable</strong> <a href=\"https://github.com/rust-lang/rust/issues/62742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62742\">#62742</a></p>",
        "id": 171177955,
        "sender_full_name": "nagisa",
        "timestamp": 1563461645
    },
    {
        "content": "<p>There are plenty of similar issues but those reproductions all involve const generics.</p>",
        "id": 171177993,
        "sender_full_name": "nagisa",
        "timestamp": 1563461675
    },
    {
        "content": "<p>Would be great to have somebody investigate this, but I’m not sure who the best person would be. Also a P-tag. Looks P-high to me.</p>",
        "id": 171178064,
        "sender_full_name": "nagisa",
        "timestamp": 1563461734
    },
    {
        "content": "<p>Any objections to P-high?</p>",
        "id": 171178162,
        "sender_full_name": "nagisa",
        "timestamp": 1563461777
    },
    {
        "content": "<p>Okay marked P-high.</p>",
        "id": 171178245,
        "sender_full_name": "nagisa",
        "timestamp": 1563461839
    },
    {
        "content": "<p>With 3 minutes remaining for the meeting, I think it is fine to check back on the stable backport votes and adjourn.</p>",
        "id": 171178272,
        "sender_full_name": "nagisa",
        "timestamp": 1563461868
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/62668\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62668\">#62668</a> seems like pretty <span aria-label=\"stop\" class=\"emoji emoji-1f91a\" role=\"img\" title=\"stop\">:stop:</span></p>",
        "id": 171178350,
        "sender_full_name": "nagisa",
        "timestamp": 1563461905
    },
    {
        "content": "<p>and <a href=\"https://github.com/rust-lang/rust/issues/62607\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62607\">#62607</a> is somewhat in the middle with 1 vote difference in favour of <span aria-label=\"stop\" class=\"emoji emoji-1f91a\" role=\"img\" title=\"stop\">:stop:</span>.</p>",
        "id": 171178388,
        "sender_full_name": "nagisa",
        "timestamp": 1563461943
    },
    {
        "content": "<p>Thus rejecting both for a stable backport I guess.</p>",
        "id": 171178409,
        "sender_full_name": "nagisa",
        "timestamp": 1563461961
    },
    {
        "content": "<p>With that the meeting is over, thanks all for exercising your right to vote <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 171178440,
        "sender_full_name": "nagisa",
        "timestamp": 1563461985
    },
    {
        "content": "<p>If any one is interested in reviewing <a href=\"https://github.com/rust-lang/rust/issues/62615\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62615\">#62615</a>, I'd appreciate it! <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 171178533,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563462013
    },
    {
        "content": "<p>By the way, is Niko already on vacation?</p>",
        "id": 171178553,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1563462025
    },
    {
        "content": "<p>Yeah, I believe so</p>",
        "id": 171178592,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563462048
    },
    {
        "content": "<p>(I need to decide whether to reassign some PRs or not.)</p>",
        "id": 171178593,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1563462049
    },
    {
        "content": "<p>Yes, both <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> and <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> are on vacation</p>",
        "id": 171178597,
        "sender_full_name": "nagisa",
        "timestamp": 1563462052
    },
    {
        "content": "<p>Ok.</p>",
        "id": 171178637,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1563462088
    },
    {
        "content": "<p>I'm kinda back, still digging myself out of the 1k notification hole that my vacation dug for me :D</p>",
        "id": 171178689,
        "sender_full_name": "oli",
        "timestamp": 1563462121
    }
]