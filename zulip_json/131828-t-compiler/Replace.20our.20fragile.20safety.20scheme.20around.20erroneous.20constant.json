[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> is not entirely clear what's left to do here <a href=\"https://github.com/rust-lang/rust/issues/67191#issuecomment-619064331\" title=\"https://github.com/rust-lang/rust/issues/67191#issuecomment-619064331\">https://github.com/rust-lang/rust/issues/67191#issuecomment-619064331</a></p>",
        "id": 195236077,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587757497
    },
    {
        "content": "<p>we were checking with <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> and some code was changed meanwhile you've commented there and the PR was merged</p>",
        "id": 195236153,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587757557
    },
    {
        "content": "<p>please, let me know and I will follow up</p>",
        "id": 195236213,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587757572
    },
    {
        "content": "<p>I think we can now remove the code changes in <a href=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\" title=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\">https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440</a></p>",
        "id": 195275631,
        "sender_full_name": "oli",
        "timestamp": 1587805043
    },
    {
        "content": "<p>(or just make it <code>delay_span_bug</code>)</p>",
        "id": 195275646,
        "sender_full_name": "oli",
        "timestamp": 1587805077
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> you also mentioned const-prop has to be careful here, which part of const-prop refers that to?</p>",
        "id": 195277414,
        "sender_full_name": "RalfJ",
        "timestamp": 1587808127
    },
    {
        "content": "<p>(I am referring to <a href=\"https://github.com/rust-lang/rust/pull/67134/files#r355951869\" title=\"https://github.com/rust-lang/rust/pull/67134/files#r355951869\">this comment</a>)</p>",
        "id": 195277422,
        "sender_full_name": "RalfJ",
        "timestamp": 1587808151
    },
    {
        "content": "<p>In particular you said <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=afc895c5754a7963154193ad32702bb1\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=afc895c5754a7963154193ad32702bb1\">this code errors</a> in const-prop -- which seems odd, it should error in codegen when the constant is actually \"used\".</p>",
        "id": 195277537,
        "sender_full_name": "RalfJ",
        "timestamp": 1587808314
    },
    {
        "content": "<p>and indeed I would expect <a href=\"https://github.com/rust-lang/rust/pull/70820/files#diff-32c57af5c8e23eb048f55d1e955e5cd5R195\" title=\"https://github.com/rust-lang/rust/pull/70820/files#diff-32c57af5c8e23eb048f55d1e955e5cd5R195\">this loop to also cover that constant</a></p>",
        "id": 195277588,
        "sender_full_name": "RalfJ",
        "timestamp": 1587808369
    },
    {
        "content": "<p>well, it does error in const prop because const prop evaluates all <code>Rvalue::Use</code> in order to know the value for the local that is being assigned to, so when the local is referred to again later, we can propagate the constant into the use site of the local</p>",
        "id": 195279318,
        "sender_full_name": "oli",
        "timestamp": 1587811560
    },
    {
        "content": "<p>const prop <em>doesn't</em> have to be careful anymore, it can now freely eliminate even unevaluated constants as it pleases</p>",
        "id": 195279362,
        "sender_full_name": "oli",
        "timestamp": 1587811607
    },
    {
        "content": "<p>same goes for other optimizations</p>",
        "id": 195279366,
        "sender_full_name": "oli",
        "timestamp": 1587811615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195275631\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195275631\">said</a>:</p>\n<blockquote>\n<p>I think we can now remove the code changes in <a href=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\" title=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\">https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440</a></p>\n</blockquote>\n<p>that code doesn't exist anymore <a href=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38\" title=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38\">https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38</a></p>",
        "id": 195280525,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587813512
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195279362\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195279362\">said</a>:</p>\n<blockquote>\n<p>const prop <em>doesn't</em> have to be careful anymore, it can now freely eliminate even unevaluated constants as it pleases</p>\n</blockquote>\n<p>I don't understand this either, what happens then when you run <code>cargo check</code>? and also is not clear what we should remove from const prop</p>",
        "id": 195280608,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587813647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195280525\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195280525\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195275631\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195275631\">said</a>:</p>\n<blockquote>\n<p>I think we can now remove the code changes in <a href=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\" title=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\">https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440</a></p>\n</blockquote>\n<p>that code doesn't exist anymore <a href=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38\" title=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38\">https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38</a></p>\n</blockquote>\n<p>it does: <a href=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54\" title=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54\">https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54</a></p>",
        "id": 195351432,
        "sender_full_name": "RalfJ",
        "timestamp": 1587933313
    },
    {
        "content": "<p>also there is still a FIXME there, but I am not sure if that is related</p>",
        "id": 195351484,
        "sender_full_name": "RalfJ",
        "timestamp": 1587933384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195280608\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195280608\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195279362\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195279362\">said</a>:</p>\n<blockquote>\n<p>const prop <em>doesn't</em> have to be careful anymore, it can now freely eliminate even unevaluated constants as it pleases</p>\n</blockquote>\n<p>I don't understand this either, what happens then when you run <code>cargo check</code>? and also is not clear what we should remove from const prop</p>\n</blockquote>\n<p>hm... maybe this can be removed?<br>\n<a href=\"https://github.com/rust-lang/rust/blob/7f3b3df9e2f2efe3434b4f6fc76462d2c8ad332f/src/librustc_mir/transform/const_prop.rs#L470\" title=\"https://github.com/rust-lang/rust/blob/7f3b3df9e2f2efe3434b4f6fc76462d2c8ad332f/src/librustc_mir/transform/const_prop.rs#L470\">https://github.com/rust-lang/rust/blob/7f3b3df9e2f2efe3434b4f6fc76462d2c8ad332f/src/librustc_mir/transform/const_prop.rs#L470</a></p>",
        "id": 195351506,
        "sender_full_name": "RalfJ",
        "timestamp": 1587933452
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> to be honest I still have no idea what are we talking about exactly</p>",
        "id": 195442202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588005109
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195351432\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195351432\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195280525\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195280525\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195275631\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195275631\">said</a>:</p>\n<blockquote>\n<p>I think we can now remove the code changes in <a href=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\" title=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440\">https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440</a></p>\n</blockquote>\n<p>that code doesn't exist anymore <a href=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38\" title=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38\">https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L14-L38</a></p>\n</blockquote>\n<p>it does: <a href=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54\" title=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54\">https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54</a></p>\n</blockquote>\n<p>yeah that code exist but is what causes the error we seem to want, if I remove that line there are not const errors anymore</p>",
        "id": 195442294,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588005141
    },
    {
        "content": "<p>I guess you're talking about something different but I can't understand what you're trying to say</p>",
        "id": 195442325,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588005155
    },
    {
        "content": "<blockquote>\n<p>yeah that code exist but is what causes the error we seem to want, if I remove that line there are not const errors anymore</p>\n</blockquote>\n<p>that's odd, shouldn't wherever we iterate over <code>required_const</code> still report errors?</p>",
        "id": 195629704,
        "sender_full_name": "RalfJ",
        "timestamp": 1588109400
    },
    {
        "content": "<p>also when you wrote \"that code doesn't exist anymore\", I dont understand -- all the code that got added in <a href=\"https://github.com/rust-lang/rust/issues/67134\" title=\"https://github.com/rust-lang/rust/issues/67134\">#67134</a> in that file seems to still be there</p>",
        "id": 195629857,
        "sender_full_name": "RalfJ",
        "timestamp": 1588109466
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629704\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629704\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>yeah that code exist but is what causes the error we seem to want, if I remove that line there are not const errors anymore</p>\n</blockquote>\n<p>that's odd, shouldn't wherever we iterate over <code>required_const</code> still report errors?</p>\n</blockquote>\n<p>ah, that loop actually calls <code>eval_mir_constant</code></p>",
        "id": 195630135,
        "sender_full_name": "RalfJ",
        "timestamp": 1588109634
    },
    {
        "content": "<p>but then, even before <a href=\"https://github.com/rust-lang/rust/pull/67134\" title=\"https://github.com/rust-lang/rust/pull/67134\">https://github.com/rust-lang/rust/pull/67134</a> we got <em>some</em> const-errors. and that is where this code in <code>eval_mir_constant</code> got added. so that place cannot be the only place where errors are emitted. that means there are at least 2 places, and that should be unnecessary now.</p>",
        "id": 195630262,
        "sender_full_name": "RalfJ",
        "timestamp": 1588109716
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ^</p>",
        "id": 195630271,
        "sender_full_name": "RalfJ",
        "timestamp": 1588109723
    },
    {
        "content": "<p>and then there's a FIXME there with <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>'s name in it that got added in <a href=\"https://github.com/rust-lang/rust/issues/67134\" title=\"https://github.com/rust-lang/rust/issues/67134\">#67134</a>, not sure if that was resolved now or not</p>",
        "id": 195630375,
        "sender_full_name": "RalfJ",
        "timestamp": 1588109773
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629704\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629704\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>yeah that code exist but is what causes the error we seem to want, if I remove that line there are not const errors anymore</p>\n</blockquote>\n<p>that's odd, shouldn't wherever we iterate over <code>required_const</code> still report errors?</p>\n</blockquote>\n<p>yes, that happens here <a href=\"https://github.com/rust-lang/rust/pull/70820/files#diff-32c57af5c8e23eb048f55d1e955e5cd5R195\" title=\"https://github.com/rust-lang/rust/pull/70820/files#diff-32c57af5c8e23eb048f55d1e955e5cd5R195\">https://github.com/rust-lang/rust/pull/70820/files#diff-32c57af5c8e23eb048f55d1e955e5cd5R195</a></p>",
        "id": 195630657,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588109974
    },
    {
        "content": "<p>but we are calling exactly the function that reports the error, so if I remove from there we have no error reporting anymore</p>",
        "id": 195630760,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588110011
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629857\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629857\">said</a>:</p>\n<blockquote>\n<p>also when you wrote \"that code doesn't exist anymore\", I dont understand -- all the code that got added in <a href=\"https://github.com/rust-lang/rust/issues/67134\" title=\"https://github.com/rust-lang/rust/issues/67134\">#67134</a> in that file seems to still be there</p>\n</blockquote>\n<p>I'm not sure what parts are we talking about, <a href=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440R53\" title=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440R53\">https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440R53</a> this is not there anymore</p>",
        "id": 195630844,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588110055
    },
    {
        "content": "<p>maybe is better if you point to the code in master that you're talking about?</p>",
        "id": 195630880,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588110084
    },
    {
        "content": "<p>was commenting meanwhile I was reading, now I see that you saw that the loop calls <code>eval_mir_constant</code> :)</p>",
        "id": 195630980,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588110135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> this <a href=\"https://github.com/rust-lang/rust/blob/b7bd7c1024a1449449c3ae7b4b4c63a904a620e6/src/librustc_codegen_ssa/mir/constant.rs#L22-L23\" title=\"https://github.com/rust-lang/rust/blob/b7bd7c1024a1449449c3ae7b4b4c63a904a620e6/src/librustc_codegen_ssa/mir/constant.rs#L22-L23\">https://github.com/rust-lang/rust/blob/b7bd7c1024a1449449c3ae7b4b4c63a904a620e6/src/librustc_codegen_ssa/mir/constant.rs#L22-L23</a> is what we have in master</p>",
        "id": 195631101,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588110229
    },
    {
        "content": "<p>but the FIXME seems unrelated to my changes</p>",
        "id": 195631117,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588110238
    },
    {
        "content": "<p>I meant, I see the general idea you're mentioning here that we may be reporting things from different places and you want to unify :)</p>",
        "id": 195631202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588110273
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195630844\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195630844\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629857\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195629857\">said</a>:</p>\n<blockquote>\n<p>also when you wrote \"that code doesn't exist anymore\", I dont understand -- all the code that got added in <a href=\"https://github.com/rust-lang/rust/issues/67134\" title=\"https://github.com/rust-lang/rust/issues/67134\">#67134</a> in that file seems to still be there</p>\n</blockquote>\n<p>I'm not sure what parts are we talking about, <a href=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440R53\" title=\"https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440R53\">https://github.com/rust-lang/rust/pull/67134/files#diff-ac4e8531e3b428256ca33fa2bb472440R53</a> this is not there anymore</p>\n</blockquote>\n<p>uh, yes it is? I linked to it above, it is right here:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54\" title=\"https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54\">https://github.com/rust-lang/rust/blob/0b958790b336738540d027d645718713849638d7/src/librustc_codegen_ssa/mir/constant.rs#L54</a></p>",
        "id": 195633040,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111162
    },
    {
        "content": "<p>just got re-formatted a bit</p>",
        "id": 195633056,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111168
    },
    {
        "content": "<p>we now repeated this exact conversation with the same links twice</p>",
        "id": 195633072,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111181
    },
    {
        "content": "<p>I feel like in groundhog day</p>",
        "id": 195633091,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111193
    },
    {
        "content": "<p>so maybe let's make sure we understand why we disagree about whether some piece of code still exists, before going on^^</p>",
        "id": 195633159,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111209
    },
    {
        "content": "<p>I am talking specifically about the <code>span_err(constant.span, \"erroneous constant encountered\")</code></p>",
        "id": 195633341,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111311
    },
    {
        "content": "<p>it got added in that PR, and it is still around</p>",
        "id": 195633363,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195631202\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195631202\">said</a>:</p>\n<blockquote>\n<p>I meant, I see the general idea you're mentioning here that we may be reporting things from different places and you want to unify :)</p>\n</blockquote>\n<p>yes. previously we had to report errors from consts in a bunch of places to make sure we dont forget a const. now we have that loop over <code>required_consts</code> that takes care of that. so some of those places should be unnecessary now, and we should be able to clean them up.</p>",
        "id": 195633559,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111387
    },
    {
        "content": "<p><code>eval_mir_constant</code> in codegen is probably the most sensible place for such errors to be reported, this is where monomorphization happens... but then likely it should be the <em>only</em> place, and given how recently it was added, I doubt it currently is the only place.</p>",
        "id": 195633725,
        "sender_full_name": "RalfJ",
        "timestamp": 1588111482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195633559\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195633559\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195631202\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195631202\">said</a>:</p>\n<blockquote>\n<p>I meant, I see the general idea you're mentioning here that we may be reporting things from different places and you want to unify :)</p>\n</blockquote>\n<p>yes. previously we had to report errors from consts in a bunch of places to make sure we dont forget a const. now we have that loop over <code>required_consts</code> that takes care of that. so some of those places should be unnecessary now, and we should be able to clean them up.</p>\n</blockquote>\n<p>But isn't the loop over <code>required_consts</code> in <code>librustc_codegen_ssa</code>? We want to eagerly report errors where we can otherwise users will see <code>cargo check</code> pass and then <code>cargo build</code> fail with errors.</p>",
        "id": 195647463,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588121499
    },
    {
        "content": "<p>we had codegen-time const errors before, too. so there must now be at least two places in codegen than emit such errors: <code>eval_mir_constant</code> and where it was done before</p>",
        "id": 195746120,
        "sender_full_name": "RalfJ",
        "timestamp": 1588182479
    },
    {
        "content": "<p>also <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> when we emit such errors from optimizations, <code>cargo check</code> might not show them either if it doesnt run optimizations</p>",
        "id": 195746235,
        "sender_full_name": "RalfJ",
        "timestamp": 1588182526
    },
    {
        "content": "<p>I dont think \"randomly sprinkle const-error-emitting code all over the place\" is a sustainable strategy for avoiding <code>check</code> vs <code>build</code> mismatches</p>",
        "id": 195746268,
        "sender_full_name": "RalfJ",
        "timestamp": 1588182548
    },
    {
        "content": "<p>I completely agree with you there! I just want to make sure we don't accidentally regress <code>check</code> functionality from how it works today.</p>",
        "id": 195746589,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588182716
    },
    {
        "content": "<p>Ohh this is interesting.<br>\nSo if I understood this correctly: </p>\n<p>Say we introduced new functionality in <code>const-prop</code> that detects errors at compile time just by function of it having the ability of e.g. detecting when you're computing <code>1/0</code> with constant values.</p>\n<p>Then, <code>cargo check</code> must also gain that ability. Lest it had less detecting capabilities than <code>cargo build</code> does.<br>\nDid I get you right, <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>?</p>",
        "id": 195796912,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588219902
    },
    {
        "content": "<p>Because if I did, I have to now ask: what do we do in that scenario? Because that's precisely what we just added to const-prop like yesterday.</p>\n<p>(<strong>Note</strong>: the analysis is not yet complete. We're able to find more unescapable panics than before, but not all of the ones we would be able to)</p>",
        "id": 195796972,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588220023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> well, it's not a \"must\" -- already today, we have discrepancies between <code>cargo check</code>, <code>cargo build</code>, <code>cargo build --release</code>. It's not great but it happens.</p>",
        "id": 195802841,
        "sender_full_name": "RalfJ",
        "timestamp": 1588228887
    },
    {
        "content": "<p>I had an example once, not sure if I can find it again...</p>",
        "id": 195802855,
        "sender_full_name": "RalfJ",
        "timestamp": 1588228907
    },
    {
        "content": "<p>see <a href=\"https://github.com/rust-lang/rust/issues/70923\" title=\"https://github.com/rust-lang/rust/issues/70923\">https://github.com/rust-lang/rust/issues/70923</a> for example</p>",
        "id": 195802914,
        "sender_full_name": "RalfJ",
        "timestamp": 1588228945
    },
    {
        "content": "<p>I think the debug vs release one that I knew of has been fixed</p>",
        "id": 195802976,
        "sender_full_name": "RalfJ",
        "timestamp": 1588229035
    },
    {
        "content": "<p>Also, <code>cargo check</code> queries for <code>optimized_mir</code> so const-prop is always run.</p>",
        "id": 195822360,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588243509
    },
    {
        "content": "<p>Woah! that's awesome, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <br>\n<code>cargo check</code> is OP.</p>",
        "id": 195839316,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588253850
    },
    {
        "content": "<p>anyway, let's go back to the const-checking cleanup thing</p>",
        "id": 195902147,
        "sender_full_name": "RalfJ",
        "timestamp": 1588281136
    },
    {
        "content": "<p>I think we are blocked on <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> answering the open questions around where there might still be stuff to clean up... (in particular around the FIXME added by <a href=\"https://github.com/rust-lang/rust/pull/67134\" title=\"https://github.com/rust-lang/rust/pull/67134\">https://github.com/rust-lang/rust/pull/67134</a>)</p>",
        "id": 195902165,
        "sender_full_name": "RalfJ",
        "timestamp": 1588281151
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you didn't respond to <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195633040\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195633040\">my last responses to what you wrote</a></p>",
        "id": 195902239,
        "sender_full_name": "RalfJ",
        "timestamp": 1588281195
    },
    {
        "content": "<p>After grepping a bit I think I came to the conclusion that <em>all</em> the \"erroneous constant\" errors we saw before <a href=\"https://github.com/rust-lang/rust/pull/67134\" title=\"https://github.com/rust-lang/rust/pull/67134\">https://github.com/rust-lang/rust/pull/67134</a> actually come from const_prop; <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> is that right?</p>",
        "id": 195903161,
        "sender_full_name": "RalfJ",
        "timestamp": 1588281633
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195902239\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195902239\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> you didn't respond to <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195633040\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195633040\">my last responses to what you wrote</a></p>\n</blockquote>\n<p>hey, sorry and thanks for your help at the same time</p>",
        "id": 195903265,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281694
    },
    {
        "content": "<p>couldn't read any this stuff yet, gonna check all this again as soon as possible, unsure if I will be able today</p>",
        "id": 195903281,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281707
    },
    {
        "content": "<p>so I think I have two concrete questions/cleanups:</p>\n<ul>\n<li>what about <a href=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22\" title=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22\">the FIXME</a>?</li>\n<li>can we remove <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/const_prop.rs#L423-L431\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/const_prop.rs#L423-L431\">all this now</a>? It makes no sense that const_prop would do all sorts of error handling for consts that other optimizations wouldn't do.</li>\n</ul>",
        "id": 195903868,
        "sender_full_name": "RalfJ",
        "timestamp": 1588281988
    },
    {
        "content": "<p>also the error raised by const_prop and codegen is a bit different (\"erroneous constant used\" vs \"erroneous constant encountered\")</p>",
        "id": 195903911,
        "sender_full_name": "RalfJ",
        "timestamp": 1588282022
    },
    {
        "content": "<p>The advantage of reporting errors in const prop over leaving it to the fallback scheme is that the fallback scheme only triggers during monomorphization</p>",
        "id": 195941040,
        "sender_full_name": "oli",
        "timestamp": 1588321921
    },
    {
        "content": "<p>So I don't think we should remove <a href=\"https://github.com/rust-lang/rust/blob/bd0bacc694d7d8175804bb6f690cb846bfa4a9ee/src/librustc_mir/transform/const_prop.rs#L418\" title=\"https://github.com/rust-lang/rust/blob/bd0bacc694d7d8175804bb6f690cb846bfa4a9ee/src/librustc_mir/transform/const_prop.rs#L418\">https://github.com/rust-lang/rust/blob/bd0bacc694d7d8175804bb6f690cb846bfa4a9ee/src/librustc_mir/transform/const_prop.rs#L418</a> even if we can</p>",
        "id": 195941099,
        "sender_full_name": "oli",
        "timestamp": 1588321964
    },
    {
        "content": "<p>O_o I think <a href=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22\" title=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22\">https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22</a> is dead code</p>",
        "id": 195941139,
        "sender_full_name": "oli",
        "timestamp": 1588322025
    },
    {
        "content": "<p>we should be able to change the entire function body to <a href=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L33-L35\" title=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L33-L35\">https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L33-L35</a></p>",
        "id": 195941203,
        "sender_full_name": "oli",
        "timestamp": 1588322073
    },
    {
        "content": "<p>finally catched up with this now</p>",
        "id": 195955857,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588335981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195941139\" title=\"#narrow/stream/131828-t-compiler/topic/Replace.20our.20fragile.20safety.20scheme.20around.20erroneous.20constant/near/195941139\">said</a>:</p>\n<blockquote>\n<p>O_o I think <a href=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22\" title=\"https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22\">https://github.com/rust-lang/rust/blob/be8589fc31162bb71b0f765beba6ce73ec8ba93a/src/librustc_codegen_ssa/mir/constant.rs#L22</a> is dead code</p>\n</blockquote>\n<p>going to remove this code</p>",
        "id": 195955863,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588335990
    },
    {
        "content": "<p>but then it seems the only thing we are able to do right now?</p>",
        "id": 195955871,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588336003
    },
    {
        "content": "<p>yes, I believe so</p>",
        "id": 195955892,
        "sender_full_name": "oli",
        "timestamp": 1588336033
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/71747\" title=\"https://github.com/rust-lang/rust/issues/71747\">#71747</a></p>",
        "id": 195956271,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588336345
    },
    {
        "content": "<p>ui tests are <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, let's see what ci says</p>",
        "id": 195956285,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588336355
    }
]