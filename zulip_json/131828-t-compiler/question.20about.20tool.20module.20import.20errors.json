[
    {
        "content": "<p>Why is it that</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">clippy</span>::<span class=\"n\">foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>errors with \"<code>clippy</code> is a tool module, not a module\" but</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">rustdoc</span>::<span class=\"n\">foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>errors with \"use of undeclared crate or module <code>rustdoc</code>\"? Aren't they both now tool modules?</p>\n<p><strong>Note:</strong> This is on Nightly because the rustdoc tool module is new.</p>",
        "id": 231186750,
        "sender_full_name": "Noah Lev",
        "timestamp": 1616293747
    },
    {
        "content": "<p>There's a difference between tool attributes and tool lints.  I believe <code>rustdoc</code> is only a lint scope (<del>I believe not even in a formal way, it only compares the lint name by string</del> edit: I guess it is semi-formal <a href=\"https://github.com/rust-lang/rust/blob/61edfd591cedff66fca639c02f66984f6271e5a6/compiler/rustc_lint/src/levels.rs#L577-L579\">here</a>).</p>\n<p><code>clippy</code> and <code>rustfmt</code> are the only tools registered for attributes.</p>",
        "id": 231187579,
        "sender_full_name": "Eric Huss",
        "timestamp": 1616294831
    },
    {
        "content": "<p>^ this is hard-coded somewhere in rustc_resolve, I remember seeing it when looking at <a href=\"https://github.com/rust-lang/rust/pull/83216\">https://github.com/rust-lang/rust/pull/83216</a></p>",
        "id": 231189157,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616296919
    },
    {
        "content": "<p>Rustdoc is no less formal than clippy is, it's just that it's hardcoded in two places and they're not in sync</p>",
        "id": 231189218,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616296965
    },
    {
        "content": "<p>I don't understand the difference between a tool scope and a tool module though</p>",
        "id": 231189331,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616297144
    },
    {
        "content": "<p>The plan was to remove the hardcoded tool names once something like <code>#![register_tool]</code> stabilizes.<br>\nIt should happen at edition boundary due to breakage, and since <code>register_tool</code> doesn't have any blockers for stabilization (?) it may happen together with 2021 edition.</p>",
        "id": 231207210,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1616322163
    },
    {
        "content": "<p>What breakage does register_tool have? And how would it allow removing hardcoded names - by adding register_tool(rustdoc) to the standard library or something?</p>",
        "id": 231214529,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616330949
    }
]