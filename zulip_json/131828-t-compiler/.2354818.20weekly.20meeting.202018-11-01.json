[
    {
        "content": "<p>(I'm not sure I will be available to run the next rustc meeting. my son's daycare is closed for a French holiday and his naptime  will probably be over by the time the rustc meeting starts)</p>",
        "id": 136885031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1541024007
    },
    {
        "content": "<p>Okay, I have a holiday as well so some free time on my hands as well.</p>",
        "id": 136885157,
        "sender_full_name": "nagisa",
        "timestamp": 1541024142
    },
    {
        "content": "<p>I think you son should just run the meeting and you can relax. It might be time to pass on the torch onto the next gen <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 136890612,
        "sender_full_name": "blitzerr",
        "timestamp": 1541030951
    },
    {
        "content": "<p>Early notice to all participants. For some of you the meeting this week is an hour early due to DST discrepancies. This notably includes participants from EU, some of the Middle East countries, some of the Mexican counties… Do check with your calendar.</p>",
        "id": 136910908,
        "sender_full_name": "nagisa",
        "timestamp": 1541065267
    },
    {
        "content": "<blockquote>\n<p>I think you son should just run the meeting and you can relax. It might be time to pass on the torch onto the next gen :)</p>\n</blockquote>\n<p>That should make for an interesting meeting indeed. I-Nominated: what's with the early bedtime already! And can we anchor it to UTC?</p>",
        "id": 136913728,
        "sender_full_name": "mw",
        "timestamp": 1541069215
    },
    {
        "content": "<p>/me starts a prepass.</p>",
        "id": 136920614,
        "sender_full_name": "nagisa",
        "timestamp": 1541078260
    },
    {
        "content": "<p>/me files an issue for \"more cookies after dinner\", nominates for P-high.</p>",
        "id": 136922759,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541080602
    },
    {
        "content": "<p>can't wait for DST to stop being a thing</p>",
        "id": 136922775,
        "sender_full_name": "eddyb",
        "timestamp": 1541080630
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span> hi everyone <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 136922958,
        "sender_full_name": "nagisa",
        "timestamp": 1541080803
    },
    {
        "content": "<p>lets begin, I guess.</p>",
        "id": 136922966,
        "sender_full_name": "nagisa",
        "timestamp": 1541080808
    },
    {
        "content": "<p>Since <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is having a public holiday, this time around I’ll be responsible for steering this meeting.</p>",
        "id": 136923009,
        "sender_full_name": "nagisa",
        "timestamp": 1541080850
    },
    {
        "content": "<p>Going right over agenda…</p>",
        "id": 136923027,
        "sender_full_name": "nagisa",
        "timestamp": 1541080859
    },
    {
        "content": "<p>Only 1 P-high T-compiler issue.  ICE when running <code>cargo doc</code> on <code>typenum</code> at<br>\n<code>librustc/traits/structural_impls.rs:178</code> <a href=\"https://github.com/rust-lang/rust/issues/52873\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52873\">#52873</a>. Reopened because we never backported the <a href=\"https://github.com/rust-lang/rust/issues/54199\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54199\">#54199</a>.<br>\nWould we want to backport? Small change.</p>",
        "id": 136923035,
        "sender_full_name": "nagisa",
        "timestamp": 1541080865
    },
    {
        "content": "<p>pretty harmless</p>",
        "id": 136923053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541080885
    },
    {
        "content": "<p>I can do the backport if needed</p>",
        "id": 136923056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541080888
    },
    {
        "content": "<p>okay.</p>",
        "id": 136923062,
        "sender_full_name": "nagisa",
        "timestamp": 1541080896
    },
    {
        "content": "<p>what am I backporting to exactly...? beta?</p>",
        "id": 136923068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541080906
    },
    {
        "content": "<p>/me will figure it out</p>",
        "id": 136923079,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541080916
    },
    {
        "content": "<p>stable</p>",
        "id": 136923082,
        "sender_full_name": "oli",
        "timestamp": 1541080918
    },
    {
        "content": "<p>you’re already assigned <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>. So I guess we can move on.</p>",
        "id": 136923150,
        "sender_full_name": "nagisa",
        "timestamp": 1541080944
    },
    {
        "content": "<p>Next on the agenda, list was the RC-2 milestone. RC-2 has been released, so no open issues for the RC-2 milestone. There are quite a few issues open for the 2018 edition milestone, though. Mostly NLL stuff, 1 I-needs-decision issue. Should we look at them?</p>",
        "id": 136923178,
        "sender_full_name": "nagisa",
        "timestamp": 1541080977
    },
    {
        "content": "<p>I guess we could do that at the end of the meeting if we have time left</p>",
        "id": 136923202,
        "sender_full_name": "nagisa",
        "timestamp": 1541080994
    },
    {
        "content": "<p>in general, the NLL team wants to start merging its triage of this kind</p>",
        "id": 136923227,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081032
    },
    {
        "content": "<p>however, I would say that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> and I can triage those particular issues</p>",
        "id": 136923232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081041
    },
    {
        "content": "<p>mostly they are not release blockers</p>",
        "id": 136923276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081055
    },
    {
        "content": "<p>we wanted to use the milestone only for things we feel need backport, which I think is basically 'nothing' right now</p>",
        "id": 136923287,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081064
    },
    {
        "content": "<blockquote>\n<p>in general, the NLL team wants to start merging its triage of this kind</p>\n</blockquote>\n<p>by this I mean we'll just use the ordinary T-compiler, P-high  tracking</p>",
        "id": 136923305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081082
    },
    {
        "content": "<p>hmm, so you mean most of those issues do not belong to the milestone at all?</p>",
        "id": 136923331,
        "sender_full_name": "nagisa",
        "timestamp": 1541081104
    },
    {
        "content": "<p>yes, basically.</p>",
        "id": 136923354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081128
    },
    {
        "content": "<p>We've been moving things from milestone to milestone</p>",
        "id": 136923366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081139
    },
    {
        "content": "<p>If we have time at the end of the meeting, and there’s interest in involving the rest of T-compiler we can do that then, is that fine?</p>",
        "id": 136923377,
        "sender_full_name": "nagisa",
        "timestamp": 1541081147
    },
    {
        "content": "<p>and then -- at the start of a milestone -- reviewing the list and deciding what to do with it</p>",
        "id": 136923379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081151
    },
    {
        "content": "<blockquote>\n<p>If we have time at the end of the meeting, and there’s interest in involving the rest of T-compiler we can do that then, is that fine?</p>\n</blockquote>\n<p>no objection</p>",
        "id": 136923383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081159
    },
    {
        "content": "<p>just didn't want to bore y'all :)</p>",
        "id": 136923424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081168
    },
    {
        "content": "<p>Okay, then… we have 2 beta nominated PRs. Only one waiting on a decision and somewhat in T-compiler purview.</p>",
        "id": 136923430,
        "sender_full_name": "nagisa",
        "timestamp": 1541081174
    },
    {
        "content": "<p>enforce unused-must-use lint in macros <a href=\"https://github.com/rust-lang/rust/issues/55569\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55569\">#55569</a>. Small, 1-line change. Well tested. Fixes a stable-to-stable regression. Has not landed into master yet.</p>",
        "id": 136923431,
        "sender_full_name": "nagisa",
        "timestamp": 1541081180
    },
    {
        "content": "<p>Seems like a no-brainer to me.</p>",
        "id": 136923449,
        "sender_full_name": "nagisa",
        "timestamp": 1541081204
    },
    {
        "content": "<p>Any nays?</p>",
        "id": 136923479,
        "sender_full_name": "nagisa",
        "timestamp": 1541081240
    },
    {
        "content": "<p>Marking as beta-accepted.</p>",
        "id": 136923496,
        "sender_full_name": "nagisa",
        "timestamp": 1541081264
    },
    {
        "content": "<p>Moving on, there’s 1 stable nominated PR for T-rustdoc. Nothing to see there for us.</p>",
        "id": 136923581,
        "sender_full_name": "nagisa",
        "timestamp": 1541081326
    },
    {
        "content": "<p>Then, <strong>Regressions</strong>. we have <strong>3</strong> stable-to-beta. <strong>1</strong> stable-to-nightly.</p>",
        "id": 136923600,
        "sender_full_name": "nagisa",
        "timestamp": 1541081357
    },
    {
        "content": "<p>regression: stack overflow on macosx with xcode 6.4 <a href=\"https://github.com/rust-lang/rust/issues/55471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55471\">#55471</a>. Unclear how to approach the issue. There are multiple possible approaches: we can just bump the stack size again, or as <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> suggests, change how we build mir, or as I suggest make compiler thread stacks growing, solving this problem once and for all, regardless of how we end up writing code.</p>",
        "id": 136923611,
        "sender_full_name": "nagisa",
        "timestamp": 1541081373
    },
    {
        "content": "<p>In general, I'm in favor of using <a href=\"https://crates.io/crates/stacker\" target=\"_blank\" title=\"https://crates.io/crates/stacker\"><code>stacker</code></a> to grow stacks, but I've not looked at this particular issue.</p>",
        "id": 136923688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081416
    },
    {
        "content": "<p>We need to decide on a priority</p>",
        "id": 136923690,
        "sender_full_name": "nagisa",
        "timestamp": 1541081417
    },
    {
        "content": "<p>what options are there for implementing your approach, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> ?</p>",
        "id": 136923691,
        "sender_full_name": "mw",
        "timestamp": 1541081417
    },
    {
        "content": "<p>It wouldn't work on every platform, I think? Not sure.</p>",
        "id": 136923707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081429
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I have not investigated options yet.</p>",
        "id": 136923717,
        "sender_full_name": "nagisa",
        "timestamp": 1541081437
    },
    {
        "content": "<p>ok</p>",
        "id": 136923736,
        "sender_full_name": "mw",
        "timestamp": 1541081459
    },
    {
        "content": "<p>The stacker crate basically exists to solve this problem</p>",
        "id": 136923738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081460
    },
    {
        "content": "<p>I remember having that on my TODO list for ages Q_Q</p>",
        "id": 136923759,
        "sender_full_name": "eddyb",
        "timestamp": 1541081474
    },
    {
        "content": "<p>But we'd have to insert a call into locations where we recurse with arbitrary depth</p>",
        "id": 136923760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081475
    },
    {
        "content": "<p>any downsides to using it?</p>",
        "id": 136923761,
        "sender_full_name": "mw",
        "timestamp": 1541081478
    },
    {
        "content": "<p>Not really</p>",
        "id": 136923764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081483
    },
    {
        "content": "<p>I think we could attach it to the query engine</p>",
        "id": 136923772,
        "sender_full_name": "eddyb",
        "timestamp": 1541081493
    },
    {
        "content": "<p>at the very least</p>",
        "id": 136923774,
        "sender_full_name": "eddyb",
        "timestamp": 1541081500
    },
    {
        "content": "<p>Indeed, some central place like that would make sense</p>",
        "id": 136923776,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081502
    },
    {
        "content": "<p>doesn't help here</p>",
        "id": 136923778,
        "sender_full_name": "oli",
        "timestamp": 1541081503
    },
    {
        "content": "<p>If we only grow the stack, then the memory usage will never get reclaimed for very recursive parts of the code.</p>",
        "id": 136923783,
        "sender_full_name": "nagisa",
        "timestamp": 1541081505
    },
    {
        "content": "<p>Though it's not necessarily sufficient</p>",
        "id": 136923787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081508
    },
    {
        "content": "<p>Yes, sorry, I guess I should have clarified: <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> the downsides are basically potentially performance cliffs around stack growth edges, but that would only occur in extreme cases presumably.</p>",
        "id": 136923844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081538
    },
    {
        "content": "<p>That is, \"the usual\" when growing stacks I geuss</p>",
        "id": 136923852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081549
    },
    {
        "content": "<p>the alternative though is to move everything into the heap, certainly not always convenient, has its own costs, and sometimes not even possible (because borrow check)</p>",
        "id": 136923867,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081568
    },
    {
        "content": "<p>Even I don't like my own suggestion anymore :P let's do the stacker thing</p>",
        "id": 136923894,
        "sender_full_name": "oli",
        "timestamp": 1541081599
    },
    {
        "content": "<p>Well, I’d really love to avoid having to reimplement MIR on external stack.</p>",
        "id": 136923900,
        "sender_full_name": "nagisa",
        "timestamp": 1541081603
    },
    {
        "content": "<p>it seems like stacker is what you come up with when optimizing: heap too slow -&gt; stack -&gt; stack to small -&gt; stackker</p>",
        "id": 136923920,
        "sender_full_name": "mw",
        "timestamp": 1541081627
    },
    {
        "content": "<p>if you recall, we used to do it automatically; stacker is basically the \"only where you need it\" alternative</p>",
        "id": 136923975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081646
    },
    {
        "content": "<p>I was a proponent of non-recursive algorithms for e.g. cleanup scope construction, but that was not a thing that benefited from being recursive as much as MIR building does.</p>",
        "id": 136923993,
        "sender_full_name": "nagisa",
        "timestamp": 1541081664
    },
    {
        "content": "<p>indeed</p>",
        "id": 136924006,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081673
    },
    {
        "content": "<p>I think it's good to have the option of writing things in a recursive way</p>",
        "id": 136924047,
        "sender_full_name": "mw",
        "timestamp": 1541081712
    },
    {
        "content": "<p>so if there's no blocker for stacker, I'd be for using it</p>",
        "id": 136924066,
        "sender_full_name": "mw",
        "timestamp": 1541081738
    },
    {
        "content": "<p>however the immediate issue here is determining the priority, right?</p>",
        "id": 136924085,
        "sender_full_name": "mw",
        "timestamp": 1541081757
    },
    {
        "content": "<p>Okay, it seems that we have some consensus on stack growing, perhaps using stacker. An implementation effort will obviously be necessary. P-high? P-medium?</p>",
        "id": 136924089,
        "sender_full_name": "nagisa",
        "timestamp": 1541081759
    },
    {
        "content": "<p>Since it is a regression, I’m partial to P-high</p>",
        "id": 136924167,
        "sender_full_name": "nagisa",
        "timestamp": 1541081810
    },
    {
        "content": "<p>seems reasonable</p>",
        "id": 136924180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081824
    },
    {
        "content": "<p>yeah</p>",
        "id": 136924188,
        "sender_full_name": "mw",
        "timestamp": 1541081830
    },
    {
        "content": "<p>this problem has been dogging us for some time</p>",
        "id": 136924189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081831
    },
    {
        "content": "<p>Anybody wants to be the assignee?</p>",
        "id": 136924206,
        "sender_full_name": "nagisa",
        "timestamp": 1541081864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> ? :)</p>",
        "id": 136924274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081902
    },
    {
        "content": "<p>what precisely are we making P-high :)</p>",
        "id": 136924285,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081913
    },
    {
        "content": "<p>sure</p>",
        "id": 136924286,
        "sender_full_name": "oli",
        "timestamp": 1541081914
    },
    {
        "content": "<p>that is, we are looking to solve this <em>particular</em> problem, I imagine, but there are probably other places where stacker could be used</p>",
        "id": 136924299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081925
    },
    {
        "content": "<p>I don't think we should block on \"finding them all\" or something</p>",
        "id": 136924310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081938
    },
    {
        "content": "<p>though it's not a bad idea to start accumulating some lists of possible candidates? (e.g.,  <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> mentioned the query system)</p>",
        "id": 136924317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081946
    },
    {
        "content": "<p>is this relevant to all the parser recursion problems too?</p>",
        "id": 136924321,
        "sender_full_name": "varkor",
        "timestamp": 1541081950
    },
    {
        "content": "<p>there's a meta issue for those</p>",
        "id": 136924325,
        "sender_full_name": "varkor",
        "timestamp": 1541081954
    },
    {
        "content": "<p>if they are causing stack overflows, seems relevant</p>",
        "id": 136924336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541081969
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> if they involve running out of stack space</p>",
        "id": 136924340,
        "sender_full_name": "mw",
        "timestamp": 1541081974
    },
    {
        "content": "<p>I'll build a list before tackling the issue</p>",
        "id": 136924347,
        "sender_full_name": "oli",
        "timestamp": 1541081982
    },
    {
        "content": "<p>ah, actually, it's this one: <a href=\"https://github.com/rust-lang/rust/issues/40161\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/40161\">https://github.com/rust-lang/rust/issues/40161</a></p>",
        "id": 136924349,
        "sender_full_name": "varkor",
        "timestamp": 1541081984
    },
    {
        "content": "<p>did someone say \"parser\" :)</p>",
        "id": 136924350,
        "sender_full_name": "eddyb",
        "timestamp": 1541081985
    },
    {
        "content": "<p>not just parser problems</p>",
        "id": 136924353,
        "sender_full_name": "varkor",
        "timestamp": 1541081988
    },
    {
        "content": "<p>I assume that once we have stacker integrated at all, it will be trivial to add the \"stack grow check\" to more locations.</p>",
        "id": 136924354,
        "sender_full_name": "nagisa",
        "timestamp": 1541081989
    },
    {
        "content": "<p>we even have <a href=\"https://github.com/rust-lang/rust/issues/41884\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/41884\">https://github.com/rust-lang/rust/issues/41884</a> open already</p>",
        "id": 136924413,
        "sender_full_name": "oli",
        "timestamp": 1541082020
    },
    {
        "content": "<p>(GLL runs in constant stack space. it's basically a VM kinda-interpreter loop :P)</p>",
        "id": 136924431,
        "sender_full_name": "eddyb",
        "timestamp": 1541082036
    },
    {
        "content": "<p>Is there anything else we should cover /wrt this specific regression?</p>",
        "id": 136924444,
        "sender_full_name": "nagisa",
        "timestamp": 1541082061
    },
    {
        "content": "<p>If not, and moving on…</p>",
        "id": 136924462,
        "sender_full_name": "nagisa",
        "timestamp": 1541082077
    },
    {
        "content": "<p>Rustc panics on nightly with crate interpolate <a href=\"https://github.com/rust-lang/rust/issues/54654\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54654\">#54654</a>. <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> failed to reproduce this 8 days ago. No progress since. No reason to get back to this I think.</p>",
        "id": 136924474,
        "sender_full_name": "nagisa",
        "timestamp": 1541082094
    },
    {
        "content": "<p>[1.30 beta] Compiler hangs when compiling primal crate for armv7-apple-ios <a href=\"https://github.com/rust-lang/rust/issues/54627\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54627\">#54627</a>. We discussed this a few times before. Workarounds available. No intent to fix on our side and no progress since. No reason to come back to this either.</p>",
        "id": 136924541,
        "sender_full_name": "nagisa",
        "timestamp": 1541082134
    },
    {
        "content": "<p><strong>stable-to-nightly</strong> Toolchain 'nightly-x86_64-apple-darwin' missing from nightly 1.31.0<br>\n(de9666f12 2018-10-31) <a href=\"https://github.com/rust-lang/rust/issues/55571\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55571\">#55571</a>. T-infra thing. Does not seem that input from T-compiler would be necessary.</p>",
        "id": 136924549,
        "sender_full_name": "nagisa",
        "timestamp": 1541082149
    },
    {
        "content": "<p>With that, all the regressions are covered.</p>",
        "id": 136924563,
        "sender_full_name": "nagisa",
        "timestamp": 1541082165
    },
    {
        "content": "<p><strong>Waiting for T-compiler</strong>. Empty!</p>",
        "id": 136924570,
        "sender_full_name": "nagisa",
        "timestamp": 1541082180
    },
    {
        "content": "<p><strong>I-nominated T-compiler</strong>. 4 issues. 1 (<a href=\"https://github.com/rust-lang/rust/issues/55471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55471\">#55471</a>) has already been discussed today.</p>",
        "id": 136924583,
        "sender_full_name": "nagisa",
        "timestamp": 1541082189
    },
    {
        "content": "<p>wow</p>",
        "id": 136924585,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082190
    },
    {
        "content": "<p>compare compiler performance with <code>hashbrown</code> <a href=\"https://github.com/rust-lang/rust/issues/55514\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55514\">#55514</a>. Amanieu released a crate that implements faster hashmaps. There might be something to gain by using them in the compiler.</p>",
        "id": 136924605,
        "sender_full_name": "nagisa",
        "timestamp": 1541082211
    },
    {
        "content": "<p>It seems to me that there is some progress on attempting to integrate hashbrown, right, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>?</p>",
        "id": 136924674,
        "sender_full_name": "nagisa",
        "timestamp": 1541082270
    },
    {
        "content": "<p>why are they faster?</p>",
        "id": 136924678,
        "sender_full_name": "eddyb",
        "timestamp": 1541082274
    },
    {
        "content": "<p>I couldn't find any information on the official page of the thing hashbrown is a port of</p>",
        "id": 136924695,
        "sender_full_name": "eddyb",
        "timestamp": 1541082302
    },
    {
        "content": "<p>A different algorithm and it uses SSE apparently. Unclear how much influence SSE has on it being faster though.</p>",
        "id": 136924711,
        "sender_full_name": "nagisa",
        "timestamp": 1541082318
    },
    {
        "content": "<p>I was just skimming the issue</p>",
        "id": 136924715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082323
    },
    {
        "content": "<p>looks like @Amanieu was motivated to pursue this</p>",
        "id": 136924719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082331
    },
    {
        "content": "<p>and has produced some sort of branch?</p>",
        "id": 136924722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082335
    },
    {
        "content": "<p>A branch of <code>hashbrown</code> crate that compiles with stage0</p>",
        "id": 136924791,
        "sender_full_name": "nagisa",
        "timestamp": 1541082376
    },
    {
        "content": "<p>my question would be \"can we generally improve upon <code>libstd</code>'s hashmaps using these new insights?\"</p>",
        "id": 136924793,
        "sender_full_name": "eddyb",
        "timestamp": 1541082381
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> yeah I don't really know :) there is also discussion on that issue of whether it'd be suitable to just use this as the default hash map</p>",
        "id": 136924795,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082382
    },
    {
        "content": "<p>It seems like it might be worthwhile to involve T-libs as well?</p>",
        "id": 136924807,
        "sender_full_name": "nagisa",
        "timestamp": 1541082410
    },
    {
        "content": "<p>Perhaps even on a separate issue.</p>",
        "id": 136924813,
        "sender_full_name": "nagisa",
        "timestamp": 1541082421
    },
    {
        "content": "<p>perhaps</p>",
        "id": 136924823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082432
    },
    {
        "content": "<p>seems like it's progressing, I don't know that we want to mark this as P-high or anything</p>",
        "id": 136924828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082440
    },
    {
        "content": "<p>Either way, we need to decide on the P-flag. This doesn’t appear P-high to me</p>",
        "id": 136924829,
        "sender_full_name": "nagisa",
        "timestamp": 1541082442
    },
    {
        "content": "<p>yeah it's ok, I just wanted to bring it to people's attention</p>",
        "id": 136924836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082457
    },
    {
        "content": "<p>So P-medium?</p>",
        "id": 136924838,
        "sender_full_name": "nagisa",
        "timestamp": 1541082458
    },
    {
        "content": "<p>now of course it'll go down the \"GH notification rathole\" and I'll forget all about it</p>",
        "id": 136924851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082472
    },
    {
        "content": "<p>/me had already forgotten about it by the time of this meeting :P</p>",
        "id": 136924901,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082492
    },
    {
        "content": "<p>Okay, moving on.</p>",
        "id": 136925048,
        "sender_full_name": "nagisa",
        "timestamp": 1541082616
    },
    {
        "content": "<p>Other two I-nominated issues (<a href=\"https://github.com/rust-lang/rust/issues/53859\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53859\">#53859</a>, <a href=\"https://github.com/rust-lang/rust/issues/38941\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/38941\">#38941</a>) were discussed last week and had no apparent activity since.</p>",
        "id": 136925068,
        "sender_full_name": "nagisa",
        "timestamp": 1541082636
    },
    {
        "content": "<p>We still should give them P-flags though</p>",
        "id": 136925072,
        "sender_full_name": "nagisa",
        "timestamp": 1541082643
    },
    {
        "content": "<p>So: run-pass/extern-pass-empty is probably a bogus thing to test <a href=\"https://github.com/rust-lang/rust/issues/53859\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53859\">#53859</a></p>",
        "id": 136925088,
        "sender_full_name": "nagisa",
        "timestamp": 1541082660
    },
    {
        "content": "<p>yeah so it's a bit weird that we support <code>#[repr(C)] struct Empty;</code>,</p>",
        "id": 136925120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082700
    },
    {
        "content": "<p>but I think we settled (in the UCG discussion) on the idea that it's not broken -- our behavior for zero-sized structs matches various C compiler extensions</p>",
        "id": 136925125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082714
    },
    {
        "content": "<p>and makes logical sense</p>",
        "id": 136925127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082717
    },
    {
        "content": "<p>so I don't know that the test is invalid</p>",
        "id": 136925181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> what is the behaviour, exactly?</p>",
        "id": 136925184,
        "sender_full_name": "nagisa",
        "timestamp": 1541082732
    },
    {
        "content": "<p>it has zero size but affects alignment when embedded in other structs</p>",
        "id": 136925193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082752
    },
    {
        "content": "<p>I'm not 100% sure about the ABI considerations when passing as argumnt though</p>",
        "id": 136925204,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082762
    },
    {
        "content": "<p>now that you mention it</p>",
        "id": 136925205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082764
    },
    {
        "content": "<p>It seems to me, then, that we should first figure out what do we want this to do exactly and document/specify it</p>",
        "id": 136925228,
        "sender_full_name": "nagisa",
        "timestamp": 1541082800
    },
    {
        "content": "<blockquote>\n<p>and makes logical sense</p>\n</blockquote>\n<p>I take it you haven't been exposed to <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/abi.rs#L453-L456\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/abi.rs#L453-L456\">https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/abi.rs#L453-L456</a> yet?</p>",
        "id": 136925293,
        "sender_full_name": "eddyb",
        "timestamp": 1541082848
    },
    {
        "content": "<p>Since it is not a standard behaviour to have 0-sized structs in C (I believe), we at the very least should then decide on exact compiler extension(s) we aim to support.</p>",
        "id": 136925294,
        "sender_full_name": "nagisa",
        "timestamp": 1541082852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> it is <a href=\"https://github.com/rust-rfcs/unsafe-code-guidelines/blob/master/reference/src/representation/structs-and-tuples.md\" target=\"_blank\" title=\"https://github.com/rust-rfcs/unsafe-code-guidelines/blob/master/reference/src/representation/structs-and-tuples.md\">documented here</a>, though that's not an \"official source\" yet</p>",
        "id": 136925299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082861
    },
    {
        "content": "<p>(it's intended to become a kind of RFC recommendation)</p>",
        "id": 136925308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082876
    },
    {
        "content": "<p>in particular, <a href=\"https://github.com/rust-rfcs/unsafe-code-guidelines/blob/master/reference/src/representation/structs-and-tuples.md#c-compatible-layout-repr-c\" target=\"_blank\" title=\"https://github.com/rust-rfcs/unsafe-code-guidelines/blob/master/reference/src/representation/structs-and-tuples.md#c-compatible-layout-repr-c\">in this section</a></p>",
        "id": 136925317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082894
    },
    {
        "content": "<p>I'll leave some comments on the issue I guess</p>",
        "id": 136925319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082899
    },
    {
        "content": "<p>Right so, since this issue is more about the test in particular, rather than the behaviour overall, P-high seems inappropriate to me</p>",
        "id": 136925342,
        "sender_full_name": "nagisa",
        "timestamp": 1541082925
    },
    {
        "content": "<p>P-medium</p>",
        "id": 136925416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541082971
    },
    {
        "content": "<p>and we cannot make a decision without the UCG becoming an official document</p>",
        "id": 136925417,
        "sender_full_name": "nagisa",
        "timestamp": 1541082971
    },
    {
        "content": "<blockquote>\n<p>I take it you haven't been exposed to <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/abi.rs#L453-L456\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/abi.rs#L453-L456\">https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/abi.rs#L453-L456</a> yet?</p>\n</blockquote>\n<p>I avert my eyes :)</p>",
        "id": 136925429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083001
    },
    {
        "content": "<p>I’ve marked it as S-blocked, will comment that we cannot really make a decision without UCG</p>",
        "id": 136925444,
        "sender_full_name": "nagisa",
        "timestamp": 1541083021
    },
    {
        "content": "<p>The other I-nominated issue is  Missed optimization: references from pointers aren't treated as noalias <a href=\"https://github.com/rust-lang/rust/issues/38941\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/38941\">#38941</a></p>",
        "id": 136925474,
        "sender_full_name": "nagisa",
        "timestamp": 1541083073
    },
    {
        "content": "<p>(my guess about mingw is that they copied the subpar logic from MSVC but forgot that GCC has the zero-size extension and didn't add a special case for it)</p>",
        "id": 136925519,
        "sender_full_name": "eddyb",
        "timestamp": 1541083087
    },
    {
        "content": "<p>Note that <a href=\"https://github.com/rust-lang/rust/issues/38941\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/38941\">#38941</a> was discussed last week, yet the P-flag has not been assigned</p>",
        "id": 136925538,
        "sender_full_name": "nagisa",
        "timestamp": 1541083121
    },
    {
        "content": "<p>seems like P-medium <del>at best</del></p>",
        "id": 136925562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083168
    },
    {
        "content": "<p>the real question is how to track these</p>",
        "id": 136925565,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083171
    },
    {
        "content": "<p>It seems that no answer has been reached for the question this has been nominated.</p>",
        "id": 136925566,
        "sender_full_name": "nagisa",
        "timestamp": 1541083172
    },
    {
        "content": "<p>Right.</p>",
        "id": 136925568,
        "sender_full_name": "nagisa",
        "timestamp": 1541083180
    },
    {
        "content": "<p>Does anybody want to add anything to the discussion? This issue is the last item on what I have prepared with a pre-pass.</p>",
        "id": 136925641,
        "sender_full_name": "nagisa",
        "timestamp": 1541083248
    },
    {
        "content": "<p>I have a few things I wanted to bring up</p>",
        "id": 136925651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083265
    },
    {
        "content": "<p>First question: do we want to have another \"steering meeting\"? It seemed like we had a good conversation last time, but also that there may have been other topics we ought do discuss.</p>",
        "id": 136925669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083300
    },
    {
        "content": "<p>(As far as triage goes, there are a number of stable-to-stable regressions we could try and look through as well as the 2018 milestone)</p>",
        "id": 136925721,
        "sender_full_name": "nagisa",
        "timestamp": 1541083326
    },
    {
        "content": "<p>Second, related question: I'd like to begin planning more for the next year and also the Rust All Hands discussions. I was hoping to draw people's attention to <a href=\"https://paper.dropbox.com/doc/Compiler-Team-Planning-Rust-All-Hands-2019--AQu9FKeO55pzVWDx74AjkldmAg-EiyRtIBW1KxYI6nZeTKjt\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Compiler-Team-Planning-Rust-All-Hands-2019--AQu9FKeO55pzVWDx74AjkldmAg-EiyRtIBW1KxYI6nZeTKjt\">this paper document</a> where I've been collecting some ideas. We might want to have a meeting to talk about that.</p>",
        "id": 136925750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083369
    },
    {
        "content": "<p>maybe we could do the steering meetings more often</p>",
        "id": 136925752,
        "sender_full_name": "mw",
        "timestamp": 1541083369
    },
    {
        "content": "<p>like every 3 weeks instead of every 6 weeks</p>",
        "id": 136925756,
        "sender_full_name": "mw",
        "timestamp": 1541083377
    },
    {
        "content": "<p>yeah, that seems reasonable, at least to start</p>",
        "id": 136925762,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083383
    },
    {
        "content": "<p>let's say that; I'll post something on the internals thread to discuss a bit in advance which topics to cover</p>",
        "id": 136925784,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083412
    },
    {
        "content": "<p>sound good?</p>",
        "id": 136925789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083419
    },
    {
        "content": "<blockquote>\n<p>I was hoping to draw people's attention to <a href=\"https://paper.dropbox.com/doc/Compiler-Team-Planning-Rust-All-Hands-2019--AQu9FKeO55pzVWDx74AjkldmAg-EiyRtIBW1KxYI6nZeTKjt\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Compiler-Team-Planning-Rust-All-Hands-2019--AQu9FKeO55pzVWDx74AjkldmAg-EiyRtIBW1KxYI6nZeTKjt\">this paper document</a> where I've been collecting some ideas.</p>\n</blockquote>\n<p>I’m unable to edit that, no dropbox acct.</p>",
        "id": 136925794,
        "sender_full_name": "nagisa",
        "timestamp": 1541083428
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> do you have a google account?</p>",
        "id": 136925854,
        "sender_full_name": "mw",
        "timestamp": 1541083457
    },
    {
        "content": "<p>that works too, I think</p>",
        "id": 136925863,
        "sender_full_name": "mw",
        "timestamp": 1541083467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I do, but its a gsuite one.</p>",
        "id": 136925877,
        "sender_full_name": "nagisa",
        "timestamp": 1541083488
    },
    {
        "content": "<p>would you prefer a google document? I could do that</p>",
        "id": 136925889,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083498
    },
    {
        "content": "<p>or maybe hackmd</p>",
        "id": 136925898,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083503
    },
    {
        "content": "<p>I guess that's the \"new etherpad\"</p>",
        "id": 136925906,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I have no clue what that means :)</p>",
        "id": 136925909,
        "sender_full_name": "mw",
        "timestamp": 1541083510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> google for bussiness thing, where you use a custom domain and have a separate list of permissions, things you cannot or can do etc.</p>",
        "id": 136925950,
        "sender_full_name": "nagisa",
        "timestamp": 1541083547
    },
    {
        "content": "<p>if hackmd works well, I'd be for that</p>",
        "id": 136926011,
        "sender_full_name": "mw",
        "timestamp": 1541083571
    },
    {
        "content": "<p>I'm going to assume <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> that you also don't <em>want</em> to have a dropbox account :)</p>",
        "id": 136926014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083573
    },
    {
        "content": "<p>Oh I can create one, sure. I’d rather not have to do that, though.</p>",
        "id": 136926030,
        "sender_full_name": "nagisa",
        "timestamp": 1541083593
    },
    {
        "content": "<p>not a big fan of Dropbox paper/google docs/online rich text editors</p>",
        "id": 136926033,
        "sender_full_name": "mw",
        "timestamp": 1541083597
    },
    {
        "content": "<p>I've found I really like paper for having lightweight conversations and so forth but hackmd will probably also do fine</p>",
        "id": 136926039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083609
    },
    {
        "content": "<p>I recall dropbox paper being used widely for the previous all-hands.</p>",
        "id": 136926066,
        "sender_full_name": "nagisa",
        "timestamp": 1541083641
    },
    {
        "content": "<p>yes, it was the central organizing tool iirc</p>",
        "id": 136926074,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083650
    },
    {
        "content": "<p>Might just go ahead and create an acct. then</p>",
        "id": 136926081,
        "sender_full_name": "nagisa",
        "timestamp": 1541083671
    },
    {
        "content": "<p>Okay, so we still have 13 minutes, we could cover some stable-to-stable regressions or a few of those 2018 milestone issues.</p>",
        "id": 136926156,
        "sender_full_name": "nagisa",
        "timestamp": 1541083736
    },
    {
        "content": "<p>is it worth \"archiving\" stable-to-stable regressions that we basically never plan to fix?</p>",
        "id": 136926200,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083794
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> since you are planning to triage the 2018 milestone issues, is there any chance that any of those issues might want explicit T-compiler attention?</p>",
        "id": 136926202,
        "sender_full_name": "nagisa",
        "timestamp": 1541083797
    },
    {
        "content": "<p>I guess that might just be closing them :)</p>",
        "id": 136926205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083799
    },
    {
        "content": "<p>well, iirc, the majority are diagnostic nits and we basically don't plan to backport those</p>",
        "id": 136926257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083816
    },
    {
        "content": "<p>the only real question is whether it makes sense to backport some of the remaining \"soundness fixes\" -- i.e., things where NLL permits code it should not. I think at present the only cases like this are some subcases of user-given type annotations</p>",
        "id": 136926277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083840
    },
    {
        "content": "<p>(we preserve those into MIR, but there are a few cases we don't handle yet)</p>",
        "id": 136926289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083855
    },
    {
        "content": "<p>but that is sort of a hard question that is perhaps better answered using the standard beta nomination process? it probably depends on how hard those questions are to fix</p>",
        "id": 136926308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083872
    },
    {
        "content": "<p>one thing worth discussing</p>",
        "id": 136926326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083906
    },
    {
        "content": "<p>Mhm… and then there’s NLL doesn't check that user type annotations are well-formed in unreachable code <a href=\"https://github.com/rust-lang/rust/issues/54943\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54943\">#54943</a> which is I-needs-decision</p>",
        "id": 136926327,
        "sender_full_name": "nagisa",
        "timestamp": 1541083909
    },
    {
        "content": "<p>is how/when to transition Rust 2015 etc to use NLL mode</p>",
        "id": 136926337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083916
    },
    {
        "content": "<p>yes, I was going to raise that one as a bit of \"policy question\". I think we probably ought to fix, I think I see the right path for doing it now...</p>",
        "id": 136926388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083942
    },
    {
        "content": "<p>NLL is strictly more permissive compared to the old borrowck, right?</p>",
        "id": 136926397,
        "sender_full_name": "nagisa",
        "timestamp": 1541083966
    },
    {
        "content": "<blockquote>\n<p>is how/when to transition Rust 2015 etc to use NLL mode</p>\n</blockquote>\n<p>my proposal was that we wait until 2 weeks after the next release -- i.e., once NLL hits stable -- and if there have been no major issues, then we switch over Rust 2015 to \"migration mode\" on nightly and let it ride the trains</p>",
        "id": 136926398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083969
    },
    {
        "content": "<blockquote>\n<p>NLL is strictly more permissive compared to the old borrowc, right?</p>\n</blockquote>\n<p>well, modulo bugfixes</p>",
        "id": 136926402,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083976
    },
    {
        "content": "<p>this is why we have \"migration mode\", it gives warnings for those cases where we fixed bugs so code that never should have compiled doesn't break <em>immediately</em></p>",
        "id": 136926416,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541083994
    },
    {
        "content": "<p>It seems that this question (how do we turn on NLL on 2015) would be better answered via the FCP process of some sort?</p>",
        "id": 136926435,
        "sender_full_name": "nagisa",
        "timestamp": 1541084031
    },
    {
        "content": "<p>so another question is how long to keep that up :) it's basically the same as any other future compatibility warning I guess. I don't recall the crater impact numbers off hand, I don't think they were tremendously high, but there were probably some high profile crates in there.</p>",
        "id": 136926437,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084038
    },
    {
        "content": "<blockquote>\n<p>It seems that this question (how do we turn on NLL on 2015) would be better answered via the FCP process of some sort?</p>\n</blockquote>\n<p>that seems reasonable</p>",
        "id": 136926491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084068
    },
    {
        "content": "<p>i.e., I could open a PR somewhat in advance and do a <code>rfcbot fcp merge</code>?</p>",
        "id": 136926513,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084100
    },
    {
        "content": "<p>Yeah, something along the lines.</p>",
        "id": 136926532,
        "sender_full_name": "nagisa",
        "timestamp": 1541084115
    },
    {
        "content": "<p>I like that idea</p>",
        "id": 136926535,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084123
    },
    {
        "content": "<p>We can then discuss timing on the PR as well</p>",
        "id": 136926539,
        "sender_full_name": "nagisa",
        "timestamp": 1541084127
    },
    {
        "content": "<p>Yep</p>",
        "id": 136926544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084132
    },
    {
        "content": "<p>I'd prefer to have the discussion in that sort of forum, yes</p>",
        "id": 136926551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084139
    },
    {
        "content": "<p>Should we call it then? 4 minutes left</p>",
        "id": 136926647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084217
    },
    {
        "content": "<p>Okay, unless anybody wants to discuss something else <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 136926661,
        "sender_full_name": "nagisa",
        "timestamp": 1541084232
    },
    {
        "content": "<p>If there's a real want for another small topic - I looked into <a href=\"https://github.com/rust-lang/rust/issues/54618\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54618\">#54618</a> a while ago and had a topic here discussing it with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, but I think we wanted to wait and see if anyone else chimed in on the best solution.</p>",
        "id": 136926665,
        "sender_full_name": "davidtwco",
        "timestamp": 1541084236
    },
    {
        "content": "<p>Ah yeah, <a href=\"#narrow/stream/131828-t-compiler/topic/.2354618.20extern.20crates.20trait.20suggestions\" title=\"#narrow/stream/131828-t-compiler/topic/.2354618.20extern.20crates.20trait.20suggestions\">this was the zulip topic</a>,</p>",
        "id": 136926696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084269
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> can you summarize it somewhat?</p>",
        "id": 136926699,
        "sender_full_name": "nagisa",
        "timestamp": 1541084272
    },
    {
        "content": "<p>I sort of forget the complications now :)</p>",
        "id": 136926703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084274
    },
    {
        "content": "<p>It's super minor and low priority, but: unless you <code>use</code> something from a crate, it won't be loaded. That means it doesn't show up in suggestions for traits to be implemented (or traits with implementations) .</p>",
        "id": 136926785,
        "sender_full_name": "davidtwco",
        "timestamp": 1541084334
    },
    {
        "content": "<p>Would definitely be nice if there wasn’t any distinction between crates bought in via <code>--extern</code> and via path search mechanism</p>",
        "id": 136926789,
        "sender_full_name": "nagisa",
        "timestamp": 1541084338
    },
    {
        "content": "<p>oh, I see.</p>",
        "id": 136926804,
        "sender_full_name": "nagisa",
        "timestamp": 1541084347
    },
    {
        "content": "<p>So the crate from prelude is not loaded entirely</p>",
        "id": 136926812,
        "sender_full_name": "nagisa",
        "timestamp": 1541084362
    },
    {
        "content": "<p>I think I thought <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> or <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> would have thoughts on how best to fix</p>",
        "id": 136926817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084371
    },
    {
        "content": "<p>The issue being if you have a crate in <code>Cargo.toml</code> and use an item from it (like call a function provided by a trait) without having used anything else form that crate then we don't make that suggestion.</p>",
        "id": 136926818,
        "sender_full_name": "davidtwco",
        "timestamp": 1541084372
    },
    {
        "content": "<p>ah right I sort of remember now,</p>",
        "id": 136926832,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084391
    },
    {
        "content": "<p>What are our current crates in prelude? std, core, alloc… what else?</p>",
        "id": 136926838,
        "sender_full_name": "nagisa",
        "timestamp": 1541084399
    },
    {
        "content": "<p>the problem was that at the time of issuing the error,</p>",
        "id": 136926839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084399
    },
    {
        "content": "<p>I think the solution is to have suggestion code that \"lists all traits\" to load extern prelude crates on demand</p>",
        "id": 136926883,
        "sender_full_name": "eddyb",
        "timestamp": 1541084405
    },
    {
        "content": "<p>we don't have the right struct around to just go and Load All The Crates, right?</p>",
        "id": 136926894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084411
    },
    {
        "content": "<p><code>rustc_resolve</code> already has logic like this, for its own suggestions</p>",
        "id": 136926896,
        "sender_full_name": "eddyb",
        "timestamp": 1541084416
    },
    {
        "content": "<p>The most compelling use case for this is the playground, since it has <code>--extern</code> for tons of crates that won't be loaded unless something is used from them.</p>",
        "id": 136926903,
        "sender_full_name": "davidtwco",
        "timestamp": 1541084422
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> we do AFAIK</p>",
        "id": 136926917,
        "sender_full_name": "eddyb",
        "timestamp": 1541084441
    },
    {
        "content": "<p>yeah I think the problem was that there is some type — a \"crate loader\" or something? — that is not available after resolve, though it did not look too \"significant\"?</p>",
        "id": 136926920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084447
    },
    {
        "content": "<p>I think the issue was that this suggestion is emitted after <code>rustc_resolve</code> where we can't just call a function to load the crates.</p>",
        "id": 136926923,
        "sender_full_name": "davidtwco",
        "timestamp": 1541084451
    },
    {
        "content": "<p>happy to be wrong :)</p>",
        "id": 136926924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1541084454
    },
    {
        "content": "<p>I mean, <code>rustdoc</code> does it</p>",
        "id": 136926944,
        "sender_full_name": "eddyb",
        "timestamp": 1541084465
    },
    {
        "content": "<p>maybe it needs a bit of plumbing to make it available through a query or something</p>",
        "id": 136926957,
        "sender_full_name": "eddyb",
        "timestamp": 1541084484
    },
    {
        "content": "<p>but I <em>think</em> I fixed the query engine so it can handle crates being loaded after it started</p>",
        "id": 136926970,
        "sender_full_name": "eddyb",
        "timestamp": 1541084501
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/ty/query/plumbing.rs#L828-L831\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/ty/query/plumbing.rs#L828-L831\">https://github.com/rust-lang/rust/blob/master/src/librustc/ty/query/plumbing.rs#L828-L831</a></p>",
        "id": 136927027,
        "sender_full_name": "eddyb",
        "timestamp": 1541084530
    },
    {
        "content": "<p>yeah so it'd work, if you did it somehow. that's what I meant, not that it's trivial to do the call in the first place</p>",
        "id": 136927053,
        "sender_full_name": "eddyb",
        "timestamp": 1541084567
    },
    {
        "content": "<p>Couldn’t crate loading be integrated into the query engine entirely?</p>",
        "id": 136927058,
        "sender_full_name": "nagisa",
        "timestamp": 1541084585
    },
    {
        "content": "<p>Yeah, that was a solution we thought about, but I couldn't work out how to do it.</p>",
        "id": 136927063,
        "sender_full_name": "davidtwco",
        "timestamp": 1541084589
    },
    {
        "content": "<p>(IMO we should move towards the query engine being responsible for crate loading and whatnot so I wouldn't mind adding a query for it)</p>",
        "id": 136927068,
        "sender_full_name": "eddyb",
        "timestamp": 1541084595
    },
    {
        "content": "<p>What are the complications there?</p>",
        "id": 136927073,
        "sender_full_name": "nagisa",
        "timestamp": 1541084600
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> we're far away from doing that dependency inversion</p>",
        "id": 136927076,
        "sender_full_name": "eddyb",
        "timestamp": 1541084607
    },
    {
        "content": "<p>for now we have to keep things working in two different ways</p>",
        "id": 136927087,
        "sender_full_name": "eddyb",
        "timestamp": 1541084617
    },
    {
        "content": "<p>Oh, think I see what you mean, yeah</p>",
        "id": 136927142,
        "sender_full_name": "nagisa",
        "timestamp": 1541084651
    },
    {
        "content": "<p>(<code>tcx</code> needs <code>hir</code> which is the big elephant in the room. I have some plans but not enough time/funds to have worked on it so far)</p>",
        "id": 136927143,
        "sender_full_name": "eddyb",
        "timestamp": 1541084652
    },
    {
        "content": "<p>Okay, well, it seems that we won’t get much further on this topic today, so I’ll call this meething adjourned. Feedback, if you have any, on my steering would be appreciated. Thanks for being here today!</p>",
        "id": 136927441,
        "sender_full_name": "nagisa",
        "timestamp": 1541084921
    },
    {
        "content": "<p>heh I wanted to ask you to do this edit :))</p>",
        "id": 136927459,
        "sender_full_name": "eddyb",
        "timestamp": 1541084935
    },
    {
        "content": "<p>thanks for driving today <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> !</p>",
        "id": 136927461,
        "sender_full_name": "qmx",
        "timestamp": 1541084942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> that interaction felt a lot like a zulip bug lol, I’m sure I was posting to the meeting thread, and yet…</p>",
        "id": 136927494,
        "sender_full_name": "nagisa",
        "timestamp": 1541084986
    },
    {
        "content": "<p>it wasn't a bug, I edited a previous message</p>",
        "id": 136927560,
        "sender_full_name": "eddyb",
        "timestamp": 1541085014
    },
    {
        "content": "<p>Oh, I see.</p>",
        "id": 136927565,
        "sender_full_name": "nagisa",
        "timestamp": 1541085023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I think you did great! <span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 136927589,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1541085052
    }
]