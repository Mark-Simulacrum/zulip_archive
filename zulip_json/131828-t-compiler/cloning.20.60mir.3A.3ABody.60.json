[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/78313\">#78313</a> makes it explicit that we clone (somewhat implicitly atm) mir bodies for codegen and inlining.</p>\n<p>Considering that we try to avoid cloning the mir body inside of the query system by using <code>Steal</code>, this was surprising to me.</p>\n<p>Would it make sense to instead use a <code>BodyWithSubsts { body: &amp;Body&lt;'tcx&gt;, substs: SubstsRef&lt;'tcx&gt; }</code> and substitute on the fly instead of eagerly folding the body?</p>",
        "id": 214586014,
        "sender_full_name": "lcnr",
        "timestamp": 1603725036
    },
    {
        "content": "<p>(<em>we clone mir bodies when using <code>body.substs(tcx, substs)</code></em>)</p>",
        "id": 214586355,
        "sender_full_name": "lcnr",
        "timestamp": 1603725206
    },
    {
        "content": "<p>That does seem surprising, we're <em>supposed</em> to subst on the fly from what I know</p>",
        "id": 214586851,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1603725336
    },
    {
        "content": "<p>let me quickly get the relevant places</p>",
        "id": 214587065,
        "sender_full_name": "lcnr",
        "timestamp": 1603725424
    },
    {
        "content": "<p>inlining <a href=\"https://github.com/rust-lang/rust/blob/9f6c670c4b4273b2c7c0af07a524d4240c926bfc/compiler/rustc_mir/src/transform/inline.rs#L136\">https://github.com/rust-lang/rust/blob/9f6c670c4b4273b2c7c0af07a524d4240c926bfc/compiler/rustc_mir/src/transform/inline.rs#L136</a></p>",
        "id": 214587112,
        "sender_full_name": "lcnr",
        "timestamp": 1603725451
    },
    {
        "content": "<p>generator drop shims: <a href=\"https://github.com/rust-lang/rust/blob/9f6c670c4b4273b2c7c0af07a524d4240c926bfc/compiler/rustc_mir/src/shim.rs#L138\">https://github.com/rust-lang/rust/blob/9f6c670c4b4273b2c7c0af07a524d4240c926bfc/compiler/rustc_mir/src/shim.rs#L138</a></p>",
        "id": 214587290,
        "sender_full_name": "lcnr",
        "timestamp": 1603725531
    },
    {
        "content": "<p>Isn't it expected that inlining is going to clone the inlined body?</p>",
        "id": 214588622,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1603726159
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> is referring to is that we</p>\n<ol>\n<li><code>clone</code></li>\n<li><code>subst</code></li>\n</ol>\n<p>when we could be doing that in one step</p>",
        "id": 214589126,
        "sender_full_name": "oli",
        "timestamp": 1603726359
    },
    {
        "content": "<p>so calling <code>subst</code> for the whole mir bodies has to also clone a lot of <code>Vec</code>s we don't actually want to clone</p>",
        "id": 214589186,
        "sender_full_name": "lcnr",
        "timestamp": 1603726387
    },
    {
        "content": "<p>for example <code>required_consts</code> doesn't need to get cloned <a href=\"https://github.com/rust-lang/rust/blob/9f6c670c4b4273b2c7c0af07a524d4240c926bfc/compiler/rustc_mir/src/transform/inline.rs#L147\">https://github.com/rust-lang/rust/blob/9f6c670c4b4273b2c7c0af07a524d4240c926bfc/compiler/rustc_mir/src/transform/inline.rs#L147</a></p>",
        "id": 214589254,
        "sender_full_name": "lcnr",
        "timestamp": 1603726426
    },
    {
        "content": "<p>or in general, rn we do <code>substs[Vec] -&gt; drain -&gt; extend</code> instead of the more optimal <code>iter -&gt; substs[elem] -&gt; extend</code></p>",
        "id": 214589715,
        "sender_full_name": "lcnr",
        "timestamp": 1603726614
    }
]