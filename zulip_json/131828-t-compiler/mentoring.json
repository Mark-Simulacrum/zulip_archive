[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> that was in response to <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/MCP.3A.20move.20compiler.2F.20crates.20to.20stable.20Rust.20compiler-team.23358/near/210004024\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/MCP.3A.20move.20compiler.2F.20crates.20to.20stable.20Rust.20compiler-team.23358/near/210004024</a>:</p>\n<blockquote>\n<p>I don't think investing our limited effort to attract people who prefer using stable rather than x.py, or who want initial compile times to be under ten minutes, is going to lead to far more contributors (I appreciate that this is a simplification of why this is being proposed).</p>\n</blockquote>\n<p>I think both comments were probably off-topic in this thread.</p>",
        "id": 220873690,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608821123
    },
    {
        "content": "<p>this thread, <a href=\"https://zulip-archive.rust-lang.org/131828tcompiler/38874Buildingrustcwithbetalibstd.html\">https://zulip-archive.rust-lang.org/131828tcompiler/38874Buildingrustcwithbetalibstd.html</a>, and to some extent <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Improve.20defaults.20in.20x.2Epy.20compiler-team.23326\">https://rust-lang.zulipchat.com/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Improve.20defaults.20in.20x.2Epy.20compiler-team.23326</a> got intermingled for a while</p>",
        "id": 220873919,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608821425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/MCP.3A.20move.20compiler.2F.20crates.20to.20stable.20Rust.20compiler-team.23358/near/210009562\">said</a>:</p>\n<blockquote>\n<p>My primary concern is just that we're utilizing our resources most effectively (though ultimately, contributors can spend their time where they want, so if this is what you want to improve, power to you) and investing in efforts that will yield the most return (from my own experience, it was the experience of the NLL working group that kept me coming back, not a lack of roadblocks; so I value investment in things like that more).</p>\n</blockquote>\n<p>As a point of interest, none of the teams I've joined have had mentorship programs, and even the people available to answer questions were stretched really thin on time and I had to figure out most of it myself. Having better tools(/documentation/defaults) would have helped a lot with that.</p>",
        "id": 220874087,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608821669
    },
    {
        "content": "<p>(in general the number of people streched thin on time in the rust org concerns me, but that's not something we can solve with technical measure I think)</p>",
        "id": 220874128,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608821742
    },
    {
        "content": "<p>Yeah we seriously need to <em>specifically</em> devote energy to training people. Like <em>actually stop focusing on new work</em>, and sacrifice features shipping sooner, to take time to build up training for more people to know what's going on.</p>\n<p>It takes a dedicated effort to do this, but it's much better in the long run to have built up your ability to build.</p>",
        "id": 220982985,
        "sender_full_name": "Lokathor",
        "timestamp": 1609023790
    },
    {
        "content": "<p>What I've noticed is that people who come and say \"I have free time, please give me tasks / please train me\" often disappear either immediately after that, or after completing the first task, or otherwise have low retention rates / times.<br>\nPeople who stay and do substantial work usually appear \"out of nowhere\", just start doing work, and learn by themselves (+ through reviews).<br>\n(In other words, people who have motivation to stay for long are those who <em>invest</em> a lot, not who receive a lot.)</p>",
        "id": 220997854,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1609053612
    },
    {
        "content": "<p>So I'm kind of skeptical about focusing on training (unless it's a full on collaboration with universities with intern positions), but would also interested in the results if it happen.</p>",
        "id": 220997859,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1609053649
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/MCP.3A.20move.20compiler.2F.20crates.20to.20stable.20Rust.20compiler-team.23358\">#t-compiler/major changes &gt; MCP: move compiler/ crates to stable Rust compiler-team#358</a> by <span class=\"user-mention silent\" data-user-id=\"124288\">oli</span></p>",
        "id": 221003221,
        "sender_full_name": "Notification Bot",
        "timestamp": 1609064861
    },
    {
        "content": "<p>I have had a different experience. While people disappear, they also come back just as often. Though I do notice that before a certain point, most ppl prefer PMs (I'm guessing it's intimidating to be talking in public about some work when you have little experience so far?). I have mostly been doing mentoring and little programming for the last year, and I do think we should make the process around this more organized. I'm also willing to put in the work to get this set up in a way that is good for the newcomers as well as making sure we don't start draining the mentors. It must be an enjoyable experience for both sides.</p>",
        "id": 221003368,
        "sender_full_name": "oli",
        "timestamp": 1609065132
    },
    {
        "content": "<p>I can only speak for my own experience, but I started with \"I have free time, what can I work on\" and stuck around because of my experiences in the NLL working group (a mix of other new contributors learning and some experts). Anecdotally, I feel like a bunch of people from around that period have stuck around too (e.g. <span class=\"user-mention silent\" data-user-id=\"116118\">Matthew Jasper</span>, <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span>, <span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span>  and myself, probably others), which suggests to me that there was something about that working group which led to higher retention of contributors. Of course, I've also got plenty of anecdotes of contributors only sticking around for their first contribution.</p>",
        "id": 221004302,
        "sender_full_name": "davidtwco",
        "timestamp": 1609066922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/220997854\">said</a>:</p>\n<blockquote>\n<p>What I've noticed is that people who come and say \"I have free time, please give me tasks / please train me\" often disappear either immediately after that, or after completing the first task, or otherwise have low retention rates / times.<br>\nPeople who stay and do substantial work usually appear \"out of nowhere\", just start doing work, and learn by themselves (+ through reviews).<br>\n(In other words, people who have motivation to stay for long are those who <em>invest</em> a lot, not who receive a lot.)</p>\n</blockquote>\n<p>I actually have a more cynical take on this: the vast majority of people will leave almost immediately <em>regardless</em> of whether they're mentored, and the reason more people doing substantial work learn by themselves is because most people learning by themselves give up before they make it to their first PR. On the bright side, this means that mentoring people - even though most of them will leave shortly - is just as likely to make people stay.</p>\n<p>I think part of this is that the compiler feels overwhelming to work on - I know a <em>lot</em> of people in e.g. <a class=\"stream\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization\">#t-compiler/wg-prioritization</a> that have been dedicating time regularly to the project, tried to make a PR, and gone back to prioritization work because they got stuck/thought it was too hard.</p>",
        "id": 221008120,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609074203
    },
    {
        "content": "<p>(booo, zulip doesn't let me edit this late: for posterity, the conversation started in <a href=\"#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/MCP.3A.20move.20compiler.2F.20crates.20to.20stable.20Rust.20compiler-team.23358/near/220569282\">the MCP thread</a> and the first message wasn't moved.)</p>",
        "id": 221008330,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609074637
    },
    {
        "content": "<blockquote>\n<p>I think part of this is that the compiler feels overwhelming to work on - I know a lot of people in e.g. #t-compiler/wg-prioritization that have been dedicating time regularly to the project, tried to make a PR, and gone back to prioritization work because they got stuck/thought it was too hard.</p>\n</blockquote>\n<p>Yeah as someone who does not know a ton about rustc i can vouch for this big time. I wanted to learn more about the type checker but the sheer scale of rustc and the amount of concepts and random things it has makes it an insanely daunting task and i couldn't find any great resources on it. It doesn't really help that the rustc dev guide has <code>TODO: actually talk about type checking...</code> :/<br>\nAlthough i can say that the rustc dev guide is getting better and that is a definite step in the right direction. But overall rustc is just so gigantic and overwhelming and the build process is confusing that its hard to get into it and start learning, I really wish there was a dedicated mentorship program where you could talk to people who know their stuff and have them guide you through some tasks or answer questions.</p>",
        "id": 221018206,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609093836
    },
    {
        "content": "<p>For example, i was able to pick up how rustdoc's rendering works pretty fast because it's relatively small and doesn't have a lot of concepts. But as soon as i want to touch rustc_typeck it is way too scary and i honestly have no idea where to start on such a big project.</p>",
        "id": 221018272,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609093946
    },
    {
        "content": "<p>Another thing is that zulip is really overwhelming, especially the compiler zulips, they have a ton of topics and everything is crowded overall, i don't think that's the rust team's fault, it's just how zulip is, but i think that ties back to what <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> said about preferring PMs. I prefer PMs or discord over zulip for this reason.</p>",
        "id": 221018455,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609094344
    },
    {
        "content": "<p>I actually prefer Zulip because it helps keep things organized. Using Discord means that everything about, e.g., rustdoc is in one long stream of conversation. I think the bigger issue with Zulip is it's extremely disorienting until you get used to it because its mental model is fairly unique.</p>\n<p>But, anyway, that's a bit off-topic for this Zulip thread :3</p>",
        "id": 221019571,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609096444
    },
    {
        "content": "<p>I think that mentoring in the form of improving the dev guide and code documentation would have the longest lasting and widest reach. Not to say you can't also mentor people in the traditional sense. But if experienced contributors are going to spread their knowledge, it would be nice for it to be captured in something that can help a wide audience. :)</p>",
        "id": 221020157,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1609097548
    },
    {
        "content": "<p>Yeah, I think code API docs are super helpful in understanding how rustc works because they're attached to the code, thus automatically organized, and also less likely to become out of date.</p>",
        "id": 221020189,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609097629
    },
    {
        "content": "<p>there was also the Lecture Series <a href=\"https://internals.rust-lang.org/t/compiler-lecture-series/9227\">https://internals.rust-lang.org/t/compiler-lecture-series/9227</a> whose goals were to share knowledge via an interactive presentation which would later be added to the guide (and IIRC some of the chapters do indeed come from some of these lectures) and that would be nice to revive</p>",
        "id": 221020563,
        "sender_full_name": "lqd",
        "timestamp": 1609098250
    },
    {
        "content": "<p>I should go watch those talks! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 221020643,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609098453
    },
    {
        "content": "<p>just my 2c from hacking on rustc... comparing to my experience hacking on llvm and v8, it feels a lot harder to find things. unsure if that's to do with rust's inherent separation of data and logic, or maybe some tool like <a href=\"http://source.chromium.org\">source.chromium.org</a> would be enough... is it acceptable to just spam post here with 10000 questions about everything? i think the layout of zulip definitely hinders that kind of discussion.... idk. just this weekend i was like \"i feel like messing around with v8\" and i ended up with a usable change that i submitted, but i feel like whenever i get that feeling about rustc, i can't even begin to understand the scope of whatever i want to experiment with. could just be me.</p>",
        "id": 221021472,
        "sender_full_name": "devsnek",
        "timestamp": 1609099925
    },
    {
        "content": "<p>what do you mean by a lot harder to find things?</p>",
        "id": 221021481,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609099985
    },
    {
        "content": "<p>(this is a leading question but I want to hear your opinion first)</p>",
        "id": 221021488,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609100011
    },
    {
        "content": "<p>like for example yesterday i was attempting to experiment with closures a bit. i tried tracing through the codebase starting with parsing to see how they're handled, and i had a really hard time figuring it out. stuff like all the logic and implementation details of something would be in one file, except for some enum which is randomly elsewhere in a separate crate for no discernible reason. building a mental picture of the organization has been quite difficult for me. i'm curious if maybe this is one of those \"you need an ide to understand this codebase\" kind of situations, like tsc</p>",
        "id": 221021749,
        "sender_full_name": "devsnek",
        "timestamp": 1609100435
    },
    {
        "content": "<p>oh interesting, I've never tried to follow something all the way through the compiler like that</p>",
        "id": 221021760,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609100486
    },
    {
        "content": "<p>I was going to say something about how it's hard to find where queries are defined</p>",
        "id": 221021761,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609100495
    },
    {
        "content": "<blockquote>\n<p>is it acceptable to just spam post here with 10000 questions about everything? </p>\n</blockquote>\n<p>absolutely yes, by the way</p>",
        "id": 221021809,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609100527
    },
    {
        "content": "<p>another example, i was trying to figure out how <code>#[global_allocator]</code> works, and apparently it is just adhoc'd through the entire compiler. that's more of a refactoring thing i guess but when you're new to the codebase and trying to modify something it can be super difficult</p>",
        "id": 221021815,
        "sender_full_name": "devsnek",
        "timestamp": 1609100555
    },
    {
        "content": "<p>you should see my nonsense lol <a href=\"#narrow/stream/266220-rustdoc/topic/async.20functions.20show.20elided.20lifetimes.20.2363037\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/async.20functions.20show.20elided.20lifetimes.20.2363037</a></p>",
        "id": 221021816,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609100555
    },
    {
        "content": "<p>oftentimes the reason for such splits to different crates is to reduce compile times ^^</p>",
        "id": 221021819,
        "sender_full_name": "lqd",
        "timestamp": 1609100562
    },
    {
        "content": "<p>fair enough :), perhaps making people feel comfortable with spamming zulip more would be good. i think the global message counter makes people wary of touching anything</p>",
        "id": 221021888,
        "sender_full_name": "devsnek",
        "timestamp": 1609100677
    },
    {
        "content": "<p>also the fear when you're making a new topic that one already exists, but searching is IMPOSSIBLE because the search is USELESS</p>",
        "id": 221021901,
        "sender_full_name": "devsnek",
        "timestamp": 1609100725
    },
    {
        "content": "<p>FWIW this isn't stack overflow, I'd encourage you to make new threads instead of reviving old ones</p>",
        "id": 221021913,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609100760
    },
    {
        "content": "<p>It's also helpful to other people when you ask questions; I like reading through some of the threads in <a class=\"stream\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler\">#t-compiler</a> and <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a> to learn from discussions around someone's question :)</p>",
        "id": 221023935,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609104346
    },
    {
        "content": "<p>One thing i dislike about zulip is that there isnt a topic-less thread or something to just ask quick questions, if i want to ask where something is done i shouldnt have to make a whole new thread for a simple question</p>",
        "id": 221023936,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609104357
    },
    {
        "content": "<p>We could just create a topic named <code>quick questions</code> in <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a> :)</p>",
        "id": 221024124,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609104665
    },
    {
        "content": "<p>(I actually really like that there's nearly guaranteed threading, really helps to catch up after a day or two away; topics should not be treated as anything too permanent or important)</p>",
        "id": 221024128,
        "sender_full_name": "simulacrum",
        "timestamp": 1609104676
    },
    {
        "content": "<p>I think opening a topic here is not as big of a deal as in other platforms</p>",
        "id": 221024130,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609104677
    },
    {
        "content": "<p>I guess opening a topic even if it will contain only 2 messages is absolutely fine</p>",
        "id": 221024179,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609104725
    },
    {
        "content": "<p>A topic is kind of like an email thread, except lighter weight: the reason you give an email a subject is so the other people know what to expect – it gives a brief summary. It's the same with Zulip.</p>",
        "id": 221024202,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609104825
    },
    {
        "content": "<p>And you shouldn't worry about having a great topic name; as long as it's in the ballpark of what you mean.</p>",
        "id": 221024249,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609104858
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/221024124\">said</a>:</p>\n<blockquote>\n<p>We could just create a topic named <code>quick questions</code> in <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a> :)</p>\n</blockquote>\n<p>Yeah but at the same time, the sheer number of threads created means it will just be buried</p>",
        "id": 221024272,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609104952
    },
    {
        "content": "<p>I wish zulip had a way to pin threads</p>",
        "id": 221024314,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609104976
    },
    {
        "content": "<p>(Something like <a href=\"https://github.com/zulip/zulip/issues/16548\">https://github.com/zulip/zulip/issues/16548</a>?)</p>",
        "id": 221024342,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609105049
    },
    {
        "content": "<p>I am opposed to a quick questions topic; I don't see significant advantages to not asking users to add a short subject - seems low effort and I'd not personally at least be able to keep up and answer questions, whereas per question topics mean that it's really easy to come back and answer people's questions in an hour or two - or to figure out if someone's replied to you</p>",
        "id": 221024550,
        "sender_full_name": "simulacrum",
        "timestamp": 1609105447
    },
    {
        "content": "<p>Yeah, I agree. I was just saying that it's not Zulip that's preventing topic-less threads.</p>",
        "id": 221024818,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609105933
    },
    {
        "content": "<p>With respect to some of the difficulties in learning rustc mentioned earlier, one that resonates with me is that some parts of the compiler express concepts in a different vocabulary than Rust itself (or than other parts of the compiler). This makes it harder to use induction and piece together what something is doing based on the names of things, where you are in the compiler, and the rules of the language.</p>",
        "id": 221026526,
        "sender_full_name": "davidtwco",
        "timestamp": 1609109066
    },
    {
        "content": "<p>Plus the names of types and functions in general are often not descriptive enough to be understood without docs. E.g., for a long time I didn't understand what <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyVid.html\"><code>TyVid</code></a> was; <a href=\"https://github.com/rust-lang/rust/pull/80402\">it was only yesterday</a> that I realized what it was. Going source-diving can help you figure it out, but there are so many names and concepts that you can't source-dive for them all.</p>",
        "id": 221029638,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609114242
    },
    {
        "content": "<p>Another example is <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_resolve/struct.ModuleData.html#structfield.normal_ancestor_id\"><code>ModuleData::normal_ancestor_id</code></a>; it was only after I used it incorrectly and <a href=\"https://github.com/rust-lang/rust/pull/79956#discussion_r541773655\">petrochenkov explained it</a> that I understood the name.</p>",
        "id": 221029702,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609114351
    },
    {
        "content": "<p>Naming is hard, especially when you want short names, though!</p>",
        "id": 221029706,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609114370
    },
    {
        "content": "<p>I do use the <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/\">internal docs</a> a lot instead of source diving, and I do feel like it is really useful, but I also know my way around already, so this is not a good data point.</p>",
        "id": 221029720,
        "sender_full_name": "oli",
        "timestamp": 1609114428
    },
    {
        "content": "<p>Especially searching for functions taking specific types as arguments or returning them is super helpful in the docs</p>",
        "id": 221029761,
        "sender_full_name": "oli",
        "timestamp": 1609114451
    },
    {
        "content": "<p>It's funny, I always forget that type-based search exists <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221029766,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609114466
    },
    {
        "content": "<p>I find the internal docs to be quite useful too (though I know my way around <em>somewhat</em> as well). But it's still hard to figure out the meaning of some of the names without looking at the source.</p>",
        "id": 221029782,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609114505
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/221029702\">said</a>:</p>\n<blockquote>\n<p>Another example is <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_resolve/struct.ModuleData.html#structfield.normal_ancestor_id\"><code>ModuleData::normal_ancestor_id</code></a>; it was only after I used it incorrectly and <a href=\"https://github.com/rust-lang/rust/pull/79956#discussion_r541773655\">petrochenkov explained it</a> that I understood the name.</p>\n</blockquote>\n<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/80425\">#80425</a>.</p>",
        "id": 221031355,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609117049
    },
    {
        "content": "<p>Honestly i kind of wish there was a document which listed out common concepts in the compiler like TyCtxt, GlobalCtxt, Session, DefId, etc. Without having to go through the entire dev guide (which doesnt cover all of them afaik)</p>",
        "id": 221031402,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117102
    },
    {
        "content": "<p>There's the gloassary I guess</p>",
        "id": 221031411,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117132
    },
    {
        "content": "<p>Feel free to open an issue if you think something could be improved btw</p>",
        "id": 221031416,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117156
    },
    {
        "content": "<p>(I'm referring to this: <a href=\"https://rustc-dev-guide.rust-lang.org/appendix/glossary.html\">https://rustc-dev-guide.rust-lang.org/appendix/glossary.html</a>)</p>",
        "id": 221031467,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117204
    },
    {
        "content": "<p>Would that be the kind of document you're searching for?</p>",
        "id": 221031475,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117230
    },
    {
        "content": "<p>Didnt know that existed <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 221031480,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117249
    },
    {
        "content": "<p>Maybe we need to expose it a bit more then</p>",
        "id": 221031487,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117276
    },
    {
        "content": "<p>But i mean, <code>   The data structure often referred to as tcx in code</code> this doesnt really explain it a lot <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 221031490,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117295
    },
    {
        "content": "<p>Another thing which is a little bit offtopic but it adds more confusion and complexity is just sheer number of lifetimes used in rustc</p>",
        "id": 221031531,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117348
    },
    {
        "content": "<p>It's actually not so bad I think</p>",
        "id": 221031535,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117368
    },
    {
        "content": "<p>It seems like everything you do you need to carry a lifetime because of the allocation arena</p>",
        "id": 221031536,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117369
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276242\">Riccardo D'Ambrosio</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/221031531\">said</a>:</p>\n<blockquote>\n<p>Another thing which is a little bit offtopic but it adds more confusion and complexity is just sheer number of lifetimes used in rustc</p>\n</blockquote>\n<p>Well, lifetimes are kind of an important part of Rust.</p>",
        "id": 221031538,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609117371
    },
    {
        "content": "<p>Yeah, i understand that its for performance, but that doesn't really make it better</p>",
        "id": 221031556,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117390
    },
    {
        "content": "<p>Yeah lifetimes are part of rust but that doesn't mean they can't be annoying <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 221031560,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117419
    },
    {
        "content": "<p>After a few contributions, I feel like these actually help because you don't actually have to reason about lifetimes</p>",
        "id": 221031562,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117425
    },
    {
        "content": "<p>They're not hard they just add verbosity imo</p>",
        "id": 221031602,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117448
    },
    {
        "content": "<p>Though usually (as a newish contributor) you're not introducing new data structures, so the lifetimes often work out without much effort.</p>",
        "id": 221031603,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609117450
    },
    {
        "content": "<p>It's always the lifetime <code>'hir</code> of the HIR or the lifetime <code>'tcx</code> of the TyCtxt arenas</p>",
        "id": 221031609,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117461
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"276242\">Riccardo D'Ambrosio</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/221031602\">said</a>:</p>\n<blockquote>\n<p>They're not hard they just add verbosity imo</p>\n</blockquote>\n<p>Rust is a systems-level language; it's just making things explicit :)</p>",
        "id": 221031613,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609117471
    },
    {
        "content": "<p>I used to find lifetimes really confusing but gradually I've grown to really like them.</p>",
        "id": 221031619,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609117490
    },
    {
        "content": "<p>I actually think they make it <em>easier</em> to understand the code.</p>",
        "id": 221031620,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609117499
    },
    {
        "content": "<p>I don't see how that makes it better, sure, its more explicit, but its also more verbose</p>",
        "id": 221031625,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117506
    },
    {
        "content": "<p>Right, they're a bit verbose</p>",
        "id": 221031628,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117510
    },
    {
        "content": "<p>Again its not the fact that i dont understand them, its just that they're annoying because everything you do in rustc is tied to a lifetime and you need to always carry that lifetime</p>",
        "id": 221031633,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117533
    },
    {
        "content": "<p>I guess. Rust can be a bit verbose sometimes, but the explicitness of everything makes it worth it to me.</p>",
        "id": 221031643,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609117562
    },
    {
        "content": "<p><del>That's nothing compared to trying to understand pattern bindings</del> <span aria-label=\"tired\" class=\"emoji emoji-1f614\" role=\"img\" title=\"tired\">:tired:</span></p>",
        "id": 221031681,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117568
    },
    {
        "content": "<p>I also agree a lot in saying that rustc uses weird names for things</p>",
        "id": 221031699,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117650
    },
    {
        "content": "<p>Or names that are unfamiliar if you just use rust and you don't hack on rustc itself</p>",
        "id": 221031710,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117677
    },
    {
        "content": "<p>I find that particularely true for type stuff</p>",
        "id": 221031747,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117689
    },
    {
        "content": "<p>Yeah me too</p>",
        "id": 221031749,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117694
    },
    {
        "content": "<p>One example i had was trying to find how a struct is represented</p>",
        "id": 221031754,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117708
    },
    {
        "content": "<p>I guess it's because it's closer to type theory jargon than Rust jargon</p>",
        "id": 221031757,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1609117712
    },
    {
        "content": "<p>Yeah that too</p>",
        "id": 221031759,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609117718
    },
    {
        "content": "<p>What I like to do and am trying to more of when I only partially understand something is open a PR to add docs for it and then make it clear that it's an informed guess. Then someone who understands this can review it and either approve it or let me know what I got wrong.</p>",
        "id": 221031929,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609118035
    },
    {
        "content": "<p>haha i love that approach, since you learn more yourself and you help people understand it too <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 221073960,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609174469
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/220997854\">said</a>:</p>\n<blockquote>\n<p>What I've noticed is that people who come and say \"I have free time, please give me tasks / please train me\" ... </p>\n</blockquote>\n<p>(tangent to the topic) I notice that people show up on <code>#general/new members</code>, ask what to do and the same answers are often given, often by the same people. This is a very kind and welcoming approach but I wonder if a brief FAQ could help offloading and avoid the repetitive parts of this process. After the newcomer has read the \"intro\", further questions are of course welcome.</p>",
        "id": 221075477,
        "sender_full_name": "apiraino",
        "timestamp": 1609175754
    },
    {
        "content": "<p>(maybe such a document already exist and just need to be pointed out)</p>",
        "id": 221075536,
        "sender_full_name": "apiraino",
        "timestamp": 1609175789
    },
    {
        "content": "<p>I am strongly +1 for an FAQ :)</p>",
        "id": 221075618,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609175878
    },
    {
        "content": "<p>although I don't think in this particular case it would always be applicable - an FAQ can tell people 'say what you're interested in as part of your introduction' but I don't know that we could link to every part of the project</p>",
        "id": 221075710,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609175965
    },
    {
        "content": "<p>or at least, I think I personally would find an exhaustive list of links overwhelming</p>",
        "id": 221075725,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609175982
    },
    {
        "content": "<p>you have a point, we don't want to map the whole ecosystem in a FAQ but I also see a high number of mentions of  clap, clippy, <a href=\"http://docs.rs\">docs.rs</a>, wg-rls-2, the compiler streams, rust-doc dev documentation ...  would it make sense to at least group a dozen of these frequently suggested answers?</p>\n<p>I also notice that on the website there is no apparent access to a \"contribution section\", people are redirected here and (rightfully) expect some directions by the doorman</p>",
        "id": 221076573,
        "sender_full_name": "apiraino",
        "timestamp": 1609176710
    },
    {
        "content": "<blockquote>\n<p>Camelid: What I like to do and am trying to more of when I only partially understand something is open a PR to add docs for it and then make it clear that it's an informed guess. Then someone who understands this can review it and either approve it or let me know what I got wrong.</p>\n</blockquote>\n<p>My feelings and approach exactly!</p>",
        "id": 221086404,
        "sender_full_name": "pierwill",
        "timestamp": 1609184817
    },
    {
        "content": "<p>My 2cents as someone who is active in the Rust community but just recently really started to contribute to rustc (note I have lots of time to try to contribute). It is _hard_. People are generally kind but I've often felt worried I was asking too many questions and tried only to ask when I was stuck. The code is often not that well documented and so it takes a lot of spelunking to get even a bit of a familiarity with what's going on. Having an explicit mentor with whom I could pair on a feature would be <em>super</em> helpful. It's really nice to be able to ask tangential questions that are not 100% necessary for the task at hand but are still useful to get familiar with the compiler.</p>",
        "id": 221137353,
        "sender_full_name": "rylev",
        "timestamp": 1609251736
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/220997854\">said</a>:</p>\n<blockquote>\n<p>What I've noticed is that people who come and say \"I have free time, please give me tasks / please train me\" often disappear either immediately after that, or after completing the first task, or otherwise have low retention rates / times.<br>\nPeople who stay and do substantial work usually appear \"out of nowhere\", just start doing work, and learn by themselves (+ through reviews).<br>\n(In other words, people who have motivation to stay for long are those who <em>invest</em> a lot, not who receive a lot.)</p>\n</blockquote>\n<p>I would highly urge you to consider that a lot of people drop off because the amount of energy it took to just get one change in (and not really feeling like you understand the compiler any better than you started) is <em>highly</em> discouraging to those who might otherwise contribute again.</p>",
        "id": 221137418,
        "sender_full_name": "rylev",
        "timestamp": 1609251821
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224872\">Ryan Levick</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/221137353\">said</a>:</p>\n<blockquote>\n<p>I've often felt worried I was asking too many questions and tried only to ask when I was stuck.</p>\n</blockquote>\n<p>I am unsure how to communicate this, as I obviously have failed in the past: I am happy answering questions or just talking about random compiler stuff of any level and pedantery. Either I respond, then I am available, or I don't, then I'll respond once I am available.</p>\n<blockquote>\n<p>Having an explicit mentor with whom I could pair on a feature would be <em>super</em> helpful. It's really nice to be able to ask tangential questions that are not 100% necessary for the task at hand but are still useful to get familiar with the compiler.</p>\n</blockquote>\n<p>Maybe we should add more fine grained attributes to <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby</span> 's awesome <a href=\"https://rustbeginners.github.io/awesome-rust-mentors/\">mentor list</a>, so everyone who has the capacity to mentor can state what kind of mentoring they can offer (\"can\" includes \"want\", there is no need to distinguish that. Also no need to justify or explain the mentoring that is being offered or not). This feels like the \"companies should communicate their salary range for a position\" style thing. While ppl can already ask mentors how they'll to do mentoring, just including it in a public place lowers the entry bar significantly.</p>",
        "id": 221138743,
        "sender_full_name": "oli",
        "timestamp": 1609253037
    },
    {
        "content": "<p>As a one-off contributor, I didn't drop off because the process was too hard, but the tooling felt rather unnecessarily unfriendly. I wish <code>std</code> and the compiler were better separated and that <code>x.py</code> wasn't needed. To test a small change to <code>libstd</code> on Windows you need to go get Python first, probably wait some 40 minutes for LLVM to build, wait for the compiler (which always seemed to build one stage too many). That's quite a lot of stuff to ask for.</p>",
        "id": 221139246,
        "sender_full_name": "Laurențiu",
        "timestamp": 1609253438
    },
    {
        "content": "<p>matklad put it down quite well in <a href=\"https://matklad.github.io/2020/09/12/rust-in-2021.html\">https://matklad.github.io/2020/09/12/rust-in-2021.html</a>. And see <a href=\"https://www.reddit.com/r/rust/comments/irhj4o/blog_post_rust_in_2021/g52e0j7/\">https://www.reddit.com/r/rust/comments/irhj4o/blog_post_rust_in_2021/g52e0j7/</a> for an example of someone being put off by the whole build process.</p>",
        "id": 221139447,
        "sender_full_name": "Laurențiu",
        "timestamp": 1609253595
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mentoring/near/221138743\">said</a>:</p>\n<blockquote>\n<p>I am unsure how to communicate this, as I obviously have failed in the past: I am happy answering questions or just talking about random compiler stuff of any level and pedantery. Either I respond, then I am available, or I don't, then I'll respond once I am available.</p>\n</blockquote>\n<p>I felt that IRC handled this somewhat better – you'd just feel like you're chatting and without necessarily implying you're expecting the other party to continue helping you. Threads in Zulip kind of imply investment and closer-interaction in someways I feel.</p>",
        "id": 221154798,
        "sender_full_name": "nagisa",
        "timestamp": 1609265913
    },
    {
        "content": "<p>There are two rust matrixes. The mozilla one and the <a href=\"http://matrix.org\">matrix.org</a> one.</p>",
        "id": 221154853,
        "sender_full_name": "bjorn3",
        "timestamp": 1609265971
    },
    {
        "content": "<p>This happened in the past for me – I'm happy to continue chatting and helping while I'm around and even happy to be pinged once in a while, but then since it was only myself and the contributor in that particular thread they feelt like I'm the only one helping them and they felt the need to ping me for every question.</p>",
        "id": 221154935,
        "sender_full_name": "nagisa",
        "timestamp": 1609266025
    },
    {
        "content": "<p>and that gets old quick ^^</p>",
        "id": 221154948,
        "sender_full_name": "nagisa",
        "timestamp": 1609266031
    },
    {
        "content": "<p>As far as mentoring more broadly is concerned, so far any mentoring I've given has paid for itself many times over.</p>",
        "id": 221155101,
        "sender_full_name": "nagisa",
        "timestamp": 1609266176
    },
    {
        "content": "<p>Even if the contributor makes a PR or two before disappearing, they do work that I otherwise would have spent more time on than I did by helping said contributors working on those PRs.</p>",
        "id": 221155260,
        "sender_full_name": "nagisa",
        "timestamp": 1609266283
    },
    {
        "content": "<p>unrelated, I'm interested to have access to the 'lab notes' for a PR, as it is<br>\nnow the code is presented [properly] as a blob on github, context around thought<br>\nprocess/stages for how the changes materialized to their present state could<br>\nrepresent some kind of hands-free mentoring and as a source of reference for<br>\nfuture replication</p>",
        "id": 221182043,
        "sender_full_name": "oliver",
        "timestamp": 1609291051
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> I tend to ramble about my PRs, you might find that interesting</p>\n<ul>\n<li><a href=\"#narrow/stream/266220-rustdoc/topic/async.20functions.20show.20elided.20lifetimes.20.2363037\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/async.20functions.20show.20elided.20lifetimes.20.2363037</a></li>\n<li><a href=\"#narrow/stream/266220-rustdoc/topic/Issue.2079497\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/Issue.2079497</a></li>\n<li><a href=\"#narrow/stream/266220-rustdoc/topic/Trying.20to.20get.20rustdoc.20to.20generate.20redirects\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/Trying.20to.20get.20rustdoc.20to.20generate.20redirects</a></li>\n<li><a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Rustc.20loads.20sysroot.20artifacts.20before.20cargo.20ones.3F\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Rustc.20loads.20sysroot.20artifacts.20before.20cargo.20ones.3F</a></li>\n<li><a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustdoc.2C.20quickly.20.2379540\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/rustdoc.2C.20quickly.20.2379540</a></li>\n<li><a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Is.20there.20a.20symbol.20for.20the.20empty.20string.3F\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Is.20there.20a.20symbol.20for.20the.20empty.20string.3F</a></li>\n</ul>",
        "id": 221182199,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609291279
    },
    {
        "content": "<p>(I have a lot more if you want them, although the ones on Discord tend to be more ramble-y than helpful)</p>",
        "id": 221182203,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609291292
    },
    {
        "content": "<p>I suppose that is the issue in that the creative process isn't linear<br>\nas might be the case if one was working through an experiment<br>\nand simply recording the actions and outcomes</p>",
        "id": 221182290,
        "sender_full_name": "oliver",
        "timestamp": 1609291438
    },
    {
        "content": "<p>yeah, that would be a lot of work to do - the closest you'll get is probably PR descriptions, but those sometimes lack all the context</p>",
        "id": 221182367,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609291531
    },
    {
        "content": "<p>maybe something like <a href=\"https://github.com/rust-lang/rust/pull/75176\">https://github.com/rust-lang/rust/pull/75176</a>?</p>",
        "id": 221182379,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609291557
    },
    {
        "content": "<p>one also needs to understand and study the creative process, <br>\nideally in a linear and contained manner, <br>\nthough how change actually happens is hard to define</p>",
        "id": 221183222,
        "sender_full_name": "oliver",
        "timestamp": 1609292747
    },
    {
        "content": "<p>I'm not sure what you're asking for.</p>",
        "id": 221183268,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609292808
    },
    {
        "content": "<p>the lab notes for a PR</p>",
        "id": 221183332,
        "sender_full_name": "oliver",
        "timestamp": 1609292925
    },
    {
        "content": "<p>but that's not really how hacking on a problem progresses</p>",
        "id": 221183398,
        "sender_full_name": "oliver",
        "timestamp": 1609293027
    },
    {
        "content": "<p>lab notes are the series of steps needed to reproduce an experiment</p>",
        "id": 221183419,
        "sender_full_name": "oliver",
        "timestamp": 1609293079
    },
    {
        "content": "<p>if someone had to come along behind you and reproduce the PR<br>\nit would be a summary of the steps involved</p>",
        "id": 221183478,
        "sender_full_name": "oliver",
        "timestamp": 1609293148
    },
    {
        "content": "<p>like the pseudo-code for a PR, a 'pseudo-PR' or 'PR-recipe'</p>",
        "id": 221183490,
        "sender_full_name": "oliver",
        "timestamp": 1609293173
    },
    {
        "content": "<p>so... something like a high resolution (time step wise) diff tracking of the entire development instead of just the git commits?</p>",
        "id": 221183880,
        "sender_full_name": "oli",
        "timestamp": 1609293732
    },
    {
        "content": "<p>probably including whatever documentation was opened and any search entries that were done to obtain the information necessary to be able to do the actual implementation work</p>",
        "id": 221183905,
        "sender_full_name": "oli",
        "timestamp": 1609293789
    },
    {
        "content": "<p>information which would be too much detail for regular code comments<br>\nbut which would be important if the code disappeared and one needed<br>\nto redo the PRs commits</p>",
        "id": 221183965,
        "sender_full_name": "oliver",
        "timestamp": 1609293850
    },
    {
        "content": "<p>so, I think the discussion in this topic is very important and has received very valuable points from anyone (the topic itself is an \"evergreen\" for every project). <br>\nDon't know how or when, but I feel that scribbling down some notes about this discussion will be useful at some point (rust foundation etc.).</p>",
        "id": 221251929,
        "sender_full_name": "apiraino",
        "timestamp": 1609367188
    },
    {
        "content": "<p>Please find the document at: <a href=\"https://hackmd.io/IRVrcy4rS1e8T6xY0GdHEQ?view\">https://hackmd.io/IRVrcy4rS1e8T6xY0GdHEQ?view</a></p>",
        "id": 221251947,
        "sender_full_name": "apiraino",
        "timestamp": 1609367203
    },
    {
        "content": "<p>The document should be editable by members od the HackMD rust team, in case let me know if cant edit it</p>",
        "id": 221251965,
        "sender_full_name": "apiraino",
        "timestamp": 1609367238
    },
    {
        "content": "<p>(actually I just wanted to play with my new cherry brown MX keyboard, true story)</p>",
        "id": 221252044,
        "sender_full_name": "apiraino",
        "timestamp": 1609367292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> FYI I think anyone on the internet can edit it. I'm not officially part of the HackMD team and it let me add a space (don't worry I removed it ;)</p>",
        "id": 221316045,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609448553
    },
    {
        "content": "<p>Seems like write permission is granted to all signed-in users.</p>",
        "id": 221316358,
        "sender_full_name": "bjorn3",
        "timestamp": 1609448896
    },
    {
        "content": "<p>correct. when I write a document in the Rust HackMD team then I lose rights to subsequent permission edits :-/</p>",
        "id": 221319644,
        "sender_full_name": "apiraino",
        "timestamp": 1609451981
    },
    {
        "content": "<p>if anyone can fix that and set <code>write: owners</code> that would be great ...</p>",
        "id": 221319715,
        "sender_full_name": "apiraino",
        "timestamp": 1609452009
    },
    {
        "content": "<p>You might want to open a topic in <a class=\"stream\" data-stream-id=\"122651\" href=\"/#narrow/stream/122651-general\">#general</a> to get an admin's attention.</p>",
        "id": 221329462,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609465210
    },
    {
        "content": "<p>I'm dropping here (for future reference) an initiative that could be evaluatd in the context of creating and committing to mentoring people:<br>\n<a href=\"https://github.com/nikomatsakis/office-hours\">https://github.com/nikomatsakis/office-hours</a><br>\n(not specifically referring to Niko, just the idea itself)</p>",
        "id": 221674656,
        "sender_full_name": "apiraino",
        "timestamp": 1609867262
    }
]