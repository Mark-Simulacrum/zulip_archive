[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> I'm trying to remove <code>SessionGlobals::{known,used}_attrs</code>, by moving them into <code>Session</code></p>",
        "id": 205331587,
        "sender_full_name": "njn",
        "timestamp": 1596012795
    },
    {
        "content": "<p>I've got a fair way, but have hit a problem - the <code>run()</code> function in <code>librustdoc/html/render.rs</code> doesn't have a <code>Session</code>, but one is needed</p>",
        "id": 205331625,
        "sender_full_name": "njn",
        "timestamp": 1596012840
    },
    {
        "content": "<p>With the existing code, the global creation is distinct from the Session creation</p>",
        "id": 205331688,
        "sender_full_name": "njn",
        "timestamp": 1596012873
    },
    {
        "content": "<p>I'm not even sure if the <code>render.rs</code> code really needs the attr known/used stuff</p>",
        "id": 205331716,
        "sender_full_name": "njn",
        "timestamp": 1596012905
    },
    {
        "content": "<p>rustdoc can probably entirely ignore known/used attrs, so long as it doesn't panic on calling attr::mark_used and such</p>",
        "id": 205351834,
        "sender_full_name": "simulacrum",
        "timestamp": 1596027416
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74932\">https://github.com/rust-lang/rust/pull/74932</a> is the resulting PR</p>",
        "id": 205448049,
        "sender_full_name": "njn",
        "timestamp": 1596093495
    },
    {
        "content": "<p>I've been looking at <code>rustc_span::SessionGlobals</code>. It is quite a bit harder :(</p>",
        "id": 205448059,
        "sender_full_name": "njn",
        "timestamp": 1596093508
    },
    {
        "content": "<p>e.g. requiring a <code>Session</code> on hand to call <code>Span::new()</code> or <code>Symbol::intern()</code> is really invasive</p>",
        "id": 205448101,
        "sender_full_name": "njn",
        "timestamp": 1596093568
    },
    {
        "content": "<p>And there are the places where we only have a <code>ParseSess</code> rather than a <code>Session</code> (e.g. some tests, some parts of rustdoc)</p>",
        "id": 205448860,
        "sender_full_name": "njn",
        "timestamp": 1596094246
    },
    {
        "content": "<p>rustdoc wants to check for dead attributes</p>",
        "id": 205472392,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596112539
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74098#issuecomment-665789015\">https://github.com/rust-lang/rust/pull/74098#issuecomment-665789015</a></p>",
        "id": 205472496,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596112586
    },
    {
        "content": "<p>so they can't be removed completely</p>",
        "id": 205472506,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596112593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> is working on a PR fixing the current broken behavior, I would wait until he finishes that</p>",
        "id": 205472525,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596112612
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">njn</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Sessions.20and.20rustdoc/near/205448101\">said</a>:</p>\n<blockquote>\n<p>e.g. requiring a <code>Session</code> on hand to call <code>Span::new()</code> or <code>Symbol::intern()</code> is really invasive</p>\n</blockquote>\n<p>Yeah, that's why the TLS-based access to the session have to be provided from the start.</p>",
        "id": 205504159,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1596128296
    },
    {
        "content": "<p>Not only to serve <code>Debug</code> impls and such, but also to make the migration realistic.</p>",
        "id": 205504272,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1596128365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">njn</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Sessions.20and.20rustdoc/near/205448860\">said</a>:</p>\n<blockquote>\n<p>And there are the places where we only have a <code>ParseSess</code> rather than a <code>Session</code> (e.g. some tests, some parts of rustdoc)</p>\n</blockquote>\n<p>Globals can live in <code>ParseSess</code> as well, or in some new session type if necessary.<br>\n(I still haven't investigated this enough to make more detailed suggestions.)</p>",
        "id": 205504651,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1596128552
    },
    {
        "content": "<p>I have avoided using <code>ParseSess</code> because I don't understand its lifetimes well. A <code>ParseSess</code> can be created in lots of places that a <code>Session</code> is not, and I'm scared of e.g. ending up with two symbol tables and then having bogus comparisons made between symbols from different tables.</p>",
        "id": 205543042,
        "sender_full_name": "njn",
        "timestamp": 1596150647
    },
    {
        "content": "<p>In general, the <code>SessionGlobals</code> annoy me. Their setup and structure is complex and confusing. Plus we have the ImplicitContext stuff, which is also complex and confusing. Plus TLS accesses are slow. If we must have implicit access it would be better to have a single mechanism.</p>",
        "id": 205543665,
        "sender_full_name": "njn",
        "timestamp": 1596151093
    },
    {
        "content": "<p><code>SessionGlobals::source_map</code> is a prime example of the messiness here. When printing a span, we look for a source map in the ImplicitCtxt if it's available. Failing that, we fall back to any source map that might be in <code>SessionGlobals</code>. Failing that, we print it raw.</p>",
        "id": 205543746,
        "sender_full_name": "njn",
        "timestamp": 1596151183
    },
    {
        "content": "<p>I still haven't got my head around the ImplicitCtxt stuff. All those <code>enter_context</code> and <code>enter_global</code> and <code>with_global</code> functions</p>",
        "id": 205543840,
        "sender_full_name": "njn",
        "timestamp": 1596151258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> It seems like you have strong opinions here. I'd be happy to hear your ideas for a re-design. <a href=\"https://github.com/rust-lang/rust/issues/74932\">#74932</a> is me dabbling in this stuff</p>",
        "id": 205543963,
        "sender_full_name": "njn",
        "timestamp": 1596151359
    }
]