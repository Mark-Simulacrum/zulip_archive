[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 169641056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562240483
    },
    {
        "content": "<p>can you take a moment to convince me that putting support for a \"missing <code>#[structural_match]</code>\" flag into TypeFlags is a bad idea?</p>",
        "id": 169641085,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562240511
    },
    {
        "content": "<p>or rather, I cannot immediately even tell if the computation of TypeFlags has any access to the <code>tcx</code>, and thus I do not know if it can do lookups for the attributes on AdtDef's it find.</p>",
        "id": 169641152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562240568
    },
    {
        "content": "<p>So its possible <em>that</em> would be a reason that putting a bit there would be a bad idea. But in any case, I'm basically floundering around trying to figure out the \"right way\" to resolve this one remaining case I have identifed, which is given in <a href=\"https://github.com/rust-lang/rust/pull/62339#issuecomment-508444605\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62339#issuecomment-508444605\">this comment</a></p>",
        "id": 169641201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562240630
    },
    {
        "content": "<p>The simpler short term approach is to do a recursion over the fields of the ADT locally (with an <code>FxHashSet</code> to track previously traversed types) ... this is probably an anti-pattern but its one I see used elsewhere. I wonder if the rustc-guide has anything to say about such code.</p>",
        "id": 169642971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562242400
    },
    {
        "content": "<p>Hey again <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> ; so you are now well aware of PR <a href=\"https://github.com/rust-lang/rust/issues/62339\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62339\">#62339</a> (which took a different route to solving this problem).</p>",
        "id": 170460879,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562684287
    },
    {
        "content": "<p>But I have two questions: You said a crater run would be a good idea. Did you want that to block this PR? You said in the previous bullet \"r=me\" on PR itself, so I take that to mean that the crater run is intended to be a follow-up task, right?</p>",
        "id": 170460937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562684324
    },
    {
        "content": "<p>Correct</p>",
        "id": 170461286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562684479
    },
    {
        "content": "<p>Follow-up task seems fine</p>",
        "id": 170461310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562684496
    },
    {
        "content": "<p>I actually forgot to check -- does the FCW direct to a reasonable landing issue?</p>",
        "id": 170461327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562684514
    },
    {
        "content": "<p>Do you mean in <em>this</em> context?</p>",
        "id": 170461429,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562684589
    },
    {
        "content": "<p>or about future-compat warning general?</p>",
        "id": 170461437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562684598
    },
    {
        "content": "<p>for this specific lint about structural_match, there is this tracking issue I filed: <a href=\"https://github.com/rust-lang/rust/issues/62411\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62411\">#62411</a></p>",
        "id": 170461467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562684627
    },
    {
        "content": "<p>for general discussion of FCW issues, the best thing I can currently think of is issue <a href=\"https://github.com/rust-lang/rust/issues/34596\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34596\">#34596</a> (and PR <a href=\"https://github.com/rust-lang/rust/issues/59658\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59658\">#59658</a> for some angry debate!)</p>",
        "id": 170461564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562684670
    },
    {
        "content": "<p>I do rather like the example I picked for <a href=\"https://github.com/rust-lang/rust/issues/62411\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62411\">#62411</a>. :)</p>",
        "id": 170461596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562684694
    },
    {
        "content": "<blockquote>\n<p>for this specific lint about structural_match, there is this tracking issue I filed: <a href=\"https://github.com/rust-lang/rust/issues/62411\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62411\">#62411</a></p>\n</blockquote>\n<p>looks great <span aria-label=\"100\" class=\"emoji emoji-1f4af\" role=\"img\" title=\"100\">:100:</span></p>",
        "id": 170461651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562684744
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> , someone already pointed a somewhat disappointing oversight on my part: \"indirect_structural_match lint misfiring on enum variant unused in const item\" <a href=\"https://github.com/rust-lang/rust/issues/62614\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62614\">#62614</a></p>",
        "id": 170712149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928355
    },
    {
        "content": "<p>what do you think about just reverting PR <a href=\"https://github.com/rust-lang/rust/issues/62339\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62339\">#62339</a>, and I'll come back to doing it the right way in September? (See also more of my thoughts on this <a href=\"https://github.com/rust-lang/rust/issues/62614#issuecomment-510837178\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62614#issuecomment-510837178\">here</a>)</p>",
        "id": 170712236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928419
    },
    {
        "content": "<p>I do not consider that a misfire</p>",
        "id": 170712246,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928426
    },
    {
        "content": "<p>But I am ok with reverting the PR</p>",
        "id": 170712250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928432
    },
    {
        "content": "<p>Really?</p>",
        "id": 170712253,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928432
    },
    {
        "content": "<p>Well, ok, wait</p>",
        "id": 170712262,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928441
    },
    {
        "content": "<p>maybe I am too hasty</p>",
        "id": 170712264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928443
    },
    {
        "content": "<p>I guess it depends on what one's expectations are about a const</p>",
        "id": 170712266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928444
    },
    {
        "content": "<p>I guess it fits the intersection</p>",
        "id": 170712268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928448
    },
    {
        "content": "<p>e.g. if we are worried with the const itself changing in the future</p>",
        "id": 170712277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928461
    },
    {
        "content": "<p>That is, the thing defines <code>Eq</code>, so in the \"just use Eq\" model, it would work</p>",
        "id": 170712280,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928463
    },
    {
        "content": "<p>to use the other variant</p>",
        "id": 170712284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928469
    },
    {
        "content": "<p>It also fits the \"convert to a pattern\" rule</p>",
        "id": 170712289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928477
    },
    {
        "content": "<p>(though how that works in generics, I have no idea, etc)</p>",
        "id": 170712335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928489
    },
    {
        "content": "<p>Yeah, like I tried to say above: The only scenario where i could see value in the current warning, is if someone wanted to be forewarned if they were thinking they might change their const item to use the non-structural-variant.</p>",
        "id": 170712405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928590
    },
    {
        "content": "<blockquote>\n<p>what do you think about just reverting PR <a href=\"https://github.com/rust-lang/rust/issues/62339\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62339\">#62339</a>, and I'll come back to doing it the right way in September? (See also more of my thoughts on this <a href=\"https://github.com/rust-lang/rust/issues/62614#issuecomment-510837178\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62614#issuecomment-510837178\">here</a>)</p>\n</blockquote>\n<p>basically I think <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> that it's waited this long, it can wait longer</p>",
        "id": 170712407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928596
    },
    {
        "content": "<p>Yeah that was what I was thinking too</p>",
        "id": 170712457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928606
    },
    {
        "content": "<p>and I see the \"I'm not going to be around to fix this\" argument for sure :)</p>",
        "id": 170712458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928608
    },
    {
        "content": "<p>the whole \"do no harm\" kind of thinking</p>",
        "id": 170712461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928622
    },
    {
        "content": "<p>I'll put up a reversion PR</p>",
        "id": 170712471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928636
    },
    {
        "content": "<p>actually, maybe I can just downgrade the lint for now to allow?</p>",
        "id": 170712590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928795
    },
    {
        "content": "<p>/me thinks</p>",
        "id": 170712592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928803
    },
    {
        "content": "<p>plausible</p>",
        "id": 170712598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562928816
    },
    {
        "content": "<p>I don't <em>actually</em> want to undo all of the PR. In particular, it actually fixed ICE's</p>",
        "id": 170712607,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562928838
    },
    {
        "content": "<p>hmm, weirdly, matthewjasper had warned me about this case when they said <code>const A: &amp;[Option&lt;NoDerive&gt;]</code>; did I not make a test specifcally for that ...?</p>",
        "id": 170712885,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562929154
    },
    {
        "content": "<p>Oh, I see, <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>  may or may have been warning me about this case. They left the RHS as <code>...</code> in <a href=\"https://github.com/rust-lang/rust/pull/62339#issuecomment-508207672\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62339#issuecomment-508207672\">their comment</a></p>",
        "id": 170713020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562929307
    }
]