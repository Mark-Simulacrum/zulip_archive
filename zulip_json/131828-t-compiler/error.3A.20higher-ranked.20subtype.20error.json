[
    {
        "content": "<p>Oh dear, I just got this not-very-helpful error message: \"error: higher-ranked subtype error\"</p>",
        "id": 206212972,
        "sender_full_name": "njn",
        "timestamp": 1596759799
    },
    {
        "content": "<p>I have this function:</p>\n<div class=\"codehilite\"><pre><span></span><code>pub fn link_name&lt;F&gt;(check_name: F, attrs: &amp;[ast::Attribute]) -&gt; Option&lt;Symbol&gt;\nwhere\n    F: Fn(&amp;ast::Attribute, Symbol) -&gt; bool\n</code></pre></div>",
        "id": 206213026,
        "sender_full_name": "njn",
        "timestamp": 1596759852
    },
    {
        "content": "<p>And I have this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: higher-ranked subtype error\n    --&gt; src/librustc_typeck/collect.rs:2618:25\n     |\n2618 |     if let Some(name) = weak_lang_items::link_name(check_name, &amp;attrs) {\n     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre></div>",
        "id": 206213056,
        "sender_full_name": "njn",
        "timestamp": 1596759902
    },
    {
        "content": "<p>It's not a very helpful error message :(</p>",
        "id": 206213078,
        "sender_full_name": "njn",
        "timestamp": 1596759945
    },
    {
        "content": "<p><code>check_name</code> is a closure, and I guess it doesn't match <code>Fn(&amp;ast::Attribute, Symbol) -&gt; bool</code> somehow</p>",
        "id": 206213177,
        "sender_full_name": "njn",
        "timestamp": 1596760073
    },
    {
        "content": "<p>The closure is this: <code>let check_name = |attr, sym| { tcx.sess.check_name(attr, sym) };</code></p>",
        "id": 206213247,
        "sender_full_name": "njn",
        "timestamp": 1596760126
    },
    {
        "content": "<p>Is that with <code>#![feature(nll)]</code>?</p>",
        "id": 206213415,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596760324
    },
    {
        "content": "<p>IIRC, the error is somewhat better without it</p>",
        "id": 206213424,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596760341
    },
    {
        "content": "<p>This is in rustc itself, so I assume it's using NLL</p>",
        "id": 206213564,
        "sender_full_name": "njn",
        "timestamp": 1596760561
    },
    {
        "content": "<p>I did find <a href=\"https://github.com/rust-lang/rust/issues/57374\">https://github.com/rust-lang/rust/issues/57374</a>, but couldn't extract anything useful from it</p>",
        "id": 206213609,
        "sender_full_name": "njn",
        "timestamp": 1596760580
    },
    {
        "content": "<p>That issue suggests that lifetimes might somehow be a problem?</p>",
        "id": 206213654,
        "sender_full_name": "njn",
        "timestamp": 1596760667
    },
    {
        "content": "<p>yeah, I recently encountered this unhelpful diagnostics in <a href=\"https://github.com/rust-lang/rust/issues/74889\">#74889</a> :(</p>",
        "id": 206213996,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1596761054
    },
    {
        "content": "<p>I think I might need a <code>for&lt;'a&gt;</code> ?</p>",
        "id": 206214132,
        "sender_full_name": "njn",
        "timestamp": 1596761252
    },
    {
        "content": "<p>A few explicit lifetimes ended up fixing it:</p>\n<div class=\"codehilite\"><pre><span></span><code>pub fn link_name&lt;&#39;a, F&gt;(check_name: F, attrs: &amp;&#39;a [ast::Attribute]) -&gt; Option&lt;Symbol&gt;\nwhere\n    F: Fn(&amp;&#39;a ast::Attribute, Symbol) -&gt; bool\n</code></pre></div>",
        "id": 206215125,
        "sender_full_name": "njn",
        "timestamp": 1596762436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> what's the signature of <code>sess.check_name</code>?</p>",
        "id": 206215585,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596762997
    },
    {
        "content": "<p><code>pub fn check_name(&amp;self, attr: &amp;Attribute, name: Symbol) -&gt; bool</code></p>",
        "id": 206215606,
        "sender_full_name": "njn",
        "timestamp": 1596763039
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@njn</span> <span class=\"user-mention\" data-user-id=\"217081\">@Yuki Okushi</span>  I should ask in the issue but have we been able to create a standalone test case that reproducces the problem?</p>",
        "id": 207507274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1597918362
    },
    {
        "content": "<p>well I guess <a href=\"https://github.com/rust-lang/rust/pull/74889/\">https://github.com/rust-lang/rust/pull/74889/</a> might be one</p>",
        "id": 207507303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1597918391
    },
    {
        "content": "<p>ok</p>",
        "id": 207507310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1597918397
    },
    {
        "content": "<p>that helps</p>",
        "id": 207507315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1597918399
    },
    {
        "content": "<p>/me considers some coding therapy...</p>",
        "id": 207507323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1597918405
    }
]