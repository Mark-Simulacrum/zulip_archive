[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; the triage meeting will be starting in 2 hours 13 minutes</p>",
        "id": 183254994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576154849
    },
    {
        "content": "<p>I will be doing <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-12-12.20.2354818/near/183255087\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-12-12.20.2354818/near/183255087\">pre-triage in a parallel topic</a></p>",
        "id": 183255108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576154935
    },
    {
        "content": "<p>today we are scheduled to have a checkin with WG-meta and WG-mir-opt</p>",
        "id": 183255126,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576154955
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> or <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> : are one of you available to provide checkin report on behalf of WG-meta at time of triage meeting?</p>",
        "id": 183255220,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576155011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> are you available to provide a checkin report on behalf of WG-mir-opt?</p>",
        "id": 183255243,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576155038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> might disagree, but I'm not sure there's anything to report from <a class=\"stream\" data-stream-id=\"185694\" href=\"/#narrow/stream/185694-t-compiler.2Fwg-meta\">#t-compiler/wg-meta</a>.</p>",
        "id": 183255363,
        "sender_full_name": "davidtwco",
        "timestamp": 1576155144
    },
    {
        "content": "<p>yeah, lately nothing substantial has been happening. I guess these checkins are since last checkin, in our last checking we've talked about ICE-breaker groups in general and LLVM one in particular. We were talking about ICE breaker reducers and diagnostics groups since then but I'm not sure if maybe <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> has something relevant to say there, I don't have anything relevant to share :)</p>",
        "id": 183255813,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1576155558
    },
    {
        "content": "<p>yes, I can do a mir-opt check-in</p>",
        "id": 183264152,
        "sender_full_name": "oli",
        "timestamp": 1576161186
    },
    {
        "content": "<p>Well, I think from wg-meta I could see it being useful to discuss:</p>\n<ul>\n<li>Have we been using the LLVM ICE-breaker?</li>\n<li>I think we should create a \"reducer\" ICE-breaker (for bisecting and creating standalone examples) and a \"diagnostic\" one, thoughts?</li>\n</ul>",
        "id": 183266816,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576162970
    },
    {
        "content": "<p>okay</p>",
        "id": 183266829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576162979
    },
    {
        "content": "<p>But that in some sense is also the <em>update</em>, and we could have the discussion on <a class=\"stream\" data-stream-id=\"185694\" href=\"/#narrow/stream/185694-t-compiler.2Fwg-meta\">#t-compiler/wg-meta</a> :)</p>",
        "id": 183266838,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576162984
    },
    {
        "content": "<p>lets get started</p>",
        "id": 183266859,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163007
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 183266862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163011
    },
    {
        "content": "<p>so lets have five minutes for ...</p>",
        "id": 183266961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163060
    },
    {
        "content": "<h2>Announcements</h2>",
        "id": 183266965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163063
    },
    {
        "content": "<p>I posted an RFC about future-incompat lints, <a href=\"https://github.com/rust-lang/rfcs/pull/2834\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/pull/2834\">RFC 2834</a></p>",
        "id": 183267001,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163099
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/66821\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66821\">#66821</a> landed, which should give us all of these nice wins: <a href=\"https://perf.rust-lang.org/compare.html?start=2da942f32802c8233a09744024dfbc34431adf65&amp;end=1ff04410af642dde1480ae29b085544c2d05c33c\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=2da942f32802c8233a09744024dfbc34431adf65&amp;end=1ff04410af642dde1480ae29b085544c2d05c33c\">https://perf.rust-lang.org/compare.html?start=2da942f32802c8233a09744024dfbc34431adf65&amp;end=1ff04410af642dde1480ae29b085544c2d05c33c</a></p>",
        "id": 183267035,
        "sender_full_name": "eddyb",
        "timestamp": 1576163120
    },
    {
        "content": "<p>(RFC 2834 is not just a cargo thing, despite the title. It impacts <code>rustc</code> too.)</p>",
        "id": 183267036,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163120
    },
    {
        "content": "<p>Side note, <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, I wonder if that'd be a good \"project group\", since it seems to involve changes to a number of different things.</p>",
        "id": 183267047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163130
    },
    {
        "content": "<p>maybe when/if it gets accepted?</p>",
        "id": 183267061,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163144
    },
    {
        "content": "<p>(I guess there should be a nightly with it now but I haven't grabbed that diff from perf)</p>",
        "id": 183267062,
        "sender_full_name": "eddyb",
        "timestamp": 1576163145
    },
    {
        "content": "<p>const eval now has <code>if/match</code> support (unstable) and a PR for <code>loop</code>/<code>while</code> is open</p>",
        "id": 183267068,
        "sender_full_name": "oli",
        "timestamp": 1576163147
    },
    {
        "content": "<p>or maybe you mean the project group should be about authoring the RFC itself?</p>",
        "id": 183267082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163157
    },
    {
        "content": "<p>Given that the RFC exists, seems fine, just create if it's accepted.</p>",
        "id": 183267134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163174
    },
    {
        "content": "<p>(And/or move some questions to be decided through that process, if needed)</p>",
        "id": 183267172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163202
    },
    {
        "content": "<p>wow eddyb, nice work, -4 to -5% on a  number of non-contrived benchmarks?</p>",
        "id": 183267275,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163259
    },
    {
        "content": "<p>yeah we were just not doing trait caching in the cases that matter a lot (i.e. when type parameters were involved)</p>",
        "id": 183267349,
        "sender_full_name": "eddyb",
        "timestamp": 1576163289
    },
    {
        "content": "<p>presumably because Chalk has been on the horizon for a while :P</p>",
        "id": 183267367,
        "sender_full_name": "eddyb",
        "timestamp": 1576163300
    },
    {
        "content": "<p>heh yes</p>",
        "id": 183267381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163311
    },
    {
        "content": "<p>\"a while\"</p>",
        "id": 183267383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163313
    },
    {
        "content": "<p>that is the danger of having the next gen system \"within sight\"</p>",
        "id": 183267393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163324
    },
    {
        "content": "<p>One announcement would be to call attention the <a href=\"#narrow/stream/131828-t-compiler/topic/pre-design.20meeting.202019-12-13\" title=\"#narrow/stream/131828-t-compiler/topic/pre-design.20meeting.202019-12-13\">pre-design meeting topic</a> for the meeting tomorrow</p>",
        "id": 183267458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163375
    },
    {
        "content": "<p>oh of course</p>",
        "id": 183267461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163382
    },
    {
        "content": "<p>Which is to discuss a proposal around the future of IDEs / library-ification</p>",
        "id": 183267530,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163404
    },
    {
        "content": "<p>sorry this took me a while, but I think this is the actual diff between relevant master builds <a href=\"https://perf.rust-lang.org/compare.html?start=033662dfbca088937b9cdfd3d9584015b5e375b2&amp;end=90b957a17c1abba979aa41234ce0993a61030e67&amp;stat=instructions:u\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=033662dfbca088937b9cdfd3d9584015b5e375b2&amp;end=90b957a17c1abba979aa41234ce0993a61030e67&amp;stat=instructions:u\">https://perf.rust-lang.org/compare.html?start=033662dfbca088937b9cdfd3d9584015b5e375b2&amp;end=90b957a17c1abba979aa41234ce0993a61030e67&amp;stat=instructions:u</a></p>",
        "id": 183267610,
        "sender_full_name": "eddyb",
        "timestamp": 1576163453
    },
    {
        "content": "<p>okay so I think that's all the announcments</p>",
        "id": 183267617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163456
    },
    {
        "content": "<p>if anyone has something else to add, privmsg me and I'll allocate time at the end</p>",
        "id": 183267650,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163472
    },
    {
        "content": "<p>so I've made an <a href=\"https://hackmd.io/oLWy85QDR_CStQaXZeZjCQ?view\" target=\"_blank\" title=\"https://hackmd.io/oLWy85QDR_CStQaXZeZjCQ?view\">agenda hackmd</a></p>",
        "id": 183267678,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163490
    },
    {
        "content": "<p>its relatively light this week</p>",
        "id": 183267709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163516
    },
    {
        "content": "<p>so lets do beta-nominations first</p>",
        "id": 183267759,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163526
    },
    {
        "content": "<p>beta-nom 1/2: \"resolve: Always resolve visibilities on impl items\" <a href=\"https://github.com/rust-lang/rust/issues/67236\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67236\">#67236</a></p>",
        "id": 183267783,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163542
    },
    {
        "content": "<p>yeah this seems clear beta-accept</p>",
        "id": 183268008,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163672
    },
    {
        "content": "<p>beta-nom 2/2: \"resolve: Resolve visibilities on fields with non-builtin attributes\" <a href=\"https://github.com/rust-lang/rust/issues/67106\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67106\">#67106</a></p>",
        "id": 183268081,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163718
    },
    {
        "content": "<p>seems like just the 1st commit?</p>",
        "id": 183268180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576163765
    },
    {
        "content": "<p>yep</p>",
        "id": 183268209,
        "sender_full_name": "centril",
        "timestamp": 1576163791
    },
    {
        "content": "<p>ugh I should have put the first few words from the commit msg next to the hash I wrote</p>",
        "id": 183268299,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163855
    },
    {
        "content": "<p>anyway looks like a reasonable beta accept</p>",
        "id": 183268424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163911
    },
    {
        "content": "<p>okay, next up, stable noms</p>",
        "id": 183268478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163950
    },
    {
        "content": "<p>stable-nom 1/1: \"resolve: Always resolve visibilities on impl items\" <a href=\"https://github.com/rust-lang/rust/issues/67236\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67236\">#67236</a></p>",
        "id": 183268517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576163968
    },
    {
        "content": "<p>So, I don't know if anyone else feels this way, but have we gotten more liberal in stable-accepting</p>",
        "id": 183268661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164039
    },
    {
        "content": "<p>?</p>",
        "id": 183268668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164045
    },
    {
        "content": "<p>we beta accepted this and it will be stable  in a week</p>",
        "id": 183268669,
        "sender_full_name": "mw",
        "timestamp": 1576164047
    },
    {
        "content": "<p>is the release that soon? But maybe that's not our decision anyway</p>",
        "id": 183268698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164072
    },
    {
        "content": "<p>or rather, I'm not sure if its supposed to factor into our decision here?</p>",
        "id": 183268716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164084
    },
    {
        "content": "<p>dec 19, I think</p>",
        "id": 183268724,
        "sender_full_name": "mw",
        "timestamp": 1576164086
    },
    {
        "content": "<p>no need for stable noms this week</p>",
        "id": 183268735,
        "sender_full_name": "simulacrum",
        "timestamp": 1576164093
    },
    {
        "content": "<p>(we're not doing a point release for sure in the last ~2 weeks basically)</p>",
        "id": 183268753,
        "sender_full_name": "simulacrum",
        "timestamp": 1576164107
    },
    {
        "content": "<p>okay. I'll just decline based on our soon the release is</p>",
        "id": 183268758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164111
    },
    {
        "content": "<p>and I'll wait until the next stable nom to check my gut again about how liberal/conservative we are with respect to stable backports</p>",
        "id": 183268836,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164135
    },
    {
        "content": "<p>there are three PR's marked S-waiting-on-team</p>",
        "id": 183268866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164161
    },
    {
        "content": "<p>and one of them seemed worth discussing here</p>",
        "id": 183268872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164172
    },
    {
        "content": "<p>S-waiting-on-team: “[experiment] Do not deduplicate diagnostics in -Z ui-testing mode” <a href=\"https://github.com/rust-lang/rust/issues/67122\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67122\">#67122</a></p>",
        "id": 183268896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164188
    },
    {
        "content": "<p>I mention it here not to try to resolve the questions posed there</p>",
        "id": 183268921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164207
    },
    {
        "content": "<p>but rather to raise awareness. I,e. read over the disxcussion and post your feedback</p>",
        "id": 183269002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164246
    },
    {
        "content": "<p>there are also a bunch of nominated issues. I picked two of them to discuss here</p>",
        "id": 183269062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164279
    },
    {
        "content": "<p>I-nominated: \"MacOS: add linker flag \"-undefined dynamic_lookup\" for shared libs.\" <a href=\"https://github.com/rust-lang/rust/issues/66204\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66204\">#66204</a></p>",
        "id": 183269114,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164309
    },
    {
        "content": "<p>this has been in flight since November 8th</p>",
        "id": 183269140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164321
    },
    {
        "content": "<p>As I understand it, the PR author is making a crate to make it possible to write postgres extensions in Rust</p>",
        "id": 183269282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164384
    },
    {
        "content": "<p>I am reminded of the <a href=\"#narrow/stream/131828-t-compiler/topic/internalize_symbols.20and.20incremental.20artifacts.20.2359535\" title=\"#narrow/stream/131828-t-compiler/topic/internalize_symbols.20and.20incremental.20artifacts.20.2359535\">discussion about internalize symbols</a></p>",
        "id": 183269292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164390
    },
    {
        "content": "<p>in what sense?</p>",
        "id": 183269325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164407
    },
    {
        "content": "<p>Mostly that I feel like we lack a clear \"plan\" around linkers :)</p>",
        "id": 183269371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164433
    },
    {
        "content": "<p>that it was an area that is not richly specified?</p>",
        "id": 183269373,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164435
    },
    {
        "content": "<p>I guess they're not <em>overly</em> related</p>",
        "id": 183269377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164437
    },
    {
        "content": "<p>ah yes</p>",
        "id": 183269381,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164440
    },
    {
        "content": "<p>well the funny thing that struck me about that</p>",
        "id": 183269392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164447
    },
    {
        "content": "<p>I just wish that we had some folks who owned this area</p>",
        "id": 183269404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164454
    },
    {
        "content": "<p>is that we seemed to feel free to change behavior with respect to internalization of symbols</p>",
        "id": 183269414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164460
    },
    {
        "content": "<p>and just say \"well it seems to work!\"</p>",
        "id": 183269425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164468
    },
    {
        "content": "<p>while here, alex is saying we've never changed linker arguments</p>",
        "id": 183269446,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164481
    },
    {
        "content": "<p>due to how conservative we want to try to be</p>",
        "id": 183269499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164489
    },
    {
        "content": "<p>I'm certainly a fan of taking conservative approaches</p>",
        "id": 183269513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164503
    },
    {
        "content": "<p>but it just struck me as funny, since I didn't think this project was necessarily conservative in such matters</p>",
        "id": 183269540,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164524
    },
    {
        "content": "<p>I think Rust dylibs were always a special case where we were not so conservative</p>",
        "id": 183269561,
        "sender_full_name": "mw",
        "timestamp": 1576164546
    },
    {
        "content": "<p>true. This PR is changing linker flags for a broader set of cases</p>",
        "id": 183269599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164578
    },
    {
        "content": "<p>It seems like part of the problem here</p>",
        "id": 183269620,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164590
    },
    {
        "content": "<p>is that the PR is changed the <em>defaults</em></p>",
        "id": 183269629,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164593
    },
    {
        "content": "<p>anyway, there is a meta-topic here</p>",
        "id": 183269630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164593
    },
    {
        "content": "<p>which is that this author just wants to find <em>someone</em> to take responsibility for a decision here</p>",
        "id": 183269723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164621
    },
    {
        "content": "<p>and everyone says \"shoot, I'm not an expert in that area.\"</p>",
        "id": 183269756,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164639
    },
    {
        "content": "<p>This seems pretty clearly (to me) like the wrong fix</p>",
        "id": 183269798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164673
    },
    {
        "content": "<p>personally I think the right solution may be something like what was suggested in the comments</p>",
        "id": 183269804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164677
    },
    {
        "content": "<p>where an upstream crate could have a <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> that generates flags that influence its clients linker invocations</p>",
        "id": 183269828,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164701
    },
    {
        "content": "<p>changing the defaults for everyone does sound like a very crude hammer</p>",
        "id": 183269845,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164712
    },
    {
        "content": "<p>I'll try to leave a comment about it. I'm not sure what I think the <em>right fix</em> is. But indiscriminately changing our default linker arguments to not error on undefined symbols for all builds on Mac OS just seems like it can't be right.</p>",
        "id": 183269848,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164714
    },
    {
        "content": "<p>At minimum it feels like it merits an RFC to get more eyes and feedback</p>",
        "id": 183269912,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164733
    },
    {
        "content": "<p>is this person building a dylib?</p>",
        "id": 183269941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164755
    },
    {
        "content": "<p>Anyway, it is an interesting situation, but I don't think we should land a broad change like this without <em>somebody</em> owning it, and sometimes that bandwidth is not around.</p>",
        "id": 183269957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164770
    },
    {
        "content": "<p>yes, they are building a dylib</p>",
        "id": 183269961,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164771
    },
    {
        "content": "<p>so the change in behavior isn't for <em>all</em> linker invocations.</p>",
        "id": 183269997,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164800
    },
    {
        "content": "<p>just for linking to build a dylib, I think.</p>",
        "id": 183270009,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164810
    },
    {
        "content": "<p>Rust dylib or C dylib?</p>",
        "id": 183270035,
        "sender_full_name": "mw",
        "timestamp": 1576164827
    },
    {
        "content": "<p>oh good point ...</p>",
        "id": 183270045,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164834
    },
    {
        "content": "<p>Rust dylibs are such a sad feature</p>",
        "id": 183270114,
        "sender_full_name": "mw",
        "timestamp": 1576164856
    },
    {
        "content": "<p>I cannot tell off hand from the diff context</p>",
        "id": 183270119,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164860
    },
    {
        "content": "<p>you are correct that it's a bit more narrow</p>",
        "id": 183270133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164875
    },
    {
        "content": "<p>but it's still not \"opt-in\" in any sense</p>",
        "id": 183270143,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164880
    },
    {
        "content": "<p>I believe this is when building a C dylib</p>",
        "id": 183270152,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164892
    },
    {
        "content": "<p>that said, it's sort of surprising to me that we don't have <em>some</em> way to configure the linker flags for a project</p>",
        "id": 183270206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576164932
    },
    {
        "content": "<p>okay well we have <em>probably</em> spent enough time on this</p>",
        "id": 183270207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164932
    },
    {
        "content": "<p>Unless someone wants to claim ownership of this topic?</p>",
        "id": 183270241,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164950
    },
    {
        "content": "<p>anyway lets move to another nominated issue</p>",
        "id": 183270293,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164963
    },
    {
        "content": "<p>I-nominated: \"<code>./x.py check</code> failed if incremental builds enabled\"<br>\n<a href=\"https://github.com/rust-lang/rust/issues/58633\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58633\">#58633</a></p>",
        "id": 183270327,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576164983
    },
    {
        "content": "<p>okay forked thread into <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20check.20fails.20under.20incremental.20due.20to.20unused.20attr.20wei.2E.2E.2E/near/183270355\" title=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20check.20fails.20under.20incremental.20due.20to.20unused.20attr.20wei.2E.2E.2E/near/183270355\">zulip topic</a></p>",
        "id": 183271699,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576165705
    },
    {
        "content": "<p>zulip topic title \"x.py check fails under incremental due to unused attr weirdness  <a href=\"https://github.com/rust-lang/rust/issues/58633\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58633\">#58633</a>\"</p>",
        "id": 183271726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576165722
    },
    {
        "content": "<p>(<a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/x.2Epy.20check.20fails.20under.20incremental.20due.20to.20unused.20attr.20wei.2E.2E.2E\">#t-compiler &gt; x.py check fails under incremental due to unused attr wei...</a> )</p>",
        "id": 183271758,
        "sender_full_name": "davidtwco",
        "timestamp": 1576165743
    },
    {
        "content": "<p>thank you</p>",
        "id": 183271768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576165750
    },
    {
        "content": "<p>okay so lets do some WG checkins</p>",
        "id": 183271781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576165761
    },
    {
        "content": "<h1>wg-mir-opt check-in</h1>\n<ul>\n<li>the MIR does not know about <code>static</code> items anymore. Instead we just have a constant whose value is <code>&amp;YOUR_STATIC</code>, <code>&amp;raw mut YOUR_MUT_STATIC</code> or <code>&amp;raw YOUR_EXTERN_STATIC</code>. This simplifies a lot of logic in the MIR and will (together with the next bullet point) allow <code>PlaceBase</code> to just be <code>Local</code> (so a <code>u32</code> index for a local to be accessed). (<a href=\"https://github.com/rust-lang/rust/pull/66587\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66587\">https://github.com/rust-lang/rust/pull/66587</a>)</li>\n<li>@spastorino is about to finish a PR that removes promoteds from the list of things that are <code>Place</code>s in MIR</li>\n<li>the <code>mir::Body</code> does not contain interior mutability components anymore. It used to have a cache of some information on the MIR CFG that could get cleared and reinitialized as required. This is abstracted away in the <code>BodyCache</code> type.</li>\n<li>promoteds inside constants and statics are now actually separated from their constant's mir::Body instead of having a scheme around removing <code>StorageDead</code> statements (<a href=\"https://github.com/rust-lang/rust/pull/66642\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66642\">https://github.com/rust-lang/rust/pull/66642</a>)</li>\n<li>Cross crate inlining now preserves debug info: <a href=\"https://github.com/rust-lang/rust/pull/66789\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66789\">https://github.com/rust-lang/rust/pull/66789</a></li>\n<li>A new mir optimization eliminating basic blocks that are unreachable because they are match arms of uninhabited variants: <a href=\"https://github.com/rust-lang/rust/pull/65694\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65694\">https://github.com/rust-lang/rust/pull/65694</a></li>\n<li>A new mir optimization to work around the problem that llvm can't figure out trivial match arms like <code>Ok(x) =&gt; Ok(x)</code>: <a href=\"https://github.com/rust-lang/rust/pull/66282\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66282\">https://github.com/rust-lang/rust/pull/66282</a></li>\n<li>The const prop optimization now runs on all builds (even debug builds), because this gives quite some nice build time improvements: <a href=\"https://github.com/rust-lang/rust/pull/66074\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66074\">https://github.com/rust-lang/rust/pull/66074</a></li>\n<li>We had a mir-opt room at rustfest, which was a total success and ppl loved it.</li>\n</ul>\n<p>I may have forgotten some peephole optimization or sth, the last month was insane.</p>\n<p>Also <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  has an announcement about a mir-optimization</p>",
        "id": 183271814,
        "sender_full_name": "oli",
        "timestamp": 1576165794
    },
    {
        "content": "<p>okay <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> has taken the reins</p>",
        "id": 183271878,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576165811
    },
    {
        "content": "<p>my announcement is that I'm resurrecting <a href=\"https://github.com/rust-lang/rust/pull/48300\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/48300\">https://github.com/rust-lang/rust/pull/48300</a></p>",
        "id": 183271897,
        "sender_full_name": "eddyb",
        "timestamp": 1576165829
    },
    {
        "content": "<p>two years of dust have not been kind to it :P</p>",
        "id": 183271953,
        "sender_full_name": "eddyb",
        "timestamp": 1576165849
    },
    {
        "content": "<p>This all sounds <em>fantastic</em>, man, so much going on.</p>",
        "id": 183271977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576165871
    },
    {
        "content": "<p>it's a relatively small optimization, but it should hopefully play well with others (such as const prop, in e.g. structs with mixed runtime and constant fields)</p>",
        "id": 183271993,
        "sender_full_name": "eddyb",
        "timestamp": 1576165893
    },
    {
        "content": "<p>I want to give a shout-out to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>, at least from what <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> tells me, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> has been doing a ton of mentoring and general leadership here. <span aria-label=\"clap\" class=\"emoji emoji-1f44f\" role=\"img\" title=\"clap\">:clap:</span> <span aria-label=\"clap\" class=\"emoji emoji-1f44f\" role=\"img\" title=\"clap\">:clap:</span> <span aria-label=\"clap\" class=\"emoji emoji-1f44f\" role=\"img\" title=\"clap\">:clap:</span></p>",
        "id": 183271997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576165902
    },
    {
        "content": "<p>Yes, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> has been doing a fantastic job!!</p>",
        "id": 183272035,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1576165922
    },
    {
        "content": "<p>We also have plans for optimizations for removing unreachable blocks, BB-deduplication, etc.</p>",
        "id": 183272059,
        "sender_full_name": "centril",
        "timestamp": 1576165925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> great work!!! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 183272095,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1576165970
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> what happened to referring to statics in constants?</p>",
        "id": 183272096,
        "sender_full_name": "centril",
        "timestamp": 1576165970
    },
    {
        "content": "<p>there's also this coming <a href=\"https://github.com/rust-lang/rust/pull/67000\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67000\">https://github.com/rust-lang/rust/pull/67000</a>, it's literally done, there's not <code>PlaceBase</code> anymore, just <code>Local</code></p>",
        "id": 183272129,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1576165990
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> what happened to referring to statics in constants?</p>\n</blockquote>\n<p>not merged, in work: <a href=\"https://github.com/rust-lang/rust/pull/66302\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66302\">https://github.com/rust-lang/rust/pull/66302</a></p>",
        "id": 183272132,
        "sender_full_name": "oli",
        "timestamp": 1576165992
    },
    {
        "content": "<p>okay great</p>",
        "id": 183272302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166088
    },
    {
        "content": "<p>Regarding WG-meta, there wasn't much to report it sounded like. But <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> did say:</p>\n<blockquote>\n<p>Well, I think from wg-meta I could see it being useful to discuss:</p>\n<ul>\n<li>Have we been using the LLVM ICE-breaker?</li>\n<li>I think we should create a \"reducer\" ICE-breaker (for bisecting and creating standalone examples) and a \"diagnostic\" one, thoughts?</li>\n</ul>\n</blockquote>",
        "id": 183272348,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166122
    },
    {
        "content": "<p>MIR optimization might be a good success story of how much potential can be freed once a component is cleanly encapsulated</p>",
        "id": 183272392,
        "sender_full_name": "mw",
        "timestamp": 1576166159
    },
    {
        "content": "<p>but maybe that was more directed at the WG-meta members themselves, and not T-compiler ?</p>",
        "id": 183272433,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> only took 2-3 years of limbo :P</p>",
        "id": 183272484,
        "sender_full_name": "eddyb",
        "timestamp": 1576166204
    },
    {
        "content": "<p>No, I'd like feedback from anyone</p>",
        "id": 183272486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166206
    },
    {
        "content": "<p>I think a reducer ICE-breaker would be great</p>",
        "id": 183272502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166221
    },
    {
        "content": "<p>I think that's the obvious next step</p>",
        "id": 183272523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166231
    },
    {
        "content": "<p>Ah there is one other thing</p>",
        "id": 183272533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166233
    },
    {
        "content": "<p>potentially orthogonally: after my blog post on rust reduction pattersn</p>",
        "id": 183272537,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166238
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> has been working on improving cargo-bisect</p>",
        "id": 183272539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166239
    },
    {
        "content": "<p>which I was kind of semi-waiting on</p>",
        "id": 183272553,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166245
    },
    {
        "content": "<p>people did mention trying to put my strategies into creduce</p>",
        "id": 183272565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166250
    },
    {
        "content": "<p>since it seemed like having a really easily usable bisection tool would make it easier</p>",
        "id": 183272569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166256
    },
    {
        "content": "<p>When I read your post <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I was thinking it might make sense to have a kind of \"lightweight\" description and then \"heavier-weight\" strategies</p>",
        "id": 183272700,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166297
    },
    {
        "content": "<p>i.e., I tend to do something rather different, but I fall back to strategies like yours is I'm having trouble</p>",
        "id": 183272713,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166309
    },
    {
        "content": "<p>I suspect <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> has some good tips, since I know they do a lot of reducing too</p>",
        "id": 183272732,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576166317
    },
    {
        "content": "<blockquote>\n<p>i.e., I tend to do something rather different, but I fall back to strategies like yours is I'm having trouble</p>\n</blockquote>\n<p>yeah, I think it can depend on how well you understand the code in question from the outset</p>",
        "id": 183272782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s post is mostly around big projects</p>",
        "id": 183272787,
        "sender_full_name": "centril",
        "timestamp": 1576166356
    },
    {
        "content": "<p>and I was trying to describe how you could work effectively blind</p>",
        "id": 183272808,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166372
    },
    {
        "content": "<p>I tend to shrink issues that already fit in the playground</p>",
        "id": 183272812,
        "sender_full_name": "centril",
        "timestamp": 1576166375
    },
    {
        "content": "<p>keep in mind you can go from a dozen lines to 50k lines to a dozen lines again</p>",
        "id": 183272857,
        "sender_full_name": "eddyb",
        "timestamp": 1576166400
    },
    {
        "content": "<p>if you include dependencies</p>",
        "id": 183272911,
        "sender_full_name": "eddyb",
        "timestamp": 1576166405
    },
    {
        "content": "<p>and macro-expansions</p>",
        "id": 183272937,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166415
    },
    {
        "content": "<p>(which I guess is a kind of dependency)</p>",
        "id": 183272950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166421
    },
    {
        "content": "<p>so \"fits in playground\" is not specific enough :P</p>",
        "id": 183272964,
        "sender_full_name": "eddyb",
        "timestamp": 1576166427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> zero dependencies</p>",
        "id": 183272985,
        "sender_full_name": "centril",
        "timestamp": 1576166439
    },
    {
        "content": "<p>200 LOC max</p>",
        "id": 183273003,
        "sender_full_name": "centril",
        "timestamp": 1576166450
    },
    {
        "content": "<p>pretty sure you don't use <code>#![no_std]</code> for all your reductions</p>",
        "id": 183273020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166461
    },
    {
        "content": "<p>but that's just me being petty</p>",
        "id": 183273053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166479
    },
    {
        "content": "<p><code>#![no_core]</code> or it doesn't count. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 183273065,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1576166485
    },
    {
        "content": "<p>only if it would simplify finding the bug ^^</p>",
        "id": 183273077,
        "sender_full_name": "centril",
        "timestamp": 1576166496
    },
    {
        "content": "<p>okay I have a hard out now at the hour mark</p>",
        "id": 183273097,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166505
    },
    {
        "content": "<p>I still regret bothering with <code>#![no_std]</code> when the bug had nothing to do with anything I was imagining</p>",
        "id": 183273104,
        "sender_full_name": "eddyb",
        "timestamp": 1576166511
    },
    {
        "content": "<p>thank you to all of <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending! this was a great meeting you all!</p>",
        "id": 183273106,
        "sender_full_name": "pnkfelix",
        "timestamp": 1576166518
    },
    {
        "content": "<p>Post meeting announcement: I've hacked up an experimental (in the sense of the proposal) but full implementation of half-open range patterns, <a href=\"https://github.com/rust-lang/rust/pull/67258\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67258\">https://github.com/rust-lang/rust/pull/67258</a></p>",
        "id": 183274367,
        "sender_full_name": "centril",
        "timestamp": 1576167194
    }
]