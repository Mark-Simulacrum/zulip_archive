[
    {
        "content": "<p>I just updated my repo to <a href=\"https://github.com/rust-lang/rust/commit/6bda5b331cfe7e04e1fe348c58a928fc2b650f4f\">6bda5b331cfe7e04e1fe348c58a928fc2b650f4f</a> (\"Auto merge of <a href=\"https://github.com/rust-lang/rust/issues/90716\">#90716</a> - euclio:libloading, r=cjgillot\") and I'm getting this test failure running <code>./x.py test</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>---- [mir-opt] mir-opt/issue-41888.rs stdout ----\n22\n23      bb0: {\n24          _9 = const false;                // scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n-           _7 = const false;                // scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n26          _8 = const false;                // scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n+           _7 = const false;                // scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n27          StorageLive(_1);                 // scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n28          StorageLive(_2);                 // scope 1 at $DIR/issue-41888.rs:8:8: 8:14\n29          _2 = cond() -&gt; [return: bb1, unwind: bb11]; // scope 1 at $DIR/issue-41888.rs:8:8: 8:14\n\nthread &#39;[mir-opt] mir-opt/issue-41888.rs&#39; panicked at &#39;Actual MIR output differs from expected MIR output /home/njn/dev/rust2/src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir&#39;, src/tools/compiletest/src/runtest.rs:3360:25\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\n\nfailures:\n    [mir-opt] mir-opt/issue-41888.rs\n</code></pre></div>",
        "id": 264647418,
        "sender_full_name": "nnethercote",
        "timestamp": 1639348210
    },
    {
        "content": "<p>It's a trivial reordering of two assignments. I updated the expected output file locally and now all tests pass. But I'm wondering how this passed tests on CI and got merged. Might it be non-deterministic?</p>",
        "id": 264648108,
        "sender_full_name": "nnethercote",
        "timestamp": 1639349310
    },
    {
        "content": "<p>Some questions that might help with debugging:</p>\n<ol>\n<li>Do you have download-rustc enabled? If so, had you modified the rustc sources locally when you ran this build?</li>\n<li>What architecture/OS are you on?</li>\n<li>If you run <code>rm -r build/&lt;your-arch&gt;/stage*</code> and rerun <code>./x.py test</code>, do you still get this test failure? (That would help determine if it's non-deterministic.)</li>\n</ol>",
        "id": 264652327,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639355213
    },
    {
        "content": "<p>I just ran that test locally on the latest master (<a href=\"https://github.com/rust-lang/rust/commit/6bda5b331cfe7e04e1fe348c58a928fc2b650f4f\">6bda5b331cfe7e04e1fe348c58a928fc2b650f4f</a>) and it passed. I'm using download-rustc (thus, these are CI artifacts), and I'm on Apple Silicon.</p>",
        "id": 264652341,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639355260
    },
    {
        "content": "<ol>\n<li>No</li>\n<li>x86-64/Linux</li>\n<li>Coming...</li>\n</ol>",
        "id": 264653465,
        "sender_full_name": "nnethercote",
        "timestamp": 1639356891
    },
    {
        "content": "<p>I included the test change in <a href=\"https://github.com/rust-lang/rust/pull/91844\">https://github.com/rust-lang/rust/pull/91844</a> and the CI run failed</p>",
        "id": 264653476,
        "sender_full_name": "nnethercote",
        "timestamp": 1639356911
    },
    {
        "content": "<p>I always do <code>x.py clean</code> whenever I update my repos, so I'll be surprised if 3 changes anything</p>",
        "id": 264653535,
        "sender_full_name": "nnethercote",
        "timestamp": 1639356991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mir-opt.2Fissue-41888.2Ers.20test.20failure.20on.20.60master.60/near/264653535\">said</a>:</p>\n<blockquote>\n<p>I always do <code>x.py clean</code> whenever I update my repos, so I'll be surprised if 3 changes anything</p>\n</blockquote>\n<p>Ah, really? I almost never do that. I only do it if my build behaves funny <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 264653808,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639357328
    },
    {
        "content": "<p>It's interesting how people's workflows differ :)</p>",
        "id": 264653811,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639357339
    },
    {
        "content": "<p>(Looks like <code>x.py clean</code>removes much more than just those <code>stage*</code> dirs)</p>",
        "id": 264653813,
        "sender_full_name": "nnethercote",
        "timestamp": 1639357341
    },
    {
        "content": "<p>Yeah, <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> taught me to only remove the <code>stage*</code> dirs when possible since it avoids some rebuilds and redownloads</p>",
        "id": 264653824,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639357363
    },
    {
        "content": "<p>I have a machine with 28 virtual cores, so...</p>",
        "id": 264653832,
        "sender_full_name": "nnethercote",
        "timestamp": 1639357378
    },
    {
        "content": "<p>Well, I see why you can run <code>x clean</code> all the time ;)</p>",
        "id": 264653841,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639357402
    },
    {
        "content": "<p>(Yeah, my workflow changed completely when I went from a 10-year-old 4C4T CPU to a 1-year-old 16C32T CPU.  It's wonderful to not need to worry about whether LLVM will need a rebuild, or similar.)</p>",
        "id": 264656548,
        "sender_full_name": "scottmcm",
        "timestamp": 1639361282
    },
    {
        "content": "<p>Alas, there still are plenty of sequential bottlenecks that just leave all the cores sit idle.</p>",
        "id": 264684059,
        "sender_full_name": "The 8472",
        "timestamp": 1639389797
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mir-opt.2Fissue-41888.2Ers.20test.20failure.20on.20.60master.60/near/264653535\">said</a>:</p>\n<blockquote>\n<p>I always do <code>x.py clean</code> whenever I update my repos, so I'll be surprised if 3 changes anything</p>\n</blockquote>\n<p>If thatâ€™s the case, do you have enough information to replicate the two ouputs?</p>",
        "id": 264729423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1639412017
    },
    {
        "content": "<p>Sorry, I don't understand the question</p>",
        "id": 264773318,
        "sender_full_name": "nnethercote",
        "timestamp": 1639431411
    },
    {
        "content": "<p>I'm not sure how optimal the current impl is. I'd presume the derive generates a <code>match</code> expression, but I wonder if equal parts of match arms are merged. While this would likely not reduce instructions, it could still improve perf because the code might take less cache space.</p>",
        "id": 264875583,
        "sender_full_name": "llogiq",
        "timestamp": 1639496151
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"248599\">@llogiq</span> wrong thread?</p>",
        "id": 264928886,
        "sender_full_name": "nnethercote",
        "timestamp": 1639517729
    },
    {
        "content": "<p>Yep, sorry.</p>",
        "id": 264930280,
        "sender_full_name": "llogiq",
        "timestamp": 1639518187
    },
    {
        "content": "<p>I now am doing this, sigh:</p>\n<div class=\"codehilite\"><pre><span></span><code>function rtest {\n    # Sigh, I get this failure all the time now\n    cat &lt;&lt; EOF &gt; rtest.diff\ndiff --git a/src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir b/src/test/mir-opt/issue_418\n88.main.ElaborateDrops.after.mir\n--- a/src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir\n+++ b/src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir\n@@ -22,8 +22,8 @@ fn main() -&gt; () {\n\n     bb0: {\n         _9 = const false;                // scope 0 at \\$DIR/issue-41888.rs:7:9: 7:10\n-        _7 = const false;                // scope 0 at \\$DIR/issue-41888.rs:7:9: 7:10\n         _8 = const false;                // scope 0 at \\$DIR/issue-41888.rs:7:9: 7:10\n+        _7 = const false;                // scope 0 at \\$DIR/issue-41888.rs:7:9: 7:10\n         StorageLive(_1);                 // scope 0 at \\$DIR/issue-41888.rs:7:9: 7:10\n         StorageLive(_2);                 // scope 1 at \\$DIR/issue-41888.rs:8:8: 8:14\n         _2 = cond() -&gt; [return: bb1, unwind: bb11]; // scope 1 at $DIR/issue-41888.rs:8:8: 8:14\nEOF\n\n    echo &quot;patching src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir&quot;\n    patch -p1 &lt; rtest.diff\n    echo\n\n    time ./x.py test\n\n    echo &quot;unpatching src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir&quot;\n    patch -p1 -R &lt; rtest.diff\n    echo\n}\n</code></pre></div>",
        "id": 264931339,
        "sender_full_name": "nnethercote",
        "timestamp": 1639518682
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> you could run <code>git bisect</code> to see where the test failure was introduced</p>",
        "id": 264931442,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639518729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> Do you know of any recent MIR opt changes that might be causing the test difference I'm seeing locally?</p>",
        "id": 264931446,
        "sender_full_name": "nnethercote",
        "timestamp": 1639518734
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> true</p>",
        "id": 264931459,
        "sender_full_name": "nnethercote",
        "timestamp": 1639518746
    },
    {
        "content": "<p>Not really. Maybe my recent MirPass refactor changed something, but it doesn't happen locally (or on CI), so I can't really investigate.</p>",
        "id": 264936981,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639521573
    },
    {
        "content": "<p>Does it reproduce with a fresh checkout? (maybe you have an unusual config or env variable or something)</p>",
        "id": 264937297,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639521745
    },
    {
        "content": "<p>It reproduces with a fresh checkout, and AFAIK my config isn't that unusual</p>",
        "id": 264937338,
        "sender_full_name": "nnethercote",
        "timestamp": 1639521777
    },
    {
        "content": "<p>Could you paste the rustc command invocation for the failing test case?</p>\n<div class=\"codehilite\"><pre><span></span><code>/x.py test  src/test/mir-opt/\ntouch src/test/mir-opt/issue-41888.rs\nenv RUST_LOG=debug ./x.py test  src/test/mir-opt/\n</code></pre></div>",
        "id": 264937398,
        "sender_full_name": "tm",
        "timestamp": 1639521824
    },
    {
        "content": "<p>@tm: output is too large to fit in a zulip message...</p>",
        "id": 264938972,
        "sender_full_name": "nnethercote",
        "timestamp": 1639522728
    },
    {
        "content": "<p>I mean just the command for this single test case.</p>",
        "id": 264939041,
        "sender_full_name": "tm",
        "timestamp": 1639522779
    },
    {
        "content": "<p>Attached<br>\n<a href=\"/user_uploads/4715/3OerKvyji41j516AzMFgT7Qc/x.txt\">x.txt</a></p>",
        "id": 264939090,
        "sender_full_name": "nnethercote",
        "timestamp": 1639522804
    },
    {
        "content": "<p>This?</p>\n<div class=\"codehilite\"><pre><span></span><code>command did not execute successfully: &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/stage0-tools-bin/compiletest&quot; &quot;--compile-lib-path&quot; &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/stage1/lib&quot; &quot;--run-lib-path&quot; &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib&quot; &quot;--rustc-path&quot; &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/stage1/bin/rustc&quot; &quot;--src-base&quot; &quot;/home/njn/dev/rust3/src/test/mir-opt&quot; &quot;--build-base&quot; &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/test/mir-opt&quot; &quot;--stage-id&quot; &quot;stage1-x86_64-unknown-linux-gnu&quot; &quot;--suite&quot; &quot;mir-opt&quot; &quot;--mode&quot; &quot;mir-opt&quot; &quot;--target&quot; &quot;x86_64-unknown-linux-gnu&quot; &quot;--host&quot; &quot;x86_64-unknown-linux-gnu&quot; &quot;--llvm-filecheck&quot; &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/llvm/build/bin/FileCheck&quot; &quot;--nodejs&quot; &quot;/home/njn/.nvm/versions/node/v14.15.1/bin/node&quot; &quot;--npm&quot; &quot;/home/njn/.nvm/versions/node/v14.15.1/bin/npm&quot; &quot;--host-rustcflags&quot; &quot;-Crpath -O -Cdebuginfo=0  -Lnative=/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/native/rust-test-helpers -Clink-arg=-fuse-ld=lld -Clink-arg=-Wl,--threads=1&quot; &quot;--target-rustcflags&quot; &quot;-Crpath -O -Cdebuginfo=0  -Lnative=/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/native/rust-test-helpers -Clink-arg=-fuse-ld=lld -Clink-arg=-Wl,--threads=1&quot; &quot;--docck-python&quot; &quot;/usr/bin/python&quot; &quot;--lldb-python&quot; &quot;/usr/bin/python&quot; &quot;--gdb&quot; &quot;/usr/bin/gdb&quot; &quot;--quiet&quot; &quot;--llvm-version&quot; &quot;13.0.0-rust-dev&quot; &quot;--llvm-components&quot; &quot;aarch64 aarch64asmparser aarch64codegen aarch64desc aarch64disassembler aarch64info aarch64utils aggressiveinstcombine all all-targets analysis arm armasmparser armcodegen armdesc armdisassembler arminfo armutils asmparser asmprinter avr avrasmparser avrcodegen avrdesc avrdisassembler avrinfo binaryformat bitreader bitstreamreader bitwriter bpf bpfasmparser bpfcodegen bpfdesc bpfdisassembler bpfinfo cfguard codegen core coroutines coverage debuginfocodeview debuginfodwarf debuginfogsym debuginfomsf debuginfopdb demangle dlltooldriver dwarflinker dwp engine executionengine extensions filecheck frontendopenacc frontendopenmp fuzzmutate globalisel hexagon hexagonasmparser hexagoncodegen hexagondesc hexagondisassembler hexagoninfo instcombine instrumentation interfacestub interpreter ipo irreader jitlink libdriver lineeditor linker lto m68k m68kasmparser m68kcodegen m68kdesc m68kdisassembler m68kinfo mc mca mcdisassembler mcjit mcparser mips mipsasmparser mipscodegen mipsdesc mipsdisassembler mipsinfo mirparser msp430 msp430asmparser msp430codegen msp430desc msp430disassembler msp430info native nativecodegen nvptx nvptxcodegen nvptxdesc nvptxinfo objcarcopts object objectyaml option orcjit orcshared orctargetprocess passes powerpc powerpcasmparser powerpccodegen powerpcdesc powerpcdisassembler powerpcinfo profiledata remarks riscv riscvasmparser riscvcodegen riscvdesc riscvdisassembler riscvinfo runtimedyld scalaropts selectiondag sparc sparcasmparser sparccodegen sparcdesc sparcdisassembler sparcinfo support symbolize systemz systemzasmparser systemzcodegen systemzdesc systemzdisassembler systemzinfo tablegen target textapi transformutils vectorize webassembly webassemblyasmparser webassemblycodegen webassemblydesc webassemblydisassembler webassemblyinfo webassemblyutils windowsmanifest x86 x86asmparser x86codegen x86desc x86disassembler x86info xray&quot; &quot;--cc&quot; &quot;&quot; &quot;--cxx&quot; &quot;&quot; &quot;--cflags&quot; &quot;&quot; &quot;--adb-path&quot; &quot;adb&quot; &quot;--adb-test-dir&quot; &quot;/data/tmp/work&quot; &quot;--android-cross-path&quot; &quot;&quot; &quot;--channel&quot; &quot;dev&quot;\nexpected success, got: exit status: 1\n</code></pre></div>",
        "id": 264939959,
        "sender_full_name": "nnethercote",
        "timestamp": 1639523149
    },
    {
        "content": "<p>Anyway, I've started bisecting</p>",
        "id": 264940077,
        "sender_full_name": "nnethercote",
        "timestamp": 1639523169
    },
    {
        "content": "<p>I was thinking of:</p>\n<div class=\"codehilite\"><pre><span></span><code>compiletest::util: executing &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/stage1/bin/rustc&quot; &quot;/home/njn/dev/rust3/src/test/mir-opt/issue-41888.rs&quot; &quot;-Zthreads=1&quot; &quot;--target=x86_64-unknown-linux-gnu&quot; &quot;-Copt-level=1&quot; &quot;-Zdump-mir=all&quot; &quot;-Zmir-opt-level=4&quot; &quot;-Zvalidate-mir&quot; &quot;-Zdump-mir-exclude-pass-number&quot; &quot;-Zdump-mir-dir=/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/test/mir-opt/issue-41888&quot; &quot;-C&quot; &quot;prefer-dynamic&quot; &quot;--out-dir&quot; &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/test/mir-opt/issue-41888&quot; &quot;-Crpath&quot; &quot;-O&quot; &quot;-Cdebuginfo=0&quot; &quot;-Lnative=/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;-Clink-arg=-fuse-ld=lld&quot; &quot;-Clink-arg=-Wl,--threads=1&quot; &quot;-L&quot; &quot;/home/njn/dev/rust3/build/x86_64-unknown-linux-gnu/test/mir-opt/issue-41888/auxiliary&quot;\n</code></pre></div>",
        "id": 264940323,
        "sender_full_name": "tm",
        "timestamp": 1639523241
    },
    {
        "content": "<p>I don't have:  <code>\"-Clink-arg=-fuse-ld=lld\" \"-Clink-arg=-Wl,--threads=1\"</code>, but that doesn't seem to make any difference.</p>",
        "id": 264940450,
        "sender_full_name": "tm",
        "timestamp": 1639523275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> grep <code>rustc</code> for <code>drop_flags_on_init</code>, you'll see it iterates over a <code>FxHashMap</code> when initializing drop flags to <code>false</code>,  which is what you're seeing. <del>How do we determine <code>FxHashMap</code> seeds?</del> <code>FxHashMap</code> uses a fixed seed, no env variable override AFAICT.</p>",
        "id": 264941640,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639523557
    },
    {
        "content": "<p>I'm kind of surprised you're the only one hitting this.</p>",
        "id": 264941714,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639523579
    },
    {
        "content": "<p>Maybe add a <code>trace!</code> to <code>FxHashMap::new</code> if it's not there already?</p>",
        "id": 264941722,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639523581
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mir-opt.2Fissue-41888.2Ers.20test.20failure.20on.20.60master.60/near/264937338\">said</a>:</p>\n<blockquote>\n<p>It reproduces with a fresh checkout, and AFAIK my config isn't that unusual</p>\n</blockquote>\n<p>Can you paste your config, or part of it?</p>",
        "id": 264941800,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639523603
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>changelog-seen = 2\n[llvm]\nuse-linker = &quot;lld&quot;\nlink-jobs = 2\nrelease-debuginfo = true\n[rust]\ndebuginfo-level = 1\nuse-lld = true\n</code></pre></div>",
        "id": 264941913,
        "sender_full_name": "nnethercote",
        "timestamp": 1639523634
    },
    {
        "content": "<p>If it's truly non-deterministic I mean, but maybe you've overridden <code>rustc-hash</code> somehow?</p>",
        "id": 264942162,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639523697
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mir-opt.2Fissue-41888.2Ers.20test.20failure.20on.20.60master.60/near/264941913\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\"><pre><span></span><code>changelog-seen = 2\n[llvm]\nuse-linker = &quot;lld&quot;\nlink-jobs = 2\nrelease-debuginfo = true\n[rust]\ndebuginfo-level = 1\nuse-lld = true\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Yeah, nothing stands out to me as a problem</p>",
        "id": 264942650,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639523847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> Can you compile with debug logging enabled and run <code>RUSTC_LOG=rustc_mir_transform::elaborate_drops=debug rustc +mytoolchain src/tests/mir-opt/issue-41888.rs 2&gt;&amp;1 | grep create_drop_flag</code>?</p>",
        "id": 264944108,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639524462
    },
    {
        "content": "<p>How do I enable debug logging?</p>",
        "id": 264944285,
        "sender_full_name": "nnethercote",
        "timestamp": 1639524586
    },
    {
        "content": "<p>That will log all the insertions to the hash map in question, so we can see if there's some non-determinism in MIR building or something. Also, I'm hesitiant to ask since it seems so obvious, but you did check <code>env</code> for anything with <code>RUST</code>, right?</p>",
        "id": 264944299,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639524600
    },
    {
        "content": "<p><code>debug-logging = true</code>, I think in section <code>[rust]</code></p>",
        "id": 264944377,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639524624
    },
    {
        "content": "<p>Or just <code>debug = true</code></p>",
        "id": 264944386,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639524630
    },
    {
        "content": "<p>Or alternately run as a new user, or with a different shell?</p>",
        "id": 264944390,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639524631
    },
    {
        "content": "<p>The problem manifested immediately after I updated on Monday, and has been consistent (across multiple clones) since then</p>",
        "id": 264944448,
        "sender_full_name": "nnethercote",
        "timestamp": 1639524686
    },
    {
        "content": "<p>Have you tried bisecting yet btw?</p>",
        "id": 264944461,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639524701
    },
    {
        "content": "<p>I'm in the middle of it, I'm getting so many different suggestions on how to investigate it's getting difficult to manage</p>",
        "id": 264944569,
        "sender_full_name": "nnethercote",
        "timestamp": 1639524768
    },
    {
        "content": "<p>I haven't managed to find a \"good\" revision yet</p>",
        "id": 264944582,
        "sender_full_name": "nnethercote",
        "timestamp": 1639524777
    },
    {
        "content": "<p>Sorry, I think we're all very curious about what the root cause is :D</p>",
        "id": 264944740,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639524883
    },
    {
        "content": "<p>I'll leave you to bisecting :)</p>",
        "id": 264944755,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639524898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mir-opt.2Fissue-41888.2Ers.20test.20failure.20on.20.60master.60/near/264942162\">said</a>:</p>\n<blockquote>\n<p>If it's truly non-deterministic I mean, but maybe you've overridden <code>rustc-hash</code> somehow?</p>\n</blockquote>\n<p>With the recent blog post about different hashes tested on a compiler this almost begs the question :-).</p>",
        "id": 264944780,
        "sender_full_name": "tm",
        "timestamp": 1639524917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"352985\">tm</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mir-opt.2Fissue-41888.2Ers.20test.20failure.20on.20.60master.60/near/264944780\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"118594\">Dylan MacKenzie (ecstatic-morse)</span> <a href=\"#narrow/stream/131828-t-compiler/topic/mir-opt.2Fissue-41888.2Ers.20test.20failure.20on.20.60master.60/near/264942162\">said</a>:</p>\n<blockquote>\n<p>If it's truly non-deterministic I mean, but maybe you've overridden <code>rustc-hash</code> somehow?</p>\n</blockquote>\n<p>With the recent blog post about different hashes tested on a compiler this almost begs the question :-).</p>\n</blockquote>\n<p>Yes, I wouldn't have asked if <span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> was a \"normal\" user.</p>",
        "id": 264944805,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639524943
    },
    {
        "content": "<p>I have three <code>rust</code> clones, the problem has manifested on all of them after updating them all on Monday, my hash experiments were only in two of them</p>",
        "id": 264944965,
        "sender_full_name": "nnethercote",
        "timestamp": 1639525070
    },
    {
        "content": "<p>Sure, it's conceivable, but I'll be surprised and intrigued if that turns out to be the cause</p>",
        "id": 264945041,
        "sender_full_name": "nnethercote",
        "timestamp": 1639525135
    },
    {
        "content": "<p>Actually, you'll need to change that <code>debug</code> statement to test my hypothesis.</p>",
        "id": 264945406,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639525419
    },
    {
        "content": "<p>Here's a patch</p>\n<div class=\"codehilite\" data-code-language=\"Darcs Patch\"><pre><span></span><code>diff --git a/compiler/rustc_mir_transform/src/elaborate_drops.rs b/compiler/rustc_mir_transform/src/elaborate_drops.rs\nindex af13c734e5b..17107bcbf17 100644\n<span class=\"gd\">--- a/compiler/rustc_mir_transform/src/elaborate_drops.rs</span>\n<span class=\"gi\">+++ b/compiler/rustc_mir_transform/src/elaborate_drops.rs</span>\n@@ -273,7 +273,7 @@ fn param_env(&amp;self) -&gt; ty::ParamEnv&lt;'tcx&gt; {\n     fn create_drop_flag(&amp;mut self, index: MovePathIndex, span: Span) {\n         let tcx = self.tcx;\n         let patch = &amp;mut self.patch;\n<span class=\"gd\">-        debug!(\"create_drop_flag({:?})\", self.body.span);</span>\n<span class=\"gi\">+        debug!(\"create_drop_flag({:?})\", index);</span>\n         self.drop_flags.entry(index).or_insert_with(|| patch.new_internal(tcx.types.bool, span));\n     }\n</code></pre></div>",
        "id": 264945485,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639525460
    },
    {
        "content": "<p>My output is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">rustc_mir_transform</span>::<span class=\"n\">elaborate_drops</span><span class=\"w\"> </span><span class=\"n\">create_drop_flag</span><span class=\"p\">(</span><span class=\"n\">mp1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">rustc_mir_transform</span>::<span class=\"n\">elaborate_drops</span><span class=\"w\"> </span><span class=\"n\">create_drop_flag</span><span class=\"p\">(</span><span class=\"n\">mp7</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">rustc_mir_transform</span>::<span class=\"n\">elaborate_drops</span><span class=\"w\"> </span><span class=\"n\">create_drop_flag</span><span class=\"p\">(</span><span class=\"n\">mp8</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 264945532,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639525503
    },
    {
        "content": "<p>If yours is the same, the problem is hashmap iteration order. If it's different, there's something deeper in <code>rustc</code> (<code>MoveData</code> or MIR building).</p>",
        "id": 264945734,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639525627
    },
    {
        "content": "<p>The iteration order of an <code>FxHashMap</code> depends on the host architecture (32 bit vs 64 bit)</p>",
        "id": 264946067,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639525837
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/issues/65042\">https://github.com/rust-lang/rust/issues/65042</a></p>",
        "id": 264946106,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639525871
    },
    {
        "content": "<p>and <a href=\"https://github.com/rust-lang/rust/issues/63713\">https://github.com/rust-lang/rust/issues/63713</a></p>",
        "id": 264946230,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639525966
    },
    {
        "content": "<p>The different seed is introduced here: <a href=\"https://github.com/rust-lang/rustc-hash/blob/5e09ea0a1c7ab7e4f9e27771f5a0e5a36c58d1bb/src/lib.rs#L64-L67\">https://github.com/rust-lang/rustc-hash/blob/5e09ea0a1c7ab7e4f9e27771f5a0e5a36c58d1bb/src/lib.rs#L64-L67</a></p>",
        "id": 264946258,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639526000
    },
    {
        "content": "<p>I assume we're both on 64-bit, though, and the iteration order should be deterministic if the insertion order is the same, right?</p>",
        "id": 264946293,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639526033
    },
    {
        "content": "<p>Yes, if the insertion order is the same</p>",
        "id": 264946349,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639526047
    },
    {
        "content": "<p>I mean, I assume we'll end up changing this particular instance to something with a stable iteration order, but now I'm still curious what the root cause is.</p>",
        "id": 264946754,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1639526394
    },
    {
        "content": "<p>I opened <a href=\"https://github.com/rust-lang/rust/issues/91943\">https://github.com/rust-lang/rust/issues/91943</a> to track fixing that</p>",
        "id": 264946858,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639526418
    },
    {
        "content": "<p>Serious question: is a 32-bit compiler ever built and used?</p>",
        "id": 264946987,
        "sender_full_name": "nnethercote",
        "timestamp": 1639526478
    },
    {
        "content": "<p>I think it's still a tier-1 platform for x86, right?</p>",
        "id": 264947087,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639526529
    },
    {
        "content": "<p>Yeah, it is: <a href=\"https://doc.rust-lang.org/nightly/rustc/platform-support.html#tier-1-with-host-tools\">https://doc.rust-lang.org/nightly/rustc/platform-support.html#tier-1-with-host-tools</a></p>",
        "id": 264947124,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639526557
    },
    {
        "content": "<p>I wonder if that's really necessary, or if providing cross-compilation to 32-bit would be enough</p>",
        "id": 264947153,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639526576
    },
    {
        "content": "<p>True, tier 1s are:</p>\n<div class=\"codehilite\"><pre><span></span><code>aarch64-unknown-linux-gnu   ARM64 Linux (kernel 4.2, glibc 2.17+) 1\ni686-pc-windows-gnu 32-bit MinGW (Windows 7+)\ni686-pc-windows-msvc    32-bit MSVC (Windows 7+)\ni686-unknown-linux-gnu  32-bit Linux (kernel 2.6.32+, glibc 2.11+)\nx86_64-apple-darwin 64-bit macOS (10.7+, Lion+)\nx86_64-pc-windows-gnu   64-bit MinGW (Windows 7+)\nx86_64-pc-windows-msvc  64-bit MSVC (Windows 7+)\nx86_64-unknown-linux-gnu    64-bit Linux (kernel 2.6.32+, glibc 2.11+)\n</code></pre></div>",
        "id": 264947172,
        "sender_full_name": "nnethercote",
        "timestamp": 1639526594
    },
    {
        "content": "<p>Still, I wonder if anybody is using those seriously</p>",
        "id": 264947197,
        "sender_full_name": "nnethercote",
        "timestamp": 1639526619
    }
]