[
    {
        "content": "<p>Why is <code>-Z unpretty</code> called <strong>un</strong>pretty as opposed to pretty?</p>",
        "id": 228101225,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614482602
    },
    {
        "content": "<p>My guess is that it means \"<strong>un</strong>stable <strong>pretty</strong> printer\", to contrast with the <code>--pretty</code> flag which I guess was meant to be for stable formats.  <a href=\"https://github.com/rust-lang/rust/pull/27392\">The PR</a> that introduced it didn't really elaborate, though.</p>\n<p>It does seem a bit confusing since both options are unstable, but maybe the intent is that <code>unpretty</code> will be unstable forever whereas <code>--pretty</code> in theory could be stabilized?</p>",
        "id": 228104397,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614486680
    },
    {
        "content": "<p>Yeah, that explanation makes sense. I do wonder why there are two separate flags though—maybe <code>--unpretty</code> (née <code>--xpretty</code>) was added when <code>--pretty</code> was stable?</p>",
        "id": 228145576,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614534787
    },
    {
        "content": "<p>(FWIW <code>--pretty</code> is <em>not</em> stable, it requires <code>-Zunstable-options</code>)</p>",
        "id": 228146737,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1614536020
    },
    {
        "content": "<p>Yes, I meant that it might have been 'stable' in the pre-1.0 days.</p>",
        "id": 228147344,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614536686
    },
    {
        "content": "<p>(I actually named it \"unpretty\" because i considered the output to be usually anything but pretty. It often provides internal information that is useful for a compiler developer, but rarely is it useful to an end user who is just programming in Rust.)</p>",
        "id": 228246773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614611535
    },
    {
        "content": "<p>I suppose the \"unpretty=expanded\" could be an exception to that claim.</p>",
        "id": 228246841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614611558
    },
    {
        "content": "<p>see also <a href=\"https://github.com/rust-lang/rust/issues/27392\">#27392</a></p>",
        "id": 228247050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614611638
    },
    {
        "content": "<p>which indicates that originally it was <code>--xpretty</code> (as in \"extended pretty\"). And also, at the time when it was introduced, \"pretty\" <em>was</em> used for expanded, typed, etc. The only thing \"unpretty\" was for was \"everybody_loops\" and flowgraph-printing.</p>",
        "id": 228247672,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614611844
    },
    {
        "content": "<p>(which reinforces my original point that the output was likely to only be useful to a rustc developer.)</p>",
        "id": 228247731,
        "sender_full_name": "pnkfelix",
        "timestamp": 1614611880
    },
    {
        "content": "<p>I appreciate how in <a href=\"https://github.com/rust-lang/rust/issues/27392\">#27392</a> you said</p>\n<blockquote>\n<p>Make sure this gets a low priority if it gets r-plussed!</p>\n</blockquote>\n<p>and the reviewer posted</p>\n<blockquote>\n<p>looks good to me @bors r+ p=100000000</p>\n</blockquote>\n<p><span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 228334694,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614646142
    },
    {
        "content": "<p>Well, if you treat <code>p=</code> like <code>nice</code>...</p>",
        "id": 228336543,
        "sender_full_name": "scottmcm",
        "timestamp": 1614647233
    }
]