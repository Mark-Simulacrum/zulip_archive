[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> just collecting my thoughts from the discussion in the steering meeting:</p>\n<ul>\n<li>config.toml is not obvious (perhaps make x.py error until they set it up)?</li>\n<li>disk space usage</li>\n<li>when to do a full 2-stage build</li>\n<li>building with system llvm (and when not to)</li>\n</ul>",
        "id": 197700338,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589553329
    },
    {
        "content": "<p>I'd add, when using <code>--keep-stage 1</code> is needed and may improve compilation times</p>",
        "id": 197700510,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589553394
    },
    {
        "content": "<p>when it may be problematic to do so</p>",
        "id": 197700575,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589553418
    },
    {
        "content": "<p>some people use <code>src/libstd</code> what does that mean?</p>",
        "id": 197700637,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589553445
    },
    {
        "content": "<p>Quoting varkor: </p>\n<blockquote>\n<p>this is probably also tangential, but it could be worth considering a prompt the first time x.py is run, which walks a new contributor through setting up config.toml without having to wade through all the uncommon options â€” just some simple questions for a \"quick start\"</p>\n</blockquote>",
        "id": 197700640,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589553446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197700637\">said</a>:</p>\n<blockquote>\n<p>some people use src/libstd what does that mean?</p>\n</blockquote>\n<p>wouldn't be better to use this under a flag which is more explicit, like <code>--up-to src/libstd</code>?</p>",
        "id": 197700774,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589553486
    },
    {
        "content": "<p><code>./x.py build --stage 1 --keep-stage 1 src/libstd</code> doesn't that read weird? what is the meaning of that?</p>",
        "id": 197701009,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589553592
    },
    {
        "content": "<p>I already know and understand most of this stuff but I was confused about some of these things at some point</p>",
        "id": 197701141,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589553635
    },
    {
        "content": "<p>side note that selecting indivudal tests could be improved I think relatively easily</p>",
        "id": 197705024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589555129
    },
    {
        "content": "<p>I'd like to see <code>x.py test src/test/ui/foo.rs</code> just work</p>",
        "id": 197705087,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589555157
    },
    {
        "content": "<p>it would probably just translate to a <code>--test-args</code> call</p>",
        "id": 197705139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589555163
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197705087\">said</a>:</p>\n<blockquote>\n<p>I'd lik to see <code>x.py test src/test/ui/foo.rs</code> just work</p>\n</blockquote>\n<p>it does, doesn't it?</p>",
        "id": 197705168,
        "sender_full_name": "varkor",
        "timestamp": 1589555174
    },
    {
        "content": "<p>it used not to, but there were some PRs not so long ago that added some special-casing for these sorts of invocations</p>",
        "id": 197705254,
        "sender_full_name": "varkor",
        "timestamp": 1589555206
    },
    {
        "content": "<p>it's supposed to</p>",
        "id": 197705270,
        "sender_full_name": "simulacrum",
        "timestamp": 1589555212
    },
    {
        "content": "<p>ohh interesting, pretty sure that's not documented on rustc-dev-guide</p>",
        "id": 197705329,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589555237
    },
    {
        "content": "<p>maybe those changes should have been publicised a bit more</p>",
        "id": 197705332,
        "sender_full_name": "varkor",
        "timestamp": 1589555239
    },
    {
        "content": "<p>both on rustc-dev-guide and by cc'ing compiler-contributors</p>",
        "id": 197705367,
        "sender_full_name": "varkor",
        "timestamp": 1589555252
    },
    {
        "content": "<p>it may be a good idea to not merge these PRs if we lack something that explains these changes on rustc-dev-guide maybe ...</p>",
        "id": 197705506,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589555301
    },
    {
        "content": "<p>that would introduce more friction for contributors... would be more easy if dev guide was part of rustc repo (which is maybe not a bad idea)</p>",
        "id": 197708842,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1589556528
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119529\">@Tshepang Lekhonkhobe</span> we have thought about that, but then the time to land a single PR increases to days due to CI</p>",
        "id": 197709085,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589556637
    },
    {
        "content": "<p>and then who knows how many links will break while in the queue</p>",
        "id": 197709109,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589556650
    },
    {
        "content": "<p>if it encourages rustc contributors to add content, seems like a big win</p>",
        "id": 197709627,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1589556901
    },
    {
        "content": "<p>links break regardless</p>",
        "id": 197709642,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1589556908
    },
    {
        "content": "<p>fair, it's worth thinking about, but I think there are also challenges</p>",
        "id": 197709707,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589556940
    },
    {
        "content": "<p>... them breaking during rustc CI would ensure they are kept fresh</p>",
        "id": 197709722,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1589556948
    },
    {
        "content": "<p>yeah, pros and cons</p>",
        "id": 197709840,
        "sender_full_name": "Tshepang Lekhonkhobe",
        "timestamp": 1589556987
    },
    {
        "content": "<p>I'm not sure if I prefer to merge rustc-dev-guide into rust repo, if people that review PRs ask for documentation on rustc-dev-guide would be enough</p>",
        "id": 197709933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589557028
    },
    {
        "content": "<p>but</p>",
        "id": 197709934,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589557029
    },
    {
        "content": "<p>if we were integrating rustc-dev-guide or something</p>",
        "id": 197709961,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589557041
    },
    {
        "content": "<p>I wonder if it's possible to make r+ use some kind of heuristic to avoid most or all the checks in cases like this</p>",
        "id": 197709994,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589557056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121053\">varkor</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197705332\">said</a>:</p>\n<blockquote>\n<p>maybe those changes should have been publicised a bit more</p>\n</blockquote>\n<p>neat!!</p>",
        "id": 197712966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589558357
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> a compromise would be to file an issue on rustc-dev-guide</p>",
        "id": 197713027,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589558393
    },
    {
        "content": "<p>and land the PR immediately</p>",
        "id": 197713036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589558397
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197713027\">said</a>:</p>\n<blockquote>\n<p>I think <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> a compromise would be to file an issue on rustc-dev-guide</p>\n</blockquote>\n<p>yes, agreed that this is better but ideally the best solution would be to open a PR</p>",
        "id": 197713882,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558742
    },
    {
        "content": "<p>so we can collectively own rustc-dev-guide</p>",
        "id": 197714003,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1589558787
    },
    {
        "content": "<p>Yeah, the trouble with just filing a PR is that it applies no back pressure, and we have neither the expertise nor the manpower to turn every issue into actual documentation</p>",
        "id": 197717891,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589560475
    },
    {
        "content": "<p>I rather like what <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> did with <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/583\">https://github.com/rust-lang/rustc-dev-guide/pull/583</a></p>",
        "id": 197717995,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589560513
    },
    {
        "content": "<p>They opened a PR with some documentation and a promise of more later. There's very little chance that we would actually get this documentation if they hadn't volunteered it... <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 197718120,
        "sender_full_name": "mark-i-m",
        "timestamp": 1589560555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121053\">varkor</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197705168\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197705087\">said</a>:</p>\n<blockquote>\n<p>I'd lik to see <code>x.py test src/test/ui/foo.rs</code> just work</p>\n</blockquote>\n<p>it does, doesn't it?</p>\n</blockquote>\n<p>I tried that like month ago to run just one of ui tests but that didn't work. <code>x.py test src/test/ui</code> ran just ui tests as expected though, so I eventually removed all the tests except the one I needed <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 197728066,
        "sender_full_name": "mati865",
        "timestamp": 1589565095
    },
    {
        "content": "<p>we have <code>--test-args test_name</code> which helps shrink the list of tests that are run, but that's not ideal since it just matches the name and I don't think you can specify full paths</p>",
        "id": 197728244,
        "sender_full_name": "oli",
        "timestamp": 1589565175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197717995\">said</a>:</p>\n<blockquote>\n<p>I rather like what <span class=\"user-mention silent\" data-user-id=\"118594\">ecstatic-morse</span> did with <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/583\">https://github.com/rust-lang/rustc-dev-guide/pull/583</a></p>\n</blockquote>\n<p>I should uhh, probably finish that at some point, although there's one more major change (arbitrary domains) to the API in the works.</p>",
        "id": 197729985,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1589565883
    },
    {
        "content": "<p><code>./x.py test src/test/ui/specific-test.rs</code> should work fine, I use that all the time</p>",
        "id": 197734294,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589567924
    },
    {
        "content": "<p>One problem is that globs don't work â€“ all but the first file are ignored</p>",
        "id": 197734330,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589567943
    },
    {
        "content": "<p>Presumably because the rest is passed as arguments to... something?</p>",
        "id": 197734354,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589567963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/131828-t-compiler/topic/x.2Epy.20concerns/near/197734330\">said</a>:</p>\n<blockquote>\n<p>One problem is that globs don't work â€“ all but the first file are ignored</p>\n</blockquote>\n<p>I think this specific pattern is special-cased, but I can't remember why supporting multiple files was inconvenient to implement.</p>",
        "id": 197793473,
        "sender_full_name": "varkor",
        "timestamp": 1589632084
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> probably because we have to lower to <code>--test-args</code> and compiletest, like libtest, only accepts a single pattern</p>",
        "id": 197797697,
        "sender_full_name": "simulacrum",
        "timestamp": 1589638680
    },
    {
        "content": "<p>(and it's a substring match IIRC, not a regex, so you don't get alternations)</p>",
        "id": 197797737,
        "sender_full_name": "simulacrum",
        "timestamp": 1589638690
    }
]