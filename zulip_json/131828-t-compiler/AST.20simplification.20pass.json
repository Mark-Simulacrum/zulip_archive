[
    {
        "content": "<p>Hello! Is there any simplification pass done on the AST before lowering to HIR? I am trying to debug something and i don't understand most of it but would it be possible that an <code>Expr</code> of <code>kind: Closure</code> be transformed in its inner block? Or if you look at differently, that the <code>Closure</code> level is removed and its inner block left instead in the tree?</p>",
        "id": 196992742,
        "sender_full_name": "marmeladema",
        "timestamp": 1589032465
    },
    {
        "content": "<p>No simplification.</p>",
        "id": 197024181,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1589072449
    },
    {
        "content": "<p>Besides regular macro expansion and a couple of extra expansion passes like test harness generation, all AST transformations and simplifications are happening during lowering to HIR.</p>",
        "id": 197024194,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1589072507
    },
    {
        "content": "<p>However, some side tables later used from HIR <em>are</em> built as if AST were modified, e.g. <code>DefId</code> hierarchies (<code>src\\librustc_resolve\\def_collector.rs</code>).</p>",
        "id": 197024258,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1589072599
    },
    {
        "content": "<p>Ok. So its during <code>def_collector</code> that i can see the <code>Expr</code> with <code>kind: Closure</code> and then later during during lowering i can only see the block of the cloure</p>",
        "id": 197047579,
        "sender_full_name": "marmeladema",
        "timestamp": 1589107058
    },
    {
        "content": "<p>So during <code>def_collector</code> i can see: main function -&gt; block -&gt; closure expr -&gt; block -&gt; macrodef<br>\nBut during lowering i can see: main function -&gt; block -&gt; block -&gt; macrodef</p>",
        "id": 197047695,
        "sender_full_name": "marmeladema",
        "timestamp": 1589107140
    },
    {
        "content": "<p>Because the closure expr is gone, its not lowered properly and the macrodef (which is properly lowered) has a parent def id that does not have an associated hir id</p>",
        "id": 197047734,
        "sender_full_name": "marmeladema",
        "timestamp": 1589107177
    },
    {
        "content": "<p>And i printed the AST at the beginning of the lower_crate function and the closure expr is already gone at this point so something must happen <em>before</em></p>",
        "id": 197047818,
        "sender_full_name": "marmeladema",
        "timestamp": 1589107312
    },
    {
        "content": "<p>Hmm, is this happening in rustdoc by chance?</p>",
        "id": 197050552,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1589110880
    },
    {
        "content": "<p>Because rustdoc does have a pass removing parts of AST unnecessary for documentation purposes.</p>",
        "id": 197050602,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1589110924
    },
    {
        "content": "<p>Oh yes its during a rustdoc test</p>",
        "id": 197053613,
        "sender_full_name": "marmeladema",
        "timestamp": 1589114846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>  <code>src/test/rustdoc/macro-in-closure.rs</code></p>",
        "id": 197053623,
        "sender_full_name": "marmeladema",
        "timestamp": 1589114870
    },
    {
        "content": "<p>The relevant pass is <code>ReplaceBodyWithLoop</code>.</p>",
        "id": 197053819,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1589115142
    },
    {
        "content": "<p>AFAIK, it was modified in the past to not strip \"things with items inside them\", perhaps this is a missing case.</p>",
        "id": 197053829,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1589115180
    },
    {
        "content": "<p>thank you very much for the help, i'll look for that and try to understand what is happening!</p>",
        "id": 197053860,
        "sender_full_name": "marmeladema",
        "timestamp": 1589115216
    },
    {
        "content": "<p>Something definitely happens in <code>ReplaceBodyWithLoop::visit_block</code></p>",
        "id": 197055118,
        "sender_full_name": "marmeladema",
        "timestamp": 1589116946
    },
    {
        "content": "<p>So i managed to do a PR that fixes the issue: <a href=\"https://github.com/rust-lang/rust/pull/72088\" title=\"https://github.com/rust-lang/rust/pull/72088\">https://github.com/rust-lang/rust/pull/72088</a></p>",
        "id": 197081558,
        "sender_full_name": "marmeladema",
        "timestamp": 1589148485
    },
    {
        "content": "<p>This is kind of a nightmare because fixing in one place, make other places fail :(</p>",
        "id": 197245357,
        "sender_full_name": "marmeladema",
        "timestamp": 1589271564
    }
]