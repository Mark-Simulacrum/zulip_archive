[
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , our weekly meeting will start in about 25 minutes</p>",
        "id": 160202320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551969295
    },
    {
        "content": "<p>I'm going to start the pre-triage process in <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-07.20.2354818/near/160202399\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-07.20.2354818/near/160202399\">another topic</a> on this stream. We'll see how much I get through in time I've allotted...</p>",
        "id": 160202368,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551969322
    },
    {
        "content": "<p>for backport polls we can try using the zulip feature <code>/poll foo bar boo</code></p>",
        "id": 160202491,
        "sender_full_name": "oli",
        "timestamp": 1551969405
    },
    {
        "content": "<p>/poll should we play around with fancy zulip features?</p>",
        "id": 160202504,
        "sender_full_name": "oli",
        "timestamp": 1551969416
    },
    {
        "content": "<p>Okay hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> its time to start</p>",
        "id": 160205051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551970892
    },
    {
        "content": "<p>so we'll spend &lt;= 30 minutes on nominated issues and/or results of triage</p>",
        "id": 160205078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551970917
    },
    {
        "content": "<p>and then we'll hear from <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> about <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> and also from <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> about <span class=\"user-group-mention\" data-user-group-id=\"1175\">@wg-rfc-2229</span></p>",
        "id": 160205165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551970956
    },
    {
        "content": "<p>actually, I'll give the update on <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> as <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> got pulled into other obligations on short notice</p>",
        "id": 160205244,
        "sender_full_name": "mw",
        "timestamp": 1551971006
    },
    {
        "content": "<p>(for those not following the <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-07.20.2354818/near/160202399\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-03-07.20.2354818/near/160202399\">pre-triage topic</a>: I didn't finish all the of pre-triage, but I got through enough of it to figure out what we need to discuss here, I hope.)</p>",
        "id": 160205254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971017
    },
    {
        "content": "<p>so we have <em>ten</em> <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\">nominated T-compiler</a> issues</p>",
        "id": 160205329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971050
    },
    {
        "content": "<p>oh wait</p>",
        "id": 160205336,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971058
    },
    {
        "content": "<p>lets do beta-nominations first</p>",
        "id": 160205342,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971065
    },
    {
        "content": "<p>I want to make sure we get through those because the I-nominateds often expand to fill all available time</p>",
        "id": 160205360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971082
    },
    {
        "content": "<p>(there's a reason beta-noms come first on the <a href=\"https://github.com/rust-lang/rust/issues/54818\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54818\">agenda</a>)</p>",
        "id": 160205402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971110
    },
    {
        "content": "<p>there are only two <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\">beta-noms</a> that have not yet been accepted</p>",
        "id": 160205427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971134
    },
    {
        "content": "<p>first: \" Warning period for detecting nested impl trait\" <a href=\"https://github.com/rust-lang/rust/issues/58608\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58608\">#58608</a></p>",
        "id": 160205437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971151
    },
    {
        "content": "<p>we said last week that we would give this a week for someone to object asychronously</p>",
        "id": 160205501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> objected <a href=\"https://github.com/rust-lang/rust/issues/57979#issuecomment-469722848\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57979#issuecomment-469722848\">here</a> but I think they misunderstood my point...?</p>",
        "id": 160205554,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I did?</p>",
        "id": 160205590,
        "sender_full_name": "centril",
        "timestamp": 1551971234
    },
    {
        "content": "<p>you said its bad to go from hard-error to warning</p>",
        "id": 160205608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971248
    },
    {
        "content": "<p>which I agree with</p>",
        "id": 160205613,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971250
    },
    {
        "content": "<p>but I was trying to say that is what would happen if we do not backport</p>",
        "id": 160205625,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971265
    },
    {
        "content": "<p>i.e. that was my arguemnt for \"if we do not backport, then we should not land this PR at all\"</p>",
        "id": 160205643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971280
    },
    {
        "content": "<p>but my understanding is that if we can get this PR reviewed, and if we <em>do</em> approve it for backport</p>",
        "id": 160205703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971304
    },
    {
        "content": "<p>and it gets into beta during this cycle</p>",
        "id": 160205716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971316
    },
    {
        "content": "<p>then we avoid the hard error in stable</p>",
        "id": 160205727,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971322
    },
    {
        "content": "<p>i.e. stable goes from \"bad code is accepted\" to \"warning cycle\" to \"hard error\"</p>",
        "id": 160205738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971336
    },
    {
        "content": "<p>oh... but I thought it already was a hard error in stable because it slipped?</p>",
        "id": 160205764,
        "sender_full_name": "centril",
        "timestamp": 1551971356
    },
    {
        "content": "<p>the PR I was proposing didn't get into Nightly before nightly was promoted to beta</p>",
        "id": 160205781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971379
    },
    {
        "content": "<p>that was what I meant by slipped</p>",
        "id": 160205790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971386
    },
    {
        "content": "<p>i don't think the problem has made it into stable yet</p>",
        "id": 160205800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> yeah I checked; you are right</p>",
        "id": 160205861,
        "sender_full_name": "centril",
        "timestamp": 1551971409
    },
    {
        "content": "<p>okay so is it fair to say you don't object to a beta-backport then, at least not on those grounds?)</p>",
        "id": 160205882,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971429
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> ok; so making it into a C-future-compat warning on beta seems fine</p>",
        "id": 160205893,
        "sender_full_name": "centril",
        "timestamp": 1551971439
    },
    {
        "content": "<p>okay.</p>",
        "id": 160205899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971445
    },
    {
        "content": "<p>I do think I need someone to actually review this</p>",
        "id": 160205915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971451
    },
    {
        "content": "<p>but... I want us to set dates for when to make it into deny =&gt; error</p>",
        "id": 160205924,
        "sender_full_name": "centril",
        "timestamp": 1551971456
    },
    {
        "content": "<p>not \"someday\"</p>",
        "id": 160205942,
        "sender_full_name": "centril",
        "timestamp": 1551971471
    },
    {
        "content": "<p>That is, I either need <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> to say \"hey I will do the review soonish\", or I need someone to volunteer to review PR <a href=\"https://github.com/rust-lang/rust/issues/58608\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58608\">#58608</a></p>",
        "id": 160205960,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971488
    },
    {
        "content": "<p>but that doesn't need to happen synchronously</p>",
        "id": 160205983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971507
    },
    {
        "content": "<p>I'm going to go ahead and mark <a href=\"https://github.com/rust-lang/rust/issues/58608\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58608\">#58608</a> as beta-accepted based on this discussion, but also note that backport should not proceed until review has been completed</p>",
        "id": 160206047,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971526
    },
    {
        "content": "<p>sgtm, but dates should be set before the PR is merged and the issue is made</p>",
        "id": 160206087,
        "sender_full_name": "centril",
        "timestamp": 1551971568
    },
    {
        "content": "<p>is there an issue filed about this process problem that <span class=\"user-mention\" data-user-id=\"126931\">@centril</span>  implicitly describing?</p>",
        "id": 160206123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971597
    },
    {
        "content": "<p>Not that I know of</p>",
        "id": 160206138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971619
    },
    {
        "content": "<p>but I think it's a good idea to file one</p>",
        "id": 160206140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971621
    },
    {
        "content": "<p>oh; nope</p>",
        "id": 160206142,
        "sender_full_name": "centril",
        "timestamp": 1551971623
    },
    {
        "content": "<p>and I would be willing to do so</p>",
        "id": 160206145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971625
    },
    {
        "content": "<p>As for this particular case, I think setting a deadline is \"ok\" -- we could say 1 release</p>",
        "id": 160206165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971641
    },
    {
        "content": "<p>that's tighter than I think we want in general</p>",
        "id": 160206214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> you'll also need to make a C-future-compatibility issue based on the template etc.</p>",
        "id": 160206215,
        "sender_full_name": "centril",
        "timestamp": 1551971649
    },
    {
        "content": "<p>next beta-nom: \"Include bounds from promoted constants in NLL\" <a href=\"https://github.com/rust-lang/rust/issues/57202\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57202\">#57202</a></p>",
        "id": 160206216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971649
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> you'll also need to make a C-future-compatibility issue based on the template etc.</p>\n</blockquote>\n<p>hmm okay I thought I saw precedent elsewhere for not creating a fresh issue</p>",
        "id": 160206251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971676
    },
    {
        "content": "<p>but I'll go and review.</p>",
        "id": 160206258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971680
    },
    {
        "content": "<p>we normally make a fresh issue</p>",
        "id": 160206265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971687
    },
    {
        "content": "<p>with a clean write-up</p>",
        "id": 160206267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971689
    },
    {
        "content": "<p>there is a template</p>",
        "id": 160206273,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> example, <a href=\"https://github.com/rust-lang/rust/issues/57742\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57742\">https://github.com/rust-lang/rust/issues/57742</a></p>",
        "id": 160206281,
        "sender_full_name": "centril",
        "timestamp": 1551971700
    },
    {
        "content": "<p>so I talked to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> in some depth</p>",
        "id": 160206298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971706
    },
    {
        "content": "<p>oops</p>",
        "id": 160206303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971708
    },
    {
        "content": "<blockquote>\n<p>there is a template</p>\n</blockquote>\n<p><a href=\"https://forge.rust-lang.org/rustc-bug-fix-procedure.html\" target=\"_blank\" title=\"https://forge.rust-lang.org/rustc-bug-fix-procedure.html\">https://forge.rust-lang.org/rustc-bug-fix-procedure.html</a></p>",
        "id": 160206318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971718
    },
    {
        "content": "<blockquote>\n<p>we normally make a fresh issue</p>\n</blockquote>\n<p>(okay; now that issue has been beta-accepted I can justify spending time on that)</p>",
        "id": 160206326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971727
    },
    {
        "content": "<blockquote>\n<p>next beta-nom: \"Include bounds from promoted constants in NLL\" <a href=\"https://github.com/rust-lang/rust/issues/57202\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57202\">#57202</a></p>\n</blockquote>\n<p>so I talked to <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> in some depth and I remove my objection :)</p>",
        "id": 160206355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971751
    },
    {
        "content": "<p>great</p>",
        "id": 160206370,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971760
    },
    {
        "content": "<p>I'd still like us to pursue an alternate approach at some point, but I'm comfortable with this one for the time being</p>",
        "id": 160206417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551971766
    },
    {
        "content": "<p>If anyone else objects to beta-backport of <a href=\"https://github.com/rust-lang/rust/issues/57202\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57202\">#57202</a>, I invite you to voice your objection</p>",
        "id": 160206439,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971792
    },
    {
        "content": "<p>but for now I'm going to go ahead and mark as beta-accepted based on discussion (or lack thereof) of the matter from last week</p>",
        "id": 160206455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971814
    },
    {
        "content": "<p>we have no stable nominations (thank goodness)</p>",
        "id": 160206493,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971854
    },
    {
        "content": "<p>so back to <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\">nominated issues</a> in ~13 minutes remaining</p>",
        "id": 160206511,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971879
    },
    {
        "content": "<p>I want to cover the unassigned P-high's first</p>",
        "id": 160206560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971891
    },
    {
        "content": "<p>so I'm going to go slightly out of order</p>",
        "id": 160206565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971895
    },
    {
        "content": "<p>\"Rustc 1.33 stable panicked on a closure inside a closure\" <a href=\"https://github.com/rust-lang/rust/issues/58840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58840\">#58840</a></p>",
        "id": 160206577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971905
    },
    {
        "content": "<p>this has been pinpointed to \"Universes\" <a href=\"https://github.com/rust-lang/rust/issues/55517\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55517\">#55517</a></p>",
        "id": 160206598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971932
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> who is good person to assign this to?</p>",
        "id": 160206612,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971941
    },
    {
        "content": "<p>actually</p>",
        "id": 160206648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971966
    },
    {
        "content": "<p>looking at the stack trace</p>",
        "id": 160206651,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971970
    },
    {
        "content": "<p>I think I'm a good person</p>",
        "id": 160206656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971973
    },
    {
        "content": "<p>(At least, I've been wrestling with RegionVid conversion issues.)</p>",
        "id": 160206679,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971990
    },
    {
        "content": "<p>so I'll follow through on this.</p>",
        "id": 160206681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551971993
    },
    {
        "content": "<p>(btw the crate in <a href=\"https://github.com/rust-lang/rust/issues/58840\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58840\">#58840</a> doesn't build on nightly, so not fixed by the return of the leak check <a href=\"https://github.com/rust-lang/rust/issues/58592\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58592\">#58592</a>)</p>",
        "id": 160206691,
        "sender_full_name": "lqd",
        "timestamp": 1551972001
    },
    {
        "content": "<p>next nominated P-high unassigned issue: \"Derives on deprecated items generate deprecation warnings\" <a href=\"https://github.com/rust-lang/rust/issues/58822\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58822\">#58822</a></p>",
        "id": 160206801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972049
    },
    {
        "content": "<p>This, <a href=\"https://github.com/rust-lang/rust/issues/58822\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58822\">#58822</a>, needs a volunteer. Seems like it might require knowledge of how lints and macro-expansion/derive interact</p>",
        "id": 160206841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972093
    },
    {
        "content": "<blockquote>\n<p>I think I'm a good person</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I can try to take a look, also</p>",
        "id": 160206848,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> perhaps?</p>",
        "id": 160206850,
        "sender_full_name": "centril",
        "timestamp": 1551972112
    },
    {
        "content": "<p>I feel like <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> is usually good about assigning themselves when they think they are right candidate to resolve problem</p>",
        "id": 160206927,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972147
    },
    {
        "content": "<p>I could speculatively assign it to them. Or maybe I could assign it to someone else who will know to ask <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> for help?</p>",
        "id": 160206955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972171
    },
    {
        "content": "<p>(e.g. even if <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> has knowledge, they may be over-taxed elsewhere right now, and thus better to assign to someone else?)</p>",
        "id": 160207002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972199
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is this a regression? do we have a bisection?</p>",
        "id": 160207015,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972215
    },
    {
        "content": "<p>stable-to-beta regression</p>",
        "id": 160207033,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972229
    },
    {
        "content": "<p>no one has reported a bisection. So that's an obvious first step</p>",
        "id": 160207093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972250
    },
    {
        "content": "<p>.... anyone?</p>",
        "id": 160207100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972260
    },
    {
        "content": "<p>I can try to do the bisection</p>",
        "id": 160207118,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972280
    },
    {
        "content": "<p>maybe @euclio ?</p>",
        "id": 160207130,
        "sender_full_name": "centril",
        "timestamp": 1551972296
    },
    {
        "content": "<p>I think if we're going to choose between my time or niko's, I should take it</p>",
        "id": 160207133,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972302
    },
    {
        "content": "<p>I don't know @euclio (?)</p>",
        "id": 160207168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972328
    },
    {
        "content": "<p>well running the bisetion is actually fairly easy</p>",
        "id": 160207173,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972334
    },
    {
        "content": "<p>I'm going to see if I can get it going during this meeting :)</p>",
        "id": 160207175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972339
    },
    {
        "content": "<p>okay</p>",
        "id": 160207180,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972343
    },
    {
        "content": "<p>lets move along</p>",
        "id": 160207183,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972346
    },
    {
        "content": "<p>next nominated unassigned issue is \"Implement \"pipelined\" rustc compilation (compiler side)\" <a href=\"https://github.com/rust-lang/rust/issues/58465\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58465\">#58465</a></p>",
        "id": 160207240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972371
    },
    {
        "content": "<p>During triage I opted not to assign a priority label here</p>",
        "id": 160207248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972379
    },
    {
        "content": "<p>because I don't know what to give it</p>",
        "id": 160207254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972384
    },
    {
        "content": "<p>Yeah, it's not that sort of nomination.</p>",
        "id": 160207263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972396
    },
    {
        "content": "<p>It's in some sense a \"meta nomination\" -- in that I don't actually know where in the process we would discuss this sort of idea. Perhaps an RFC</p>",
        "id": 160207285,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972426
    },
    {
        "content": "<p>might be more of a steering meeting discussion</p>",
        "id": 160207291,
        "sender_full_name": "mw",
        "timestamp": 1551972432
    },
    {
        "content": "<p>but I think the idea has promise</p>",
        "id": 160207336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972450
    },
    {
        "content": "<p>okay...</p>",
        "id": 160207413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972489
    },
    {
        "content": "<p>well I'll leave the nominated tag on it</p>",
        "id": 160207421,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972498
    },
    {
        "content": "<p>maybe I'll add it to the steering meeting agenda hackmd</p>",
        "id": 160207425,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972500
    },
    {
        "content": "<p>for now at least</p>",
        "id": 160207429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972503
    },
    {
        "content": "<p>it seems like we need to decide who is going to drive that work</p>",
        "id": 160207435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972508
    },
    {
        "content": "<p>but if that's decided during steering meeting, sounds fine.</p>",
        "id": 160207441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972518
    },
    {
        "content": "<p>(did we go through beta-nominations?)</p>",
        "id": 160207448,
        "sender_full_name": "centril",
        "timestamp": 1551972522
    },
    {
        "content": "<p>next unassigned nominated issue is \"Rustc should use a variable other than RUST_LOG for env_logger.\" <a href=\"https://github.com/rust-lang/rust/issues/57985\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57985\">#57985</a></p>",
        "id": 160207457,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972529
    },
    {
        "content": "<p>I tagged this as P-medium a week ago</p>",
        "id": 160207468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972537
    },
    {
        "content": "<p>because, well, its not high priority</p>",
        "id": 160207486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972545
    },
    {
        "content": "<p>but I wanted to check whether anyone <em>objects</em> to making <code>rustc</code> use <code>RUSTC_LOG</code> (and <code>cargo</code> use <code>CARGO_LOG</code>... and <code>rustdoc</code> use <code>RUSTDOC_LOG</code>?)</p>",
        "id": 160207527,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972580
    },
    {
        "content": "<p>I'm fine with it</p>",
        "id": 160207544,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551972596
    },
    {
        "content": "<p>Seems objectionable to object ;)</p>",
        "id": 160207591,
        "sender_full_name": "centril",
        "timestamp": 1551972606
    },
    {
        "content": "<p>this shouldn't need an RFC, should it?</p>",
        "id": 160207598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972616
    },
    {
        "content": "<p>Not my team but I'd say no</p>",
        "id": 160207610,
        "sender_full_name": "centril",
        "timestamp": 1551972632
    },
    {
        "content": "<p>Changing behaviour here feels like changing <code>-Z</code></p>",
        "id": 160207618,
        "sender_full_name": "nagisa",
        "timestamp": 1551972644
    },
    {
        "content": "<p>okay well then it sounds like no one's going to object who's here now.</p>",
        "id": 160207623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972651
    },
    {
        "content": "<p>so there's no reason to keep this nominated</p>",
        "id": 160207637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972655
    },
    {
        "content": "<p>i.e. we informally approve of this change, and just need to find someone who wants to do it.</p>",
        "id": 160207665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972679
    },
    {
        "content": "<p>I'll remove the nominated tag from this and various other bugs that I believe were resolved during pretriage</p>",
        "id": 160207682,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972698
    },
    {
        "content": "<p>lets move on to WG checkin</p>",
        "id": 160207686,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> you said you'd present for <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span> ?</p>",
        "id": 160207746,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> did we go through beta nominations? there are some beta-nominated things not beta-acceptd</p>",
        "id": 160207748,
        "sender_full_name": "centril",
        "timestamp": 1551972731
    },
    {
        "content": "<p>(the author of the issue might be interested in opening a fix now that it's been accepted)</p>",
        "id": 160207757,
        "sender_full_name": "varkor",
        "timestamp": 1551972740
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> did we go through beta nominations? there are some beta-nominated things not beta-acceptd</p>\n</blockquote>\n<p>I only do T-compiler ones</p>",
        "id": 160207772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972753
    },
    {
        "content": "<p>oh... some were not labeled as such by mistake it seems</p>",
        "id": 160207787,
        "sender_full_name": "centril",
        "timestamp": 1551972769
    },
    {
        "content": "<p>i see, there are some that aren't tagged</p>",
        "id": 160207790,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972775
    },
    {
        "content": "<p>I'll look over that</p>",
        "id": 160207793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972779
    },
    {
        "content": "<p>/me is ready for the update</p>",
        "id": 160207799,
        "sender_full_name": "mw",
        "timestamp": 1551972783
    },
    {
        "content": "<blockquote>\n<p>I'll look over that</p>\n</blockquote>\n<p>(asynchronously. they should wait for next week for discussion at thispoint because I want to move along)</p>",
        "id": 160207818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972804
    },
    {
        "content": "<p>There's one that really needs to get in</p>",
        "id": 160207837,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1551972822
    },
    {
        "content": "<p>And the discussion would be short</p>",
        "id": 160207846,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1551972836
    },
    {
        "content": "<p>We're incorrectly accepting mismatched delims in imported modules without emitting errors</p>",
        "id": 160207905,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1551972864
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/58903\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58903\">https://github.com/rust-lang/rust/pull/58903</a></p>",
        "id": 160207933,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1551972903
    },
    {
        "content": "<p>I triaged them into teams; y'all have: <a href=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Apr+label%3Abeta-nominated+-label%3Abeta-accepted+label%3At-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Apr+label%3Abeta-nominated+-label%3Abeta-accepted+label%3At-compiler\">https://github.com/rust-lang/rust/pulls?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Apr+label%3Abeta-nominated+-label%3Abeta-accepted+label%3At-compiler</a></p>",
        "id": 160207936,
        "sender_full_name": "centril",
        "timestamp": 1551972903
    },
    {
        "content": "<p>it hasn't landed in nightly, why does it have to be discussed <strong>now</strong> ??</p>",
        "id": 160207975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551972940
    },
    {
        "content": "<p>it doesn't; we have plenty of time until promotion</p>",
        "id": 160208101,
        "sender_full_name": "centril",
        "timestamp": 1551972996
    },
    {
        "content": "<p>Ok</p>",
        "id": 160208106,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1551973002
    },
    {
        "content": "<p>okay thanks</p>",
        "id": 160208109,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> take it away</p>",
        "id": 160208113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973011
    },
    {
        "content": "<p>alright</p>",
        "id": 160208119,
        "sender_full_name": "mw",
        "timestamp": 1551973019
    },
    {
        "content": "<p>So, we are working on a \"minimum viable product\" for self-profiling.</p>",
        "id": 160208134,
        "sender_full_name": "mw",
        "timestamp": 1551973027
    },
    {
        "content": "<p>The goal for this first milestone is to do profiling for each perf.rlo run and publish per-query performance numbers on a separate comparison page.</p>",
        "id": 160208139,
        "sender_full_name": "mw",
        "timestamp": 1551973036
    },
    {
        "content": "<p>You'll be able to get to this detailed comparison page by clicking on a particular benchmark in the current, regular comparison page.</p>",
        "id": 160208150,
        "sender_full_name": "mw",
        "timestamp": 1551973048
    },
    {
        "content": "<p>This page will show for each query (and things like LLVM optimizations) how much time was spent there and if there are any changes. This should make it a lot simpler to pin-point the source of a given performance regressions.</p>",
        "id": 160208174,
        "sender_full_name": "mw",
        "timestamp": 1551973063
    },
    {
        "content": "<p>There's quite a bit of work to do for that. We have a tracking issue here: <a href=\"https://github.com/rust-lang/rust/issues/58967\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58967\">https://github.com/rust-lang/rust/issues/58967</a></p>",
        "id": 160208181,
        "sender_full_name": "mw",
        "timestamp": 1551973082
    },
    {
        "content": "<p>The big items are:</p>",
        "id": 160208226,
        "sender_full_name": "mw",
        "timestamp": 1551973090
    },
    {
        "content": "<p>will it be for just that build of rustc?</p>",
        "id": 160208229,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973091
    },
    {
        "content": "<p>or will it be historical data for that query ?</p>",
        "id": 160208236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973097
    },
    {
        "content": "<p>what do you mean by historical?</p>",
        "id": 160208247,
        "sender_full_name": "mw",
        "timestamp": 1551973115
    },
    {
        "content": "<p>i.e. runs from previous nightlies</p>",
        "id": 160208270,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973136
    },
    {
        "content": "<p>you usually would compare two builds, like the compare view does now</p>",
        "id": 160208287,
        "sender_full_name": "mw",
        "timestamp": 1551973152
    },
    {
        "content": "<p>okay thanks</p>",
        "id": 160208291,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973158
    },
    {
        "content": "<p>i.e. you can pick any two builds</p>",
        "id": 160208296,
        "sender_full_name": "mw",
        "timestamp": 1551973162
    },
    {
        "content": "<p>where self-profiling was already enabled of course</p>",
        "id": 160208305,
        "sender_full_name": "mw",
        "timestamp": 1551973171
    },
    {
        "content": "<p>The big TODOs are:</p>\n<ul>\n<li>reduce overhead of profiling data collection in the compiler</li>\n</ul>",
        "id": 160208324,
        "sender_full_name": "mw",
        "timestamp": 1551973184
    },
    {
        "content": "<ul>\n<li>write a tool that processes raw profiling data into useful reports</li>\n</ul>",
        "id": 160208331,
        "sender_full_name": "mw",
        "timestamp": 1551973191
    },
    {
        "content": "<ul>\n<li>make perf.rlo do self-profiling</li>\n</ul>",
        "id": 160208349,
        "sender_full_name": "mw",
        "timestamp": 1551973195
    },
    {
        "content": "<ul>\n<li>implement the new comparison views for perf.rlo</li>\n</ul>",
        "id": 160208354,
        "sender_full_name": "mw",
        "timestamp": 1551973201
    },
    {
        "content": "<blockquote>\n<ul>\n<li>reduce overhead of profiling data collection in the compiler</li>\n</ul>\n</blockquote>\n<p>what is overhead now and do we have specific plans there?</p>",
        "id": 160208429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973227
    },
    {
        "content": "<p>Those will be split up between <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> , <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> , and me, mostly</p>",
        "id": 160208431,
        "sender_full_name": "mw",
        "timestamp": 1551973229
    },
    {
        "content": "<p>the overhead is big (30-50% slowdown)</p>",
        "id": 160208441,
        "sender_full_name": "mw",
        "timestamp": 1551973246
    },
    {
        "content": "<p>and mostly caused by serializing things to JSON</p>",
        "id": 160208461,
        "sender_full_name": "mw",
        "timestamp": 1551973257
    },
    {
        "content": "<p>the overhead of the actual tracking seems to be closer to 5%</p>",
        "id": 160208479,
        "sender_full_name": "mw",
        "timestamp": 1551973271
    },
    {
        "content": "<p>we have plans, let me dig up the issue...</p>",
        "id": 160208495,
        "sender_full_name": "mw",
        "timestamp": 1551973284
    },
    {
        "content": "<p>Another question: in the interim, can we use the self-profiling stuff on our own runs?</p>",
        "id": 160208504,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973291
    },
    {
        "content": "<p>(And do we have instructions for how to do so?)</p>",
        "id": 160208508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973297
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/58372\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58372\">https://github.com/rust-lang/rust/issues/58372</a></p>",
        "id": 160208518,
        "sender_full_name": "mw",
        "timestamp": 1551973302
    },
    {
        "content": "<p>It can't be used yet</p>",
        "id": 160208546,
        "sender_full_name": "mw",
        "timestamp": 1551973321
    },
    {
        "content": "<p>we need that postprocessing tool first</p>",
        "id": 160208607,
        "sender_full_name": "mw",
        "timestamp": 1551973344
    },
    {
        "content": "<p>ah, ok</p>",
        "id": 160208617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973357
    },
    {
        "content": "<p>i.e. much of the overhead currently is caused by doing event analysis <em>in</em> the compiler</p>",
        "id": 160208635,
        "sender_full_name": "mw",
        "timestamp": 1551973376
    },
    {
        "content": "<p>but my plan is to have a \"wrapper\" program that invokes rustc and then automatically does the post processing</p>",
        "id": 160208683,
        "sender_full_name": "mw",
        "timestamp": 1551973411
    },
    {
        "content": "<p>The notes from our most recent meeting contain some more information, in case anyone is interested: <a href=\"https://github.com/rust-lang/compiler-team/blob/master/working-groups/self-profile/NOTES.md#2019-03-05-meeting\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/master/working-groups/self-profile/NOTES.md#2019-03-05-meeting\">https://github.com/rust-lang/compiler-team/blob/master/working-groups/self-profile/NOTES.md#2019-03-05-meeting</a></p>",
        "id": 160208742,
        "sender_full_name": "mw",
        "timestamp": 1551973443
    },
    {
        "content": "<p>ok, so it sort of <em>could</em> be used, but there is overhead etc</p>",
        "id": 160208748,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973448
    },
    {
        "content": "<p>Would the current plans mean that we <strong>can</strong> use it on our own runs, even before the perf stuff is up and going?</p>",
        "id": 160208764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973472
    },
    {
        "content": "<p>well, I think currently we are in a state where it can't be used</p>",
        "id": 160208766,
        "sender_full_name": "mw",
        "timestamp": 1551973474
    },
    {
        "content": "<p>because we removed the analysis from the compiler</p>",
        "id": 160208779,
        "sender_full_name": "mw",
        "timestamp": 1551973493
    },
    {
        "content": "<p>Ah ok :)</p>",
        "id": 160208783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973498
    },
    {
        "content": "<p>I am basically thinking about how, given the problems we've had with backtraces on perf etc, it's kind of hard to figure out how to profile the compiler</p>",
        "id": 160208797,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973503
    },
    {
        "content": "<p>yeah</p>",
        "id": 160208810,
        "sender_full_name": "mw",
        "timestamp": 1551973515
    },
    {
        "content": "<p>we could adjust our MVP to not include perf.rlo</p>",
        "id": 160208829,
        "sender_full_name": "mw",
        "timestamp": 1551973543
    },
    {
        "content": "<p>I am all ready <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 160208833,
        "sender_full_name": "blitzerr",
        "timestamp": 1551973547
    },
    {
        "content": "<p>otoh, perf.rlo support would provide the best usability</p>",
        "id": 160208897,
        "sender_full_name": "mw",
        "timestamp": 1551973569
    },
    {
        "content": "<p>there's one thing I'd like to discuss</p>",
        "id": 160208929,
        "sender_full_name": "mw",
        "timestamp": 1551973607
    },
    {
        "content": "<p>we'll create a kind of support crate for handling the profiling data</p>",
        "id": 160208936,
        "sender_full_name": "mw",
        "timestamp": 1551973622
    },
    {
        "content": "<p>we need buy-in from the rest of the team for creating the GH project</p>",
        "id": 160208955,
        "sender_full_name": "mw",
        "timestamp": 1551973640
    },
    {
        "content": "<p>within rust-lang</p>",
        "id": 160208962,
        "sender_full_name": "mw",
        "timestamp": 1551973645
    },
    {
        "content": "<p>we seem to have settled on the name \"measureme\" :)</p>",
        "id": 160208976,
        "sender_full_name": "mw",
        "timestamp": 1551973658
    },
    {
        "content": "<p>this ties into recent WG-meta discussion, right?</p>",
        "id": 160208980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973662
    },
    {
        "content": "<p>I think we talked before about opening an issue with an FCP?</p>",
        "id": 160208982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973666
    },
    {
        "content": "<p>(I'm <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> on it, in any case)</p>",
        "id": 160208993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973673
    },
    {
        "content": "<p>We could also just do a \"rfcbot poll\" to avoid the actual FCP</p>",
        "id": 160209048,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973685
    },
    {
        "content": "<p>which seems a bit like overkill</p>",
        "id": 160209056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973688
    },
    {
        "content": "<p>yes, we kinda need the policy to settle down</p>",
        "id": 160209064,
        "sender_full_name": "mw",
        "timestamp": 1551973694
    },
    {
        "content": "<p>only problem with that name, and perhaps its deliberate, is that it is a prefix of \"measurement\"</p>",
        "id": 160209065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973695
    },
    {
        "content": "<p>it should be read as \"measure me\"</p>",
        "id": 160209089,
        "sender_full_name": "mw",
        "timestamp": 1551973732
    },
    {
        "content": "<p>I know</p>",
        "id": 160209092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973735
    },
    {
        "content": "<p>I guess this is a somewhat relevant time to remind everyone that there's a crates policy draft at <a href=\"https://github.com/rust-lang/compiler-team/issues/19\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/19\">compiler-team#19</a> that I'd love some feedback on. But now, back to your regularly scheduled triage meeting...</p>",
        "id": 160209112,
        "sender_full_name": "davidtwco",
        "timestamp": 1551973751
    },
    {
        "content": "<p>so yes, it's a prefix :)</p>",
        "id": 160209117,
        "sender_full_name": "mw",
        "timestamp": 1551973755
    },
    {
        "content": "<p>ok, I don't want to hold things up here</p>",
        "id": 160209131,
        "sender_full_name": "mw",
        "timestamp": 1551973780
    },
    {
        "content": "<p>lets open that issue</p>",
        "id": 160209143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973797
    },
    {
        "content": "<p>and by \"lets\"</p>",
        "id": 160209146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973800
    },
    {
        "content": "<p>I guess we wait for the policy to be finished and do whatever it proposes</p>",
        "id": 160209147,
        "sender_full_name": "mw",
        "timestamp": 1551973801
    },
    {
        "content": "<p>I mean \"you do it\"</p>",
        "id": 160209192,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973804
    },
    {
        "content": "<p>or I guess we could wait for that policy to be established, yes</p>",
        "id": 160209208,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973813
    },
    {
        "content": "<p>where would I open the issue</p>",
        "id": 160209222,
        "sender_full_name": "mw",
        "timestamp": 1551973827
    },
    {
        "content": "<p>rust-lang/rust? compiler-team?</p>",
        "id": 160209231,
        "sender_full_name": "mw",
        "timestamp": 1551973836
    },
    {
        "content": "<p>its a good Q</p>",
        "id": 160209254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973863
    },
    {
        "content": "<p>anyway, that's why I want to wait for the policy :)</p>",
        "id": 160209263,
        "sender_full_name": "mw",
        "timestamp": 1551973866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I thnk rust-lang/rust for now, but I think we should alter our triage searches to include compiler-team :)</p>",
        "id": 160209281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973883
    },
    {
        "content": "<p>well, perhaps to include all of rust-lang</p>",
        "id": 160209286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973889
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 160209314,
        "sender_full_name": "mw",
        "timestamp": 1551973903
    },
    {
        "content": "<p>the policy doc that <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> linked doesn't attempt to cover the procedure here, from what I can tell in a quick skim</p>",
        "id": 160209318,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973908
    },
    {
        "content": "<p>It just mentions seeking consensus from the team currently. I can flesh that out.</p>",
        "id": 160209423,
        "sender_full_name": "davidtwco",
        "timestamp": 1551973955
    },
    {
        "content": "<p>(along those lines, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, we should probably start applying <code>T-compiler</code> and <code>I-nominated</code> and other common tags to issues on the compiler team crates)</p>",
        "id": 160209438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551973965
    },
    {
        "content": "<p>okay so that sounds good <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> ; and you aren't blocked on anything else at this point?</p>",
        "id": 160209448,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551973969
    },
    {
        "content": "<p>no, I don't think so</p>",
        "id": 160209492,
        "sender_full_name": "mw",
        "timestamp": 1551973998
    },
    {
        "content": "<p>lets maybe move along to <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> then, who maybe thought they were getting 15 minutes but in fact they get ... seven</p>",
        "id": 160209499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974007
    },
    {
        "content": "<p>I can manage with 7 I think <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 160209519,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974027
    },
    {
        "content": "<p>So a brief description</p>",
        "id": 160209593,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974058
    },
    {
        "content": "<p>Short Problem statement</p>\n<p>Today closures don’t accept the code snippet below because a closure captures the entire composite type <code>foo</code> rather than just <code>foo.b</code>.</p>\n<div class=\"codehilite\"><pre><span></span>    let a = &amp;mut foo.a;\n    || &amp;mut foo.b; // Error! cannot borrow `foo`\n    somefunc(a);\n</pre></div>",
        "id": 160209609,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974070
    },
    {
        "content": "<p>The goal is to have that code snippet accepted</p>",
        "id": 160209634,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974096
    },
    {
        "content": "<p>(c.f. <a href=\"https://rust-lang.github.io/rfcs/2229-capture-disjoint-fields.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rfcs/2229-capture-disjoint-fields.html\">RFC #2229</a>)</p>",
        "id": 160209663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974124
    },
    {
        "content": "<ul>\n<li>Step 1 change the type check to actually generate a tuple</li>\n<li>step 2 : Change the assumption that the closure capture is no longer one freevar for one upvar</li>\n<li>step 3 In the type checker, analyze the paths that get used and create more refined borrows</li>\n<li>step 4  Try to optimize the representation of closures to separate logical from actual borrows</li>\n</ul>",
        "id": 160209682,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974147
    },
    {
        "content": "<p>Actually people can read ahead of my typing and peep into the <a href=\"https://paper.dropbox.com/doc/Compiler-meeting-presentation--AY3V~cUKNYG8yCugbwzPGJbjAg-6Qg5h4OEBAUwWwgpCYRij\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Compiler-meeting-presentation--AY3V~cUKNYG8yCugbwzPGJbjAg-6Qg5h4OEBAUwWwgpCYRij\">doc</a> I prepared for the meeting</p>",
        "id": 160209777,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974200
    },
    {
        "content": "<p>So now where we are</p>",
        "id": 160209793,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974217
    },
    {
        "content": "<p>Step 1 is implemented but some tests are failing.</p>",
        "id": 160209817,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974234
    },
    {
        "content": "<p>I am working on it. Had a meeting with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 160209836,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974256
    },
    {
        "content": "<p>I would maybe a give a slightly higher-level view -- basically, we broke it down into steps. Most of the steps involve refactoring the bits of the compiler that assume that each upvar in a closure corresponds to one captured value (notably step 1 and 2)</p>",
        "id": 160209842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974262
    },
    {
        "content": "<p>Sure</p>",
        "id": 160209853,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974270
    },
    {
        "content": "<p>(and current status is that we're in the midst of doing those refactorings, as <span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> was already working on this for some time)</p>",
        "id": 160209921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974298
    },
    {
        "content": "<p>the step 4</p>",
        "id": 160209929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974304
    },
    {
        "content": "<p>\"logical vs actual borrows\"</p>",
        "id": 160209934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974311
    },
    {
        "content": "<p>I take it \"actual borrows\" means, like, pointers in the generated code?</p>",
        "id": 160209945,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974321
    },
    {
        "content": "<p>/me tends to think of borrows as being a logical/abstract semantic notion anyway. Though maybe MIRI disagrees with that point-of-view.</p>",
        "id": 160209992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974352
    },
    {
        "content": "<p>Yeah, so one of the open areas that we've presently opted to defer, is that if you have a closure like </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">bar</span><span class=\"p\">)</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>you might want the compiler to know that the closure uses only <code>x.foo</code> and <code>x.bar</code> (and not <code>x.baz</code>) but for the <strong>closure</strong> to actually just have one field at runtime, which is a pointer to <code>x</code>.</p>",
        "id": 160210030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974383
    },
    {
        "content": "<p>Those were some Optimization ideas that Niko had for post feature. <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  would you elaborate ?</p>",
        "id": 160210032,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974386
    },
    {
        "content": "<p>In our meeting, we dug some into the options on how to do this</p>",
        "id": 160210090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974404
    },
    {
        "content": "<p>right. in essence, we don't want to regress the actual size of the environments carried by closures at runtime as part of this</p>",
        "id": 160210121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974424
    },
    {
        "content": "<p>ideally no, but I think at first we will (but perhaps only with feature-gate enabled)</p>",
        "id": 160210147,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974440
    },
    {
        "content": "<p>That's the idea</p>",
        "id": 160210150,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974442
    },
    {
        "content": "<p>one interesting idea is that we could eventually solve this constraint in a nice way if we extend the borrow checker to have a way of expressing \"borrow but only giving permission for some sub-paths\"</p>",
        "id": 160210213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974470
    },
    {
        "content": "<p>ooh, interesting</p>",
        "id": 160210249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974495
    },
    {
        "content": "<p>i.e., taking a crack at <a href=\"http://smallcultfollowing.com/babysteps/blog/2018/11/01/after-nll-interprocedural-conflicts/\" target=\"_blank\" title=\"http://smallcultfollowing.com/babysteps/blog/2018/11/01/after-nll-interprocedural-conflicts/\">the interprocedural conflict</a> problem, but perhaps only internal to the compiler + closure desugaring</p>",
        "id": 160210257,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974498
    },
    {
        "content": "<p>yes that is a nice path for us to explore</p>",
        "id": 160210297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974520
    },
    {
        "content": "<p>which might be a good way to let us experiment with the \"foundations\" of said feature without having to debate how to expose it to users yet</p>",
        "id": 160210298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974521
    },
    {
        "content": "<p>okay well I'm thrilled to see progress here</p>",
        "id": 160210365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974545
    },
    {
        "content": "<p>but we're also at an hour</p>",
        "id": 160210375,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974557
    },
    {
        "content": "<p>one thing we found in the meeting is that some of the obvious \"hacks\" we might do to solve this problem without a proper fix don't really work (notably, optimizing the MIR after the fact)</p>",
        "id": 160210380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"128294\">@blitzerr</span> is there anything you need assistance with?</p>",
        "id": 160210383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974563
    },
    {
        "content": "<p>Not at the moment</p>",
        "id": 160210390,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974574
    },
    {
        "content": "<p>this might be a little off-topic, but this WG seems focused on a much smaller surface area than most of the other WGs — is there a reason this RFC benefits from the WG structure more than others?</p>",
        "id": 160210392,
        "sender_full_name": "varkor",
        "timestamp": 1551974575
    },
    {
        "content": "<p>My sense is that most RFCs should have a working group:)</p>",
        "id": 160210443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974610
    },
    {
        "content": "<p>I think just for tracking purposes. I am the only one in the wg <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span></p>",
        "id": 160210468,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974626
    },
    {
        "content": "<p>yeah I get impression that we are experimenting with development/procedural methodologies</p>",
        "id": 160210474,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974631
    },
    {
        "content": "<p>right, that makes sense</p>",
        "id": 160210527,
        "sender_full_name": "varkor",
        "timestamp": 1551974644
    },
    {
        "content": "<p>if it turns out that this is too much overhead, we will hopefully recognize that and learn from it</p>",
        "id": 160210535,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974652
    },
    {
        "content": "<blockquote>\n<p>Not at the moment</p>\n</blockquote>\n<p>okay great</p>",
        "id": 160210582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974684
    },
    {
        "content": "<p>(That said, I do think that this RFC involves more experimentation than some, at least around that final question of how to optimize the closure representation)</p>",
        "id": 160210615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551974707
    },
    {
        "content": "<p>with that, I have learned that i must rush off to fetch my <span aria-label=\"dog\" class=\"emoji emoji-1f415\" role=\"img\" title=\"dog\">:dog:</span> and walk them on route to pick up my toddler <span aria-label=\"children crossing\" class=\"emoji emoji-1f6b8\" role=\"img\" title=\"children crossing\">:children_crossing:</span></p>",
        "id": 160210656,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974738
    },
    {
        "content": "<p>bye all</p>",
        "id": 160210663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1551974744
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 160210736,
        "sender_full_name": "blitzerr",
        "timestamp": 1551974765
    }
]