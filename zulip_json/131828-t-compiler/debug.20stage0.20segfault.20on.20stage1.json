[
    {
        "content": "<p>Can someone help with <a href=\"https://github.com/rust-lang/rustc-guide/issues/443\" target=\"_blank\" title=\"https://github.com/rust-lang/rustc-guide/issues/443\">https://github.com/rust-lang/rustc-guide/issues/443</a> ?</p>",
        "id": 175979111,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568792574
    },
    {
        "content": "<p>A user is trying to debug a segfault in the stage0 compiler while building stage1</p>",
        "id": 175979132,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568792593
    },
    {
        "content": "<p>just doing <code>gdb --args ...</code> with the rustc command that fails doesn't work, because environment variables that x.py sets are apparently missing</p>",
        "id": 175979155,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568792621
    },
    {
        "content": "<p>How does one debug this ?</p>",
        "id": 175979171,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568792636
    },
    {
        "content": "<p>ideally we'd add a <code>--gdb</code> command to <code>x.py</code> that reruns the last crashed command with gdb</p>",
        "id": 175979881,
        "sender_full_name": "oli",
        "timestamp": 1568793204
    },
    {
        "content": "<p>until then, I think it would suffice to dump the env vars, too</p>",
        "id": 175979887,
        "sender_full_name": "oli",
        "timestamp": 1568793217
    },
    {
        "content": "<p>maybe into a log file ?</p>",
        "id": 175979954,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793270
    },
    {
        "content": "<p>the envar dump can be huge</p>",
        "id": 175979960,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793279
    },
    {
        "content": "<p>we could then provide a command that uses a sub-shell to load the env vars from the log file, and then executes the command</p>",
        "id": 175979979,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793314
    },
    {
        "content": "<p>I just mean the necessary ones</p>",
        "id": 175980120,
        "sender_full_name": "oli",
        "timestamp": 1568793440
    },
    {
        "content": "<p>we know the rustc env vars needed</p>",
        "id": 175980132,
        "sender_full_name": "oli",
        "timestamp": 1568793449
    },
    {
        "content": "<p>Do we always know?</p>",
        "id": 175980134,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793455
    },
    {
        "content": "<p>ah ok</p>",
        "id": 175980136,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793456
    },
    {
        "content": "<p>otherwise we could only access env vars via a wrapper that caches all the ones accessed</p>",
        "id": 175980195,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793490
    },
    {
        "content": "<p>and dump those</p>",
        "id": 175980199,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793495
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> or is it there a list somewhere ?</p>",
        "id": 175980240,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793566
    },
    {
        "content": "<p>It's just the three or four mentioned on the issue. I've added them manually many times</p>",
        "id": 175980259,
        "sender_full_name": "oli",
        "timestamp": 1568793597
    },
    {
        "content": "<p>basically one can test it out once to figure out the missing ones and then have the command printer print the env vars, too</p>",
        "id": 175980332,
        "sender_full_name": "oli",
        "timestamp": 1568793618
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/43a5ff4222e1f217ac14331afd59f82ec4204d12/src/bootstrap/bin/rustc.rs#L64\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/43a5ff4222e1f217ac14331afd59f82ec4204d12/src/bootstrap/bin/rustc.rs#L64\">https://github.com/rust-lang/rust/blob/43a5ff4222e1f217ac14331afd59f82ec4204d12/src/bootstrap/bin/rustc.rs#L64</a></p>",
        "id": 175980512,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793781
    },
    {
        "content": "<p>So I think we could there cache all the variables accessed</p>",
        "id": 175980533,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568793807
    },
    {
        "content": "<p>I've opened a PR for dumping the env-vars: <a href=\"https://github.com/rust-lang/rust/issues/64574\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64574\">#64574</a></p>",
        "id": 175982524,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568795545
    },
    {
        "content": "<blockquote>\n<p>basically one can test it out once to figure out the missing ones and then have the command printer print the env vars, too</p>\n</blockquote>\n<p>In my experience, you need to run it several times to learn <em>all</em> the missing ones, because it fails-fast on the first one that is missing. I am surprised <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> does not find this to be a big annoyance.</p>",
        "id": 175984671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568797235
    },
    {
        "content": "<p>I don't do this often enough to have been annoyed by it enough</p>",
        "id": 175984728,
        "sender_full_name": "oli",
        "timestamp": 1568797279
    },
    {
        "content": "<p>I'm not really annoyed by it, but the user that is cannot fix it, and I want them to do something for me :D</p>",
        "id": 175985126,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568797610
    },
    {
        "content": "<p>by the way I think in the past, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> has advised using <code>x.py --on-fail</code> as a way to deal with this (in terms of attempting to observe the state of the system at the time of failure.</p>",
        "id": 175986782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> so that place isn't enough to dump the env vars</p>",
        "id": 175986800,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799100
    },
    {
        "content": "<p>/me looks for context</p>",
        "id": 175986805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799105
    },
    {
        "content": "<p>i was trying to see if i could add a test</p>",
        "id": 175986810,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799109
    },
    {
        "content": "<p>ah yes, context is <a href=\"https://github.com/rust-lang/rust/issues/38686\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/38686\">#38686</a></p>",
        "id": 175986917,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799169
    },
    {
        "content": "<p>So I decided to make typeck abort, and see if I could see the env vars: </p>\n<div class=\"codehilite\"><pre><span></span>aused by:\n  process didn&#39;t exit successfully: `/rust/build/bootstrap/debug/rustc --edition=2018 --crate-name core src/libcore/lib.rs   ...` (signal: 6, SIGABRT: process abort signal)\ncommand did not execute successfully: &quot;rust/build/x86_64-apple-darwin/stage0/bin/cargo&quot; &quot;build&quot; ...&quot;\nexpected success, got: exit code: 101\nfailed to run: rust/build/bootstrap/debug/bootstrap test\nBuild completed unsuccessfully in 0:00:31\n</pre></div>",
        "id": 175986944,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799189
    },
    {
        "content": "<p>So apparently rustc is called by cargo here, and not by the bootstrap script</p>",
        "id": 175986971,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799218
    },
    {
        "content": "<p>When is it called by one or the other ?</p>",
        "id": 175987001,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799231
    },
    {
        "content": "<p>That error reporting comes from cargo, so I'm not sure how to fix this</p>",
        "id": 175987093,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799277
    },
    {
        "content": "<p>IIUC cargo would need to be able to query from rustc the environment variables that rustc reads</p>",
        "id": 175987111,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799292
    },
    {
        "content": "<p>Right now if the command cargo launches errors, cargo prints the command and the error code, but that's it</p>",
        "id": 175987146,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799308
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> for your particular scenario/user, would the <code>--on-fail</code> approach work? I don't know whether that is agnostic to whether it is a <code>cargo</code> failure or a <code>rustc</code> one, but I would have assumed it is</p>",
        "id": 175987195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799344
    },
    {
        "content": "<p>I'd have to look at what --on-fail does</p>",
        "id": 175987254,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799364
    },
    {
        "content": "<p>it is described in PR <a href=\"https://github.com/rust-lang/rust/issues/39888\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/39888\">#39888</a></p>",
        "id": 175987281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799381
    },
    {
        "content": "<p>it sounds like you can do <code>x.py --on-fail=bash</code>, and if a command fails, it will fire up an interactive shell</p>",
        "id": 175987306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799407
    },
    {
        "content": "<p>sure, but does it let you attach a debugger ?</p>",
        "id": 175987341,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799443
    },
    {
        "content": "<p>ah the interactive shell allows you to launch a debugger with the same command preserving the environment ?</p>",
        "id": 175987357,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799460
    },
    {
        "content": "<p>exactly.</p>",
        "id": 175987365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799465
    },
    {
        "content": "<p>Now, to be honest, I've never actually deployed this workflow <em>myself</em> ...</p>",
        "id": 175987425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799488
    },
    {
        "content": "<p>but that doesn't mean it won't work for you</p>",
        "id": 175987438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799506
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"http://www.patricialadd.com/wp-content/uploads/itmightwork.png\" target=\"_blank\" title=\"http://www.patricialadd.com/wp-content/uploads/itmightwork.png\"><img src=\"https://uploads.zulipusercontent.net/0949312892dcf92ca3f283ad89dc717464a0db6e/687474703a2f2f7777772e70617472696369616c6164642e636f6d2f77702d636f6e74656e742f75706c6f6164732f69746d69676874776f726b2e706e67\"></a></div>",
        "id": 175987481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799544
    },
    {
        "content": "<p>We should document that in some section about how to debug rustc</p>",
        "id": 175987526,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799595
    },
    {
        "content": "<p>indeed. <a href=\"https://github.com/rust-lang/rust/issues/40902\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/40902\">#40902</a> had noted this in a long laundry list</p>",
        "id": 175987653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799664
    },
    {
        "content": "<p>but then it was closed because it was \"not clear that it was usefully tracking anything anymore\"</p>",
        "id": 175987687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799689
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-guide/issues/443#issuecomment-532608428\" target=\"_blank\" title=\"https://github.com/rust-lang/rustc-guide/issues/443#issuecomment-532608428\">https://github.com/rust-lang/rustc-guide/issues/443#issuecomment-532608428</a></p>",
        "id": 175987860,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799804
    },
    {
        "content": "<p>The rustc guide doesn't have any section about how to debug a failure, so I think mentioning this would fit there.</p>",
        "id": 175987961,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568799851
    },
    {
        "content": "<p>Just filed rustc-guide#448</p>",
        "id": 175987986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799873
    },
    {
        "content": "<p>lets go add that as an issue linkifier</p>",
        "id": 175987994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799885
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-guide/issues/448\" target=\"_blank\" title=\"https://github.com/rust-lang/rustc-guide/issues/448\">rustc-guide#448</a></p>",
        "id": 175988053,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568799932
    },
    {
        "content": "<p>hmm anyway <code>--on-fail=bash</code> may not work, due to <a href=\"https://github.com/rust-lang/rust/issues/47645\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47645\">#47645</a></p>",
        "id": 175988284,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568800106
    },
    {
        "content": "<p>(and that in turn may be due to <code>cargo</code> playing games with stdin/stdout.)</p>",
        "id": 175988357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568800193
    },
    {
        "content": "<p>but <code>--on-fail=env</code> <em>should</em> work, even in the presence of <a href=\"https://github.com/rust-lang/rust/issues/47645\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47645\">#47645</a></p>",
        "id": 175988522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1568800342
    },
    {
        "content": "<p>thanks</p>",
        "id": 175989489,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568801283
    }
]