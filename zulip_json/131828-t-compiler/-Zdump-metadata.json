[
    {
        "content": "<p>I was working on -Zdump-metadata to allow us to dump metadata information for debugging purposes</p>",
        "id": 227785546,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267141
    },
    {
        "content": "<p>I have a couple of things that I'm not really set on and wanted to know your thoughts</p>",
        "id": 227785609,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267165
    },
    {
        "content": "<p>like should we offer <code>-Zdump-metadata=crate_name</code>?</p>",
        "id": 227785664,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267184
    },
    {
        "content": "<p>also maybe <code>-Zdump-metadata=all</code> or even <code>-Zdump-metadata=local</code>?</p>",
        "id": 227785752,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267206
    },
    {
        "content": "<p>How would =local be different from unpretty=hir?</p>",
        "id": 227785902,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614267257
    },
    {
        "content": "<p>also, what information do we want to dump? everything that is on <code>CrateMetadata</code> maybe?</p>",
        "id": 227785952,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267280
    },
    {
        "content": "<p>Hmm... I was initially thinking that the flag could just be <code>-Zdump-metadata</code> and if you don't want a dependency to get dumped, don't pass it to this rustc invocation (as all inputs must come from an argument, right?)</p>",
        "id": 227786093,
        "sender_full_name": "oli",
        "timestamp": 1614267344
    },
    {
        "content": "<p>I don't know if it answers your question, but my general workflow when working on that stuff is \"I know that I have data that looks like X, now where in the code can X be produced?\" Usually I'm starting from the end (a console output, an error message, etc), and trying to get back \"up\" the causal chain.</p>",
        "id": 227786124,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1614267357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227785902\">said</a>:</p>\n<blockquote>\n<p>How would =local be different from unpretty=hir?</p>\n</blockquote>\n<p>local will show the stuff that we are encoding and storing as metadata, whereas unpretty=hir shows more information than that</p>",
        "id": 227786207,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> that doesn't let you dump some dependencies but not others though</p>",
        "id": 227786215,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614267373
    },
    {
        "content": "<p>Since usually you need all dependencies even to build the crate</p>",
        "id": 227786297,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614267412
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227786215\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> that doesn't let you dump some dependencies but not others though</p>\n</blockquote>\n<p>I think the big question is whether dumping needs to build the crate at all</p>",
        "id": 227786335,
        "sender_full_name": "oli",
        "timestamp": 1614267425
    },
    {
        "content": "<p>like we don't actually need an input file, we \"just need a tcx\"</p>",
        "id": 227786410,
        "sender_full_name": "oli",
        "timestamp": 1614267450
    },
    {
        "content": "<p>and then iterate over all dependencies as specified on the command line, and dump their metadata</p>",
        "id": 227786439,
        "sender_full_name": "oli",
        "timestamp": 1614267465
    },
    {
        "content": "<p>oh I see, I was imagining it as a side effect but it might make more sense to have it <em>only</em> emit metadata</p>",
        "id": 227786442,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614267468
    },
    {
        "content": "<p>We already have the <code>-Zls</code> option, though it currently only lists external dependencies of the passed in rlib.</p>",
        "id": 227786453,
        "sender_full_name": "bjorn3",
        "timestamp": 1614267472
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ rustc -Zls $(rustc --print sysroot)/lib/rustlib/*/lib/libstd-*.so\n=External Dependencies=\n1 core-9ea09a899c3eda46\n2 compiler_builtins-ea377e9224b11a8a\n3 rustc_std_workspace_core-90996f4879673567\n4 alloc-aa547327a7679d28\n5 libc-3ccc4a4f3013e9ef\n6 unwind-32b57ee4d7c8dc07\n7 cfg_if-d9f2cb19c79e847e\n8 hashbrown-f2c707309e5edc5c\n9 rustc_std_workspace_alloc-6b6b4b2bc151fc5a\n10 rustc_demangle-22cd238a7814521c\n11 addr2line-f12d17a047776008\n12 gimli-3d968aa3120f6a27\n13 object-323dea4ee1c9a010\n14 miniz_oxide-fe971cf9622d0c47\n15 adler-9ff49e5df977573d\n16 panic_unwind-b69e89b2ef7e009e\n</code></pre></div>",
        "id": 227786551,
        "sender_full_name": "bjorn3",
        "timestamp": 1614267492
    },
    {
        "content": "<p>hmm... that would also be possible, not even dump multiple dependencies, but allow rustc to be invoked on a .rmeta file and dump it</p>",
        "id": 227786640,
        "sender_full_name": "oli",
        "timestamp": 1614267530
    },
    {
        "content": "<p>That does sound really nice</p>",
        "id": 227786768,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614267594
    },
    {
        "content": "<p>combined with <code>-Zls</code> you can then manually walk the dependency graph\\</p>",
        "id": 227786906,
        "sender_full_name": "oli",
        "timestamp": 1614267649
    },
    {
        "content": "<p>Have you all seen <a href=\"https://github.com/bjorn3/rust_read_rlib\">https://github.com/bjorn3/rust_read_rlib</a> yet? Doesn't work with the latest nightly (or any less than like a year old) though unfortunately.</p>",
        "id": 227787176,
        "sender_full_name": "bjorn3",
        "timestamp": 1614267751
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227786906\">said</a>:</p>\n<blockquote>\n<p>combined with <code>-Zls</code> you can then manually walk the dependency graph\\</p>\n</blockquote>\n<p>not sure if I understand the full workflow you're proposing</p>",
        "id": 227787298,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267810
    },
    {
        "content": "<p>I have not seen <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>'s tool yet at all, but that sounds pretty much like what I envisioned</p>",
        "id": 227787474,
        "sender_full_name": "oli",
        "timestamp": 1614267870
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227787298\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227786906\">said</a>:</p>\n<blockquote>\n<p>combined with <code>-Zls</code> you can then manually walk the dependency graph\\</p>\n</blockquote>\n<p>not sure if I understand the full workflow you're proposing</p>\n</blockquote>\n<p>I was thinking that you'd call essentially <code>rustc -Zdump-metadata some_meta_file.rlib</code> which gives you a dump similar to the <code>rust_read_lib</code>. Either the dependency information is dumped righ there, or <code>-Zls</code> dumps the depdencencies and you can go find them this way and dump them</p>",
        "id": 227787694,
        "sender_full_name": "oli",
        "timestamp": 1614267965
    },
    {
        "content": "<p>I was thinking about doing stuff like <code>./x.py test src/ui/something -Zdump-metadata=some_crate</code></p>",
        "id": 227787695,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267966
    },
    {
        "content": "<p>and have that dumping the info</p>",
        "id": 227787728,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614267977
    },
    {
        "content": "<p>I guess you're suggesting to save an rmeta file and run something like <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>'s tool outside the flow?</p>",
        "id": 227787785,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268001
    },
    {
        "content": "<p>well, that needs some additional x.py logic, but it would then just forward to whatever does the dump for one rlib file</p>",
        "id": 227787828,
        "sender_full_name": "oli",
        "timestamp": 1614268018
    },
    {
        "content": "<p>compiletest already knows about the rlib filename that gets generated so it can call additional logic on that file</p>",
        "id": 227787948,
        "sender_full_name": "oli",
        "timestamp": 1614268055
    },
    {
        "content": "<p>maybe the thing is that in my approach I wasn't even thinking about rlib/rmeta files because I was trying to hook even before storing the file</p>",
        "id": 227788097,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268093
    },
    {
        "content": "<p>yea, but that requires you to first build the entire current crate</p>",
        "id": 227788163,
        "sender_full_name": "oli",
        "timestamp": 1614268121
    },
    {
        "content": "<p>like I wanted to step when we have all the information to be dumped in <code>CrateMetadata</code> and use that struct to print it out</p>",
        "id": 227788201,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268133
    },
    {
        "content": "<p>when metadata dumping can be \"reading an existing metadata file and dumping it\"</p>",
        "id": 227788227,
        "sender_full_name": "oli",
        "timestamp": 1614268141
    },
    {
        "content": "<p>when you load a dependency, you also get that struct, and then you can start printing that out</p>",
        "id": 227788316,
        "sender_full_name": "oli",
        "timestamp": 1614268173
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227788227\">said</a>:</p>\n<blockquote>\n<p>when metadata dumping can be \"reading an existing metadata file and dumping it\"</p>\n</blockquote>\n<p>yeah I understand what you meant ... thinking what's more useful</p>",
        "id": 227788326,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268176
    },
    {
        "content": "<p>I was mainly thinking about dumping things I'm developing and not things that live on <a href=\"http://crates.io\">crates.io</a></p>",
        "id": 227788371,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268192
    },
    {
        "content": "<p>unix philosophy says my idea <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span> but that's not necesarily the best way</p>",
        "id": 227788465,
        "sender_full_name": "oli",
        "timestamp": 1614268212
    },
    {
        "content": "<p>:P</p>",
        "id": 227788498,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268221
    },
    {
        "content": "<p>well, I would hope that we'd have some cargo subcommand that just builds the crate and then uses the metadata dumper on the built crate</p>",
        "id": 227788544,
        "sender_full_name": "oli",
        "timestamp": 1614268237
    },
    {
        "content": "<p>this way you would get the best of both worlds</p>",
        "id": 227788585,
        "sender_full_name": "oli",
        "timestamp": 1614268254
    },
    {
        "content": "<p>A metadata dumper for rlibs could also be used to inspect for example the already built sysroot or it can inspect rlibs shipped by someone who didn't want to release the source code of their crate.</p>",
        "id": 227788731,
        "sender_full_name": "bjorn3",
        "timestamp": 1614268305
    },
    {
        "content": "<p>so ... if I have a test that lives on <code>test/ui</code> and there lives one main and another crate, how the workflow to dump the metadata of that crate would be in your solution?</p>",
        "id": 227788770,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227788731\">said</a>:</p>\n<blockquote>\n<p>A metadata dumper for rlibs could also be used to inspect for example the already built sysroot or it can inspect rlibs shipped by someone who didn't want to release the source code of their crate.</p>\n</blockquote>\n<p>yeah, this is for sure something cool in my opinion</p>",
        "id": 227788885,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268341
    },
    {
        "content": "<p>I just want to also make it easier for rustc usage, ideally one run dumps what I want or something like that</p>",
        "id": 227789040,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268395
    },
    {
        "content": "<p>I think using a metadata dumper for tests would require a way to embed the crate metadata in executables. This can also be useful for other things.</p>",
        "id": 227789060,
        "sender_full_name": "bjorn3",
        "timestamp": 1614268404
    },
    {
        "content": "<p>why would require that?</p>",
        "id": 227789199,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268455
    },
    {
        "content": "<p>talking about let's say <a href=\"http://testa.rs\">testa.rs</a> that depends on <a href=\"http://dependencyb.rs\">dependencyb.rs</a> (dependencyb is a crate) and <a href=\"http://testa.rs\">testa.rs</a> uses that crate</p>",
        "id": 227789254,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268483
    },
    {
        "content": "<p>I want to dump <a href=\"http://dependencyb.rs\">dependencyb.rs</a> metadata</p>",
        "id": 227789267,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268491
    },
    {
        "content": "<p>For dependencyb it would work already, but for testa there is no crate metadata currently encoded.</p>",
        "id": 227789364,
        "sender_full_name": "bjorn3",
        "timestamp": 1614268520
    },
    {
        "content": "<p>yeah</p>",
        "id": 227789398,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614268532
    },
    {
        "content": "<p>when I have some time I'll make this work as <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> has described</p>",
        "id": 227833653,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614285071
    },
    {
        "content": "<p>so, just in case we are all in the same ...</p>",
        "id": 227833668,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614285076
    },
    {
        "content": "<p>gonna make <code>rustc -Zdump-metadata file.rmeta</code> work</p>",
        "id": 227833694,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614285091
    },
    {
        "content": "<p>you would need to generate the file and then run that</p>",
        "id": 227833723,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614285110
    },
    {
        "content": "<p>as a second step we could make some fancier things like making compiletest do everything or stuff like that</p>",
        "id": 227833807,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614285129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> I guess I could try to re-use some code from your project or even try to revive it?</p>",
        "id": 227833862,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614285154
    },
    {
        "content": "<p>unsure what was your plan with it</p>",
        "id": 227833876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1614285159
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Feel free to re-use/revive it. I don't plan to revive it myself any time soon.</p>",
        "id": 227834942,
        "sender_full_name": "bjorn3",
        "timestamp": 1614285594
    },
    {
        "content": "<p>If I recall correctly some things of rustc_metadata that were used by rust_read_rlib were made private though.</p>",
        "id": 227835131,
        "sender_full_name": "bjorn3",
        "timestamp": 1614285665
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/-Zdump-metadata/near/227786093\">said</a>:</p>\n<blockquote>\n<p>Hmm... I was initially thinking that the flag could just be <code>-Zdump-metadata</code> and if you don't want a dependency to get dumped, don't pass it to this rustc invocation (as all inputs must come from an argument, right?)</p>\n</blockquote>\n<p>Some inputs come from the sysroot (like <code>std</code>) though, right?</p>",
        "id": 227862442,
        "sender_full_name": "Noah Lev",
        "timestamp": 1614298823
    }
]