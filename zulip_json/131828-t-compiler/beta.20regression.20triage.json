[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> pointed out that the Crater results for 1.36 are pretty bad (700 regressions on the check only+rustdoc run) with a link to <a href=\"https://github.com/rust-lang/rust/issues/61401#issuecomment-498089693\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61401#issuecomment-498089693\">this comment</a> on the run.</p>",
        "id": 167287394,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559651650
    },
    {
        "content": "<p>Here is a github query that covers <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+-label%3AT-libs+-label%3AT-rustdoc+-label%3AP-high+-label%3AP-medium+-label%3AP-low+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta+-label%3AT-libs+-label%3AT-rustdoc+-label%3AP-high+-label%3AP-medium+-label%3AP-low+\">unprioritized stable-to-beta regressions</a> that are not already tagged with T-libs nor T-rustdoc</p>",
        "id": 167287696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559651881
    },
    {
        "content": "<p>that yields 8 issues, lets walk through them.</p>",
        "id": 167287768,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559651905
    },
    {
        "content": "<p>(going to go <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+-label%3AT-libs+-label%3AT-rustdoc+-label%3AP-high+-label%3AP-medium+-label%3AP-low+sort%3Acreated-asc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+-label%3AT-libs+-label%3AT-rustdoc+-label%3AP-high+-label%3AP-medium+-label%3AP-low+sort%3Acreated-asc\">oldest first</a>)</p>",
        "id": 167287805,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559651927
    },
    {
        "content": "<p>first: \"ICE in NLL borrow_check/universal_regions when bounding a trait object with nothing\" <a href=\"https://github.com/rust-lang/rust/issues/61315\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61315\">#61315</a></p>",
        "id": 167287837,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559651946
    },
    {
        "content": "<p>looks like <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is on top of it. I'll make it P-high just so I don't have to think about it.</p>",
        "id": 167287871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559651971
    },
    {
        "content": "<p>next: \"regression: failed to parse proc-macro input\" <a href=\"https://github.com/rust-lang/rust/issues/61470\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61470\">#61470</a></p>",
        "id": 167288011,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559652043
    },
    {
        "content": "<p>petrochenkov has diagnosed this as expected <del>breakage</del> fallout from a bug fix.</p>",
        "id": 167288092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559652097
    },
    {
        "content": "<p>It seems like the best we can do here is try to update <code>agatan/squeeze-rs</code> ? Its not really a bug we'd do anything in the compiler to address.</p>",
        "id": 167288259,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559652189
    },
    {
        "content": "<p>(and <code>agatan/squeeze-rs</code> looks like it might be abandonware; last update was in Nov 2017...)</p>",
        "id": 167288676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559652467
    },
    {
        "content": "<p>closing <a href=\"https://github.com/rust-lang/rust/issues/61470\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61470\">#61470</a> as not-a-bug/wont-fix.</p>",
        "id": 167288850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559652553
    },
    {
        "content": "<p>next: \"regression: conflicting implementations of trait for Into&lt;Box&gt;\" <a href=\"https://github.com/rust-lang/rust/issues/61471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61471\">#61471</a></p>",
        "id": 167288910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559652594
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/61471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61471\">#61471</a> references two root crates that caused regressions downstream. However, the one that caused the most problems, the owner <a href=\"https://github.com/rust-lang/rust/issues/61471#issuecomment-498527555\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61471#issuecomment-498527555\">chimed in</a> saying they had deprecated the crate and linked to the relevant issue. So the question is: Is crater supposed to be blacklisting such cases? (Can it, when there are problems downstream...?)</p>",
        "id": 167289536,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559652937
    },
    {
        "content": "<p>Okay after much investigation, I decided only one crate is actually affected here (the rest are abandoned, I'm pretty sure). I filed an issue against the affected crate and closed <a href=\"https://github.com/rust-lang/rust/issues/61471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61471\">#61471</a>.</p>",
        "id": 167300563,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559659328
    },
    {
        "content": "<p>next: \"regression: overflow evaluating, Send/Sync?\" <a href=\"https://github.com/rust-lang/rust/issues/61472\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61472\">#61472</a></p>",
        "id": 167369553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559724865
    },
    {
        "content": "<p>(presumably due to PR <a href=\"https://github.com/rust-lang/rust/issues/60444\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60444\">#60444</a>; the running hypothesis that niko and I share is that most instances of this are cases where the input code was unsound, and thus the fallout is expected. I don't think we can readily warning-cycle this change.)</p>",
        "id": 167369602,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559724936
    },
    {
        "content": "<p>I do however want to double check <a href=\"https://github.com/rust-lang/rust/issues/61472#issuecomment-498651387\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61472#issuecomment-498651387\">the note made by <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span></a>. I assume the discrepancy between behavior observed using  <code>rustc</code> vs <code>rustdoc</code>is due to some additional code paths being exercised by doc examples.</p>",
        "id": 167369816,
        "sender_full_name": "pnkfelix",
        "timestamp": 1559725123
    }
]