[
    {
        "content": "<p>The following commit seems to have broken bootstrap on 1.59 by using <code>.insn</code> while 1.58.1 does not implement <code>.insn</code>, though 1.59 does (this part I'm fuzzy on). Is there coverage/tests for bootstrapping on riscv?<br>\n<a href=\"https://github.com/rust-lang/stdarch/commit/2adc17a5442614dbe34626fdd9b32de7c07b8086\">https://github.com/rust-lang/stdarch/commit/2adc17a5442614dbe34626fdd9b32de7c07b8086</a></p>",
        "id": 277822993,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649128683
    },
    {
        "content": "<p>There are tests that it builds, but not that it runs.<br>\n<a href=\"https://doc.rust-lang.org/nightly/rustc/platform-support.html\">https://doc.rust-lang.org/nightly/rustc/platform-support.html</a></p>",
        "id": 277823034,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649128796
    },
    {
        "content": "<p>On riscv natively or cross?</p>",
        "id": 277823090,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649128833
    },
    {
        "content": "<p>I'm not sure whether it fails on cross compile.</p>",
        "id": 277823097,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649128846
    },
    {
        "content": "<p>Cross, pretty sure only tier 1 targets are built natively.</p>",
        "id": 277823136,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649128906
    },
    {
        "content": "<p>I guess cross builds can't be bootstrap builds by definition and therefore, only the last stage is built for the target arch?</p>",
        "id": 277823417,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649129228
    },
    {
        "content": "<p>Correct.</p>",
        "id": 277823423,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129238
    },
    {
        "content": "<p>So, is this bug worth filing? It will be fixed in 1.60 by virtue of it using 1.59, which works (I tested it).</p>",
        "id": 277823526,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649129367
    },
    {
        "content": "<p>Probably not. It's very unlikely the fix will be backported to stable this late in the release cycle, and even if we wanted to support riscv as a tier 1 target I don't think GitHub has native runners for it.</p>",
        "id": 277823616,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129440
    },
    {
        "content": "<p>FWIW 1.60 will be stable this Thursday :)</p>",
        "id": 277823647,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129498
    },
    {
        "content": "<p>Well, I suppose I could try to bootstrap it and see if it works natively. I've been building using gentoo (great way to test compiles for everything on riscv), so I haven't dealt with the rust build directly in a while.</p>",
        "id": 277823734,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649129638
    },
    {
        "content": "<p>happy to help debug any build issues you run into :)</p>",
        "id": 277823795,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129684
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/tree/beta\">https://github.com/rust-lang/rust/tree/beta</a> That's the right branch that I should test if I want to report beta bugs?</p>",
        "id": 277823872,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649129777
    },
    {
        "content": "<p>And <a href=\"https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html\">https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html</a> instructions should work just fine for that branch?</p>",
        "id": 277823878,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649129805
    },
    {
        "content": "<p>Yes, there's not been many changes to bootstrap in the last 6 weeks.</p>",
        "id": 277823902,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129855
    },
    {
        "content": "<p>not sure how gentoo distributes rustc (do they distribute the tarball or do you just build from git sources?)</p>",
        "id": 277823910,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129881
    },
    {
        "content": "<p>Ok, I'll try building it, I hope it finishes before Thursday (the unmatched isn't particularly fast. :P)</p>",
        "id": 277823952,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649129898
    },
    {
        "content": "<p>fwiw if you just want to test it compiles natively, you can run <code>x.py check</code> which should be much faster. even on relatively slow machines it shouldn't take more than a couple hours (I have a summary of hardware I use for building rustc at <a href=\"https://gist.github.com/jyn514/5476c7b6122a3cb18825e1b883c18a33\">https://gist.github.com/jyn514/5476c7b6122a3cb18825e1b883c18a33</a>)</p>",
        "id": 277823975,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129963
    },
    {
        "content": "<p>that said if you want to compile this on a Pentium it will probably take days lol</p>",
        "id": 277823989,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649129993
    },
    {
        "content": "<p>Gentoo downloads from <a href=\"https://static.rust-lang.org/dist/\">https://static.rust-lang.org/dist/</a></p>",
        "id": 277824045,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649130022
    },
    {
        "content": "<p>I noticed gentoo should support compiling beta fairly easily, so I'll likely try that first and see.</p>",
        "id": 277824224,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649130221
    },
    {
        "content": "<p><code>Build completed successfully in 9:50:57</code> (It was a stage 2 build, at least.)</p>",
        "id": 278061103,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649267408
    },
    {
        "content": "<p>On commit <code>0f231250ba7fe3a3f98a18aee9abfd65b104fb92</code></p>",
        "id": 278061244,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649267485
    },
    {
        "content": "<p>Somewhat related question, I noticed that <code>riscv64gc-unknown-linux-musl</code> is only tier 3, which doesn't have official builds and therefore, can't bootstrap at all. If I cross compile (using config.toml, I assume), would I then be able to bootstrap from release to release after that (or at least, try to)?</p>",
        "id": 278095917,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649284928
    },
    {
        "content": "<p>It should be possible. At least on tier 1 platforms we always bootstrap rustc using the previous version.</p>",
        "id": 278097550,
        "sender_full_name": "bjorn3",
        "timestamp": 1649286052
    },
    {
        "content": "<p>Oh, while I'm at it, is there a way to have <code>riscv64-gentoo-linux-musl</code> be an alias for <code>riscv64gc-unknown-linux-musl</code>?</p>",
        "id": 278122099,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649312929
    },
    {
        "content": "<p>No, we don't support aliases.</p>",
        "id": 278122695,
        "sender_full_name": "bjorn3",
        "timestamp": 1649313509
    },
    {
        "content": "<p>What have you changed between the two by the way? Just crt_static being disabled by default? For that there is an open MCP to switch the musl targets to dynamic linking by default.</p>",
        "id": 278122721,
        "sender_full_name": "bjorn3",
        "timestamp": 1649313566
    },
    {
        "content": "<p>I'm not entirely sure what it changes, it's just what gentoo uses as the target and so various rust projects fail to compile due to passing a target that rust doesn't know about.</p>",
        "id": 278127342,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649317254
    },
    {
        "content": "<p>And technically, users can override crt_static if they want. And this is similar for x86_64, and the other musl targets for gentoo, I assume.</p>",
        "id": 278127491,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649317360
    },
    {
        "content": "<p>The only change is disabling crt-static by default: <a href=\"https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-lang/rust/files/1.49.0-gentoo-musl-target-specs.patch?id=26de1e52b1122ef6cbd081048d75757ce8736d01\">https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-lang/rust/files/1.49.0-gentoo-musl-target-specs.patch?id=26de1e52b1122ef6cbd081048d75757ce8736d01</a></p>",
        "id": 278131863,
        "sender_full_name": "bjorn3",
        "timestamp": 1649320131
    },
    {
        "content": "<p>Interesting, thanks for pointing that out.</p>",
        "id": 278145905,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649329031
    },
    {
        "content": "<p>It seems that <code>x86_64-unknown-linux-musl</code> depends on <code>libgcc_s.so</code> but I'm unsure why that is. Which <code>config.toml</code> is used to build that target?</p>",
        "id": 278263819,
        "sender_full_name": "Ahmed Charles",
        "timestamp": 1649401260
    }
]