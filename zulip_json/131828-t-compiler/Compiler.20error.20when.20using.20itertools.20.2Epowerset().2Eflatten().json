[
    {
        "content": "<p>With the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">itertools</span>::<span class=\"n\">Itertools</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">powerset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">powerset</span><span class=\"p\">().</span><span class=\"n\">flatten</span><span class=\"p\">().</span><span class=\"n\">collect_vec</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">powerset</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>where <code>Cargo.toml</code> looks like following:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"another\"</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">authors</span> <span class=\"o\">=</span> <span class=\"k\">[\"Knarkzel &lt;knarkzel@gmail.com&gt;\"]</span>\n<span class=\"n\">edition</span> <span class=\"o\">=</span> <span class=\"s\">\"2018\"</span>\n\n<span class=\"k\">[dependencies]</span>\n<span class=\"n\">itertools</span> <span class=\"o\">=</span> <span class=\"s\">\"0.10.0\"</span>\n</code></pre></div>\n<p>On <code>rustc 1.53.0-nightly (f82664191 2021-03-21) running on x86_64-unknown-linux-gnu</code> I get the following internal compiler error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>   Compiling another v0.1.0 <span class=\"o\">(</span>/home/odd/source/rust/another<span class=\"o\">)</span>\nthread <span class=\"s1\">'rustc'</span> panicked at <span class=\"s1\">'found unstable fingerprints for evaluate_obligation(9ae8f7968c2251b-5920aadb538740cc): Ok(EvaluatedToOk)'</span>, /rustc\n/f82664191d0e8764b7435b9d72eb0e366b8b1464/compiler/rustc_query_system/src/query/plumbing.rs:593:5\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels<span class=\"o\">=</span>C-bug%2C+I-ICE%2C+T-compiler<span class=\"p\">&amp;</span><span class=\"nv\">template</span><span class=\"o\">=</span>ice.md\n\nnote: rustc <span class=\"m\">1</span>.53.0-nightly <span class=\"o\">(</span>f82664191 <span class=\"m\">2021</span>-03-21<span class=\"o\">)</span> running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z share-generics<span class=\"o\">=</span>y -C embed-bitcode<span class=\"o\">=</span>no -C <span class=\"nv\">debuginfo</span><span class=\"o\">=</span><span class=\"m\">2</span> -C <span class=\"nv\">linker</span><span class=\"o\">=</span>/usr/bin/clang -C incremental -C link-arg<span class=\"o\">=</span>-fuse-ld<span class=\"o\">=</span>lld\n -C target-cpu<span class=\"o\">=</span>native --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n<span class=\"c1\">#0 [evaluate_obligation] evaluating trait selection obligation `itertools::Powerset&lt;std::slice::Iter&lt;i32&gt;&gt;: std::marker::Freeze`</span>\n<span class=\"c1\">#1 [is_freeze_raw] computing whether `itertools::Powerset&lt;std::slice::Iter&lt;i32&gt;&gt;` is freeze</span>\nend of query stack\nerror: could not compile <span class=\"sb\">`</span>another<span class=\"sb\">`</span>\n\nTo learn more, run the <span class=\"nb\">command</span> again with --verbose.\n</code></pre></div>",
        "id": 241789329,
        "sender_full_name": "Odd-Harald Myhren",
        "timestamp": 1623077928
    },
    {
        "content": "<p>this specific error is an incremental issue that generally falls under <a href=\"https://github.com/rust-lang/rust/issues/84970\">#84970</a>. However, many of those have already been fixed in more recent nightlies. if you could try updating your nightly and keeping us updated if this error still reproduces, that would be helpful</p>",
        "id": 241793676,
        "sender_full_name": "lqd",
        "timestamp": 1623079494
    }
]