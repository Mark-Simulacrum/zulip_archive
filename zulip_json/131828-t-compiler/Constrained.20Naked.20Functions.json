[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I have updated the wording of <a href=\"https://github.com/rust-lang/rfcs/pull/2972\">the RFC</a> to be, I think, final. We also have only two small PRs left open to implement the whole thing. How do we move the RFC towards acceptance? I'd really like for <code>#[naked]</code> to be on the stabilization track along with <code>asm!</code>. What do I need to do at this point?</p>",
        "id": 248397933,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1628105845
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> since this is a lang RFC.</p>",
        "id": 248409456,
        "sender_full_name": "Amanieu",
        "timestamp": 1628111370
    },
    {
        "content": "<p>My understanding is that we can't actually stabilize naked function before stabilizing <code>asm!</code>, so stabilization of <code>#[naked]</code> is blocked for now. I'm not sure if this blocks the RFC as well.</p>",
        "id": 248409567,
        "sender_full_name": "Amanieu",
        "timestamp": 1628111431
    },
    {
        "content": "<p>Technically there's no <em>blocker</em> there, naked functions just aren't <em>useful</em> without asm.</p>",
        "id": 248410583,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1628111960
    },
    {
        "content": "<p>(Well, I suppose they can't usefully return without asm, either, so fair enough.)</p>",
        "id": 248410620,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1628111995
    },
    {
        "content": "<p>But nonetheless we can get them on the stabilization track <em>with</em> asm.</p>",
        "id": 248410667,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1628112006
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Constrained.20Naked.20Functions/near/248410620\">said</a>:</p>\n<blockquote>\n<p>(Well, I suppose they can't usefully return without asm, either, so fair enough.)</p>\n</blockquote>\n<p>Incidentally, do we lint against empty naked functions (without an <code>asm!</code>)?</p>",
        "id": 248410954,
        "sender_full_name": "Amanieu",
        "timestamp": 1628112186
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"143274\">Amanieu</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Constrained.20Naked.20Functions/near/248410954\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Constrained.20Naked.20Functions/near/248410620\">said</a>:</p>\n<blockquote>\n<p>(Well, I suppose they can't usefully return without asm, either, so fair enough.)</p>\n</blockquote>\n<p>Incidentally, do we lint against empty naked functions (without an <code>asm!</code>)?</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/asm/naked-functions.rs#L74-L78\">Yes.</a></p>",
        "id": 248413705,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1628113940
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Constrained.20Naked.20Functions/near/248410667\">said</a>:</p>\n<blockquote>\n<p>But nonetheless we can get them on the stabilization track <em>with</em> asm.</p>\n</blockquote>\n<p>This is precisely what I'm hoping for.</p>",
        "id": 248413743,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1628113975
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"143274\">Amanieu</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Constrained.20Naked.20Functions/near/248409567\">said</a>:</p>\n<blockquote>\n<p>My understanding is that we can't actually stabilize naked function before stabilizing <code>asm!</code>, so stabilization of <code>#[naked]</code> is blocked for now. I'm not sure if this blocks the RFC as well.</p>\n</blockquote>\n<p>If I understand the process correctly, the RFC can be accepted and merged before implementation. We <em>also</em> already have the implementation. So we did things in parallel.</p>",
        "id": 248414876,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1628114654
    },
    {
        "content": "<p>Oh, yeah, this would be pretty great to have on the stabilization track with <code>asm!</code>.</p>",
        "id": 248430957,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1628129612
    }
]