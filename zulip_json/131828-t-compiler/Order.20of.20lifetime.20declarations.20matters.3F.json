[
    {
        "content": "<p>This code compiles:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Parser</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;s</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">context</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;c</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"na\">&#39;s</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;s</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Parser</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;s</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"na\">&#39;s</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">context</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">parse_context</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;s</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">context</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;s</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"na\">&#39;s</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Parser</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">context</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">context</span><span class=\"w\"> </span><span class=\"p\">}.</span><span class=\"n\">parse</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">parse_context</span><span class=\"p\">(</span><span class=\"s\">&quot;Available?&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>If you swap the <strong>declaration order</strong> of the lifetimes, it breaks:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Parser</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;c</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>error[E0515]: cannot return value referencing function parameter `context`\n  --&gt; src/main.rs:12:5\n   |\n12 |     Parser { context: &amp;context }.parse()\n   |     ^^^^^^^^^^^^^^^^^^--------^^^^^^^^^^\n   |     |                 |\n   |     |                 `context` is borrowed here\n   |     returns a value referencing data owned by the current function\n</pre></div>\n\n\n<p>That's got to be a straight-up bug, yeah?</p>",
        "id": 164042971,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1556066664
    },
    {
        "content": "<p>I think so, yes. Probably worth filing an issue.</p>",
        "id": 164043061,
        "sender_full_name": "simulacrum",
        "timestamp": 1556066797
    },
    {
        "content": "<p>Thanks! <a href=\"https://github.com/rust-lang/rust/issues/60219\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60219\">https://github.com/rust-lang/rust/issues/60219</a></p>",
        "id": 164044579,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1556068831
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm not following <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span>'s explanation; can you help me bridge the gap?</p>",
        "id": 164071002,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1556103922
    },
    {
        "content": "<p>Is it that it's effectively become</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;s</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Parser</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;c</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">// .                ^^^^^^ flipped</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"na\">&#39;s</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"c1\">// .                    ^^ now the shorter lifetime</span>\n</pre></div>",
        "id": 164071079,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1556103991
    },
    {
        "content": "<p>That aligns with my understanding of the comment.</p>",
        "id": 164071240,
        "sender_full_name": "davidtwco",
        "timestamp": 1556104188
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 164072156,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1556105178
    }
]