[
    {
        "content": "<p>This is new:</p>\n<div class=\"codehilite\"><pre><span></span><code>Couldn&#39;t find required command: ninja\nYou should install ninja, or set ninja=false in config.toml\n</code></pre></div>",
        "id": 208511579,
        "sender_full_name": "njn",
        "timestamp": 1598834314
    },
    {
        "content": "<p>Hmm, <code>sudo apt install ninja</code> doesn't find a package</p>",
        "id": 208511581,
        "sender_full_name": "njn",
        "timestamp": 1598834331
    },
    {
        "content": "<p><code>ninja-build</code>, maybe</p>",
        "id": 208511592,
        "sender_full_name": "njn",
        "timestamp": 1598834372
    },
    {
        "content": "<p>ninja-build is it, yeah</p>",
        "id": 208511595,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598834392
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74922\">https://github.com/rust-lang/rust/pull/74922</a></p>",
        "id": 208511596,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598834397
    },
    {
        "content": "<p>I just tried building the same way I always do:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;error: no rules matched src/rustc&#39;, src/bootstrap/builder.rs:235:21\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nfailed to run: /home/njn/moz/rust0/build/bootstrap/debug/bootstrap build --stage 2 src/rustc\n</code></pre></div>",
        "id": 208511947,
        "sender_full_name": "njn",
        "timestamp": 1598834921
    },
    {
        "content": "<p>/me sighs</p>",
        "id": 208511957,
        "sender_full_name": "njn",
        "timestamp": 1598834943
    },
    {
        "content": "<p>that's <a href=\"https://github.com/rust-lang/rust/pull/74862\">https://github.com/rust-lang/rust/pull/74862</a> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 208511969,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598834980
    },
    {
        "content": "<p>(would prefer having this discussion on the mcp thread so that all the feedback is one place <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 209147959,
        "sender_full_name": "DPC",
        "timestamp": 1599259998
    },
    {
        "content": "<p>can we edit the topic so it's in one place?</p>",
        "id": 209148323,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599260389
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>CMake Error: Error: generator : Ninja\nDoes not match the generator used previously: Unix Makefiles\nEither remove the CMakeCache.txt file and CMakeFiles directory or choose a different binary directory.\nthread &#39;main&#39; panicked at &#39;\ncommand did not execute successfully, got: exit code: 1\n</code></pre></div>",
        "id": 209432387,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593125
    },
    {
        "content": "<p>what are the possible solutions for this?</p>",
        "id": 209432445,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593153
    },
    {
        "content": "<p>probably rm -rf build/&lt;triple&gt;/llvm</p>",
        "id": 209432526,
        "sender_full_name": "simulacrum",
        "timestamp": 1599593183
    },
    {
        "content": "<p>I guess one is <code>rm -rf build</code>, I could do that later today but ... well investigating the commits to see what ...</p>",
        "id": 209432535,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593188
    },
    {
        "content": "<p>ok :)</p>",
        "id": 209432537,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593190
    },
    {
        "content": "<p>we switch the default to ninja but I guess llvm deals poorly with that transition :/</p>",
        "id": 209432572,
        "sender_full_name": "simulacrum",
        "timestamp": 1599593210
    },
    {
        "content": "<p>cmake, really</p>",
        "id": 209432588,
        "sender_full_name": "cuviper",
        "timestamp": 1599593220
    },
    {
        "content": "<p><em>hopefully</em> you could just remove the CMakeCache.txt file</p>",
        "id": 209432591,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599593222
    },
    {
        "content": "<p>but not sure if that runs into other weirdness</p>",
        "id": 209432625,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599593232
    },
    {
        "content": "<p>I think that file is not just in one place? I don't know cmake that well.</p>",
        "id": 209432687,
        "sender_full_name": "simulacrum",
        "timestamp": 1599593271
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>[santiago@galago rust1 (rust1)]$ find . -name &#39;CMakeCache.txt&#39;\n./build/x86_64-unknown-linux-gnu/llvm/build/CMakeCache.txt\n</code></pre></div>",
        "id": 209432742,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593288
    },
    {
        "content": "<p>yeah, removed it and <code>./x.py clean</code> works, let's see if it builds</p>",
        "id": 209432775,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593306
    },
    {
        "content": "<p>later I can remove everything but I don't want to wait now :)</p>",
        "id": 209432785,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593314
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/ninja/near/209432687\">said</a>:</p>\n<blockquote>\n<p>I think that file is not just in one place? I don't know cmake that well.</p>\n</blockquote>\n<p>the cache is different from <code>CMakeLists.txt</code>, those are in every directory</p>",
        "id": 209432792,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599593317
    },
    {
        "content": "<p>oh x.py clean doesn't... well, do anything to llvm</p>",
        "id": 209432798,
        "sender_full_name": "simulacrum",
        "timestamp": 1599593321
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/ninja/near/209432798\">said</a>:</p>\n<blockquote>\n<p>oh x.py clean doesn't... well, do anything to llvm</p>\n</blockquote>\n<p>yeah but it was giving that error, I meant, I understand what you meant</p>",
        "id": 209432833,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593345
    },
    {
        "content": "<p>well nothing seem to be working properly</p>",
        "id": 209433097,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593484
    },
    {
        "content": "<p><code>rm -rf build</code> :)</p>",
        "id": 209433138,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599593514
    },
    {
        "content": "<p>rm -rf build/&lt;triple&gt;/llvm not working is a sign something is quite wrong, that should've definitely worked and saved you a good chunk of time, presuming the rest of rustc was already built</p>",
        "id": 209433626,
        "sender_full_name": "simulacrum",
        "timestamp": 1599593762
    },
    {
        "content": "<p>well, after removing everything and recompiling ...</p>",
        "id": 209440765,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599597325
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error: internal compiler error: src/librustc_mir/monomorphize/collector.rs:802:9: cannot create local mono-item for DefId(1:313 ~ std[8a26]::thread[0]::local[0]::{{impl}}[4]::with[0])\n\nthread &#39;rustc&#39; panicked at &#39;Box&lt;Any&gt;&#39;, src/librustc_errors/lib.rs:918:9\nstack backtrace:\n   Compiling annotate-snippets v0.8.0\n   0: std::panicking::begin_panic\n   1: rustc_errors::HandlerInner::bug\n   2: rustc_errors::Handler::bug\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\n   5: rustc_middle::ty::context::tls::with_opt\n   6: rustc_middle::util::bug::opt_span_bug_fmt\n   7: rustc_middle::util::bug::bug_fmt\n   8: rustc_mir::monomorphize::collector::should_codegen_locally\n   9: &lt;rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor&gt;::visit_terminator\n  10: rustc_mir::monomorphize::collector::collect_neighbours\n  11: rustc_mir::monomorphize::collector::collect_items_rec\n  12: rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time\n  13: rustc_mir::monomorphize::collector::collect_crate_mono_items\n  14: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\n  15: rustc_middle::ty::query::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_middle::ty::context::TyCtxt&gt; for rustc_middle::ty::query::queries::collect_and_partition_mono_items&gt;::compute\n  16: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task_impl\n  17: rustc_data_structures::stack::ensure_sufficient_stack\n  18: rustc_query_system::query::plumbing::get_query_impl\n  19: rustc_codegen_ssa::base::codegen_crate\n  20: &lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate\n  21: rustc_interface::passes::QueryContext::enter\n  22: rustc_interface::queries::Queries::ongoing_codegen\n  23: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n  24: rustc_span::with_source_map\n  25: rustc_interface::interface::create_compiler_and_run\n  26: scoped_tls::ScopedKey&lt;T&gt;::set\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.47.0-beta.1 (0f91f5c28 2020-08-25) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z macro-backtrace -Z unstable-options -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C embed-bitcode=no -C codegen-units=8 -C debuginfo=1 -C debug-assertions=on -C overflow-checks=off -C link-args=-Wl,-rpath,$ORIGIN/../lib -C prefer-dynamic -C llvm-args=-import-instr-limit=10 --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\nend of query stack\nerror: aborting due to previous error\n\nerror: could not compile `scoped-tls`.\n\nTo learn more, run the command again with --verbose.\nwarning: build failed, waiting for other jobs to finish...\nerror: internal compiler error: src/librustc_mir/monomorphize/collector.rs:802:9: cannot create local mono-item for DefId(1:6531 ~ core[9f45]::fmt[0]::{{impl}}[7]::debug_struct[0])\n\nthread &#39;rustc&#39; panicked at &#39;Box&lt;Any&gt;&#39;, src/librustc_errors/lib.rs:918:9\nstack backtrace:\nerror: internal compiler error: src/librustc_mir/monomorphize/collector.rs:802:9: cannot create local mono-item for DefId(5:3732 ~ alloc[eb11]::str[0]::{{impl}}[5]::replace[0])\n\nthread &#39;rustc&#39; panicked at &#39;Box&lt;Any&gt;&#39;, src/librustc_errors/lib.rs:918:9\nstack backtrace:\nerror: internal compiler error: src/librustc_mir/monomorphize/collector.rs:802:9: cannot create local mono-item for DefId(1:6985 ~ core[9f45]::slice[0]::{{impl}}[0]::binary_search_by[0])\n\nthread &#39;rustc&#39; panicked at &#39;Box&lt;Any&gt;&#39;, src/librustc_errors/lib.rs:918:9\nstack backtrace:\n   0: std::panicking::begin_panic\n   1: rustc_errors::HandlerInner::bug\n   2: rustc_errors::Handler::bug\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\n   5: rustc_middle::ty::context::tls::with_opt\n   6: rustc_middle::util::bug::opt_span_bug_fmt\n   7: rustc_middle::util::bug::bug_fmt\n   8: rustc_mir::monomorphize::collector::should_codegen_locally\n   9: &lt;rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor&gt;::visit_terminator\n  10: rustc_mir::monomorphize::collector::collect_neighbours\n  11: rustc_mir::monomorphize::collector::collect_items_rec\n  12: rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time\n  13: rustc_mir::monomorphize::collector::collect_crate_mono_items\n  14: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\n  15: rustc_middle::ty::query::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_middle::ty::context::TyCtxt&gt; for rustc_middle::ty::query::queries::collect_and_partition_mono_items&gt;::compute\n  16: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task_impl\n  17: rustc_data_structures::stack::ensure_sufficient_stack\n  18: rustc_query_system::query::plumbing::get_query_impl\n  19: rustc_codegen_ssa::base::codegen_crate\n  20: &lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate\n  21: rustc_interface::passes::QueryContext::enter\n  22: rustc_interface::queries::Queries::ongoing_codegen\n  23: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n  24: rustc_span::with_source_map\n  25: rustc_interface::interface::create_compiler_and_run\n  26: scoped_tls::ScopedKey&lt;T&gt;::set\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.47.0-beta.1 (0f91f5c28 2020-08-25) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z macro-backtrace -Z unstable-options -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C embed-bitcode=no -C codegen-units=8 -C debuginfo=1 -C debug-assertions=on -C overflow-checks=off -C link-args=-Wl,-rpath,$ORIGIN/../lib -C prefer-dynamic -C llvm-args=-import-instr-limit=10 --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\nend of query stack\nerror: aborting due to previous error\n\n   0: std::panicking::begin_panic\n   1: rustc_errors::HandlerInner::bug\n   2: rustc_errors::Handler::bug\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\n   5: rustc_middle::ty::context::tls::with_opt\n   6: rustc_middle::util::bug::opt_span_bug_fmt\n   7: rustc_middle::util::bug::bug_fmt\n   8: rustc_mir::monomorphize::collector::should_codegen_locally\n   9: &lt;rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor&gt;::visit_terminator\n  10: rustc_mir::monomorphize::collector::collect_neighbours\n  11: rustc_mir::monomorphize::collector::collect_items_rec\n  12: rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time\n  13: rustc_mir::monomorphize::collector::collect_crate_mono_items\n  14: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\n  15: rustc_middle::ty::query::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_middle::ty::context::TyCtxt&gt; for rustc_middle::ty::query::queries::collect_and_partition_mono_items&gt;::compute\n  16: rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps\n  17: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task_impl\n  18: rustc_data_structures::stack::ensure_sufficient_stack\n  19: rustc_query_system::query::plumbing::get_query_impl\n  20: rustc_codegen_ssa::base::codegen_crate\n  21: &lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate\n  22: rustc_interface::passes::QueryContext::enter\n  23: rustc_interface::queries::Queries::ongoing_codegen\n  24: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n  25: rustc_span::with_source_map\n  26: rustc_interface::interface::create_compiler_and_run\n  27: scoped_tls::ScopedKey&lt;T&gt;::set\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.47.0-beta.1 (0f91f5c28 2020-08-25) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z macro-backtrace -Z unstable-options -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C embed-bitcode=no -C codegen-units=8 -C debuginfo=1 -C debug-assertions=on -C overflow-checks=off -C incremental -C link-args=-Wl,-rpath,$ORIGIN/../lib -C prefer-dynamic -C llvm-args=-import-instr-limit=10 --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\nend of query stack\nerror: aborting due to previous error\n\n   0: std::panicking::begin_panic\n   1: rustc_errors::HandlerInner::bug\n   2: rustc_errors::Handler::bug\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\n   5: rustc_middle::ty::context::tls::with_opt\n   6: rustc_middle::util::bug::opt_span_bug_fmt\n   7: rustc_middle::util::bug::bug_fmt\n   8: rustc_mir::monomorphize::collector::should_codegen_locally\n   9: &lt;rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir\n``\n</code></pre></div>",
        "id": 209440776,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599597331
    },
    {
        "content": "<p><code>./x.py clean</code> fixes that, but I'd have expected that <code>rm -rf build</code> was enough?</p>",
        "id": 209442499,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599598202
    },
    {
        "content": "<p>unsure where incr. compilation cache lives but I guess somewhere in build/</p>",
        "id": 209442550,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599598211
    },
    {
        "content": "<p>anyway after clean I'm getting</p>",
        "id": 209442578,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599598226
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>   Compiling rustc_typeck v0.0.0 (/home/santiago/src/oss/rust1/compiler/rustc_typeck)\nerror[E0463]: can&#39;t find crate for `std`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rustc_typeck`.\n</code></pre></div>",
        "id": 209442581,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599598229
    },
    {
        "content": "<p>unsure why all this is happening :/</p>",
        "id": 209442593,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599598237
    },
    {
        "content": "<p>I ... that is unexpected</p>",
        "id": 209443770,
        "sender_full_name": "simulacrum",
        "timestamp": 1599598894
    },
    {
        "content": "<p>are you using sccache or something like that?</p>",
        "id": 209443805,
        "sender_full_name": "cuviper",
        "timestamp": 1599598915
    },
    {
        "content": "<p>one theory might be that x.py is <em>not</em> prepared for parallel x.pys running, and your editor is running x.py check or something which is causing problems...</p>",
        "id": 209443872,
        "sender_full_name": "simulacrum",
        "timestamp": 1599598930
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/131828-t-compiler/topic/ninja/near/209443805\">said</a>:</p>\n<blockquote>\n<p>are you using sccache or something like that?</p>\n</blockquote>\n<p>:) ccache, I guess the problem is related to it?</p>",
        "id": 209443946,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599598977
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/ninja/near/209443872\">said</a>:</p>\n<blockquote>\n<p>one theory might be that x.py is <em>not</em> prepared for parallel x.pys running, and your editor is running x.py check or something which is causing problems...</p>\n</blockquote>\n<p>also that <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 209443975,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599598996
    },
    {
        "content": "<p>may be</p>",
        "id": 209443982,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599599001
    },
    {
        "content": "<p>after removing most of target dirs it ended working</p>",
        "id": 209444022,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599599036
    },
    {
        "content": "<p>but I guess it's unrelated to that and maybe Mark's theory is right?</p>",
        "id": 209444071,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599599048
    },
    {
        "content": "<p>I think regular ccache doesn't know rust, so I'd go with the editor <code>x.py</code> theory</p>",
        "id": 209444512,
        "sender_full_name": "cuviper",
        "timestamp": 1599599307
    },
    {
        "content": "<p>probably we should do the cargo thing and have a global lock :/</p>",
        "id": 209444545,
        "sender_full_name": "simulacrum",
        "timestamp": 1599599333
    },
    {
        "content": "<p>Cargo's own lock will help to some extent, but not when bootstrap is copying new sysroots and such</p>",
        "id": 209444692,
        "sender_full_name": "cuviper",
        "timestamp": 1599599412
    },
    {
        "content": "<p>right, yeah</p>",
        "id": 209444717,
        "sender_full_name": "simulacrum",
        "timestamp": 1599599432
    },
    {
        "content": "<p>I'm running <code>./x.py check</code> on save but I'm not sure how good this is for rustc</p>",
        "id": 209444884,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599599529
    },
    {
        "content": "<p>it's fine if you don't kick off a x.py build in parallel to that</p>",
        "id": 209444941,
        "sender_full_name": "simulacrum",
        "timestamp": 1599599565
    },
    {
        "content": "<p>but if you do, then who knows what can happen</p>",
        "id": 209444973,
        "sender_full_name": "simulacrum",
        "timestamp": 1599599571
    },
    {
        "content": "<p>I was trying it out, I know others have tried or are using it?, interested in knowing from them but it doesn't seem very nice to me</p>",
        "id": 209444982,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599599578
    },
    {
        "content": "<p>I have it on a separate keybind, not save</p>",
        "id": 209445010,
        "sender_full_name": "simulacrum",
        "timestamp": 1599599596
    },
    {
        "content": "<p>it's too slow for just every save for me, I'm too use to saving often</p>",
        "id": 209445020,
        "sender_full_name": "simulacrum",
        "timestamp": 1599599607
    },
    {
        "content": "<p>exactly that's why doesn't seem good to me</p>",
        "id": 209445034,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1599599623
    },
    {
        "content": "<p>/me wishes we could have x.py check in &lt;5 seconds, ideally ~1 second, but that's very far off</p>",
        "id": 209445445,
        "sender_full_name": "simulacrum",
        "timestamp": 1599599783
    }
]