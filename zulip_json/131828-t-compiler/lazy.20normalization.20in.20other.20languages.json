[
    {
        "content": "<p>Does one of you know of other languages which require something similar to lazy normalization?</p>\n<p>I am fairly certain they exist but was unable to find anything good myself. <span aria-label=\"dolphin\" class=\"emoji emoji-1f42c\" role=\"img\" title=\"dolphin\">:dolphin:</span></p>",
        "id": 196826754,
        "sender_full_name": "lcnr",
        "timestamp": 1588883670
    },
    {
        "content": "<p>I'm curious if c++ needs it?</p>",
        "id": 196837733,
        "sender_full_name": "mark-i-m",
        "timestamp": 1588890115
    },
    {
        "content": "<p>What is Lazy Normalization?</p>",
        "id": 196859092,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588915467
    },
    {
        "content": "<p>If it's related to const generics, I bet there must be an extension to Haskell that uses it</p>",
        "id": 196859095,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588915491
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 196859161,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588915577
    },
    {
        "content": "<p>And if it is indeed related to const generics, maybe something in C++'s STL has something similar?</p>",
        "id": 196859240,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588915691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> explanation here <a href=\"https://github.com/rust-lang/rust/issues/60471\" title=\"https://github.com/rust-lang/rust/issues/60471\">https://github.com/rust-lang/rust/issues/60471</a></p>",
        "id": 196860044,
        "sender_full_name": "csmoe",
        "timestamp": 1588917051
    },
    {
        "content": "<p>Ohhhh￼￼ okay. Thanks, <span class=\"user-mention\" data-user-id=\"116773\">@csmoe</span>!</p>",
        "id": 196860134,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588917213
    },
    {
        "content": "<p>Then maybe the c++ community has something to say about it. How is the STL compiled? Do they use LN, or do they dodge the issue somehow?</p>",
        "id": 196860190,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588917286
    },
    {
        "content": "<p>C++ parses templates every time you instantiate them. LN doesn't make sense in the weak template system that doesn't have any such concept as traits.</p>",
        "id": 196870293,
        "sender_full_name": "bjorn3",
        "timestamp": 1588927043
    },
    {
        "content": "<p>Ohhh, so that's how that works. It's much less refined then. Okay. I got nothin' then.</p>",
        "id": 196872277,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588928720
    },
    {
        "content": "<p>(Thanks for explaining, bjorn3!)</p>",
        "id": 196872305,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1588928749
    }
]