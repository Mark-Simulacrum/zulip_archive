[
    {
        "content": "<p>We don't create any sort of tracking issue or anything of the sort do we?</p>",
        "id": 268970648,
        "sender_full_name": "nagisa",
        "timestamp": 1642875747
    },
    {
        "content": "<p>Nope ^^ the author of the MCP can do that or just do the work or let it be forgotten and never heard of again (<em>cough</em> looks at my list of MCPs that I need to do)</p>",
        "id": 268975146,
        "sender_full_name": "oli",
        "timestamp": 1642881941
    },
    {
        "content": "<p>Hmm. Is this a good thing, or a bad thing? It would be nice to at least to have page that tracks the set of MCP’s, with their status. I’m thinking of something analogous to the <a href=\"https://rust-lang.github.io/wg-async-foundations/vision/roadmap.html\">“roadmap” that async foundations has</a>, or the <a href=\"https://lang-team.rust-lang.org/initiatives.html\">“initiatives” that lang team has</a>.</p>",
        "id": 269113185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643034620
    },
    {
        "content": "<p>Well... I think it's a good thing, because we don't fill up some list with things that aren't happening. MCPs are just an async loud decision making or informing process. Once that is done, tracking it causes work and bureaucracy. The question is whether there would be any positive effect from tracking it. Like... will someone else pick it up</p>",
        "id": 269166186,
        "sender_full_name": "oli",
        "timestamp": 1643055131
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/131828-t-compiler/topic/What.20happens.20to.20MCPs.3F/near/269166186\">said</a>:</p>\n<blockquote>\n<p>Well... I think it's a good thing, because we don't fill up some list with things that aren't happening. MCPs are just an async loud decision making or informing process. Once that is done, tracking it causes work and bureaucracy. The question is whether there would be any positive effect from tracking it. Like... will someone else pick it up</p>\n</blockquote>\n<p>Huh. That's an interesting notion, and not one we'd considered in the lang team. Might be worth at least considering that alternative.</p>",
        "id": 269168427,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643056286
    },
    {
        "content": "<p>Our rationale for tracking was so that we could check in, and in particular make sure that things weren't blocked on us and that there were semi-regular check-ins.</p>",
        "id": 269168483,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643056316
    },
    {
        "content": "<p>But I could imagine flipping that around, and making it more the responsibility of an MCP owner, and less the team's responsibility to check back about.</p>",
        "id": 269168552,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643056334
    },
    {
        "content": "<p>That also gives a nice differentiating factor between MCPs and RFCs. I guess.</p>",
        "id": 269169130,
        "sender_full_name": "nagisa",
        "timestamp": 1643056580
    },
    {
        "content": "<p>RFC is a heavyweight process a community at large gets involved in, so it makes sense that we see through it.</p>",
        "id": 269169203,
        "sender_full_name": "nagisa",
        "timestamp": 1643056619
    },
    {
        "content": "<p>There seems to be a distinction between compiler MCPs, which are often about the 'async loud shout', with a goal of letting more people weigh in than might otherwise; lang team MCPs are about proposing fairly large changes to the language, and while it's not critical that their authors/owners stick around -- i.e., phasing out is perfectly acceptable, one of the key design goals (AIUI) was to limit the amount of in-flight things to enable more dedicated attention from lang team than is otherwise necessarily possible.</p>\n<p>I don't think that goal is shared, necessarily, with compiler MCPs, since those don't typically track as 'design-sensitive' of changes.</p>",
        "id": 269170026,
        "sender_full_name": "simulacrum",
        "timestamp": 1643057048
    }
]