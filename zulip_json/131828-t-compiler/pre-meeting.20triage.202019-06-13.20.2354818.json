[
    {
        "content": "<p>I will be doing pre-triage in this channel.</p>",
        "id": 168040258,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560429263
    },
    {
        "content": "<p>first pre-pass: <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high++-label%3AP-medium+-label%3AP-low+label%3AI-nominated\">unprioritized nominated T-compiler issues</a></p>",
        "id": 168040633,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560429656
    },
    {
        "content": "<p>lets sort by <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-nominated+sort%3Acreated-asc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-nominated+sort%3Acreated-asc\">oldest first</a></p>",
        "id": 168040646,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560429673
    },
    {
        "content": "<p>first up: \" <code>single_use_lifetimes</code> warns when deriving a struct\" <a href=\"https://github.com/rust-lang/rust/issues/53738\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53738\">#53738</a></p>",
        "id": 168040660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560429697
    },
    {
        "content": "<p>does this just need a macro check?</p>",
        "id": 168040941,
        "sender_full_name": "oli",
        "timestamp": 1560429960
    },
    {
        "content": "<p>I'm trying to even understand the state of this lint with respect to the rest of the compiler</p>",
        "id": 168041007,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560429983
    },
    {
        "content": "<p>what code are we supposed to be replacing that with in the current stable language?</p>",
        "id": 168041017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430004
    },
    {
        "content": "<p>(is <code>'_</code> supposed to work within that struct declaration?)</p>",
        "id": 168041038,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430036
    },
    {
        "content": "<p><code>impl Debug for Foo&lt;'a&gt; { ... }</code> never mentioning <code>'a</code> again</p>",
        "id": 168041042,
        "sender_full_name": "oli",
        "timestamp": 1560430043
    },
    {
        "content": "<p>no I mean</p>",
        "id": 168041046,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430051
    },
    {
        "content": "<p><code>struct Foo { bar: &amp;u32 }</code> does not compile</p>",
        "id": 168041051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430068
    },
    {
        "content": "<p>nor does <code>struct Foo { bar: &amp;'_ u32, }</code></p>",
        "id": 168041111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430094
    },
    {
        "content": "<p>(this is without the <code>#[derive]</code> ; like I said above, I'm just trying to understand whether it makes sense to try to \"fix\" the lint right now)</p>",
        "id": 168041124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430128
    },
    {
        "content": "<p>ah I think I see</p>",
        "id": 168041158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430173
    },
    {
        "content": "<p>you <em>are</em> supposed to write <code>struct Foo&lt;'a&gt; { bar: &amp;'a u32, }</code></p>",
        "id": 168041169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430187
    },
    {
        "content": "<p>and then the derive causes <code>#[warn(single_use_lifetimes)]</code> to complain. Which is exactly what the bug says. Okay.</p>",
        "id": 168041233,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430213
    },
    {
        "content": "<p>triaging as P-medium (since I don't think it matters much to our end users currently) but leaving I-nominated label on so that we can hopefully discuss whether to still prioritize it just for easing progress in compiler itself.</p>",
        "id": 168041762,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430623
    },
    {
        "content": "<p>next: \"ICE when macro produces multiple functions with \"wrong number of type arguments\" errors\" <a href=\"https://github.com/rust-lang/rust/issues/55873\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55873\">#55873</a></p>",
        "id": 168041794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560430660
    },
    {
        "content": "<p>well this seems like a pretty niche scenario</p>",
        "id": 168042416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560431064
    },
    {
        "content": "<p>but definitely annoying</p>",
        "id": 168042428,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560431073
    },
    {
        "content": "<p>I'm torn between P-medium and P-high on this one.</p>",
        "id": 168042507,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560431131
    },
    {
        "content": "<p>triage: P-medium; removing nomination label.</p>",
        "id": 168044289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432409
    },
    {
        "content": "<p>next: \"ICE while running cargo test on embedded-sdmmc (uses 2018 edition)\" <a href=\"https://github.com/rust-lang/rust/issues/56445\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56445\">#56445</a></p>",
        "id": 168044447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432505
    },
    {
        "content": "<p>can't really tell exactly how bad that is from context.</p>",
        "id": 168044459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432514
    },
    {
        "content": "<p>triage: P-high, assigning to self, removing nomination label.</p>",
        "id": 168044472,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432524
    },
    {
        "content": "<p>next: \"Coherence can be bypassed by an indirect impl for a trait object\" <a href=\"https://github.com/rust-lang/rust/issues/57893\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57893\">#57893</a></p>",
        "id": 168044642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432608
    },
    {
        "content": "<p>hmm. This seems both important to solve but also subtle and complicated</p>",
        "id": 168044723,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432662
    },
    {
        "content": "<p>triage: P-high. Leaving nomination label. Not assigning yet.</p>",
        "id": 168044753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432678
    },
    {
        "content": "<p>next: \"Use const generics for array impls\" <a href=\"https://github.com/rust-lang/rust/issues/61415\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61415\">#61415</a></p>",
        "id": 168044849,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432735
    },
    {
        "content": "<p>ah as I commented last week, I'm not sure this is meant to be nominated for T-compiler.</p>",
        "id": 168044872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432764
    },
    {
        "content": "<p>Nonetheless, it would be nice to prioritize it...</p>",
        "id": 168044876,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432770
    },
    {
        "content": "<p>Don't think it is relevant for t-compiler</p>",
        "id": 168044917,
        "sender_full_name": "centril",
        "timestamp": 1560432799
    },
    {
        "content": "<p>anyway, leaving <a href=\"https://github.com/rust-lang/rust/issues/61415\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61415\">#61415</a> nominated and unprioritized.</p>",
        "id": 168044918,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432799
    },
    {
        "content": "<p>next: \"1.30 -&gt; 1.31 dylib late-binding regression with less recent Linux distro toolchains.\" <a href=\"https://github.com/rust-lang/rust/issues/61539\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61539\">#61539</a></p>",
        "id": 168044926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432807
    },
    {
        "content": "<p>this is a bug that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> had hoped we'd discuss last week. I don't know how to prioritize it, it seems pretty nasty.</p>",
        "id": 168045016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432851
    },
    {
        "content": "<p>leaving <a href=\"https://github.com/rust-lang/rust/issues/61539\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61539\">#61539</a> unprioritized and nominated. (We <strong>really</strong> need to make sure we get around to the nominated issues list today.)</p>",
        "id": 168045050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432879
    },
    {
        "content": "<p>next: \"TypeId differs between builds\" <a href=\"https://github.com/rust-lang/rust/issues/61553\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61553\">#61553</a></p>",
        "id": 168045111,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432935
    },
    {
        "content": "<p>I believe this is not-a-bug; just a user misunderstanding how \"global\" a given TypeId might be.</p>",
        "id": 168045124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432959
    },
    {
        "content": "<p>leaving <a href=\"https://github.com/rust-lang/rust/issues/61553\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61553\">#61553</a> unprioritized and nominated (under assumption that lang team would like to confirm the above belief).</p>",
        "id": 168045186,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560432983
    },
    {
        "content": "<p>next: \"ICE on nightly: \"Forcing query with already existing DepNode.\"\" <a href=\"https://github.com/rust-lang/rust/issues/61594\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61594\">#61594</a></p>",
        "id": 168045386,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433135
    },
    {
        "content": "<p>there's some rumbling about the relationship of this with <a href=\"https://github.com/rust-lang/rust/issues/61530\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61530\">#61530</a>, but overall I cannot tell how bad either of these bugs are</p>",
        "id": 168045922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433466
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/61594\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61594\">#61594</a> triage: P-high, assigning to self for initial investigation. Leaving nomination label so that we can try to discuss relationship with <a href=\"https://github.com/rust-lang/rust/issues/61530\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61530\">#61530</a> (which <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> self-assigned, yay!)</p>",
        "id": 168046004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433535
    },
    {
        "content": "<p>next: \"ICE with index out of bounds const_err\" <a href=\"https://github.com/rust-lang/rust/issues/61595\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61595\">#61595</a></p>",
        "id": 168046120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433602
    },
    {
        "content": "<p>seems like <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> has a PR for this. Triage, P-high, assigning to <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></p>",
        "id": 168046167,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433632
    },
    {
        "content": "<p>next: \" rustc panic due to reference passed instead of mut reference\" <a href=\"https://github.com/rust-lang/rust/issues/61623\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61623\">#61623</a></p>",
        "id": 168046279,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> has done some initial investigation here.</p>",
        "id": 168046309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433727
    },
    {
        "content": "<p>triage: P-high. <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> , I'll assign to you for now; tell me (here or on issue) if it needs reassignment.</p>",
        "id": 168046349,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433751
    },
    {
        "content": "<p>next: \"ICE using a type alias to a const generic struct across crates\" <a href=\"https://github.com/rust-lang/rust/issues/61624\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61624\">#61624</a></p>",
        "id": 168046452,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433806
    },
    {
        "content": "<p>no one's looked at this yet.</p>",
        "id": 168046478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433823
    },
    {
        "content": "<p>nothing really to discuss from what's written, IMO.</p>",
        "id": 168046500,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433838
    },
    {
        "content": "<p>Seems like something for <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 168046513,
        "sender_full_name": "centril",
        "timestamp": 1560433842
    },
    {
        "content": "<p>triage: P-high, assigning to self for initial investigation. Removing nomination label. I'll cc <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> as well.</p>",
        "id": 168046520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433856
    },
    {
        "content": "<p>actually I'll also assign <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span></p>",
        "id": 168046595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433921
    },
    {
        "content": "<p>next: \"Self as default type isnt typechecked\" <a href=\"https://github.com/rust-lang/rust/issues/61631\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61631\">#61631</a></p>",
        "id": 168046697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560433974
    },
    {
        "content": "<p>whoa, for some strange reason I thought we hadn't even stabilized type parameter defaults ...?</p>",
        "id": 168046763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434035
    },
    {
        "content": "<p>definitely needs further investigation</p>",
        "id": 168046823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434057
    },
    {
        "content": "<p>triage: P-high. leaving nominated tag. Leaving unassigned for now.</p>",
        "id": 168046844,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434070
    },
    {
        "content": "<p>next: \"Panic with <code>Layout mismatch when copying!</code> from macro\" <a href=\"https://github.com/rust-lang/rust/issues/61663\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61663\">#61663</a></p>",
        "id": 168046910,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434126
    },
    {
        "content": "<p>dialogue makes things sound pretty strange.</p>",
        "id": 168047016,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434199
    },
    {
        "content": "<p>stable-to-beta regression</p>",
        "id": 168047021,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434208
    },
    {
        "content": "<p>triage: P-high. Not sure if i should assign to self or to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 168047041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434225
    },
    {
        "content": "<p>I'll leave it nominated</p>",
        "id": 168047058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434240
    },
    {
        "content": "<p>and unassigned</p>",
        "id": 168047065,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434244
    },
    {
        "content": "<p>next: \"Soundness hole in pattern matching on enums with an uninhabited variant\" <a href=\"https://github.com/rust-lang/rust/issues/61696\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61696\">#61696</a></p>",
        "id": 168047156,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> by the way, if possible, do try to produce \"minimized\" reductions that do not use <code>feature</code>s</p>",
        "id": 168047332,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434342
    },
    {
        "content": "<p>(as illustrated on the comment thread on <a href=\"https://github.com/rust-lang/rust/issues/61696\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61696\">#61696</a>), just to make it easier to e.g. compare against stable behavior, for example.</p>",
        "id": 168047361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434367
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> it would be less minimal if I did</p>",
        "id": 168047366,
        "sender_full_name": "centril",
        "timestamp": 1560434371
    },
    {
        "content": "<p>there are different kinds of minimalism</p>",
        "id": 168047383,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434386
    },
    {
        "content": "<p>and the MIR and LLVM would be substantially more complicated</p>",
        "id": 168047395,
        "sender_full_name": "centril",
        "timestamp": 1560434390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> the minimalism I'm going for here is \"easier to find the source of the bug\"</p>",
        "id": 168047452,
        "sender_full_name": "centril",
        "timestamp": 1560434404
    },
    {
        "content": "<p>for example, you can have one-liners that rely on <code>libstd</code> defintions</p>",
        "id": 168047475,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434409
    },
    {
        "content": "<p>relying on libstd definitions is cheating; you need to inline their definitions =)</p>",
        "id": 168047509,
        "sender_full_name": "centril",
        "timestamp": 1560434431
    },
    {
        "content": "<p>yes so then we just have a debate about how best to ease finding sources of bugs</p>",
        "id": 168047513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434433
    },
    {
        "content": "<p>(yes, I think relying on libstd definitions is to be eschewed. Glad to see we agree on that.)</p>",
        "id": 168047576,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434471
    },
    {
        "content": "<p>Anywa</p>",
        "id": 168047603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434494
    },
    {
        "content": "<p>looks P-high</p>",
        "id": 168047608,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434498
    },
    {
        "content": "<p>dammit time's up</p>",
        "id": 168047616,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434501
    },
    {
        "content": "<p>I think you need to start pre-triage earlier :P</p>",
        "id": 168047634,
        "sender_full_name": "centril",
        "timestamp": 1560434518
    },
    {
        "content": "<p>that or hold my bladder during it</p>",
        "id": 168047792,
        "sender_full_name": "pnkfelix",
        "timestamp": 1560434636
    }
]