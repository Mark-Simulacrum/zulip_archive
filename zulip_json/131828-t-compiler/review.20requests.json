[
    {
        "content": "<p>As an experiment, I'm inviting people to post review requests here. (And I'm going transcribe some recent ones that I saw in other streams/topics)</p>",
        "id": 160557840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552385528
    },
    {
        "content": "<p><em><a href=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/expert.20map/near/160529332\" title=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/expert.20map/near/160529332\">(transcribed)</a></em></p>\n<blockquote>\n<p>does anyone feel like an expert on <code>infer</code>?</p>\n<p>specifically regarding the confidence to review <a href=\"https://github.com/rust-lang/rust/pull/59008\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59008\">https://github.com/rust-lang/rust/pull/59008</a></p>\n</blockquote>",
        "id": 160557951,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552385665
    },
    {
        "content": "<p><em><a href=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/expert.20map/near/160548072\" title=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/expert.20map/near/160548072\">(transcribed)</a></em></p>\n<blockquote>\n<p>Also, does anybody wants to review <a href=\"https://github.com/rust-lang/rust/pull/58349\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58349\">https://github.com/rust-lang/rust/pull/58349</a> (resolve: Simplify import resolution for mixed 2015/2018 edition mode)?<br>\nI usually reassign anything assigned to <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span>, but in this case I'm not sure who'd be the proper candidate.</p>\n</blockquote>",
        "id": 160558075,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552385770
    },
    {
        "content": "<p>(heh I transcribed the latter robotically, even after I had responded saying I would try to get around to the review today... ugh need more sleep or more coffee)</p>",
        "id": 160558556,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552386280
    },
    {
        "content": "<p>No idea who to <code>r?</code> here. A review would be appreciated: <a href=\"https://github.com/rust-lang/rust/pull/59128\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59128\">https://github.com/rust-lang/rust/pull/59128</a> It's about emitting color codes in json diagnostics</p>",
        "id": 160564546,
        "sender_full_name": "oli",
        "timestamp": 1552392706
    },
    {
        "content": "<p>It all looks reasonable to me, but I'm not familiar with that code at all.</p>",
        "id": 160564891,
        "sender_full_name": "davidtwco",
        "timestamp": 1552393068
    },
    {
        "content": "<p>(also, why hasn't highfive assigned someone?)</p>",
        "id": 160565182,
        "sender_full_name": "davidtwco",
        "timestamp": 1552393390
    },
    {
        "content": "<p>because I screwed up and <code>r?</code>ed someone who doesn't have powers</p>",
        "id": 160566254,
        "sender_full_name": "oli",
        "timestamp": 1552394455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> left a comment.</p>",
        "id": 160801610,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1552583544
    },
    {
        "content": "<p>Anyone with good insights into <code>impl Trait</code> returns and lifetimes, can you take a look at this hack and see if <em>reasonable</em>?<br>\n<a href=\"https://github.com/rust-lang/rust/pull/58919/files\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58919/files\">https://github.com/rust-lang/rust/pull/58919/files</a></p>",
        "id": 160801652,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1552583586
    },
    {
        "content": "<p>it definitely seems like a hack (just from seeing how its inspecting the name to see <code>'static</code>); if <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> doesn't look at it by tomorrow morning, I will try to see if I can suggest something that isn't quite as hacky</p>",
        "id": 160818416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552594733
    },
    {
        "content": "<p>I have a couple of PRs I'd like to get reviewed now that mw is unavailable. <a href=\"https://github.com/rust-lang/rust/pull/59064\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59064\">Turn HIR indexing into a query</a> (contains <a href=\"https://github.com/rust-lang/rust/pull/59091\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59091\">Combine input and eval_always query types</a>) and <a href=\"https://github.com/rust-lang/rust/pull/56462\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/56462\">Define queries using a proc macro</a>.</p>",
        "id": 160950477,
        "sender_full_name": "Zoxc",
        "timestamp": 1552740666
    },
    {
        "content": "<p>I've been told @mw isn't available for review rn. <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> or others: Does someone want to review adding a new invocation of the branch simplification mir optimization? <a href=\"https://github.com/rust-lang/rust/pull/59290\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59290\">https://github.com/rust-lang/rust/pull/59290</a></p>",
        "id": 161143914,
        "sender_full_name": "oli",
        "timestamp": 1552997333
    },
    {
        "content": "<p>Looks good to me, can r=me (or I'll r+) once Travis finishes.</p>",
        "id": 161144025,
        "sender_full_name": "davidtwco",
        "timestamp": 1552997443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>  ;)</p>",
        "id": 161153200,
        "sender_full_name": "centril",
        "timestamp": 1553004490
    },
    {
        "content": "<p>saw the PR before this messages :)</p>",
        "id": 161154067,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1553005081
    },
    {
        "content": "<p>looked good to me too</p>",
        "id": 161154111,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1553005085
    },
    {
        "content": "<p>Does anybody want to review <a href=\"https://github.com/rust-lang/rust/pull/62042\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62042\">\"Support stability and deprecation checking for all macros\"</a>?<br>\nIt's series of refactorings/cleanups after which stability and deprecation mostly become implemented automatically.</p>",
        "id": 169357209,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561935095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> In <a href=\"https://github.com/rust-lang/rust/pull/62330#discussion_r300064460\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62330#discussion_r300064460\">https://github.com/rust-lang/rust/pull/62330#discussion_r300064460</a>, are you asking for more tests? Doing what exactly? What this test does in the first place is not clear to me (even with the comment)</p>",
        "id": 169659227,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1562257664
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219747\">@Simon Sapin</span> basically add:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">X</span>: <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">NoDrop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">inner</span>: <span class=\"nc\">ManuallyDrop</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">NeedDrop</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()).</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">_f</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">NoDrop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">inner</span>: <span class=\"nc\">ManuallyDrop</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">NeedDrop</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()).</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 169659309,
        "sender_full_name": "centril",
        "timestamp": 1562257755
    },
    {
        "content": "<p>My understanding of this is that it is testing that since destructors are not run, it's fine inside a const context</p>",
        "id": 169659379,
        "sender_full_name": "centril",
        "timestamp": 1562257813
    },
    {
        "content": "<p>and specifically how <code>ManuallyDrop</code> and friends achieve this</p>",
        "id": 169659390,
        "sender_full_name": "centril",
        "timestamp": 1562257832
    },
    {
        "content": "<p>Ok</p>",
        "id": 169659408,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1562257865
    },
    {
        "content": "<p>Thanks; and ~good night-ish ;)  (very tired after 1.36.0 release, hehe)</p>",
        "id": 169659422,
        "sender_full_name": "centril",
        "timestamp": 1562257892
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> , do you want to review this change to print_def_path: <a href=\"https://github.com/rust-lang/rust/issues/62503\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62503\">#62503</a> ?</p>",
        "id": 170616058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562836731
    },
    {
        "content": "<p>yeah it's on my catch-up list. I'll look at it now though</p>",
        "id": 170616086,
        "sender_full_name": "eddyb",
        "timestamp": 1562836765
    },
    {
        "content": "<p>okay, its not urgent (as in, doesn't need to be done this minute).</p>",
        "id": 170616094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562836783
    },
    {
        "content": "<p>I just figured since I'm going on leave after tomorrow, I should try to get my open PR's dealt with.</p>",
        "id": 170616144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562836803
    },
    {
        "content": "<p>ughhhh cyclicity strikes again</p>",
        "id": 170616231,
        "sender_full_name": "eddyb",
        "timestamp": 1562836867
    },
    {
        "content": "<p>by the way, I'm not clear on what the <code>bool</code> in the return value represents</p>",
        "id": 170616297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562836932
    },
    {
        "content": "<p>I'd be happy to add a comment explaining it if you want to enlighten me. :)</p>",
        "id": 170616303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562836947
    },
    {
        "content": "<p>I thought there was a comment?</p>",
        "id": 170616319,
        "sender_full_name": "eddyb",
        "timestamp": 1562836971
    },
    {
        "content": "<p>I didn't see one explaining the boolean</p>",
        "id": 170616333,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562836992
    },
    {
        "content": "<p>its possible I overlooked it</p>",
        "id": 170616341,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562837009
    },
    {
        "content": "<p>oh I forgot to update the comment. so, <code>Self</code> is always returned because of how that whole API works, and the <code>bool</code> is the actual result of the <code>try_...</code></p>",
        "id": 170616345,
        "sender_full_name": "eddyb",
        "timestamp": 1562837016
    },
    {
        "content": "<p>the answer to the <code>If possible</code> in the doc comment</p>",
        "id": 170616359,
        "sender_full_name": "eddyb",
        "timestamp": 1562837030
    },
    {
        "content": "<p>Oh okay</p>",
        "id": 170616418,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562837052
    },
    {
        "content": "<p>to be fair, it does say \"and returns true\"</p>",
        "id": 170616424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562837059
    },
    {
        "content": "<p>oh, I see, the comment still talks about returning a path, but it should say \"prints\" instead of \"returns\"</p>",
        "id": 170616434,
        "sender_full_name": "eddyb",
        "timestamp": 1562837083
    },
    {
        "content": "<p>then the \"and returns true\" makes more sense</p>",
        "id": 170616442,
        "sender_full_name": "eddyb",
        "timestamp": 1562837098
    },
    {
        "content": "<p>yeah I should fix that too. <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 170616447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562837104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> btw if you want to take a look at <a href=\"https://github.com/rust-lang/rust/issues/62584\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62584\">#62584</a> - took me a while to submit that fix, mostly because I wasn't sure how to properly explain the math at work here</p>",
        "id": 170617695,
        "sender_full_name": "eddyb",
        "timestamp": 1562838163
    },
    {
        "content": "<p>\"rotating a range\" sounds weird but it's pretty much what's happening</p>",
        "id": 170617709,
        "sender_full_name": "eddyb",
        "timestamp": 1562838175
    },
    {
        "content": "<p>Okay I'll see if I can get to it; I have some other stuff on my plate to take care of in the real world in the near term (we're moving offices and I still need to pack up my desk)</p>",
        "id": 170617798,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562838244
    },
    {
        "content": "<p>don't worry about it then</p>",
        "id": 170617964,
        "sender_full_name": "eddyb",
        "timestamp": 1562838371
    },
    {
        "content": "<p>ah I'm reading it anyway</p>",
        "id": 170621146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562841208
    },
    {
        "content": "<p>who needs to pack</p>",
        "id": 170621147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562841210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> if you're still around, I'm curious if you're okay with this silly approach to having a lot of variants <a href=\"https://github.com/rust-lang/rust/pull/62584/files#diff-dac0b3d5a19b291538d6f171b7e8eb8bR16\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62584/files#diff-dac0b3d5a19b291538d6f171b7e8eb8bR16\">https://github.com/rust-lang/rust/pull/62584/files#diff-dac0b3d5a19b291538d6f171b7e8eb8bR16</a></p>",
        "id": 170727824,
        "sender_full_name": "eddyb",
        "timestamp": 1562943030
    },
    {
        "content": "<p><span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 170727841,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562943059
    },
    {
        "content": "<p>not silly</p>",
        "id": 170727871,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562943079
    },
    {
        "content": "<p>looks great to me</p>",
        "id": 170727874,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562943081
    },
    {
        "content": "<p>(FWIW it does hit the second <code>unreachable!</code> as well on current Rust, so you were right to ask for this test)</p>",
        "id": 170727879,
        "sender_full_name": "eddyb",
        "timestamp": 1562943086
    },
    {
        "content": "<p>(and the PR does fix it)</p>",
        "id": 170727883,
        "sender_full_name": "eddyb",
        "timestamp": 1562943090
    },
    {
        "content": "<p>/me just finished packing. Took ... almost three hours</p>",
        "id": 170727970,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562943128
    },
    {
        "content": "<p>I was gonna do hundreds of lines but then I remembered hex packs nicely :P</p>",
        "id": 170727986,
        "sender_full_name": "eddyb",
        "timestamp": 1562943145
    },
    {
        "content": "<p>(I had a lot of physical garbage debt)</p>",
        "id": 170727999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562943158
    },
    {
        "content": "<p>I'd appreciate a review of <a href=\"https://github.com/rust-lang/rust/pull/59706\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59706\">https://github.com/rust-lang/rust/pull/59706</a> :)</p>",
        "id": 171321354,
        "sender_full_name": "matklad",
        "timestamp": 1563617491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> Could you perhaps update the PR description? It still has some seemingly outdated language (draft PR, etc.)</p>",
        "id": 171323653,
        "sender_full_name": "simulacrum",
        "timestamp": 1563621813
    }
]