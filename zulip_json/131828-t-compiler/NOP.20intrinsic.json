[
    {
        "content": "<p>I am trying to write an intrinsic <code>panic_if_uninhabited</code> that compiles statically to a panic or a NOP depending on the type argument -- something like a generalization of the panic-on-uninhabited we <a href=\"https://github.com/rust-lang/rust/pull/54667/files\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/54667/files\">have for <code>mem::{uninhabited,zeroed}</code></a>. Based on that existing code, getting the panic path was easy, but I have no idea how to make a NOP path. I have a WIP commit at <a href=\"https://github.com/RalfJung/rust/commit/80471dd8e2c71b5c47b471ce2121f20306d8afe2\" target=\"_blank\" title=\"https://github.com/RalfJung/rust/commit/80471dd8e2c71b5c47b471ce2121f20306d8afe2\">https://github.com/RalfJung/rust/commit/80471dd8e2c71b5c47b471ce2121f20306d8afe2</a>. Any suggestions? Cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 152592049,
        "sender_full_name": "RalfJ",
        "timestamp": 1545900221
    },
    {
        "content": "<p>Well... a NOP is just to go to the next block, so I'd presume you'd do the same thing as a goto does: <a href=\"https://github.com/RalfJung/rust/blob/80471dd8e2c71b5c47b471ce2121f20306d8afe2/src/librustc_codegen_ssa/mir/block.rs#L193\" target=\"_blank\" title=\"https://github.com/RalfJung/rust/blob/80471dd8e2c71b5c47b471ce2121f20306d8afe2/src/librustc_codegen_ssa/mir/block.rs#L193\">https://github.com/RalfJung/rust/blob/80471dd8e2c71b5c47b471ce2121f20306d8afe2/src/librustc_codegen_ssa/mir/block.rs#L193</a></p>",
        "id": 152596776,
        "sender_full_name": "oli",
        "timestamp": 1545909030
    },
    {
        "content": "<p>where <code>target</code> is replaced with <code>destination.as_ref().map(|(_, bb)| bb)</code> (possibly with an <code>unwrap</code> afterwards)</p>",
        "id": 152596836,
        "sender_full_name": "oli",
        "timestamp": 1545909130
    },
    {
        "content": "<p>hm actually my panic-case is also wrong because it determines the type to check by looking at the return type. I need the first type of the substitution instead.</p>",
        "id": 152596970,
        "sender_full_name": "RalfJ",
        "timestamp": 1545909371
    },
    {
        "content": "<p>that seems to work, superficially: <a href=\"https://github.com/rust-lang/rust/pull/57145\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/57145\">https://github.com/rust-lang/rust/pull/57145</a></p>",
        "id": 152598599,
        "sender_full_name": "RalfJ",
        "timestamp": 1545912398
    }
]