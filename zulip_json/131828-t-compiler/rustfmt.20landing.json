[
    {
        "content": "<p>We should be landing rustfmt checking and a mass formatting some time in the next week (basically, as soon as one lands, we'll be posting the other).</p>\n<p>This will mean that developers will want to enable rustfmt in editors or run <code>./x.py fmt</code> before pushing up. We have an ignore file -- it's likely we'll need some manual editing to pacify tidy around line lengths in some edge cases, but that should hopefully be quite rare.</p>",
        "id": 184015550,
        "sender_full_name": "simulacrum",
        "timestamp": 1576943982
    },
    {
        "content": "<p>It is happening! May the rustfmt finally be with us</p>",
        "id": 184016317,
        "sender_full_name": "oli",
        "timestamp": 1576945240
    },
    {
        "content": "<p>this is so cool, hope that happens after <a href=\"https://github.com/rust-lang/rust/issues/67000\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67000\">#67000</a> is in <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 184032253,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1576974867
    },
    {
        "content": "<p>unlikely, but rebasing should not be a problem, just force your own changes and rustfmt them, the diff should be just your changes after that</p>",
        "id": 184032437,
        "sender_full_name": "oli",
        "timestamp": 1576975247
    },
    {
        "content": "<p>I guess this is the default rustfmt setting, not whatever <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> used in Miri to make rustfmt not waste quite that much vertical space? Does that mean I need a new screen because rustc code will take twice as much vertical space as before?^^ (rustfmt seems to be quite willing to waste tons of vertical space in complex code, in my experience.)</p>",
        "id": 184060808,
        "sender_full_name": "RalfJ",
        "timestamp": 1577032660
    },
    {
        "content": "<p>It's not the default settings.</p>",
        "id": 184061406,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1577033764
    },
    {
        "content": "<p>iirc the settings were agreed upon in a compiler meeting that i wasn’t even aware of when i started the PR that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has picked up and overhauled to land</p>",
        "id": 184063705,
        "sender_full_name": "anp",
        "timestamp": 1577038277
    },
    {
        "content": "<p>ie it happened a while ago</p>",
        "id": 184063709,
        "sender_full_name": "anp",
        "timestamp": 1577038292
    },
    {
        "content": "<p>We can adjust them as we land the pr in theory too</p>",
        "id": 184063712,
        "sender_full_name": "simulacrum",
        "timestamp": 1577038314
    },
    {
        "content": "<p>(that actually formats code)</p>",
        "id": 184063714,
        "sender_full_name": "simulacrum",
        "timestamp": 1577038321
    },
    {
        "content": "<p>I'm working on that and should have it up tonight</p>",
        "id": 184063757,
        "sender_full_name": "simulacrum",
        "timestamp": 1577038346
    },
    {
        "content": "<p>How much are you formatting? Everything?</p>",
        "id": 184063761,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1577038368
    },
    {
        "content": "<p>i missed the conversation discussing how to do follow up formatting</p>",
        "id": 184063793,
        "sender_full_name": "anp",
        "timestamp": 1577038441
    },
    {
        "content": "<p>i imagine we don’t want to have unformatted parts of the tree for long</p>",
        "id": 184063834,
        "sender_full_name": "anp",
        "timestamp": 1577038462
    },
    {
        "content": "<p>i had this fever dream for a bot that could do a directory at a time and land them only when no approved prs would conflict</p>",
        "id": 184063839,
        "sender_full_name": "anp",
        "timestamp": 1577038492
    },
    {
        "content": "<p>I don't think it's too worth it</p>",
        "id": 184070459,
        "sender_full_name": "simulacrum",
        "timestamp": 1577050622
    },
    {
        "content": "<blockquote>\n<p>+76,400 −85,063</p>\n</blockquote>",
        "id": 184071128,
        "sender_full_name": "oli",
        "timestamp": 1577051969
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> code contribution ranking is going to be halved =P</p>",
        "id": 184084995,
        "sender_full_name": "Zoxc",
        "timestamp": 1577080364
    },
    {
        "content": "<p>I recommend <code>git rebase -i origin/master --exec './x.py fmt &amp;&amp; git add -u &amp;&amp; git commit --no-edit --amend' -Xtheirs</code></p>",
        "id": 184101769,
        "sender_full_name": "simulacrum",
        "timestamp": 1577105136
    },
    {
        "content": "<p>that should auto rebase past formatting</p>",
        "id": 184101772,
        "sender_full_name": "simulacrum",
        "timestamp": 1577105146
    },
    {
        "content": "<p>(but note: <em>only</em> formatting, if you conflicted with some other PR this will just eat that change)</p>",
        "id": 184101818,
        "sender_full_name": "simulacrum",
        "timestamp": 1577105170
    },
    {
        "content": "<blockquote>\n<p>I recommend <code>git rebase -i origin/master --exec './x.py fmt &amp;&amp; git add -u &amp;&amp; git commit --no-edit --amend' -Xtheirs</code></p>\n</blockquote>\n<p>I was going to say, would be nice to document the way to rebase PRs against this massive change</p>",
        "id": 184103605,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1577107101
    },
    {
        "content": "<p>unsure if a post in IRLO, a blog post or where should we explain what happened and what contributors can do</p>",
        "id": 184103627,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1577107171
    },
    {
        "content": "<p>mainly for the people that are not around in general ...</p>",
        "id": 184103633,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1577107187
    },
    {
        "content": "<p>... just thinking a bit loudly :)</p>",
        "id": 184103676,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1577107203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> pretty sure that you have considered this stuff but just wondering also what's the way forward</p>",
        "id": 184103689,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1577107223
    },
    {
        "content": "<p>This feels worth of an Inside Rust blog post once it lands</p>",
        "id": 184103822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577107407
    },
    {
        "content": "<p>It landed :P</p>",
        "id": 184103830,
        "sender_full_name": "centril",
        "timestamp": 1577107416
    },
    {
        "content": "<p>I can try to write something up</p>",
        "id": 184103901,
        "sender_full_name": "simulacrum",
        "timestamp": 1577107449
    },
    {
        "content": "<p>I wonder whether this would have qualified as a major change</p>",
        "id": 184103908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1577107455
    },
    {
        "content": "<p>I think it would have</p>",
        "id": 184103913,
        "sender_full_name": "centril",
        "timestamp": 1577107464
    },
    {
        "content": "<p>we <em>did</em> approve and discuss it a few times, so I think it did to some extent</p>",
        "id": 184103922,
        "sender_full_name": "simulacrum",
        "timestamp": 1577107474
    },
    {
        "content": "<p>(and certainly if we did it again, it would go through that process)</p>",
        "id": 184103930,
        "sender_full_name": "simulacrum",
        "timestamp": 1577107490
    },
    {
        "content": "<p>I will work on a inside rust post</p>",
        "id": 184103952,
        "sender_full_name": "simulacrum",
        "timestamp": 1577107511
    },
    {
        "content": "<p>I'm changing <code>origin/master</code> to <code>upstream/master</code> in the above and then running <code>./x.py test -i src/test/ui --stage 1 --pass check --bless</code> at the end just to check it's all OK</p>",
        "id": 184103958,
        "sender_full_name": "centril",
        "timestamp": 1577107516
    },
    {
        "content": "<p>sadly, some of the PRs no longer build after every commit</p>",
        "id": 184103968,
        "sender_full_name": "centril",
        "timestamp": 1577107535
    },
    {
        "content": "<p>maybe <code>./x.py check</code> in <code>--exec</code> to verify that it does</p>",
        "id": 184103977,
        "sender_full_name": "centril",
        "timestamp": 1577107554
    },
    {
        "content": "<p>I'm actually going to write up the command such that it always works (even if there's other issues)</p>",
        "id": 184103986,
        "sender_full_name": "simulacrum",
        "timestamp": 1577107558
    },
    {
        "content": "<p>i.e., you have to resolve rebase conflicts if necessary</p>",
        "id": 184104032,
        "sender_full_name": "simulacrum",
        "timestamp": 1577107569
    },
    {
        "content": "<p>but if you have syntax errors then this isn't going to work (of course)</p>",
        "id": 184104041,
        "sender_full_name": "simulacrum",
        "timestamp": 1577107577
    },
    {
        "content": "<p>I had to rescue a fairly large PR because I used <code>-Xours</code> instead of <code>-Xtheirs</code> :D</p>",
        "id": 184104072,
        "sender_full_name": "centril",
        "timestamp": 1577107631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/485\" target=\"_blank\" title=\"https://github.com/rust-lang/blog.rust-lang.org/pull/485\">https://github.com/rust-lang/blog.rust-lang.org/pull/485</a></p>\n<p>Maybe would be good to get that in sooner rather than later</p>",
        "id": 184104958,
        "sender_full_name": "simulacrum",
        "timestamp": 1577108567
    },
    {
        "content": "<p>I’m really excited about this. Perhaps a post on internals would be good too?</p>",
        "id": 184111252,
        "sender_full_name": "davidtwco",
        "timestamp": 1577114459
    },
    {
        "content": "<p>I'm going to cross-post the inside rust blogpost once <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> takes a look (and hopefully merges it!)</p>",
        "id": 184112072,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115228
    },
    {
        "content": "<p>I'll look now :)</p>",
        "id": 184112117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115243
    },
    {
        "content": "<p>also, I'm super excited too</p>",
        "id": 184112134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115260
    },
    {
        "content": "<p>I guess I can enable \"rustfmt on save\" basically all the time now</p>",
        "id": 184112140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115271
    },
    {
        "content": "<p>shall I merge <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ?</p>",
        "id": 184112164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115321
    },
    {
        "content": "<p>sounds like yes</p>",
        "id": 184112169,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115329
    },
    {
        "content": "<p>sure yes</p>",
        "id": 184112171,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115331
    },
    {
        "content": "<p>done</p>",
        "id": 184112235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115396
    },
    {
        "content": "<p>I currently have to change rustfmt to point to the \"local\" copy in our repo to get precisely the same formatting (usually at e.g. <code>build/x86_64-apple-darwin/stage0/bin/rustfmt</code>) but that's only true of 3 files across all of rust</p>",
        "id": 184112236,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115399
    },
    {
        "content": "<p>and plausibly spurious? I saw it what felt like only sometimes, so not sure what was up</p>",
        "id": 184112258,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115424
    },
    {
        "content": "<p>yeah I have no idea what binary emcs runs</p>",
        "id": 184112260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115427
    },
    {
        "content": "<p>but I guess it's unlikely to be an issue</p>",
        "id": 184112270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115438
    },
    {
        "content": "<p>in theory though yes auto formatting everywhere should be fine :)</p>",
        "id": 184112274,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115444
    },
    {
        "content": "<p>I'll cross post a link to internals</p>",
        "id": 184112278,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115456
    },
    {
        "content": "<p>I really enjoy now writing really horrible rust syntax</p>",
        "id": 184112291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115477
    },
    {
        "content": "<p>and then hitting save and watching it get cleaned up</p>",
        "id": 184112327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1577115482
    },
    {
        "content": "<p>my favorite is being able to freely change function arguments without rejiggering the whole function</p>",
        "id": 184112378,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115583
    },
    {
        "content": "<p><a href=\"https://internals.rust-lang.org/t/formatting-the-compiler-tree/11529\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/formatting-the-compiler-tree/11529\">https://internals.rust-lang.org/t/formatting-the-compiler-tree/11529</a></p>",
        "id": 184112476,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115667
    },
    {
        "content": "<p><a href=\"https://blog.rust-lang.org/inside-rust/2019/12/23/formatting-the-compiler.html\" target=\"_blank\" title=\"https://blog.rust-lang.org/inside-rust/2019/12/23/formatting-the-compiler.html\">https://blog.rust-lang.org/inside-rust/2019/12/23/formatting-the-compiler.html</a></p>",
        "id": 184112483,
        "sender_full_name": "simulacrum",
        "timestamp": 1577115677
    },
    {
        "content": "<p>I saw the <code>use_small_heuristics = \"Max\"</code>, awesome :)</p>",
        "id": 184161672,
        "sender_full_name": "RalfJ",
        "timestamp": 1577182573
    },
    {
        "content": "<blockquote>\n<p>and then hitting save and watching it get cleaned up</p>\n</blockquote>\n<p>what magic is that?</p>",
        "id": 184161673,
        "sender_full_name": "RalfJ",
        "timestamp": 1577182578
    },
    {
        "content": "<p>are there docs for how to set up IDEs and stuff in a way that actually works for the compiler? reading this I now feel like I am still in the stone age, just using a plain editor with no Rust IDE features whatsoever for rustc hacking^^</p>",
        "id": 184161690,
        "sender_full_name": "RalfJ",
        "timestamp": 1577182646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> What editor do you use?</p>",
        "id": 184163081,
        "sender_full_name": "simulacrum",
        "timestamp": 1577184881
    },
    {
        "content": "<p>Kate (the KDE editor)</p>",
        "id": 184163319,
        "sender_full_name": "RalfJ",
        "timestamp": 1577185288
    },
    {
        "content": "<p>I'm using vscode for miri hacking though. but even there I have no IDE features due to a lack of RLS.</p>",
        "id": 184163321,
        "sender_full_name": "RalfJ",
        "timestamp": 1577185316
    },
    {
        "content": "<p>I personally use vim -- I imagine vscode though, even without RLS, supports some sort of \"run command on save\"</p>",
        "id": 184163366,
        "sender_full_name": "simulacrum",
        "timestamp": 1577185356
    },
    {
        "content": "<p>I guess it does. though the blog post said running fmt on the rustc code base takes a while, so taht doesnt sound like something one wants to do on every save?</p>",
        "id": 184163374,
        "sender_full_name": "RalfJ",
        "timestamp": 1577185404
    },
    {
        "content": "<p>well, that's <em>every</em> file</p>",
        "id": 184163386,
        "sender_full_name": "simulacrum",
        "timestamp": 1577185436
    },
    {
        "content": "<p>if you just want to run it on the current file that'll be pretty instant</p>",
        "id": 184163425,
        "sender_full_name": "simulacrum",
        "timestamp": 1577185444
    },
    {
        "content": "<p>you can mostly just run <code>rustfmt --edition=2018 $CURRENT_FILE</code></p>",
        "id": 184163429,
        "sender_full_name": "simulacrum",
        "timestamp": 1577185457
    },
    {
        "content": "<p>ah makes sense</p>",
        "id": 184164142,
        "sender_full_name": "RalfJ",
        "timestamp": 1577186708
    },
    {
        "content": "<p>in vscode I set</p>\n<div class=\"codehilite\"><pre><span></span>    &quot;editor.formatOnSave&quot;: true,\n    &quot;editor.formatOnPaste&quot;: true,\n    &quot;editor.formatOnType&quot;: true,\n</pre></div>\n\n\n<p>for the projects that are rustfmtable<br>\nand</p>\n<div class=\"codehilite\"><pre><span></span>    &quot;files.autoSave&quot;: &quot;onFocusChange&quot;,\n</pre></div>\n\n\n<p>globally in my user config</p>",
        "id": 184166107,
        "sender_full_name": "oli",
        "timestamp": 1577189679
    },
    {
        "content": "<p>we could add a <code>.vscode</code> folder to the rustc repo doing the <code>editor.format*</code> settings, but not sure whether everyone is happy with that</p>",
        "id": 184166179,
        "sender_full_name": "oli",
        "timestamp": 1577189776
    },
    {
        "content": "<p>I personally think it would be really great to provide recommended editor settings for the common editors/IDEs in the repo. We could do something similarly to how <code>config.toml</code> works and have one <code>editors</code> or <code>.editors</code> folder in the root with subfolders for the different editors. We'd also setup <code>.gitignore</code> in the project root to ignore the correct locations for the files/folders. Interested users would just need to <code>cp .editors/$EDITOR .</code> to get the recommended default settings.</p>",
        "id": 184168397,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1577192612
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> oh you need to install rust-analyzer, it's so nice and works really well with rustc</p>",
        "id": 184176280,
        "sender_full_name": "centril",
        "timestamp": 1577202820
    },
    {
        "content": "<p>fwiw there are multiple places in libstd and libcore where rust-analyzer autoformatting results in breakage <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span> and pinned rustfmt is fine</p>",
        "id": 184195284,
        "sender_full_name": "anp",
        "timestamp": 1577234297
    },
    {
        "content": "<p>i’ve started running <code>watchexec — ./x.py fmt</code> in a separate terminal instead</p>",
        "id": 184195332,
        "sender_full_name": "anp",
        "timestamp": 1577234403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130111\">@anp</span> you might need a different rustfmt in environment</p>",
        "id": 184195888,
        "sender_full_name": "simulacrum",
        "timestamp": 1577235643
    },
    {
        "content": "<p>I'm not sure what rust-analyzer uses by default</p>",
        "id": 184195893,
        "sender_full_name": "simulacrum",
        "timestamp": 1577235652
    },
    {
        "content": "<p>current nightly works well</p>",
        "id": 184195951,
        "sender_full_name": "oli",
        "timestamp": 1577235791
    },
    {
        "content": "<p>but we need a better scheme XD</p>",
        "id": 184195952,
        "sender_full_name": "oli",
        "timestamp": 1577235797
    },
    {
        "content": "<p>well, rustfmt is supposed to be stable</p>",
        "id": 184196025,
        "sender_full_name": "simulacrum",
        "timestamp": 1577235962
    },
    {
        "content": "<p>I'm to be honest not sure why we're seeing this given that</p>",
        "id": 184196047,
        "sender_full_name": "simulacrum",
        "timestamp": 1577235979
    },
    {
        "content": "<p>maybe <span class=\"user-mention\" data-user-id=\"130111\">@anp</span> has a really old one :D</p>",
        "id": 184196057,
        "sender_full_name": "oli",
        "timestamp": 1577236068
    },
    {
        "content": "<p>eh, I see it vs. stable</p>",
        "id": 184196061,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236077
    },
    {
        "content": "<p>i think it might be picking up my stable rustfmt as the default in my environment</p>",
        "id": 184196180,
        "sender_full_name": "anp",
        "timestamp": 1577236320
    },
    {
        "content": "<p>thinking more now, it might be possible to teach ra-lsp to use the bootstrap-managed rustfmt</p>",
        "id": 184196221,
        "sender_full_name": "anp",
        "timestamp": 1577236348
    },
    {
        "content": "<p>it should be</p>",
        "id": 184196234,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236409
    },
    {
        "content": "<p>I gave up myself and just used rust.vim's rustfmt functionality which seemed to work a little better anyway</p>",
        "id": 184196235,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236432
    },
    {
        "content": "<p>(otoh, I'm doing some fairly ... sketchy stuff with piping the LSP protocol across ssh so that I can run ra-lsp-server on my more powerful machine and conserve battery life)</p>",
        "id": 184196276,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236459
    },
    {
        "content": "<p>I'm <a href=\"https://github.com/davidtwco/veritas/blob/master/users/david/home/neovim.nix#L61\" target=\"_blank\" title=\"https://github.com/davidtwco/veritas/blob/master/users/david/home/neovim.nix#L61\">using the current stable rustfmt through neovim+ALE</a> and I've not had any issues yet.</p>",
        "id": 184196337,
        "sender_full_name": "davidtwco",
        "timestamp": 1577236629
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I think it's pretty context-dependent</p>",
        "id": 184196375,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236682
    },
    {
        "content": "<p>I observed it on src/librustc_resolve/lib.rs fwiw</p>",
        "id": 184196382,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236690
    },
    {
        "content": "<p>(among others)</p>",
        "id": 184196383,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236694
    },
    {
        "content": "<p>one thing might be that the old rust format won't undo modern rustfmt</p>",
        "id": 184196385,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236705
    },
    {
        "content": "<p>I wish we just had a proper sysroot for stage 0 that we could point a rustup against</p>",
        "id": 184196387,
        "sender_full_name": "oli",
        "timestamp": 1577236740
    },
    {
        "content": "<p>we do?</p>",
        "id": 184196392,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236755
    },
    {
        "content": "<p><code>build/x86_64-apple-darwin/stage0/</code> should be rustup linkable I think</p>",
        "id": 184196393,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236790
    },
    {
        "content": "<p>(or whatever triple you have)</p>",
        "id": 184196394,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236795
    },
    {
        "content": "<p>and that's a stable-ish place (obviously we can change it but it won't change often)</p>",
        "id": 184196436,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236820
    },
    {
        "content": "<p>I tried that before I think... let me recheck</p>",
        "id": 184196439,
        "sender_full_name": "oli",
        "timestamp": 1577236842
    },
    {
        "content": "<p>seems to work for me</p>",
        "id": 184196447,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236876
    },
    {
        "content": "<p>hmm... curious, I'm sure I tried this before, but yea, I'm seeing everything in order</p>",
        "id": 184196448,
        "sender_full_name": "oli",
        "timestamp": 1577236884
    },
    {
        "content": "<p>(it's literally just a beta toolchain)</p>",
        "id": 184196450,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236898
    },
    {
        "content": "<p>ok, this makes a few things much simpler</p>",
        "id": 184196451,
        "sender_full_name": "oli",
        "timestamp": 1577236900
    },
    {
        "content": "<p>O_o: can we just use a rustup toolchain file instead of hand-rolling the downloading logic and use rustup for stage 0?</p>",
        "id": 184196495,
        "sender_full_name": "oli",
        "timestamp": 1577236931
    },
    {
        "content": "<p>I mean we can still manually download rustup into <code>build/triple</code></p>",
        "id": 184196500,
        "sender_full_name": "oli",
        "timestamp": 1577236966
    },
    {
        "content": "<p>ok, maybe that's bad for some environments</p>",
        "id": 184196502,
        "sender_full_name": "oli",
        "timestamp": 1577236979
    },
    {
        "content": "<p>we might be able to get away with it</p>",
        "id": 184196508,
        "sender_full_name": "simulacrum",
        "timestamp": 1577236990
    },
    {
        "content": "<p>I think distros reconfigure the rustc anyway to point at their own binary</p>",
        "id": 184196509,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237002
    },
    {
        "content": "<p>oh, but we could use a rustup toolchain file and make that the canonical location for bootstrap to figure out the stage 0 compiler</p>",
        "id": 184196511,
        "sender_full_name": "oli",
        "timestamp": 1577237007
    },
    {
        "content": "<p>kinda</p>",
        "id": 184196512,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237017
    },
    {
        "content": "<p>we're actually not using a beta rustfmt today</p>",
        "id": 184196514,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237026
    },
    {
        "content": "<p>(so we'd have two toolchains)</p>",
        "id": 184196516,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237032
    },
    {
        "content": "<p>oh ^^</p>",
        "id": 184196517,
        "sender_full_name": "oli",
        "timestamp": 1577237033
    },
    {
        "content": "<p>because we need nightly rustfmt features and rustfmt does not have an equivalent of RUSTC_BOOTSTRAP</p>",
        "id": 184196556,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237052
    },
    {
        "content": "<blockquote>\n<p>because we need nightly rustfmt features and rustfmt does not have an equivalent of RUSTC_BOOTSTRAP</p>\n</blockquote>\n<p>that seems surmountable</p>",
        "id": 184196560,
        "sender_full_name": "oli",
        "timestamp": 1577237067
    },
    {
        "content": "<p>beta/stable branches will have the rustfmt-checking disabled</p>",
        "id": 184196561,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237068
    },
    {
        "content": "<p>well, we/I asked if rustfmt could add it, and they were against it</p>",
        "id": 184196564,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237094
    },
    {
        "content": "<p>I didn't push too hard though</p>",
        "id": 184196570,
        "sender_full_name": "simulacrum",
        "timestamp": 1577237104
    },
    {
        "content": "<p>ah ok</p>",
        "id": 184196754,
        "sender_full_name": "oli",
        "timestamp": 1577237463
    }
]