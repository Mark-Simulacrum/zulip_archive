[
    {
        "content": "<p>Is there ever a such thing as too many PRs? (Yes.)<br>\nI usually jump between tasks often in my own projects, and am wondering if I should avoid doing that with rustc, to save maintainer time. (as even small PRs take time to review and merge)</p>",
        "id": 209434374,
        "sender_full_name": "Braden Nelson",
        "timestamp": 1599594142
    },
    {
        "content": "<p>I would say more small PRs is fine, review latency is ... <a href=\"#narrow/stream/131828-t-compiler/topic/.22Review.20latency.20can.20be.20challenging.22\">challenging</a> so it's better to parallelize the work.</p>",
        "id": 209434622,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599594268
    },
    {
        "content": "<p>if it makes more sense to do things in one big PR though, that works too</p>",
        "id": 209434679,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599594292
    },
    {
        "content": "<p>but I wouldn't <em>delay</em> changes because you have a lot of PRs open</p>",
        "id": 209434712,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599594304
    },
    {
        "content": "<p>RustC as a whole gets a ton of PRs anyway, enough that there are some wonderful people who make rollups of multiple PRs so that they can be tested and merged together.  So I wouldn't worry too much about multiple PRs, all else being equal.  (Especially if they're completely isolated from each other.)</p>",
        "id": 209434724,
        "sender_full_name": "scottmcm",
        "timestamp": 1599594306
    },
    {
        "content": "<p>That said, if they do build on each other, that's not \"all else being equal\" -- because of review and bors latency, sometimes people will do a PR that intentionally has multiple commits where the commits are intended to be meaningful changes on their own to help the reviewer, but that they're all together in one PR.  (For the kind of thing where at work I might bug someone to just review it _right now_ and get it checked in, but that's not as feasible for rustc PRs.)</p>",
        "id": 209434940,
        "sender_full_name": "scottmcm",
        "timestamp": 1599594418
    },
    {
        "content": "<p>/me glances nervously at <a href=\"https://github.com/rust-lang/rust/pull/75756\">https://github.com/rust-lang/rust/pull/75756</a></p>",
        "id": 209435017,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599594473
    },
    {
        "content": "<p>There are other versions of this as well, like send the cleanup PR first, if it's easy to review and safe, then keep working from there.  And if you get further along, push new stuff as a draft PR with a note to ignore the first commit because it's part of PR #_____.</p>\n<p>EDIT: ...exactly like the one <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> just pointed at :P</p>",
        "id": 209435095,
        "sender_full_name": "scottmcm",
        "timestamp": 1599594505
    },
    {
        "content": "<p>although 21 commits is probably a <em>little</em> over the top</p>",
        "id": 209435200,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599594576
    },
    {
        "content": "<p>it's fine if you want to submit multiple PRs - it makes it easier as you can switch to something else while one is waiting for a review (which can take a few weeks). The only problem is that if you are busy with one, and there are changes requested on another one and you can't handle both at the same time, it will add to the \"latency\" of a PR being merged or could end up in one of the PRs being closed due to inactivity.</p>",
        "id": 209461391,
        "sender_full_name": "DPC",
        "timestamp": 1599612504
    },
    {
        "content": "<p>Another downside of juggling PRs is that you'll probably have to rebase more often</p>",
        "id": 209479828,
        "sender_full_name": "detrumi",
        "timestamp": 1599636935
    },
    {
        "content": "<p>Smaller PRs are much easier to rebase though</p>",
        "id": 209503704,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599654510
    },
    {
        "content": "<p>I also prefer rebasing more often but having fewer, less complex conflicts to resolve</p>",
        "id": 209507658,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1599656960
    },
    {
        "content": "<p>I can review multiple smaller PRs much faster than a single PR with all the changes from those multiple PRs (and re-reviews after rebases and such are usually super fast as I don't have to think about additional interactions). Even if you split it up into separate commits, github just doesn't make this nice to review</p>",
        "id": 209508365,
        "sender_full_name": "oli",
        "timestamp": 1599657347
    },
    {
        "content": "<p>I will add to that, though, that if you're making a lot of PRs in the same area then that becomes more confusing if they're small -- I would add either a \"review order\" on them or a separate document that says \"hey, this is the overall plan\" or similar.</p>",
        "id": 209548416,
        "sender_full_name": "simulacrum",
        "timestamp": 1599675503
    },
    {
        "content": "<p>also if some of those changes get rejected, at least the others can make it upstream assuming they are not dependent on the ones that didn't make it</p>",
        "id": 209582286,
        "sender_full_name": "DPC",
        "timestamp": 1599695073
    },
    {
        "content": "<p>So to summarize, many independent PRs are totally fine and actually welcome as this greatly helps reviewers.<br>\nLong chains of PRs that build on top of each other are harder, and more of a case-by-case thing. Reviewers are people, talk to them. :)</p>",
        "id": 209765540,
        "sender_full_name": "RalfJ",
        "timestamp": 1599821285
    }
]