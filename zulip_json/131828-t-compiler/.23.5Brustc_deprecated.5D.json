[
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"213817\" href=\"/#narrow/stream/213817-t-lang/topic/.23.5Brustc_deprecated.5D\">#t-lang &gt; #[rustc_deprecated]</a> by <span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span></p>",
        "id": 270503749,
        "sender_full_name": "Notification Bot",
        "timestamp": 1643867109
    },
    {
        "content": "<p>Iirc the rustc_deprecated attribute has a flag for the compiler version. There may be further differences</p>",
        "id": 270508128,
        "sender_full_name": "oli",
        "timestamp": 1643871651
    },
    {
        "content": "<p>But <code>#[deprecated(since = \"1.59.0\", note = \"foo\")]</code> is valid in crates. The only thing that would need to be done, as I noted, was to enforce that the optional bits (\"since\" and \"note\") are present in stdlib.</p>",
        "id": 270517880,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1643879084
    },
    {
        "content": "<p>(<a href=\"https://doc.rust-lang.org/reference/attributes/diagnostics.html#the-deprecated-attribute\">Rust reference</a>)</p>",
        "id": 270517920,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1643879110
    },
    {
        "content": "<p>Syntactically, the difference is that rustc_deprecated uses <code>reason</code> where deprecated uses <code>note</code>, and that rustc_deprecated allows for suggestions.  Otherwise, the code paths for both attributes are the same, so I don't see any reason not to merge both attributes.  The user-visible <code>deprecated</code> attribute may even benefit from getting suggestions.</p>",
        "id": 270539178,
        "sender_full_name": "cjgillot",
        "timestamp": 1643890599
    },
    {
        "content": "<p>As long as the suggestions field is gated, that merge seems fine to me from what y'all wrote</p>",
        "id": 270541912,
        "sender_full_name": "oli",
        "timestamp": 1643892242
    },
    {
        "content": "<p>I've been wondering about this for a while myself, so I'd be glad to see them merged</p>",
        "id": 270613280,
        "sender_full_name": "Noah Lev",
        "timestamp": 1643920337
    },
    {
        "content": "<p>I'll tentatively put this on my list of things to look in to. It's growing increasing longer, so we'll see haha</p>",
        "id": 270625906,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1643926190
    },
    {
        "content": "<p>The merge of <code>deprecated</code> and <code>rustc_deprecated</code> was started last year but not finished - <a href=\"https://github.com/rust-lang/rust/pull/74572\">https://github.com/rust-lang/rust/pull/74572</a></p>",
        "id": 270661240,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1643943265
    },
    {
        "content": "<p>I think we can merge them, just keep the extra functionality of <code>rustc_deprecated</code> unstable for a start.</p>",
        "id": 270661261,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1643943301
    },
    {
        "content": "<p>That was my intent. Once I get around to it, it'll probably be best to keep <code>#[rustc_deprecated]</code> as an alias to <code>#[deprecated]</code> until a bootstrap occurs. Otherwise every instance of it would have to have <code>#[cfg_attr(bootstrap, â€¦)]</code>, which is unnecessary noise.</p>",
        "id": 270672777,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1643955609
    },
    {
        "content": "<p>Just created a PR merging the two fully. <a href=\"https://github.com/rust-lang/rust/issues/94635\">#94635</a></p>",
        "id": 274217995,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646453014
    },
    {
        "content": "<p>Now that a bootstrap has occurred, I'm going ahead with removing all usages of <code>#[rustc_deprecated]</code>. Submodules have to come first. I've just opened <a href=\"https://github.com/rust-lang/stdarch/pull/1301\">rust-lang/stdarch#1301</a> for the first of these.</p>\n<p>I have commits for the main change already complete, but won't be creating a PR until the previous ones are merged (as I know they'll fail). With that said, I am moving straight to a hard error on <code>#[rustc_deprecated]</code> and/or <code>reason</code> as an item in it. The latter has an automated fix to <code>note</code>, but I couldn't find a nice way to implement a diagnostic to rename <code>rustc_deprecated</code> to <code>deprecated</code> while keeping everything else the same. This would require getting the stringified value of the macro argument, for which an API does not appear to exist.</p>\n<p>These diagnostics can (and should) be removed in the future. I believe there's value in having them in the short-term so people don't get unnecessarily confused.</p>",
        "id": 278254783,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1649390744
    }
]