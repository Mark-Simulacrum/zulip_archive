[
    {
        "content": "<p>I was hoping that <a href=\"https://internals.rust-lang.org/t/what-exactly-is-cargo-llvm-lines-measuring/12455\">my post on internals</a> would have gotten more response, so I'll ask here. What is the difference in rustc's front-end between debug and opt builds?</p>",
        "id": 200169645,
        "sender_full_name": "njn",
        "timestamp": 1591660443
    },
    {
        "content": "<p>One obvious thing is that debug builds have debug assertions, so they will contain more code because of that.</p>",
        "id": 200169669,
        "sender_full_name": "njn",
        "timestamp": 1591660463
    },
    {
        "content": "<p>Are there other differences? Are there front-end optimizations that might result in different LLVM IR being generated for debug and opt builds?</p>",
        "id": 200169684,
        "sender_full_name": "njn",
        "timestamp": 1591660490
    },
    {
        "content": "<p>For example, the output of <code>cargo llvm-lines</code> suggests that some inlining occurs in the front-end in opt builds. Is that true?</p>",
        "id": 200169710,
        "sender_full_name": "njn",
        "timestamp": 1591660523
    },
    {
        "content": "<p>There is no difference in MIR optimizations as of now</p>",
        "id": 200169714,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1591660525
    },
    {
        "content": "<p>but overflow checks cause a difference</p>",
        "id": 200169727,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1591660552
    },
    {
        "content": "<p>Still doesn't seem like debug assertions and overflow checks are enough to account for the differences seen in some cases. I'll have to investigate more when I get some time.</p>",
        "id": 200178968,
        "sender_full_name": "njn",
        "timestamp": 1591673051
    },
    {
        "content": "<p>Are CGU divisions happening in the same places in debug and release?</p>",
        "id": 200185315,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591683478
    },
    {
        "content": "<p>I don't know. Are CGU divisions something that happens in the front-end?</p>",
        "id": 200187241,
        "sender_full_name": "njn",
        "timestamp": 1591685849
    },
    {
        "content": "<p>yes, CGU splitting is done by rustc</p>",
        "id": 200191417,
        "sender_full_name": "oli",
        "timestamp": 1591689329
    },
    {
        "content": "<p>Besides CGU merging, I think there are also differences in what goes into each CGU: whether monomorphizations from upstream crates get reused (-Z share-generics) and maybe how eagerly #[inline] functions get placed in multiple CGUs. I'm not 100% sure about the latter, though, and don't have the time to check at the moment.</p>",
        "id": 200210887,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1591702489
    },
    {
        "content": "<p>There is a MIR opt for inlining, but afaik it's been skipped for both modes because of performance concerns</p>",
        "id": 200408890,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1591792108
    },
    {
        "content": "<p>There are a lot of things to improve here that should appear in the pipeline soon though</p>",
        "id": 200408915,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1591792137
    },
    {
        "content": "<p>Like:</p>\n<ul>\n<li>Doing different mir-opts depending on debug vs release</li>\n<li>Doing different CGU partitioning depending on debug vs release</li>\n</ul>",
        "id": 200408960,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1591792187
    },
    {
        "content": "<p>If I remember correctly... <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> was experimenting on the CGU algorithm for debug builds? So that compilation time was improved?</p>",
        "id": 200409067,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1591792234
    },
    {
        "content": "<p>I wanted to change the settings for mir-opt so that debug and release used different sets of optimizations, but I haven't been able to seriously sit down and do it because I have a blocker on my side (life basically), which should be freeing me soon to do stuff again but no timeline yet.<br>\nSo if anyone wants to pick that up, write a proposal or whatever, please do, I'll be glad to give kudos and what info I have on that.</p>",
        "id": 200409284,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1591792390
    },
    {
        "content": "<p>I'm seeing big differences in the number of times various generic functions are instantiated in debug vs. opt builds.</p>",
        "id": 202294683,
        "sender_full_name": "njn",
        "timestamp": 1593428052
    },
    {
        "content": "<p>e.g. debug, for <code>ripgrep</code>:</p>",
        "id": 202294717,
        "sender_full_name": "njn",
        "timestamp": 1593428076
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>4593 (3.3%)   265 (6.9%)  core::ptr::drop_in_place\n</code></pre></div>",
        "id": 202294719,
        "sender_full_name": "njn",
        "timestamp": 1593428079
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>2694 (1.9%)    41 (1.1%)  core::option::Option&lt;T&gt;::map\n</code></pre></div>",
        "id": 202294722,
        "sender_full_name": "njn",
        "timestamp": 1593428086
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code> 910 (0.7%)     5 (0.1%)  alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized\n</code></pre></div>",
        "id": 202294731,
        "sender_full_name": "njn",
        "timestamp": 1593428095
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code> 594 (0.4%)     9 (0.2%)  alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory\n</code></pre></div>",
        "id": 202294747,
        "sender_full_name": "njn",
        "timestamp": 1593428104
    },
    {
        "content": "<p>And opt, for the same program:</p>",
        "id": 202294776,
        "sender_full_name": "njn",
        "timestamp": 1593428124
    },
    {
        "content": "<p>17023 (5.1%)   809 (8.4%)  core::ptr::drop_in_place</p>",
        "id": 202294782,
        "sender_full_name": "njn",
        "timestamp": 1593428131
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>5395 (1.6%)    72 (0.8%)  core::option::Option&lt;T&gt;::map\n</code></pre></div>",
        "id": 202294796,
        "sender_full_name": "njn",
        "timestamp": 1593428146
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>6820 (2.1%)    31 (0.3%)  alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized\n</code></pre></div>",
        "id": 202294811,
        "sender_full_name": "njn",
        "timestamp": 1593428156
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>4032 (1.2%)    56 (0.6%)  alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory\n</code></pre></div>",
        "id": 202294852,
        "sender_full_name": "njn",
        "timestamp": 1593428163
    },
    {
        "content": "<p>These are <em>big</em> differences.</p>",
        "id": 202294913,
        "sender_full_name": "njn",
        "timestamp": 1593428234
    },
    {
        "content": "<p>How could <code>current_memory</code> be instantiated 9 times in a debug build, and 56 times in an opt build?</p>",
        "id": 202294936,
        "sender_full_name": "njn",
        "timestamp": 1593428262
    },
    {
        "content": "<p>How does it look with <code>-Ccodegen-units=1</code>? Do we instantiate generics into each CGU?</p>",
        "id": 202294945,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593428281
    },
    {
        "content": "<p>We also share generics across crates in debug builds, but not in opt builds, I believe</p>",
        "id": 202294994,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593428300
    },
    {
        "content": "<p>Maybe it's the stuff that <span class=\"user-mention\" data-user-id=\"124289\">@Hanna Kruppe</span> mentioned above</p>",
        "id": 202295011,
        "sender_full_name": "njn",
        "timestamp": 1593428320
    },
    {
        "content": "<p>Ah, yeah</p>",
        "id": 202295042,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593428365
    },
    {
        "content": "<p>Related datapoint: Building rust-analyzer in release mode with <code>-Zshare-generics</code> reduces build times from 6m 27s to 3m 52s (~40% faster), with a 20% impact to runtime</p>",
        "id": 202299708,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593432160
    },
    {
        "content": "<blockquote>\n<p>20% impact to runtime</p>\n</blockquote>\n<p>That sounds like what took 100 seconds now takes 120; is that what you mean by impact?</p>",
        "id": 202299794,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593432224
    },
    {
        "content": "<p>Yeah</p>",
        "id": 202299902,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593432282
    },
    {
        "content": "<p>I also expect at least some of the <code>drop_in_place</code> instances to go away once MIR shims are more generic <a href=\"https://github.com/rust-lang/rust/issues/69925\">#69925</a></p>",
        "id": 202300187,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593432453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Front-end.3A.20debug.20vs.20opt.20builds/near/202294945\">said</a>:</p>\n<blockquote>\n<p>How does it look with <code>-Ccodegen-units=1</code>? Do we instantiate generics into each CGU?</p>\n</blockquote>\n<p>Doesn't make any difference</p>",
        "id": 202376747,
        "sender_full_name": "njn",
        "timestamp": 1593470584
    },
    {
        "content": "<p><code>-Zshare-generics</code> apparently makes no difference, too</p>",
        "id": 202377193,
        "sender_full_name": "njn",
        "timestamp": 1593470928
    }
]