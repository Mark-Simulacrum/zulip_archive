[
    {
        "content": "<p>I've been working on a <a href=\"https://github.com/willcrichton/rust-slicer\">static analysis</a> pass that requires access to information computed by the borrow checker. Specifically, the outlives-constraints graph. For my tool, I modified rustc to export this graph as a part of the <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TyCtxt.html#method.mir_borrowck\"><code>TyCtxt::mir_borrowck</code></a> query. </p>\n<p>This change isn't huge, it mostly requires shuffling around a few data structures from rustc_mir to rustc_middle so they can be part of the query interface. You can see the full diff here: <a href=\"https://github.com/rust-lang/rust/compare/master...willcrichton:expose-borrowck-info?expand=1\">https://github.com/rust-lang/rust/compare/master...willcrichton:expose-borrowck-info?expand=1</a></p>\n<p>Would it be possible to get this change merged into nightly? I'm not sure who the relevant person is to ask. Are there important considerations against doing it, and/or would an RFC be needed for this kind of change?</p>",
        "id": 248890642,
        "sender_full_name": "Will Crichton",
        "timestamp": 1628534931
    },
    {
        "content": "<p>You can dump <code>outlives</code> relationships  (and many others) to disk on current nightlies with <code>-Z nll-facts</code>. It's not exactly what you have now: due to a shortcoming in <a class=\"stream\" data-stream-id=\"186049\" href=\"/#narrow/stream/186049-t-compiler.2Fwg-polonius\">#t-compiler/wg-polonius</a>,  constraints like \"outlives at all locations\" gets expanded into an <code>outlives</code> constraint at all points in the CFG. This can be changed pretty easily, however. I suspect you'll encounter less friction by building on top of this machinery rather than trying to export plugin-specific data through pre-existing queries, but it depends on how tightly you want to integate with <code>rustc</code>. The latter would probably require an MCP.</p>",
        "id": 248897169,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1628538019
    },
    {
        "content": "<p>(there was also <a href=\"https://github.com/rust-lang/rust/pull/86977\">https://github.com/rust-lang/rust/pull/86977</a> -- easier than dumping and parsing facts on disk)</p>",
        "id": 248900162,
        "sender_full_name": "lqd",
        "timestamp": 1628539408
    },
    {
        "content": "<p>Oh great! That PR subsumes my need, so I will just participate on that thread. Thanks <span class=\"user-mention\" data-user-id=\"118594\">@Dylan MacKenzie (ecstatic-morse)</span> and <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> .</p>",
        "id": 248902759,
        "sender_full_name": "Will Crichton",
        "timestamp": 1628540452
    },
    {
        "content": "<p>niko has already reviewed it, vytautas has since fixed the failing MSVC test, let's trigger bors and see if it fails again</p>",
        "id": 248903478,
        "sender_full_name": "lqd",
        "timestamp": 1628540819
    }
]