[
    {
        "content": "<p>I'm working on <a href=\"https://github.com/rust-lang/rust/issues/77993\">https://github.com/rust-lang/rust/issues/77993</a>, and am wondering if we ever get to mir_build if we see a TyKind::Error?</p>",
        "id": 214470995,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603604935
    },
    {
        "content": "<p>item-bodies checking goes through MIR IIRC</p>",
        "id": 214471412,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605545
    },
    {
        "content": "<p>I'm not familiar with that, can u elaborate?</p>",
        "id": 214471422,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603605566
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 214471431,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605582
    },
    {
        "content": "<p>And this is part of item-bodies checking because the signature of <code>-&gt; impl Trait</code> functions is affected by their body</p>",
        "id": 214471432,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605582
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 214471442,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605601
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 214471443,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605601
    },
    {
        "content": "<p>Item-bodies checking is just 'type checking the bodies of items', which includes functions and constant initializers</p>",
        "id": 214471507,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605652
    },
    {
        "content": "<p>And I think also traits</p>",
        "id": 214471515,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605665
    },
    {
        "content": "<p>Tho will we ever get to that stage if a prev stage (trait_selection or typeck) have type errors? I'd guess no</p>",
        "id": 214471535,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603605713
    },
    {
        "content": "<p>Typeck <em>is</em> item-bodies checking</p>",
        "id": 214471581,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605730
    },
    {
        "content": "<p>Well, among other things</p>",
        "id": 214471592,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603605746
    },
    {
        "content": "<p>Isn't typeck mostly HIR that after writeback goes to rustc_mir_build?</p>",
        "id": 214471760,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603605975
    },
    {
        "content": "<p>I don't know what write back is</p>",
        "id": 214471786,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603606032
    },
    {
        "content": "<p>Also FWIW it looks like this issue has a partial fix already: <a href=\"https://github.com/sexxi-goose/rust/pull/26\">https://github.com/sexxi-goose/rust/pull/26</a></p>",
        "id": 214471794,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603606050
    },
    {
        "content": "<p>That's the end stage of typeck that creates the Typeck Results</p>",
        "id": 214471799,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603606058
    },
    {
        "content": "<p>Yeah, I'm working with her(roxelo) on this</p>",
        "id": 214471803,
        "sender_full_name": "Aman Arora",
        "timestamp": 1603606068
    },
    {
        "content": "<p>This bit is most of what I know about typeck: <a href=\"https://github.com/sexxi-goose/rust/blob/master/src/librustdoc/core.rs#L393-L423\">https://github.com/sexxi-goose/rust/blob/master/src/librustdoc/core.rs#L393-L423</a></p>",
        "id": 214472867,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603607469
    },
    {
        "content": "<p>Note that the compiler doesn't really have stages. So <code>mir_built</code> will invoke everything it needs to work, including typeck. Also arbitrary places could invoke type check of other items if they refer to said other items</p>",
        "id": 214476614,
        "sender_full_name": "oli",
        "timestamp": 1603613325
    }
]