[
    {
        "content": "<p>A placeholder stream for rls/rust-analyer planing meeting. Link to event: <a href=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NzZmMnRoYzQ2MnYxcDZnY28zcHA5cGhyaWsgNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com\" target=\"_blank\" title=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NzZmMnRoYzQ2MnYxcDZnY28zcHA5cGhyaWsgNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com\">https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=NzZmMnRoYzQ2MnYxcDZnY28zcHA5cGhyaWsgNnU1cnJ0Y2U2bHJ0djA3cGZpM2RhbWdqdXNAZw&amp;tmsrc=6u5rrtce6lrtv07pfi3damgjus%40group.calendar.google.com</a></p>\n<p>Goal of the meeting: find out medium-term plan for rls and rust analyzer: support both, focus on one, merge?</p>",
        "id": 176094563,
        "sender_full_name": "matklad",
        "timestamp": 1568896807
    },
    {
        "content": "<p>cc <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span></p>",
        "id": 176094606,
        "sender_full_name": "matklad",
        "timestamp": 1568896836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> that link goes to the Compiler Team Triage Meeting... that's not it, right?</p>",
        "id": 176099935,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568900360
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> indeed, thanks, fixed!</p>",
        "id": 176100046,
        "sender_full_name": "matklad",
        "timestamp": 1568900423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> that's in an hour, right? I'm confused if Google inferred a good time zone here</p>",
        "id": 176114204,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568908823
    },
    {
        "content": "<p>Right, it's in an hour</p>",
        "id": 176114913,
        "sender_full_name": "matklad",
        "timestamp": 1568909306
    },
    {
        "content": "<p>okay, thanks</p>",
        "id": 176115114,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568909426
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 176119366,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568912442
    },
    {
        "content": "<p>Hello!</p>",
        "id": 176119383,
        "sender_full_name": "matklad",
        "timestamp": 1568912456
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> , <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> are you around?</p>",
        "id": 176119410,
        "sender_full_name": "matklad",
        "timestamp": 1568912468
    },
    {
        "content": "<p>yeah</p>",
        "id": 176119558,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568912574
    },
    {
        "content": "<p>ping <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  :)</p>",
        "id": 176119759,
        "sender_full_name": "matklad",
        "timestamp": 1568912736
    },
    {
        "content": "<p>I'm here now</p>",
        "id": 176119846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568912776
    },
    {
        "content": "<p>sorry, had to grab coffee</p>",
        "id": 176119852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568912779
    },
    {
        "content": "<p>Ok, so let's get started</p>",
        "id": 176119892,
        "sender_full_name": "matklad",
        "timestamp": 1568912809
    },
    {
        "content": "<p>Maybe start by outlining our goals?</p>",
        "id": 176119968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568912866
    },
    {
        "content": "<p>Right</p>",
        "id": 176120002,
        "sender_full_name": "matklad",
        "timestamp": 1568912883
    },
    {
        "content": "<p>Maybe even from outlining a problem, as I am not sure what the right goal is</p>",
        "id": 176120046,
        "sender_full_name": "matklad",
        "timestamp": 1568912897
    },
    {
        "content": "<p>The probelm is that we have two independent code bases, rust-analyzer and rls</p>",
        "id": 176120059,
        "sender_full_name": "matklad",
        "timestamp": 1568912912
    },
    {
        "content": "<p>Yep :)</p>",
        "id": 176120089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568912934
    },
    {
        "content": "<p>That is bad for two reasons:</p>\n<ul>\n<li>we need more resources to support them </li>\n<li>users are confused what is the current best option</li>\n</ul>",
        "id": 176120132,
        "sender_full_name": "matklad",
        "timestamp": 1568912959
    },
    {
        "content": "<p>Yep</p>",
        "id": 176120290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913038
    },
    {
        "content": "<p>Unfortunately it is confusing, indeed. I'd like for us to find a common direction</p>",
        "id": 176120300,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913045
    },
    {
        "content": "<p>I'm particularly concerned about users</p>",
        "id": 176120301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913046
    },
    {
        "content": "<p>Though resources are bad too</p>",
        "id": 176120308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913058
    },
    {
        "content": "<p>I guess I think there is a third bullet of kind of \"internal team cohesion\"</p>",
        "id": 176120321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913066
    },
    {
        "content": "<p>Yeah, not only the users are confused, we are also confused :)</p>",
        "id": 176120351,
        "sender_full_name": "matklad",
        "timestamp": 1568913086
    },
    {
        "content": "<p>luckily we're all friendly folk, but this is the kind of split from which bad things <em>could</em> emerge :)</p>",
        "id": 176120354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913088
    },
    {
        "content": "<p>Maybe worth sketching out what some \"end states\" might look like? I don't mean <em>all the way</em> to the end, but kind of \"intermediate end state\"</p>",
        "id": 176120392,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913118
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> you were hypothesizing, for example, that we could maybe have a unified RLS which uses (say) save-analysis and RLS plumbing for somethings, and rust-analyzer for the rest?</p>",
        "id": 176120467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913154
    },
    {
        "content": "<p>Note that, for rust-analyzer, at the moment, there's this important characteristic: it prioritizes experementation over direct user's satisfaction</p>",
        "id": 176120472,
        "sender_full_name": "matklad",
        "timestamp": 1568913157
    },
    {
        "content": "<p>And I think that's a quality we'd like to preserve</p>",
        "id": 176120496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913173
    },
    {
        "content": "<p>Speaking of the medium-term goal mentioned in the OP, I'd like to bring up the elephant in the room, which is possibility of moving off the RLS</p>",
        "id": 176120527,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913194
    },
    {
        "content": "<p>Truthfully it'd be a shame to abandon the existing setup, and I like the fact that it's slow (well maybe not that) but correct</p>",
        "id": 176120545,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913216
    },
    {
        "content": "<p>which sort of ties in with the experimental nature of the RA</p>",
        "id": 176120563,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913226
    },
    {
        "content": "<p>Right so I guess in broad strokes we could either (a) give up on existing RLS, (b) try to combine somehow with r-a, or (c) give up on r-a, but I think we're not really ready for a or c, and we're here to discuss if there is a fruitful version of (b)?</p>",
        "id": 176120647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913265
    },
    {
        "content": "<p>I think that the RA experiment has shown that incremental infra alone will does not offset the cost of the current architecture of the RLS - change -&gt; rebuild the entire compilation DB</p>",
        "id": 176120651,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913269
    },
    {
        "content": "<p>I'm not quite sure <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> what that statement means, can you rephrase?</p>",
        "id": 176120684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913296
    },
    {
        "content": "<p>yes, sorry, meant to follow that up</p>",
        "id": 176120694,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913306
    },
    {
        "content": "<p>I don't think we will really abandon existing things, even if we move off completely from RLS. </p>\n<p>For example, IIRC <code>cargo check</code> is the result of RLS work, and it's here to stay. I also feel that save-analysis is a great tool for offline processing, and that, for example, we should market <code>cargo src</code> more</p>",
        "id": 176120704,
        "sender_full_name": "matklad",
        "timestamp": 1568913309
    },
    {
        "content": "<p>I like the fact that RLS is already shipped with Rustup and works directly with rustc itself (in terms of feature \"parity\")</p>",
        "id": 176120763,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913353
    },
    {
        "content": "<p>but it shows that we can't maintain the current architecture anymore</p>",
        "id": 176120816,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913368
    },
    {
        "content": "<p>so I'd like to propose to maybe move the RLS to leverage the now-existing infrastructure for queries instead of relying on save-analysis</p>",
        "id": 176120865,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913407
    },
    {
        "content": "<p>this would be the more stable of the option whereas the RA could still experiment and find out ways how we could librarify the stuff on the rustc side itself</p>",
        "id": 176120930,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913439
    },
    {
        "content": "<p>but that doesn't solve the 'should I use tool A or B' problem...</p>",
        "id": 176120946,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913451
    },
    {
        "content": "<blockquote>\n<p>but it shows that we can't maintain the current architecture anymore</p>\n</blockquote>\n<p>what shows that?</p>",
        "id": 176120965,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913465
    },
    {
        "content": "<p>(disregard, I may have went in the wrong direction)</p>",
        "id": 176120988,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I think one example is hiridication and recent ICE fixes in the save-analysis generation</p>",
        "id": 176121057,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913506
    },
    {
        "content": "<p>it being an AST walker with additional setup is slightly dated and it shows; I wonder if we could find a way to just use query system directly</p>",
        "id": 176121086,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913531
    },
    {
        "content": "<p>OK, I thought that might be what you meant</p>",
        "id": 176121089,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913534
    },
    {
        "content": "<p>I don't think not touching existing setup is required, even if we pursue the offline indexing feature a la LSIF/current save-analysis index file</p>",
        "id": 176121169,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913576
    },
    {
        "content": "<p>existing setup = save-analysis, right?</p>",
        "id": 176121188,
        "sender_full_name": "matklad",
        "timestamp": 1568913599
    },
    {
        "content": "<p>Certainly in the past we had thought about trying to convert save-analysis to be built from queries</p>",
        "id": 176121236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913606
    },
    {
        "content": "<p>as an intermediate step</p>",
        "id": 176121254,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913615
    },
    {
        "content": "<p>that seems <em>somewhat</em> orthogonal tho</p>",
        "id": 176121265,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913625
    },
    {
        "content": "<p>Yes, let's get back to that later</p>",
        "id": 176121280,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913643
    },
    {
        "content": "<p>(well I guess it depends on the specifics of what we do)</p>",
        "id": 176121283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913647
    },
    {
        "content": "<p>Yeah, I guess it makes sense to canvas overall approaches available to us</p>",
        "id": 176121319,
        "sender_full_name": "matklad",
        "timestamp": 1568913680
    },
    {
        "content": "<p>In any case, I'm certainly curious if there is a way to put the two systems into one unified harness, and what that would mean. I definitely agree with <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> we want to preserve the \"distributed through rustup\" and \"correct\" nature, and agree with <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> that -- ideally -- we'd continue to enable experimentation in r-a without being locked into \"back-compat\".</p>",
        "id": 176121351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913708
    },
    {
        "content": "<p>er, <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> I mean, not <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 176121356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913717
    },
    {
        "content": "<p>an obvious approach would be to use RA from RLS as a library, for completions, code actions etc.</p>",
        "id": 176121484,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568913782
    },
    {
        "content": "<p>it might use a lot of memory to run both RA and the compiler in parallel, of course ;)</p>",
        "id": 176121511,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568913802
    },
    {
        "content": "<p>one idea that was hovering around was to use RA as the completion engine in the RLS - you could opt-in into the experimental work and would clearly see more improvements over the existing Racer, while still it being a separate thing</p>",
        "id": 176121517,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913806
    },
    {
        "content": "<p>or, the other way around, add the RLS out-of-process compilation to RA</p>",
        "id": 176121541,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568913823
    },
    {
        "content": "<p>Another interesting idea is, from RA side, to lean exclusively on <code>cargo check</code> to get correct error highlighting.</p>",
        "id": 176121610,
        "sender_full_name": "matklad",
        "timestamp": 1568913854
    },
    {
        "content": "<p>wouldn't it kill the main benefit which is latency?</p>",
        "id": 176121618,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913861
    },
    {
        "content": "<p>I think the main benefit over racer would be better completions ;)</p>",
        "id": 176121655,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568913901
    },
    {
        "content": "<blockquote>\n<p>wouldn't it kill the main benefit which is latency?</p>\n</blockquote>\n<p>well, just for error reporting I guess</p>",
        "id": 176121676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568913913
    },
    {
        "content": "<p>I meant RLS in RA</p>",
        "id": 176121698,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913930
    },
    {
        "content": "<p>I think <code>cargo check</code> is sort of good enough now, right? <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span></p>",
        "id": 176121717,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913948
    },
    {
        "content": "<p>yeah</p>",
        "id": 176121729,
        "sender_full_name": "matklad",
        "timestamp": 1568913961
    },
    {
        "content": "<p>with obvious pitfall of not being able to use the in-memory text buffers</p>",
        "id": 176121730,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913961
    },
    {
        "content": "<p>(<a href=\"https://github.com/rust-lang/rust/issues/59976\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59976\">https://github.com/rust-lang/rust/issues/59976</a> would be nice to have)</p>",
        "id": 176121796,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568913997
    },
    {
        "content": "<p>that, and it's only supported in the VSCode plugin, and we can't provide code actions for the fixes provided by rustc (I think?)</p>",
        "id": 176121799,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1568914004
    },
    {
        "content": "<p>so, besides error reporting, RLS today is using save-analysis for things like jump-to-def, right?</p>",
        "id": 176121804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914008
    },
    {
        "content": "<p>It lands us in a pretty sweet spot:</p>\n<ul>\n<li>error reporting is precise</li>\n<li>completion is fast</li>\n<li>we don't depend on rustc direclty</li>\n</ul>",
        "id": 176121808,
        "sender_full_name": "matklad",
        "timestamp": 1568914011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> we can provide code actions. In fact, VS Code plugin already implements it</p>",
        "id": 176121836,
        "sender_full_name": "matklad",
        "timestamp": 1568914032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span> we translate these fixes in rustc diagnostics to code actions in the RLS</p>",
        "id": 176121864,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914050
    },
    {
        "content": "<p>but it is 100% true that we should move <code>cargo check</code> from typescript to rust</p>",
        "id": 176121871,
        "sender_full_name": "matklad",
        "timestamp": 1568914054
    },
    {
        "content": "<blockquote>\n<p>so, besides error reporting, RLS today is using save-analysis for things like jump-to-def, right?</p>\n</blockquote>\n<p>Yeah, RLS uses index for everything except completion</p>",
        "id": 176121951,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914085
    },
    {
        "content": "<p>if Racer is enabled, we also enable a fallback go-to-def if index doesn't find anything</p>",
        "id": 176121974,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> I guess supporting other build systems becomes a problem but I feel like it's 2018 all over again and it's a non-issue for now (at least in the experimental phase)</p>",
        "id": 176122062,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914178
    },
    {
        "content": "<blockquote>\n<p>It lands us in a pretty sweet spot:</p>\n</blockquote>\n<p>There's still a pretty important thing missing in this setup: find usages. You can't use <code>cargo check</code> for <code>find usages</code>, and the feature in <code>rust-analyzer</code> simply does not exist yet :) (and, when we add it, it woun't be precise for a long time)</p>",
        "id": 176122066,
        "sender_full_name": "matklad",
        "timestamp": 1568914183
    },
    {
        "content": "<p>(if we decide to only lean on <code>cargo check</code>, that is)</p>",
        "id": 176122076,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914192
    },
    {
        "content": "<p>so it's surprising how the critical stuff user wants most of the time is name resolution - that alone gives us jump to def, find all refs (which possibly powers rename) etc.</p>",
        "id": 176122218,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914263
    },
    {
        "content": "<p>Yeah, the fact that <code>cargo check</code> won't work for facebook is problem though... But I think we can just configure the <code>cargo check</code> command line, so that FB replaces it with <code>buck build</code>?</p>",
        "id": 176122222,
        "sender_full_name": "matklad",
        "timestamp": 1568914265
    },
    {
        "content": "<p>so, adding <code>cargo check</code> check to r-a doesn't really require anything from the existing RLS infra, except (I guess) maybe the VFS supoprt?</p>",
        "id": 176122232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> correct!</p>",
        "id": 176122259,
        "sender_full_name": "matklad",
        "timestamp": 1568914292
    },
    {
        "content": "<p>what does save-analysis give that ra's query infra can't do?</p>",
        "id": 176122273,
        "sender_full_name": "Jeremy Kolb",
        "timestamp": 1568914304
    },
    {
        "content": "<p>correct \"find usages\" and \"rename\" are big ones</p>",
        "id": 176122339,
        "sender_full_name": "matklad",
        "timestamp": 1568914325
    },
    {
        "content": "<p>(it is generated by the compiler, also)</p>",
        "id": 176122352,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914331
    },
    {
        "content": "<p>(RLS also reimplements the VFS support for rustc for the purposes of out-of-process compilation)</p>",
        "id": 176122356,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914336
    },
    {
        "content": "<p>I thought the vision that <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> painted of \"use r-a instead of racer for completions\" was interesting. How far is that from \"add cargo-check to r-a\"?</p>",
        "id": 176122412,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914373
    },
    {
        "content": "<p>I guess the main difference is that we'd still be using save-analysis to do things like find all usages etc</p>",
        "id": 176122460,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914399
    },
    {
        "content": "<p>Yes</p>",
        "id": 176122474,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914408
    },
    {
        "content": "<p>one immediate concern is that we'd probably duplicate vfs/projet layout detection etc. setup</p>",
        "id": 176122504,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914426
    },
    {
        "content": "<p>And the vfs itself.</p>",
        "id": 176122575,
        "sender_full_name": "matklad",
        "timestamp": 1568914450
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> does RA support one-shot queries a la racer? e.g. \"complete at line X col Y\"</p>",
        "id": 176122576,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914451
    },
    {
        "content": "<p>Well, it does, but if you don't have a persistent process, that would mean waiting a minute for the initial analysis</p>",
        "id": 176122622,
        "sender_full_name": "matklad",
        "timestamp": 1568914480
    },
    {
        "content": "<p>ah shoot.</p>",
        "id": 176122635,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914493
    },
    {
        "content": "<p>it'd be good if we juts provide the project layout and the vfs to the RA itself</p>",
        "id": 176122658,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914508
    },
    {
        "content": "<p>I guess the simplest hack to integrate ra and RLS would be to spin ra <em>process</em> and relay some LSP messages to it :)</p>",
        "id": 176122677,
        "sender_full_name": "matklad",
        "timestamp": 1568914521
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> you can do that, there's nothing in the core of ra (<code>ra_ide_api</code> crate) that cares about project structure or vfs</p>",
        "id": 176122782,
        "sender_full_name": "matklad",
        "timestamp": 1568914587
    },
    {
        "content": "<p>but the obvious problem is that rls's vfs is not like ra's vfs.</p>",
        "id": 176122795,
        "sender_full_name": "matklad",
        "timestamp": 1568914604
    },
    {
        "content": "<blockquote>\n<p>I guess the simplest hack to integrate ra and RLS would be to spin ra <em>process</em> and relay some LSP messages to it :)</p>\n</blockquote>\n<p>lol :)</p>",
        "id": 176122802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914613
    },
    {
        "content": "<p>it actually... makes sense in a way <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> this would allow us to choose between Racer or RA for the completion engine</p>",
        "id": 176122804,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914615
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> hm, but, if we move to lazy file loading, that would make the two vfses pretty close</p>",
        "id": 176122822,
        "sender_full_name": "matklad",
        "timestamp": 1568914629
    },
    {
        "content": "<p>the user wouldn't have to pay the cost (we'd make it opt-in)</p>",
        "id": 176122831,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I am a big fan of just spinning things in another process :D</p>",
        "id": 176122868,
        "sender_full_name": "matklad",
        "timestamp": 1568914663
    },
    {
        "content": "<p>yeah I mean it's kind of brilliant :)</p>",
        "id": 176122885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914673
    },
    {
        "content": "<p>I imagine this would work pretty well - we could use it as a fallback as well</p>",
        "id": 176122890,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914677
    },
    {
        "content": "<p>the same way we use Racer</p>",
        "id": 176122940,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914684
    },
    {
        "content": "<p>it obviously doesn't solve the \"2 codebases\" scenario</p>",
        "id": 176122954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914694
    },
    {
        "content": "<p>but it's not like anything really will besides further \"library-ification\" ? I guess maybe we might be able to merge more things (notably VFS)</p>",
        "id": 176122981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914724
    },
    {
        "content": "<p>well one idea would be to ship common infrastructure crates like vfs</p>",
        "id": 176122992,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914730
    },
    {
        "content": "<p>right, basically \"library-ify\" those</p>",
        "id": 176123005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568914738
    },
    {
        "content": "<p>seems like a good direction =)</p>",
        "id": 176123072,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914789
    },
    {
        "content": "<p>VFS is a hard target for librarification, as the right design is not really well understood</p>",
        "id": 176123079,
        "sender_full_name": "matklad",
        "timestamp": 1568914791
    },
    {
        "content": "<p>it's not that much of code either</p>",
        "id": 176123087,
        "sender_full_name": "matklad",
        "timestamp": 1568914800
    },
    {
        "content": "<p>it might be cool to share the LS protocol implementaiton itself though</p>",
        "id": 176123178,
        "sender_full_name": "matklad",
        "timestamp": 1568914844
    },
    {
        "content": "<p>our is published at <a href=\"https://crates.io/crates/lsp-server\" target=\"_blank\" title=\"https://crates.io/crates/lsp-server\">https://crates.io/crates/lsp-server</a></p>",
        "id": 176123194,
        "sender_full_name": "matklad",
        "timestamp": 1568914857
    },
    {
        "content": "<p>I think sharing infrastructure crates like this one is an obvious step in terms of deduplication</p>",
        "id": 176123247,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914900
    },
    {
        "content": "<p>I feel like the discussion so far makes clear that we don't have a clear understanding where to go... :(</p>",
        "id": 176123263,
        "sender_full_name": "matklad",
        "timestamp": 1568914913
    },
    {
        "content": "<p>question is does it solve the lack of resources problem</p>",
        "id": 176123267,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568914915
    },
    {
        "content": "<p>can we try to skech into a hackmd the various options we've come up with so far</p>",
        "id": 176123403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> what is there extra in the vscode extension that RA doesn't have? (like cargo check)</p>",
        "id": 176123404,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915006
    },
    {
        "content": "<p><a href=\"https://hackmd.io/S5wub4mfToSnnLGvK3I-ew\" target=\"_blank\" title=\"https://hackmd.io/S5wub4mfToSnnLGvK3I-ew\">hackmd document</a></p>",
        "id": 176123421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you are a genius!</p>",
        "id": 176123483,
        "sender_full_name": "matklad",
        "timestamp": 1568915044
    },
    {
        "content": "<p>I'm going to start going back through the minutes and try to add some notes</p>",
        "id": 176123491,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915047
    },
    {
        "content": "<blockquote>\n<p>you are a genius!</p>\n</blockquote>\n<p>why thank you, I agree</p>",
        "id": 176123514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> how hard would it be to have the RLS defer name resolution to rust-analyzer?</p>",
        "id": 176123621,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915154
    },
    {
        "content": "<p>well now we defer it to rustc, which generates the entire thing RLS relies on</p>",
        "id": 176123710,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915187
    },
    {
        "content": "<p>do you mean to make it be the backend instead of rustc? I'm not sure I understand</p>",
        "id": 176123724,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915200
    },
    {
        "content": "<p>do you mean the 'use RA instead of Racer' option?</p>",
        "id": 176123749,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915224
    },
    {
        "content": "<p>Right, if I understood, we discussed that in the context of \"completions\"</p>",
        "id": 176123872,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915295
    },
    {
        "content": "<p>but I wasn't clear if that would also be useful for (e.g.) jump-to-def</p>",
        "id": 176123882,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915304
    },
    {
        "content": "<p>I guess I'm partly asking \"what does RLS use racer for\"</p>",
        "id": 176123896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915315
    },
    {
        "content": "<p>yes - completions and jump-to-def</p>",
        "id": 176123916,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915326
    },
    {
        "content": "<p>we could spin up a thread and send LSP requests</p>",
        "id": 176123950,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915350
    },
    {
        "content": "<p>probably bigger overhead than just setting up Racer in-process but IIUC these are just plumbing issues</p>",
        "id": 176123985,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915380
    },
    {
        "content": "<p>I can't think of an architectural hurdle we'd need to overcome</p>",
        "id": 176124107,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915427
    },
    {
        "content": "<p>ok, there are various notes in <a href=\"https://hackmd.io/S5wub4mfToSnnLGvK3I-ew?edit\" target=\"_blank\" title=\"https://hackmd.io/S5wub4mfToSnnLGvK3I-ew?edit\">the hackmd</a> now</p>",
        "id": 176124290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915530
    },
    {
        "content": "<p>anything missing?</p>",
        "id": 176124296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915532
    },
    {
        "content": "<p>/me looking</p>",
        "id": 176124347,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915560
    },
    {
        "content": "<p>I don't have a good handle for how complex the second option would really be</p>",
        "id": 176124367,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915576
    },
    {
        "content": "<p>I'm also curious about the \"external build system\" thing --</p>",
        "id": 176124409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915599
    },
    {
        "content": "<p>is this something that RLS <em>today</em> supports at all?</p>",
        "id": 176124417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915605
    },
    {
        "content": "<p>I was under the impression that RLS was pretty tied to cargo</p>",
        "id": 176124430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915611
    },
    {
        "content": "<p>yep, thankfully</p>",
        "id": 176124565,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915699
    },
    {
        "content": "<p>we can get anything that resembles a <code>cargo --build-plan</code> or a set of existing save-analysis files (which now contain invocation information) from which we can derive a build plan</p>",
        "id": 176124621,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915737
    },
    {
        "content": "<p>I think it doesn't work well with out-of-process compilation though, as it predates that</p>",
        "id": 176124704,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915783
    },
    {
        "content": "<p>so it'd require a bit of tinkering</p>",
        "id": 176124715,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915791
    },
    {
        "content": "<p>basically my fear is this: is trying to combine the two some sort of behemoth that will be unwieldy and turn out to be slow, churn battery power or something, etc?</p>",
        "id": 176124741,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915802
    },
    {
        "content": "<p>I like the idea of librarification all across the board</p>",
        "id": 176124743,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915803
    },
    {
        "content": "<p>RLS + RA?</p>",
        "id": 176124762,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915815
    },
    {
        "content": "<p>I guess a third alternative is to leave things the way they are <em>but</em> try to find libraries that are worth extracting (I think this is primarily VFS?)</p>",
        "id": 176124789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915834
    },
    {
        "content": "<p>I think it'd be pretty fast (in terms of latency), memory in fact might be worse</p>",
        "id": 176124811,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915849
    },
    {
        "content": "<p>I mean it seems like it'd have to be worse</p>",
        "id": 176124823,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915860
    },
    {
        "content": "<p>we're running rustc <em>and</em> rust-analyzer, right? :)</p>",
        "id": 176124831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915869
    },
    {
        "content": "<p>I guess maybe not worse than <code>cargo check</code></p>",
        "id": 176124836,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915872
    },
    {
        "content": "<p>well true</p>",
        "id": 176124914,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915900
    },
    {
        "content": "<p>I imagine we could reverse the fallback and rely on RA first</p>",
        "id": 176124931,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yeah, I think just tying two things together will only make resources problem worse, as changes would need to be coordinated between ra and rls</p>",
        "id": 176124933,
        "sender_full_name": "matklad",
        "timestamp": 1568915909
    },
    {
        "content": "<p>resources = human resources</p>",
        "id": 176124952,
        "sender_full_name": "matklad",
        "timestamp": 1568915927
    },
    {
        "content": "<p>which would bring the reduced latency and missing features from rustc (as find all refs)</p>",
        "id": 176124958,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568915930
    },
    {
        "content": "<p>I am also skeptical about sharing libraries between RLS and rust-analyzer: everything that can be reasonably shared seems pretty thin</p>",
        "id": 176124989,
        "sender_full_name": "matklad",
        "timestamp": 1568915956
    },
    {
        "content": "<p>the biggest thing, the defition of protocol types, is already shared via the crate by <span class=\"user-mention silent\" data-user-id=\"219477\">Markus Westerlind</span></p>",
        "id": 176125040,
        "sender_full_name": "matklad",
        "timestamp": 1568915989
    },
    {
        "content": "<p>right</p>",
        "id": 176125052,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568915994
    },
    {
        "content": "<p>I think it could potentially decrease the area of focus - RA work could focus on experimenting with the frontend</p>",
        "id": 176125146,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916017
    },
    {
        "content": "<p>whereas if one wants to use RA they could use the same VFS LSP and probably extension if we could somehow move more things into Rust and out of TS</p>",
        "id": 176125169,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916037
    },
    {
        "content": "<p>I wonder what RLS should focus then, though...</p>",
        "id": 176125189,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916050
    },
    {
        "content": "<p>bridging into the rustc queries?</p>",
        "id": 176125196,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916057
    },
    {
        "content": "<p>It seems like we can save resources more by sharing between RLS and rustc (removing save-analysis, which might make things simpler?) and between rust-analyzer and rustc (by sharing actualy \"what does Rust code mean\" logic)</p>",
        "id": 176125212,
        "sender_full_name": "matklad",
        "timestamp": 1568916065
    },
    {
        "content": "<p>yeah, that's a third bullet we didn't really dive into much</p>",
        "id": 176125242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568916090
    },
    {
        "content": "<p>I think removing the save-analysis setup as it is now would be a good step</p>",
        "id": 176125373,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916156
    },
    {
        "content": "<p>that sort of makes sense - RLS would ask rustc and RA could experiment with different bits of frontend</p>",
        "id": 176125408,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916183
    },
    {
        "content": "<p>hopefully RLS transition could be a one-off thing and we could all focus on the RA/frontend bits =)</p>",
        "id": 176125463,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916217
    },
    {
        "content": "<blockquote>\n<p>I think removing the save-analysis setup as it is now would be a good step</p>\n</blockquote>\n<p>I'm not 100% sure what it would be replaced with, but I gotta run I think</p>",
        "id": 176125494,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568916240
    },
    {
        "content": "<p>maybe we want to discuss more another time?</p>",
        "id": 176125534,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568916245
    },
    {
        "content": "<p>(or you all can continue, I'll catch up)</p>",
        "id": 176125548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568916249
    },
    {
        "content": "<p>I think it makes sense to take a pause and edit that shared markdown document</p>",
        "id": 176125582,
        "sender_full_name": "matklad",
        "timestamp": 1568916276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> could you add something to it about why we want to move off save analysis.</p>",
        "id": 176125605,
        "sender_full_name": "matklad",
        "timestamp": 1568916299
    },
    {
        "content": "<p>yeah, will do</p>",
        "id": 176125623,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916309
    },
    {
        "content": "<p>?</p>",
        "id": 176125625,
        "sender_full_name": "matklad",
        "timestamp": 1568916310
    },
    {
        "content": "<p>er, sorry</p>",
        "id": 176125667,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916344
    },
    {
        "content": "<p>you mean here?</p>",
        "id": 176125671,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916346
    },
    {
        "content": "<p>(thought you mean the doc :p)</p>",
        "id": 176125687,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916359
    },
    {
        "content": "<p>so technically the reason we used save-analysis in the first place is because the infra setup was in its infancy and we wanted a working solution then</p>",
        "id": 176125759,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916393
    },
    {
        "content": "<p>incremental does help but many times we redo the entire analysis continuously, as user happily types away</p>",
        "id": 176125823,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916441
    },
    {
        "content": "<p>nope, in the doc</p>",
        "id": 176125860,
        "sender_full_name": "matklad",
        "timestamp": 1568916463
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> did mean the doc :)</p>",
        "id": 176125863,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1568916464
    },
    {
        "content": "<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 176125869,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916471
    },
    {
        "content": "<p>will do, give me a sec</p>",
        "id": 176125940,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568916498
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> but I'll will answer you here :-)</p>\n<p>I agree that save-analysis is just a fundamentally wrong thing for IDEs, so, if we want to maintain RLS, we should probably move off it for this reason.</p>\n<p>At the same time, I feel like save-analysis is a pretty important thing for use-cases <em>other</em> than IDEs. Like, being able to dump all that compiler knows about a crate into JSON and then process it with some other tool is a cool use-case. In particular, I feel that <code>cargo-src</code> project might be underused. I also feel like save-analysis might be the right approach for rustdoc 2.0. However, if right now nobody besides RLS uses it, it doesn't make much sense to maintain it.</p>",
        "id": 176126428,
        "sender_full_name": "matklad",
        "timestamp": 1568916793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> we talked about this a bit and I agree =) it's hard to marry it to a single data format, as different tools want different data (cargo src, rustdoc 2.0, callgraph generating tools etc.) so maybe a more stable way to query these things might be more appropriate</p>",
        "id": 176126838,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568917040
    },
    {
        "content": "<p>(then there is a question how stable it is so rustc doesn't need to worry about back-compat <em>that</em> much)</p>",
        "id": 176126902,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1568917080
    }
]