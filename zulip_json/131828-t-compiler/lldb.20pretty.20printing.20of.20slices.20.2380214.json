[
    {
        "content": "<p>Is there some way to accomplish what <a href=\"https://github.com/rust-lang/rust/issues/80214\">#80214</a> wants or should it just be closed? I don't know enough about lldb to know whether it's feasible.</p>",
        "id": 220503235,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608440419
    },
    {
        "content": "<p>does llvm even interpret slices this way?</p>",
        "id": 220503392,
        "sender_full_name": "oliver",
        "timestamp": 1608440643
    },
    {
        "content": "<p>What do you mean?</p>",
        "id": 220503477,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608440783
    },
    {
        "content": "<p>what is the llvm view of a Rust fat pointer?</p>",
        "id": 220503547,
        "sender_full_name": "oliver",
        "timestamp": 1608440898
    },
    {
        "content": "<p>I have no clue <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 220503563,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608440972
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/80214#issuecomment-748563801\">Apparently</a> <a href=\"https://users.rust-lang.org/t/debug-in-vscode-cant-show-the-slice-value/53009/10\">it works with GDB</a>.</p>",
        "id": 220503701,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608441218
    },
    {
        "content": "<p>this is a little dated: <a href=\"https://michaelwoerister.github.io/2015/03/27/rust-xxdb.html\">https://michaelwoerister.github.io/2015/03/27/rust-xxdb.html</a></p>",
        "id": 220503706,
        "sender_full_name": "oliver",
        "timestamp": 1608441237
    },
    {
        "content": "<p>\"many other things work differently under the hood in Rust than in C and the debugger will balk at your trying to use these constructs, among them such fundamental things as accessing elements in a slice, accessing fields of an enum or tuple, anything that uses auto-dereferencing, or calling Rust-defined methods, functions, or closures.\"</p>",
        "id": 220503748,
        "sender_full_name": "oliver",
        "timestamp": 1608441284
    },
    {
        "content": "<p>\"In order to support these crucial features, someone will have to go and directly extend the LLDB and GDB codebases.\"</p>",
        "id": 220503752,
        "sender_full_name": "oliver",
        "timestamp": 1608441303
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/131828-t-compiler/topic/lldb.20pretty.20printing.20of.20slices.20.2380214/near/220503701\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/80214#issuecomment-748563801\">Apparently</a> <a href=\"https://users.rust-lang.org/t/debug-in-vscode-cant-show-the-slice-value/53009/10\">it works with GDB</a>.</p>\n</blockquote>\n<p>gdb is maybe a more iterated on tool, though lldb is sometimes more <br>\nconvenient/useful if one is working with llvm</p>",
        "id": 220503815,
        "sender_full_name": "oliver",
        "timestamp": 1608441416
    },
    {
        "content": "<p>I think we have a custom wrapper that should handle things like slices correctly; that's why it works in GDB. I guess the LLDB one doesn't work or it isn't implemented there?</p>",
        "id": 220504195,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608442096
    },
    {
        "content": "<p>Ah, from the first paragraph of that post:</p>\n<blockquote>\n<p>Unbeknownst to most Rustaceans, two little helpers have found their way into almost any Rust installation over the last few months: rust-gdb and rust-lldb. These are two small wrapper scripts that will start the underlying debugger with Rust pretty printers enabled. The pretty printers are Python-based extensions that hook into the debuggers output rendering, hopefully making it easier to inspect your Rust program’s runtime state. This post will describe what rust-gdb and rust-lldb can do for you, what their limits are, and how to use them (hint: it’s easy!)</p>\n</blockquote>",
        "id": 220504203,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608442132
    },
    {
        "content": "<p>Update: OP says <a href=\"https://github.com/rust-lang/rust/issues/80214\">#80214</a> has been fixed <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 229410470,
        "sender_full_name": "Noah Lev",
        "timestamp": 1615255991
    }
]