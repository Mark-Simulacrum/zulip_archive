[
    {
        "content": "<p>Today I came up with this example, which seems very strange to me</p>",
        "id": 203857748,
        "sender_full_name": "matklad",
        "timestamp": 1594745529
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dbe121888e0bb85752f0c5c4bfc694b1\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dbe121888e0bb85752f0c5c4bfc694b1</a></p>",
        "id": 203857756,
        "sender_full_name": "matklad",
        "timestamp": 1594745532
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// This doesn&#39;t work</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">B</span>: <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">#[allow(clippy::trivial_regex)]</span><span class=\"w\"> </span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"c1\">// This works O_o</span>\n<span class=\"n\">lazy_static</span>::<span class=\"n\">lazy_static</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">ref</span><span class=\"w\"> </span><span class=\"n\">A</span>: <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">#[allow(clippy::trivial_regex)]</span><span class=\"w\"> </span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 203857814,
        "sender_full_name": "matklad",
        "timestamp": 1594745550
    },
    {
        "content": "<p>Is this intended behavior?</p>",
        "id": 203857839,
        "sender_full_name": "matklad",
        "timestamp": 1594745557
    },
    {
        "content": "<p>Hm, seems like this is actually unrelated to MBE, minimized example:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">works</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"cp\">#[allow(clippy::trivial_regex)]</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">doesnt</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"cp\">#[rustfmt::skip]</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 203858309,
        "sender_full_name": "matklad",
        "timestamp": 1594745785
    },
    {
        "content": "<p>Seen in the wild here: <a href=\"https://github.com/getsentry/relay/blob/3f2d0c96a8ffe427f0c45f1960674ffae5890b88/relay-general/src/pii/processor.rs#L21-L24\">https://github.com/getsentry/relay/blob/3f2d0c96a8ffe427f0c45f1960674ffae5890b88/relay-general/src/pii/processor.rs#L21-L24</a></p>",
        "id": 203858550,
        "sender_full_name": "matklad",
        "timestamp": 1594745906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> attributes on expressions were accidentally stabilized in a few cases (detailed at <a href=\"https://doc.rust-lang.org/nightly/reference/expressions.html#expression-attributes\">https://doc.rust-lang.org/nightly/reference/expressions.html#expression-attributes</a>).  It looks like tool-attributes on expressions weren't stabilized, which is very curious!  I had not seen that difference before.  Looks like the restriction also applies to proc-macros.  Strange!</p>",
        "id": 203863995,
        "sender_full_name": "Eric Huss",
        "timestamp": 1594748573
    }
]