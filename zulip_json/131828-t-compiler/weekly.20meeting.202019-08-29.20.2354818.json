[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will be starting in 30 minutes</p>",
        "id": 174454059,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567085669
    },
    {
        "content": "<p>I will be doing <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-08-29.20.2354818\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-08-29.20.2354818\">pre-triage in a parallel topic</a></p>",
        "id": 174454146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567085722
    },
    {
        "content": "<p>Today's working groups are:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"491\">@WG-nll</span> -- perhaps <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is around? Otherwise, <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> or I can give an update. </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1117\">@WG-parallel-rustc</span> -- I don't think <span class=\"user-mention\" data-user-id=\"116010\">@Aaron Turon</span> is around. I guess <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> and/or I can give a brief update.</li>\n</ul>\n<p>Last week (which we missed) was, if anybody would care to give brief updates on these topics:</p>\n<ul>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1095\">@T-compiler/WG-meta</span> </li>\n<li><span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span></li>\n</ul>",
        "id": 174454357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567085856
    },
    {
        "content": "<h1>Announcements</h1>",
        "id": 174454379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567085868
    },
    {
        "content": "<p>In the run-up to the meeting, feel free to leave announcements, but try to keep discussion relatively minimal to help ensure everyone sees the updates themselves. :)</p>",
        "id": 174454401,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567085882
    },
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> -- triage meeting starting now</p>",
        "id": 174456522,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087267
    },
    {
        "content": "<p>Feel free to leave announcements for the next few minutes as folks arrive</p>",
        "id": 174456541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087279
    },
    {
        "content": "<p>I'll do wg-mir-opt updates</p>",
        "id": 174456611,
        "sender_full_name": "oli",
        "timestamp": 1567087325
    },
    {
        "content": "<p>OK, let's get started I guess.</p>",
        "id": 174456724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087426
    },
    {
        "content": "<p>First off, in the pre-triage effort, I didn't even manage to make it through the list of nominated issues.</p>",
        "id": 174456799,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087456
    },
    {
        "content": "<p>So we may return to that later on :)</p>",
        "id": 174456803,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087461
    },
    {
        "content": "<p><em>But</em> we did see something of a trend. There were at least two issues that seemed to be due to an LLVM upgrade:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/63959\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63959\">#63959</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/63791\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63791\">#63791</a></li>\n</ul>",
        "id": 174456825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087486
    },
    {
        "content": "<p>We've talked on and off about this idea of an \"ICE-breaker\" effort -- I think it would make sense to try and \"repurpose\" <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> to help out with tracking and resolving this issues? This probably doesn't mean that much but maybe we can promote the concept and get a few more people beyond <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> and <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>, and create an official github team so it can be easily cc'd</p>",
        "id": 174456953,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087572
    },
    {
        "content": "<p>I'm not even sure if this is <em>repurposing</em> exactly</p>",
        "id": 174456967,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087585
    },
    {
        "content": "<p>it seems in line with the WG's current goals</p>",
        "id": 174457015,
        "sender_full_name": "mw",
        "timestamp": 1567087625
    },
    {
        "content": "<p>Anyway assuming nobody objects I'm going to try to do that later on :)</p>",
        "id": 174457024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087630
    },
    {
        "content": "<p>I think this mostly means creating the GH team and making an announcement asking for folks who are interested to \"sign up\" for notifications</p>",
        "id": 174457045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087650
    },
    {
        "content": "<p>OK, moving on.</p>",
        "id": 174457053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087658
    },
    {
        "content": "<p>(If this works out, maybe that's something we can do more of -- creating \"ICE-breaker\" teams focused on particular areas of the compiler)</p>",
        "id": 174457095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087680
    },
    {
        "content": "<p>So let's look at </p>\n<h1>Beta Nominations</h1>",
        "id": 174457170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087704
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\">List of nominated PRs</a></p>",
        "id": 174457182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087718
    },
    {
        "content": "<p>I'm going to write out the nominated PRs one after the other, then people can add emojis, and/or leave comments about particular PRs</p>",
        "id": 174457233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087760
    },
    {
        "content": "<blockquote>\n<p>Account for doc comments coming from proc macros without spans <a href=\"https://github.com/rust-lang/rust/issues/63930\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63930\">#63930</a></p>\n</blockquote>",
        "id": 174457234,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087761
    },
    {
        "content": "<p>this is missing a PR I nominated today...</p>",
        "id": 174457245,
        "sender_full_name": "mw",
        "timestamp": 1567087768
    },
    {
        "content": "<blockquote>\n<p>fix nounwind attribute logic <a href=\"https://github.com/rust-lang/rust/issues/63909\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63909\">#63909</a></p>\n</blockquote>",
        "id": 174457247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087768
    },
    {
        "content": "<blockquote>\n<p>Fix nested eager expansions in arguments of <code>format_args</code> <a href=\"https://github.com/rust-lang/rust/issues/63717\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63717\">#63717</a></p>\n</blockquote>",
        "id": 174457258,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087775
    },
    {
        "content": "<blockquote>\n<p>Don't access a static just for its size and alignment <a href=\"https://github.com/rust-lang/rust/issues/62982\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62982\">#62982</a></p>\n</blockquote>",
        "id": 174457266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087784
    },
    {
        "content": "<blockquote>\n<p>fix nounwind attribute logic <a href=\"https://github.com/rust-lang/rust/issues/63909\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63909\">#63909</a></p>\n</blockquote>\n<p>i-nominated for t-lang (beta-nominated for t-compiler)</p>",
        "id": 174457302,
        "sender_full_name": "centril",
        "timestamp": 1567087802
    },
    {
        "content": "<p>OK, I left that as just X since I guess there's still some decision making required</p>",
        "id": 174457386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087854
    },
    {
        "content": "<blockquote>\n<p>debuginfo: give unique names to closure and generator types <a href=\"https://github.com/rust-lang/rust/issues/63875\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63875\">#63875</a></p>\n</blockquote>",
        "id": 174457452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is that the one that was missing? the GH query seems to not be showing me closed things... even though I think it should...?</p>",
        "id": 174457505,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087925
    },
    {
        "content": "<p>OK that's a lot, I'm going to take a minute to read the PRs now :P</p>",
        "id": 174457546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567087966
    },
    {
        "content": "<p>that's the one, yes. I added the t-compiler tag just now.</p>",
        "id": 174457578,
        "sender_full_name": "mw",
        "timestamp": 1567087998
    },
    {
        "content": "<p>OK, I don't see any X marks</p>",
        "id": 174457724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088075
    },
    {
        "content": "<p>wasn't <a href=\"https://github.com/rust-lang/rust/issues/62982\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62982\">#62982</a> already voted on before ?</p>",
        "id": 174457737,
        "sender_full_name": "mw",
        "timestamp": 1567088081
    },
    {
        "content": "<p>so I'm going to mark them all as accepted unless somebody complains :)</p>",
        "id": 174457743,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088086
    },
    {
        "content": "<blockquote>\n<p>wasn't <a href=\"https://github.com/rust-lang/rust/issues/62982\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62982\">#62982</a> already voted on before ?</p>\n</blockquote>\n<p>if so, it's missing a beta-accepted label</p>",
        "id": 174457772,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088101
    },
    {
        "content": "<blockquote>\n<p>fix nounwind attribute logic <a href=\"https://github.com/rust-lang/rust/issues/63909\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63909\">#63909</a></p>\n</blockquote>\n<p>My X is for real there</p>",
        "id": 174457792,
        "sender_full_name": "centril",
        "timestamp": 1567088114
    },
    {
        "content": "<p>This is not getting beta accepted until T-Lang says that's OK</p>",
        "id": 174457809,
        "sender_full_name": "centril",
        "timestamp": 1567088129
    },
    {
        "content": "<p>Sorry, that one I already x'd off mentally</p>",
        "id": 174457998,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088250
    },
    {
        "content": "<p>I was referring to the others</p>",
        "id": 174458002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088257
    },
    {
        "content": "<p>ah</p>",
        "id": 174458010,
        "sender_full_name": "centril",
        "timestamp": 1567088263
    },
    {
        "content": "<p>carry on =P</p>",
        "id": 174458015,
        "sender_full_name": "centril",
        "timestamp": 1567088267
    },
    {
        "content": "<blockquote>\n<p>if so, it's missing a beta-accepted label</p>\n</blockquote>\n<p>oh, I think you are correct <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, it's because of a rollup maybe.</p>",
        "id": 174458026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088276
    },
    {
        "content": "<p>OK, done with that.</p>",
        "id": 174458220,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088403
    },
    {
        "content": "<h1>Stable nominated</h1>\n<p>None.</p>",
        "id": 174458249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088427
    },
    {
        "content": "<h1><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">Stable to beta regressions</a></h1>",
        "id": 174458271,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088454
    },
    {
        "content": "<p>I didn't get to these in pre-triage but there seem to be a bunch</p>",
        "id": 174458277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088462
    },
    {
        "content": "<p>Almost all opened by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> =)</p>",
        "id": 174458304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088488
    },
    {
        "content": "<p>and almost all will probably be fixed by petrochenkov =P</p>",
        "id": 174458321,
        "sender_full_name": "centril",
        "timestamp": 1567088508
    },
    {
        "content": "<p>and/or matthewjasper</p>",
        "id": 174458327,
        "sender_full_name": "centril",
        "timestamp": 1567088515
    },
    {
        "content": "<p>Let's spend a bit of time going through them</p>",
        "id": 174458383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088536
    },
    {
        "content": "<h1>[1.38] Regression: custom attribute panicked <a href=\"https://github.com/rust-lang/rust/issues/63895\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63895\">#63895</a></h1>",
        "id": 174458387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088541
    },
    {
        "content": "<p>Seems like this is because some procedural macro was relying on the output from pretty-printing</p>",
        "id": 174458436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088576
    },
    {
        "content": "<p>Which I guess raises the question to what extent the byte representation of the input tokens is defined</p>",
        "id": 174458454,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088596
    },
    {
        "content": "<h1>[1.38] Regression: proc macro panicked <a href=\"https://github.com/rust-lang/rust/issues/63894\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63894\">#63894</a></h1>\n<p>is similar but in that case we are retaining the <code>r#</code> in a string literal</p>",
        "id": 174458498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088639
    },
    {
        "content": "<p>Sort of t-lang calls as well</p>",
        "id": 174458590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088691
    },
    {
        "content": "<h1>[1.38] Regression: cannot determine resolution for the derive macro <code>Debug</code> <a href=\"https://github.com/rust-lang/rust/issues/63893\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63893\">#63893</a></h1>\n<p>a subtle name resolution change</p>",
        "id": 174458595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088698
    },
    {
        "content": "<blockquote>\n<p>Which I guess raises the question to what extent the byte representation of the input tokens is defined</p>\n</blockquote>\n<p>I'd be inclined to close this for now; I agree the check is unreliable and badly written in that crate</p>",
        "id": 174458596,
        "sender_full_name": "centril",
        "timestamp": 1567088698
    },
    {
        "content": "<blockquote>\n<p>is similar but in that case we are retaining the r# in a string literal</p>\n</blockquote>\n<p>Feels like a straight up bugfix</p>",
        "id": 174458654,
        "sender_full_name": "centril",
        "timestamp": 1567088750
    },
    {
        "content": "<p>Yes. I'm skimming a bit ahead</p>",
        "id": 174458719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088785
    },
    {
        "content": "<h1>[1.38] Regression: expected module, found unresolved item <code>crate::mod</code> <a href=\"https://github.com/rust-lang/rust/issues/63891\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63891\">#63891</a></h1>",
        "id": 174458731,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088794
    },
    {
        "content": "<p>I <em>think</em> this is also a bug fix</p>",
        "id": 174458747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088806
    },
    {
        "content": "<p>What is the policy here -- if something is expected breakage, do we just closure?</p>",
        "id": 174458778,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088826
    },
    {
        "content": "<p>*close?</p>",
        "id": 174458783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088829
    },
    {
        "content": "<p>we've done that before at least</p>",
        "id": 174458805,
        "sender_full_name": "oli",
        "timestamp": 1567088847
    },
    {
        "content": "<h1>[1.38] Regression: expected open delimiter <a href=\"https://github.com/rust-lang/rust/issues/63889\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63889\">#63889</a></h1>",
        "id": 174458806,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088849
    },
    {
        "content": "<p>e.g. that one</p>",
        "id": 174458810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088851
    },
    {
        "content": "<h1>[1.38] Regression: cannot find macro <code>trace!</code> in this scope <a href=\"https://github.com/rust-lang/rust/issues/63888\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63888\">#63888</a></h1>\n<p>is a genuine regr but has a pending fix</p>",
        "id": 174458943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088934
    },
    {
        "content": "<p>assigned to <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></p>",
        "id": 174458951,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088939
    },
    {
        "content": "<h1>[1.38] Regression: attributes starting with <code>rustc</code> are reserved for use by the <code>rustc</code> compiler <a href=\"https://github.com/rust-lang/rust/issues/63887\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63887\">#63887</a></h1>",
        "id": 174458989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567088980
    },
    {
        "content": "<p>closing as expected</p>",
        "id": 174459062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089009
    },
    {
        "content": "<h1>[1.38] Regression: lifetime name <code>'s</code> declared twice in the same scope <a href=\"https://github.com/rust-lang/rust/issues/63886\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63886\">#63886</a></h1>",
        "id": 174459081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089021
    },
    {
        "content": "<p>I just dug up this: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1122-language-semver.md\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/blob/master/text/1122-language-semver.md\">https://github.com/rust-lang/rfcs/blob/master/text/1122-language-semver.md</a></p>",
        "id": 174459084,
        "sender_full_name": "mw",
        "timestamp": 1567089022
    },
    {
        "content": "<p>is that our policy?</p>",
        "id": 174459091,
        "sender_full_name": "mw",
        "timestamp": 1567089029
    },
    {
        "content": "<p>it is, but it is rather open to interpretation re. handling</p>",
        "id": 174459108,
        "sender_full_name": "centril",
        "timestamp": 1567089052
    },
    {
        "content": "<p>This particular one is explained as a consequence of <a href=\"https://github.com/rust-lang/rust/pull/63083\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/63083\">https://github.com/rust-lang/rust/pull/63083</a>, but it'd be maybe nice to see the code example in question.</p>",
        "id": 174459145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089083
    },
    {
        "content": "<p>I think we had some other kind of document that said: help broken crates fix their code</p>",
        "id": 174459146,
        "sender_full_name": "mw",
        "timestamp": 1567089083
    },
    {
        "content": "<p>rustc bug fix procedure, you are probably referring to.</p>",
        "id": 174459157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089094
    },
    {
        "content": "<p>this one: <a href=\"https://forge.rust-lang.org/rustc-bug-fix-procedure.html\" target=\"_blank\" title=\"https://forge.rust-lang.org/rustc-bug-fix-procedure.html\">https://forge.rust-lang.org/rustc-bug-fix-procedure.html</a> ?</p>",
        "id": 174459182,
        "sender_full_name": "mw",
        "timestamp": 1567089117
    },
    {
        "content": "<p>It depends on a) how unreasonable it is to maintain this in the compiler (temporarily!), b) how easy it is to fix for folks, c) how many regressions there are</p>",
        "id": 174459235,
        "sender_full_name": "centril",
        "timestamp": 1567089128
    },
    {
        "content": "<p>anyway, don't let me hijack the meeting</p>",
        "id": 174459245,
        "sender_full_name": "mw",
        "timestamp": 1567089133
    },
    {
        "content": "<p>that's the one</p>",
        "id": 174459274,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089156
    },
    {
        "content": "<p>I'm going to revisit <a href=\"https://github.com/rust-lang/rust/issues/63886\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63886\">#63886</a> in a bit, leave it for now, but I think no immediate action from this team required</p>",
        "id": 174459304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089185
    },
    {
        "content": "<h1>[1.38] Regression: failed to resolve: could not find <code>rustc_serialize</code> in <code>{{root}}</code> <a href=\"https://github.com/rust-lang/rust/issues/63885\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63885\">#63885</a></h1>",
        "id": 174459307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089186
    },
    {
        "content": "<p>(I'm basically skimming to find things we should consider trying to assign)</p>",
        "id": 174459315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089195
    },
    {
        "content": "<h1>[1.38] <code>#[bench]</code> accepted on stable but not beta <a href=\"https://github.com/rust-lang/rust/issues/63798\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63798\">#63798</a></h1>",
        "id": 174459414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089267
    },
    {
        "content": "<p>lots of discussion there</p>",
        "id": 174459421,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089270
    },
    {
        "content": "<p>OK, I'll revisit those post meeting, but none of them jumped out at me</p>",
        "id": 174459487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089312
    },
    {
        "content": "<p>Mostly policy questions and known outcomes</p>",
        "id": 174459496,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089318
    },
    {
        "content": "<blockquote>\n<p>[1.38] #[bench] accepted on stable but not beta <a href=\"https://github.com/rust-lang/rust/issues/63798\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63798\">#63798</a></p>\n</blockquote>\n<p>For this one if we are going to fix this then I think a warning has to be there as well</p>",
        "id": 174459516,
        "sender_full_name": "centril",
        "timestamp": 1567089336
    },
    {
        "content": "<p>re. the changes that caused <a href=\"https://github.com/rust-lang/rust/issues/63887\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63887\">#63887</a>, where <code>rustc</code> is a reserved start of an attribute – do we have any sort of documentation about rustc-specific behaviour (compared to some other Rust compiler implementation)?</p>",
        "id": 174459599,
        "sender_full_name": "varkor",
        "timestamp": 1567089366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> sometimes; the rustc guide is the best place to fill more in</p>",
        "id": 174459641,
        "sender_full_name": "centril",
        "timestamp": 1567089395
    },
    {
        "content": "<p>although it feels reasonable to have some special-casing in the compiler, this is rustc-specific and probably wouldn't be handled in any \"Rust specification\"</p>",
        "id": 174459654,
        "sender_full_name": "varkor",
        "timestamp": 1567089401
    },
    {
        "content": "<p>and it'd be nice to keep track of exactly what the differences are</p>",
        "id": 174459675,
        "sender_full_name": "varkor",
        "timestamp": 1567089411
    },
    {
        "content": "<p>we did historically make <code>rustc_X</code> (pre-namespacing) nightly-only, but I don't see any RFC for that, I guess we just decided to do it</p>",
        "id": 174459747,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089468
    },
    {
        "content": "<p>(anyway I think it'd be reasonable to note in the lang spec myself, though we wouldn't want to document the behavior of said attributes; simply that the prefix is reserved)</p>",
        "id": 174459814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089493
    },
    {
        "content": "<p>OK, it's 10:38, we've gone over the most burning categories, let's do some check-ins</p>",
        "id": 174459834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089512
    },
    {
        "content": "<blockquote>\n<p>I'll do wg-mir-opt updates</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> care to give an update?</p>",
        "id": 174459852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089528
    },
    {
        "content": "<h1>wg-mir-opt update</h1>",
        "id": 174459874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089548
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span>  (and other rust compiler impls could also use the <code>rustc_</code> prefix ^,-)</p>",
        "id": 174459891,
        "sender_full_name": "centril",
        "timestamp": 1567089561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span>: agreed – though it would be good to decide/make note of whether this is a language detail or a compiler detail</p>",
        "id": 174460034,
        "sender_full_name": "varkor",
        "timestamp": 1567089631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> got <code>Place2.0</code> (with slices) working, and it only regressed a very macro heavy memory test by 10 or 15%</p>",
        "id": 174460086,
        "sender_full_name": "oli",
        "timestamp": 1567089670
    },
    {
        "content": "<p>they're now checking out how to unregress that and then we're ready to merge</p>",
        "id": 174460110,
        "sender_full_name": "oli",
        "timestamp": 1567089686
    },
    {
        "content": "<p>(I'm inclined to say it is a language spec hack that all rust compilers must \"support\" :P)</p>",
        "id": 174460124,
        "sender_full_name": "centril",
        "timestamp": 1567089693
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> split our promoted items out of the <code>mir::Body</code> in order to prevent cycles in our optimization pipeline</p>",
        "id": 174460146,
        "sender_full_name": "oli",
        "timestamp": 1567089714
    },
    {
        "content": "<p>we now have a <code>mir_promoted</code> query that gives you all promotes for a <code>DefId</code></p>",
        "id": 174460227,
        "sender_full_name": "oli",
        "timestamp": 1567089738
    },
    {
        "content": "<p>while <code>mir_optimized</code> gives you the <code>mir::Body</code> directly</p>",
        "id": 174460244,
        "sender_full_name": "oli",
        "timestamp": 1567089750
    },
    {
        "content": "<p>that's it from WG-mir-opt for now</p>",
        "id": 174460252,
        "sender_full_name": "oli",
        "timestamp": 1567089757
    },
    {
        "content": "<p>that's awesome</p>",
        "id": 174460256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089759
    },
    {
        "content": "<p>it'd be good to talk -- not in this mtg -- about the overall plan. e.g., do we have specific optimizations we are working towards first?</p>",
        "id": 174460301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089795
    },
    {
        "content": "<p>might be an interesting thing to do a design meeting about</p>",
        "id": 174460308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089802
    },
    {
        "content": "<p>note that the promoted change also makes sure that inlining doesn't clone promoteds, so we preemptively eliminated memory regressions in the inliner that could happen in the future</p>",
        "id": 174460320,
        "sender_full_name": "oli",
        "timestamp": 1567089811
    },
    {
        "content": "<p>right now we're just looking at <code>const_prop</code> wrt optimizations</p>",
        "id": 174460339,
        "sender_full_name": "oli",
        "timestamp": 1567089824
    },
    {
        "content": "<p>we talked at the all hands about other optimizations</p>",
        "id": 174460391,
        "sender_full_name": "oli",
        "timestamp": 1567089843
    },
    {
        "content": "<p>seems like a reasonable choice; that or inlinign</p>",
        "id": 174460395,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089845
    },
    {
        "content": "<p>oh, you mean which ones to enable by default at some point?</p>",
        "id": 174460431,
        "sender_full_name": "oli",
        "timestamp": 1567089880
    },
    {
        "content": "<p>OK, to what extent is there a plan with \"known steps\"? I guess maybe I need to review the minutes from all hands and refresh my memory :) (I wasn't at those meetings as I recall)</p>",
        "id": 174460438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089887
    },
    {
        "content": "<p>no, I guess that's a separate decision</p>",
        "id": 174460455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089904
    },
    {
        "content": "<p>I meant more like \"what are we focusing our engineering efforts on\"</p>",
        "id": 174460465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089912
    },
    {
        "content": "<p>yea, iirc we just discussed what we can do</p>",
        "id": 174460470,
        "sender_full_name": "oli",
        "timestamp": 1567089917
    },
    {
        "content": "<p>right now it's mostly driven by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> who's fixing up const_prop to be equal in capabilites to const eval</p>",
        "id": 174460523,
        "sender_full_name": "oli",
        "timestamp": 1567089952
    },
    {
        "content": "<p>very interesting</p>",
        "id": 174460570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089963
    },
    {
        "content": "<p>(while deduplicating logic at the same time)</p>",
        "id": 174460588,
        "sender_full_name": "oli",
        "timestamp": 1567089972
    },
    {
        "content": "<p>is it trying to make use or miri?</p>",
        "id": 174460592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567089974
    },
    {
        "content": "<p>we're essentially running const eval on polymorphic non-const MIR</p>",
        "id": 174460610,
        "sender_full_name": "oli",
        "timestamp": 1567089986
    },
    {
        "content": "<p>and ignore a bunch of errors and report a bunch of other errors as warnings</p>",
        "id": 174460629,
        "sender_full_name": "oli",
        "timestamp": 1567090003
    },
    {
        "content": "<p>and anyhting that succeeds, is written back to the MIR</p>",
        "id": 174460639,
        "sender_full_name": "oli",
        "timestamp": 1567090012
    },
    {
        "content": "<p>neat</p>",
        "id": 174460665,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090026
    },
    {
        "content": "<p>OK. Thanks for the updates, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> !</p>",
        "id": 174460708,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090054
    },
    {
        "content": "<h1>wg-nll</h1>",
        "id": 174460730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090077
    },
    {
        "content": "<p>maybe we can discuss this a bit briefly? I don't think there's anyone to give a dedicated report</p>",
        "id": 174460771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090085
    },
    {
        "content": "<p>We closed a few fixed-by-NLL soundness holes recently</p>",
        "id": 174460789,
        "sender_full_name": "centril",
        "timestamp": 1567090099
    },
    {
        "content": "<p>but last I heard, we had done a crater run, and we are basically looking at how to encourage migration and warning fixes</p>",
        "id": 174460791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090101
    },
    {
        "content": "<p>and then we're trying to stabilize bind-by-move-pattern-guards</p>",
        "id": 174460814,
        "sender_full_name": "centril",
        "timestamp": 1567090113
    },
    {
        "content": "<p>and then there's the aforementioned crater run</p>",
        "id": 174460828,
        "sender_full_name": "centril",
        "timestamp": 1567090121
    },
    {
        "content": "<p>yes -- that's right -- so we've also been doing the migration in a more fine-grained way</p>",
        "id": 174460834,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090127
    },
    {
        "content": "<p>I'm doing a new crater run</p>",
        "id": 174460842,
        "sender_full_name": "centril",
        "timestamp": 1567090131
    },
    {
        "content": "<p>(poor crater queue...)</p>",
        "id": 174460857,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1567090140
    },
    {
        "content": "<p>what's blocking bind-by-move right now?</p>",
        "id": 174460882,
        "sender_full_name": "varkor",
        "timestamp": 1567090161
    },
    {
        "content": "<p>crater rollups when</p>",
        "id": 174460898,
        "sender_full_name": "eddyb",
        "timestamp": 1567090169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> a single checkbox</p>",
        "id": 174460902,
        "sender_full_name": "centril",
        "timestamp": 1567090170
    },
    {
        "content": "<p>OK. Seems like we should get moving on the \"stronger steps to encourage fixes in dependencies\" conversation, but that's for later.</p>\n<p>( And yes <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> I remember your PR :P )</p>",
        "id": 174461044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090254
    },
    {
        "content": "<p>(Same issue came up in one of the other regressions too, as I recall...)</p>",
        "id": 174461100,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090297
    },
    {
        "content": "<h1>wg-parallel-rustc</h1>",
        "id": 174461122,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090315
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"116010\">@Aaron Turon</span> has been doing an audit of the various changes, looking particularly as shared state and lock semantics</p>",
        "id": 174461174,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090331
    },
    {
        "content": "<p>I don't think he's awake yet :)</p>",
        "id": 174461198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090349
    },
    {
        "content": "<p>you can see <a href=\"#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc/topic/going.20forward/near/173405208\" title=\"#narrow/stream/187679-t-compiler.2Fwg-parallel-rustc/topic/going.20forward/near/173405208\">his comment here</a></p>",
        "id": 174461207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090354
    },
    {
        "content": "<p>in particular, he was looking into some issues such as fine-grained locking that could give rise to deadlocks</p>",
        "id": 174461218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090368
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  \"Do you have a moment to talk about our lord and savior PR <a href=\"https://github.com/rust-lang/rust/issues/59658\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59658\">#59658</a> ?\" xD</p>",
        "id": 174461224,
        "sender_full_name": "centril",
        "timestamp": 1567090371
    },
    {
        "content": "<p>the idea was to spin out refactorings</p>",
        "id": 174461261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090397
    },
    {
        "content": "<p>to try and eliminate locks and shared mutable state outside the query system, ideally, or to do more targeted fixes, secondarily</p>",
        "id": 174461278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090410
    },
    {
        "content": "<p>that said, I don't know how much progress he's made lately; probably not much last week owing to rust conf</p>",
        "id": 174461308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090437
    },
    {
        "content": "<p>I guess I don't have much to add beyond that</p>",
        "id": 174461375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090467
    },
    {
        "content": "<p>End of meeting? Any final comments?</p>",
        "id": 174461405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090487
    },
    {
        "content": "<blockquote>\n<p>Any final comments?</p>\n</blockquote>\n<p>Thanks all!</p>",
        "id": 174461445,
        "sender_full_name": "centril",
        "timestamp": 1567090527
    },
    {
        "content": "<p>(Also, I'm going to spend a bit of time going over nominated issues + beta regressions, I think, in the pre-meeting triage stream, at some point today --- maybe now :)</p>",
        "id": 174461453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090534
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> are you going to summarize these minutes?</p>",
        "id": 174461467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567090549
    },
    {
        "content": "<p>I'm really glad we have <span class=\"user-mention\" data-user-id=\"116010\">@Aaron Turon</span> back working on the compiler :D</p>",
        "id": 174461477,
        "sender_full_name": "eddyb",
        "timestamp": 1567090560
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span>: it sounds like these const prop changes lay the groundwork for more sophisticated symbolic evaluation..?</p>",
        "id": 174461526,
        "sender_full_name": "varkor",
        "timestamp": 1567090569
    },
    {
        "content": "<p>not really, we don't have symbols yet</p>",
        "id": 174461555,
        "sender_full_name": "oli",
        "timestamp": 1567090591
    },
    {
        "content": "<p>Yes, but it will probably be later tonight or tomorrow before they're up.</p>",
        "id": 174461584,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1567090613
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132916\">@Christian Poveda</span> has started some symbol work a while back, but they are currently busy with other things I believe</p>",
        "id": 174461641,
        "sender_full_name": "oli",
        "timestamp": 1567090644
    },
    {
        "content": "<blockquote>\n<p>I'm really glad we have @Aaron Turon back working on the compiler :D</p>\n</blockquote>\n<p>I only wish the breaks between all those conferences and all-hands aturon has to participate in were longer.</p>",
        "id": 174462235,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1567090987
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"132916\">Christian Poveda</span> has started some symbol work a while back, but they are currently busy with other things I believe</p>\n</blockquote>\n<p>If you have any evil plans regarding symbolic execution count me in :D</p>",
        "id": 174462729,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1567091335
    },
    {
        "content": "<blockquote>\n<p>We've talked on and off about this idea of an \"ICE-breaker\" effort -- I think it would make sense to try and \"repurpose\" <span class=\"user-group-mention\" data-user-group-id=\"1176\">@WG-llvm</span> to help out with tracking and resolving this issues? This probably doesn't mean that much but maybe we can promote the concept and get a few more people beyond <span class=\"user-mention silent\" data-user-id=\"133224\">Nikita Popov</span> and <span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span>, and create an official github team so it can be easily cc'd</p>\n</blockquote>\n<p>Good morning! IMO the concept between WG-llvm and ICE breakers differs substantially enough that people interested in the first might not be interested in the 2nd or vice vrsa.</p>",
        "id": 174466474,
        "sender_full_name": "nagisa",
        "timestamp": 1567093645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> good feedback; I'm happy to create a second group. I sort of want it to include the term \"ICE-breakers\" anyway</p>",
        "id": 174467516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567094474
    },
    {
        "content": "<p>I'll make a separate topic to discuss perhaps</p>",
        "id": 174467531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1567094479
    }
]