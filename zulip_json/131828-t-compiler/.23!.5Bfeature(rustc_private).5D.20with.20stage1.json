[
    {
        "content": "<p>What prevents using building against internal compiler crate with a stage1 compiler (e.g. <code>#![feature(rustc_private)] extern crate rustc_ast;</code>)</p>",
        "id": 214987559,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603987029
    },
    {
        "content": "<p>I know that <code>ui-fulldeps</code> uses a stage2 compiler, but I'm not sure why</p>",
        "id": 214987584,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603987042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> If I am understanding your question correctly: I believe it is due to the lack of stable ABI compatibility. The stage1 compiler library was built with the beta compiler, and thus will be built the ABI from that compiler. If you attempted to build a binary with stage1 that links to the stage1 library, it will be using the ABI of stage1, which might be different from stage0. Sometimes it will work, since the ABI doesn't change that frequently.</p>",
        "id": 214990284,
        "sender_full_name": "Eric Huss",
        "timestamp": 1603988037
    },
    {
        "content": "<p>I see</p>",
        "id": 214990388,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603988077
    },
    {
        "content": "<p>whereas building with a stage2 compiler is built from a stage1 compiler, which was build from your local source code, and therefore will use the same ABI as a program compiled by the stage2 compiler</p>",
        "id": 214990523,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603988141
    },
    {
        "content": "<p>yep</p>",
        "id": 214990558,
        "sender_full_name": "Eric Huss",
        "timestamp": 1603988157
    },
    {
        "content": "<p>since they'll be using the same <code>rustc_target</code> source code, just built with different compilers</p>",
        "id": 214990612,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603988169
    }
]