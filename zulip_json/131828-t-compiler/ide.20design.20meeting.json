[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span>, <span class=\"user-mention\" data-user-id=\"133169\">@Aleksey Kladov</span> -- when should we discuss? on Zulip or over some video thing? Also, let's discuss how to coordinate \"current design review\"</p>",
        "id": 156377435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547826362
    },
    {
        "content": "<p>zulip SGTM</p>",
        "id": 156377493,
        "sender_full_name": "matklad",
        "timestamp": 1547826400
    },
    {
        "content": "<p>I'm fine with whichever</p>",
        "id": 156377626,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547826486
    },
    {
        "content": "<p>we'd do that <em>before</em> AH, right?</p>",
        "id": 156377632,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547826491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> do we know how many slots (and which specifically) we aim for during the AH?</p>",
        "id": 156377665,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547826522
    },
    {
        "content": "<p>I must say I am slightly confused atm about what we should discuss when.</p>\n<p>I am personally ready to discuss anything at any time, of course :-)</p>\n<p>My current understanding is that we </p>\n<ul>\n<li>have a short IDE sync-up meeting <strong>right now</strong></li>\n<li>ideally prepare an offline review of rust-analyzer/RLS <em>before</em> all hands.</li>\n<li>discuss on all hands at lenght</li>\n</ul>",
        "id": 156377667,
        "sender_full_name": "matklad",
        "timestamp": 1547826526
    },
    {
        "content": "<p>I saw \"WG: RLS (now IDEs?), \"rustc &lt;-&gt; RLS\" - anything else?</p>",
        "id": 156377690,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547826540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@Aleksey Kladov</span> that sounds good, yeah</p>",
        "id": 156377745,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547826582
    },
    {
        "content": "<p>yes so I specifically meant: I want to figure out what are the \"crucial bits of the design\" that we should discuss <em>in detail</em> at the all hands</p>",
        "id": 156378176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547826901
    },
    {
        "content": "<p>see also <a href=\"#narrow/stream/131828-t-compiler/topic/steering.20meeting.202019-01-17/near/156378043\" title=\"#narrow/stream/131828-t-compiler/topic/steering.20meeting.202019-01-17/near/156378043\">this most recent comment</a> :)</p>",
        "id": 156378206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547826918
    },
    {
        "content": "<p>does that sound reasonable?</p>",
        "id": 156378212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547826922
    },
    {
        "content": "<p>somewhat :) \"crucial bits\" sounds to vague. What I think crucial bits are \"quries from the ground up\", \"analyzing interdependent crates together\", \"full-fidelity syntax trees\", \"divorce from batch compilation model in favor of <code>here's the static set of crates with dependencies, analyze</code> \".</p>",
        "id": 156378485,
        "sender_full_name": "matklad",
        "timestamp": 1547827115
    },
    {
        "content": "<p>well, making it less vague is exactly what I wanted to discuss</p>",
        "id": 156378538,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827171
    },
    {
        "content": "<p>I'm happy to talk now, I don't envision this being a huge conversation :)</p>",
        "id": 156378545,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827178
    },
    {
        "content": "<p>I guess I would say first off what are some \"key challenges\" in terms of features to support:</p>\n<ul>\n<li>completions</li>\n<li>find all references</li>\n<li>fixes support (edit, suggested by matklad below)</li>\n</ul>",
        "id": 156378623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827209
    },
    {
        "content": "<p>Oh, one more curcial bit: \"pure (as in, absolutelly no IO) analyzis\"</p>",
        "id": 156378625,
        "sender_full_name": "matklad",
        "timestamp": 1547827211
    },
    {
        "content": "<p>those feel like two important-ish cases to me, completions requiring us to bring all the type-checker etc to bear in a local fashion, find all references being the key to a lot of other random stuff (though not very hard)</p>",
        "id": 156378648,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827239
    },
    {
        "content": "<p>but some of the key questions then might be:</p>\n<ul>\n<li>what are the \"base inputs\" to the analysis? (edit: suggested by matklad below)</li>\n<li>how will we represent source text of input files?</li>\n<li>how to reason about crates?</li>\n<li>what is relationship to cargo?</li>\n<li>what do our syntax trees look like</li>\n<li>how do we handle things from <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>? (edit: added later)</li>\n</ul>",
        "id": 156378717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827300
    },
    {
        "content": "<p>I'll add \"fixes support\". Modifing source code is a separate bin of requirenments</p>",
        "id": 156378747,
        "sender_full_name": "matklad",
        "timestamp": 1547827319
    },
    {
        "content": "<blockquote>\n<p>how will we represent source text of input files?</p>\n</blockquote>\n<p>I'd start more broadly, \"what are the inputs to analysis\"?</p>",
        "id": 156378818,
        "sender_full_name": "matklad",
        "timestamp": 1547827363
    },
    {
        "content": "<p>yeah</p>",
        "id": 156378828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827373
    },
    {
        "content": "<p>that feels connected to the cargo question, too</p>",
        "id": 156378856,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827412
    },
    {
        "content": "<p>one of the things that jntrnr has been saying to me is that we may want to rethink the cargo-rustc layering</p>",
        "id": 156378864,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827425
    },
    {
        "content": "<p>though I feel like that's potentially out of scope for 2021</p>",
        "id": 156378875,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827436
    },
    {
        "content": "<p>yeah, and this also a point where I disagree most significantly with what rls is doing :)</p>",
        "id": 156378886,
        "sender_full_name": "matklad",
        "timestamp": 1547827441
    },
    {
        "content": "<p>yes, I wanted to dig more into that very thing -- though prob not this second</p>",
        "id": 156378939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827452
    },
    {
        "content": "<blockquote>\n<p>though I feel like that's potentially out of scope for 2021</p>\n</blockquote>\n<p>mostly I mean we've got a lot of rewriting on our hands, I want to see where we can limit things :)</p>",
        "id": 156378966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827497
    },
    {
        "content": "<p>coming back to important questions:</p>\n<p>I am not super sure that \"find all refs\" is super imoportant. In intelliJ, this basically works as \"for each ref, resolve and check that the result matches the input declaration\"</p>",
        "id": 156378999,
        "sender_full_name": "matklad",
        "timestamp": 1547827531
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> what do you think of the above lists? are there key questions that determine the end design that seem to be missing to you?</p>",
        "id": 156379012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827546
    },
    {
        "content": "<blockquote>\n<p>coming back to important questions:</p>\n<p>I am not super sure that \"find all refs\" is super imoportant. In intelliJ, this basically works as \"for each ref, resolve and check that the result matches the input declaration\"</p>\n</blockquote>\n<p>yeah, maybe not</p>",
        "id": 156379020,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827554
    },
    {
        "content": "<p>I feel like it's one of the foundational <em>operations</em>, but it's also a relatively easy one</p>",
        "id": 156379051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827564
    },
    {
        "content": "<p>I guess if we want to dig a bit deeper, some things that come to mind are:</p>",
        "id": 156379070,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827576
    },
    {
        "content": "<ul>\n<li>how to manage name resolution, macro expansion</li>\n</ul>",
        "id": 156379072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827581
    },
    {
        "content": "<p>And I'd love to add</p>\n<p>\"find all symbols whose name match regex\" -- again, at least in Intellij/rust analyzer it's a separate indexing infra</p>",
        "id": 156379076,
        "sender_full_name": "matklad",
        "timestamp": 1547827589
    },
    {
        "content": "<p><em>maybe</em>  </p>\n<ul>\n<li>how does trait resolution fit in</li>\n</ul>\n<p>though it certainly touches on chalk, and I'm not sure ultimately how important it is</p>",
        "id": 156379145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827658
    },
    {
        "content": "<p>A not so-high level, but very important thing is </p>\n<p>\"how to map from internal data structures back to raw syntax\".</p>",
        "id": 156379148,
        "sender_full_name": "matklad",
        "timestamp": 1547827665
    },
    {
        "content": "<p>actually yes</p>",
        "id": 156379154,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827676
    },
    {
        "content": "<p>that seems very important</p>",
        "id": 156379157,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827679
    },
    {
        "content": "<p>Yep, trait resolution is super interesting, because it's non-local</p>",
        "id": 156379196,
        "sender_full_name": "matklad",
        "timestamp": 1547827683
    },
    {
        "content": "<p>in particular, one of the big topics we've gone around and around on is maintaining the <em>link</em> between various IRs</p>",
        "id": 156379206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827690
    },
    {
        "content": "<blockquote>\n<p>Yep, trait resolution is super interesting, because it's non-local</p>\n</blockquote>\n<p>right, so that <em>part</em> of things (e.g., finding potentially interesting impls) is sort of orthogonal to chalk and something I've not though esp hard about</p>",
        "id": 156379217,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827715
    },
    {
        "content": "<blockquote>\n<p>in particular, one of the big topics we've gone around and around on is maintaining the <em>link</em> between various IRs</p>\n</blockquote>\n<p>the general consensus here seems to be spans</p>",
        "id": 156379222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827728
    },
    {
        "content": "<p>Yeah, I've actually crystalized a consept of <code>SourceMap</code> for rust-analyzer basicaly today</p>",
        "id": 156379225,
        "sender_full_name": "matklad",
        "timestamp": 1547827732
    },
    {
        "content": "<p>I guess for that matter, how the type-checker should work is sort of on that list</p>",
        "id": 156379250,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827767
    },
    {
        "content": "<p>it's a big topic</p>",
        "id": 156379260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827778
    },
    {
        "content": "<p>Not sure actually...</p>",
        "id": 156379262,
        "sender_full_name": "matklad",
        "timestamp": 1547827781
    },
    {
        "content": "<p>typechecking is local</p>",
        "id": 156379266,
        "sender_full_name": "matklad",
        "timestamp": 1547827784
    },
    {
        "content": "<p>Yeah, sorry for being so 'remote', just got through most of the stuff</p>",
        "id": 156379272,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547827790
    },
    {
        "content": "<p>so it can be almost arbitrary slow, etc, and still work fine with IDE</p>",
        "id": 156379281,
        "sender_full_name": "matklad",
        "timestamp": 1547827802
    },
    {
        "content": "<p>yah, ok, I'd rathe rkeep it off</p>",
        "id": 156379294,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827802
    },
    {
        "content": "<p>well</p>",
        "id": 156379330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827806
    },
    {
        "content": "<p>it is needed for completions potentially</p>",
        "id": 156379336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827813
    },
    {
        "content": "<p>or maybe that's a false assumption on my part :)</p>",
        "id": 156379346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827823
    },
    {
        "content": "<p>The 'what's the input' is a rather important question, yeah</p>",
        "id": 156379350,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547827827
    },
    {
        "content": "<p>It is needed, yes, but you need to typechek only a single function body</p>",
        "id": 156379353,
        "sender_full_name": "matklad",
        "timestamp": 1547827839
    },
    {
        "content": "<p>but regardless, I don't know that it's <em>foundational</em>, I do think it's a potentially important thing to talk out for what \"Rust 2021\" looks like maybe, but perhaps a second order concern</p>",
        "id": 156379362,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827850
    },
    {
        "content": "<p>Are we talking about incrementality of type chekcing now?</p>",
        "id": 156379368,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547827854
    },
    {
        "content": "<p>I am assuming that we will not try to be incremental when doing type-checking <em>within</em> a fn per se</p>",
        "id": 156379384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827869
    },
    {
        "content": "<p>though there are designs that allow for that</p>",
        "id": 156379393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827875
    },
    {
        "content": "<p>I meant establishing a boundary, like per-fn-boundary :)</p>",
        "id": 156379400,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547827888
    },
    {
        "content": "<p>ah. yes.</p>",
        "id": 156379403,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827893
    },
    {
        "content": "<p>we have that now, even.</p>",
        "id": 156379408,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827896
    },
    {
        "content": "<p>In any case, I believe it'd be good to settle on what are the inputs</p>",
        "id": 156379413,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547827903
    },
    {
        "content": "<p>and, albeit more philosophical, what's a 'crate'</p>",
        "id": 156379465,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547827928
    },
    {
        "content": "<p>I can describe briefly the inputs to rust-analyzer. I think they more or less makes sense</p>",
        "id": 156379482,
        "sender_full_name": "matklad",
        "timestamp": 1547827955
    },
    {
        "content": "<p>As a side note it's confusing since Cargo has packages, which it calls crates, which actually can contain \"targets\" which are \"crates\" per rustc's definition (compilation unit)</p>",
        "id": 156379484,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547827960
    },
    {
        "content": "<p>so to reiterate our list of things it was sort of like</p>\n<p>but some of the key questions then might be:</p>\n<ul>\n<li>what are the \"base inputs\" to the analysis? </li>\n<li>how will we represent source text of input files?</li>\n<li>how to reason about crates?</li>\n<li>what is relationship to cargo?</li>\n<li>what do our syntax trees look like</li>\n<li>how do we handle things from <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>? (edit: added later)</li>\n<li>how do we maintain links between IRs, map back to source text?</li>\n<li>how to manage name resolution, macro expansion</li>\n<li>how to find impls and manage trait resolution</li>\n<li>where are the distinct processes and how long do they live</li>\n<li>what are the incrementality boundaries?</li>\n</ul>",
        "id": 156379485,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547827962
    },
    {
        "content": "<p>starting to feel like a long-ish list but I guess what we're grasping for here is kind of the \"whiteboard design sketch\"</p>",
        "id": 156379526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828000
    },
    {
        "content": "<p>It'd be good to talk about rustc-as-a-deamon interface/approach</p>",
        "id": 156379534,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828004
    },
    {
        "content": "<p>yeah, I was wondering if we should discuss e.g. \"where are the processes\"</p>",
        "id": 156379545,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> : add \"what are incrementality boundaries?\"</p>",
        "id": 156379548,
        "sender_full_name": "matklad",
        "timestamp": 1547828017
    },
    {
        "content": "<p>rather than one-off 'do your job' batch approach it takes now</p>",
        "id": 156379549,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828017
    },
    {
        "content": "<p>I mean, should we try to make \"fixed point import resolution and macro expansion\" incremental?</p>",
        "id": 156379608,
        "sender_full_name": "matklad",
        "timestamp": 1547828049
    },
    {
        "content": "<p>I have a specific question on that :)</p>",
        "id": 156379612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828062
    },
    {
        "content": "<p>I have so many questions about that....</p>",
        "id": 156379622,
        "sender_full_name": "matklad",
        "timestamp": 1547828078
    },
    {
        "content": "<p>to do so may require a different approach from salsa</p>",
        "id": 156379623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828079
    },
    {
        "content": "<p>though..hmm</p>",
        "id": 156379626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828083
    },
    {
        "content": "<p>differential dataflow could probably model it</p>",
        "id": 156379627,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828085
    },
    {
        "content": "<p>I guess if we knew what it did, that would help :P</p>",
        "id": 156379639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828091
    },
    {
        "content": "<p>I hope that it'll be \"fast enough\"</p>",
        "id": 156379647,
        "sender_full_name": "matklad",
        "timestamp": 1547828101
    },
    {
        "content": "<p>this may be an interesting use case for differential-dataflow, I should return to that</p>",
        "id": 156379649,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828102
    },
    {
        "content": "<blockquote>\n<p>\"what it did\"</p>\n</blockquote>\n<p>it == \"differentail dataflow\" or it == \"rust name resolution\"?</p>",
        "id": 156379693,
        "sender_full_name": "matklad",
        "timestamp": 1547828142
    },
    {
        "content": "<p>/s</p>",
        "id": 156379704,
        "sender_full_name": "matklad",
        "timestamp": 1547828149
    },
    {
        "content": "<p>the latter</p>",
        "id": 156379829,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828242
    },
    {
        "content": "<p>I mean it's not <em>magic</em></p>",
        "id": 156379837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828257
    },
    {
        "content": "<p>you never know...</p>",
        "id": 156379847,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828266
    },
    {
        "content": "<p>heh</p>",
        "id": 156379852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828270
    },
    {
        "content": "<p>well, ok, this seems like a great starting point</p>",
        "id": 156379969,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828354
    },
    {
        "content": "<p>I'm slowly approaching this but boy it's hard to dig into a 5k LOC <a href=\"http://lib.rs\" target=\"_blank\" title=\"http://lib.rs\">lib.rs</a> full of edge cases <span class=\"emoji emoji-1f63f\" title=\"crying cat\">:crying_cat:</span></p>",
        "id": 156379970,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828354
    },
    {
        "content": "<p>though I have to collect our latest additions</p>",
        "id": 156379973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828357
    },
    {
        "content": "<p>My current hope is that, if we cache macro expansions (which should be easy, key is (token set, macro def), value is (token set)), then just running the whole fixed point thing for the whole crate will be fast enough, and needs to be run only rarely (when adding new top-level items).</p>",
        "id": 156379986,
        "sender_full_name": "matklad",
        "timestamp": 1547828382
    },
    {
        "content": "<p>(yes, I sort of hope that too)</p>",
        "id": 156379997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828392
    },
    {
        "content": "<p>so let's just briefly talk about the \"reading material\"</p>",
        "id": 156380039,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828403
    },
    {
        "content": "<p>do you all plan to produce a design doc describing rust-analyzer / RLS?</p>",
        "id": 156380067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828412
    },
    {
        "content": "<p>video?</p>",
        "id": 156380069,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828416
    },
    {
        "content": "<p>we could do a recorded, interactive session</p>",
        "id": 156380086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828433
    },
    {
        "content": "<p>I'm fine with a design doc/architectural overview</p>",
        "id": 156380087,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828433
    },
    {
        "content": "<p>but really whatever you want is fine</p>",
        "id": 156380094,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828438
    },
    {
        "content": "<p>I plan to do a doc + (if I am on a roll) a screencast</p>",
        "id": 156380098,
        "sender_full_name": "matklad",
        "timestamp": 1547828439
    },
    {
        "content": "<p>I don't think it has to be like mega thorough, just hit the high-level picture</p>",
        "id": 156380107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828448
    },
    {
        "content": "<p>if it's too long nobody will read anyway :P</p>",
        "id": 156380112,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828454
    },
    {
        "content": "<p>That's the design talk, but - do we plan to talk about merging/overlapping the compiler and IDE team?</p>",
        "id": 156380164,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828516
    },
    {
        "content": "<p>Since I feel we're kind of unnecessarily split too much, if that makes sense</p>",
        "id": 156380255,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828568
    },
    {
        "content": "<p>I also agree</p>",
        "id": 156380263,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828574
    },
    {
        "content": "<p>honestly, I would be happy to just mergre them completely</p>",
        "id": 156380269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828578
    },
    {
        "content": "<p>I don't want to step on any toes</p>",
        "id": 156380292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828593
    },
    {
        "content": "<p>I'm also happy to just have a lot of overlap and maybe distinct teams :)</p>",
        "id": 156380304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828606
    },
    {
        "content": "<p>but I feel like the trend is going to be that RLS + rustc are more and more indistinguishable</p>",
        "id": 156380317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828620
    },
    {
        "content": "<p>FWIW I think Nick also was for the merge</p>",
        "id": 156380325,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828628
    },
    {
        "content": "<p>and I think we should all be thinking of IDE as the primary mode of execution, and batch secondary</p>",
        "id": 156380328,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828630
    },
    {
        "content": "<p>ok, honestly my main concern was upsetting <em>you</em>, so if you are in favor =)</p>",
        "id": 156380335,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828639
    },
    {
        "content": "<p>well you and other RLS folks</p>",
        "id": 156380381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828648
    },
    {
        "content": "<p>Yup! Sounds reasonable</p>",
        "id": 156380383,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828652
    },
    {
        "content": "<p>I also wonder how I fit into all of this organizationally...</p>\n<p>I've been building \"my own IDE thing\" for the last n years, and that certainly feels suboptimal.</p>",
        "id": 156380389,
        "sender_full_name": "matklad",
        "timestamp": 1547828658
    },
    {
        "content": "<p>so in that case, we had talked about an \"organizational meeting\"</p>",
        "id": 156380399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828669
    },
    {
        "content": "<p>this <em>maybe</em> fits in there</p>",
        "id": 156380405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828676
    },
    {
        "content": "<p>but maybe it deserves its own topic</p>",
        "id": 156380407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828680
    },
    {
        "content": "<p>that is, the \"RLS\"-proper probably winds up being not dissimilar from other \"crates in the rustc orbit\" that we have to maintain well</p>",
        "id": 156380437,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828713
    },
    {
        "content": "<p>but we have to figure out how to make our triage process etc accommodate that</p>",
        "id": 156380445,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828736
    },
    {
        "content": "<p>Right now RLS is just about the orchestration - calls and inspects Cargo with appropriate options, then collects the rustc-emitted data and it serves that</p>",
        "id": 156380560,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828829
    },
    {
        "content": "<p>where the collection and indexing is mostly about being able to cross-reference definitions across multiple different crate 'compilation sessions', so maybe if we could revisit that then it's totally doable to make it act as a bare server serving the compiler knowledge</p>",
        "id": 156380607,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828878
    },
    {
        "content": "<p>(which basically means I'm all for moving most of the actual bits into rustc, yeah :p)</p>",
        "id": 156380676,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828916
    },
    {
        "content": "<p>=)</p>",
        "id": 156380689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547828928
    },
    {
        "content": "<p>but I think it doesn't mean pruning <code>librustc_save_analysis</code> - it'd be good to think about how we can support dumping all the knowledge data for code indexers such as sourcegraph or searchfox</p>",
        "id": 156380729,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547828988
    },
    {
        "content": "<p>+1 here. \"rust code index file format\" is probably a good question to ask</p>",
        "id": 156380816,
        "sender_full_name": "matklad",
        "timestamp": 1547829034
    },
    {
        "content": "<p>(I guess that overlaps very much with rustdoc as well?)</p>",
        "id": 156380818,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829038
    },
    {
        "content": "<p>batch processing a crate and dumping info is useful for two scenarios</p>",
        "id": 156380832,
        "sender_full_name": "matklad",
        "timestamp": 1547829063
    },
    {
        "content": "<p>actually, I've been talking with <span class=\"user-mention\" data-user-id=\"116109\">@Vytautas Astrauskas</span> about a related concept</p>",
        "id": 156380852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829076
    },
    {
        "content": "<p>I owe them an email back</p>",
        "id": 156380857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829079
    },
    {
        "content": "<p>they've got a kind of \"rust-query-language\" project they've been tinkering with at ETH</p>",
        "id": 156380866,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829090
    },
    {
        "content": "<ul>\n<li>external tools which are not interactive (rustdoc, cargo-src, sourcegraph)</li>\n<li>speeding up IDE for crates which never change.</li>\n</ul>",
        "id": 156380872,
        "sender_full_name": "matklad",
        "timestamp": 1547829098
    },
    {
        "content": "<p>similar to <a href=\"http://smallcultfollowing.com/babysteps/blog/2017/02/17/project-idea-datalog-output-from-rustc/\" target=\"_blank\" title=\"http://smallcultfollowing.com/babysteps/blog/2017/02/17/project-idea-datalog-output-from-rustc/\">the idea from this blog post of mine</a></p>",
        "id": 156380876,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829103
    },
    {
        "content": "<p>(semi-related, i've proposed at some point extending save-analysis or something like it to act like a rustdoc JSON output)</p>",
        "id": 156380881,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1547829110
    },
    {
        "content": "<p>I suspect it could serve as the basis for that sort of thing</p>",
        "id": 156380883,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829113
    },
    {
        "content": "<p>It seems we have more to talk about that we'll probably wind up getting time to do so =) That's good, though.</p>",
        "id": 156380959,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829173
    },
    {
        "content": "<p>always the case</p>",
        "id": 156381008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829217
    },
    {
        "content": "<p>Yeah. Are there actually any specific bits we want to discuss in <strong>this</strong> meeting?</p>\n<p>I guess:</p>\n<ul>\n<li>we've compiled a list of \"interesting questions to ask\"</li>\n<li>we've decided to do offline reviews. </li>\n</ul>\n<p>Do want to talk about smt else?</p>",
        "id": 156381096,
        "sender_full_name": "matklad",
        "timestamp": 1547829266
    },
    {
        "content": "<p>Perhaps we can dig into a couple of \"questions\", just to talk them through a bit?</p>\n<p>I think \"what are the inputs\" and \"how to do name resolution \\w macros\" are discussion worthy</p>",
        "id": 156381144,
        "sender_full_name": "matklad",
        "timestamp": 1547829313
    },
    {
        "content": "<p>and we've talked about the second one (\"hope the stupid solution will be just fast enough :D\")</p>",
        "id": 156381166,
        "sender_full_name": "matklad",
        "timestamp": 1547829339
    },
    {
        "content": "<p>I've got to run in a bit</p>",
        "id": 156381235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829369
    },
    {
        "content": "<p>but feel free to log thoughts here and I will read them async</p>",
        "id": 156381244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829376
    },
    {
        "content": "<p>Hm, how about we put off now, do the doc overview and come back for another meeting <em>before</em> AH but <em>after</em> looking at the designs?</p>",
        "id": 156381262,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829390
    },
    {
        "content": "<p>excellent idea!</p>",
        "id": 156381270,
        "sender_full_name": "matklad",
        "timestamp": 1547829401
    },
    {
        "content": "<p>Maybe that'll make us come up with more questions or crystallize some concepts further</p>",
        "id": 156381274,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829406
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44b\" title=\"wave\">:wave:</span> then I guess? :) I feel today's meetings were super-productive. I am excited :-)</p>",
        "id": 156381364,
        "sender_full_name": "matklad",
        "timestamp": 1547829483
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@Aleksey Kladov</span> btw, I was just talking to <span class=\"user-mention\" data-user-id=\"132906\">@Jonathan Turner</span> about maybe preparing a bit of a discussion about some of the things we did in Lark (some of which are relevant and probably slightly different from what rust-analyzer is doing), and they suggested that maybe I should do a salsa presentation, kind of discussing what it is, how it works, etc. I think I may do that, which would perhaps be useful to you so you can just kind of \"reference it\" (I imagine it's a bit below the abstraction level anyway)</p>",
        "id": 156381390,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829497
    },
    {
        "content": "<blockquote>\n<p>then I guess? :) I feel today's meetings were super-productive. I am excited :-)</p>\n</blockquote>\n<p>me too!</p>",
        "id": 156381393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829504
    },
    {
        "content": "<p>Yep, having a \"salsa book/video\" to point to would be useful :)</p>",
        "id": 156381445,
        "sender_full_name": "matklad",
        "timestamp": 1547829564
    },
    {
        "content": "<p>Sounds interesting!</p>",
        "id": 156381464,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829594
    },
    {
        "content": "<p>Maybe this year will be the year of Rust IDE <span class=\"emoji emoji-1f606\" title=\"laughing\">:laughing:</span></p>",
        "id": 156381524,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829625
    },
    {
        "content": "<p>It's definitely more than a year's worth of work =) A \"пятилетка\" of Rust IDEs?</p>",
        "id": 156381563,
        "sender_full_name": "matklad",
        "timestamp": 1547829676
    },
    {
        "content": "<p>\"pljatiletka\"?</p>",
        "id": 156381590,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829709
    },
    {
        "content": "<p>a five year plan? <span class=\"emoji emoji-1f914\" title=\"thinking\">:thinking:</span></p>",
        "id": 156381602,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1547829720
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Five-year_plans_for_the_national_economy_of_the_Soviet_Union\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Five-year_plans_for_the_national_economy_of_the_Soviet_Union\">https://en.wikipedia.org/wiki/Five-year_plans_for_the_national_economy_of_the_Soviet_Union</a></p>",
        "id": 156381680,
        "sender_full_name": "matklad",
        "timestamp": 1547829767
    },
    {
        "content": "<p>FWIW I'm also super excited <span class=\"emoji emoji-1f4aa\" title=\"muscle\">:muscle:</span></p>",
        "id": 156381689,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829776
    },
    {
        "content": "<p>--A wild <span class=\"user-mention\" data-user-id=\"132906\">@Jonathan Turner</span> appears--</p>",
        "id": 156381694,
        "sender_full_name": "Jonathan Turner",
        "timestamp": 1547829782
    },
    {
        "content": "<p>aah, right</p>",
        "id": 156381705,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829789
    },
    {
        "content": "<p>I guess I'm slowly exchanging history (or anything, really) with software development knowledge <span class=\"emoji emoji-1f622\" title=\"cry\">:cry:</span></p>",
        "id": 156381740,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829830
    },
    {
        "content": "<blockquote>\n<p>a five year plan? <span class=\"emoji emoji-1f914\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>I think that's a really good idea... at least have a feeling for where things should be in 3-5 years</p>",
        "id": 156381741,
        "sender_full_name": "Jonathan Turner",
        "timestamp": 1547829830
    },
    {
        "content": "<p>Gotta run, thanks for the meeting and I guess we'll be in touch with the docs and a quick second meeting before AH <span class=\"emoji emoji-1f44b\" title=\"wave\">:wave:</span></p>",
        "id": 156381847,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1547829912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132906\">@Jonathan Turner</span> you may also be interested in the <a href=\"#narrow/stream/131828-t-compiler/topic/steering.20meeting.202019-01-17\" title=\"#narrow/stream/131828-t-compiler/topic/steering.20meeting.202019-01-17\">steering meeting notes from today</a>; I plan to write a summary eventually of course</p>",
        "id": 156381939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1547829991
    },
    {
        "content": "<blockquote>\n<p>they've got a kind of \"rust-query-language\" project they've been tinkering with at ETH</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> That is the same thing I mentioned to you in Rust Fest Rome. The current prototype cannot do much yet, but we are looking for a master student to work on this. If you would like to know more or have any ideas how this could be useful for you, feel free to ping me.</p>",
        "id": 156383080,
        "sender_full_name": "Vytautas Astrauskas [he/him]",
        "timestamp": 1547830942
    },
    {
        "content": "<p>A draft of rust-analyzer guide is up: <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/578\" target=\"_blank\" title=\"https://github.com/rust-analyzer/rust-analyzer/pull/578\">https://github.com/rust-analyzer/rust-analyzer/pull/578</a></p>",
        "id": 156481356,
        "sender_full_name": "matklad",
        "timestamp": 1547990156
    },
    {
        "content": "<p>and a video version: <a href=\"https://www.youtube.com/watch?v=ANKBNiSWyfc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=ANKBNiSWyfc\">https://www.youtube.com/watch?v=ANKBNiSWyfc</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"ANKBNiSWyfc\" href=\"https://www.youtube.com/watch?v=ANKBNiSWyfc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=ANKBNiSWyfc\"><img src=\"https://i.ytimg.com/vi/ANKBNiSWyfc/default.jpg\"></a></div>",
        "id": 156488745,
        "sender_full_name": "matklad",
        "timestamp": 1548003326
    },
    {
        "content": "<p>Was rereading rls IDE and came across a very interesting comment: <a href=\"https://github.com/rust-lang/rfcs/pull/1317#issuecomment-150965895\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/pull/1317#issuecomment-150965895\">https://github.com/rust-lang/rfcs/pull/1317#issuecomment-150965895</a></p>\n<p>That’s the same things I’ve learned when building IntelliJ Rust, including the algorithm for find references</p>",
        "id": 156515360,
        "sender_full_name": "matklad",
        "timestamp": 1548049827
    },
    {
        "content": "<p>Also a draft for the current RLS architecture doc: <a href=\"https://github.com/rust-lang/rls/pull/1257\" target=\"_blank\" title=\"https://github.com/rust-lang/rls/pull/1257\">https://github.com/rust-lang/rls/pull/1257</a></p>",
        "id": 156763208,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1548326311
    }
]