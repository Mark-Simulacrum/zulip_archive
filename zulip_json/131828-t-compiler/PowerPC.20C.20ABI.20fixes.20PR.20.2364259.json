[
    {
        "content": "<p>to be frank I have no clue what's going on with this PR</p>",
        "id": 180145845,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> can you clue us (or me) in ?</p>",
        "id": 180145854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142279
    },
    {
        "content": "<p>I think this should land.</p>",
        "id": 180145879,
        "sender_full_name": "nagisa",
        "timestamp": 1573142282
    },
    {
        "content": "<p>the first commit was factored out. But <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> , you're saying the whole thing should also land?</p>",
        "id": 180145926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142303
    },
    {
        "content": "<p>I've stalled the PR originally because the author generalized some existing checks for targets that have weird ZST behavior</p>",
        "id": 180145932,
        "sender_full_name": "eddyb",
        "timestamp": 1573142311
    },
    {
        "content": "<p>(first commit factored PR is \"Fix C aggregate-passing ABI on powerpc\" <a href=\"https://github.com/rust-lang/rust/issues/66050\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66050\">#66050</a>)</p>",
        "id": 180145955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142326
    },
    {
        "content": "<p>I'm not opposed to adding PPC32 as another special-case for the weird ZST behavior</p>",
        "id": 180145973,
        "sender_full_name": "eddyb",
        "timestamp": 1573142337
    },
    {
        "content": "<p>I've spent some time with <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> discussing the overall behavior in GCC and they've opened some bug reports for GCC, I think, but I don't know what the status of that is</p>",
        "id": 180146038,
        "sender_full_name": "eddyb",
        "timestamp": 1573142376
    },
    {
        "content": "<p>I feel that this PR has a couple of contention points</p>",
        "id": 180146128,
        "sender_full_name": "nagisa",
        "timestamp": 1573142412
    },
    {
        "content": "<p>The status of PPC32 is that is a target that nobody uses</p>",
        "id": 180146151,
        "sender_full_name": "gnzlbg",
        "timestamp": 1573142430
    },
    {
        "content": "<p>nobody is responsible for its ABI</p>",
        "id": 180146164,
        "sender_full_name": "gnzlbg",
        "timestamp": 1573142442
    },
    {
        "content": "<p>better not touch it and break things</p>",
        "id": 180146173,
        "sender_full_name": "gnzlbg",
        "timestamp": 1573142448
    },
    {
        "content": "<p>so what is PR author's motivation then?</p>",
        "id": 180146185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142462
    },
    {
        "content": "<p>oh you mean on GCC's side?</p>",
        "id": 180146187,
        "sender_full_name": "eddyb",
        "timestamp": 1573142462
    },
    {
        "content": "<ol>\n<li>There is a generalization to no longer check for <code>-gnu</code> abi when applying this hack etc.</li>\n</ol>",
        "id": 180146208,
        "sender_full_name": "nagisa",
        "timestamp": 1573142469
    },
    {
        "content": "<p>for ZSTs, the ABI spec of PPC32 is \"weird\", but that's how it is</p>",
        "id": 180146213,
        "sender_full_name": "gnzlbg",
        "timestamp": 1573142470
    },
    {
        "content": "<p>hmm</p>",
        "id": 180146247,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142494
    },
    {
        "content": "<p>actually</p>",
        "id": 180146249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142495
    },
    {
        "content": "<p>we are now over time</p>",
        "id": 180146252,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142499
    },
    {
        "content": "<p>so lets move this discussion into a dedicated separate topic</p>",
        "id": 180146261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1573142508
    },
    {
        "content": "<p>one thing I wanted to suggest during the discussion on the PR was that we \"just\" drop ZST support in FFI and warn about it - but <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> pointed out to me that it can arise from C code with <code>#ifdef</code>s around struct fields</p>",
        "id": 180146347,
        "sender_full_name": "eddyb",
        "timestamp": 1573142549
    },
    {
        "content": "<blockquote>\n<p>For the 32-bit ELF ABI, all structs (regardless of size) are passed using a pointer allowing for call-by-value semantics.  This is the source of ZSTs requiring a register.  So it's clear there is an ABI that requires this behavior.  (Look for the Parameter Passing Register Selection Algorithm in <a href=\"https://github.com/ryanarn/powerabi/blob/master/chap3-elf32abi.sgml\" target=\"_blank\" title=\"https://github.com/ryanarn/powerabi/blob/master/chap3-elf32abi.sgml\">https://github.com/ryanarn/powerabi/blob/master/chap3-elf32abi.sgml</a>.)</p>\n</blockquote>",
        "id": 180146356,
        "sender_full_name": "gnzlbg",
        "timestamp": 1573142558
    },
    {
        "content": "<p>(My only real thought here is that we should just decide <em>something</em>, and I lean towards more conservative choices for now, e.g. extending a list of special cases, perhaps with a comment that says \"we might consider genearlizing this to a rule like such-and-such\" so that we notice it in the future as we add more)</p>",
        "id": 180146382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1573142576
    },
    {
        "content": "<p>I don’t have time to contribute to this discussion, gotta go walk my quadruped friend, but my broad desire to land something here stays. I don’t see much harm in generalizing over gnu&amp;musl.</p>",
        "id": 180146442,
        "sender_full_name": "nagisa",
        "timestamp": 1573142624
    },
    {
        "content": "<p>I might be fine with an approach where we derive the \"ZSTs aren't passed\" behavior without having to up-front force it, but it may be tricky to ensure that it \"fall out\" of the general logic for all targets (and testing here is annoying, I'd prefer formal proofs at this point...)</p>",
        "id": 180146619,
        "sender_full_name": "eddyb",
        "timestamp": 1573142726
    },
    {
        "content": "<p>the check for that might need to happen, especially for the <code>sparc</code> branch, which is the only one which has actual ABIs that aren’t \"GNU\".</p>",
        "id": 180146659,
        "sender_full_name": "nagisa",
        "timestamp": 1573142752
    }
]