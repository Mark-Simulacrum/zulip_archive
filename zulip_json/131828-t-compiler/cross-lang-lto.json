[
    {
        "content": "<p>@mw i'm trying to set up jemalloc with <code>-Zcross-lang-lto</code> on macosx with xcode10 (should have a recent enough clang) so that jemalloc is inlined into Rust:</p>\n<p><code>CFLAGS=\"-flto=thin\" RUSTFLAGS=\"-Zcross-lang-lto -Ccodegen-units=1\" cargo test --all --release </code></p>\n<p>fails with: <code>ld: unknown option: -plugin-opt=O3</code></p>\n<p>I guess I'm missing something?</p>",
        "id": 137152945,
        "sender_full_name": "gnzlbg",
        "timestamp": 1541331193
    },
    {
        "content": "<p>I never tested the OSX linker with this. LLD works best in my experience (at least on Windows and Linux). Also, since nightly Rust is based on the yet unreleased LLVM 8.0, you might have to compile your own Clang because the LLVM IR format has changed.</p>",
        "id": 146788804,
        "sender_full_name": "mw",
        "timestamp": 1541415852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> Do you have a specific project you want to try this with?</p>",
        "id": 147580977,
        "sender_full_name": "mw",
        "timestamp": 1542103233
    },
    {
        "content": "<p>I'm thinking about creating a sample project with some benchmarks</p>",
        "id": 147581008,
        "sender_full_name": "mw",
        "timestamp": 1542103262
    },
    {
        "content": "<p>if you already had something suitable, we could use that</p>",
        "id": 147581025,
        "sender_full_name": "mw",
        "timestamp": 1542103282
    },
    {
        "content": "<p>jemalloc-sys would be nice</p>",
        "id": 147583371,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542106151
    },
    {
        "content": "<p>jemalloc-sys would be nice</p>",
        "id": 147583372,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542106151
    },
    {
        "content": "<p>It already has benchmarks that might benefit from this.</p>",
        "id": 147583373,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542106152
    },
    {
        "content": "<p>ok, great! existing benchmarks are a big plus.</p>",
        "id": 147594300,
        "sender_full_name": "mw",
        "timestamp": 1542119379
    },
    {
        "content": "<p>I'll look into it over the next few days</p>",
        "id": 147594399,
        "sender_full_name": "mw",
        "timestamp": 1542119421
    },
    {
        "content": "<p>i'm in a conference till thursday, but have the zulip app on the phone and check it now and then</p>\n<p>I don't know if you want to try this out spontaneously once you get some time for it, or if you want to allocate a slot of time for trying that out in advance. If you do, let me know when, I can try to be online in case anything doesn't work. Compiling jemalloc-sys should \"just work\" but it builds jemalloc which is a C library with a non-trivial makefile system, so the experience isn't always smooth. If you get stuck I might be able to help though.</p>",
        "id": 147602254,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542126393
    },
    {
        "content": "<p>thanks!</p>",
        "id": 147602361,
        "sender_full_name": "mw",
        "timestamp": 1542126490
    },
    {
        "content": "<p>I don't have a fixed time slot allocated for it.</p>",
        "id": 147602379,
        "sender_full_name": "mw",
        "timestamp": 1542126506
    },
    {
        "content": "<p>ok, then ping me if you run into any issues, maybe i'm online</p>",
        "id": 147602420,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542126558
    },
    {
        "content": "<p>OK, I had success with the following command:<br>\n<code>EXTRA_CFLAGS=-flto=thin CC=\"/home/mw/llvm-build/bin/clang\" RUSTFLAGS=\"-Clinker=/home/mw/llvm-build/bin/clang -Zcross-lang-lto -Zpre-link-arg=-fuse-ld=lld\" cargo test --release --all</code></p>",
        "id": 147668532,
        "sender_full_name": "mw",
        "timestamp": 1542203515
    },
    {
        "content": "<p>but I had to modify a file in jemalloc because an extra LD_FLAG is needed</p>",
        "id": 147668586,
        "sender_full_name": "mw",
        "timestamp": 1542203547
    },
    {
        "content": "<p><code>LD_FLAGS=-fuse-ld=lld</code> and <code>EXTRA_LD_FLAGS=-fuse-ld=lld</code> didn't work unfortunately</p>",
        "id": 147668611,
        "sender_full_name": "mw",
        "timestamp": 1542203589
    },
    {
        "content": "<p>another problem is that the commandline options for LLD seem to have changed in a non-backwards compatible way</p>",
        "id": 147668633,
        "sender_full_name": "mw",
        "timestamp": 1542203627
    },
    {
        "content": "<p>I had to modify <code>rustc</code> to not pass a flag anymore that was still accepted a while ago</p>",
        "id": 147668685,
        "sender_full_name": "mw",
        "timestamp": 1542203656
    },
    {
        "content": "<p>see <a href=\"https://github.com/rust-lang/rust/pull/55947\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55947\">https://github.com/rust-lang/rust/pull/55947</a></p>",
        "id": 147668719,
        "sender_full_name": "mw",
        "timestamp": 1542203687
    },
    {
        "content": "<p>I used the rustc version from the PR (basically nightly)</p>",
        "id": 147668761,
        "sender_full_name": "mw",
        "timestamp": 1542203715
    },
    {
        "content": "<p>and the latest clang master</p>",
        "id": 147668766,
        "sender_full_name": "mw",
        "timestamp": 1542203724
    },
    {
        "content": "<p>cool! I was trying to use apple clang and was failing, going to give the latest clang master a try instead. Shouldn't we ship this too with the <code>llvm-tools-preview</code> ?</p>",
        "id": 147730422,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542274232
    },
    {
        "content": "<blockquote>\n<p>Shouldn't we ship this too with the llvm-tools-preview</p>\n</blockquote>\n<p>I was thinking that too. The only problem I see is that we would be shipping an unstable/not officially released version of Clang, which doesn't sound ideal to me. On the other hand, stable Clang is unlikely to ever catch up with rustc's LLVM version...</p>",
        "id": 147732958,
        "sender_full_name": "mw",
        "timestamp": 1542277793
    },
    {
        "content": "<p>I think it is fair to assume that if you want to use cross-lang-lto you need to use a clang version that's in sync with rust's llvm version (bundled or not), and that's what <code>llvm-tools</code> is there for if a bundled LLVM is shipped. I also wanted to add <code>llc</code> to <code>llvm-tools</code>,  so a PR to update that could probably just do both.</p>",
        "id": 147736058,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542282080
    },
    {
        "content": "<p>Do you have a branch of jemallocator that builds with cross-lang-lto locally ?</p>",
        "id": 147736289,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542282409
    },
    {
        "content": "<p>let me create one...</p>",
        "id": 147739609,
        "sender_full_name": "mw",
        "timestamp": 1542287169
    },
    {
        "content": "<p>hm, it's not so easy since the change is in the jemalloc sources...</p>",
        "id": 147739725,
        "sender_full_name": "mw",
        "timestamp": 1542287313
    },
    {
        "content": "<p>this should work:<br>\ngit clone <a href=\"https://github.com/michaelwoerister/jemallocator.git\" target=\"_blank\" title=\"https://github.com/michaelwoerister/jemallocator.git\">https://github.com/michaelwoerister/jemallocator.git</a> --branch clang-thinlto-hack --recursive</p>",
        "id": 147741472,
        "sender_full_name": "mw",
        "timestamp": 1542289167
    },
    {
        "content": "<p>you still need the right version of clang and rustc though</p>",
        "id": 147741533,
        "sender_full_name": "mw",
        "timestamp": 1542289218
    },
    {
        "content": "<p>ok, we should send a patch to jemalloc with a configuration option that forces using lld for linking</p>",
        "id": 147741660,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542289420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  I wonder, isn't it enough during configure (e.g. in <code>jemalloc-sys/build.rs</code>) to call <code>configure</code> with the environment variable (\"LDFLAGS\", &amp;format(\"{} -fuse-ld=lld\")) ?</p>",
        "id": 147741967,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542289731
    },
    {
        "content": "<p>might be less intrusive than modifying jemalloc at this point</p>",
        "id": 147741992,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542289758
    },
    {
        "content": "<p>I tried <code>LD_FLAGS=\"-fuse-ld=lld\" cargo build</code> and <code>EXTRA_LD_FLAGS=\"-fuse-ld=lld\" cargo build</code></p>",
        "id": 147742124,
        "sender_full_name": "mw",
        "timestamp": 1542289898
    },
    {
        "content": "<p>but the configure script would ignore them</p>",
        "id": 147742131,
        "sender_full_name": "mw",
        "timestamp": 1542289912
    },
    {
        "content": "<p>using CFLAGS this way worked just fine</p>",
        "id": 147742176,
        "sender_full_name": "mw",
        "timestamp": 1542289925
    },
    {
        "content": "<p>maybe cargo isn't passing the flags on? or the configure script doesn't support LD_FLAGS being set from the outside</p>",
        "id": 147742195,
        "sender_full_name": "mw",
        "timestamp": 1542289958
    },
    {
        "content": "<p>also, in theory it should work with other linkers too, if the right <code>--plugin</code> option is passed</p>",
        "id": 147742239,
        "sender_full_name": "mw",
        "timestamp": 1542290021
    },
    {
        "content": "<p>in practice things didn't work so well with <code>ld</code> the last time I tried</p>",
        "id": 147742288,
        "sender_full_name": "mw",
        "timestamp": 1542290044
    },
    {
        "content": "<p><code>gold</code> worked at some point and later didn't</p>",
        "id": 147742309,
        "sender_full_name": "mw",
        "timestamp": 1542290065
    },
    {
        "content": "<p>so I'm telling people to use LLD, but for jemalloc a more general solution would be needed, I think</p>",
        "id": 147742339,
        "sender_full_name": "mw",
        "timestamp": 1542290105
    },
    {
        "content": "<p><a href=\"https://github.com/gnzlbg/jemallocator/commit/6eb2b293f46e85b5c2d9190658507a76293dd031\" target=\"_blank\" title=\"https://github.com/gnzlbg/jemallocator/commit/6eb2b293f46e85b5c2d9190658507a76293dd031\">https://github.com/gnzlbg/jemallocator/commit/6eb2b293f46e85b5c2d9190658507a76293dd031</a></p>",
        "id": 147744136,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291589
    },
    {
        "content": "<p>so independently of how to pass this (cflags, ldflags, ...) something like this should work</p>",
        "id": 147744207,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291624
    },
    {
        "content": "<p>once the new nightly is produced, we should try to at least upstream this to jemallocator, and get the macosx build bots to use it</p>",
        "id": 147744243,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291654
    },
    {
        "content": "<p>we could add an <code>x86_64-unknown-linux-gnu</code> build bot that has clang trunk installed in travis (llvm apt repos provide this)</p>",
        "id": 147744280,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291680
    },
    {
        "content": "<p>and get it going on linux as well</p>",
        "id": 147744292,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291696
    },
    {
        "content": "<p>ideally behind an opt-in option at the beginning</p>",
        "id": 147744309,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291707
    },
    {
        "content": "<p>so that people can enable it if it works for them</p>",
        "id": 147744321,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291719
    },
    {
        "content": "<p>we can then try to use this in rustc, and once it works, maybe turn that to opt-out so that cross-lang lto is used by default</p>",
        "id": 147744382,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291750
    },
    {
        "content": "<p>oh by the way, I only tested this on linux so far</p>",
        "id": 147744390,
        "sender_full_name": "mw",
        "timestamp": 1542291758
    },
    {
        "content": "<p>i'll test macos once the next nightly is released, it is not working there for me yet</p>",
        "id": 147744423,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291781
    },
    {
        "content": "<p>did you verify that the patch above works?</p>",
        "id": 147744550,
        "sender_full_name": "mw",
        "timestamp": 1542291862
    },
    {
        "content": "<p>i.e. is it cargo that's not passing on the LD_FLAGS variable?</p>",
        "id": 147744574,
        "sender_full_name": "mw",
        "timestamp": 1542291890
    },
    {
        "content": "<p>nope, I haven't yet, last time i tried I was still passing it more flags (use lto thin, etc.)</p>",
        "id": 147744695,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542291981
    },
    {
        "content": "<p>but jemalloc-sys built? because that's where it failed for me</p>",
        "id": 147744844,
        "sender_full_name": "mw",
        "timestamp": 1542292092
    },
    {
        "content": "<p>while linking some shared library</p>",
        "id": 147744849,
        "sender_full_name": "mw",
        "timestamp": 1542292105
    },
    {
        "content": "<p>btw, do you know why <code>cargo bench</code> fails?</p>",
        "id": 147744899,
        "sender_full_name": "mw",
        "timestamp": 1542292155
    },
    {
        "content": "<p>it gives a lot of errors while building the benchmark</p>",
        "id": 147744921,
        "sender_full_name": "mw",
        "timestamp": 1542292169
    },
    {
        "content": "<p>with the LTO options it did not build, I just assumed that it was because I was passing it more options than you, and that because I am using a nightly without your latest PR</p>",
        "id": 147745069,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542292269
    },
    {
        "content": "<p>it might be that the benchmarks are not tested on CI ?</p>",
        "id": 147745091,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542292290
    },
    {
        "content": "<p>at some point it switched to use <code>cargo test --all</code> but maybe that does not build the benchmarks and they got out of sync</p>",
        "id": 147745136,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542292322
    },
    {
        "content": "<p>I get this:</p>",
        "id": 147745236,
        "sender_full_name": "mw",
        "timestamp": 1542292414
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0599]: no method named `dealloc` found for type `jemallocator::Jemalloc` in the current scope\n    --&gt; benches/roundtrip.rs:249:26\n     |\n249  |                   Jemalloc.dealloc(ptr, new_layout);\n     |                            ^^^^^^^\n...\n4873 | / rt_realloc_excess_used!(\n4874 | |     rt_primes_4194301bytes_32align_realloc_excess_used,\n4875 | |     4194301,\n4876 | |     32\n4877 | | );\n     | |__- in this macro invocation\n     |\n     = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope, perhaps add a `use` for it:\n     |\n9    | use std::alloc::GlobalAlloc;\n     |\n\nerror: aborting due to 6301 previous errors\n</pre></div>",
        "id": 147745237,
        "sender_full_name": "mw",
        "timestamp": 1542292420
    },
    {
        "content": "<p>might be just a small fix that's needed</p>",
        "id": 147745307,
        "sender_full_name": "mw",
        "timestamp": 1542292454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> i'll send a PR fixing those, the benchmarks are not built on CI anymore, and they don't have any of the GlobalAlloc / Alloc changes of the last... year at least ... so nothing builds</p>",
        "id": 147745335,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542292483
    },
    {
        "content": "<p>working on a PR now</p>",
        "id": 147745358,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542292505
    },
    {
        "content": "<p>thanks!</p>",
        "id": 147745388,
        "sender_full_name": "mw",
        "timestamp": 1542292549
    },
    {
        "content": "<p>PR is open (<a href=\"https://github.com/alexcrichton/jemallocator/pull/98\" target=\"_blank\" title=\"https://github.com/alexcrichton/jemallocator/pull/98\">https://github.com/alexcrichton/jemallocator/pull/98</a>), once CI is green I'll merge.</p>",
        "id": 147749202,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542295336
    },
    {
        "content": "<p>rust chokes a bit compiling the benchmarks though</p>",
        "id": 147749262,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542295386
    },
    {
        "content": "<p>@mw the benchmark changes have been merged and there is a nightly containing the linker changes already</p>",
        "id": 147815072,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542373124
    },
    {
        "content": "<p>until clang is shipped with the <code>llvm-tools</code> we can just query the clang version at &gt;= 8</p>",
        "id": 147815088,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542373161
    },
    {
        "content": "<p><code>rustc -vV</code> prints the LLVM version. we could use that</p>",
        "id": 147821804,
        "sender_full_name": "mw",
        "timestamp": 1542380543
    },
    {
        "content": "<p>sounds good</p>",
        "id": 147824730,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542383185
    },
    {
        "content": "<p>I have the benchmarks running but they are taking so long, I think I won't wait for them</p>",
        "id": 147830893,
        "sender_full_name": "mw",
        "timestamp": 1542388515
    },
    {
        "content": "<p>fyi: I'll be on vacation until wednesday, so I probably won't be online</p>",
        "id": 147830958,
        "sender_full_name": "mw",
        "timestamp": 1542388564
    },
    {
        "content": "<p>hm, you can do a <code>cargo benchcmp</code> on the results printed so far...</p>",
        "id": 147831084,
        "sender_full_name": "mw",
        "timestamp": 1542388718
    },
    {
        "content": "<p>so these are not all benchmarks, but quite a few. they look pretty good mostly:</p>",
        "id": 147831107,
        "sender_full_name": "mw",
        "timestamp": 1542388749
    },
    {
        "content": "<p><a href=\"https://gist.githubusercontent.com/michaelwoerister/2c9e2b03f0343d70a8d57ceb637b9895/raw/c98db6398d4553e5fa3f0da573bf7bf883932142/partial-benchcmp-jemallocator-xtlo.txt\" target=\"_blank\" title=\"https://gist.githubusercontent.com/michaelwoerister/2c9e2b03f0343d70a8d57ceb637b9895/raw/c98db6398d4553e5fa3f0da573bf7bf883932142/partial-benchcmp-jemallocator-xtlo.txt\">https://gist.githubusercontent.com/michaelwoerister/2c9e2b03f0343d70a8d57ceb637b9895/raw/c98db6398d4553e5fa3f0da573bf7bf883932142/partial-benchcmp-jemallocator-xtlo.txt</a></p>",
        "id": 147831112,
        "sender_full_name": "mw",
        "timestamp": 1542388759
    }
]