[
    {
        "content": "<p>Does the rust compiler have something special to do that or do I need to fiddle with llvm flags?</p>",
        "id": 214921477,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1603940295
    },
    {
        "content": "<p>for <em>each</em> pass? I don't know if there's a way. If you just way the final IR you can use <code>--emit llvm-ir</code> though</p>",
        "id": 214921628,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603940417
    },
    {
        "content": "<p>save-temps also adds no-opt, which I suppose is the IR as rustc sends it to llvm. I guess I just have to play with llvm flags.</p>",
        "id": 214921788,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1603940615
    },
    {
        "content": "<p>You can pass something like this to rustc:</p>\n<p><code>-C llvm-args='-print-after-all -filter-print-funcs=your_mangled_function_name' -C codegen-units=1</code></p>\n<p>More details here -- <a href=\"https://rustc-dev-guide.rust-lang.org/backend/debugging.html?highlight=print-after-all#debugging-llvm\">https://rustc-dev-guide.rust-lang.org/backend/debugging.html?highlight=print-after-all#debugging-llvm</a></p>",
        "id": 214921958,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1603940851
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306073\">@Tyson Nottingham</span> thank you</p>",
        "id": 214928050,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1603949238
    },
    {
        "content": "<p>(BTW, interestingly, the thing I'm trying to track down only happens with -C codegen-units=1)</p>",
        "id": 214929551,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1603951552
    }
]