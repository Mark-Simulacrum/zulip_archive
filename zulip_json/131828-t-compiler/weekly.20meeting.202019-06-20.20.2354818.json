[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; the triage meeting will be starting in about 32 minutes.</p>",
        "id": 168594938,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037294
    },
    {
        "content": "<p>I will be doing <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-06-20.20.2354818\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-06-20.20.2354818\">pre-triage in a parallel topic</a></p>",
        "id": 168595022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037380
    },
    {
        "content": "<p>Hi again <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 168598039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039231
    },
    {
        "content": "<p>I forgot to check in about WG-checkin</p>",
        "id": 168598050,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039238
    },
    {
        "content": "<p>but given how many beta regressions and nominations and P-highs we have</p>",
        "id": 168598083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039261
    },
    {
        "content": "<p>(and the fact that <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is out at the Moz All Hands and presumably not attending this meeting)</p>",
        "id": 168598123,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039285
    },
    {
        "content": "<p>lets not do WG check-in today, and just focus on issue triage, nominations,. etc.</p>",
        "id": 168598149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039305
    },
    {
        "content": "<p>but first of all: Any <strong>announcements</strong> ?? Lets wait a few minutes and see</p>",
        "id": 168598239,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039344
    },
    {
        "content": "<p>I will be offline for the first two July weeks and have reduced rustc time afterwards since I'm starting a new job</p>",
        "id": 168598291,
        "sender_full_name": "oli",
        "timestamp": 1561039390
    },
    {
        "content": "<p>ah sad news is <em>not allowed</em> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> !</p>",
        "id": 168598313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039407
    },
    {
        "content": "<p>but I kid of course. Half kid.</p>",
        "id": 168598319,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039415
    },
    {
        "content": "<p>so we done did the <code>'gcx</code> removal already</p>",
        "id": 168598326,
        "sender_full_name": "eddyb",
        "timestamp": 1561039422
    },
    {
        "content": "<p>and you beta-nominated the 'gcx removal I assume ( <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span> )</p>",
        "id": 168598402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039450
    },
    {
        "content": "<p>/me is in a jovial mood today</p>",
        "id": 168598416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039459
    },
    {
        "content": "<blockquote>\n<p>/me is in a jovial mood today</p>\n</blockquote>\n<p>the best mood of them all</p>",
        "id": 168598459,
        "sender_full_name": "oli",
        "timestamp": 1561039489
    },
    {
        "content": "<p>so I started to pursuit some AST/HIR restructuring, with <a href=\"https://github.com/rust-lang/rust/issues/61968\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61968\">#61968</a></p>",
        "id": 168598461,
        "sender_full_name": "eddyb",
        "timestamp": 1561039491
    },
    {
        "content": "<p>I'm not sure that should've been merged already :|</p>",
        "id": 168598477,
        "sender_full_name": "eddyb",
        "timestamp": 1561039503
    },
    {
        "content": "<p>since it kinda conflicted with <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span>'s own work in this area</p>",
        "id": 168598496,
        "sender_full_name": "eddyb",
        "timestamp": 1561039516
    },
    {
        "content": "<p>where did <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> register their concerns? Just in private messages or irc or discord or something?</p>",
        "id": 168598533,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039547
    },
    {
        "content": "<p>but either way I think we should move towards respecting AST/HIR integrity and not go around cloning or mutating nodes all over the place</p>",
        "id": 168598535,
        "sender_full_name": "eddyb",
        "timestamp": 1561039549
    },
    {
        "content": "<p>we were talking over Discord and I forgot to leave a note on-thread last night</p>",
        "id": 168598592,
        "sender_full_name": "eddyb",
        "timestamp": 1561039564
    },
    {
        "content": "<p>i see</p>",
        "id": 168598620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039587
    },
    {
        "content": "<p>one thing I noticed  that concerned me is that diagnostic code and other pieces of the compiler were cloning the HIR instead of passing around references, even if they had no need to actually keep a separate copy of anything</p>",
        "id": 168598642,
        "sender_full_name": "eddyb",
        "timestamp": 1561039614
    },
    {
        "content": "<p>I assume whatever the concerns were, they wouldn't justify backing the PR out</p>",
        "id": 168598648,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039616
    },
    {
        "content": "<p>yeah it just means they have to adjust their own PR further</p>",
        "id": 168598672,
        "sender_full_name": "eddyb",
        "timestamp": 1561039635
    },
    {
        "content": "<p>Speaking of AST/HIR restructuring, I could use your eyes on <a href=\"https://github.com/rust-lang/rust/pull/61988\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/61988\">https://github.com/rust-lang/rust/pull/61988</a> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 168598721,
        "sender_full_name": "centril",
        "timestamp": 1561039680
    },
    {
        "content": "<p>oh yeah <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> has been trying to push for a more desugared HIR for a while now</p>",
        "id": 168598792,
        "sender_full_name": "eddyb",
        "timestamp": 1561039706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> would you like to present this stuff on a friday \"design\" meeting?</p>",
        "id": 168598828,
        "sender_full_name": "eddyb",
        "timestamp": 1561039735
    },
    {
        "content": "<p>yeah it might be good to make some sort of proposal for that</p>",
        "id": 168598844,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039747
    },
    {
        "content": "<p>I should too, except right now I'm mostly doing small things here and there and have no concrete plans yet</p>",
        "id": 168598853,
        "sender_full_name": "eddyb",
        "timestamp": 1561039752
    },
    {
        "content": "<p>the design meeting process is documented at <a href=\"https://github.com/rust-lang/rust/issues/58850\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58850\">#58850</a></p>",
        "id": 168598863,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039768
    },
    {
        "content": "<p>(other than we should do arenas and \"persistent collections\"-like handling of the AST - at least the HIR is already created immutable)</p>",
        "id": 168598881,
        "sender_full_name": "eddyb",
        "timestamp": 1561039792
    },
    {
        "content": "<p>(well, the documentation of the protocol isn't actuallyt here, but should be linked from there)</p>",
        "id": 168598894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039799
    },
    {
        "content": "<p>Beyond this PR and the 2/6 PR that removes IfLet and WhileLet I think we should remove &amp;&amp; and || as binary operators</p>",
        "id": 168598984,
        "sender_full_name": "centril",
        "timestamp": 1561039830
    },
    {
        "content": "<p>but that might break some const code</p>",
        "id": 168598993,
        "sender_full_name": "centril",
        "timestamp": 1561039837
    },
    {
        "content": "<p>due to lack of control flow in consts atm</p>",
        "id": 168599002,
        "sender_full_name": "centril",
        "timestamp": 1561039846
    },
    {
        "content": "<p>yeah we can't do that yet. and I'm not sure we should... it's inching into HIR -&gt; MIR territory</p>",
        "id": 168599013,
        "sender_full_name": "eddyb",
        "timestamp": 1561039860
    },
    {
        "content": "<p>hence we should discuss how much desugaring we even want at the HIR level (in a design meeting!)</p>",
        "id": 168599025,
        "sender_full_name": "eddyb",
        "timestamp": 1561039870
    },
    {
        "content": "<p>okay hold on</p>",
        "id": 168599034,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039879
    },
    {
        "content": "<p>lets get back on course and do triage</p>",
        "id": 168599039,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039887
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 168599041,
        "sender_full_name": "eddyb",
        "timestamp": 1561039888
    },
    {
        "content": "<p>(see my goal here is to lure you all in with @eddyb's devious plans)</p>",
        "id": 168599072,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039914
    },
    {
        "content": "<p>and then bait-and-switch to triage</p>",
        "id": 168599101,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039922
    },
    {
        "content": "<p>:D</p>",
        "id": 168599122,
        "sender_full_name": "centril",
        "timestamp": 1561039928
    },
    {
        "content": "<p>lets do <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\">beta-nominations first</a> because I'm terrified we'll skip them otherwise.</p>",
        "id": 168599158,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039970
    },
    {
        "content": "<p><span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 168599177,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1561039991
    },
    {
        "content": "<p>(I'm mostly worried we'll be stepping in eachother's toes. maybe we should have a system different from the meetings to announce/track work in the compiler that's interesting/disruptive but not necessarily big enough to warrant design planning)</p>",
        "id": 168599179,
        "sender_full_name": "eddyb",
        "timestamp": 1561039991
    },
    {
        "content": "<p>beta nom: \"resolve: Temporarily make <code>panic</code> available with <code>no_implicit_prelude</code>\" <a href=\"https://github.com/rust-lang/rust/issues/61971\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61971\">#61971</a></p>",
        "id": 168599184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039996
    },
    {
        "content": "<p>I don't feel I understand why we are doing this</p>",
        "id": 168599224,
        "sender_full_name": "centril",
        "timestamp": 1561040035
    },
    {
        "content": "<p>it seems even <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> does not necessarily want to do this ?</p>",
        "id": 168599274,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040048
    },
    {
        "content": "<p>Is this a semantic change on beta?</p>",
        "id": 168599288,
        "sender_full_name": "centril",
        "timestamp": 1561040060
    },
    {
        "content": "<p>macros have a lot of historical baggage and the only thing I understand is that we're trying to skirt around breaking changes but also make progress?</p>",
        "id": 168599313,
        "sender_full_name": "eddyb",
        "timestamp": 1561040082
    },
    {
        "content": "<blockquote>\n<p>I don't feel I understand why we are doing this</p>\n</blockquote>\n<p>Due to a beta regression.<br>\nBut yes, I'd prefer not to do it, but rather close the regression issue as wontfix.</p>",
        "id": 168599315,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561040084
    },
    {
        "content": "<p>in particular <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> said that they'd <em>rather</em> close <a href=\"https://github.com/rust-lang/rust/issues/61567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61567\">#61567</a> as a wont-fix</p>",
        "id": 168599317,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040086
    },
    {
        "content": "<p>didn't we say a long time ago that we shouldn't have accidentally let <code>#![no_implicit_prelude]</code> be stable?</p>",
        "id": 168599362,
        "sender_full_name": "eddyb",
        "timestamp": 1561040121
    },
    {
        "content": "<p>I have vague memories of a meeting where that came up</p>",
        "id": 168599374,
        "sender_full_name": "eddyb",
        "timestamp": 1561040134
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>  what is the behavior of other macros with <code>no_implicit_prelude</code> atm ?</p>",
        "id": 168599379,
        "sender_full_name": "centril",
        "timestamp": 1561040140
    },
    {
        "content": "<p>they are .. fixed by PR <a href=\"https://github.com/rust-lang/rust/issues/61629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61629\">#61629</a> I think?</p>",
        "id": 168599471,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040177
    },
    {
        "content": "<blockquote>\n<p>what is the behavior of other macros with no_implicit_prelude atm ?</p>\n</blockquote>\n<p>Built-ins are available, but others are not (at least on 2018 edition).</p>",
        "id": 168599475,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561040180
    },
    {
        "content": "<p>Given that <code>panic!</code> is not a built-in then it should not be available I think</p>",
        "id": 168599511,
        "sender_full_name": "centril",
        "timestamp": 1561040212
    },
    {
        "content": "<p>so I think wontfix is right</p>",
        "id": 168599516,
        "sender_full_name": "centril",
        "timestamp": 1561040216
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> was PR <a href=\"https://github.com/rust-lang/rust/issues/61629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61629\">#61629</a> supposed to be nominated for beta-backport, given that issue <a href=\"https://github.com/rust-lang/rust/issues/61567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61567\">#61567</a> is a stable-to-beta regression ?</p>",
        "id": 168599551,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040243
    },
    {
        "content": "<p>if we move the builtins to <code>libcore</code>, how are we going to deal with <code>#![no_implicit_prelude]</code>? I was hoping there was no stable way to turn the prelude off...</p>",
        "id": 168599553,
        "sender_full_name": "eddyb",
        "timestamp": 1561040246
    },
    {
        "content": "<p>/me will nominate <a href=\"https://github.com/rust-lang/rust/issues/61629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61629\">#61629</a> now to make sure we get to it.</p>",
        "id": 168599636,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040285
    },
    {
        "content": "<p>or is <a href=\"https://github.com/rust-lang/rust/issues/61567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61567\">#61567</a> specifically about <code>panic</code> ...</p>",
        "id": 168599666,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040313
    },
    {
        "content": "<blockquote>\n<p>if we move the builtins to libcore, how are we going to deal with #![no_implicit_prelude]?</p>\n</blockquote>\n<p>Even if the macro is introduced through <code>macro_use</code>, we still should be able to determine that it originally comes from <code>#[rustc_builtin_macro = \"foo\"]</code> and make an exception for <code>no_implicit_prelude</code> logic.</p>",
        "id": 168599802,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561040406
    },
    {
        "content": "<p>am I being dumb here? Is <code>panic</code> the only one that is relevant for stable-to-beta regression ?</p>",
        "id": 168599806,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040408
    },
    {
        "content": "<blockquote>\n<p>Is panic the only one that is relevant for stable-to-beta regression ?</p>\n</blockquote>\n<p>Yes, if <a href=\"https://github.com/rust-lang/rust/pull/61629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/61629\">https://github.com/rust-lang/rust/pull/61629</a> is backported to beta.</p>",
        "id": 168599908,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561040499
    },
    {
        "content": "<p>is it because <code>assert_eq!</code> is now a builtin, but <code>panic!</code> isn't?</p>",
        "id": 168599926,
        "sender_full_name": "eddyb",
        "timestamp": 1561040521
    },
    {
        "content": "<p>okay, that was the important \"if\" statement I was waiting for</p>",
        "id": 168599969,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040527
    },
    {
        "content": "<p>so it's a rare case of a built-in calling a non-built-in?</p>",
        "id": 168599971,
        "sender_full_name": "eddyb",
        "timestamp": 1561040530
    },
    {
        "content": "<p>wait... <code>assert_eq</code> is built-in?</p>",
        "id": 168600011,
        "sender_full_name": "centril",
        "timestamp": 1561040567
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/src/core/macros.rs.html#45-78\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/src/core/macros.rs.html#45-78\">https://doc.rust-lang.org/nightly/src/core/macros.rs.html#45-78</a></p>",
        "id": 168600024,
        "sender_full_name": "centril",
        "timestamp": 1561040581
    },
    {
        "content": "<blockquote>\n<p>so it's a rare case of a built-in calling a non-built-in?</p>\n</blockquote>\n<p>It's a rare case of a std lib macro calling <code>panic</code> specifically.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/61629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/61629\">https://github.com/rust-lang/rust/pull/61629</a> has some discussion about why <code>panic</code> is unique.</p>",
        "id": 168600054,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561040616
    },
    {
        "content": "<p>wait why did I think <code>assert_eq!</code> was builtin now?</p>",
        "id": 168600069,
        "sender_full_name": "eddyb",
        "timestamp": 1561040634
    },
    {
        "content": "<p>oh <code>assert!</code> is! sorry, got confused between the two</p>",
        "id": 168600125,
        "sender_full_name": "eddyb",
        "timestamp": 1561040655
    },
    {
        "content": "<p>so, it seems we have a choice here</p>",
        "id": 168600142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040683
    },
    {
        "content": "<p>either we close \"regression: assert_eq cannot find panic with no_implicit_prelude\" <a href=\"https://github.com/rust-lang/rust/issues/61567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61567\">#61567</a> as <strong>wont-fix</strong></p>",
        "id": 168600157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040697
    },
    {
        "content": "<p>or we backport \"resolve: Temporarily make panic available with no_implicit_prelude\" <a href=\"https://github.com/rust-lang/rust/issues/61971\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61971\">#61971</a></p>",
        "id": 168600174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040712
    },
    {
        "content": "<p>I don't have an opinion. It seems like everyone who has spoken up here in an actual message is in favor of closing <a href=\"https://github.com/rust-lang/rust/issues/61567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61567\">#61567</a> as wont-fix (and then closing the PR <a href=\"https://github.com/rust-lang/rust/issues/61971\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61971\">#61971</a> without merging it)</p>",
        "id": 168600234,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040756
    },
    {
        "content": "<p>Is this an incorrect summary of the dialogue so far? Is there anyone who wants to speak up in favor of treating <a href=\"https://github.com/rust-lang/rust/issues/61567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61567\">#61567</a> as a <strong>must-fix</strong> stable-to-beta regression ?</p>",
        "id": 168600309,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040797
    },
    {
        "content": "<blockquote>\n<p>Macros defined in libcore do not want to call core::panic.</p>\n</blockquote>\n<p>Wait... these two macros are not the same? wtf...</p>",
        "id": 168600325,
        "sender_full_name": "centril",
        "timestamp": 1561040814
    },
    {
        "content": "<p>(<code>std::panic</code> and <code>core::panic</code>)</p>",
        "id": 168600344,
        "sender_full_name": "centril",
        "timestamp": 1561040828
    },
    {
        "content": "<p>yeah the <code>std::panic</code> one can make a <code>Box&lt;dyn Any+'static&gt;</code></p>",
        "id": 168600447,
        "sender_full_name": "eddyb",
        "timestamp": 1561040896
    },
    {
        "content": "<p>arguably it should be in <code>alloc</code>. but I guess it depends on panic machinery in <code>std</code></p>",
        "id": 168600458,
        "sender_full_name": "eddyb",
        "timestamp": 1561040907
    },
    {
        "content": "<p>I haven't heard anyone speak up in favor of \"fixing\" <a href=\"https://github.com/rust-lang/rust/issues/61567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61567\">#61567</a></p>",
        "id": 168600510,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040946
    },
    {
        "content": "<p>so I'm going to close it as wont-fix</p>",
        "id": 168600517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561040952
    },
    {
        "content": "<p>okay, next beta-nom: \"Fix ICE involving mut references\" <a href=\"https://github.com/rust-lang/rust/issues/61947\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61947\">#61947</a></p>",
        "id": 168600709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041068
    },
    {
        "content": "<p>okay accepting</p>",
        "id": 168600769,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041119
    },
    {
        "content": "<p>next beta-nom: \"rustc_typeck: correctly compute <code>Substs</code> for <code>Res::SelfCtor</code>.\" <a href=\"https://github.com/rust-lang/rust/issues/61896\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61896\">#61896</a></p>",
        "id": 168600855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041166
    },
    {
        "content": "<p>okay accepting</p>",
        "id": 168600898,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041201
    },
    {
        "content": "<p>(I think the feature was stabilized in beta already so this is needed)</p>",
        "id": 168600925,
        "sender_full_name": "eddyb",
        "timestamp": 1561041220
    },
    {
        "content": "<p>next beta-nom: \"Fix rust-lldb wrapper scripts.\" <a href=\"https://github.com/rust-lang/rust/issues/61827\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61827\">#61827</a></p>",
        "id": 168600967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041242
    },
    {
        "content": "<p>why is this beta nominated ...</p>",
        "id": 168601006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> ^ ?</p>",
        "id": 168601018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041273
    },
    {
        "content": "<p>oh I see, the author requested it be so</p>",
        "id": 168601035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041289
    },
    {
        "content": "<p>the fact it hasn't gotten r+'ed yet makes me inclined to not approve it at this time</p>",
        "id": 168601051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041300
    },
    {
        "content": "<p>yeah, the author requested that</p>",
        "id": 168601072,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1561041313
    },
    {
        "content": "<p>I should probably leave an explicit comment next time</p>",
        "id": 168601080,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1561041318
    },
    {
        "content": "<p>(we do accept backports of unreviewed things, but only when they are stable-to-beta regressions, I think.)</p>",
        "id": 168601082,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041319
    },
    {
        "content": "<p>no its okay, you were reflecting author's intent</p>",
        "id": 168601089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041329
    },
    {
        "content": "<p>I mean, it was r+ed but it got rebased, and it's currently in niko's all hands limbo</p>",
        "id": 168601120,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1561041358
    },
    {
        "content": "<p>(sorry y'all, I forgot to add the emoji vote buttons earlier)</p>",
        "id": 168601178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041372
    },
    {
        "content": "<p>oh was it r+'ed?</p>",
        "id": 168601190,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041385
    },
    {
        "content": "<p>By niko</p>",
        "id": 168601199,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1561041392
    },
    {
        "content": "<p>I see, yes it was</p>",
        "id": 168601201,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041394
    },
    {
        "content": "<p>I still personally see no need</p>",
        "id": 168601216,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041408
    },
    {
        "content": "<p>rather have it just go through the nightly</p>",
        "id": 168601227,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041419
    },
    {
        "content": "<p>okay lets move along</p>",
        "id": 168601338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041489
    },
    {
        "content": "<p>(I'm going to decline, with explanation that its too close to beta cutoff to land this given that its not fixing a high priorty bug)</p>",
        "id": 168601406,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041538
    },
    {
        "content": "<p>next beta-nom: \"Fix cfg(test) build for x86_64-fortanix-unknown-sgx\" <a href=\"https://github.com/rust-lang/rust/issues/61503\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61503\">#61503</a></p>",
        "id": 168601525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041607
    },
    {
        "content": "<p>ah yes this does seem important</p>",
        "id": 168601559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041654
    },
    {
        "content": "<p>(for our internal QA of release)</p>",
        "id": 168601578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041669
    },
    {
        "content": "<p>next beta-nom: \"Dont ICE on an attempt to use GAT without feature gate\" <a href=\"https://github.com/rust-lang/rust/issues/61118\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61118\">#61118</a></p>",
        "id": 168601623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041717
    },
    {
        "content": "<p>(good old <code>delay_span_bug</code> ...)</p>",
        "id": 168601708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041761
    },
    {
        "content": "<p>though looking at this now, I admit I'm confused as to how <a href=\"https://github.com/rust-lang/rust/issues/56445\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56445\">#56445</a> ends up being related to GAT's ...</p>",
        "id": 168601860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041855
    },
    {
        "content": "<p>or maybe that's the whole point; its not related to GAT's.</p>",
        "id": 168601880,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041874
    },
    {
        "content": "<p>but its still an issue with the early-lifetime-param stuff</p>",
        "id": 168601894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041887
    },
    {
        "content": "<p>hmm</p>",
        "id": 168601896,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041890
    },
    {
        "content": "<p>well anyway seems safer to beta-backport</p>",
        "id": 168601914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041904
    },
    {
        "content": "<p>last beta-nom: \"Limit dylib symbols\" <a href=\"https://github.com/rust-lang/rust/issues/59752\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59752\">#59752</a></p>",
        "id": 168602023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561041965
    },
    {
        "content": "<p>What about the hygiene PR?</p>",
        "id": 168602043,
        "sender_full_name": "centril",
        "timestamp": 1561041993
    },
    {
        "content": "<p>oh acutaly</p>",
        "id": 168602093,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042037
    },
    {
        "content": "<p>there's a bunch of beta-nom'ed PR's that I should have prep-passed to add T-compiler label</p>",
        "id": 168602113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042055
    },
    {
        "content": "<p>so lets take care of that</p>",
        "id": 168602118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042059
    },
    {
        "content": "<p>(I'll mark <a href=\"https://github.com/rust-lang/rust/issues/59752\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59752\">#59752</a> as beta-accepted.)</p>",
        "id": 168602124,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042067
    },
    {
        "content": "<p>okay, new first beta-nom: \"create a \"provisional cache\" to restore performance in the case of cycles\" <a href=\"https://github.com/rust-lang/rust/issues/61754\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61754\">#61754</a></p>",
        "id": 168602206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042103
    },
    {
        "content": "<p>Some quick notes</p>",
        "id": 168602226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042123
    },
    {
        "content": "<p>this may not resolve <em>all</em> of the performance and overflow problems</p>",
        "id": 168602240,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042139
    },
    {
        "content": "<p>in particular I think <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> has noted that rust-analyzer is still having issues even on the nightly that includes <a href=\"https://github.com/rust-lang/rust/issues/61754\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61754\">#61754</a></p>",
        "id": 168602268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042158
    },
    {
        "content": "<p>so this may not be a home-run</p>",
        "id": 168602277,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042163
    },
    {
        "content": "<p>also, its quite a bit bigger (and more risky) than the other PR's we've looked at so far today</p>",
        "id": 168602310,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042186
    },
    {
        "content": "<blockquote>\n<p>also, its quite a bit bigger (and more risky) than the other PR's we've looked at so far today</p>\n</blockquote>\n<p>It fixes a critical issue though.</p>",
        "id": 168602386,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561042217
    },
    {
        "content": "<p>and finally: it hasn't had long at all to bake on Nightly</p>",
        "id": 168602393,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> do we have a week hypothetically to wait on a PR like this?</p>",
        "id": 168602424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042243
    },
    {
        "content": "<p>to let it bake more? (that is, to let it receive more testing against Nightly)</p>",
        "id": 168602431,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042247
    },
    {
        "content": "<p>or is that cutting things too close?</p>",
        "id": 168602441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042257
    },
    {
        "content": "<p>dunno</p>",
        "id": 168602468,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1561042274
    },
    {
        "content": "<p>waiting a week is fine</p>",
        "id": 168602469,
        "sender_full_name": "centril",
        "timestamp": 1561042274
    },
    {
        "content": "<p>I'll talk with alex once he wakes up at the all hands</p>",
        "id": 168602493,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1561042294
    },
    {
        "content": "<p>okay</p>",
        "id": 168602547,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042321
    },
    {
        "content": "<p>okay</p>",
        "id": 168602595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042338
    },
    {
        "content": "<p>I'm going to leave this unchanged for now</p>",
        "id": 168602618,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042360
    },
    {
        "content": "<p>still beta-nominated</p>",
        "id": 168602627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042363
    },
    {
        "content": "<p>but not beta-accepted</p>",
        "id": 168602632,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042367
    },
    {
        "content": "<p>and I'll leave a comment explainnig that w'ere currently predisposed to approve a backport</p>",
        "id": 168602642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042378
    },
    {
        "content": "<p>but we want to wait a little while before officially marking it so, if we can</p>",
        "id": 168602652,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042391
    },
    {
        "content": "<p>next beta-nom: \"Hygienize macros in the standard library\" <a href=\"https://github.com/rust-lang/rust/issues/61629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61629\">#61629</a></p>",
        "id": 168602679,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042413
    },
    {
        "content": "<p>oh right, I just nominated this. ha ha</p>",
        "id": 168602850,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042508
    },
    {
        "content": "<p>any objections? I personally am trusting <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> here, and the only question is whether I understood them correctly above in this meeting.</p>",
        "id": 168602887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042544
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> , anyone want to weigh in other than <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> on this?</p>",
        "id": 168603004,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042637
    },
    {
        "content": "<p>I'm reading the PR</p>",
        "id": 168603029,
        "sender_full_name": "oli",
        "timestamp": 1561042671
    },
    {
        "content": "<p><em>that</em> is an excellent answer.</p>",
        "id": 168603078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042683
    },
    {
        "content": "<p>I'm for it, I just tend not to vote on backports because my understanding was that it was those on the compiler team's decision.</p>",
        "id": 168603105,
        "sender_full_name": "davidtwco",
        "timestamp": 1561042703
    },
    {
        "content": "<p>(ah true, I probably at-signed the wrong people there)</p>",
        "id": 168603143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042732
    },
    {
        "content": "<p>((though anyone in the meeting is free to express a voiced opinion that might help sway T-compiler members votes))</p>",
        "id": 168603168,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042756
    },
    {
        "content": "<p>okay lets accept <a href=\"https://github.com/rust-lang/rust/issues/61629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61629\">#61629</a> for backport</p>",
        "id": 168603206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042780
    },
    {
        "content": "<p>and with that, we're at an hour</p>",
        "id": 168603345,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042837
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending.</p>",
        "id": 168603358,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042845
    },
    {
        "content": "<p>Sorry we didn't get to do anything but discuss beta-backports today.</p>",
        "id": 168603372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042853
    },
    {
        "content": "<p>thanks for driving <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 168603381,
        "sender_full_name": "oli",
        "timestamp": 1561042862
    },
    {
        "content": "<p>(I will also just mention that there are a bunch of <a href=\"https://github.com/rust-lang/rust/issues?q=label%3AP-high+label%3AT-compiler+no%3Aassignee\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=label%3AP-high+label%3AT-compiler+no%3Aassignee\">unassigned P-high T-compiler bugs</a>)</p>",
        "id": 168603522,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561042945
    },
    {
        "content": "<blockquote>\n<p>in particular I think <span class=\"user-mention silent\" data-user-id=\"133169\">matklad</span> has noted that rust-analyzer is still having issues even on the nightly that includes <a href=\"https://github.com/rust-lang/rust/issues/61754\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61754\">#61754</a></p>\n</blockquote>\n<p>link?</p>",
        "id": 168604970,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1561043879
    },
    {
        "content": "<blockquote>\n<p>link?</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/61960#issuecomment-503636781\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61960#issuecomment-503636781\">link</a></p>",
        "id": 168608117,
        "sender_full_name": "lqd",
        "timestamp": 1561045945
    },
    {
        "content": "<p>So, I had an idea how to fix the <code>panic</code> problem discussed above in a simple way.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/62002\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62002\">https://github.com/rust-lang/rust/pull/62002</a></p>",
        "id": 168620753,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561054902
    },
    {
        "content": "<p>On a related note, perhaps we need to reserve identifiers starting with <code>__rustc</code> (or something like that).<br>\nI know at least one more situation that would benefit from the same treatment as <a href=\"https://github.com/rust-lang/rust/issues/62002\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62002\">#62002</a> (<code>__rustc_dollar_crate</code> for processed <code>$crate</code>).</p>",
        "id": 168620896,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561055009
    }
]