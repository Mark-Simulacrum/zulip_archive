[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> this might be a super -silly question: Is there a way to ask LLVM to always keep a value at some <em>offset</em> from a given alignment? (Apart workarounds like putting the value as the second field in a packed struct, which would be the most immediate way I would try to encode such a thing)</p>",
        "id": 136057044,
        "sender_full_name": "pnkfelix",
        "timestamp": 1539882326
    },
    {
        "content": "<p>uhh, not sure about \"some offset\"</p>",
        "id": 136057350,
        "sender_full_name": "nagisa",
        "timestamp": 1539882628
    },
    {
        "content": "<p>if it is 0, then doing so is pretty easy</p>",
        "id": 136057353,
        "sender_full_name": "nagisa",
        "timestamp": 1539882635
    },
    {
        "content": "<p>LLVM barely even deals with alignments of fields, so I'm rather sure that isn't a thing</p>",
        "id": 136057471,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1539882786
    },
    {
        "content": "<p>if it is not <code>0</code> then what you might end up having to do is something along the lines of </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">%X</span> <span class=\"p\">=</span> <span class=\"k\">type</span> <span class=\"p\">&lt;{</span> <span class=\"p\">[</span><span class=\"err\">offset</span> <span class=\"k\">x</span> <span class=\"k\">i8</span><span class=\"p\">],</span> <span class=\"nv\">%Y</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"m\">0</span> <span class=\"k\">x</span> <span class=\"k\">i8</span><span class=\"p\">]</span> <span class=\"p\">}&gt;</span>\n</pre></div>",
        "id": 136057472,
        "sender_full_name": "nagisa",
        "timestamp": 1539882789
    },
    {
        "content": "<p>(then given <code>%X</code> is aligned to your \"given alignment\", then <code>%Y</code> will be offset from that by <code>offset</code>)</p>",
        "id": 136057548,
        "sender_full_name": "nagisa",
        "timestamp": 1539882860
    }
]