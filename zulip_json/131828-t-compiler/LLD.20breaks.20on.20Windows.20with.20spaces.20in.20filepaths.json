[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202020-09-25/near/211266646\">said</a>:</p>\n<blockquote>\n<p>I think <a href=\"https://github.com/rust-lang/rust/issues/76466\">https://github.com/rust-lang/rust/issues/76466</a> is the one that worries me the most. If it's as simple as \"building rust in paths with spaces is broken on windows\", that seems potentially far-reaching.</p>\n</blockquote>\n<p>It's _just_ that simple. I just tried beta on Windows 10 64-bit in a path with multiple spaces and <code>--target wasm32-unknown-unknown</code> and it works fine.</p>",
        "id": 211267603,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045405
    },
    {
        "content": "<p>(sorry to subscribe you to the stream, <span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span>)</p>",
        "id": 211267608,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045406
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202020-09-25/near/211266646\">said</a>:</p>\n<blockquote>\n<p>I think <a href=\"https://github.com/rust-lang/rust/issues/76466\">https://github.com/rust-lang/rust/issues/76466</a> is the one that worries me the most. If it's as simple as \"building rust in paths with spaces is broken on windows\", that seems potentially far-reaching.</p>\n</blockquote>\n<p>it <em>may</em> be broken for all LLD users on windows. Who relies on LLD besides WASM?</p>",
        "id": 211267617,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> it's <em>not</em> just that simple?</p>",
        "id": 211267656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045429
    },
    {
        "content": "<p>IE, that builds fine.</p>",
        "id": 211267669,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045435
    },
    {
        "content": "<p>yeah so it's something more specific, tied to lld I guess, and maybe 32 bit</p>",
        "id": 211267703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045452
    },
    {
        "content": "<p>But I'm on Win 64-bit so perhaps it's specific to 32-bit.</p>",
        "id": 211267711,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045457
    },
    {
        "content": "<p>I figured it must be or we'd have seen more people reporting it</p>",
        "id": 211267724,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045461
    },
    {
        "content": "<p>but original bug reporter said they were on Windows 64-bit ...</p>",
        "id": 211267734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045466
    },
    {
        "content": "<p>Did you try the exact repo case, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ?</p>",
        "id": 211267774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045487
    },
    {
        "content": "<p>No, I didn't. Just a basic hello world.</p>",
        "id": 211267796,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045497
    },
    {
        "content": "<p>If we can't reproduce it, rolling back LLVM 11 seems silly. But the argument around cross-lang inlining is real.</p>",
        "id": 211267805,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045503
    },
    {
        "content": "<p>Let me do that now.</p>",
        "id": 211267808,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045505
    },
    {
        "content": "<p>That may be a policy we should settle on (only use released LLVM versions)</p>",
        "id": 211267880,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045523
    },
    {
        "content": "<p>I don't have a 32 bit machine but I can try to reproduce on a 64 bit. I can also ask colleagues who likely have a 32 bit machine</p>",
        "id": 211267894,
        "sender_full_name": "rylev",
        "timestamp": 1601045532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> do you know which bug we're talking about? It's <a href=\"https://github.com/rust-lang/rust/issues/76466\">#76466</a></p>",
        "id": 211267924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045548
    },
    {
        "content": "<p>Yep I can see the chat history <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 211267945,
        "sender_full_name": "rylev",
        "timestamp": 1601045566
    },
    {
        "content": "<p>(I figured it might be kind of complex to follow)</p>",
        "id": 211267975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045581
    },
    {
        "content": "<p>Oh interesting</p>",
        "id": 211268065,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045631
    },
    {
        "content": "<p>I have a repo of the same test case on Win 10 64-bit in a path with spaces.</p>",
        "id": 211268074,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045637
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> That looks correct to me. For cross-lang LTO, you'd have to use a clang-11 pre-release build. It's pretty likely that the final version there will be released in the next two weeks, but there's no guarantees.</p>",
        "id": 211268297,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1601045711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202020-09-25/near/211268074\">said</a>:</p>\n<blockquote>\n<p>It repros</p>\n</blockquote>\n<p>ok, so it's kind of specific to wasm or something?</p>",
        "id": 211268372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045753
    },
    {
        "content": "<p>probably more subtle that just that, because <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> tried to select wasm as target in their Hello World, no?</p>",
        "id": 211268449,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045774
    },
    {
        "content": "<p>Yeah I did</p>",
        "id": 211268548,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045828
    },
    {
        "content": "<p>I have to go afk in a few minutes. I feel like y'all can make the call, I think it's borderline. I guess that even if LLVM 11 is not released when the stable release is out, it will be released shortly thereafter, and then cross-lang inlining would work again (right <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span>?)</p>",
        "id": 211268555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045830
    },
    {
        "content": "<p>That's right.</p>",
        "id": 211268597,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1601045853
    },
    {
        "content": "<p>i.e., we wouldn't need to do any point release</p>",
        "id": 211268616,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045863
    },
    {
        "content": "<p>I think \"Hello world\" works because the only dependency is the std and that isn't located in a path with spaces</p>",
        "id": 211268627,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045866
    },
    {
        "content": "<p>I think we can stick with LLVM 11 this cycle, because the risks associated with backing it out seem to outweigh the gains</p>",
        "id": 211268645,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045873
    },
    {
        "content": "<p>Which means things might be totally broken if anyone has installed Rust in a path that has spaces in it.</p>",
        "id": 211268726,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045892
    },
    {
        "content": "<p>Ah, so <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> it may be that any crate with dependencies and paths in spaces breaks?</p>",
        "id": 211268728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045892
    },
    {
        "content": "<p>Yeah</p>",
        "id": 211268737,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045895
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> maybe try a hello world that link to a different crate then.</p>",
        "id": 211268738,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045895
    },
    {
        "content": "<p>Not great.</p>",
        "id": 211268763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601045908
    },
    {
        "content": "<p>If I move the test to a directory that doesn't have spaces, it links fine.</p>",
        "id": 211268787,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045918
    },
    {
        "content": "<p>oy</p>",
        "id": 211268800,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045926
    },
    {
        "content": "<p>well, on the plus side</p>",
        "id": 211268824,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045939
    },
    {
        "content": "<p>that's a workaround</p>",
        "id": 211268833,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045941
    },
    {
        "content": "<p>not a great one given typical windows conventions</p>",
        "id": 211268865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045952
    },
    {
        "content": "<p>but one I've had to deploy in previous lives</p>",
        "id": 211268887,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601045959
    },
    {
        "content": "<p>I can't seem to reproduce on the latest nightly. Checking to make sure I have the same set up</p>",
        "id": 211268898,
        "sender_full_name": "rylev",
        "timestamp": 1601045965
    },
    {
        "content": "<p>I'll pull nightly and test too</p>",
        "id": 211268935,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601045982
    },
    {
        "content": "<p>anyone want to argue for a revert to LLVM 10 ?</p>",
        "id": 211269185,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046070
    },
    {
        "content": "<p>I don't see any differences between my workspace and the one from the issue. Going to try on the specific nightly from issue</p>",
        "id": 211269259,
        "sender_full_name": "rylev",
        "timestamp": 1601046103
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202020-09-25/near/211269185\">said</a>:</p>\n<blockquote>\n<p>anyone want to argue for a revert to LLVM 10 ?</p>\n</blockquote>\n<p>not I</p>",
        "id": 211269394,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601046144
    },
    {
        "content": "<p>but it may merit a point release if we get a fix for <a href=\"https://github.com/rust-lang/rust/issues/76466\">#76466</a> soon</p>",
        "id": 211269470,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1601046175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> your recent replication <em>was</em> on a Windows 64-bit box, right?</p>",
        "id": 211269700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046263
    },
    {
        "content": "<p>Yeah</p>",
        "id": 211269708,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601046270
    },
    {
        "content": "<p>I'm still seeing it repo on nightly</p>",
        "id": 211269739,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601046278
    },
    {
        "content": "<p>/me is not able to replicate on his 64-bit Windows VM</p>",
        "id": 211269821,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046313
    },
    {
        "content": "<p>hope this isn't a silly question, but wouldn't a 32-bit toolchain run on a 64-bit windows installation just like it does on linux?</p>",
        "id": 211269851,
        "sender_full_name": "eddyb",
        "timestamp": 1601046327
    },
    {
        "content": "<p>as in, both OSes have support for running 32-bit userspace w/ 64-bit kernel, no?</p>",
        "id": 211269881,
        "sender_full_name": "eddyb",
        "timestamp": 1601046348
    },
    {
        "content": "<p>Yes</p>",
        "id": 211269892,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601046353
    },
    {
        "content": "<p>I cannot reproduce with the latest nightly nor with the nightly reported in the issue</p>",
        "id": 211269991,
        "sender_full_name": "rylev",
        "timestamp": 1601046380
    },
    {
        "content": "<p>/me is going to try Rust installed by the msi installer instead of Rustup</p>",
        "id": 211270030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046397
    },
    {
        "content": "<p>oh right <code>rustup</code> paths would be in <code>C:\\Users\\$USER\\.rustup\\toolchains</code> so potentially no spaces</p>",
        "id": 211270139,
        "sender_full_name": "eddyb",
        "timestamp": 1601046465
    },
    {
        "content": "<p>I suspect this might be related to locales too.</p>",
        "id": 211270158,
        "sender_full_name": "nagisa",
        "timestamp": 1601046475
    },
    {
        "content": "<p>/me imagines somebody using a nbsp as their space of choice in the username.</p>",
        "id": 211270253,
        "sender_full_name": "nagisa",
        "timestamp": 1601046504
    },
    {
        "content": "<p>Here's what I'm seeing:</p>\n<div class=\"codehilite\"><pre><span></span><code>C:\\projects\\test with spaces\\hello_world&gt;cargo build --target wasm32-unknown-unknown\n   Compiling proc-macro2 v1.0.21\n   Compiling unicode-xid v0.2.1\n   Compiling syn v1.0.41\n   Compiling wasm-bindgen-shared v0.2.68\n   Compiling log v0.4.11\n   Compiling cfg-if v0.1.10\n   Compiling bumpalo v3.4.0\n   Compiling lazy_static v1.4.0\n   Compiling wasm-bindgen v0.2.68\n   Compiling quote v1.0.7\n   Compiling wasm-bindgen-backend v0.2.68\n   Compiling wasm-bindgen-macro-support v0.2.68\n   Compiling wasm-bindgen-macro v0.2.68\n   Compiling js-sys v0.3.45\n   Compiling web-sys v0.3.45\n   Compiling hello_world v0.1.0 (C:\\projects\\test with spaces\\hello_world)\nerror: linking with `rust-lld` failed: exit code: 1\n  |\n  = note: &quot;rust-lld&quot; &quot;-flavor&quot; &quot;wasm&quot; &quot;-z&quot; &quot;stack-size=1048576&quot; &quot;--stack-first&quot; &quot;--allow-undefined&quot; &quot;--fatal-warnings&quot; &quot;--no-demangle&quot; &quot;--export-dynamic&quot; &quot;--no-entry&quot; &quot;-L&quot; &quot;C:\\\\Users\\\\wesley.wiser\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib&quot; &quot;-L&quot; &quot;C:\\\\Users\\\\wesley.wiser\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\self-contained&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.10x1umxe2ihpk42f.rcgu.o&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.1jrmc1rcj97b1rx7.rcgu.o&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.2thlrb4v5nonu3ei.rcgu.o&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.2ydc3y7vzq74rkde.rcgu.o&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.31n4dyidua42hqrf.rcgu.o&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.5rz76vvdq2iid4p.rcgu.o&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.zd8q8tu961vm25b.rcgu.o&quot; &quot;-o&quot; &quot;C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.wasm&quot; &quot;--export&quot; &quot;main&quot; &quot;--export&quot; &quot;__wbindgen_describe___wbg_addEventListener_1ee029f42ddd26e4&quot; &quot;--export&quot; &quot;__wbindgen_describe___wbg_addEventListener_9e7b0c3f65ebc0d7&quot;\n\n{snip}\n\n  = note: rust-lld: error: cannot open C:\\\\projects\\\\test\\: no such file or directory\n          rust-lld: error: cannot open with\\: no such file or directory\n          rust-lld: error: cannot open spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.10x1umxe2ihpk42f.rcgu.o: no such file or directory\n          rust-lld: error: cannot open C:\\\\projects\\\\test\\: no such file or directory\n          rust-lld: error: cannot open with\\: no such file or directory\n          rust-lld: error: cannot open spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.1jrmc1rcj97b1rx7.rcgu.o: no such file or directory\n          rust-lld: error: cannot open C:\\\\projects\\\\test\\: no such file or directory\n          rust-lld: error: cannot open with\\: no such file or directory\n          rust-lld: error: cannot open spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.2thlrb4v5nonu3ei.rcgu.o: no such file or directory\n          rust-lld: error: cannot open C:\\\\projects\\\\test\\: no such file or directory\n          rust-lld: error: cannot open with\\: no such file or directory\n          rust-lld: error: cannot open spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.2ydc3y7vzq74rkde.rcgu.o: no such file or directory\n          rust-lld: error: cannot open C:\\\\projects\\\\test\\: no such file or directory\n          rust-lld: error: cannot open with\\: no such file or directory\n          rust-lld: error: cannot open spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.31n4dyidua42hqrf.rcgu.o: no such file or directory\n          rust-lld: error: cannot open C:\\\\projects\\\\test\\: no such file or directory\n          rust-lld: error: cannot open with\\: no such file or directory\n          rust-lld: error: cannot open spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\hello_world.5rz76vvdq2iid4p.rcgu.o: no such file or directory\n          rust-lld: error: cannot open C:\\\\projects\\\\test\\: no such file or directory\n          rust-lld: error: cannot open with\\: no such file or directory\n          rust-lld: error: too many errors emitted, stopping now (use -error-limit=0 to see all errors)\n\n\nerror: aborting due to previous error\n\nerror: could not compile `hello_world`\n\nTo learn more, run the command again with --verbose.\n</code></pre></div>",
        "id": 211270266,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601046512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> was the reproduction attempt with Rust installed in <code>C:\\Progam Files</code>?</p>",
        "id": 211270271,
        "sender_full_name": "eddyb",
        "timestamp": 1601046516
    },
    {
        "content": "<p>No, it's my user directory - no spaces</p>",
        "id": 211270467,
        "sender_full_name": "rylev",
        "timestamp": 1601046569
    },
    {
        "content": "<p>or I guess like <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>'s, with spaces in the path of the Cargo package</p>",
        "id": 211270497,
        "sender_full_name": "eddyb",
        "timestamp": 1601046576
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202020-09-25/near/211270497\">said</a>:</p>\n<blockquote>\n<p>or I guess like <span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span>'s, with spaces in the path of the Cargo package</p>\n</blockquote>\n<p>this is what I tried on my end, but it failed to reproduce for me</p>",
        "id": 211270620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046603
    },
    {
        "content": "<p>ah interesting</p>",
        "id": 211270646,
        "sender_full_name": "eddyb",
        "timestamp": 1601046611
    },
    {
        "content": "<p>(also might be interesting to try to reproduce on non-Windows systems.)</p>",
        "id": 211270773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046683
    },
    {
        "content": "<p>Yea I can't reproduce the issue if my path to the cargo project has spaces in it. I can try with the compiler itself</p>",
        "id": 211270779,
        "sender_full_name": "rylev",
        "timestamp": 1601046685
    },
    {
        "content": "<p>I forgot we even had an MSI installer, tbh, I would've probably moved it manually or tried to install <code>rustup</code> somewhere else</p>",
        "id": 211270803,
        "sender_full_name": "eddyb",
        "timestamp": 1601046697
    },
    {
        "content": "<p>I'm pretty sure I installed via rustup.</p>",
        "id": 211270916,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601046736
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202020-09-25/near/211270030\">said</a>:</p>\n<blockquote>\n<p>/me is going to try Rust installed by the msi installer instead of Rustup</p>\n</blockquote>\n<p>still no luck, even with this method</p>",
        "id": 211270926,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046741
    },
    {
        "content": "<p>(since <code>rustc</code> finds all of the relevant files relative to itself, so you can just move/copy an entire <code>.rustup/toolchains/...</code> directory anywhere you want)</p>",
        "id": 211270995,
        "sender_full_name": "eddyb",
        "timestamp": 1601046774
    },
    {
        "content": "<p>I tried in both <code>cmd.exe</code> and <code>git bash</code> just in case it was something to do with the environment and it fails to build in both.</p>",
        "id": 211271225,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601046871
    },
    {
        "content": "<p>or... oh head-slap: I wasn't passing the <code>--target wasm32-unknown-unknown</code> option. What is wrong with me.</p>",
        "id": 211271250,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046884
    },
    {
        "content": "<p>okay now I can reproduce</p>",
        "id": 211271281,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601046902
    },
    {
        "content": "<p>it's probably an lld bug then</p>",
        "id": 211271369,
        "sender_full_name": "simulacrum",
        "timestamp": 1601046947
    },
    {
        "content": "<p>as someone mentions on the issue</p>",
        "id": 211271380,
        "sender_full_name": "simulacrum",
        "timestamp": 1601046953
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bplanning.20meeting.5D.202020-09-25/near/211271250\">said</a>:</p>\n<blockquote>\n<p>or... oh head-slap: I wasn't passing the <code>--target wasm32-unknown-unknown</code> option. What is wrong with me.</p>\n</blockquote>\n<p>Wondering why I still can't reproduce the issue...</p>",
        "id": 211271453,
        "sender_full_name": "rylev",
        "timestamp": 1601046974
    },
    {
        "content": "<p>Yeah, the paths passed to lld seem to be correctly encoded:</p>\n<blockquote>\n<p>\"C:\\\\projects\\\\test with spaces\\\\hello_world\\\\target\\\\wasm32-unknown-unknown\\\\debug\\\\deps\\\\libweb_sys-4faa97cbfbde07f6.rlib\"</p>\n</blockquote>",
        "id": 211271510,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601046995
    },
    {
        "content": "<p>is this because windows CLI programs have to parse their own arguments?</p>",
        "id": 211271556,
        "sender_full_name": "eddyb",
        "timestamp": 1601047022
    },
    {
        "content": "<p>could it be an issue with our <code>rust-lld</code> wrapper?</p>",
        "id": 211271594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047040
    },
    {
        "content": "<p>and all the caveats around that (cc <span class=\"user-mention\" data-user-id=\"125267\">@Peter Rabbit</span>)</p>",
        "id": 211271596,
        "sender_full_name": "eddyb",
        "timestamp": 1601047041
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is that a wrapper? I thought we just renamed the <code>lld</code> we built</p>",
        "id": 211271637,
        "sender_full_name": "eddyb",
        "timestamp": 1601047058
    },
    {
        "content": "<p>/me doesn't know</p>",
        "id": 211271658,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047067
    },
    {
        "content": "<p>where does the installed rust-lld even live? I'm looking in .rustup\\toolchains but not finding any sign of it there</p>",
        "id": 211272087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047255
    },
    {
        "content": "<p>it's nested inside <code>rustlib</code></p>",
        "id": 211272108,
        "sender_full_name": "eddyb",
        "timestamp": 1601047266
    },
    {
        "content": "<p>it's not a wrapper, renamed binary</p>",
        "id": 211272137,
        "sender_full_name": "simulacrum",
        "timestamp": 1601047281
    },
    {
        "content": "<p>okay found it, thanks</p>",
        "id": 211272177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047301
    },
    {
        "content": "<p>well, we are way over time now</p>",
        "id": 211272419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047382
    },
    {
        "content": "<p>It sounds like no one wants to argue for a revert of the LLVM upgrade</p>",
        "id": 211272463,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047405
    },
    {
        "content": "<p>huh it relies on just <code>main</code> taking arguments <a href=\"https://github.com/llvm/llvm-project/blob/2a11a197af7e72725fe461ba9917756b1b09661a/lld/tools/lld/lld.cpp#L205\">https://github.com/llvm/llvm-project/blob/2a11a197af7e72725fe461ba9917756b1b09661a/lld/tools/lld/lld.cpp#L205</a></p>",
        "id": 211272559,
        "sender_full_name": "eddyb",
        "timestamp": 1601047445
    },
    {
        "content": "<p>so, that's great. I can focus my attention on trying out the fixes to <code>rr</code> that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> has helped discover on my Ryzen box</p>",
        "id": 211272562,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047445
    },
    {
        "content": "<p>meanwhile, Rust: <a href=\"https://github.com/rust-lang/rust/blob/b984ef6797ff17faa2b1e0ebb54b78de1491e5fd/library/std/src/sys/windows/args.rs#L21-L30\">https://github.com/rust-lang/rust/blob/b984ef6797ff17faa2b1e0ebb54b78de1491e5fd/library/std/src/sys/windows/args.rs#L21-L30</a></p>",
        "id": 211272661,
        "sender_full_name": "eddyb",
        "timestamp": 1601047501
    },
    {
        "content": "<p>ah LLVM has something similar <a href=\"https://github.com/llvm/llvm-project/blob/2a11a197af7e72725fe461ba9917756b1b09661a/llvm/lib/Support/InitLLVM.cpp#L24-L54\">https://github.com/llvm/llvm-project/blob/2a11a197af7e72725fe461ba9917756b1b09661a/llvm/lib/Support/InitLLVM.cpp#L24-L54</a></p>",
        "id": 211273168,
        "sender_full_name": "eddyb",
        "timestamp": 1601047701
    },
    {
        "content": "<p>silly Q: is that <code>#ifdef _WIN32</code>  true even on win64?</p>",
        "id": 211273597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047846
    },
    {
        "content": "<blockquote>\n<p><code>_WIN32</code> Defined as 1 when the compilation target is 32-bit ARM, 64-bit ARM, x86, or x64. Otherwise, undefined.</p>\n</blockquote>",
        "id": 211273695,
        "sender_full_name": "eddyb",
        "timestamp": 1601047894
    },
    {
        "content": "<p>yes apparently it is, okay.</p>",
        "id": 211273708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047900
    },
    {
        "content": "<p>from <a href=\"https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros?view=vs-2019\">https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros?view=vs-2019</a></p>",
        "id": 211273719,
        "sender_full_name": "eddyb",
        "timestamp": 1601047904
    },
    {
        "content": "<p>(oh I see, the 32 is meant to mean \"not 16-bit\")</p>",
        "id": 211273737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601047914
    },
    {
        "content": "<p>you love to see it,</p>",
        "id": 211273801,
        "sender_full_name": "eddyb",
        "timestamp": 1601047926
    },
    {
        "content": "<p>potentially relevant commit <a href=\"https://github.com/llvm/llvm-project/commit/270d3faf6e0d09ec00ba51b46241534bc6455256\">https://github.com/llvm/llvm-project/commit/270d3faf6e0d09ec00ba51b46241534bc6455256</a></p>",
        "id": 211274126,
        "sender_full_name": "eddyb",
        "timestamp": 1601048070
    },
    {
        "content": "<p>the actual parser is here <a href=\"https://github.com/llvm/llvm-project/blob/2a11a197af7e72725fe461ba9917756b1b09661a/llvm/lib/Support/CommandLine.cpp#L931-L936\">https://github.com/llvm/llvm-project/blob/2a11a197af7e72725fe461ba9917756b1b09661a/llvm/lib/Support/CommandLine.cpp#L931-L936</a></p>",
        "id": 211274160,
        "sender_full_name": "eddyb",
        "timestamp": 1601048087
    },
    {
        "content": "<p>there's also <a href=\"https://github.com/llvm/llvm-project/commit/2d068e534f1671459e1b135852c1b3c10502e929\">https://github.com/llvm/llvm-project/commit/2d068e534f1671459e1b135852c1b3c10502e929</a></p>",
        "id": 211274463,
        "sender_full_name": "eddyb",
        "timestamp": 1601048242
    },
    {
        "content": "<p>not really sure how they all interact</p>",
        "id": 211274478,
        "sender_full_name": "eddyb",
        "timestamp": 1601048248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> you said we pass the correct arguments, but isn't it possible the quotes are printed for the benefit of the user but not actually encoded? wait I just got a very silly idea</p>",
        "id": 211274652,
        "sender_full_name": "eddyb",
        "timestamp": 1601048333
    },
    {
        "content": "<p>Yeah, that's fair.</p>",
        "id": 211274706,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601048360
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> you could replace <code>rust-lld.exe</code> with a simple Rust program that errors after printing its arguments <em>as parsed by Rust</em></p>",
        "id": 211274720,
        "sender_full_name": "eddyb",
        "timestamp": 1601048371
    },
    {
        "content": "<p>something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">dbg</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">std</span>::<span class=\"n\">env</span>::<span class=\"n\">args</span><span class=\"p\">().</span><span class=\"n\">collect</span>::<span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span>::<span class=\"n\">process</span>::<span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 211274835,
        "sender_full_name": "eddyb",
        "timestamp": 1601048414
    },
    {
        "content": "<p>Where do I find <code>rust-lld.exe</code>?</p>",
        "id": 211275141,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601048555
    },
    {
        "content": "<p>it's nested inside <code>rustlib</code></p>",
        "id": 211275158,
        "sender_full_name": "eddyb",
        "timestamp": 1601048564
    },
    {
        "content": "<p>In the toolchain folder somewhere?</p>",
        "id": 211275165,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601048568
    },
    {
        "content": "<p>kind of like our own personal \"libexec\"</p>",
        "id": 211275169,
        "sender_full_name": "eddyb",
        "timestamp": 1601048572
    },
    {
        "content": "<p>yeah I found it recently</p>",
        "id": 211275174,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601048574
    },
    {
        "content": "<p>let me grab that path</p>",
        "id": 211275178,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601048578
    },
    {
        "content": "<p>should be <code>lib/rustlib/$host/bin/rust-lld.exe</code> or similar</p>",
        "id": 211275214,
        "sender_full_name": "eddyb",
        "timestamp": 1601048599
    },
    {
        "content": "<p><code>.rustup\\toolchains\\beta-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\bin\\</code>for me</p>",
        "id": 211275330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601048651
    },
    {
        "content": "<p>(which is consistent with what eddy wrote)</p>",
        "id": 211275360,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601048676
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  = note: [src\\main.rs:2] std::env::args().collect::&lt;Vec&lt;_&gt;&gt;() = [\n              &quot;C:\\\\Users\\\\wesley.wiser\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\bin\\\\rust-lld.exe&quot;,\n              &quot;-flavor&quot;,\n              &quot;wasm&quot;,\n              &quot;@C:\\\\Users\\\\WESLEY~1.WIS\\\\AppData\\\\Local\\\\Temp\\\\rustcE6Ab1l\\\\linker-arguments&quot;,\n          ]\n</code></pre></div>",
        "id": 211275418,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601048714
    },
    {
        "content": "<p><span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 211275441,
        "sender_full_name": "eddyb",
        "timestamp": 1601048728
    },
    {
        "content": "<p>glad I asked</p>",
        "id": 211275467,
        "sender_full_name": "eddyb",
        "timestamp": 1601048746
    },
    {
        "content": "<p>that <code>@</code> thing I assume is some sort of directive to inline the contents of a file as arguments I assume?</p>",
        "id": 211275565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601048776
    },
    {
        "content": "<p>(time to dump the file - which might need to be done from the fake linker itself)</p>",
        "id": 211275568,
        "sender_full_name": "eddyb",
        "timestamp": 1601048778
    },
    {
        "content": "<p>will <code>-Zsave-temps</code> or whatever leave that file around?</p>",
        "id": 211275585,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601048794
    },
    {
        "content": "<p>yeah and the stuff I was looking at doesn't really matter turns out</p>",
        "id": 211275606,
        "sender_full_name": "eddyb",
        "timestamp": 1601048813
    },
    {
        "content": "<p>(probably just as easy to have the fake-lld print it though IMO)</p>",
        "id": 211275609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601048814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I wouldn't bet on it and yeah what <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> just said</p>",
        "id": 211275627,
        "sender_full_name": "eddyb",
        "timestamp": 1601048824
    },
    {
        "content": "<p>I was gonna say that worst case we look at what <code>GetCommandLineW</code> returns but it's not even relevant</p>",
        "id": 211275668,
        "sender_full_name": "eddyb",
        "timestamp": 1601048849
    },
    {
        "content": "<p><a href=\"https://github.com/llvm/llvm-project/commit/928e9e172305752583a75a8174ab5a87b4e09d80\">https://github.com/llvm/llvm-project/commit/928e9e172305752583a75a8174ab5a87b4e09d80</a></p>",
        "id": 211276226,
        "sender_full_name": "eddyb",
        "timestamp": 1601049142
    },
    {
        "content": "<p>now this shouldn't have changed behavior</p>",
        "id": 211276276,
        "sender_full_name": "eddyb",
        "timestamp": 1601049177
    },
    {
        "content": "<p>oh wait it did! it used to hardcode <code>cl::TokenizeGNUCommandLine</code></p>",
        "id": 211276358,
        "sender_full_name": "eddyb",
        "timestamp": 1601049213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> if you can make it work, try calling the real linker with an extra <code>-rsp-quoting=posix</code> flag</p>",
        "id": 211276454,
        "sender_full_name": "eddyb",
        "timestamp": 1601049253
    },
    {
        "content": "<p>I'm not sure what you mean</p>",
        "id": 211276505,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601049281
    },
    {
        "content": "<p>as in, the fake <code>rust-lld.exe</code> executing the real one with the same arguments plus that one</p>",
        "id": 211276565,
        "sender_full_name": "eddyb",
        "timestamp": 1601049310
    },
    {
        "content": "<p>rustc --target wasm32-uknown-unknown -Clink-arg=-rsp-quoting=posix perhaps?</p>",
        "id": 211276586,
        "sender_full_name": "simulacrum",
        "timestamp": 1601049318
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> will likely end up in the @'d file</p>",
        "id": 211276636,
        "sender_full_name": "eddyb",
        "timestamp": 1601049339
    },
    {
        "content": "<p>ah hm</p>",
        "id": 211276653,
        "sender_full_name": "simulacrum",
        "timestamp": 1601049346
    },
    {
        "content": "<p>would you like to see what I got as the contents of the file?</p>",
        "id": 211276692,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601049362
    },
    {
        "content": "<p>sure</p>",
        "id": 211276737,
        "sender_full_name": "eddyb",
        "timestamp": 1601049371
    },
    {
        "content": "<p>/me takes moment to figure out how to get it into a gist</p>",
        "id": 211276767,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601049385
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> to be clear, I'm imagining just:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">assert</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">std</span>::<span class=\"n\">process</span>::<span class=\"n\">Command</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s\">\"real-rust-lld\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"s\">\"-rsp-quoting=posix\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">args</span><span class=\"p\">(</span><span class=\"n\">std</span>::<span class=\"n\">env</span>::<span class=\"n\">args_os</span><span class=\"p\">().</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">status</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">success</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 211276880,
        "sender_full_name": "eddyb",
        "timestamp": 1601049438
    },
    {
        "content": "<p><a href=\"https://gist.github.com/pnkfelix/aec7c69439a0c9dbda83210b8978870e\">https://gist.github.com/pnkfelix/aec7c69439a0c9dbda83210b8978870e</a></p>",
        "id": 211277084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601049515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> It worked?!</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo build --target wasm32-unknown-unknown\n   Compiling hello_world v0.1.0 (C:\\projects\\test with spaces\\hello_world)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.61s\n</code></pre></div>",
        "id": 211277172,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601049564
    },
    {
        "content": "<p>Oh wait</p>",
        "id": 211277259,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601049597
    },
    {
        "content": "<p>I guess I need to check status</p>",
        "id": 211277311,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601049603
    },
    {
        "content": "<p>yeah sorry should've wrote the full example from the start</p>",
        "id": 211277348,
        "sender_full_name": "eddyb",
        "timestamp": 1601049618
    },
    {
        "content": "<p>though I expect it to work because that's what the previous behavior was</p>",
        "id": 211277378,
        "sender_full_name": "eddyb",
        "timestamp": 1601049634
    },
    {
        "content": "<p>I'm getting this</p>\n<div class=\"codehilite\"><pre><span></span><code>  = note: lld is a generic driver.\n          Invoke ld.lld (Unix), ld64.lld (macOS), lld-link (Windows), wasm-ld (WebAssembly) instead\n          thread &#39;main&#39; panicked at &#39;assertion failed: std::process::Command::new(&quot;rust-lld.exe2&quot;).arg(&quot;-rsp-quoting=posix&quot;).args(std::env::args_os().skip(1)).status().unwrap().success()&#39;, src\\main.rs:2:5\n          note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 211277543,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601049712
    },
    {
        "content": "<p>aww</p>",
        "id": 211277563,
        "sender_full_name": "eddyb",
        "timestamp": 1601049720
    },
    {
        "content": "<p>btw there's this stuff that you might be able to see if you set <code>RUSTC_LOG=rustc_codegen_ssa::back::link</code> <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_codegen_ssa/src/back/link.rs#L1068\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_codegen_ssa/src/back/link.rs#L1068</a></p>",
        "id": 211277668,
        "sender_full_name": "eddyb",
        "timestamp": 1601049746
    },
    {
        "content": "<p>I've got to run <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 211277739,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1601049783
    },
    {
        "content": "<p>we should probably post some of this on the ticket. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 211277766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601049797
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/b984ef6797ff17faa2b1e0ebb54b78de1491e5fd/compiler/rustc_codegen_ssa/src/back/link.rs#L1071-L1093\">https://github.com/rust-lang/rust/blob/b984ef6797ff17faa2b1e0ebb54b78de1491e5fd/compiler/rustc_codegen_ssa/src/back/link.rs#L1071-L1093</a></p>",
        "id": 211277785,
        "sender_full_name": "eddyb",
        "timestamp": 1601049807
    },
    {
        "content": "<p>yeah okay we use the <em>target</em> to determine whether we're  using windows or GNU encoding</p>",
        "id": 211277910,
        "sender_full_name": "eddyb",
        "timestamp": 1601049843
    },
    {
        "content": "<p>which is why wasm is affected, since it's not MSVC</p>",
        "id": 211277950,
        "sender_full_name": "eddyb",
        "timestamp": 1601049858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> do you want to, or should I?</p>",
        "id": 211278198,
        "sender_full_name": "eddyb",
        "timestamp": 1601049981
    },
    {
        "content": "<p>just posted a comment but all it is is a link to the conversation we had here after meeting was bascially over</p>",
        "id": 211278245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601050006
    },
    {
        "content": "<p>alright I can detail a bit</p>",
        "id": 211278269,
        "sender_full_name": "eddyb",
        "timestamp": 1601050015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> this last point you made about rustc_codegen_ssa: does that imply that this <em>is</em> a bug in our code, not LLD?</p>",
        "id": 211278302,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601050037
    },
    {
        "content": "<p>(because its querying \"sess.target.target.options.is_like_msvc\", and we should be ... asking that about the host?)</p>",
        "id": 211278425,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601050084
    },
    {
        "content": "<p>oh yeah sorry I didn't go into details: LLD fixed its wasm interface and it now behaves correctly for its platform, but offers a flag to use the \"wrong\" interface</p>",
        "id": 211278430,
        "sender_full_name": "eddyb",
        "timestamp": 1601050087
    },
    {
        "content": "<p>what we were doing was correct in LLVM 10</p>",
        "id": 211278455,
        "sender_full_name": "eddyb",
        "timestamp": 1601050100
    },
    {
        "content": "<p>oh no</p>",
        "id": 211278459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601050104
    },
    {
        "content": "<p>so our behavior here is going to need to be LLVM version dependent?</p>",
        "id": 211278488,
        "sender_full_name": "pnkfelix",
        "timestamp": 1601050119
    },
    {
        "content": "<p>I don't think it's a problem because this is <code>rust-lld</code> we build ourselves</p>",
        "id": 211278806,
        "sender_full_name": "eddyb",
        "timestamp": 1601050288
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ah I think the problem is that the <code>-flavor</code> flag must come first. so maybe put the extra flag at the end?</p>",
        "id": 211279010,
        "sender_full_name": "eddyb",
        "timestamp": 1601050363
    },
    {
        "content": "<p>we have version-specific behavior for llvm already I think so that shouldn't be a problem</p>",
        "id": 211279022,
        "sender_full_name": "simulacrum",
        "timestamp": 1601050369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> <a href=\"https://github.com/rust-lang/rust/issues/76466#issuecomment-699024973\">https://github.com/rust-lang/rust/issues/76466#issuecomment-699024973</a></p>",
        "id": 211280534,
        "sender_full_name": "eddyb",
        "timestamp": 1601051142
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> okay yeah looking in your file, you have <code>Dev\\\\\\\\issue\\\\ 76466\\\\\\\\issue_76466</code></p>",
        "id": 211280892,
        "sender_full_name": "eddyb",
        "timestamp": 1601051302
    },
    {
        "content": "<p>which is doubly-escaped because of <code>{:?}</code></p>",
        "id": 211280907,
        "sender_full_name": "eddyb",
        "timestamp": 1601051311
    },
    {
        "content": "<p>the file contents contain <code>Dev\\\\issue\\ 76466\\\\issue_76466</code></p>",
        "id": 211280932,
        "sender_full_name": "eddyb",
        "timestamp": 1601051322
    },
    {
        "content": "<p>the <code>\\ </code> is the escaping of a space that doesn't exist on windows. but if we used quotes instead, it should work on both</p>",
        "id": 211280967,
        "sender_full_name": "eddyb",
        "timestamp": 1601051343
    },
    {
        "content": "<p>Can somebody split out this into a different topic within T-compiler?</p>",
        "id": 211289515,
        "sender_full_name": "nagisa",
        "timestamp": 1601055512
    },
    {
        "content": "<p>Hecking response files strike again. Last time it was MinGW unable to cope with unicode in response files (which I think is still unsolved actually).</p>",
        "id": 211442365,
        "sender_full_name": "Peter Rabbit",
        "timestamp": 1601253306
    },
    {
        "content": "<p>I still can't seem to reproduce the issue strangely: </p>\n<div class=\"codehilite\"><pre><span></span><code>rustc +nightly-2020-08-24-x86_64-pc-windows-msvc -Vv\nrustc 1.47.0-nightly (5180f3da5 2020-08-23)\nbinary: rustc\ncommit-hash: 5180f3da5fd72627a8d38558ad1297df38793acd\ncommit-date: 2020-08-23\nhost: x86_64-pc-windows-msvc\nrelease: 1.47.0-nightly\nLLVM version: 11.0\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>rustc +nightly-2020-08-24-x86_64-pc-windows-msvc -Z print-link-args .\\src\\main.rs --target=wasm32-unknown-unknown\n&quot;rust-lld&quot; &quot;-flavor&quot; &quot;wasm&quot; &quot;-z&quot; &quot;stack-size=1048576&quot; &quot;--stack-first&quot; &quot;--allow-undefined&quot; &quot;--fatal-warnings&quot; &quot;--no-demangle&quot; &quot;--export-dynamic&quot; &quot;--no-entry&quot; &quot;-L&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib&quot; &quot;-L&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\self-contained&quot; &quot;main.main.7rcbfp3g-cgu.0.rcgu.o&quot; &quot;main.main.7rcbfp3g-cgu.1.rcgu.o&quot; &quot;main.main.7rcbfp3g-cgu.2.rcgu.o&quot; &quot;main.main.7rcbfp3g-cgu.3.rcgu.o&quot; &quot;main.main.7rcbfp3g-cgu.4.rcgu.o&quot; &quot;main.main.7rcbfp3g-cgu.5.rcgu.o&quot; &quot;-o&quot; &quot;main.wasm&quot; &quot;--export&quot; &quot;main&quot; &quot;--export=__heap_base&quot; &quot;--export=__data_end&quot; &quot;main.4s37gsrti678ik8u.rcgu.o&quot; &quot;--gc-sections&quot; &quot;-O0&quot; &quot;-L&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libstd-309418924cc86896.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libpanic_abort-1ffa7698d46c0f6f.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libdlmalloc-aea30bd70f109280.rlib&quot; &quot;C:\\\\Userightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libhashbrown-0503c48f66b4131f.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\librustc_std_workspace_alloc-4ca4986e6ba886c2.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libunwind-1ad55e8dd0dc6115.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libcfg_if-db3b174ba92f5740.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\liblibc-6686fa3b09a46a74.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\liballoc-37f578bb788fa205.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\librustc_std_workspace_core-4be17918e075b8f0.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libcore-bedfadb641ae692a.rlib&quot; &quot;C:\\\\Users\\\\ryanl\\\\.rustup\\\\toolchains\\\\nightly-2020-08-24-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\wasm32-unknown-unknown\\\\lib\\\\libcompiler_builtins-b3896b8b17801e7d.rlib&quot;\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>cargo +nightly-2020-08-24-x86_64-pc-windows-msvc build --target=wasm32-unknown-unknown\n   Compiling proc-macro2 v1.0.24\n   Compiling unicode-xid v0.2.1\n   Compiling syn v1.0.42\n   Compiling wasm-bindgen-shared v0.2.68\n   Compiling log v0.4.11\n   Compiling cfg-if v0.1.10\n   Compiling bumpalo v3.4.0\n   Compiling lazy_static v1.4.0\n   Compiling wasm-bindgen v0.2.68\n   Compiling quote v1.0.7\n   Compiling wasm-bindgen-backend v0.2.68\n   Compiling wasm-bindgen-macro-support v0.2.68\n   Compiling wasm-bindgen-macro v0.2.68\n   Compiling js-sys v0.3.45\n   Compiling web-sys v0.3.45\n   Compiling issue76466 v0.1.0 (C:\\Users\\ryanl\\Code\\this is with spaces\\issue76466)\n    Finished dev [unoptimized + debuginfo] target(s) in 13.71s\n</code></pre></div>",
        "id": 212063321,
        "sender_full_name": "rylev",
        "timestamp": 1601639127
    }
]