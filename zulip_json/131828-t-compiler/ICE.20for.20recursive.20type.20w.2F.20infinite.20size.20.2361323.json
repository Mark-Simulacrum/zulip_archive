[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> -- to be honest I've not even looked at the bug yet :)</p>",
        "id": 167486078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559831104
    },
    {
        "content": "<p>If it helps I can try to dig in after compiler meeting and see if I can make any progress and report back</p>",
        "id": 167486211,
        "sender_full_name": "simulacrum",
        "timestamp": 1559831182
    },
    {
        "content": "<p>OK I at least clicked on it now. I'm not an <em>expert</em> in this code but I am \"familiar with the concepts\" :)</p>",
        "id": 167487476,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559831946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> When do you think you'll have some time for me to run a few things past you?</p>",
        "id": 167501527,
        "sender_full_name": "simulacrum",
        "timestamp": 1559841500
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>DEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(TraitSelect(ad559170a0bb6af-f35452a8800813b7)) --- state of dependency adt_sized_constraint(issue_61323[317d]::C[0]) is unknown, trying to mark it green\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::C[0])) - BEGIN\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::C[0])) --- found dependency adt_def(issue_61323[317d]::C[0]) to be immediately green\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::C[0])) - END - dependency type_of(issue_61323[317d]::C[0]::a[0]) was immediately red\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(TraitSelect(ad559170a0bb6af-f35452a8800813b7)) --- trying to force dependency adt_sized_constraint(issue_61323[317d]::C[0])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty: evaluating adt_sized_constraint for DefId(0:16 ~ issue_61323[317d]::C[0])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::query::plumbing: ty::query::get_query&lt;adt_def&gt;(key=DefId(0:16 ~ issue_61323[317d]::C[0]), span=./issue-61323.rs:1:1: 1:1)\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:16 ~ issue_61323[317d]::C[0])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: def_id=DefId(0:16 ~ issue_61323[317d]::C[0]), substs=[]\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: key=DefKey { parent: Some(DefIndex(0)), disambiguated_data: DisambiguatedDefPathData { data: TypeNs(&quot;C&quot;), disambiguator: 0 } }\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:0 ~ issue_61323[317d])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty: evaluating adt_sized_constraint for (2) C\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::query::plumbing: ty::query::get_query&lt;type_of&gt;(key=DefId(0:17 ~ issue_61323[317d]::C[0]::a[0]), span=./issue-61323.rs:1:1: 1:1)\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::query::plumbing: ty::query::get_query&lt;adt_sized_constraint&gt;(key=DefId(0:12 ~ issue_61323[317d]::A[0]), span=./issue-61323.rs:1:1: 1:1)\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::A[0])) - BEGIN\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::A[0])) --- found dependency adt_def(issue_61323[317d]::A[0]) to be immediately green\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::A[0])) --- found dependency type_of(issue_61323[317d]::A[0]::B[0]::0[0]) to be immediately green\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::A[0])) --- state of dependency adt_sized_constraint(issue_61323[317d]::C[0]) is unknown, trying to mark it green\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::C[0])) - BEGIN\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::C[0])) --- found dependency adt_def(issue_61323[317d]::C[0]) to be immediately green\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::C[0])) - END - dependency type_of(issue_61323[317d]::C[0]::a[0]) was immediately red\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::A[0])) --- trying to force dependency adt_sized_constraint(issue_61323[317d]::C[0])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::query::plumbing: ty::query::get_query&lt;def_span&gt;(key=DefId(0:16 ~ issue_61323[317d]::C[0]), span=./issue-61323.rs:1:1: 1:1)\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: def_path_str: def_id=DefId(0:16 ~ issue_61323[317d]::C[0]), ns=TypeNS\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:16 ~ issue_61323[317d]::C[0])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: def_id=DefId(0:16 ~ issue_61323[317d]::C[0]), substs=[]\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: key=DefKey { parent: Some(DefIndex(0)), disambiguated_data: DisambiguatedDefPathData { data: TypeNs(&quot;C&quot;), disambiguator: 0 } }\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:0 ~ issue_61323[317d])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::query::plumbing: ty::query::get_query&lt;def_span&gt;(key=DefId(0:12 ~ issue_61323[317d]::A[0]), span=./issue-61323.rs:1:1: 1:1)\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: def_path_str: def_id=DefId(0:12 ~ issue_61323[317d]::A[0]), ns=TypeNS\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:12 ~ issue_61323[317d]::A[0])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: def_id=DefId(0:12 ~ issue_61323[317d]::A[0]), substs=[]\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: key=DefKey { parent: Some(DefIndex(0)), disambiguated_data: DisambiguatedDefPathData { data: TypeNs(&quot;A&quot;), disambiguator: 0 } }\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:0 ~ issue_61323[317d])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: def_path_str: def_id=DefId(0:16 ~ issue_61323[317d]::C[0]), ns=TypeNS\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:16 ~ issue_61323[317d]::C[0])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: def_id=DefId(0:16 ~ issue_61323[317d]::C[0]), substs=[]\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print: default_print_def_path: key=DefKey { parent: Some(DefIndex(0)), disambiguated_data: DisambiguatedDefPathData { data: TypeNs(&quot;C&quot;), disambiguator: 0 } }\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::print::pretty: try_print_visible_def_path: def_id=DefId(0:0 ~ issue_61323[317d])\nDEBUG 2019-06-06T16:29:15Z: rustc::ty::fold: HasTypeFlagsVisitor: t=[type error] t.flags=HAS_TY_ERR self.flags=KEEP_IN_LOCAL_TCX\nDEBUG 2019-06-06T16:29:15Z: rustc::dep_graph::graph: try_mark_previous_green(adt_sized_constraint(issue_61323[317d]::A[0])) --- forced to None\nerror: internal compiler error: src/librustc/dep_graph/graph.rs:725: try_mark_previous_green() - Forcing the DepNode should have set its color\n</pre></div>",
        "id": 167501593,
        "sender_full_name": "simulacrum",
        "timestamp": 1559841552
    },
    {
        "content": "<p>basically I'm trying to understand what exactly happens when we force a dep node</p>",
        "id": 167501869,
        "sender_full_name": "simulacrum",
        "timestamp": 1559841759
    },
    {
        "content": "<p>from what I can tell through all the macros for the adt_sized_constraint query we can in fact find it from the depnode (since it's sole key is a DefId)</p>",
        "id": 167501886,
        "sender_full_name": "simulacrum",
        "timestamp": 1559841781
    },
    {
        "content": "<p>and that seems to lead to an execution of the query to check whether it's green or not</p>",
        "id": 167502207,
        "sender_full_name": "simulacrum",
        "timestamp": 1559842015
    },
    {
        "content": "<p>in this case that execution appears to loop, which I guess makes sense -- but we don't detect that loop</p>",
        "id": 167502249,
        "sender_full_name": "simulacrum",
        "timestamp": 1559842060
    },
    {
        "content": "<p>I'm not actually sure why this loop doesn't always happen though, i.e., how we ever make it past this point</p>",
        "id": 167502426,
        "sender_full_name": "simulacrum",
        "timestamp": 1559842202
    },
    {
        "content": "<p>maybe adt_sized_constraint isn't called in the happy path?</p>",
        "id": 167502488,
        "sender_full_name": "simulacrum",
        "timestamp": 1559842213
    },
    {
        "content": "<p>Hm, okay, so I'm getting the impression that the problem is that the dep graph code has the \"has errors\" check <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/dep_graph/graph.rs#L721\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/dep_graph/graph.rs#L721\">here</a> but it doesn't account for the fact that some queries, like adt_sized_info, don't emit errors but rather just return Error(...) of some sort and expect someone later on to actually emit the error</p>",
        "id": 167519176,
        "sender_full_name": "simulacrum",
        "timestamp": 1559852722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm not sure what to do about that (or whether my conclusion is even correct) so I'll call this blocked here and wait for you to have some time to chat for now</p>",
        "id": 167519579,
        "sender_full_name": "simulacrum",
        "timestamp": 1559852967
    },
    {
        "content": "<blockquote>\n<p>Hm, okay, so I'm getting the impression that the problem is that the dep graph code has the \"has errors\" check <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/dep_graph/graph.rs#L721\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc/dep_graph/graph.rs#L721\">here</a> but it doesn't account for the fact that some queries, like adt_sized_info, don't emit errors but rather just return Error(...) of some sort and expect someone later on to actually emit the error</p>\n</blockquote>\n<p>hmm, that sounds plausible</p>",
        "id": 167791549,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1560197041
    },
    {
        "content": "<p>I'm not sure what the best route to move forward would be -- it also feels loosely like maybe we can just remove the has_errors check and do a delay_bug! or something akin to that?</p>",
        "id": 167795030,
        "sender_full_name": "simulacrum",
        "timestamp": 1560199650
    },
    {
        "content": "<p>IIRC there is a way to say \"we maybe encountered a bug but if something later on emits an error it is not actually a bug\"</p>",
        "id": 167795057,
        "sender_full_name": "simulacrum",
        "timestamp": 1560199680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> does that sound like a viable plan? I'm not sure why the differentiation between has_errors being fine vs. not otherwise</p>",
        "id": 167795116,
        "sender_full_name": "simulacrum",
        "timestamp": 1560199704
    },
    {
        "content": "<p>It's also possible I've incorrectly arrived at a conclusion :)</p>",
        "id": 167795150,
        "sender_full_name": "simulacrum",
        "timestamp": 1560199738
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>: <code>delay_span_bug</code> only crashes if normal errors have not been emitted</p>",
        "id": 167795327,
        "sender_full_name": "varkor",
        "timestamp": 1560199854
    },
    {
        "content": "<p>right, that's what we want I think vs. the bug! call <a href=\"https://github.com/rust-lang/rust/blob/a73ecb3d9c432f8f53117b1a6b6c209dc802dee7/src/librustc/dep_graph/graph.rs#L722\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/a73ecb3d9c432f8f53117b1a6b6c209dc802dee7/src/librustc/dep_graph/graph.rs#L722\">on this line</a></p>",
        "id": 167795362,
        "sender_full_name": "simulacrum",
        "timestamp": 1560199891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> that may be a viable plan, or maybe we can improve this logic altogether</p>",
        "id": 167797657,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1560201692
    },
    {
        "content": "<p>I think I need to devote a bit of time to concentrate on it -- maybe tomorrow morning</p>",
        "id": 167797661,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1560201700
    },
    {
        "content": "<p>okay -- I should be around tomorrow morning, let me know if you want to talk/chat sync</p>",
        "id": 167797774,
        "sender_full_name": "simulacrum",
        "timestamp": 1560201763
    }
]