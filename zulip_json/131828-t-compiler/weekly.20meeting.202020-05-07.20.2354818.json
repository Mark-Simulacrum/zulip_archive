[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>; the triage meeting will be starting in ~ 19 hours</p>",
        "id": 196680251,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588791265
    },
    {
        "content": "<p>The <span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> will be doing pre-triage in <a class=\"stream-topic\" data-stream-id=\"227806\" href=\"/#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/pre-meeting.20triage.202020-05-07.20.2354818\">#t-compiler/wg-prioritization &gt; pre-meeting triage 2020-05-07 #54818</a></p>",
        "id": 196680376,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588791333
    },
    {
        "content": "<p>During pre-triage we will be preparing the <a href=\"https://hackmd.io/CEVZBzg7T8OmQaIeLf6GTw?view\" title=\"https://hackmd.io/CEVZBzg7T8OmQaIeLf6GTw?view\">meeting agenda</a></p>",
        "id": 196680415,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588791354
    },
    {
        "content": "<p>We will have checkins from <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span> and <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span></p>",
        "id": 196680513,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588791385
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1060\">@WG-rls2.0</span>?</p>",
        "id": 196680644,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588791450
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> do you have something you want to share about <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>?</p>",
        "id": 196680675,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588791471
    },
    {
        "content": "<p>Sure!</p>",
        "id": 196680725,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588791483
    },
    {
        "content": "<p>will do!</p>",
        "id": 196759828,
        "sender_full_name": "matklad",
        "timestamp": 1588852694
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting will be starting in ~ 30 minutes</p>",
        "id": 196769592,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588858129
    },
    {
        "content": "<p><a href=\"https://hackmd.io/CEVZBzg7T8OmQaIeLf6GTw?view\" title=\"https://hackmd.io/CEVZBzg7T8OmQaIeLf6GTw?view\">Check out the meeting agenda</a></p>",
        "id": 196769599,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588858133
    },
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Add a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> emoji to show you're here :)</p>",
        "id": 196774314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860102
    },
    {
        "content": "<p>we will start off with 5 minutes for ...</p>\n<h2>Announcements</h2>",
        "id": 196774331,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860114
    },
    {
        "content": "<ul>\n<li>Today we are making a point release, 1.43.1 <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></li>\n</ul>",
        "id": 196774407,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860133
    },
    {
        "content": "<ul>\n<li>Remember to fill State of the Compiler Team form by end of today (Thursday). Niko and Felix need time to review before Friday's steering meeting. (You should have links to separate non-anonymous and anonymized feedback forms in your email.)</li>\n</ul>",
        "id": 196774422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860141
    },
    {
        "content": "<ul>\n<li>On friday we have our <a href=\"https://forge.rust-lang.org/compiler/steering-meeting.html\" title=\"https://forge.rust-lang.org/compiler/steering-meeting.html\">Compiler Team Planning meeting</a>.</li>\n<li>There is 1 major change proposal<ul>\n<li>\"intern predicates, introduce forall/implies\" <a href=\"https://github.com/rust-lang/compiler-team/issues/285\" title=\"https://github.com/rust-lang/compiler-team/issues/285\">#285</a></li>\n</ul>\n</li>\n</ul>",
        "id": 196774456,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860157
    },
    {
        "content": "<p>(is there anyone here who doesn't know what I'm referencing by the \"State of the Compiler Team form\" ? Feel free to speak up, or to PM if you prefer)</p>",
        "id": 196774564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860206
    },
    {
        "content": "<blockquote>\n<p>On friday we have our Compiler Team Planning meeting.</p>\n</blockquote>\n<p>Have the need to fix this because I redacted it yesterday and may look confusing, to be clear the meeting is <strong>tomorrow</strong> friday 8th</p>",
        "id": 196774603,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588860228
    },
    {
        "content": "<p>there is 1 <strong>new</strong> major change proposal, I guess that means</p>",
        "id": 196774885,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860343
    },
    {
        "content": "<p>yeah</p>",
        "id": 196774972,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860368
    },
    {
        "content": "<p>however</p>",
        "id": 196774975,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860369
    },
    {
        "content": "<p>I think that is incomplete</p>",
        "id": 196774980,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860373
    },
    {
        "content": "<p>I'm now wondering if we shuold post every MCP that has not been seconded</p>",
        "id": 196774983,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860377
    },
    {
        "content": "<p>for example, there are two in FCP</p>",
        "id": 196774986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860380
    },
    {
        "content": "<p>actually 4</p>",
        "id": 196774999,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860384
    },
    {
        "content": "<p>until they are either declined or seconded?</p>",
        "id": 196775022,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860388
    },
    {
        "content": "<p>or maybe some of those already completed and we need to move</p>",
        "id": 196775034,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860391
    },
    {
        "content": "<p>but we should definitely be announcing them</p>",
        "id": 196775049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860398
    },
    {
        "content": "<ul>\n<li>Inline assembly <a href=\"https://github.com/rust-lang/compiler-team/issues/280\" title=\"https://github.com/rust-lang/compiler-team/issues/280\">compiler-team#280</a></li>\n</ul>",
        "id": 196775086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860413
    },
    {
        "content": "<ul>\n<li>Implement LLVM-compatible source-based code coverage <a href=\"https://github.com/rust-lang/compiler-team/issues/278\" title=\"https://github.com/rust-lang/compiler-team/issues/278\">compiler-team#278</a></li>\n</ul>",
        "id": 196775107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860423
    },
    {
        "content": "<p>Move <code>src/test/run-fail</code> tests to UI <a href=\"https://github.com/rust-lang/compiler-team/issues/274\" title=\"https://github.com/rust-lang/compiler-team/issues/274\">compiler-team#274</a>  -- I think this should be considered \"accepted\"</p>",
        "id": 196775137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860438
    },
    {
        "content": "<p>oh, that's it, <a href=\"https://github.com/rust-lang/compiler-team/issues/272\" title=\"https://github.com/rust-lang/compiler-team/issues/272\">compiler-team#272</a> is a dummy</p>",
        "id": 196775172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860456
    },
    {
        "content": "<p>I am reminded I wanted to update and merge the RFC about these..</p>",
        "id": 196775193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860466
    },
    {
        "content": "<p>but definitely check out those first two :)</p>",
        "id": 196775202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860472
    },
    {
        "content": "<p>these two were announced already but maybe we should define how to announce this, going to create a topic to discuss this</p>",
        "id": 196775208,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588860476
    },
    {
        "content": "<p>okay. <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> and I will work on revising the agenda template</p>",
        "id": 196775211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860478
    },
    {
        "content": "<p>sorry, maybe I was just confused :) but can't hurt to announce again</p>",
        "id": 196775268,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860491
    },
    {
        "content": "<p>yeah I don't think it hurts to remind people</p>",
        "id": 196775286,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860501
    },
    {
        "content": "<p>(meta-thought: I was just about to say \"it doesn't hurt to repeatedly mention it, since the intention is not to open up immediate discussion.\" but then I realized: If the intention <em>isn't</em> to open up discussion, then why mention it at the synchronous meeting?)</p>",
        "id": 196775423,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860580
    },
    {
        "content": "<p>people are looking</p>",
        "id": 196775437,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860594
    },
    {
        "content": "<p>I'll have to think more about that later.</p>",
        "id": 196775441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860597
    },
    {
        "content": "<p>anyway that's all the announcements</p>",
        "id": 196775513,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860619
    },
    {
        "content": "<p>oh, well there's one more semi-announcement</p>",
        "id": 196775583,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860655
    },
    {
        "content": "<p>I did a bunch of unilateral beta-acceptances over the last week:</p>",
        "id": 196775609,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860666
    },
    {
        "content": "<h2>Beta-acceptances from past week</h2>\n<ul>\n<li>\"fix error code in E0751.md\" <a href=\"https://github.com/rust-lang/rust/pull/71426\" title=\"https://github.com/rust-lang/rust/pull/71426\">#71426</a> was unlaterally beta-accepted by @pnkfelix</li>\n<li>\"resolve: Relax fresh binding disambiguation slightly to fix regression\" <a href=\"https://github.com/rust-lang/rust/pull/71846\" title=\"https://github.com/rust-lang/rust/pull/71846\">#71846</a> was unilaterally beta-accepted by @pnkfelix </li>\n<li>\"Do not try to find binop method on RHS <code>TyErr</code>\" <a href=\"https://github.com/rust-lang/rust/pull/71810\" title=\"https://github.com/rust-lang/rust/pull/71810\">#71810</a> was unilaterally beta-accepted by @pnkfelix</li>\n</ul>",
        "id": 196775623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860674
    },
    {
        "content": "<p>leaving us with just a single beta-nomination to synchronously discuss</p>",
        "id": 196775659,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860696
    },
    {
        "content": "<h2>Beta-nominations</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\">T-compiler beta noms</a></p>\n<ul>\n<li>\"Update the <code>cc</code> crate\" <a href=\"https://github.com/rust-lang/rust/pull/71882\" title=\"https://github.com/rust-lang/rust/pull/71882\">#71882</a></li>\n</ul>",
        "id": 196775693,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860710
    },
    {
        "content": "<p>often I'd just unilaterally accept a version update</p>",
        "id": 196775804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860759
    },
    {
        "content": "<p>but I wasn't clear on how risky this one was</p>",
        "id": 196775820,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860769
    },
    {
        "content": "<p>and so I wanted to take people's temperature on whether it was worth backporting</p>",
        "id": 196775952,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860785
    },
    {
        "content": "<p>so far the votes seem pretty clear....</p>",
        "id": 196776070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> writes</p>\n<blockquote>\n<p>Given bugs like <a href=\"https://github.com/alexcrichton/cc-rs/issues/493\" title=\"https://github.com/alexcrichton/cc-rs/issues/493\">alexcrichton/cc-rs#493</a> I think this may also be a good candidate for backporting since it should be pretty low-risk and may be good to accelerate getting this out to users.</p>\n</blockquote>",
        "id": 196776078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860800
    },
    {
        "content": "<p>yeah. I just had a hard time processing the diff that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> pointed at</p>",
        "id": 196776189,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860844
    },
    {
        "content": "<p>anyway looks like everyones cool with a backport</p>",
        "id": 196776323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860905
    },
    {
        "content": "<p>(true, I did too :)</p>",
        "id": 196776345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860912
    },
    {
        "content": "<p>so beta-accepted, sounds great</p>",
        "id": 196776349,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860914
    },
    {
        "content": "<p>but I think it's ok</p>",
        "id": 196776370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588860925
    },
    {
        "content": "<p>okay. there weren't any stable-noms nor any PR's marked S-waiting-on-team</p>",
        "id": 196776552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588860991
    },
    {
        "content": "<h2>Issues of Note</h2>\n<h3>Short Summary</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+\">1 P-critical issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+no%3Aassignee\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-critical+no%3Aassignee\">0 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">40 P-high issues</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\">20 of those are unassigned</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">1 P-high, 4 P-medium, 1 P-low regression-from-stable-to-beta</a><ul>\n<li>The only assigned is the P-high one.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">1 P-high, 3 P-medium, 1 P-low regression-from-stable-to-nightly</a><ul>\n<li>The only assigned is the P-high one.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">69 regression-from-stable-to-stable</a><ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-stable+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low\">24 of those are not prioritized</a>.</li>\n</ul>\n</li>\n</ul>\n<p>There are 1 less <code>P-critical</code> issues and 2 less <code>P-high</code> issues in comparison with last week.</p>",
        "id": 196776589,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861004
    },
    {
        "content": "<h3>P-critical</h3>\n<ul>\n<li>\"Unsoundness due to variance of trait objects WRT associated types\" <a href=\"https://github.com/rust-lang/rust/issues/71550\" title=\"https://github.com/rust-lang/rust/issues/71550\">#71550</a><ul>\n<li>This issue is assigned to @spastorino and has a PR open.</li>\n</ul>\n</li>\n</ul>",
        "id": 196776652,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861033
    },
    {
        "content": "<p><code>P-high</code> issues are consistently going down!</p>",
        "id": 196776655,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588861033
    },
    {
        "content": "<p>So I wanted to pause here and try to get some feedback</p>",
        "id": 196776722,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861065
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2403\">@WG-prioritization</span> noted that the agenda this week was going to be light, and so it would make sense to try to discuss some things that we often don't have time for</p>",
        "id": 196776834,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861099
    },
    {
        "content": "<p>and the basic debate, if you can call it that, was</p>",
        "id": 196776877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861115
    },
    {
        "content": "<p>which is more important for us to discuss (slash trying to find volunteers to address)</p>",
        "id": 196776922,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861132
    },
    {
        "content": "<p>between:</p>",
        "id": 196776941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861137
    },
    {
        "content": "<ol>\n<li>unassigned P-medium stable-to-beta regressions, or</li>\n</ol>",
        "id": 196776967,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861150
    },
    {
        "content": "<ol start=\"2\">\n<li>unassigned P-high issues ?</li>\n</ol>",
        "id": 196776985,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861157
    },
    {
        "content": "<p>here's an emoji vote</p>",
        "id": 196777015,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861171
    },
    {
        "content": "<p>(hmm I thought there were numbers available)</p>",
        "id": 196777063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861191
    },
    {
        "content": "<p>I'll just use thumbs instead</p>",
        "id": 196777152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861213
    },
    {
        "content": "<p>For the purposes of this meeting, I decided I'd rather try to solicit volunteers to take on unassigned P-high issues</p>",
        "id": 196777188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861235
    },
    {
        "content": "<p>I'm not sure what makes a stable-to-beta regression \"p-medium\", I guess</p>",
        "id": 196777241,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588861254
    },
    {
        "content": "<p>something that we're willing to accept as breakage, I think</p>",
        "id": 196777297,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861274
    },
    {
        "content": "<p>(I voted but I'd be curious if there's a \"capsule summary\" of the case for P-medium stable-to-beta regressions)</p>",
        "id": 196777305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588861279
    },
    {
        "content": "<p>i.e., it seems sort of like \"we would've called it p-high if it was more important\" :)</p>",
        "id": 196777344,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588861299
    },
    {
        "content": "<p>take a look: <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-medium\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-medium\">https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Aregression-from-stable-to-beta+label%3AP-medium</a></p>",
        "id": 196777349,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861300
    },
    {
        "content": "<p>so a personal opinion, when I see that something is a regression I kind of bump up a bit my rating</p>",
        "id": 196777379,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588861319
    },
    {
        "content": "<p>with that reasoning P-high things would be preferred</p>",
        "id": 196777445,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588861335
    },
    {
        "content": "<p>although maybe I'd like to see this one fixed: \"<code>forbid</code> overwritten by later <code>allow</code> on the same \"scope level\"\" <a href=\"https://github.com/rust-lang/rust/issues/70819\" title=\"https://github.com/rust-lang/rust/issues/70819\">#70819</a></p>",
        "id": 196777467,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861346
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196777445\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196777445\">said</a>:</p>\n<blockquote>\n<p>with that reasoning P-high things would be preferred</p>\n</blockquote>\n<p>because if it's a regression and <code>P-medium</code> it's probably not really important, but I have no idea if all <code>P-medium</code> regressions are rated using that logic</p>",
        "id": 196777597,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588861405
    },
    {
        "content": "<p>I guess I should have listed each individually to allow some discussion</p>",
        "id": 196777619,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861417
    },
    {
        "content": "<p>but anyway</p>",
        "id": 196777621,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861419
    },
    {
        "content": "<p>the whole point was that I <em>didn't</em> think we should jump into them in this meeting</p>",
        "id": 196777640,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861431
    },
    {
        "content": "<p>and listing them individually would defeat that. :)</p>",
        "id": 196777661,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861439
    },
    {
        "content": "<p>Anyway lets look at the unassigned P-high issues</p>",
        "id": 196777779,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861478
    },
    {
        "content": "<p>that I picked</p>",
        "id": 196777782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861480
    },
    {
        "content": "<p>(I chose the ones that are non-ICE's that are not marked E-needs-mcve)</p>",
        "id": 196777810,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861494
    },
    {
        "content": "<p>or wait</p>",
        "id": 196777869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861510
    },
    {
        "content": "<p>all I did was nominate them</p>",
        "id": 196777877,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861513
    },
    {
        "content": "<p>so we will just go through the nominated issues now</p>",
        "id": 196777893,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861520
    },
    {
        "content": "<p>and you'll see which ones are the one's I threw on the list. :)</p>",
        "id": 196777921,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861532
    },
    {
        "content": "<h2>Nominated Issues</h2>\n<p><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">T-compiler I-nominated</a></p>",
        "id": 196777940,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861541
    },
    {
        "content": "<ul>\n<li>\"Unsoundness due to variance of trait objects WRT associated types\" <a href=\"https://github.com/rust-lang/rust/issues/71550\" title=\"https://github.com/rust-lang/rust/issues/71550\">#71550</a></li>\n</ul>",
        "id": 196777948,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861548
    },
    {
        "content": "<p>oh I guess we can drop the nomination here?</p>",
        "id": 196778024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861573
    },
    {
        "content": "<p>yes</p>",
        "id": 196778038,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588861582
    },
    {
        "content": "<ul>\n<li>\"Rustc overflow its stack when using impl Trait and the struct containing the function itself\" <a href=\"https://github.com/rust-lang/rust/issues/69096\" title=\"https://github.com/rust-lang/rust/issues/69096\">#69096</a></li>\n</ul>",
        "id": 196778074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861602
    },
    {
        "content": "<p>so this is an example of an unassigned P-high issue</p>",
        "id": 196778142,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861642
    },
    {
        "content": "<p>regressed in 1.30.0, so a long time back, causes a segfault</p>",
        "id": 196778293,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588861707
    },
    {
        "content": "<p>I'm confused though</p>",
        "id": 196778390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861754
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> 's notes from mid February</p>",
        "id": 196778412,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861765
    },
    {
        "content": "<p>indicate that this was stack overflowing from the beginning?</p>",
        "id": 196778445,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861779
    },
    {
        "content": "<p>(that the cases that were compiling were false-negatives because godbolt was compiling in library mode)</p>",
        "id": 196778595,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861821
    },
    {
        "content": "<p>yeah that causes non-pub functions to not be codegen'd</p>",
        "id": 196778635,
        "sender_full_name": "eddyb",
        "timestamp": 1588861836
    },
    {
        "content": "<p>so this never actually regressed</p>",
        "id": 196778686,
        "sender_full_name": "eddyb",
        "timestamp": 1588861858
    },
    {
        "content": "<p>oh, I see</p>",
        "id": 196778688,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588861859
    },
    {
        "content": "<p>so my first question: Is this really P-high ?</p>",
        "id": 196778695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861863
    },
    {
        "content": "<p>I'm tempted to reclassify as P-medium and let it go</p>",
        "id": 196778734,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861887
    },
    {
        "content": "<p>I think \"no\"</p>",
        "id": 196778737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588861889
    },
    {
        "content": "<p>okay cool. lets move on then</p>",
        "id": 196778758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861902
    },
    {
        "content": "<ul>\n<li>\"rust-lld since 1.38 overlaps .text with .rodata for embedded arm target\" <a href=\"https://github.com/rust-lang/rust/issues/65391\" title=\"https://github.com/rust-lang/rust/issues/65391\">#65391</a></li>\n</ul>",
        "id": 196778934,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588861979
    },
    {
        "content": "<p>a user says they have a RISC-V repro</p>",
        "id": 196779136,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862062
    },
    {
        "content": "<p>which makes this interesting because it implies the bug may be target agnostic</p>",
        "id": 196779180,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862083
    },
    {
        "content": "<p>it seems like this bug is in lld?</p>",
        "id": 196779181,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588862083
    },
    {
        "content": "<p>that is indeed a question: Is there an upstream bug filed against lld?</p>",
        "id": 196779228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862102
    },
    {
        "content": "<p>oh the user says their repro works on x86 too</p>",
        "id": 196779363,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862158
    },
    {
        "content": "<p>okay you know what, I'll take a look at it then</p>",
        "id": 196779414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862167
    },
    {
        "content": "<p>(that said, this <a href=\"https://github.com/rust-lang/rust/issues/65391#issuecomment-545157883\" title=\"https://github.com/rust-lang/rust/issues/65391#issuecomment-545157883\">comment</a> by <span class=\"user-mention\" data-user-id=\"263083\">@Daniel Egger</span> might suggest the problem is in rust-lld..? I can't quite tell.)</p>",
        "id": 196779436,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588862178
    },
    {
        "content": "<p>see if I can find or file an upstream LLD bug report</p>",
        "id": 196779437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862179
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196779436\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196779436\">said</a>:</p>\n<blockquote>\n<p>(that said, this <a href=\"https://github.com/rust-lang/rust/issues/65391#issuecomment-545157883\" title=\"https://github.com/rust-lang/rust/issues/65391#issuecomment-545157883\">comment</a> by <span class=\"user-mention silent\" data-user-id=\"263083\">Daniel Egger</span> might suggest the problem is in rust-lld..? I can't quite tell.)</p>\n</blockquote>\n<p>yeah, that may be part of the problem. Which ... would put it back in our court, right?</p>",
        "id": 196779484,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862206
    },
    {
        "content": "<p>anyway I will self-assign.</p>",
        "id": 196779502,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862215
    },
    {
        "content": "<p>I don't really know who maintains rust-lld :)</p>",
        "id": 196779507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588862219
    },
    {
        "content": "<p>rust-lld is just \"lld in the llvm submodule\"</p>",
        "id": 196779577,
        "sender_full_name": "simulacrum",
        "timestamp": 1588862262
    },
    {
        "content": "<p><code>lld</code> built from our <code>llvm-project</code> fork, right?</p>",
        "id": 196779657,
        "sender_full_name": "eddyb",
        "timestamp": 1588862288
    },
    {
        "content": "<p>I'll follow-up. Self-assigned <a href=\"https://github.com/rust-lang/rust/issues/65391\" title=\"https://github.com/rust-lang/rust/issues/65391\">#65391</a></p>",
        "id": 196779669,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862292
    },
    {
        "content": "<ul>\n<li>\"Compile-time stack overflow when trait impl contains extern crate\" <a href=\"https://github.com/rust-lang/rust/issues/55779\" title=\"https://github.com/rust-lang/rust/issues/55779\">#55779</a></li>\n</ul>",
        "id": 196779695,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862306
    },
    {
        "content": "<p>this sounds like something I should've followed up on :(</p>",
        "id": 196779780,
        "sender_full_name": "eddyb",
        "timestamp": 1588862343
    },
    {
        "content": "<p>yeah lld from our fork</p>",
        "id": 196779791,
        "sender_full_name": "simulacrum",
        "timestamp": 1588862350
    },
    {
        "content": "<p>well \"fork\"</p>",
        "id": 196779802,
        "sender_full_name": "simulacrum",
        "timestamp": 1588862355
    },
    {
        "content": "<p>shallow fork for backports and Rust-specific patches :P</p>",
        "id": 196779831,
        "sender_full_name": "eddyb",
        "timestamp": 1588862373
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> well it looked like <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> was going to look into it too, right?</p>",
        "id": 196779842,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862378
    },
    {
        "content": "<p>right but I think they might've been waiting for something from me</p>",
        "id": 196779876,
        "sender_full_name": "eddyb",
        "timestamp": 1588862394
    },
    {
        "content": "<p>(and I also said I might look at it... big collective \"oh maybe <em>I</em> will...\" from each of us)</p>",
        "id": 196779884,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862398
    },
    {
        "content": "<p>anyway <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> would you like to take point here for the short term?</p>",
        "id": 196779979,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862434
    },
    {
        "content": "<p>if you do not have time then I can</p>",
        "id": 196780024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862461
    },
    {
        "content": "<p>I guess I'll try</p>",
        "id": 196780083,
        "sender_full_name": "eddyb",
        "timestamp": 1588862486
    },
    {
        "content": "<p>but I figured you might have more immediate context in your ... well, maybe not mental L1 cache, but perhaps  at least your mental L3 cache</p>",
        "id": 196780084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862488
    },
    {
        "content": "<p>try corrupted tape backups</p>",
        "id": 196780124,
        "sender_full_name": "eddyb",
        "timestamp": 1588862504
    },
    {
        "content": "<p>I looked into it, but couldn't make it not regress the output</p>",
        "id": 196780160,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588862518
    },
    {
        "content": "<p>okay assigning to <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 196780236,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862539
    },
    {
        "content": "<p>Should be easy for someone with more familiarity</p>",
        "id": 196780254,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588862549
    },
    {
        "content": "<p>We have an indirection call there that can be direct recursion</p>",
        "id": 196780286,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588862565
    },
    {
        "content": "<p>(supposedly <a href=\"https://github.com/rust-lang/rust/issues/56655\" title=\"https://github.com/rust-lang/rust/issues/56655\">#56655</a> might've helped but I don't remember why I dropped that PR)</p>",
        "id": 196780315,
        "sender_full_name": "eddyb",
        "timestamp": 1588862584
    },
    {
        "content": "<p>last nomination</p>",
        "id": 196780362,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862606
    },
    {
        "content": "<ul>\n<li>\"repr(packed) allows invalid unaligned loads\" <a href=\"https://github.com/rust-lang/rust/issues/27060\" title=\"https://github.com/rust-lang/rust/issues/27060\">#27060</a></li>\n</ul>",
        "id": 196780365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862607
    },
    {
        "content": "<p>hmm this was nominated for lang team meeting</p>",
        "id": 196780499,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862656
    },
    {
        "content": "<p>I was going to say that, I've skipped it because of that :)</p>",
        "id": 196780523,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588862671
    },
    {
        "content": "<p>but it was on our agenda?</p>",
        "id": 196780541,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862681
    },
    {
        "content": "<p>did I do that?</p>",
        "id": 196780544,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862683
    },
    {
        "content": "<p>anyway okay maybe I messed that up last night</p>",
        "id": 196780566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862695
    },
    {
        "content": "<p>I thought you re-added because you wanted to discuss it due to lack of things :)</p>",
        "id": 196780592,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588862706
    },
    {
        "content": "<p>great great great, done with T-compiler nominations</p>",
        "id": 196780598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862709
    },
    {
        "content": "<p>so, WG checkin's!</p>",
        "id": 196780614,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862716
    },
    {
        "content": "<p>lets hear from <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> , right?</p>",
        "id": 196780639,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862723
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 196780714,
        "sender_full_name": "matklad",
        "timestamp": 1588862760
    },
    {
        "content": "<p>Let me paste the report...</p>",
        "id": 196780778,
        "sender_full_name": "matklad",
        "timestamp": 1588862774
    },
    {
        "content": "<p>We've opened an RFC for making rust-analyzer the official LSP server impl:</p>\n<p><a href=\"https://github.com/rust-lang/rfcs/pull/2912\" title=\"https://github.com/rust-lang/rfcs/pull/2912\">https://github.com/rust-lang/rfcs/pull/2912</a></p>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n<p>Right now, the primary focus is on closing the immediate blockers surfaced in the RFC (protocol conformance primarily).</p>\n<p>Internally, the biggest change is probably switch to recursive chalk solver.<br>\nIt, and many other improvements everywhere now make rust-analyzer infer types correctly in most cases.<br>\nFeels like a real IDE now (auto-imports are also a big part here) :-)<br>\nBiggest missing pieces are type inference around <code>impl Trait</code>, supertraits of <code>dyn Trait</code> and <code>.await</code>.</p>\n<p>We also added initial support for procedural macros, and can expand derives (though the feature is disabled by default). This works on quasi-stable -- we copy-paste proc-macro server crate into rust-analyzer, and use the current ABI to load proc macros. Macros are executed in separate process, to avoid bringing down the whole IDE if the macro aborts.</p>",
        "id": 196780785,
        "sender_full_name": "matklad",
        "timestamp": 1588862778
    },
    {
        "content": "<p>Oh, the tracking issue for tracking RFC blockers is <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4224\" title=\"https://github.com/rust-analyzer/rust-analyzer/issues/4224\">https://github.com/rust-analyzer/rust-analyzer/issues/4224</a></p>",
        "id": 196780862,
        "sender_full_name": "matklad",
        "timestamp": 1588862813
    },
    {
        "content": "<p>some of those <del>blockers</del> missing pieces (dyn Trait supertraits...) have pending PRs related to them in chalk, I know</p>",
        "id": 196780978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588862862
    },
    {
        "content": "<p>To be clear, <code>dyn Trait</code> and nother type-inference failures are not really blockers, imo, type inference works ok-ish even without htme</p>",
        "id": 196781088,
        "sender_full_name": "matklad",
        "timestamp": 1588862896
    },
    {
        "content": "<p>rahter, they are the low-hanging fruits for improving experience for thouse who already use rust-analzer</p>",
        "id": 196781163,
        "sender_full_name": "matklad",
        "timestamp": 1588862922
    },
    {
        "content": "<p>blockers are for those, who can't use ra for whatever reason</p>",
        "id": 196781195,
        "sender_full_name": "matklad",
        "timestamp": 1588862934
    },
    {
        "content": "<p>but <em>were</em> able to use previous RLS, right?</p>",
        "id": 196781268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588862967
    },
    {
        "content": "<p>yup</p>",
        "id": 196781292,
        "sender_full_name": "matklad",
        "timestamp": 1588862974
    },
    {
        "content": "<p>Though, there's a bunch of people who can't use rls, but use rust-analyzer as well I think</p>",
        "id": 196781336,
        "sender_full_name": "matklad",
        "timestamp": 1588862995
    },
    {
        "content": "<p>sure</p>",
        "id": 196781347,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863000
    },
    {
        "content": "<p>In general, in terms of \"user-visible functionality\", I am pretty happy about current state. I am much less happy about \"two compilers\" situation</p>",
        "id": 196781490,
        "sender_full_name": "matklad",
        "timestamp": 1588863045
    },
    {
        "content": "<p>just wanted to make clear that we wouldn't block switching to RA just because, I dunno, someone is mad that it doesn't work with their fork of <code>vim</code> on their Raspberry PI</p>",
        "id": 196781503,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863051
    },
    {
        "content": "<p>(but we probably should switch to the other WG? Seems like I am going on a tangent :)</p>",
        "id": 196781534,
        "sender_full_name": "matklad",
        "timestamp": 1588863062
    },
    {
        "content": "<p>yeah okay</p>",
        "id": 196781552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> posted their update for <span class=\"user-group-mention\" data-user-group-id=\"1123\">@WG-self-profile</span>  in the agenda, so I'll cut and paste it here.</p>",
        "id": 196781597,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863091
    },
    {
        "content": "<p>My update is short so if there's more to cover with ra, we can circle back.</p>",
        "id": 196781606,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863098
    },
    {
        "content": "<p>@<strong>WG-self-profile</strong> checkin by @<strong>Wesley Wiser</strong>:</p>\n<p>Things have settled down quite a lot since the last check-in.<br>\nWe achieved our MVP goal and since then, lots of people have been using the tools either directly or via the perf.rlo integration.</p>\n<p>I think the only major news is that we have documentation everwhere that has been requested:</p>\n<p>* GitHub readme files for each individual tool.<br>\n  * <code>rustc -Zhelp</code> has some short help text describing the options.<br>\n  * The Unstable Book has <a href=\"https://doc.rust-lang.org/unstable-book/compiler-flags/self-profile.html\" title=\"https://doc.rust-lang.org/unstable-book/compiler-flags/self-profile.html\">more complete</a> documentation about the <code>-Z</code> flags.<br>\n  * Rustc Dev Guide has a <a href=\"https://rustc-dev-guide.rust-lang.org/profiling.html\" title=\"https://rustc-dev-guide.rust-lang.org/profiling.html\">mention</a>.</p>\n<p>I also wrote a rather extensive post on the <a href=\"https://blog.rust-lang.org/inside-rust/2020/02/25/intro-rustc-self-profile.html\" title=\"https://blog.rust-lang.org/inside-rust/2020/02/25/intro-rustc-self-profile.html\">Inside-Rust blog</a> about the tooling including a complete step-by-step tutorial.</p>\n<p>While there additional polish that could be done, there are no remaining \"must-have\" features that I'm aware of.</p>",
        "id": 196781620,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863102
    },
    {
        "content": "<p>(oh, they were here!)</p>",
        "id": 196781637,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863111
    },
    {
        "content": "<p>No worries! Thanks for posting.</p>",
        "id": 196781718,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863134
    },
    {
        "content": "<p>I have a question <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 196781734,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863139
    },
    {
        "content": "<p>Sure</p>",
        "id": 196781753,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863151
    },
    {
        "content": "<p>something I hear fairly consistently is about the desire to figure out which parts of one's code are responsible for compilation time</p>",
        "id": 196781771,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863161
    },
    {
        "content": "<p>I remember there being some amount of work in that direction</p>",
        "id": 196781781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863168
    },
    {
        "content": "<p>(and .. I think .. some requests for help (from me...eek) about accounting for time in trait solving)</p>",
        "id": 196781810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> you mean which parts of one's source code being fed into <code>rustc</code>, right?</p>",
        "id": 196781854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863199
    },
    {
        "content": "<p>but that wasn't part of MVP, right?</p>",
        "id": 196781859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863201
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I don't know if I understand the distinction</p>",
        "id": 196781895,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863218
    },
    {
        "content": "<p>vs code of <code>rustc</code> itself</p>",
        "id": 196781914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863229
    },
    {
        "content": "<p>I'm mostly just wondering if there's some status update, and the status might be \"yeah that's kind of stalled out\" (and that seems fine)</p>",
        "id": 196781927,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863234
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> poke me later about trait solving stuff but that's definitely something I'm supposed to be working on</p>",
        "id": 196781940,
        "sender_full_name": "eddyb",
        "timestamp": 1588863241
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> ok right, i.e., if I were to edit my crate, what changes might help reduce my compilation time</p>",
        "id": 196782035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863266
    },
    {
        "content": "<p>So we have support for recording query keys which means we can blame queries back to a <code>DefId</code>. I think the open question is how to represent blame because of the effects of query caching. If I have </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">bar</span>::<span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">foo2</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">bar</span>::<span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>Do we blame (for example) well formd-ness checking of <code>barr::&lt;u8&gt;()</code> on <code>foo</code> or <code>foo2</code>?</p>",
        "id": 196782112,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863298
    },
    {
        "content": "<p>That might be a bad specific example but I think it gets the point across.</p>",
        "id": 196782143,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863314
    },
    {
        "content": "<p>yeah, that's a tricky problem</p>",
        "id": 196782165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863322
    },
    {
        "content": "<p>recording query keys can help today but it's hard to see them without e.g. using the Chrome profiler view</p>",
        "id": 196782198,
        "sender_full_name": "eddyb",
        "timestamp": 1588863330
    },
    {
        "content": "<p>We do have an issue for this request but no-one has come up with a good solution to that.</p>",
        "id": 196782216,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863340
    },
    {
        "content": "<p>and even then there's no aggregation by proximity in the source code</p>",
        "id": 196782224,
        "sender_full_name": "eddyb",
        "timestamp": 1588863344
    },
    {
        "content": "<p>you just have to get lucky with spotting an anomaly</p>",
        "id": 196782253,
        "sender_full_name": "eddyb",
        "timestamp": 1588863355
    },
    {
        "content": "<p>Yeah, that's a great point</p>",
        "id": 196782263,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863358
    },
    {
        "content": "<p>is there a way to at least add multiple defid's in, in response to the 2nd, 3rd, etc queries?</p>",
        "id": 196782314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863365
    },
    {
        "content": "<p>i.e. be able to represent the reuse?</p>",
        "id": 196782328,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863374
    },
    {
        "content": "<p>(and \"spread the blame\", so to speak?)</p>",
        "id": 196782349,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863384
    },
    {
        "content": "<p>I have thoughts but, among other things, I would note that this problem doesn't affect a \"flat view\", so much</p>",
        "id": 196782357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863390
    },
    {
        "content": "<p>i.e., just looking at self-time?</p>",
        "id": 196782384,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863403
    },
    {
        "content": "<p>I believe there's support for tracking query cache hits as well but last I recall it slowed down the compiler significantly</p>",
        "id": 196782396,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863411
    },
    {
        "content": "<p>(but maybe that is just not esp. useful in practice)</p>",
        "id": 196782409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863414
    },
    {
        "content": "<p>We issue a <em>lot</em> of queries</p>",
        "id": 196782419,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863418
    },
    {
        "content": "<p>OTOH that (chrome profile) file is JSON and I have done some analysis using <code>jq</code> on it</p>",
        "id": 196782435,
        "sender_full_name": "eddyb",
        "timestamp": 1588863426
    },
    {
        "content": "<p>I don't mean a flat view of queries</p>",
        "id": 196782439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863427
    },
    {
        "content": "<p>I mean that if you just showed (e.g.) the def-ids</p>",
        "id": 196782465,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863437
    },
    {
        "content": "<p>Yeah</p>",
        "id": 196782484,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863446
    },
    {
        "content": "<p>(like, how much time was spent in <em>any</em> query tagged with a particular def-id)</p>",
        "id": 196782503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863452
    },
    {
        "content": "<p>Perhaps it's worth trying the naive thing and seeing if people actually find that useful.</p>",
        "id": 196782517,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863462
    },
    {
        "content": "<p>with some amount being kind of \"unknown\" (because it's not ascribed to a single fn)</p>",
        "id": 196782538,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863473
    },
    {
        "content": "<p>yeah I can do stuff like that by hand now with <code>jq</code></p>",
        "id": 196782540,
        "sender_full_name": "eddyb",
        "timestamp": 1588863474
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196782517\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196782517\">said</a>:</p>\n<blockquote>\n<p>Perhaps it's worth trying the naive thing and seeing if people actually find that useful.</p>\n</blockquote>\n<p>I think it would be worth it, if it's not too hard</p>",
        "id": 196782625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863501
    },
    {
        "content": "<p>I'm sorry, what is <code>jq</code> <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> ?</p>",
        "id": 196782641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863509
    },
    {
        "content": "<p>JSON query tool</p>",
        "id": 196782652,
        "sender_full_name": "eddyb",
        "timestamp": 1588863516
    },
    {
        "content": "<p>Probably not! Certainly worth a few hours <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 196782658,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1588863520
    },
    {
        "content": "<p>/me googles</p>",
        "id": 196782668,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863523
    },
    {
        "content": "<p>it's basically awk/perl one-liners but for the JSON age :P</p>",
        "id": 196782687,
        "sender_full_name": "eddyb",
        "timestamp": 1588863533
    },
    {
        "content": "<p>jq is nifty</p>",
        "id": 196782702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588863541
    },
    {
        "content": "<p>the other place I've used it in recently is <a href=\"https://www.reddit.com/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/\" title=\"https://www.reddit.com/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/\">https://www.reddit.com/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/</a></p>",
        "id": 196782730,
        "sender_full_name": "eddyb",
        "timestamp": 1588863557
    },
    {
        "content": "<p>to filter Cargo output by lint</p>",
        "id": 196782761,
        "sender_full_name": "eddyb",
        "timestamp": 1588863578
    },
    {
        "content": "<p>/me reading <code>jq</code> home page, falls into the RIIR trap</p>",
        "id": 196782774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863584
    },
    {
        "content": "<p>hup!</p>",
        "id": 196782966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863664
    },
    {
        "content": "<p>that's an hour, folks!</p>",
        "id": 196782974,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863667
    },
    {
        "content": "<p>Thank you to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending. And again, please do fill out those \"State of the Compiler Team\" surveys; they should not take long, its only like four or five questions.</p>",
        "id": 196783064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863711
    },
    {
        "content": "<p>Stay safe, stay healthy!</p>",
        "id": 196783076,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863717
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196782730\" title=\"#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202020-05-07.20.2354818/near/196782730\">said</a>:</p>\n<blockquote>\n<p>the other place I've used it in recently is <a href=\"https://www.reddit.com/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/\" title=\"https://www.reddit.com/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/\">https://www.reddit.com/r/rust/comments/g9mw57/oneliner_to_correctly_list_all_uses_ofunsafe_in/</a></p>\n</blockquote>\n<p><code>-Funsafe-code</code> flag is awesome, best name ever <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 196783223,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588863781
    },
    {
        "content": "<p>it's just short for \"forbid\" :P</p>",
        "id": 196783313,
        "sender_full_name": "eddyb",
        "timestamp": 1588863819
    },
    {
        "content": "<p>:P</p>",
        "id": 196783335,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588863827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> c'mon take credit for even the accidental puns</p>",
        "id": 196783455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863858
    },
    {
        "content": "<p>gonna use this fun and safe code flag ... <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 196783477,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588863866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> don't make me spend two hours in git blame to find whoever added these flags back in the day,,,</p>",
        "id": 196783572,
        "sender_full_name": "eddyb",
        "timestamp": 1588863900
    },
    {
        "content": "<p>some people spend ages coming up with things like Libiberty to achieve such goals</p>",
        "id": 196783650,
        "sender_full_name": "pnkfelix",
        "timestamp": 1588863930
    },
    {
        "content": "<p>don't remind me I have to ping those people again because they've been ignoring my rust demangler patch for probably months now</p>",
        "id": 196784353,
        "sender_full_name": "eddyb",
        "timestamp": 1588864202
    },
    {
        "content": "<p>I wonder if the person who owns the demanglers part of libiberty is ok</p>",
        "id": 196784427,
        "sender_full_name": "eddyb",
        "timestamp": 1588864222
    },
    {
        "content": "<p>I needed to do this <a href=\"https://twitter.com/spastorino/status/1258414788822130689\" title=\"https://twitter.com/spastorino/status/1258414788822130689\">https://twitter.com/spastorino/status/1258414788822130689</a> sorry <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/spastorino/status/1258414788822130689\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/543960868589821952/6aUT2q0g_normal.jpeg\"></a><p>If you want to have fun and be safe while doing Rust, remember to pass `-Funsafe-code` flag when you compile your programs.</p><span>- Santiago Pastorino (@spastorino)</span></div></div>",
        "id": 196785238,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588864481
    },
    {
        "content": "<p>:D I saw on twitter before I saw this message</p>",
        "id": 196786488,
        "sender_full_name": "oli",
        "timestamp": 1588864917
    }
]