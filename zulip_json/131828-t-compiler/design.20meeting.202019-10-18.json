[
    {
        "content": "<p>Just a reminder to <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> : we will be starting this week's design meeting in this topic area in about 11 minutes</p>",
        "id": 178475282,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406546
    },
    {
        "content": "<p>Do we have a link to agenda handy?</p>",
        "id": 178475358,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406601
    },
    {
        "content": "<p>This weeks topic is debuginfo, or more generally: What resources can we devote to supporting the debugging experience? If those resources are insufficient, can/should we move debuginfo support extensions out-of-tree</p>",
        "id": 178475455,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406626
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/compiler-team/issues/186\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/issues/186\">compiler-team#186</a> was the proposal for this meeting</p>",
        "id": 178475512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406668
    },
    {
        "content": "<p>the closest thing we have to an agenda is the gist linked there: <a href=\"https://gist.github.com/pnkfelix/a9f86000840701d8474daadcef43e0e0\" target=\"_blank\" title=\"https://gist.github.com/pnkfelix/a9f86000840701d8474daadcef43e0e0\">https://gist.github.com/pnkfelix/a9f86000840701d8474daadcef43e0e0</a></p>",
        "id": 178475542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> maybe we can fit more than one topic in the meeting slot? debuginfo might not take so much time (famous last words)</p>",
        "id": 178475579,
        "sender_full_name": "centril",
        "timestamp": 1571406710
    },
    {
        "content": "<p>I have mixed feelings about adding new topics on the fly; in theory, people may want advance notice if a topic is going to be discussed.</p>",
        "id": 178475671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406753
    },
    {
        "content": "<p>but I suppose there is nothing stopping us from having informal chats in whatever time remains</p>",
        "id": 178475687,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406772
    },
    {
        "content": "<p>I just want to be wary of making <em>decisions</em> about other topics during a just-in-time scheduled discussion</p>",
        "id": 178475709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> fair point, maybe we can pick some topic that requires less read-up time?</p>",
        "id": 178475710,
        "sender_full_name": "centril",
        "timestamp": 1571406792
    },
    {
        "content": "<p>I think we should prefer to not formally add them and certainly not ahead of time</p>",
        "id": 178475711,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406792
    },
    {
        "content": "<p>Debuginfo sounds like a complex topic that we have no good answers for, too :)</p>",
        "id": 178475741,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406830
    },
    {
        "content": "<blockquote>\n<p>I think we should prefer to not formally add them and certainly not ahead of time</p>\n</blockquote>\n<p>I'm sorry, is this a statement in favor of more JIT-scheduling of topics?</p>",
        "id": 178475743,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406831
    },
    {
        "content": "<p>(because that's how it  parses in my brain.)</p>",
        "id": 178475776,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571406843
    },
    {
        "content": "<p>I think Mark is saying the opposite <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 178475820,
        "sender_full_name": "centril",
        "timestamp": 1571406873
    },
    {
        "content": "<p>I believe we want to mostly discuss maintainership of debuginfo tho today?</p>",
        "id": 178475879,
        "sender_full_name": "centril",
        "timestamp": 1571406909
    },
    {
        "content": "<p>I'm saying that if we are to discuss other things today we should do so when we get there</p>",
        "id": 178475883,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406914
    },
    {
        "content": "<p>Not decide now what we may or may not discuss</p>",
        "id": 178475895,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406928
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> seems obviously right :P</p>",
        "id": 178475898,
        "sender_full_name": "centril",
        "timestamp": 1571406930
    },
    {
        "content": "<p>Not decide now what we may or may not discuss</p>",
        "id": 178475904,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406938
    },
    {
        "content": "<p>And in either case not make decisions</p>",
        "id": 178475905,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406938
    },
    {
        "content": "<p>Not decide now what we may or may not discuss</p>",
        "id": 178475917,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406947
    },
    {
        "content": "<p>And in either case not make decisions</p>",
        "id": 178475918,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406947
    },
    {
        "content": "<p>Gah zulip why</p>",
        "id": 178475979,
        "sender_full_name": "simulacrum",
        "timestamp": 1571406970
    },
    {
        "content": "<p>(imo the point of design meetings is mostly to just have a lot of compiler devs present so we can think more collaboratively about a larger change)</p>",
        "id": 178475982,
        "sender_full_name": "centril",
        "timestamp": 1571406972
    },
    {
        "content": "<p>I think it's also important that people have time to prepare for the discussion. Otherwise we just end up with most of the team watching the stream as a few people familiar with the topic talk.</p>",
        "id": 178476253,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571407180
    },
    {
        "content": "<p>okay so lets get started</p>",
        "id": 178476377,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407244
    },
    {
        "content": "<p>as noted in the <a href=\"https://gist.github.com/pnkfelix/a9f86000840701d8474daadcef43e0e0\" target=\"_blank\" title=\"https://gist.github.com/pnkfelix/a9f86000840701d8474daadcef43e0e0\">gist</a>, there are two points raised there that can sort of act as drivers for the conversation today</p>",
        "id": 178476420,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407279
    },
    {
        "content": "<p>namely, we have both bugs and Pull Requests related to debuginfo, but its not clear if we have anyone qualified (or at least willing to claim qualification, and/or time/resources available) to fix the bugs and/or review the PR's.</p>",
        "id": 178476526,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407323
    },
    {
        "content": "<p>So the most obvious question to ask: What if I'm wrong? Do we have anyone here who feels like they could be the \"debuginfo expert\" ?</p>",
        "id": 178476588,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407370
    },
    {
        "content": "<p>I wouldn't even know who to ask <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 178476775,
        "sender_full_name": "oli",
        "timestamp": 1571407483
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/64343\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64343\">https://github.com/rust-lang/rust/issues/64343</a> in particular is causing me pain when doing local testing of rollups and other things</p>",
        "id": 178476791,
        "sender_full_name": "centril",
        "timestamp": 1571407498
    },
    {
        "content": "<p>I would start by asking <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> , myself</p>",
        "id": 178476801,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407505
    },
    {
        "content": "<p>from my end, if we removed it, that would suffice (larger changes are not something I'm going to push for)</p>",
        "id": 178476813,
        "sender_full_name": "centril",
        "timestamp": 1571407510
    },
    {
        "content": "<p>(is <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> here today?)</p>",
        "id": 178476834,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> sure, I can understand that. But I do think there's a broader question here that its useful to talk about</p>",
        "id": 178476914,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407566
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> don't disagree <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 178476937,
        "sender_full_name": "centril",
        "timestamp": 1571407583
    },
    {
        "content": "<p>okay well given the sound of crickets in response to my question above, I'm going to assume we don't have any local debuginfo experts</p>",
        "id": 178476981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407618
    },
    {
        "content": "<p>So my next question is: Would it be reasonable to move debuginfo support out of tree?</p>",
        "id": 178477000,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407636
    },
    {
        "content": "<p>(i think of this as being similar to what we did with things like Emacs support, where we made a separate rust-mode.el repo)</p>",
        "id": 178477024,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407661
    },
    {
        "content": "<p>But I am not 100% certain that the pro's there would outweigh the con's.</p>",
        "id": 178477041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407679
    },
    {
        "content": "<p>Could you maybe expand a bit on what that would mean? Would it just be the testing of debuginfo that gets moved out? Or generating debuginfo entirely?</p>",
        "id": 178477124,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571407723
    },
    {
        "content": "<p>In particular: I assume the debugger support is tied in some way to the details of internal representations of things like <code>Vec</code> and <code>&amp;[T]</code></p>",
        "id": 178477130,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407728
    },
    {
        "content": "<blockquote>\n<p>Could you maybe expand a bit on what that would mean? Would it just be the testing of debuginfo that gets moved out? Or generating debuginfo entirely?</p>\n</blockquote>\n<p>Ah, good point. there may be separate details here that I should make explicitly seprate</p>",
        "id": 178477171,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407755
    },
    {
        "content": "<p>My understanding is that we support debuggers in a couple of different ways</p>",
        "id": 178477246,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407801
    },
    {
        "content": "<p>hasn't <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  worked on debuginfo somewhat?</p>",
        "id": 178477380,
        "sender_full_name": "centril",
        "timestamp": 1571407848
    },
    {
        "content": "<ol>\n<li>we have symbol tables in our object files, 2. we generate DWARF files on the side, and 3. we have debugger support scripts (written I think in Python) that you load up from gdb or lldb to get better experience interacting with Rust code</li>\n</ol>",
        "id": 178477384,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407857
    },
    {
        "content": "<p>I think (1.) and (2.) are tightly coupled to the compiler. I do not know how one would support them out of tree.</p>",
        "id": 178477447,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407908
    },
    {
        "content": "<p>so I guess the main thing I was thinking could move out of tree was (3.)</p>",
        "id": 178477464,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407921
    },
    {
        "content": "<p>hi, sorry, got distracted for a bit</p>",
        "id": 178477546,
        "sender_full_name": "eddyb",
        "timestamp": 1571407959
    },
    {
        "content": "<p>the unit tests in <code>src/test/debuginfo</code>, I <strong>assume</strong>, are exercising the combined effect of (1+2+3)</p>",
        "id": 178477550,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571407966
    },
    {
        "content": "<p>(I guess I should check that claim though.)</p>",
        "id": 178477671,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408053
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> please do correct any mis-statements I may have made so far</p>",
        "id": 178477701,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408078
    },
    {
        "content": "<ol>\n<li>I'm always confused when people use \"symbol\" anywhere near debuginfo, because I think of \"symbol names\" as \"linking identifiers\"</li>\n<li>\n<p>we emit LLVM's API for DWARF, which can actually lower into CodeView for windows .pdb. we should figure out a more general API to allow cranelift support as well but what we have in-tree will likely remain there</p>\n<ul>\n<li>note that it's not tested explicitly, we should maybe fix that! <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> had some ideas</li>\n</ul>\n</li>\n<li>\n<p>sure, we could move the gdb/lldb scripts out of tree if we need to</p>\n</li>\n</ol>",
        "id": 178477861,
        "sender_full_name": "eddyb",
        "timestamp": 1571408190
    },
    {
        "content": "<p>Yeah, in my messages above, I have been mixing \"debugger UX\" with \"debuginfo\" in a pretty confusing manner</p>",
        "id": 178477944,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408252
    },
    {
        "content": "<p><em>inside</em> the compiler, \"debuginfo\" refers to what ultimately ends up as DWARF/CodeView, AFAIK</p>",
        "id": 178477983,
        "sender_full_name": "eddyb",
        "timestamp": 1571408281
    },
    {
        "content": "<p>but \"debuginfo\" as a team/WG/general concern should include debuggers yeah</p>",
        "id": 178478034,
        "sender_full_name": "eddyb",
        "timestamp": 1571408294
    },
    {
        "content": "<p>I guess you could have a \"debugging WG/team\" which wouldn't need to focus only on traditional debuginfo etc.</p>",
        "id": 178478065,
        "sender_full_name": "eddyb",
        "timestamp": 1571408323
    },
    {
        "content": "<p>but in order to make a WG, we need to have people to populate it</p>",
        "id": 178478087,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408343
    },
    {
        "content": "<p>some history: all of our debuginfo code was written by <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 178478118,
        "sender_full_name": "eddyb",
        "timestamp": 1571408364
    },
    {
        "content": "<p>(and those people need to actually have time available, etc)</p>",
        "id": 178478120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408366
    },
    {
        "content": "<p>(at least initially, people have touched it over the years but it still is mainly <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> as far as I'm aware)</p>",
        "id": 178478158,
        "sender_full_name": "eddyb",
        "timestamp": 1571408391
    },
    {
        "content": "<p>yeah its sort of bad that <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> is not here today; I had thought they said they were going to be available</p>",
        "id": 178478160,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408393
    },
    {
        "content": "<p>one thing I've been trying to do since last year, and I almost have ready now, is starting to shape something less ad-hoc at the MIR level, so that we can lower it into codegen backend debuginfo the same way we do for code</p>",
        "id": 178478299,
        "sender_full_name": "eddyb",
        "timestamp": 1571408463
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> can you elaborate further on this?</p>",
        "id": 178478339,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408504
    },
    {
        "content": "<p>mw's status says \"out sick\"</p>",
        "id": 178478353,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571408510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ah, thanks for checking that</p>",
        "id": 178478413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408526
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> in particular: I don't want/need details about the particular design you are envisaging</p>",
        "id": 178478437,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408551
    },
    {
        "content": "<p>oh speaking of which, there are two sides to debuginfo: program metadata (functions, types, etc.) and intra-function debuginfo (e.g. file/line/col info, where are user variables stored, etc.), mostly the latter would make sense to do anything for at the MIR level</p>",
        "id": 178478443,
        "sender_full_name": "eddyb",
        "timestamp": 1571408553
    },
    {
        "content": "<p>but rather, what are the goals, like the advantages you are expecting?</p>",
        "id": 178478459,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408568
    },
    {
        "content": "<p>'sec, I was getting a link to the PR <a href=\"https://github.com/rust-lang/rust/pull/56231\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/56231\">https://github.com/rust-lang/rust/pull/56231</a></p>",
        "id": 178478473,
        "sender_full_name": "eddyb",
        "timestamp": 1571408584
    },
    {
        "content": "<p>the main advantage IMO is that we can transform the resulting MIR-level debuginfo and preserve the information</p>",
        "id": 178478506,
        "sender_full_name": "eddyb",
        "timestamp": 1571408614
    },
    {
        "content": "<p>hmmmmm</p>",
        "id": 178478517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408622
    },
    {
        "content": "<p>right now closure and generator debuginfo, for example, has a hardcoded shape and MIR inlining just can't work on them</p>",
        "id": 178478520,
        "sender_full_name": "eddyb",
        "timestamp": 1571408629
    },
    {
        "content": "<p>because suddenly your closure value is no longer in the first argument or whatever</p>",
        "id": 178478596,
        "sender_full_name": "eddyb",
        "timestamp": 1571408661
    },
    {
        "content": "<p>or if we want multiple user variables to be backed by the same MIR local (we could add a Vec&lt;Name&gt; to LocalDecl but that feels silly)</p>",
        "id": 178478643,
        "sender_full_name": "eddyb",
        "timestamp": 1571408698
    },
    {
        "content": "<p>in general, I think we can design \"what we want the debugger can see\" at a higher level and never do any transform that would break it</p>",
        "id": 178478670,
        "sender_full_name": "eddyb",
        "timestamp": 1571408724
    },
    {
        "content": "<p>okay</p>",
        "id": 178478694,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408749
    },
    {
        "content": "<p>the revisions you're talking about doing, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> , is this work that you see landing in the near-ish future, like next few months?</p>",
        "id": 178478752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408771
    },
    {
        "content": "<p>as a principle of \"bestest-effort\" as opposed to LLVM's \"optimizations may drop debuginfo on the floor if they can't do any better\"</p>",
        "id": 178478757,
        "sender_full_name": "eddyb",
        "timestamp": 1571408774
    },
    {
        "content": "<p>like, PR <a href=\"https://github.com/rust-lang/rust/issues/56231\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56231\">#56231</a> was opened nearly a year ago</p>",
        "id": 178478766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408783
    },
    {
        "content": "<p>it was in limbo for almost a year and I almost finished it last month, I was hoping to land it really soon</p>",
        "id": 178478787,
        "sender_full_name": "eddyb",
        "timestamp": 1571408804
    },
    {
        "content": "<p>okay that's great</p>",
        "id": 178478793,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408810
    },
    {
        "content": "<p>it blocks two MIR optimizations (SROA and NRVO) which have been mostly implemented since last year but not landed</p>",
        "id": 178478827,
        "sender_full_name": "eddyb",
        "timestamp": 1571408842
    },
    {
        "content": "<p>(I can indeed see that work has been ongoing on it, and it was blocked for a while, or at least subsumed/subverted by PR <a href=\"https://github.com/rust-lang/rust/issues/56278\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56278\">#56278</a>)</p>",
        "id": 178478832,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408845
    },
    {
        "content": "<p>In any case</p>",
        "id": 178478869,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408879
    },
    {
        "content": "<p>it seems like these points are related to how we implement rustc's built-in support for debuginfo</p>",
        "id": 178478929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408905
    },
    {
        "content": "<p>you brought up one thing which I forgot to address, the Vec&lt;T&gt; layout assumption in the debugger scripts</p>",
        "id": 178478946,
        "sender_full_name": "eddyb",
        "timestamp": 1571408919
    },
    {
        "content": "<p>yep. I don't know whether we should be worrying about that or not</p>",
        "id": 178478981,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408947
    },
    {
        "content": "<p>it strikes me as one of the main reasons to leave the debugger-scripts <em>in tree</em></p>",
        "id": 178478992,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408959
    },
    {
        "content": "<p>there is one thing we could do but I'm not sure what's the best way to implement it</p>",
        "id": 178479000,
        "sender_full_name": "eddyb",
        "timestamp": 1571408962
    },
    {
        "content": "<p>just because of the coupling there</p>",
        "id": 178479002,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571408966
    },
    {
        "content": "<p>which is to move that stuff into a trait impl (or even expose <code>fmt::Debug</code> itself somehow)</p>",
        "id": 178479052,
        "sender_full_name": "eddyb",
        "timestamp": 1571408995
    },
    {
        "content": "<p>but ... <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> , do you know off hand if we can (and do) encode a Rust version into the debug info we generate?</p>",
        "id": 178479062,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409000
    },
    {
        "content": "<p>we do</p>",
        "id": 178479120,
        "sender_full_name": "eddyb",
        "timestamp": 1571409007
    },
    {
        "content": "<p>it's an useragent</p>",
        "id": 178479123,
        "sender_full_name": "eddyb",
        "timestamp": 1571409011
    },
    {
        "content": "<p>i.e., is there something that the debugger scripts could sniff, and then it would have its own table mapping rust-version  to Vec&lt;T&gt; layout info.</p>",
        "id": 178479148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409028
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/518deda77feb4957bfd311b6cb50baa7ef9ca6a2/src/librustc_codegen_llvm/debuginfo/metadata.rs#L920-L925\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/518deda77feb4957bfd311b6cb50baa7ef9ca6a2/src/librustc_codegen_llvm/debuginfo/metadata.rs#L920-L925\">https://github.com/rust-lang/rust/blob/518deda77feb4957bfd311b6cb50baa7ef9ca6a2/src/librustc_codegen_llvm/debuginfo/metadata.rs#L920-L925</a></p>",
        "id": 178479185,
        "sender_full_name": "eddyb",
        "timestamp": 1571409051
    },
    {
        "content": "<p>(its not as elegant as finding some way to provide the layout info via some other channel, but it seems like something simple that would work...)</p>",
        "id": 178479194,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409057
    },
    {
        "content": "<p>(gdb has a bug that requires us to say that we're \"clang but really rustc\")</p>",
        "id": 178479228,
        "sender_full_name": "eddyb",
        "timestamp": 1571409073
    },
    {
        "content": "<blockquote>\n<p>i.e., is there something that the debugger scripts could sniff, and then it would have its own table mapping rust-version  to Vec&lt;T&gt; layout info.</p>\n</blockquote>\n<p>Does this sound correct to you, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  ?</p>",
        "id": 178479255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I mean, first off, you don't even need to assume the <em>layout</em>, since type debuginfo has it anyway</p>",
        "id": 178479265,
        "sender_full_name": "eddyb",
        "timestamp": 1571409100
    },
    {
        "content": "<p>well I guess I meant how its meant to interpret the fields it finds</p>",
        "id": 178479338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409126
    },
    {
        "content": "<p>you need to assume what a pointer means</p>",
        "id": 178479343,
        "sender_full_name": "eddyb",
        "timestamp": 1571409129
    },
    {
        "content": "<p>I don't know enough about debuginfo to know if we encode the interpretation in some manner. I assume it does not</p>",
        "id": 178479357,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409144
    },
    {
        "content": "<p>that's in general the annoying problem with type debuginfo, and unlike enum variants which we did get a DWARF feature for, idk if there is something for \"what's behind a pointer\"</p>",
        "id": 178479371,
        "sender_full_name": "eddyb",
        "timestamp": 1571409158
    },
    {
        "content": "<p>okay so by \"layout info\" i really meant \"how to interpret the fields (ptr, len, cap)\"</p>",
        "id": 178479450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409208
    },
    {
        "content": "<p>DWARF can execute a sort of bytecode to compute values at runtime, you'd \"just\" need to be able to use that for the length of an array or something</p>",
        "id": 178479527,
        "sender_full_name": "eddyb",
        "timestamp": 1571409243
    },
    {
        "content": "<p>interesting. okay.</p>",
        "id": 178479543,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409254
    },
    {
        "content": "<p>not necessarily something we want to support ourselves in tree</p>",
        "id": 178479553,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409267
    },
    {
        "content": "<p>but maybe we would</p>",
        "id": 178479565,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409274
    },
    {
        "content": "<p>but as it stands we might be able to encode something in the type debuginfo of <code>Vec</code> specifically, via an unstable trait it implements</p>",
        "id": 178479574,
        "sender_full_name": "eddyb",
        "timestamp": 1571409278
    },
    {
        "content": "<p>the whole point of this meeting is that we don't <em>have the development resources</em> to play interesting DWARF games, I think</p>",
        "id": 178479590,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409288
    },
    {
        "content": "<p>maybe via crafting v0 symbol names to reach a debug helper in the debugger script</p>",
        "id": 178479625,
        "sender_full_name": "eddyb",
        "timestamp": 1571409312
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> we don't have the resources to propose something upstream</p>",
        "id": 178479645,
        "sender_full_name": "eddyb",
        "timestamp": 1571409328
    },
    {
        "content": "<p>and we might not have the expertise to know what's even in the standard</p>",
        "id": 178479681,
        "sender_full_name": "eddyb",
        "timestamp": 1571409350
    },
    {
        "content": "<p>that I agree with</p>",
        "id": 178479688,
        "sender_full_name": "eddyb",
        "timestamp": 1571409360
    },
    {
        "content": "<p>... i ... don't think I was suggesting upstream-proposals as an alternative ...</p>",
        "id": 178479737,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409367
    },
    {
        "content": "<p>let me bring this back to a concrete example</p>",
        "id": 178479765,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409389
    },
    {
        "content": "<p>this issue: \"debuginfo/pretty-uninitialized-vec fails with <code>Cannot access memory at address 0x7fffff7fe000</code>\" <a href=\"https://github.com/rust-lang/rust/issues/64343\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64343\">#64343</a></p>",
        "id": 178479788,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409405
    },
    {
        "content": "<p>I suspect an expert could resolve that quickly</p>",
        "id": 178479864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409453
    },
    {
        "content": "<p>I also suspect that even a novice (to rustc-development) <em>might</em> be able to resolve it if they dedicated a day or three to it</p>",
        "id": 178479886,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409471
    },
    {
        "content": "<p>(that suspicion is based on <a href=\"https://github.com/rust-lang/rust/issues/64343#issuecomment-535279186\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64343#issuecomment-535279186\">this comment</a>)</p>",
        "id": 178479953,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409492
    },
    {
        "content": "<p>there's another thing: while I (and a few others) know a couple things about debuginfo inside rustc, I at least know basically nothing about how the debugger scripts work</p>",
        "id": 178480005,
        "sender_full_name": "eddyb",
        "timestamp": 1571409538
    },
    {
        "content": "<p>Right!</p>",
        "id": 178480017,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409545
    },
    {
        "content": "<p>that's the point</p>",
        "id": 178480020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409548
    },
    {
        "content": "<p>I would prefer if they did significantly less work themselves</p>",
        "id": 178480022,
        "sender_full_name": "eddyb",
        "timestamp": 1571409548
    },
    {
        "content": "<p>and instead we handled most of it through traits and codegen</p>",
        "id": 178480055,
        "sender_full_name": "eddyb",
        "timestamp": 1571409577
    },
    {
        "content": "<p>is there a path where we could move <em>just</em> the debugger scripts out of tree, along with their unit tests?</p>",
        "id": 178480056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409578
    },
    {
        "content": "<p>and then if people want to try their hand at fixing them on their own, they would be able to do so in an isolated fashion?</p>",
        "id": 178480078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409596
    },
    {
        "content": "<p>uhhhhhhh I don't know what that would accomplish</p>",
        "id": 178480082,
        "sender_full_name": "eddyb",
        "timestamp": 1571409601
    },
    {
        "content": "<p>if nothing else, it would get this unit test from blocking T-release</p>",
        "id": 178480152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409615
    },
    {
        "content": "<p>they can do that without that part, I don't see where a barrier might be</p>",
        "id": 178480158,
        "sender_full_name": "eddyb",
        "timestamp": 1571409620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> basically that test file prevents me from doing <code>./x.py test</code></p>",
        "id": 178480201,
        "sender_full_name": "centril",
        "timestamp": 1571409641
    },
    {
        "content": "<p>and stops way earlier than I need it to</p>",
        "id": 178480226,
        "sender_full_name": "centril",
        "timestamp": 1571409659
    },
    {
        "content": "<p>my build command <em>deletes every time</em> a different debuginfo test because LLVM crashes during codegen</p>",
        "id": 178480281,
        "sender_full_name": "eddyb",
        "timestamp": 1571409699
    },
    {
        "content": "<p>you see we are all stepping around this roadblock in different ways</p>",
        "id": 178480306,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409720
    },
    {
        "content": "<p>and then there's that time when we found that we weren't even running the debuginfo tests on CI for a while</p>",
        "id": 178480344,
        "sender_full_name": "eddyb",
        "timestamp": 1571409724
    },
    {
        "content": "<p>wait maybe I misunderstand your \"deletes every time\" comment</p>",
        "id": 178480372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409755
    },
    {
        "content": "<p>I don't even know if we re-enabled all of them by now</p>",
        "id": 178480376,
        "sender_full_name": "eddyb",
        "timestamp": 1571409757
    },
    {
        "content": "<p>It sounds to me like people are saying the debuginfo tests are effectively unmaintained because everyone has their own way of ignoring the failures</p>",
        "id": 178480386,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571409763
    },
    {
        "content": "<p>are you deleting tests by accident due to a crash?</p>",
        "id": 178480390,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409768
    },
    {
        "content": "<p>no, intentionally, so that I can run debuginfo tests</p>",
        "id": 178480400,
        "sender_full_name": "eddyb",
        "timestamp": 1571409779
    },
    {
        "content": "<p>or are you deleting them on purpose to work around a  crash</p>",
        "id": 178480404,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409781
    },
    {
        "content": "<p>okay</p>",
        "id": 178480408,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409784
    },
    {
        "content": "<p>running those tests <em>is important</em></p>",
        "id": 178480409,
        "sender_full_name": "eddyb",
        "timestamp": 1571409785
    },
    {
        "content": "<p>as a first step you might want to split the tests into <code>debuginfo</code> and <code>debugger-pretty</code> or something</p>",
        "id": 178480449,
        "sender_full_name": "eddyb",
        "timestamp": 1571409826
    },
    {
        "content": "<p>yes: we definitely need to keep testing our DWARF debuginfo generation in-tree</p>",
        "id": 178480521,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409861
    },
    {
        "content": "<p>most of them are important codegen tests, and in fact one idea <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> had was to add explicit codegen tests for the LLVM annotations instead of puppetting a debugger</p>",
        "id": 178480538,
        "sender_full_name": "eddyb",
        "timestamp": 1571409881
    },
    {
        "content": "<p>by the way, is there any reason that we don't have a bisection for <a href=\"https://github.com/rust-lang/rust/issues/64343\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64343\">#64343</a> ?</p>",
        "id": 178480726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571409991
    },
    {
        "content": "<p>(other than \"bisecting local builds takes a long time\" ?)</p>",
        "id": 178480753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410004
    },
    {
        "content": "<p>I'm assuming that test worked at <em>some point</em> ...</p>",
        "id": 178480781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410019
    },
    {
        "content": "<p>did we bisect it to a nightly?</p>",
        "id": 178480793,
        "sender_full_name": "eddyb",
        "timestamp": 1571410023
    },
    {
        "content": "<p>I hate that compiletest has a hostile CLI</p>",
        "id": 178480806,
        "sender_full_name": "eddyb",
        "timestamp": 1571410035
    },
    {
        "content": "<p>(personally I don't really like gdb and don't want to learn it)</p>",
        "id": 178480815,
        "sender_full_name": "centril",
        "timestamp": 1571410039
    },
    {
        "content": "<p>there's no bisection data on the ticket</p>",
        "id": 178480818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410041
    },
    {
        "content": "<p>I'll mark it needs-bisect</p>",
        "id": 178480823,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410045
    },
    {
        "content": "<p>need to pass a bajillion flags to get it to do anything</p>",
        "id": 178480835,
        "sender_full_name": "eddyb",
        "timestamp": 1571410055
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> all you'd need is to run compiletest on that file with the right twenty flags :P</p>",
        "id": 178480847,
        "sender_full_name": "eddyb",
        "timestamp": 1571410071
    },
    {
        "content": "<p>and for me the size of the command line is too long for my shell</p>",
        "id": 178480851,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410073
    },
    {
        "content": "<p>so I end up having to put the command into a shell script just to run it</p>",
        "id": 178480860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410082
    },
    {
        "content": "<p>its pretty great</p>",
        "id": 178480915,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410094
    },
    {
        "content": "<p>multiline prompts :P</p>",
        "id": 178480916,
        "sender_full_name": "eddyb",
        "timestamp": 1571410094
    },
    {
        "content": "<p>anyway my point is you don't actually need to build rustc to run these tests</p>",
        "id": 178480926,
        "sender_full_name": "eddyb",
        "timestamp": 1571410108
    },
    {
        "content": "<p>okay</p>",
        "id": 178480932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410113
    },
    {
        "content": "<p>(and my point is that it was weird we hadn't bisected it at all yet)</p>",
        "id": 178480946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410127
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>'s ideas of using a recent build for stage0 instead of beta would probably make this much easier</p>",
        "id": 178480961,
        "sender_full_name": "eddyb",
        "timestamp": 1571410139
    },
    {
        "content": "<p>okay well I think we have at least some (small?) action items for issues with debuginfo/debugger-ux tests</p>",
        "id": 178480991,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410159
    },
    {
        "content": "<p>let me bring up the other driving point</p>",
        "id": 178481031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410193
    },
    {
        "content": "<p>PR \"WIP: Implement new gdb/lldb pretty-printers\" <a href=\"https://github.com/rust-lang/rust/issues/60826\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60826\">#60826</a></p>",
        "id": 178481096,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410207
    },
    {
        "content": "<p>basically we have completely stalled on this PR</p>",
        "id": 178481150,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410264
    },
    {
        "content": "<p>the PR itself fails the tests</p>",
        "id": 178481169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410291
    },
    {
        "content": "<p>we don't have local experts able/willing to help the author fix their PR</p>",
        "id": 178481182,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410301
    },
    {
        "content": "<p>this is the sort of thing that was prompting me to suggest moving the debugger-support scripts out of tree</p>",
        "id": 178481211,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410320
    },
    {
        "content": "<p>and we probably shouldn't even do that PR if we can come up with a better way to handle pretty-printers</p>",
        "id": 178481256,
        "sender_full_name": "eddyb",
        "timestamp": 1571410325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> can I make a suggestion to just put <code>// ignore</code> for now on this specific test?</p>",
        "id": 178481285,
        "sender_full_name": "centril",
        "timestamp": 1571410341
    },
    {
        "content": "<p>(to solve the immediate problem first)</p>",
        "id": 178481295,
        "sender_full_name": "centril",
        "timestamp": 1571410349
    },
    {
        "content": "<p>the only thing you'd be forced to do by moving out of tree is to wrap compiletest. which you can do in-tree</p>",
        "id": 178481306,
        "sender_full_name": "eddyb",
        "timestamp": 1571410355
    },
    {
        "content": "<blockquote>\n<p>and we probably shouldn't even do that PR if we can come up with a better way to handle pretty-printers</p>\n</blockquote>\n<p>maybe you could write up an elaborated proposal for this and put it up for a future design meeting?</p>",
        "id": 178481314,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410362
    },
    {
        "content": "<p>(or if <code>// ignore</code> doesn't work, whatever the equivalent of that is)</p>",
        "id": 178481315,
        "sender_full_name": "centril",
        "timestamp": 1571410363
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> we should require issues on every single <code>// ignore</code></p>",
        "id": 178481331,
        "sender_full_name": "eddyb",
        "timestamp": 1571410375
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> that's a good idea</p>",
        "id": 178481364,
        "sender_full_name": "centril",
        "timestamp": 1571410395
    },
    {
        "content": "<p>I don't have any problem with tagging the test with ignore, as long as we file a related follow-up issue so it doesn't get lost.</p>",
        "id": 178481396,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410425
    },
    {
        "content": "<p>Moving the scripts out of tree seems reasonable to me but I'm not sure how that resolves this issue. Do we just plan to delete/ignore these tests? If so, why don't we just do that now while the scripts are still in tree?</p>",
        "id": 178481481,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571410454
    },
    {
        "content": "<p>I think we want to make sure we <em>keep</em> the tests that are just testing the compiler's debuginfo generation</p>",
        "id": 178481517,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> cool; I'll investigate how the test can be ignored then</p>",
        "id": 178481520,
        "sender_full_name": "centril",
        "timestamp": 1571410482
    },
    {
        "content": "<p>I guess my point is that we could do that now while the scripts are still in tree</p>",
        "id": 178481556,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571410515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> that is why I thought <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> made a good point about separating <code>debuginfo</code> from <code>debugger-pretty</code></p>",
        "id": 178481559,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410518
    },
    {
        "content": "<p>So if that's all we want to do, I don't see much reason to move the scripts to another repo</p>",
        "id": 178481591,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571410547
    },
    {
        "content": "<p>yes, we can absolutely do such things now. it doesn't need to block on decisions about whether debugger-scripts live in tree or not</p>",
        "id": 178481594,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410548
    },
    {
        "content": "<p>one reason to move the scripts to another repo: it may be easy to land changes and/or iterate development</p>",
        "id": 178481691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410606
    },
    {
        "content": "<p>you could argue they're like syntax highlighting files</p>",
        "id": 178481715,
        "sender_full_name": "eddyb",
        "timestamp": 1571410626
    },
    {
        "content": "<p>PR <a href=\"https://github.com/rust-lang/rust/issues/60826\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60826\">#60826</a> has been up since May</p>",
        "id": 178481717,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410627
    },
    {
        "content": "<blockquote>\n<p>you could argue they're like syntax highlighting files</p>\n</blockquote>\n<p>right, I made that analogy when I brought up our Emacs rust-mode.el repo</p>",
        "id": 178481736,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410645
    },
    {
        "content": "<p>Conclusions so far:<br>\n- we ignore the problematic test for now<br>\n- we split the tests by debuginfo/debugger-pretty<br>\n- consider moving them out of tree<br>\n- eddyb has various ideas and PRs about MIR and debuginfo</p>",
        "id": 178481738,
        "sender_full_name": "centril",
        "timestamp": 1571410649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> if you find me someone who knows how these python scripts work, and remind me to dive into LLVM's DWARF building API, I can probably come up with a workable solution</p>",
        "id": 178481760,
        "sender_full_name": "eddyb",
        "timestamp": 1571410666
    },
    {
        "content": "<p>the problem is that I can come up with a dozen hacks but I have no filter for which would be viable today</p>",
        "id": 178481821,
        "sender_full_name": "eddyb",
        "timestamp": 1571410684
    },
    {
        "content": "<p>at best right now I can propose \"do something with a trait\"</p>",
        "id": 178481855,
        "sender_full_name": "eddyb",
        "timestamp": 1571410711
    },
    {
        "content": "<p>which could very well be found in an issue with a 3-digit number for all I know</p>",
        "id": 178481881,
        "sender_full_name": "eddyb",
        "timestamp": 1571410733
    },
    {
        "content": "<p>/me continues to be sad that <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>  was not here</p>",
        "id": 178481909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410750
    },
    {
        "content": "<p>(hmm, zulip no longer highlights <code>@**mw**</code> ?) Update: it doesn't work after <code>/me</code></p>",
        "id": 178481946,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410776
    },
    {
        "content": "<p>@mw&lt;TAB&gt; makes <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> for me</p>",
        "id": 178481969,
        "sender_full_name": "eddyb",
        "timestamp": 1571410797
    },
    {
        "content": "<p>manual: <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 178482021,
        "sender_full_name": "eddyb",
        "timestamp": 1571410806
    },
    {
        "content": "<p>what the heck, I am writing <span class=\"user-mention\" data-user-id=\"124287\">@mw</span></p>",
        "id": 178482041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410815
    },
    {
        "content": "<p>(!)</p>",
        "id": 178482051,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410820
    },
    {
        "content": "<p>#FunTimesWithZulip</p>",
        "id": 178482056,
        "sender_full_name": "eddyb",
        "timestamp": 1571410831
    },
    {
        "content": "<p>okay sorry I'll play with this in the Zulip stream later</p>",
        "id": 178482064,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410837
    },
    {
        "content": "<p>so I think we have the main action items for <a href=\"https://github.com/rust-lang/rust/issues/64343\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64343\">#64343</a> (namely, add an <code>// ignore</code> and open an issue)</p>",
        "id": 178482120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410883
    },
    {
        "content": "<p>do we have any action item for PR <a href=\"https://github.com/rust-lang/rust/issues/60826\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60826\">#60826</a> ?</p>",
        "id": 178482144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410897
    },
    {
        "content": "<p>since <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> said that we may not want to land it, I think we need to wait before we take action</p>",
        "id": 178482165,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410917
    },
    {
        "content": "<p>I'll write a comment on the PR</p>",
        "id": 178482218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571410929
    },
    {
        "content": "<p>Is there any other point that anyone wants to raise? We are 3 minutes over, so no one should feel obligated to stick around</p>",
        "id": 178482422,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571411045
    },
    {
        "content": "<p>(speaking of which, thank you to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending !!!)</p>",
        "id": 178482442,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571411064
    },
    {
        "content": "<p>I was looking for relevant issues and found <a href=\"https://github.com/rust-lang/rust/issues/37504\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/37504\">https://github.com/rust-lang/rust/issues/37504</a> (apparently even <code>&amp;[T]</code> is a problem, not just <code>Vec&lt;T&gt;</code>)</p>",
        "id": 178483006,
        "sender_full_name": "eddyb",
        "timestamp": 1571411421
    },
    {
        "content": "<p>the only other semi-relevant issue I can find is <a href=\"https://github.com/rust-lang/rust/issues/43334\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/43334\">https://github.com/rust-lang/rust/issues/43334</a></p>",
        "id": 178486679,
        "sender_full_name": "eddyb",
        "timestamp": 1571413821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> btw I sketched a bit of the idea I had <a href=\"https://github.com/rust-lang/rust/issues/65564\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65564\">https://github.com/rust-lang/rust/issues/65564</a></p>",
        "id": 178492779,
        "sender_full_name": "eddyb",
        "timestamp": 1571418267
    },
    {
        "content": "<p>(not sure if somebody is on this already, but can somebody open a PR with minutes or notes on the compiler-team repository?)</p>",
        "id": 178522507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571448096
    },
    {
        "content": "<p>Sorry for not attending. I was out sick the second half of last week <code>:(</code></p>",
        "id": 178635737,
        "sender_full_name": "mw",
        "timestamp": 1571646912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> I totally understand</p>",
        "id": 178655117,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571665010
    }
]