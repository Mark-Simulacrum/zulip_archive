[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> (or anyone else who may know), while reviewing PR <a href=\"https://github.com/rust-lang/rust/issues/72121\">#72121</a>, I am sitting here wondering \"I feel like I've seen this pattern elsewhere in the rustc source, of dynamically picking a new ID in the current space and tracking an on-disk-id-&gt;in-memory-id map in some fashion</p>",
        "id": 204251191,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595015802
    },
    {
        "content": "<p>but my brief attempts to skim the metadata code have left me shrugging my shoulders.</p>",
        "id": 204251462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595015992
    },
    {
        "content": "<p>(the closest thing I've found so far isn't really quite the same thing; the <code>rustc_span::source_map</code> code does need to keep track of how the <code>start_pos</code> and <code>end_pos</code> need to be adjusted as we load in new files)</p>",
        "id": 204251774,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595016120
    },
    {
        "content": "<p>Really I was just sitting here wondering \"is this a common pattern that we should be putting into its own crate for rustc?\"</p>",
        "id": 204251855,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595016150
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> remapping <code>CrateNum</code> is the main one I know of</p>",
        "id": 204279185,
        "sender_full_name": "eddyb",
        "timestamp": 1595039024
    },
    {
        "content": "<p>I don't think it's \"common\" in the sense of showing up many times, enough to warrant an abstraction</p>",
        "id": 204279230,
        "sender_full_name": "eddyb",
        "timestamp": 1595039048
    },
    {
        "content": "<p>Oh yes, CrateNum is probably what I was thinking of.</p>",
        "id": 204315929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595103297
    },
    {
        "content": "<p>And you are probably right that trying to develop an abstraction for this is not worth it. But I would like to maybe review both in parallel; itâ€™s possible past lessons from one could apply to the newer one</p>",
        "id": 204315950,
        "sender_full_name": "pnkfelix",
        "timestamp": 1595103362
    }
]