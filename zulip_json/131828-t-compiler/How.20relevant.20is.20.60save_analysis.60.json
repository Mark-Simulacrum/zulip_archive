[
    {
        "content": "<p>Hello everyone!</p>\n<p>There is an ongoing effort to get rid of <code>NodeId</code>s in the compiler but it seems one of the remaining user of <code>NodeId</code>s is the <code>save_analysis</code> crate. It appears to be running some kind of analysis pass based on the AST tree (hence <code>NodeId</code>s everywhere) but also rely on conversion to/from <code>DefId</code> and <code>HirId</code> which sometime fails because not every node gets assigned a def id or a hir id.</p>\n<p>I am not familiar with this crate and I wonder what is it used for?<br>\nCould/should it be updated to work on the HirId tree instead?</p>",
        "id": 199267881,
        "sender_full_name": "marmeladema",
        "timestamp": 1590860629
    },
    {
        "content": "<p>Mostly it's for producing the data that the RLS consumes I believe</p>",
        "id": 199267932,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590860692
    },
    {
        "content": "<p>Is RLS supposed to be replaced/superseeded by rust-analyzer somehow?</p>",
        "id": 199268095,
        "sender_full_name": "marmeladema",
        "timestamp": 1590860910
    },
    {
        "content": "<p>Yes, the RFC for that just got merged, but it's still going to be a while until that happens</p>",
        "id": 199268113,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590860970
    },
    {
        "content": "<p>Oh great! In the mean time, I am not sure what would be the way forward for removing NodeId's</p>",
        "id": 199268188,
        "sender_full_name": "marmeladema",
        "timestamp": 1590861100
    },
    {
        "content": "<p>I could try to migrate it to HirId tree but i am not sure how worthwhile it would be. At the same time i'd probably learn a few things about the compiler by doing so :P</p>",
        "id": 199268299,
        "sender_full_name": "marmeladema",
        "timestamp": 1590861316
    },
    {
        "content": "<p>So i tried  to port <code>save_analysis</code> to use HIR tree instead of AST and it seems to work!</p>",
        "id": 199347225,
        "sender_full_name": "marmeladema",
        "timestamp": 1591000750
    },
    {
        "content": "<p>It might be a long shot, but here it is: <a href=\"https://github.com/rust-lang/rust/pull/72882\">https://github.com/rust-lang/rust/pull/72882</a></p>",
        "id": 199359564,
        "sender_full_name": "marmeladema",
        "timestamp": 1591012303
    },
    {
        "content": "<p>Well, against all odds, tests are passing now :)</p>",
        "id": 199373614,
        "sender_full_name": "marmeladema",
        "timestamp": 1591020651
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span>! Sorry I was busy last week, but nice work! Have you tried running the RLS test suite, specifically the ones in <a href=\"https://github.com/rust-lang/rls/tree/master/rls-analysis\"><code>rls-analysis</code></a>?</p>",
        "id": 199408148,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1591037687
    },
    {
        "content": "<p>(I don't actually know if you can how to run RLS tests with a custom toolchain, maybe someone else can help?)</p>",
        "id": 199408229,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1591037737
    },
    {
        "content": "<p>Unfortunately, our tests for the save analysis don't really cover much at all</p>",
        "id": 199408327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591037789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> might be able to help advise you in testing against the RLS</p>",
        "id": 199408337,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591037799
    },
    {
        "content": "<p>I am running <code>./x.py test --stage 1 src/tools/rls</code> and it seems to work with a custom toolchain</p>",
        "id": 199409820,
        "sender_full_name": "marmeladema",
        "timestamp": 1591038462
    },
    {
        "content": "<p>I have three failing tests that I don't know yet how to solve but at least its not catastrophic :)</p>",
        "id": 199409881,
        "sender_full_name": "marmeladema",
        "timestamp": 1591038486
    },
    {
        "content": "<p>I have 3 failing tests with that PR and I am not sure how to fix those: <a href=\"https://github.com/rust-lang/rust/pull/72882#issuecomment-637156144\">https://github.com/rust-lang/rust/pull/72882#issuecomment-637156144</a></p>",
        "id": 199431165,
        "sender_full_name": "marmeladema",
        "timestamp": 1591050156
    },
    {
        "content": "<p>reviewed and posted comments on how the tests should be fixed</p>",
        "id": 199520521,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1591116419
    },
    {
        "content": "<p>Ok i will just try to fix the ideas then :)</p>",
        "id": 199521440,
        "sender_full_name": "marmeladema",
        "timestamp": 1591116868
    },
    {
        "content": "<p>just posted the response here as an fyi for others :) I didn't post more than the two-sided index response</p>",
        "id": 199522603,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1591117394
    },
    {
        "content": "<p>I am trying to figure out how i am going to craft different ids using HirId/DefId and without using NodeId</p>",
        "id": 199524162,
        "sender_full_name": "marmeladema",
        "timestamp": 1591118149
    },
    {
        "content": "<p>basically i need to fit 3 u32 into 1 lol</p>",
        "id": 199524307,
        "sender_full_name": "marmeladema",
        "timestamp": 1591118211
    },
    {
        "content": "<p>Well more like two u32 into one</p>",
        "id": 199524538,
        "sender_full_name": "marmeladema",
        "timestamp": 1591118345
    },
    {
        "content": "<p>Yep, saw the combination logic</p>",
        "id": 199559317,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1591135113
    },
    {
        "content": "<p>looks good, thanks!</p>",
        "id": 199559320,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1591135116
    },
    {
        "content": "<p>Sorry, having a hard time keeping track of Zulip chat</p>",
        "id": 199559330,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1591135127
    },
    {
        "content": "<p>out of curiosity, does that mean we won't have to maintain hir-&gt;node id mapping anymore?</p>",
        "id": 199559360,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1591135147
    },
    {
        "content": "<p>Thats the goal yes! But we are not quite done yet. But without any user of node ids directly, it will be easier to remove it.</p>",
        "id": 199592689,
        "sender_full_name": "marmeladema",
        "timestamp": 1591173268
    },
    {
        "content": "<p>But there are challenges, especially because some <code>DefId</code> are not <code>HirId</code> owner like closure <code>DefId</code>s</p>",
        "id": 199592718,
        "sender_full_name": "marmeladema",
        "timestamp": 1591173291
    },
    {
        "content": "<p>Could someone re-approve <a href=\"https://github.com/rust-lang/rust/pull/72882\">https://github.com/rust-lang/rust/pull/72882</a> please? I think the failure was spurious</p>",
        "id": 199731014,
        "sender_full_name": "marmeladema",
        "timestamp": 1591268813
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> !</p>",
        "id": 199743166,
        "sender_full_name": "marmeladema",
        "timestamp": 1591275944
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> should we merge the <code>hir</code> branch from rls repo?</p>",
        "id": 199789715,
        "sender_full_name": "marmeladema",
        "timestamp": 1591295681
    },
    {
        "content": "<p>Yup! Will do that tonight</p>",
        "id": 199789988,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1591295795
    }
]