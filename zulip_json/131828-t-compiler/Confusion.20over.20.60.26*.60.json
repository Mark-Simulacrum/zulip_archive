[
    {
        "content": "<p>I know that I can use <code>&amp;*</code> to coerce a reference into a different type, if the source type has a custom <code>Deref</code> implementation. However, what does <code>&amp;*</code> do if my type does not implement <code>Deref</code>? Do they just cancel each other out so that <code>let y = &amp;*x;</code> just becomes <code>let y = x;</code> (which is what it appears to be doing), or does the Rust compiler do something subtly different which I should be aware of if I wanted to compile <code>&amp;*</code> myself?</p>",
        "id": 208091324,
        "sender_full_name": "Lukas Diekmann",
        "timestamp": 1598449054
    },
    {
        "content": "<p><code>&amp;*x</code> where <code>x</code> has type <code>&amp;T</code> just gives you <code>&amp;T</code> again, but with a potentially shorter lifetime</p>",
        "id": 208091559,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1598449119
    },
    {
        "content": "<p>It does not invoke any user-defined <code>Deref</code> impl</p>",
        "id": 208091575,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1598449128
    },
    {
        "content": "<p>Never? I thought <code>&amp;*</code> on a <code>&amp;String</code> gives me a <code>&amp;str</code>, because of <code>String</code>'s <code>Deref</code> implementation?</p>",
        "id": 208091954,
        "sender_full_name": "Lukas Diekmann",
        "timestamp": 1598449270
    },
    {
        "content": "<p>No, never. <code>&amp;*</code> on a <strong><code>String</code></strong> however will invoke its <code>Deref</code> impl and give you a <code>&amp;str</code></p>",
        "id": 208092547,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1598449546
    },
    {
        "content": "<p>Ah, I see: <code>Deref</code> implementations are only invoked if we dereference <code>T</code>, not <code>&amp;T</code>. This is very helpful. Thanks!</p>",
        "id": 208092948,
        "sender_full_name": "Lukas Diekmann",
        "timestamp": 1598449725
    },
    {
        "content": "<p>Sometimes you'll see <code>&amp;**</code> to reach that <code>Deref</code></p>",
        "id": 208110019,
        "sender_full_name": "cuviper",
        "timestamp": 1598456935
    },
    {
        "content": "<p>Or <code>let y: &amp;str = &amp;some_string</code> or <code>some_string.as_str()</code> or <code>&amp;some_string[..]</code></p>",
        "id": 208110974,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1598457396
    }
]