[
    {
        "content": "<p>hey, so I reported <a href=\"https://github.com/rust-lang/rust/issues/89627\">#89627 - misleading hint for filter() predicates</a> and I was wondering if it would be a good first issue for me to work on?</p>",
        "id": 256648301,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1633640248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278740\">@Anatol Ulrich</span> it doesn't seem like a <em>bad</em> issue - the basic steps are:</p>\n<ol>\n<li>Find where the error is currently emitted. You can do this by passing <code>-Ztreat-err-as-bug</code>, which gives you a backtrace.</li>\n<li>Change <code>P</code> to show the trait bounds instead of the type name.</li>\n</ol>\n<p>Your suggestion to change the bounds might not always be right though - it could be that the code needs <em>both</em> the old and new bound.</p>",
        "id": 256757379,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633706999
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> <br>\nI had already done step 1! (wheeeee)<br>\nas for \"not always right\", yes good point, any suggestions how to better handle this? (shall we continue the discussion in the GH issue?)</p>",
        "id": 256789596,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1633719849
    },
    {
        "content": "<p>I don't have time to follow up on this, sorry</p>",
        "id": 256791610,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633720717
    },
    {
        "content": "<p>fair! Thanks for picking it up!</p>",
        "id": 256793072,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1633721374
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ping :)</p>",
        "id": 256960490,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1633877060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278740\">@Anatol Ulrich</span>  The difficulty for this will be that you need a way of comparing what you're suggesting against the existing bounds. In this case in particular, it is closures, so it is reasonable to \"special case\" whatever check you have (closure traits have their own syntax and are common enough using uncommon borrowing pattern that it makes sense to do so).</p>",
        "id": 257081946,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1633966905
    },
    {
        "content": "<p>What I would likely try to do is to \"erase\" all the bound lifetimes before comparing, and if <em>that</em> matches, but before erasure they don't, then it's reasonable to suggest replacement.</p>",
        "id": 257082073,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1633966955
    },
    {
        "content": "<p>while doing this it might also make sense to account for associated types: in some cases you might have a <code>T: PartialEq</code> bound, where it should have been <code>T: PartialEq&lt;i32&gt;</code> instead. Currently we suggest adding the new bound and keeping the previous one, instead of replacing, so it is a similar problem.</p>",
        "id": 257082198,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1633967024
    },
    {
        "content": "<p>phew, that sounds pretty involved</p>",
        "id": 257131000,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1633996931
    },
    {
        "content": "<p>It kind of is <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 257550958,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634224024
    },
    {
        "content": "<p>trying the simplest thing that might work (erasing bound lifetimes and comparing) might yield good results, so I'd try that</p>",
        "id": 257551041,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634224054
    },
    {
        "content": "<p>after all, worst case scenario you can drop it if you don't feel you can complete this, but I would say that these kind of issues where you don't know if you can get them working is where I've learned the most</p>",
        "id": 257551181,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1634224093
    },
    {
        "content": "<p>ok, let's see what happens!</p>",
        "id": 258398764,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1634747322
    },
    {
        "content": "<p>I'll probably also need to derive some additional meta information to replace the found <code>P</code> with the concrete bound(s)?</p>",
        "id": 258398876,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1634747384
    },
    {
        "content": "<blockquote>\n<p>but I would say that these kind of issues where you don't know if you can get them working is where I've learned the most</p>\n</blockquote>\n<p>This. All the code and doc reading that goes into researching how you _might_ solve an issue is all part of learning!</p>",
        "id": 258573892,
        "sender_full_name": "pierwill",
        "timestamp": 1634832814
    },
    {
        "content": "<p>Over the last year or two I've done <code>@rustbot claim</code> on several issues and unassigned myself after like an hour of reading several times before I ever managed to actually get anything going.</p>",
        "id": 258574179,
        "sender_full_name": "pierwill",
        "timestamp": 1634832922
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"278740\">@Anatol Ulrich</span> , <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a> is the best place for help from more experienced folks on particular issues :)</p>",
        "id": 258735171,
        "sender_full_name": "pierwill",
        "timestamp": 1634919591
    },
    {
        "content": "<p>thanks!</p>",
        "id": 259079568,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1635245753
    }
]