[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/57965\" title=\"https://github.com/rust-lang/rust/issues/57965\">https://github.com/rust-lang/rust/issues/57965</a></p>\n<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> Do you currently have enough time to review a PR implementing this.<br>\nWIll also probably need some help along the way</p>",
        "id": 195541079,
        "sender_full_name": "lcnr",
        "timestamp": 1588067842
    },
    {
        "content": "<p>Oh yeah I'd love to see this happen! Not sure I can help much though.</p>",
        "id": 195541206,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1588067917
    },
    {
        "content": "<p>Ok,looked into this and have a general idea on how this may work.</p>\n<p>My idea is to use <code>par_body_owners</code> at the end of <code>librustc_interface::passes::analysis</code> to walk through all impls and do something similar to the current <code>unconditional_recursion</code> check (except on <code>optimized_mir</code> instead of <code>mir_built</code>, as I don't know how to deal with <code>Steal</code> otherwise). We now actually follow function calls under the following conditions:</p>\n<ul>\n<li>the function is implemented in the local crate</li>\n<li>the corresponding impl can be uniquely identified using the current generic args <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9e73c2a2544ec267ebf46eff071c84d8\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9e73c2a2544ec267ebf46eff071c84d8\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9e73c2a2544ec267ebf46eff071c84d8</a></li>\n</ul>",
        "id": 195768238,
        "sender_full_name": "lcnr",
        "timestamp": 1588193509
    },
    {
        "content": "<p>This would require <code>optimized_mir</code> for functions which wouldn't be built otherwise afaict... ?</p>",
        "id": 195768335,
        "sender_full_name": "lcnr",
        "timestamp": 1588193554
    }
]