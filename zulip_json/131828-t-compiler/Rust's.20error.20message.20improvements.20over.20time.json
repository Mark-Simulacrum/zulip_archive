[
    {
        "content": "<p>Hey, I was writing a post about how Rust has improved over time, and one thing I wanted to show how much the error messages have improved. I was wondering if anyone had good specific examples of common mistakes that used to emit a confusing error message, and is now is much more clear?</p>",
        "id": 195455462,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1588011193
    },
    {
        "content": "<p>You could probably navigate through the closed <code>D-*</code> labeled issues?</p>",
        "id": 195455577,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588011251
    },
    {
        "content": "<p>Ah, there's literally a confusing category, thanks!</p>",
        "id": 195456118,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1588011595
    },
    {
        "content": "<p>one of the big improvements is the formatting IMO</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span>::<span class=\"n\">mem</span>::<span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"n\">_a</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>current nightly: (missing colors here)</p>\n<div class=\"codehilite\"><pre><span></span>error[E0505]: cannot move out of `a` because it is borrowed\n --&gt; src/main.rs:4:14\n  |\n3 |     let _a = &amp;mut a;\n  |              ------ borrow of `a` occurs here\n4 |     let _b = a;\n  |              ^ move out of `a` occurs here\n5 |     std::mem::drop(_a);\n  |                    -- borrow later used here\n\nerror: aborting due to previous error\n</pre></div>\n\n\n<p>1.0.0:</p>\n<div class=\"codehilite\"><pre><span></span>src/main.rs:4:9: 4:11 error: cannot move out of `a` because it is borrowed\nsrc/main.rs:4     let _b = a;\n                      ^~\nsrc/main.rs:3:19: 3:20 note: borrow of `a` occurs here\nsrc/main.rs:3     let _a = &amp;mut a;\n                                ^\nerror: aborting due to previous error\n</pre></div>",
        "id": 195457162,
        "sender_full_name": "lcnr",
        "timestamp": 1588012096
    },
    {
        "content": "<p>This seems like the kind of thing you could ask on URLO and get tons of people responding with their favorite changes.</p>",
        "id": 195458513,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588012791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> yeah, I'd recommend a URLO post -- there's also a blog post from 2016 or 2017 I think about the new diagnostic format that <span class=\"user-mention\" data-user-id=\"216206\">@Bastian Kauschke</span> references</p>",
        "id": 195458722,
        "sender_full_name": "simulacrum",
        "timestamp": 1588012921
    },
    {
        "content": "<p>the D-* label is very recent, circa early 2020 I think</p>",
        "id": 195458772,
        "sender_full_name": "simulacrum",
        "timestamp": 1588012933
    },
    {
        "content": "<p>How far back do you want to go?</p>",
        "id": 195459094,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013108
    },
    {
        "content": "<p>Anything pre 18 is not as well categorized, but A-diagnostics existed</p>",
        "id": 195459122,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013130
    },
    {
        "content": "<p><code>~T</code></p>",
        "id": 195459141,
        "sender_full_name": "lcnr",
        "timestamp": 1588013138
    },
    {
        "content": "<p>Also look at my PRs I would say <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 195459181,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013161
    },
    {
        "content": "<p>One thing that I haven't had the time to do is use rustup to get every stable rustc, run all the UI test suite and pipe the output to save it as colorized html</p>",
        "id": 195459601,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013331
    },
    {
        "content": "<p>That way you can make the progression of changes for code we accept today over time</p>",
        "id": 195459643,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013352
    },
    {
        "content": "<p>And rub some magic animated GIF on that ;-) (there's also a powerpoint transition that does that...)</p>",
        "id": 195459762,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588013412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> 1.0.0</p>",
        "id": 195459819,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1588013448
    },
    {
        "content": "<p><a href=\"http://estebank.github.io/rust\" title=\"http://estebank.github.io/rust\">estebank.github.io/rust</a> has a slide only for e0308 if you go right enough and then down</p>",
        "id": 195459993,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013525
    },
    {
        "content": "<p>But I did that by hand</p>",
        "id": 195460015,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013535
    },
    {
        "content": "<p>I found a pretty good one.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">Write</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">trait_obj</span><span class=\"p\">(</span><span class=\"n\">w</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Write</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">generic</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">generic</span><span class=\"o\">&lt;</span><span class=\"n\">W</span>: <span class=\"nc\">Write</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_w</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">W</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p><a href=\"/user_uploads/4715/zfZWIly-JFUo42eFd5-Ft9ed/Screenshot-2020-04-27-at-20.49.36.png\" title=\"Screenshot-2020-04-27-at-20.49.36.png\">1.2.0 error message</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/zfZWIly-JFUo42eFd5-Ft9ed/Screenshot-2020-04-27-at-20.49.36.png\" title=\"1.2.0 error message\"><img src=\"/user_uploads/4715/zfZWIly-JFUo42eFd5-Ft9ed/Screenshot-2020-04-27-at-20.49.36.png\"></a></div><p><a href=\"/user_uploads/4715/P8ShaD5yAUGav6uJuP2_xGgv/Screenshot-2020-04-27-at-20.50.12.png\" title=\"Screenshot-2020-04-27-at-20.50.12.png\">1.43.0 error message</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/P8ShaD5yAUGav6uJuP2_xGgv/Screenshot-2020-04-27-at-20.50.12.png\" title=\"1.43.0 error message\"><img src=\"/user_uploads/4715/P8ShaD5yAUGav6uJuP2_xGgv/Screenshot-2020-04-27-at-20.50.12.png\"></a></div>",
        "id": 195460059,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1588013557
    },
    {
        "content": "<p>If you wait a week it should be even better (I have some bounds improvements waiting review)</p>",
        "id": 195460122,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013604
    },
    {
        "content": "<p>Anything that added help is likely to be a good start. Also, I know that the borrow checker errors improved a lot, and that's a combo of display and content improvements.</p>",
        "id": 195460275,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588013686
    },
    {
        "content": "<p>I would look around the UI test stdout files that look nice now and try them on older compilers if you don't want to look at PRs or closed tickets</p>",
        "id": 195460486,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013796
    },
    {
        "content": "<p>This is a good example as well, I think <a href=\"https://godbolt.org/z/wieST7\" title=\"https://godbolt.org/z/wieST7\">https://godbolt.org/z/wieST7</a></p>",
        "id": 195460808,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1588013967
    },
    {
        "content": "<p>Definitely <a href=\"/user_uploads/4715/v6eB82tY3qy4XhMOTkOmLx98/Screenshot-2020-04-27-at-21.01.08.png\" title=\"Screenshot-2020-04-27-at-21.01.08.png\">Screenshot-2020-04-27-at-21.01.08.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/v6eB82tY3qy4XhMOTkOmLx98/Screenshot-2020-04-27-at-21.01.08.png\" title=\"Screenshot-2020-04-27-at-21.01.08.png\"><img src=\"/user_uploads/4715/v6eB82tY3qy4XhMOTkOmLx98/Screenshot-2020-04-27-at-21.01.08.png\"></a></div>",
        "id": 195461058,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1588014113
    },
    {
        "content": "<p>snice</p>",
        "id": 195461230,
        "sender_full_name": "lcnr",
        "timestamp": 1588014187
    },
    {
        "content": "<p>My recent PR to add an error that says that <code>fn main()</code> cannot be <code>async</code> landed recently. Before that it only said that <code>main can only return types that implement Termination</code></p>",
        "id": 195463089,
        "sender_full_name": "Sebastian Malton",
        "timestamp": 1588015142
    },
    {
        "content": "<p>For me its nll error messages about lifetimes that is a game changer.</p>",
        "id": 195474852,
        "sender_full_name": "marmeladema",
        "timestamp": 1588021466
    }
]