[
    {
        "content": "<p>i'm trying to investigate this issue and i'm not totally sure how to debug it. there's something weird happening where if you use <code>include_dir</code> to load in a large file, it causes rustc/rustdoc to overflow its main-thread stack</p>",
        "id": 159448253,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551207755
    },
    {
        "content": "<p>but if you translate the intended proc-macro output into code directly, it builds fine</p>",
        "id": 159448269,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551207779
    },
    {
        "content": "<p>OTOH, something must have changed between stable and nightly, because the memory usage doesn't balloon out of control on nightly <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 159448377,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551207852
    },
    {
        "content": "<p>nor on beta, for that matter <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 159448867,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551208189
    },
    {
        "content": "<p>O_o So it seems to have accidentally gotten fixed... A regression test needs some large files, right? Can we generate them so we don't have to have them in git?</p>",
        "id": 159449317,
        "sender_full_name": "oli",
        "timestamp": 1551208475
    },
    {
        "content": "<p>the rustdoc search index for the standard library is sufficient</p>",
        "id": 159449376,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551208521
    },
    {
        "content": "<p>it still takes ages to build tho</p>",
        "id": 159449405,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551208547
    },
    {
        "content": "<p>judging from what the person saw with <code>cargo expand</code>, it looks like it's trying to load the files into byte literals during expansion?</p>",
        "id": 159449473,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551208574
    },
    {
        "content": "<p>i'm not sure how to reduce a test case, though - <em>just</em> manually writing <code>include_bytes!(\"search-index.js\")</code> isn't enough to trigger the behavior</p>",
        "id": 159449681,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551208765
    },
    {
        "content": "<p>the macro call may need to be written by a proc-macro? there may be some weird interaction with the <code>quote</code> crate?</p>",
        "id": 159449710,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551208796
    },
    {
        "content": "<p>so it's literally about a macro that just dumps an <code>include_bytes!</code> call without doing anything else?</p>",
        "id": 159449932,
        "sender_full_name": "oli",
        "timestamp": 1551208942
    },
    {
        "content": "<p>potentially. i haven’t actually tried that</p>",
        "id": 159449953,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551208982
    },
    {
        "content": "<p><code>include_dir</code> is just a directory scan and file name collection before printing a struct expression to the output token stream, including the <code>include_bytes!</code> calls</p>",
        "id": 159450054,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551209063
    },
    {
        "content": "<p>it does use <code>proc-macro-hack</code>, but hopefully that’s not part of it</p>",
        "id": 159450075,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551209098
    },
    {
        "content": "<p>update: a trivial proc-macro that expands to <code>pub static ASDF: &amp;'static [u8] = include_bytes!(\"search-index.js\")</code> is not enough to trigger the bug</p>",
        "id": 159458105,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551215033
    },
    {
        "content": "<p>...not even when going through <code>quote</code> and using a string literal from outside the proc-macro</p>",
        "id": 159459300,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551215893
    },
    {
        "content": "<p>not even <code>proc-macro-hack</code> by itself will do it <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span></p>",
        "id": 159461606,
        "sender_full_name": "QuietMisdreavus",
        "timestamp": 1551217611
    }
]