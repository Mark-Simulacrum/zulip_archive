[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> about cargo-bisect-rustc that we have talked about previously ...</p>",
        "id": 178884618,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857099
    },
    {
        "content": "<p>in particular from the document I've built</p>",
        "id": 178884643,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857118
    },
    {
        "content": "<p>the documented tasks <a href=\"https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?view\" target=\"_blank\" title=\"https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?view\">https://hackmd.io/Ipu9wSL4SCyx9_adR6GKLg?view</a></p>",
        "id": 178884650,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857124
    },
    {
        "content": "<p>I'm not entirely sure about</p>",
        "id": 178884680,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857140
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>* Use currently installed toolchain as end point (if no end is provided)\n    * use current default toolchain\n    * make sure this is easy to override with cargo +stage1 bisect-rustc\n    * print nice error message for beta/stable as default, see task below\n</pre></div>",
        "id": 178884695,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857152
    },
    {
        "content": "<p>I meant, isn't that already done by the tool?</p>",
        "id": 178884707,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857165
    },
    {
        "content": "<p>if no end it's provided it uses the latest nightly</p>",
        "id": 178884731,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857183
    },
    {
        "content": "<p>ahh is it about installing it or not?</p>",
        "id": 178884737,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857191
    },
    {
        "content": "<p>it definitely uses latest nightly, unsure if it checks if you have installed it or not</p>",
        "id": 178884832,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857224
    },
    {
        "content": "<p>but trying to understand exactly the task</p>",
        "id": 178884845,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857232
    },
    {
        "content": "<p>I think today we ignore your system config and use the most recent nightly</p>",
        "id": 178885117,
        "sender_full_name": "simulacrum",
        "timestamp": 1571857412
    },
    {
        "content": "<p>which seems fine</p>",
        "id": 178885125,
        "sender_full_name": "simulacrum",
        "timestamp": 1571857414
    },
    {
        "content": "<p>but we could be \"better\" by trying to figure out what you probably just tested with and look at the toolchain in the current directory</p>",
        "id": 178885156,
        "sender_full_name": "simulacrum",
        "timestamp": 1571857436
    },
    {
        "content": "<p>so the idea is if you have a nightly installed use that one, otherwise do what we currently do?</p>",
        "id": 178885309,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571857532
    },
    {
        "content": "<p>Basically, yeah</p>",
        "id": 178888276,
        "sender_full_name": "simulacrum",
        "timestamp": 1571859659
    },
    {
        "content": "<p>I would just run <code>rustc -vV</code> and go from there rather than trying to interact with rustup or whatever</p>",
        "id": 178888361,
        "sender_full_name": "simulacrum",
        "timestamp": 1571859710
    },
    {
        "content": "<p>ok</p>",
        "id": 178888437,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> also, what's <code>cargo-bisect-rustc --install date_or_commit</code> useful for?</p>",
        "id": 178888477,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859762
    },
    {
        "content": "<p>I guess mainly because of the commit option?</p>",
        "id": 178888490,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859770
    },
    {
        "content": "<p>otherwise you would just install using rustup, no?</p>",
        "id": 178888507,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859779
    },
    {
        "content": "<p>If it's not nightly I would ignore (maybe with warning message)</p>",
        "id": 178888519,
        "sender_full_name": "simulacrum",
        "timestamp": 1571859787
    },
    {
        "content": "<p>yes</p>",
        "id": 178888553,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859803
    },
    {
        "content": "<p>I forget what that's for, but yeah I'd drop, people can just use rustup toolchain install master today I think</p>",
        "id": 178888575,
        "sender_full_name": "simulacrum",
        "timestamp": 1571859818
    },
    {
        "content": "<p>ok</p>",
        "id": 178888646,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859843
    },
    {
        "content": "<p>doesn't hurt, I'm just trying to understand some things :)</p>",
        "id": 178888665,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859856
    },
    {
        "content": "<p>but yeah if you give that a commit it clones the repo and all that</p>",
        "id": 178888707,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571859894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I was wondering how were you typically testing the tool</p>",
        "id": 178970514,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571934819
    },
    {
        "content": "<p>I, uh, didn't really</p>",
        "id": 178970807,
        "sender_full_name": "simulacrum",
        "timestamp": 1571934989
    },
    {
        "content": "<p>:)</p>",
        "id": 178970815,
        "sender_full_name": "simulacrum",
        "timestamp": 1571934993
    },
    {
        "content": "<p>I have no good ideas as to how to do so</p>",
        "id": 178970832,
        "sender_full_name": "simulacrum",
        "timestamp": 1571935011
    },
    {
        "content": "<p>yeah, I have some but I guess it doesn't worth the effort :)</p>",
        "id": 178971026,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935141
    },
    {
        "content": "<p>I was doing some stuff but ended figuring out that some of the things may be \"risky\" to do</p>",
        "id": 178971148,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935207
    },
    {
        "content": "<p>I've quoted \"risky\" because dunno it's just a tool</p>",
        "id": 178971182,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935229
    },
    {
        "content": "<p>but you may end with your default intalled nightly removed or stuff like that</p>",
        "id": 178971200,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935244
    },
    {
        "content": "<p>for instance, let me show you some stuff ...</p>",
        "id": 178971228,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935259
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L467-L472\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L467-L472\">here</a> one nightly is removed</p>",
        "id": 178971291,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935312
    },
    {
        "content": "<p>which is called from <a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L503\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L503\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L503</a></p>",
        "id": 178971345,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935332
    },
    {
        "content": "<p>inside <code>test</code> fn</p>",
        "id": 178971356,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935339
    },
    {
        "content": "<p>or here <a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L799\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L799\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L799</a></p>",
        "id": 178971375,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935358
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L808\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L808\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L808</a></p>",
        "id": 178971389,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935369
    },
    {
        "content": "<p>so on bisect fn also on bisect_nightlies</p>",
        "id": 178971440,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935403
    },
    {
        "content": "<p>in particular</p>",
        "id": 178971553,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935449
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L503\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L503\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L503</a></p>",
        "id": 178971554,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935449
    },
    {
        "content": "<p>and</p>",
        "id": 178971558,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935452
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L798-L800\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L798-L800\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L798-L800</a></p>",
        "id": 178971579,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935467
    },
    {
        "content": "<p>but unsure if that happens after every call to test</p>",
        "id": 178971593,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935480
    },
    {
        "content": "<p>well this one <a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L876-L878\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L876-L878\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/blob/master/src/main.rs#L876-L878</a> is also after a test call</p>",
        "id": 178971624,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935502
    },
    {
        "content": "<p>yeah, after all tests calls are remove calls so I guess the call to remove inside test could be removed</p>",
        "id": 178971686,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935541
    },
    {
        "content": "<p>anyway, that was not my point</p>",
        "id": 178971705,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935547
    },
    {
        "content": "<p>mhm</p>",
        "id": 178971706,
        "sender_full_name": "simulacrum",
        "timestamp": 1571935547
    },
    {
        "content": "<p>the thing I'm trying to decide is if I should just be deciding every remove call comparing rustc -vV output with the thing that the call wants to remove</p>",
        "id": 178971877,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935631
    },
    {
        "content": "<p>probably that's the safest thing</p>",
        "id": 178971885,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935636
    },
    {
        "content": "<p>because I was just trying to track that through all the program and I see there are a lot of cases that causes me some confusion still</p>",
        "id": 178971920,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935664
    },
    {
        "content": "<p>or maybe rather I can refactor a bit the code so make things a bit more clear to me :)</p>",
        "id": 178972052,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571935723
    },
    {
        "content": "<p>hm not sure I follow</p>",
        "id": 178972224,
        "sender_full_name": "simulacrum",
        "timestamp": 1571935811
    },
    {
        "content": "<p>those removes all look mostly fine to me</p>",
        "id": 178972250,
        "sender_full_name": "simulacrum",
        "timestamp": 1571935835
    },
    {
        "content": "<p>it might be good to guard them with a \"we installed this nightly this session\"</p>",
        "id": 178972275,
        "sender_full_name": "simulacrum",
        "timestamp": 1571935853
    },
    {
        "content": "<p>that wouldn't be too hard (especially if we just stick it in a global static)</p>",
        "id": 178972291,
        "sender_full_name": "simulacrum",
        "timestamp": 1571935865
    },
    {
        "content": "<p>one of the things I've just said is that test fn is calling remove inside the test fn itself but also all the callers call it after calling test</p>",
        "id": 178972890,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571936290
    },
    {
        "content": "<p>I guess we could remove the call from inside test</p>",
        "id": 178972910,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571936299
    },
    {
        "content": "<p>but anyway that's a minor thing which I don't care that much to be honest :)</p>",
        "id": 178972937,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571936313
    },
    {
        "content": "<blockquote>\n<p>it might be good to guard them with a \"we installed this nightly this session\"</p>\n</blockquote>\n<p>what I also was proposing is, instead of a global static, when installing or removing just calling rustc (or a cached version of the result) and check the date of that with the date of the thing you're trying to install/remove</p>",
        "id": 178973030,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571936377
    },
    {
        "content": "<p>oh</p>",
        "id": 178973237,
        "sender_full_name": "simulacrum",
        "timestamp": 1571936484
    },
    {
        "content": "<p>_that_ failure case I didn't consider</p>",
        "id": 178973255,
        "sender_full_name": "simulacrum",
        "timestamp": 1571936492
    },
    {
        "content": "<p>seems fine though</p>",
        "id": 178973261,
        "sender_full_name": "simulacrum",
        "timestamp": 1571936494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> sorry, I got back to this</p>",
        "id": 178992948,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948373
    },
    {
        "content": "<p>couldn't put a lot of effort yet on it</p>",
        "id": 178992971,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948386
    },
    {
        "content": "<p>but <a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/pull/37\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/pull/37\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/pull/37</a></p>",
        "id": 178992976,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948388
    },
    {
        "content": "<p>there are some quick and dirty things that I'm not sure how important would be to refactor, to make it the best design in the world :P</p>",
        "id": 178993057,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948426
    },
    {
        "content": "<p>anyway, let me know your thoughts about this first part</p>",
        "id": 178993102,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948435
    },
    {
        "content": "<p>I didn't even test this, just open the thing for discussion</p>",
        "id": 178993127,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948453
    },
    {
        "content": "<p>I may need to find at least a manual way to test some stuff, have a couple of scenarios because I'm gonna need that</p>",
        "id": 178993158,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948474
    },
    {
        "content": "<p>ideas are welcome</p>",
        "id": 178993162,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948479
    },
    {
        "content": "<p>this <a href=\"https://github.com/spastorino/cargo-bisect-sample\" target=\"_blank\" title=\"https://github.com/spastorino/cargo-bisect-sample\">https://github.com/spastorino/cargo-bisect-sample</a> was one of my first ideas, to have some examples around that I could use to play with</p>",
        "id": 178993315,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948548
    },
    {
        "content": "<p>also the README of the tool has another example like that one</p>",
        "id": 178993329,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571948561
    },
    {
        "content": "<p>btw after running some examples found some mistake, gonna fix it tomorrow probably</p>",
        "id": 178995317,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949648
    },
    {
        "content": "<p>okay reping me here probably when that's done</p>",
        "id": 178995600,
        "sender_full_name": "simulacrum",
        "timestamp": 1571949832
    },
    {
        "content": "<p>I might take a look later today at the code though</p>",
        "id": 178995610,
        "sender_full_name": "simulacrum",
        "timestamp": 1571949838
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 178995754,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949944
    },
    {
        "content": "<p>I think there are usages of toolchain dates that I didn't get correct because this is not doing the right thing</p>",
        "id": 178995817,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949966
    },
    {
        "content": "<p>but most of the things that I need to code are there</p>",
        "id": 178995829,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949977
    },
    {
        "content": "<p>probably some bits are wrong, gonna check out tomorrow</p>",
        "id": 178995845,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571949994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> as you may have seen on the other thread I've just tested the stuff and seems to be working fine :)</p>",
        "id": 179018068,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1571972377
    },
    {
        "content": "<p>this  \"other thread\" reminded me I promised to add some documentation about bors' commits, so here's <a href=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/pull/38\" target=\"_blank\" title=\"https://github.com/rust-lang-nursery/cargo-bisect-rustc/pull/38\">https://github.com/rust-lang-nursery/cargo-bisect-rustc/pull/38</a>  <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> -- and I <a href=\"#narrow/stream/131828-t-compiler/topic/static.20lifetime.20in.20impl.20trait.20.2365582/near/179034991\" title=\"#narrow/stream/131828-t-compiler/topic/static.20lifetime.20in.20impl.20trait.20.2365582/near/179034991\">mentioned here</a> we might need to do something in <code>cargo-bisect-rustc</code> to help with bisections hitting the very frequent rollups, and which is a use-case I don't think I've seen that mentioned in the requirements hackmds here ?</p>",
        "id": 179040437,
        "sender_full_name": "lqd",
        "timestamp": 1572001973
    },
    {
        "content": "<p>we should have less rollups :/</p>",
        "id": 179042368,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004357
    },
    {
        "content": "<p>Though I was thinking this morning that one possible avenue to look at is to make r+ auto-trigger a bors try build</p>",
        "id": 179042376,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004375
    },
    {
        "content": "<p>that would give us by-PR bisectionish within a rollup (though somewhat manual) -- they wouldn't be linear -- but it might be good enough</p>",
        "id": 179042393,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004403
    },
    {
        "content": "<p>can we maybe use the PR artifacts ?</p>",
        "id": 179042399,
        "sender_full_name": "lqd",
        "timestamp": 1572004408
    },
    {
        "content": "<p>(if some of them are usable, that is, I don't assume a new nightly is built by the PR builders)</p>",
        "id": 179042471,
        "sender_full_name": "lqd",
        "timestamp": 1572004456
    },
    {
        "content": "<p>yeah maybe the try build could be good enough indeed</p>",
        "id": 179042531,
        "sender_full_name": "lqd",
        "timestamp": 1572004526
    },
    {
        "content": "<p>PRs don't on their own produce artifacts, that's what you need a try build for</p>",
        "id": 179042587,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004572
    },
    {
        "content": "<p>in theory any rollup could trigger try builds for each of its contained PRs, even, in parallel but with the proper ordering so that it \"looks\" like the rollup merges are actually bors merges</p>",
        "id": 179042618,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004614
    },
    {
        "content": "<p>I expect that we could handle ~8 more builders (or whatever the average rollup size is) on our CI</p>",
        "id": 179042635,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004630
    },
    {
        "content": "<p>that seems like it could work :)</p>",
        "id": 179042696,
        "sender_full_name": "lqd",
        "timestamp": 1572004683
    },
    {
        "content": "<p>it feels like rollups would be a pretty big roadblock to a bisection ICE-breakers team, and this could help out a lot</p>",
        "id": 179042767,
        "sender_full_name": "lqd",
        "timestamp": 1572004781
    },
    {
        "content": "<p>a _lot_ of the time once you know what rollup it is guessing is not too hard</p>",
        "id": 179042871,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004893
    },
    {
        "content": "<p>and I imagine it'd be super helpful to even get just the rollup</p>",
        "id": 179042880,
        "sender_full_name": "simulacrum",
        "timestamp": 1572004912
    },
    {
        "content": "<p>sure, I agree, and even if icebreakers may not be able to guess, the team can do so once the rollup is known</p>",
        "id": 179043089,
        "sender_full_name": "lqd",
        "timestamp": 1572005111
    },
    {
        "content": "<p>with the \"rollup @try\"s there hopefully would be almost no need to do so, even when the rollup contains more than one PR in the same area which sometimes happen iirc</p>",
        "id": 179043266,
        "sender_full_name": "lqd",
        "timestamp": 1572005273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> unsure I understood correctly what you issue are you seeing with rollups</p>",
        "id": 179071770,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572025017
    },
    {
        "content": "<p>I guess that the tool is going to see that as a unit</p>",
        "id": 179071792,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572025031
    },
    {
        "content": "<p>the issue is that you don't want that to be a unit?</p>",
        "id": 179071805,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572025040
    },
    {
        "content": "<p>I meant, for sure it would be better, but shouldn't in rollups in general be included non risky things?</p>",
        "id": 179071851,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572025079
    },
    {
        "content": "<p>I'm not sure I understand, the more rollups we do, the more likely they are going to be the PR that cargo-bisect-rustc finds; rollups are because CI would otherwise take too long, and bugs requiring bisection can be \"non-risky\" and included in rollups. It seems nowadays  it's more the norm than the exception. What I meant is: if the tool could help continue the process instead of stopping at the rollup PR, as it does today, it would help avoid the manual process that follows of sifting through the 5-10 rolled-up PRs. And this is is looking more and more likely to happen in the future as we use rollups a lot</p>",
        "id": 179075671,
        "sender_full_name": "lqd",
        "timestamp": 1572027526
    },
    {
        "content": "<p>yes, that's what I got from your message but wasn't sure :)</p>",
        "id": 179075819,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027608
    },
    {
        "content": "<p>we can add that to the md notes</p>",
        "id": 179075831,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572027617
    },
    {
        "content": "<p>it's not absolutely indispensable of course, as you've seen we've managed fine without it til now :)</p>",
        "id": 179075909,
        "sender_full_name": "lqd",
        "timestamp": 1572027682
    },
    {
        "content": "<p>btw, <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> yesterday's code example with the new jumps</p>",
        "id": 179080758,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572031363
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@galago cargo-bisect-sample2 (master)]$ ../cargo-bisect-rustc/target/debug/cargo-bisect-rustc\nchecking nightly-2019-10-16\nchecking nightly-2019-10-14\nstd for x86_64-unknown-linux-gnu: 17.88 MB / 17.88 MB [=================================================================================================================================================================] 100.00 % 4.84 MB/s\nuninstalling nightly-2019-10-14\nuninstalling nightly-2019-10-14\nchecking nightly-2019-10-12\nstd for x86_64-unknown-linux-gnu: 17.36 MB / 17.36 MB [=================================================================================================================================================================] 100.00 % 7.47 MB/s\nuninstalling nightly-2019-10-12\nuninstalling nightly-2019-10-12\nchecking nightly-2019-10-10\nstd for x86_64-unknown-linux-gnu: 177.63 MB / 177.63 MB [===============================================================================================================================================================] 100.00 % 7.75 MB/s\nuninstalling nightly-2019-10-10\nuninstalling nightly-2019-10-10\nchecking nightly-2019-10-08\nstd for x86_64-unknown-linux-gnu: 176.71 MB / 176.71 MB [===============================================================================================================================================================] 100.00 % 6.64 MB/s\nuninstalling nightly-2019-10-08\nuninstalling nightly-2019-10-08\nchecking nightly-2019-10-01\nstd for x86_64-unknown-linux-gnu: 172.77 MB / 172.77 MB [===============================================================================================================================================================] 100.00 % 6.68 MB/s\nuninstalling nightly-2019-10-01\nuninstalling nightly-2019-10-01                                                                                                                                                                                                         [5/57]\nchecking nightly-2019-09-24\nstd for x86_64-unknown-linux-gnu: 175.85 MB / 175.85 MB [===============================================================================================================================================================] 100.00 % 7.86 MB/s\nuninstalling nightly-2019-09-24\nuninstalling nightly-2019-09-24\nchecking nightly-2019-09-17\nuninstalling nightly-2019-09-17\nchecking nightly-2019-09-16\nstd for x86_64-unknown-linux-gnu: 175.97 MB / 175.97 MB [===============================================================================================================================================================] 100.00 % 7.85 MB/s\nuninstalling nightly-2019-09-16\nuninstalling nightly-2019-09-16\nchecking nightly-2019-09-09\nstd for x86_64-unknown-linux-gnu: 174.41 MB / 174.41 MB [===============================================================================================================================================================] 100.00 % 7.56 MB/s\nuninstalling nightly-2019-09-09\nuninstalling nightly-2019-09-09\nchecking nightly-2019-09-02\nstd for x86_64-unknown-linux-gnu: 175.62 MB / 175.62 MB [===============================================================================================================================================================] 100.00 % 7.86 MB/s\nuninstalling nightly-2019-09-02\nuninstalling nightly-2019-09-02\nchecking nightly-2019-08-26\nstd for x86_64-unknown-linux-gnu: 173.10 MB / 173.10 MB [===============================================================================================================================================================] 100.00 % 7.57 MB/s\nuninstalling nightly-2019-08-26\nuninstalling nightly-2019-08-26\nchecking nightly-2019-08-12\nstd for x86_64-unknown-linux-gnu: 169.94 MB / 169.94 MB [===============================================================================================================================================================] 100.00 % 6.52 MB/s\nuninstalling nightly-2019-08-12\nverifying the start of the range does not reproduce the regression\nstd for x86_64-unknown-linux-gnu: 169.94 MB / 169.94 MB [===============================================================================================================================================================] 100.00 % 8.02 MB/s\nuninstalling nightly-2019-08-12\nuninstalling nightly-2019-08-12\ntested nightly-2019-08-12, got No\nconfirmed the start of the range does not reproduce the regression\nverifying the end of the range reproduces the regression\nstd for x86_64-unknown-linux-gnu: 173.10 MB / 173.10 MB [===============================================================================================================================================================] 100.00 % 7.91 MB/s\nuninstalling nightly-2019-08-26\nuninstalling nightly-2019-08-26\ntested nightly-2019-08-26, got Yes\nconfirmed the end of the range reproduces the regression\nstd for x86_64-unknown-linux-gnu: 173.53 MB / 173.53 MB [===============================================================================================================================================================] 100.00 % 6.65 MB/s\nuninstalling nightly-2019-08-19\nuninstalling nightly-2019-08-19\ntested nightly-2019-08-19, got No\nstd for x86_64-unknown-linux-gnu: 173.78 MB / 173.78 MB [===============================================================================================================================================================] 100.00 % 7.55 MB/s\nuninstalling nightly-2019-08-22\nuninstalling nightly-2019-08-22\ntested nightly-2019-08-22, got Yes\nstd for x86_64-unknown-linux-gnu: 173.91 MB / 173.91 MB [===============================================================================================================================================================] 100.00 % 1.21 MB/s\nuninstalling nightly-2019-08-20\nuninstalling nightly-2019-08-20\ntested nightly-2019-08-20, got No\nstd for x86_64-unknown-linux-gnu: 173.65 MB / 173.65 MB [===============================================================================================================================================================] 100.00 % 7.55 MB/s\nuninstalling nightly-2019-08-21\nuninstalling nightly-2019-08-21\ntested nightly-2019-08-21, got Yes\nsearched toolchains nightly-2019-08-12 through nightly-2019-08-26\nregression in nightly-2019-08-21\n[santiago@galago cargo-bisect-sample2 (master)]$\n</pre></div>",
        "id": 179080761,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572031367
    },
    {
        "content": "<p>it nows catches the regression and does not jump over the \"correct\" nightlies</p>",
        "id": 179080784,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572031389
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[santiago@galago cargo-bisect-sample2 (master)]$ ../cargo-bisect-rustc/target/debug/cargo-bisect-rustc                                                                                                                                 [7/835]\nchecking nightly-2019-10-16 from the currently installed default nightly toolchain as the last failure\nchecking nightly-2019-10-14\nstd for x86_64-unknown-linux-gnu: 17.88 MB / 17.88 MB [=================================================================================================================================================================] 100.00 % 8.29 MB/s\nuninstalling nightly-2019-10-14\nchecking nightly-2019-10-12\nstd for x86_64-unknown-linux-gnu: 17.36 MB / 17.36 MB [=================================================================================================================================================================] 100.00 % 7.50 MB/s\nuninstalling nightly-2019-10-12\nchecking nightly-2019-10-10\nstd for x86_64-unknown-linux-gnu: 177.63 MB / 177.63 MB [===============================================================================================================================================================] 100.00 % 7.72 MB/s\nuninstalling nightly-2019-10-10\nchecking nightly-2019-10-08\nstd for x86_64-unknown-linux-gnu: 176.71 MB / 176.71 MB [===============================================================================================================================================================] 100.00 % 8.05 MB/s\nuninstalling nightly-2019-10-08\nchecking nightly-2019-10-01\nstd for x86_64-unknown-linux-gnu: 172.77 MB / 172.77 MB [===============================================================================================================================================================] 100.00 % 7.78 MB/s\nuninstalling nightly-2019-10-01\nchecking nightly-2019-09-24\nstd for x86_64-unknown-linux-gnu: 175.85 MB / 175.85 MB [===============================================================================================================================================================] 100.00 % 7.97 MB/s\nuninstalling nightly-2019-09-24\nchecking nightly-2019-09-17\nuninstalling nightly-2019-09-17\nchecking nightly-2019-09-16\nstd for x86_64-unknown-linux-gnu: 175.97 MB / 175.97 MB [===============================================================================================================================================================] 100.00 % 7.45 MB/s\nuninstalling nightly-2019-09-16\nchecking nightly-2019-09-10\nstd for x86_64-unknown-linux-gnu: 174.98 MB / 174.98 MB [===============================================================================================================================================================] 100.00 % 6.61 MB/s\nuninstalling nightly-2019-09-10\nchecking nightly-2019-09-03\nstd for x86_64-unknown-linux-gnu: 175.47 MB / 175.47 MB [===============================================================================================================================================================] 100.00 % 7.06 MB/s\nuninstalling nightly-2019-09-03\nchecking nightly-2019-08-27\nstd for x86_64-unknown-linux-gnu: 174.36 MB / 174.36 MB [===============================================================================================================================================================] 100.00 % 7.50 MB/s\nuninstalling nightly-2019-08-27\nchecking nightly-2019-08-13\nstd for x86_64-unknown-linux-gnu: 173.10 MB / 173.10 MB [===============================================================================================================================================================] 100.00 % 7.28 MB/s\nuninstalling nightly-2019-08-13\nverifying the start of the range does not reproduce the regression\nstd for x86_64-unknown-linux-gnu: 173.10 MB / 173.10 MB [===============================================================================================================================================================] 100.00 % 8.25 MB/s\nuninstalling nightly-2019-08-13\ntested nightly-2019-08-13, got No\nconfirmed the start of the range does not reproduce the regression\nverifying the end of the range reproduces the regression\nstd for x86_64-unknown-linux-gnu: 174.36 MB / 174.36 MB [===============================================================================================================================================================] 100.00 % 8.21 MB/s\nuninstalling nightly-2019-08-27\ntested nightly-2019-08-27, got Yes\nconfirmed the end of the range reproduces the regression\nstd for x86_64-unknown-linux-gnu: 173.91 MB / 173.91 MB [===============================================================================================================================================================] 100.00 % 7.72 MB/s\nuninstalling nightly-2019-08-20\ntested nightly-2019-08-20, got No\nstd for x86_64-unknown-linux-gnu: 173.88 MB / 173.88 MB [===============================================================================================================================================================] 100.00 % 7.44 MB/s\nuninstalling nightly-2019-08-23\ntested nightly-2019-08-23, got Yes\nstd for x86_64-unknown-linux-gnu: 173.65 MB / 173.65 MB [===============================================================================================================================================================] 100.00 % 7.66 MB/s\nuninstalling nightly-2019-08-21\ntested nightly-2019-08-21, got Yes\nsearched toolchains nightly-2019-08-13 through nightly-2019-08-27\nregression in nightly-2019-08-21\n[santiago@galago cargo-bisect-sample2 (master)]$\n</pre></div>",
        "id": 179090161,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572038437
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> a bit cleaner :)</p>",
        "id": 179090165,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572038444
    },
    {
        "content": "<p>one thing I've actually wanted to suggest -- not sure how feasible it is -- but to give some sort of idea of \"what we tested\" and maybe even a \"what we know\" throughout the process</p>",
        "id": 179090280,
        "sender_full_name": "simulacrum",
        "timestamp": 1572038513
    },
    {
        "content": "<p>not sure how useful that'd be</p>",
        "id": 179090296,
        "sender_full_name": "simulacrum",
        "timestamp": 1572038520
    },
    {
        "content": "<p>I sometimes feel like the tool is very much a black box which is not great</p>",
        "id": 179090410,
        "sender_full_name": "simulacrum",
        "timestamp": 1572038531
    },
    {
        "content": "<p>I also wonder if renaming it might make sense -- we're not really bisecting in the common case</p>",
        "id": 179090422,
        "sender_full_name": "simulacrum",
        "timestamp": 1572038548
    },
    {
        "content": "<p>even if I think about it as bisection :)</p>",
        "id": 179090431,
        "sender_full_name": "simulacrum",
        "timestamp": 1572038557
    },
    {
        "content": "<p><code>cargo-rustc-regression</code>?</p>",
        "id": 179090614,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572038773
    },
    {
        "content": "<p>something like that, yeah</p>",
        "id": 179090654,
        "sender_full_name": "simulacrum",
        "timestamp": 1572038830
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> from me, do you agree with the naming?</p>",
        "id": 179090669,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572038853
    },
    {
        "content": "<p>any other better idea?</p>",
        "id": 179090678,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1572038863
    },
    {
        "content": "<p>Seems fine. Might be good to ask broader feedback, maybe someone has better ideas. I'm not <em>too</em> happy with it, though I think it's already pretty good</p>",
        "id": 179090934,
        "sender_full_name": "simulacrum",
        "timestamp": 1572039079
    },
    {
        "content": "<p>maybe something like \"bug finder\" could work</p>",
        "id": 179090944,
        "sender_full_name": "simulacrum",
        "timestamp": 1572039094
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 179093623,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1572041663
    }
]