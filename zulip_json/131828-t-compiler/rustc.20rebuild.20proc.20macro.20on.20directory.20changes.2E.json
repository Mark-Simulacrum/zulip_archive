[
    {
        "content": "<p>Hey, I have a procedural macro that reads a user's directory at compile time, and I was wondering how I would ensure that rustc rebuilds the procedural macro in the users code whenever that directory changes? Having <code>include_str!</code> would work for changes to existing files, but I'd also like it to be rebuilt when new files or directories are added.</p>",
        "id": 200537843,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1591879056
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/71858\">https://github.com/rust-lang/rust/pull/71858</a> seems very relevant</p>",
        "id": 200540062,
        "sender_full_name": "nagisa",
        "timestamp": 1591880288
    },
    {
        "content": "<p>though not exactly what you need.</p>",
        "id": 200540079,
        "sender_full_name": "nagisa",
        "timestamp": 1591880299
    },
    {
        "content": "<p>tracking changes in directory contents however is not something that can be easily achieved even with cargo.</p>",
        "id": 200540307,
        "sender_full_name": "nagisa",
        "timestamp": 1591880410
    },
    {
        "content": "<p>There is a longish discussion about this at <a href=\"https://internals.rust-lang.org/t/let-proc-macros-pass-information-to-the-compiler/8350\">https://internals.rust-lang.org/t/let-proc-macros-pass-information-to-the-compiler/8350</a> with some mentions of workarounds.</p>",
        "id": 200562107,
        "sender_full_name": "Eric Huss",
        "timestamp": 1591890116
    }
]