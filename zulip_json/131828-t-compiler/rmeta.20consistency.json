[
    {
        "content": "<p>hi, I'm working on build reproducibility and building a crate on different machines but with otherwise identical dependency trees, source code, etc. the rmeta files from the two crates differ in that all the item addresses in the file seem to be off by 2. how do i figure out what the source of the inconsistency is? having read through librustc_metadata i haven't figured out an easy way to do that.</p>",
        "id": 206105766,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596691023
    },
    {
        "content": "<p>Can you post a link to the repository?</p>",
        "id": 206118408,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596704648
    },
    {
        "content": "<p>sadly i can't, it's a private repo (that isn't owned by me). are there any resources that will let me inspect the contents of an rmeta file without reverse-engineering the stuff in librustc_metadata?</p>",
        "id": 206166179,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"328006\">@Jude Taylor</span> Your best bet would be to modify this function in a local build of rustc: <a href=\"https://github.com/rust-lang/rust/blob/c15bae53b5c40db2682211836f892a5a44065e10/src/librustc_metadata/rmeta/decoder.rs#L585-L593\">https://github.com/rust-lang/rust/blob/c15bae53b5c40db2682211836f892a5a44065e10/src/librustc_metadata/rmeta/decoder.rs#L585-L593</a></p>",
        "id": 206166459,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732434
    },
    {
        "content": "<p>and print out additional information</p>",
        "id": 206166489,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732447
    },
    {
        "content": "<p>you can then use <code>rustc -Z ls /path/to/your_file.rmeta</code></p>",
        "id": 206166529,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732467
    },
    {
        "content": "<p>oh, i didn't know about the ls option!</p>",
        "id": 206166560,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732481
    },
    {
        "content": "<p>it currently just prints dependencies</p>",
        "id": 206166636,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732501
    },
    {
        "content": "<p>it gives me \"entered unreachable code\" when i try to run it in the shell</p>",
        "id": 206166672,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732520
    },
    {
        "content": "<p>without building a new rustc or anything, just with <code>rustc -Z ls lib1.rmeta</code></p>",
        "id": 206166691,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732529
    },
    {
        "content": "<p>hmm</p>",
        "id": 206166706,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732536
    },
    {
        "content": "<p>are you sure you're using the same rustc that you built the rmeta with?</p>",
        "id": 206166722,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732547
    },
    {
        "content": "<p>the rmeta format changes frequently</p>",
        "id": 206166746,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732557
    },
    {
        "content": "<p>oh, no, i'm not sure</p>",
        "id": 206166758,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732563
    },
    {
        "content": "<p>but i built the rmeta file with a stable compiler</p>",
        "id": 206166767,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732567
    },
    {
        "content": "<p>that won't work, then</p>",
        "id": 206166795,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732584
    },
    {
        "content": "<p>so i used rustup to get the closest nightly release to 1.43.0 stable that i could</p>",
        "id": 206166799,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732585
    },
    {
        "content": "<p>but if i build it locally it will either work or i can just goto the site of the panic directly and figure out why it's happening</p>",
        "id": 206166887,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732621
    },
    {
        "content": "<p>I would recommend matching the rustc versions exactly</p>",
        "id": 206166890,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732622
    },
    {
        "content": "<p>which is at the very least a lead</p>",
        "id": 206166894,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732624
    },
    {
        "content": "<p>you can do RUSTC_BOOTSTRAP=1 on the stable compiler to get the -Z flag to work</p>",
        "id": 206166918,
        "sender_full_name": "simulacrum",
        "timestamp": 1596732637
    },
    {
        "content": "<p>oh</p>",
        "id": 206166924,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732640
    },
    {
        "content": "<p>(obviously, don't do this in prod, all stability bets are off with this flag)</p>",
        "id": 206166946,
        "sender_full_name": "simulacrum",
        "timestamp": 1596732655
    },
    {
        "content": "<p>cool</p>",
        "id": 206166983,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732678
    },
    {
        "content": "<p>okay well to get more debug output i have to build rustc on my own anyway, so it doesn't matter</p>",
        "id": 206167006,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732690
    },
    {
        "content": "<p>but that did work</p>",
        "id": 206167024,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732700
    },
    {
        "content": "<p>thanks</p>",
        "id": 206167028,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732702
    },
    {
        "content": "<p>What did you mean when you said \"the addresses seem to be off by 2\"?</p>",
        "id": 206167058,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732715
    },
    {
        "content": "<p>how were you inspecting the rmeta file?</p>",
        "id": 206167120,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732733
    },
    {
        "content": "<p>so i read the start of librustc_metadata/decoder or <a href=\"http://mod.rs\">mod.rs</a> whichever one has the documentation in it</p>",
        "id": 206167122,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732734
    },
    {
        "content": "<p>and it says</p>",
        "id": 206167131,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732740
    },
    {
        "content": "<p><code>Metadata header [...] is followed by the position of the CrateRoot, which is encoded as a 32-bit big-endian unsigned integer.</code></p>",
        "id": 206167176,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732769
    },
    {
        "content": "<p>and when looking at a hexdump of the two files, the position of the CrateRoot differs by 2</p>",
        "id": 206167198,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732782
    },
    {
        "content": "<p>i can actually see in hexdump where the inconsistency between the two files starts, but it's in the middle of a ton of binary data that i do not recognize whatsoever so it's not very helpful</p>",
        "id": 206167264,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732818
    },
    {
        "content": "<p>more specifically, CrateRoot in lib1.rmeta starts at <code>0x000a54e0</code> and in lib2.rmeta starts at <code>0x000a54e2</code></p>",
        "id": 206167398,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732875
    },
    {
        "content": "<p>are you building a library or a binary?</p>",
        "id": 206167454,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732905
    },
    {
        "content": "<p>lib</p>",
        "id": 206167468,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732913
    },
    {
        "content": "<p>if you notice any differences in the final object, that could give you a starting place</p>",
        "id": 206167491,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732917
    },
    {
        "content": "<p>yeah i guess it could</p>",
        "id": 206167523,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732929
    },
    {
        "content": "<p>Is there any difference between the binary data before the <code>CrateRoot</code> except for one being 2 bytes longer?</p>",
        "id": 206167569,
        "sender_full_name": "bjorn3",
        "timestamp": 1596732957
    },
    {
        "content": "<p>yeah, quite a lot</p>",
        "id": 206167627,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732965
    },
    {
        "content": "<p>i can put up a gist with a snippet of the hexdumps actually</p>",
        "id": 206167642,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596732978
    },
    {
        "content": "<p>Is there any chance you could get permission to share the repository, or try to minimize it to something that you could share?</p>",
        "id": 206167674,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1596732995
    },
    {
        "content": "<p>i know that would make it easier :P but this code is very very deep in a large dependency tree</p>",
        "id": 206167703,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596733011
    },
    {
        "content": "<p>i'll see what i can do</p>",
        "id": 206167710,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596733015
    },
    {
        "content": "<p>so, I identified the problem. it turns out that the textual output of every proc-macro invocation is added to the hash of a crate</p>",
        "id": 206208299,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596755330
    },
    {
        "content": "<p>and the crate uses the <code>askama</code> crate which is some kind of html template code generator thing</p>",
        "id": 206208317,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596755347
    },
    {
        "content": "<p>and it uses <code>include_bytes!(path/to/file)</code> to make up for proc-macros not being able to mark dependent files</p>",
        "id": 206208332,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596755361
    },
    {
        "content": "<p>and that file path is different between the two different builds</p>",
        "id": 206208346,
        "sender_full_name": "Jude Taylor",
        "timestamp": 1596755374
    }
]