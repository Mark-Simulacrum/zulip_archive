[
    {
        "content": "<p>IIRC, <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> wanted libcore to require <code>#![feature(my_feature)]</code> when a library feature <code>my_feature</code> is used even if it's defined in libcore itself (that would be helpful for things like eliminating <code>mem::uninitialized</code> or something like that).</p>",
        "id": 168668380,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561110610
    },
    {
        "content": "<p>That sounded very reasonable and I tried it today.<br>\nThe switch itself is trivial, but doing that naively gives more noise than signal.<br>\nThe two primary problems are:<br>\n- Derives on unstable types and impls for unstable types<br>\n- Imports/reexports of unstable names</p>",
        "id": 168668496,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561110795
    },
    {
        "content": "<p>So, this needs some notion of \"<em>really</em> used\" excluding impls and imports, with feature gates being required only for really used entities.</p>",
        "id": 168668617,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561110925
    },
    {
        "content": "<p>The current list of libcore's own features used by libcore (noisy variant):</p>\n<div class=\"codehilite\"><pre><span></span>#![feature(c_variadic)]\n#![feature(coerce_unsized)]\n#![feature(core_intrinsics)]\n#![feature(core_panic)]\n#![feature(core_private_bignum)]\n#![feature(core_private_diy_float)]\n#![feature(dec2flt)]\n#![feature(dispatch_from_dyn)]\n#![feature(duration_float)]\n#![feature(exact_size_is_empty)]\n#![feature(fixed_size_array)]\n#![feature(flt2dec)]\n#![feature(fmt_internals)]\n#![feature(fn_traits)]\n#![feature(generator_trait)]\n#![feature(hashmap_internals)]\n#![feature(int_error_matching)]\n#![feature(panic_internals)]\n#![feature(pattern)]\n#![feature(ptr_internals)]\n#![feature(raw)]\n#![feature(receiver_trait)]\n#![feature(renamed_spin_loop)]\n#![feature(slice_from_raw_parts)]\n#![feature(slice_index_methods)]\n#![feature(slice_internals)]\n#![feature(stdimd_internal)]\n#![feature(stdsimd)]\n#![feature(step_trait)]\n#![feature(str_internals)]\n#![feature(trusted_len)]\n#![feature(try_trait)]\n#![feature(unicode_internals)]\n#![feature(unicode_version)]\n#![feature(unsize)]\n</pre></div>",
        "id": 168668706,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1561111036
    }
]