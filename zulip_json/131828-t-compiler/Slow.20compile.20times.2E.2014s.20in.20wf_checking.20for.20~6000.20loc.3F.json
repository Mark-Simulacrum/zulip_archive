[
    {
        "content": "<p>Hey all. I was going to open an issue but I figured I'd ask here first. The crate <code>glow</code> (<a href=\"https://github.com/grovesNL/glow\">https://github.com/grovesNL/glow</a>)  isn't very complicated (it's a bunch of extern functions and ~2200 lines of functions mostly just wrapping the externs), but for some reason it's spending a bunch of time in \"wf_checking\" as reported by <code>-Z time-passes</code>.  13.176 seconds in <code>wf_checking</code>  14.858 seconds total.</p>\n<p>Is this issue worthy? Anyone know what's up here?</p>",
        "id": 206310932,
        "sender_full_name": "Ian Kettlewell",
        "timestamp": 1596835224
    },
    {
        "content": "<p>Well it's not 2200 lines, it's 9700. That should still build instantly though.</p>",
        "id": 206311516,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596835607
    },
    {
        "content": "<p>so yeah, definitely issue worthy, but I recall seeing this crate in one before, so maybe there already is an issue that fits?</p>",
        "id": 206311818,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596835826
    },
    {
        "content": "<p>Ah yeah, I meant the the functions for just the native platform are ~2200 locs. The rest is for the web platforms and a bunch of externs and constants. The web platforms would not be built for the mentioned timings.</p>",
        "id": 206311826,
        "sender_full_name": "Ian Kettlewell",
        "timestamp": 1596835831
    },
    {
        "content": "<p><code>check_trait_item_well_formed</code> is the query taking most time</p>",
        "id": 206311832,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596835834
    },
    {
        "content": "<p>oh, because the <code>HasContext</code> trait is <em>massive</em></p>",
        "id": 206311941,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596835909
    },
    {
        "content": "<p>Is it that massive? It's like 830 lines (I keep bringing up lines, but of course that's not a perfect metric)</p>",
        "id": 206312215,
        "sender_full_name": "Ian Kettlewell",
        "timestamp": 1596836081
    },
    {
        "content": "<p>I did a quick search for issues mentioning <code>glow</code> and didn't spot any on <a href=\"https://github.com/rust-lang/rust\">https://github.com/rust-lang/rust</a></p>",
        "id": 206312388,
        "sender_full_name": "Ian Kettlewell",
        "timestamp": 1596836216
    },
    {
        "content": "<p>Created a <a href=\"/user_uploads/4715/wbxkodTXARMPsM-r9gQ_Gztc/flamegraph.svg\">flamegraph.svg</a></p>",
        "id": 206312675,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596836436
    },
    {
        "content": "<p>It would presumably be part of other issues about wf checking being slow</p>",
        "id": 206312691,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596836455
    },
    {
        "content": "<p>hmm.. I can't find an existing issue anywhere pertaining to <code>glow</code> and <code>wf_checking</code>.</p>",
        "id": 206313030,
        "sender_full_name": "Ian Kettlewell",
        "timestamp": 1596836777
    },
    {
        "content": "<p>yes, please file one, this is silly</p>",
        "id": 206314627,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596837875
    },
    {
        "content": "<p>wf checking one associated type requires proving <em>all</em> predicates on <em>all</em> associated types -&gt; <code>O(n²)</code></p>",
        "id": 206314686,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596837926
    },
    {
        "content": "<p>That seems not good. It sounds like you have better context to describe the issue. <br>\nWould you mind opening it instead and tagging me (@kettle11 on github)?</p>",
        "id": 206315020,
        "sender_full_name": "Ian Kettlewell",
        "timestamp": 1596838170
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Slow.20compile.20times.2E.2014s.20in.20wf_checking.20for.20~6000.20loc.3F/near/206314686\">said</a>:</p>\n<blockquote>\n<p>wf checking one associated type requires proving <em>all</em> predicates on <em>all</em> associated types -&gt; <code>O(n²)</code></p>\n</blockquote>\n<p>This should be fixed by <a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a></p>",
        "id": 206315553,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1596838566
    },
    {
        "content": "<p>oh this actually looks like <a href=\"https://github.com/rust-lang/rust/issues/65510\">https://github.com/rust-lang/rust/issues/65510</a></p>",
        "id": 206315617,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596838626
    },
    {
        "content": "<p>nice!</p>",
        "id": 206315620,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596838629
    },
    {
        "content": "<p>Thanks for the help <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> and <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> . It's reassuring to see there's already a known issue and a potential fix in the works.</p>",
        "id": 206317360,
        "sender_full_name": "Ian Kettlewell",
        "timestamp": 1596840208
    }
]