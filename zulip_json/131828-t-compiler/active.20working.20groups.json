[
    {
        "content": "<p>Hi, after today's weekly meeting I was checking exactly which working groups are active and which aren't</p>",
        "id": 191169154,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584648840
    },
    {
        "content": "<p>and also checking the rotation</p>",
        "id": 191169198,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584648848
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Status</th>\n<th>Short Description</th>\n<th>Zulip Stream</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://working-groups/async-await/\" target=\"_blank\" title=\"http://working-groups/async-await/\">Async-await Implementation</a></td>\n<td>Active</td>\n<td>Implementing async-await</td>\n<td>[#t-compiler/wg-async-await][async-await_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/llvm/\" target=\"_blank\" title=\"http://working-groups/llvm/\">LLVM</a></td>\n<td>Incubating</td>\n<td>Working with LLVM upstream to represent Rust in its development</td>\n<td>[#t-compiler/wg-llvm][llvm_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/self-profile/\" target=\"_blank\" title=\"http://working-groups/self-profile/\">Self-Profile</a></td>\n<td>Active</td>\n<td>Improving the <code>-Z self-profile</code> feature</td>\n<td>[#t-compiler/wg-self-profile][self-profile_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/rfc-2229/\" target=\"_blank\" title=\"http://working-groups/rfc-2229/\">RFC 2229</a></td>\n<td>Paused until 2020</td>\n<td>Make a closure capture individual fields of the variable rather than the entire composite variable</td>\n<td>[#t-compiler/wg-rfc-2229][rfc-2229-stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/rls-2.0/\" target=\"_blank\" title=\"http://working-groups/rls-2.0/\">RLS 2.0</a></td>\n<td>Active</td>\n<td>Experimenting with a new compiler architecture tailored for IDEs</td>\n<td>[#t-compiler/wg-rls2.0][rls20_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/meta/\" target=\"_blank\" title=\"http://working-groups/meta/\">Meta</a></td>\n<td>Active</td>\n<td>How compiler team organizes itself</td>\n<td>[#t-compiler/wg-meta][meta_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/nll/\" target=\"_blank\" title=\"http://working-groups/nll/\">Non-Lexical Lifetimes (NLL)</a></td>\n<td>Winding down</td>\n<td>Implementing non-lexical lifetimes</td>\n<td>[#t-compiler/wg-nll][nll_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/traits/\" target=\"_blank\" title=\"http://working-groups/traits/\">Traits</a></td>\n<td>Active</td>\n<td>Improving the trait-system design + implementation</td>\n<td>[#t-compiler/wg-traits][traits_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/parallel-rustc/\" target=\"_blank\" title=\"http://working-groups/parallel-rustc/\">Parallel-rustc</a></td>\n<td>Active</td>\n<td>Making parallel compilation the default for rustc</td>\n<td>[#t-compiler/wg-parallel-rustc][parallel-rustc_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/mir-opt/\" target=\"_blank\" title=\"http://working-groups/mir-opt/\">MIR Optimizations</a></td>\n<td>Active</td>\n<td>Write MIR optimizations and refactor the MIR to be more optimizable.</td>\n<td>[#t-compiler/wg-mir-opt][mir-opt-stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/pipelining/\" target=\"_blank\" title=\"http://working-groups/pipelining/\">Rustc pipelining</a></td>\n<td>Active</td>\n<td>Enable Cargo to invoke rustc in a pipelined fashion, speeding up crate graph compiles.</td>\n<td>[#t-compiler/wg-pipelining][pipelining-stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/polonius/\" target=\"_blank\" title=\"http://working-groups/polonius/\">Polonius</a></td>\n<td>Active</td>\n<td>Exploring the integration of the \"NLL 2.0\"-like [\"Polonius analysis\"][Polonius] into rustc</td>\n<td>[#t-compiler/wg-polonius][polonius_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/learning/\" target=\"_blank\" title=\"http://working-groups/learning/\">Learning</a></td>\n<td>Active</td>\n<td>Make the compiler easier to learn by ensuring that rustc-dev-guide and api docs are \"complete\"</td>\n<td>[#t-compiler/wg-learning][learning_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/diagnostics/\" target=\"_blank\" title=\"http://working-groups/diagnostics/\">Diagnostics</a></td>\n<td>Active</td>\n<td>Use <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> crates for diagnostics rendering and make emitting diagnostics nicer.</td>\n<td>[#t-compiler/wg-diagnostics][diagnostics_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/polymorphization/\" target=\"_blank\" title=\"http://working-groups/polymorphization/\">Polymorphization</a></td>\n<td>Active</td>\n<td>Implement an analysis to detect when functions can remain polymorphic during code generation.</td>\n<td>[#t-compiler/wg-polymorphization][polymorphization_stream]</td>\n</tr>\n<tr>\n<td><a href=\"http://working-groups/pgo/\" target=\"_blank\" title=\"http://working-groups/pgo/\">Profile-Guided Optimization</a></td>\n<td>Retired</td>\n<td>Implementing profile-guided optimization for rustc</td>\n<td>[#t-compiler/wg-profile-guided-optimization][pgo_stream]</td>\n</tr>\n</tbody>\n</table>",
        "id": 191169246,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584648886
    },
    {
        "content": "<p>is taht information accurate?</p>",
        "id": 191169260,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584648899
    },
    {
        "content": "<p>and also <a href=\"https://github.com/rust-lang/compiler-team/blob/b3fb6f89ac8bb1c3a526360b17bbc2f95d6a064d/layouts/shortcodes/checkin-schedule.html#L20-L24\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/b3fb6f89ac8bb1c3a526360b17bbc2f95d6a064d/layouts/shortcodes/checkin-schedule.html#L20-L24\">https://github.com/rust-lang/compiler-team/blob/b3fb6f89ac8bb1c3a526360b17bbc2f95d6a064d/layouts/shortcodes/checkin-schedule.html#L20-L24</a>, that needs an update too</p>",
        "id": 191169488,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584649024
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> maybe you have more information that I do</p>",
        "id": 191169518,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584649046
    },
    {
        "content": "<p>I already know from today's meeting that Rustc pipelining is retired</p>",
        "id": 191169536,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584649060
    },
    {
        "content": "<p>I guess my question is a about LLVM is incubating?, RFC 2229 should say on pause until 2020, Polymorphization is active right?</p>",
        "id": 191169660,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584649124
    },
    {
        "content": "<p>and then we need to change Rustc pipelining to retired</p>",
        "id": 191169678,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584649133
    },
    {
        "content": "<p>opened a PR <a href=\"https://github.com/rust-lang/compiler-team/pull/262\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/pull/262\">https://github.com/rust-lang/compiler-team/pull/262</a></p>",
        "id": 191171233,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1584649974
    },
    {
        "content": "<p>LLVM is in permanent incubation state <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> Techincally we were semi-active at some point, less so nowadays, but I never got past all the red tape properly setting up the formal workgroup other than writing a small doc on that repo.</p>",
        "id": 191171331,
        "sender_full_name": "nagisa",
        "timestamp": 1584650033
    },
    {
        "content": "<p>I'm working a lot on pattern matching features, and matthewjasper has helped out a ~bit~ substantially with or-patterns lowering</p>",
        "id": 191172226,
        "sender_full_name": "centril",
        "timestamp": 1584650459
    },
    {
        "content": "<p>maybe that counts as wg-nll, but probably not?</p>",
        "id": 191172301,
        "sender_full_name": "centril",
        "timestamp": 1584650492
    },
    {
        "content": "<p>there's some work regarding leak check and stuff, but I suppose that's wg-traits now</p>",
        "id": 191172382,
        "sender_full_name": "centril",
        "timestamp": 1584650519
    },
    {
        "content": "<p>so yeah, nll is winding down</p>",
        "id": 191172431,
        "sender_full_name": "centril",
        "timestamp": 1584650525
    },
    {
        "content": "<p>wg-diagnostics is sorta not really a working group in the sense that it meets and stuff</p>",
        "id": 191172578,
        "sender_full_name": "centril",
        "timestamp": 1584650597
    },
    {
        "content": "<p>its mostly just a loose collection of folks who sometimes hack on diagnostics</p>",
        "id": 191172601,
        "sender_full_name": "centril",
        "timestamp": 1584650610
    },
    {
        "content": "<p>we're not doing any projects as a group</p>",
        "id": 191172668,
        "sender_full_name": "centril",
        "timestamp": 1584650641
    },
    {
        "content": "<p>I think it seems clear that both LLVM + Diagnostics are more \"areas of the compiler\" than working groups -- and I think that's fine! We should remove them from the list but we should just have this as a concept, I think. Honestly, NLL and probably traits would be good additions to the list. Maybe it'd be useful to try and breakdown a list of \"compiler areas\" where we could have dedicated chats? This seems related to expert map. It'd be nice to discuss things in terms of those \"broad areas\" (and perhaps have a map of \"these directories correspond to that area\")</p>",
        "id": 191659210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1585077217
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <a href=\"https://github.com/rust-lang/compiler-team/issues/264\" title=\"https://github.com/rust-lang/compiler-team/issues/264\">https://github.com/rust-lang/compiler-team/issues/264</a></p>",
        "id": 191761892,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1585149696
    }
]