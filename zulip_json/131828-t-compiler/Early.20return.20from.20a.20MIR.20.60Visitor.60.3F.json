[
    {
        "content": "<p>There's <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/qualify_min_const_fn.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/qualify_min_const_fn.rs\">multiple</a> <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/qualify_consts.rs\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/transform/qualify_consts.rs\">places</a> in const qualification and validation where Visitor is basically reimplemented only so it can eagerly return a result.</p>\n<p>I wonder if we could add an associated return type to <code>Visitor</code> that must be either something implementing <code>Try</code> or an empty tuple so that code like this can take advantage of the existing structural recursion in <code>Visitor</code>? Existing visitors would not have to change except maybe to specify <code>type BreakVal = ()</code> (I'm not sure if associated type defaults are usable).</p>",
        "id": 178320748,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1571254029
    },
    {
        "content": "<p>associated type defaults are not usable, because every implementor that changes it will have to reimplement all methods (even those with default bodies)</p>",
        "id": 178375327,
        "sender_full_name": "oli",
        "timestamp": 1571314939
    },
    {
        "content": "<p>It could just be a plain generic</p>",
        "id": 178384997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571321756
    },
    {
        "content": "<p>I'd like to review the MIR visitor somewhat, in light of the changes that <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> was making; I'm wondering if there's a less general structure that might work better</p>",
        "id": 178385055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571321778
    },
    {
        "content": "<p>I did a proof-of-concept in <a href=\"https://github.com/rust-lang/rust/issues/65572\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65572\">#65572</a></p>",
        "id": 178510568,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1571432638
    },
    {
        "content": "<p>One of the reasons I'm interested in this is that it would be useful in <a href=\"https://github.com/rust-lang/rust/issues/63812\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63812\">#63812</a> (<span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> )</p>",
        "id": 178512540,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1571434624
    },
    {
        "content": "<p>Also, I haven't looked at the perf implications of this. If the queue is ever empty I'll trigger a perf run (seems unlikely). I think I'd need to add <code>#[inline]</code> to the <code>Try</code> impl for <code>()</code> first.</p>",
        "id": 178513048,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1571435111
    }
]