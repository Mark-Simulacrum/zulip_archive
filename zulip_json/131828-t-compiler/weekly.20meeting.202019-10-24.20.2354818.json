[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; the triage meeting will be starting in 4 hours 33 minutes</p>",
        "id": 178934700,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571909261
    },
    {
        "content": "<p>I have a conflict this afternoon, so <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> will be running the meeting today, and I will be doing the pre-triage a little earlier than usual. In addition, since I won't be able to attend the meeting, I may put a few more notes here than usual as I do the pre-triage.</p>",
        "id": 178934775,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571909336
    },
    {
        "content": "<p>I will be doing <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-10-24.20.2354818/near/178934793\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-10-24.20.2354818/near/178934793\">pre-triage in a parallel topic</a></p>",
        "id": 178934804,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571909384
    },
    {
        "content": "<p>For this weeks WG-checkins, we have scheduled NLL and Parallel Rustc</p>",
        "id": 178934875,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571909423
    },
    {
        "content": "<p>I suspect NLL has nothing to report, although skimming over <a href=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/status/near/178175560\" title=\"#narrow/stream/122657-t-compiler.2Fwg-nll/topic/status/near/178175560\">NLL stream</a> I am reminded that we (I?) need to write up a blog post about migration being \"complete\", all the way to stable...</p>",
        "id": 178935031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571909560
    },
    {
        "content": "<p>for Parallel Rustc: hey <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> , would you like to give an update at the end of today's meeting (in a little over 5 hours I suppose...)</p>",
        "id": 178935083,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571909632
    },
    {
        "content": "<p><span aria-label=\"exclamation\" class=\"emoji emoji-2757\" role=\"img\" title=\"exclamation\">:exclamation:</span>  regarding issue \"Non-'static lifetime inferred for return position impl Trait (fixed in beta)\" <a href=\"https://github.com/rust-lang/rust/issues/65582\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65582\">#65582</a>, it would be good to survey the cases that are affected. I wrote some comments on the issue. The main point is that there are a number of long-standing issues here, and it seems like PR <a href=\"https://github.com/rust-lang/rust/issues/62849\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62849\">#62849</a> might be saying \"okay lets just error in this cases rather than commit to some fix that we might dislike in the long-term.\" I don't object to that on its face, but I want to make sure everyone's aware of it.</p>",
        "id": 178938012,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571912170
    },
    {
        "content": "<p>(because it seems to me like we explicitly decided <em>not</em> to disallow this in the past...)</p>",
        "id": 178938030,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571912196
    },
    {
        "content": "<p><span aria-label=\"exclamation\" class=\"emoji emoji-2757\" role=\"img\" title=\"exclamation\">:exclamation:</span> regarding issue \"Rust 1.38 regressions weren't fully triaged\" <a href=\"https://github.com/rust-lang/rust/issues/65577\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65577\">#65577</a> : during discussion of this nomination, it would be good if we could dig into why the triage of the regressions wasn't completed before the release. (Was it a process failure, or was it due to lack of resources aka ran out of time)</p>",
        "id": 178938696,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571912952
    },
    {
        "content": "<p><span aria-label=\"exclamation\" class=\"emoji emoji-2757\" role=\"img\" title=\"exclamation\">:exclamation:</span> I left this one nominated: \"Reduce the places where <code>stable</code> annotations are needed\" <a href=\"https://github.com/rust-lang/rust/issues/65515\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65515\">#65515</a></p>",
        "id": 178943212,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917424
    },
    {
        "content": "<p>it sort of left me speechless</p>",
        "id": 178943219,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917433
    },
    {
        "content": "<p>next, beta-regressions without priority labells</p>",
        "id": 178943303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917489
    },
    {
        "content": "<p>there are <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-beta++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc\">four</a></p>",
        "id": 178943323,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917513
    },
    {
        "content": "<p>beta regr 1/4: \"non-empty glob statement regression 1.39\" <a href=\"https://github.com/rust-lang/rust/issues/65523\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65523\">#65523</a></p>",
        "id": 178943340,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917525
    },
    {
        "content": "<p>triage: P-high</p>",
        "id": 178943346,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917537
    },
    {
        "content": "<p>beta regr 2/4: \"array impls &lt;= 32 1.39 regression\" <a href=\"https://github.com/rust-lang/rust/issues/65522\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65522\">#65522</a></p>",
        "id": 178943416,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917580
    },
    {
        "content": "<p>comments say possibly not a true regression</p>",
        "id": 178943453,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917618
    },
    {
        "content": "<p>triage: P-high (to get to the bottom of what the bug is)</p>",
        "id": 178943465,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917628
    },
    {
        "content": "<p>beta regr 3/4: \"derive structs (inert attribute?) regression 1.39\" <a href=\"https://github.com/rust-lang/rust/issues/65521\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65521\">#65521</a></p>",
        "id": 178943496,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917666
    },
    {
        "content": "<p>seems like this was anticipated fallout from PR <a href=\"https://github.com/rust-lang/rust/issues/63468\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63468\">#63468</a></p>",
        "id": 178943561,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917691
    },
    {
        "content": "<p>triage: P-high, I-nominated for team to decide whether to close with no deprecation lint.</p>",
        "id": 178943627,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917772
    },
    {
        "content": "<p>beta regr 4/4: \"bindgen changes in 1.39\" <a href=\"https://github.com/rust-lang/rust/issues/65520\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65520\">#65520</a></p>",
        "id": 178943716,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917836
    },
    {
        "content": "<p>triage: P-high to get to bottom of what happened.</p>",
        "id": 178943726,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917845
    },
    {
        "content": "<p>next nightly regressions</p>",
        "id": 178943758,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917883
    },
    {
        "content": "<p>we have <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-infra+-label%3AT-rustdoc\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3Aregression-from-stable-to-nightly++-label%3AP-high++-label%3AP-medium+-label%3AP-low+-label%3AT-infra+-label%3AT-rustdoc\">one</a></p>",
        "id": 178943763,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917891
    },
    {
        "content": "<p>nightly regr: \"Compiler doesn't work when using Docker\" <a href=\"https://github.com/rust-lang/rust/issues/65662\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65662\">#65662</a></p>",
        "id": 178943772,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917905
    },
    {
        "content": "<p>looks like the T-libs team is taking care of this</p>",
        "id": 178943825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917926
    },
    {
        "content": "<p><del>(I must have followed the wrong link for the regressions list...)</del> no, its the right link; just doesn't filter T-libs tagged out</p>",
        "id": 178943838,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571917942
    },
    {
        "content": "<p>I have to go now</p>",
        "id": 178943892,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571918020
    },
    {
        "content": "<p>(we have 32 open P-high issues. I'll try to walk over them either later tonight, or tomorrow)</p>",
        "id": 178943941,
        "sender_full_name": "pnkfelix",
        "timestamp": 1571918043
    },
    {
        "content": "<p>Meeting’s in 50 mins</p>",
        "id": 178949642,
        "sender_full_name": "nagisa",
        "timestamp": 1571922551
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I rubbed something wrong into my eye and I don’t think it will appreciate me trying to look at a bright screen for an hour. Can you please take over?</p>",
        "id": 178953893,
        "sender_full_name": "nagisa",
        "timestamp": 1571925384
    },
    {
        "content": "<p>can do <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 178953931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925413
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 178953935,
        "sender_full_name": "nagisa",
        "timestamp": 1571925418
    },
    {
        "content": "<p>Dear <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, triage meeting is <strong>now</strong>!</p>\n<p>To begin, please leave any</p>\n<h1>Announcements</h1>",
        "id": 178954551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925751
    },
    {
        "content": "<p>Today we will have WG check-ins from:</p>\n<ul>\n<li>NLL</li>\n<li>Parallel-rustc (cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> -- you around?)</li>\n</ul>",
        "id": 178954592,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925780
    },
    {
        "content": "<p>I am, yes -- not sure how much of an update I can give but a quick summary probably</p>",
        "id": 178954624,
        "sender_full_name": "simulacrum",
        "timestamp": 1571925796
    },
    {
        "content": "<p>We _just_ landed the split out of rustc-dev today</p>",
        "id": 178954664,
        "sender_full_name": "simulacrum",
        "timestamp": 1571925819
    },
    {
        "content": "<p>I think it'll stick this time so if you're testing with nightly you'll need to add the rustc-dev component if you want <code>extern crate rustc;</code> and such to work</p>",
        "id": 178954754,
        "sender_full_name": "simulacrum",
        "timestamp": 1571925844
    },
    {
        "content": "<p>(Not sure if <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> is here, they didn't answer <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s ping earlier, so I'm assuming not)</p>",
        "id": 178954783,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925858
    },
    {
        "content": "<ul>\n<li>Tomorrow is the <strong>planning meeting</strong>, so last chance to open meeting proposals</li>\n</ul>",
        "id": 178954878,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925914
    },
    {
        "content": "<p>OK, I guess we'll get going.</p>",
        "id": 178954929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925941
    },
    {
        "content": "<p>Heh, I'm trying to remember the order <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> normally uses</p>",
        "id": 178954988,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925963
    },
    {
        "content": "<p>/me looks at <a href=\"https://github.com/rust-lang/rust/issues/54818\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54818\">#54818</a></p>",
        "id": 178955011,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571925976
    },
    {
        "content": "<blockquote>\n<p>next, beta-regressions without priority labells</p>\n</blockquote>\n<p>let's start with these</p>",
        "id": 178955045,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926002
    },
    {
        "content": "<blockquote>\n<p>beta regr 1/4: \"non-empty glob statement regression 1.39\" <a href=\"https://github.com/rust-lang/rust/issues/65523\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65523\">#65523</a></p>\n</blockquote>",
        "id": 178955058,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> writes:</p>\n<blockquote>\n<p>Similarly to <a href=\"https://github.com/rust-lang/rust/issues/65090\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65090\">#65090</a> this is very likely a combination of the recent changes in expansion order (<a href=\"https://github.com/rust-lang/rust/issues/63248\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63248\">#63248</a>, <a href=\"https://github.com/rust-lang/rust/issues/63867\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63867\">#63867</a>) and globs not fetching macro expanded names properly (<a href=\"https://github.com/rust-lang/rust/issues/56593\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56593\">#56593</a>).</p>\n<p>In this case, however, the fix may be to turn the \"non-empty glob must import something\" error into a lint, we have an issue about that - <a href=\"https://github.com/rust-lang/rust/issues/62334\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62334\">#62334</a>.</p>\n</blockquote>",
        "id": 178955115,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926040
    },
    {
        "content": "<p>I guess this seems P-high</p>",
        "id": 178955215,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926084
    },
    {
        "content": "<blockquote>\n<p>beta regr 2/4: \"array impls &lt;= 32 1.39 regression\" <a href=\"https://github.com/rust-lang/rust/issues/65522\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65522\">#65522</a></p>\n</blockquote>",
        "id": 178955468,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926202
    },
    {
        "content": "<p>Seems like this needs someone to try and get to the bottom of it</p>",
        "id": 178955516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926224
    },
    {
        "content": "<p>(OK, I guess <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> already categorized these as P-high, I see, I was confused)</p>",
        "id": 178955531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926231
    },
    {
        "content": "<p>I'll just highlight them for now</p>",
        "id": 178955538,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926236
    },
    {
        "content": "<blockquote>\n<p>beta regr 3/4: \"derive structs (inert attribute?) regression 1.39\" <a href=\"https://github.com/rust-lang/rust/issues/65521\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65521\">#65521</a></p>\n</blockquote>\n<p>this was anticipated, the question is to decide whether we want a future compat warning</p>",
        "id": 178955600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926266
    },
    {
        "content": "<blockquote>\n<p>beta regr 4/4: \"bindgen changes in 1.39\" <a href=\"https://github.com/rust-lang/rust/issues/65520\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65520\">#65520</a></p>\n</blockquote>\n<p>needs investigation</p>",
        "id": 178955615,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926275
    },
    {
        "content": "<p>let's try to decide about <a href=\"https://github.com/rust-lang/rust/issues/65521\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65521\">#65521</a> --</p>",
        "id": 178955715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> writes:</p>\n<blockquote>\n<p>The regressions do not seem numerous or serious enough to warrant that work imo.</p>\n</blockquote>\n<p>there are four I think</p>\n<ul>\n<li><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/reg/derive_less-0.2.0/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/reg/derive_less-0.2.0/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/reg/derive_less-0.2.0/log.txt</a></li>\n<li><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/reg/rs621-0.5.0-alpha2/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/reg/rs621-0.5.0-alpha2/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/reg/rs621-0.5.0-alpha2/log.txt</a></li>\n<li><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/gh/andrei-cacio.distil-wasm/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/gh/andrei-cacio.distil-wasm/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.39-1/beta-2019-09-28/gh/andrei-cacio.distil-wasm/log.txt</a></li>\n<li><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.39-rustdoc-1/beta-2019-09-28/gh/nasso.get621/log.txt\" target=\"_blank\" title=\"https://crater-reports.s3.amazonaws.com/beta-1.39-rustdoc-1/beta-2019-09-28/gh/nasso.get621/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.39-rustdoc-1/beta-2019-09-28/gh/nasso.get621/log.txt</a></li>\n</ul>",
        "id": 178955764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> wrote:</p>\n<blockquote>\n<p>This is a consequence of <a href=\"https://github.com/rust-lang/rust/issues/63468\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63468\">#63468</a>.<br>\nAttributes on fields, variants and other places are now properly passed through name resolution.<br>\nThis means we now detect attempts to apply derives to them, while previously they were just ignored.</p>\n<p>The new behavior is correct, but we can make a deprecation lint for this if necessary.</p>\n</blockquote>",
        "id": 178955798,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926375
    },
    {
        "content": "<p>what's an \"inert attribute\"?</p>",
        "id": 178955893,
        "sender_full_name": "mw",
        "timestamp": 1571926440
    },
    {
        "content": "<p>I think it means \"an attribute that doesn't have any meaning\"</p>",
        "id": 178955968,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926462
    },
    {
        "content": "<p>beside that I think it's fine that code that's obviously wrong breaks now</p>",
        "id": 178955999,
        "sender_full_name": "mw",
        "timestamp": 1571926483
    },
    {
        "content": "<p>I'm seeing errors for cases like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#[derive(Foo)]</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Bar</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"cp\">#[derive(...)]</span><span class=\"w\"> </span><span class=\"n\">f</span>: <span class=\"kt\">u32</span> <span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 178956013,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926492
    },
    {
        "content": "<p>previously, <code>derive</code> was kind of ignored here; now it's getting an error</p>",
        "id": 178956029,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926505
    },
    {
        "content": "<p>ok, let's leave it</p>",
        "id": 178956086,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926533
    },
    {
        "content": "<p>Sorry, I was skimming the examples above. I think I agree the scope of the fallout is acceptable.</p>",
        "id": 178956107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926558
    },
    {
        "content": "<p>ok, beta backports</p>",
        "id": 178956213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926613
    },
    {
        "content": "<h1>Avoid ICE when adjusting bad self ty <a href=\"https://github.com/rust-lang/rust/issues/65755\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65755\">#65755</a></h1>",
        "id": 178956308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926653
    },
    {
        "content": "<p>(Seems harmless to me, i'm going to move to the next)</p>",
        "id": 178956430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926704
    },
    {
        "content": "<p>(but feel free to object)</p>",
        "id": 178956441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926710
    },
    {
        "content": "<h1>Avoid ICE when checking <code>Destination</code> of <code>break</code> inside a closure <a href=\"https://github.com/rust-lang/rust/issues/65518\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65518\">#65518</a></h1>",
        "id": 178956457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926720
    },
    {
        "content": "<p>(same)</p>",
        "id": 178956524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926758
    },
    {
        "content": "<h1>save-analysis: Nest tables when processing impl block definitions <a href=\"https://github.com/rust-lang/rust/issues/65511\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65511\">#65511</a></h1>",
        "id": 178956551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926771
    },
    {
        "content": "<p>(I believe <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> said this was the cause of a number of problems for RLS users)</p>",
        "id": 178956654,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926804
    },
    {
        "content": "<p>OK, no votes, but I'm going to go ahead and mark all as accepted unless any appear soon :)</p>",
        "id": 178956709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926835
    },
    {
        "content": "<p>Very good, all accepted. :)</p>",
        "id": 178956808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926900
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/65755\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65755\">#65755</a> seems fine but hasn't landed yet</p>",
        "id": 178956814,
        "sender_full_name": "mw",
        "timestamp": 1571926902
    },
    {
        "content": "<p>it's also nominated for a stable backport?</p>",
        "id": 178956884,
        "sender_full_name": "mw",
        "timestamp": 1571926924
    },
    {
        "content": "<p>yeah, I forgot what the procedure is on that (stable backpor)</p>",
        "id": 178956997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571926993
    },
    {
        "content": "<p>also, I found one backport nomination that had no team assigned:</p>\n<h1>save-analysis: Don't ICE when resolving qualified type paths in struct members <a href=\"https://github.com/rust-lang/rust/issues/65353\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65353\">#65353</a></h1>",
        "id": 178957017,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927008
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/65755\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65755\">#65755</a> seems fine but hasn't landed yet</p>\n</blockquote>\n<p>as far as that goes, I figured since it was small etc seemed ok to \"pre-approve\"</p>",
        "id": 178957053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927032
    },
    {
        "content": "<p>Those are some great fixes by <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> :)</p>",
        "id": 178957161,
        "sender_full_name": "mw",
        "timestamp": 1571927082
    },
    {
        "content": "<p>OK -- I'm not sure what to do about stable backports, I think we're just supposed to evaluate the \"technical merits\" thereof</p>",
        "id": 178957224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927124
    },
    {
        "content": "<p>there are two cases, both ones we already saw</p>",
        "id": 178957235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927134
    },
    {
        "content": "<p>I'm fine with accepting <a href=\"https://github.com/rust-lang/rust/issues/65755\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65755\">#65755</a>, just want to mention that it hadn't landed yet</p>",
        "id": 178957258,
        "sender_full_name": "mw",
        "timestamp": 1571927150
    },
    {
        "content": "<ul>\n<li>Avoid ICE when checking <code>Destination</code> of <code>break</code> inside a closure <a href=\"https://github.com/rust-lang/rust/issues/65518\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65518\">#65518</a></li>\n<li>Avoid ICE when adjusting bad self ty <a href=\"https://github.com/rust-lang/rust/issues/65755\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65755\">#65755</a></li>\n</ul>",
        "id": 178957264,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927154
    },
    {
        "content": "<p>(in both cases I would be comfortable with a stable backport from a technical perspective)</p>",
        "id": 178957353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927186
    },
    {
        "content": "<p>OK, i'm going to comment to that effect and move on</p>",
        "id": 178957424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927236
    },
    {
        "content": "<h1><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\">S-waiting-on-our-team</a></h1>",
        "id": 178957533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927286
    },
    {
        "content": "<p>I believe both are old-ish -- I'll remove the tag from <a href=\"https://github.com/rust-lang/rust/issues/65408\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65408\">#65408</a>, and I think <a href=\"https://github.com/rust-lang/rust/issues/59064\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59064\">#59064</a> (HIR indexing) is a pending design meeting proposal</p>",
        "id": 178957578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927311
    },
    {
        "content": "<h1>Nominated issues (<a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AI-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AI-nominated+label%3AT-compiler\">link</a>)</h1>",
        "id": 178957641,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> kind of highlighted some of these above</p>",
        "id": 178957653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927365
    },
    {
        "content": "<p>[Quoting…]</p>",
        "id": 178957790,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927411
    },
    {
        "content": "<blockquote>\n<p><span aria-label=\"exclamation\" class=\"emoji emoji-2757\" role=\"img\" title=\"exclamation\">:exclamation:</span>  regarding issue \"Non-'static lifetime inferred for return position impl Trait (fixed in beta)\" <a href=\"https://github.com/rust-lang/rust/issues/65582\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65582\">#65582</a>, it would be good to survey the cases that are affected. I wrote some comments on the issue. The main point is that there are a number of long-standing issues here, and it seems like PR <a href=\"https://github.com/rust-lang/rust/issues/62849\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/62849\">#62849</a> might be saying \"okay lets just error in this cases rather than commit to some fix that we might dislike in the long-term.\" I don't object to that on its face, but I want to make sure everyone's aware of it.</p>\n</blockquote>",
        "id": 178957800,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927422
    },
    {
        "content": "<p>So, what happened here is that in 1.39 we fixed some old behavior that was quite questionable (in PR <a href=\"https://github.com/rust-lang/rust/pull/62849\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/62849\">https://github.com/rust-lang/rust/pull/62849</a>)</p>",
        "id": 178957893,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927491
    },
    {
        "content": "<p>We did a crater run</p>",
        "id": 178957928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927513
    },
    {
        "content": "<p>I think there's really no action needed here</p>",
        "id": 178957981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927526
    },
    {
        "content": "<p>though I'm not clear on much fallout we wound up observing later</p>",
        "id": 178958007,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927552
    },
    {
        "content": "<p>skimming <a href=\"https://github.com/rust-lang/rust/issues/64962\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64962\">#64962</a>, I don't see any, but <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> reported that they observed it?</p>",
        "id": 178958085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927602
    },
    {
        "content": "<p>anyway, I guess I'll move on</p>",
        "id": 178958090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927606
    },
    {
        "content": "<h1>Rust 1.38 regressions weren't fully triaged <a href=\"https://github.com/rust-lang/rust/issues/65577\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65577\">#65577</a></h1>",
        "id": 178958235,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927680
    },
    {
        "content": "<p>It looks like <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> did a lot of work here, but there remain 5 cases untriaged?</p>",
        "id": 178958277,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927710
    },
    {
        "content": "<p>(ugh, that's too ugly, removing)</p>",
        "id": 178958290,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927724
    },
    {
        "content": "<p>seems like we need someone to do some of that investigation? <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you know whether it occurred? I'm a bit unclear</p>",
        "id": 178958336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927757
    },
    {
        "content": "<p>I am unclear as well how much investigation has occurred</p>",
        "id": 178958406,
        "sender_full_name": "simulacrum",
        "timestamp": 1571927776
    },
    {
        "content": "<p>I also don't think this is super high priority given stable/stable regressions at this point</p>",
        "id": 178958415,
        "sender_full_name": "simulacrum",
        "timestamp": 1571927793
    },
    {
        "content": "<p>but would be good to dig in, probably</p>",
        "id": 178958426,
        "sender_full_name": "simulacrum",
        "timestamp": 1571927800
    },
    {
        "content": "<p>OK, I see, these are regressions from 1.38 that got overlooked, and we're now focused on 1.39 (currently in beta)</p>",
        "id": 178958456,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927822
    },
    {
        "content": "<p>does seem like we should investigate</p>",
        "id": 178958506,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927871
    },
    {
        "content": "<p>let's look at other nominated issues, maybe we'll find someone for that</p>",
        "id": 178958588,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927909
    },
    {
        "content": "<h1>ICE when using 'impl Trait' with an infinity recursive function <a href=\"https://github.com/rust-lang/rust/issues/65561\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65561\">#65561</a></h1>",
        "id": 178958599,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927920
    },
    {
        "content": "<p>tagged as P-high by <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 178958601,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927923
    },
    {
        "content": "<p>first step is probably to bisect</p>",
        "id": 178958639,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927948
    },
    {
        "content": "<p>(speaking of which, that's probably another ICE-breakers like group we could create: compiler bisectors)</p>",
        "id": 178958687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571927992
    },
    {
        "content": "<p>anybody volunteer to run a cargo-bisect?</p>",
        "id": 178958775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928028
    },
    {
        "content": "<p>it emits a proper warning message before ICEing, so it's possible we can just do an early return somewhere to avoid this</p>",
        "id": 178958776,
        "sender_full_name": "varkor",
        "timestamp": 1571928029
    },
    {
        "content": "<p>I may have the setup somewhere</p>",
        "id": 178958777,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928032
    },
    {
        "content": "<blockquote>\n<p>it emits a proper warning message before ICEing, so it's possible we can just do an early return somewhere to avoid this</p>\n</blockquote>\n<p>or delay_span_bug cal</p>",
        "id": 178958781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928039
    },
    {
        "content": "<p>likely an easy fix</p>",
        "id": 178958789,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928045
    },
    {
        "content": "<p>or, it emits a <em>warning</em>, sorry</p>",
        "id": 178958800,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928059
    },
    {
        "content": "<p>well, it's a warning</p>",
        "id": 178958807,
        "sender_full_name": "varkor",
        "timestamp": 1571928063
    },
    {
        "content": "<p>I could look into this?</p>",
        "id": 178958819,
        "sender_full_name": "davidtwco",
        "timestamp": 1571928074
    },
    {
        "content": "<p>that'd be great <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> :)</p>",
        "id": 178958825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928081
    },
    {
        "content": "<h1>Reduce the places where <code>stable</code> annotations are needed <a href=\"https://github.com/rust-lang/rust/issues/65515\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65515\">#65515</a></h1>",
        "id": 178958837,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928089
    },
    {
        "content": "<p>I'm going to un-nominate, I think that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> mostly wanted to draw attention to this.</p>",
        "id": 178958848,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928100
    },
    {
        "content": "<p>Oh, I see, the other thing is that</p>\n<blockquote>\n<p>This is normally not an issue, but with the new output in <a href=\"https://github.com/rust-lang/rust/issues/65421\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65421\">#65421</a> we will start showing this code to end users in errors, and it'd be nice if we could eliminate unnecessary boilerplate.</p>\n</blockquote>",
        "id": 178958923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928134
    },
    {
        "content": "<p>people will start to see the \"under the covers\" source  code :)</p>",
        "id": 178958938,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928146
    },
    {
        "content": "<h1>linking of libtest failed <a href=\"https://github.com/rust-lang/rust/issues/64872\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64872\">#64872</a></h1>",
        "id": 178959050,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928232
    },
    {
        "content": "<p>remains nominated, but looks like maybe it doesn't have to be</p>",
        "id": 178959055,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928238
    },
    {
        "content": "<p>yeah, I think <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> just needs to confirm the fix</p>",
        "id": 178959131,
        "sender_full_name": "mw",
        "timestamp": 1571928268
    },
    {
        "content": "<blockquote>\n<p>skimming <a href=\"https://github.com/rust-lang/rust/issues/64962\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64962\">#64962</a>, I don't see any, but <span class=\"user-mention silent\" data-user-id=\"118594\">ecstatic-morse</span> reported that they observed it?</p>\n</blockquote>\n<p>Breakage occurred <code>socketto-0.2</code>. Two projects in <code>crater</code> depended on this version.</p>",
        "id": 178959132,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1571928268
    },
    {
        "content": "<p>OK, that's all the nominated issues, beta backports, etc</p>",
        "id": 178959134,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928270
    },
    {
        "content": "<p>once there is a PR</p>",
        "id": 178959139,
        "sender_full_name": "mw",
        "timestamp": 1571928272
    },
    {
        "content": "<p>there are also <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AI-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AI-nominated+label%3AT-compiler\">2 nominated PRs</a></p>",
        "id": 178959211,
        "sender_full_name": "varkor",
        "timestamp": 1571928320
    },
    {
        "content": "<p>ok, thanks</p>",
        "id": 178959224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928331
    },
    {
        "content": "<h1>Allow foreign exceptions to unwind through Rust code <a href=\"https://github.com/rust-lang/rust/issues/65646\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65646\">#65646</a></h1>",
        "id": 178959231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928338
    },
    {
        "content": "<p>this is under discussion also in the <a class=\"stream\" data-stream-id=\"210922\" href=\"/#narrow/stream/210922-wg-ffi-unwind\">#wg-ffi-unwind</a> channel (which I need to catch up on)</p>",
        "id": 178959244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928349
    },
    {
        "content": "<p>I think the role for us in this team is more technical review, if anything</p>",
        "id": 178959266,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928362
    },
    {
        "content": "<p>though if you have opinions about what our behavior ought to be here, please go to <a class=\"stream\" data-stream-id=\"210922\" href=\"/#narrow/stream/210922-wg-ffi-unwind\">#wg-ffi-unwind</a> !</p>",
        "id": 178959334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928382
    },
    {
        "content": "<h1>Lint ignored <code>#[inline]</code> on function prototypes <a href=\"https://github.com/rust-lang/rust/issues/65294\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/65294\">#65294</a></h1>",
        "id": 178959338,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928384
    },
    {
        "content": "<p>This can be a breaking change in some cases: </p>\n<blockquote>\n<p>As a consequence, foreign items, impl items and trait items now have their attributes checked, which could cause some code to no longer compile (it was previously erroneously ignored).</p>\n</blockquote>",
        "id": 178959368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928403
    },
    {
        "content": "<p>In particular, <span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> <a href=\"https://github.com/rust-lang/rust/pull/65294#issuecomment-545418714\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65294#issuecomment-545418714\">notes</a> that this affects the old <code>bitflags</code> crate</p>",
        "id": 178959407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> do you want to discuss this here?</p>",
        "id": 178959463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928464
    },
    {
        "content": "<p>I guess the question is: how hard to error here, and do we want to have some sort of special treatment whereby we don't error for cases injected from dependencies?</p>",
        "id": 178959569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928503
    },
    {
        "content": "<p>the question I had was whether it was reasonable to emit an error that acted like a lint, in that it was ignored when compiling external crates</p>",
        "id": 178959575,
        "sender_full_name": "varkor",
        "timestamp": 1571928504
    },
    {
        "content": "<p>because as far as I know, there's not precedent for that now</p>",
        "id": 178959591,
        "sender_full_name": "varkor",
        "timestamp": 1571928520
    },
    {
        "content": "<p>I'm tempted to say we should make this a future-compatibility warning (or just a warn-by-default lint)</p>",
        "id": 178959625,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928545
    },
    {
        "content": "<p>(and improve our tooling around this, as has been discussed, to help prod users into upgrading)</p>",
        "id": 178959658,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928574
    },
    {
        "content": "<p>the confusing thing about making it a warning is that the same error will be emitted as a proper error and as a warning depending on where the attribute occurs</p>",
        "id": 178959673,
        "sender_full_name": "varkor",
        "timestamp": 1571928585
    },
    {
        "content": "<p>in general, is there a strong concern about <code>#[inline]</code> being used in wrong places? like, do we expect to want to give it some semantics that would be inappropriate?</p>",
        "id": 178959689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928597
    },
    {
        "content": "<p>and also that it could then be <code>allow</code>ed</p>",
        "id": 178959757,
        "sender_full_name": "varkor",
        "timestamp": 1571928608
    },
    {
        "content": "<p>I think there's concern that it may look like it has an effect on function prototypes, but is ignored</p>",
        "id": 178959841,
        "sender_full_name": "varkor",
        "timestamp": 1571928672
    },
    {
        "content": "<p>we could special case just <code>inline</code> on consts specifically, essentially special-casing bitflags</p>",
        "id": 178959863,
        "sender_full_name": "varkor",
        "timestamp": 1571928687
    },
    {
        "content": "<p>yeah, that seems...not that serious to me</p>",
        "id": 178959870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928690
    },
    {
        "content": "<p>esp. if we are giving warnings</p>",
        "id": 178959889,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928701
    },
    {
        "content": "<p>I guess I just don't feel strongly motivated to add a lot of special casing</p>",
        "id": 178959899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928714
    },
    {
        "content": "<p>well, we either special case items in traits and extern, or we special case consts in traits and extern</p>",
        "id": 178959998,
        "sender_full_name": "varkor",
        "timestamp": 1571928754
    },
    {
        "content": "<p>items used anywhere else already throw the error</p>",
        "id": 178960044,
        "sender_full_name": "varkor",
        "timestamp": 1571928777
    },
    {
        "content": "<p>but I'll just make those cases a future-incompatibility lint <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 178960070,
        "sender_full_name": "varkor",
        "timestamp": 1571928800
    },
    {
        "content": "<p>ok</p>",
        "id": 178960076,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928805
    },
    {
        "content": "<p>sounds good</p>",
        "id": 178960082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928809
    },
    {
        "content": "<p>ok, we have a few minutes left, brief wg check-ins maybe?</p>",
        "id": 178960107,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928830
    },
    {
        "content": "<h1>NLL</h1>",
        "id": 178960111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928834
    },
    {
        "content": "<p>Not sure who to tag for this -- but the big news is the <del>next</del> uber-next release will see the first stable release without the HIR borrow checker</p>",
        "id": 178960178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928854
    },
    {
        "content": "<p>we need to do a blog post warning people about this</p>",
        "id": 178960183,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928859
    },
    {
        "content": "<p>I think at that point the NLL WG will basically disband</p>",
        "id": 178960213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928889
    },
    {
        "content": "<p>( but <a class=\"stream\" data-stream-id=\"186049\" href=\"/#narrow/stream/186049-t-compiler.2Fwg-polonius\">#t-compiler/wg-polonius</a> carries the torch! <span aria-label=\"runner\" class=\"emoji emoji-1f3c3\" role=\"img\" title=\"runner\">:runner:</span> )</p>",
        "id": 178960244,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928912
    },
    {
        "content": "<p>Any other notes on this? maybe cc <span class=\"user-mention\" data-user-id=\"126931\">@centril</span>, <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span>, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>? </p>\n<p>(I think I will try to get a 1st draft of blog post going, maybe hand it off to y'all for tips and further advice)</p>",
        "id": 178960284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928947
    },
    {
        "content": "<h1>wg-parallel-rustc</h1>",
        "id": 178960298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928957
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> you still around?</p>",
        "id": 178960343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571928965
    },
    {
        "content": "<p>next next release fwiw, 1.39 still has HIR IIRC</p>",
        "id": 178960349,
        "sender_full_name": "simulacrum",
        "timestamp": 1571928968
    },
    {
        "content": "<p>Yeah</p>",
        "id": 178960351,
        "sender_full_name": "simulacrum",
        "timestamp": 1571928970
    },
    {
        "content": "<p>So we've been going fairly slow but steady</p>",
        "id": 178960379,
        "sender_full_name": "simulacrum",
        "timestamp": 1571928992
    },
    {
        "content": "<p>We have regular triage meetings on Mondays (in compiler calendar if you're interested)</p>",
        "id": 178960416,
        "sender_full_name": "simulacrum",
        "timestamp": 1571929013
    },
    {
        "content": "<p>So far the general goal is to refactor/audit compiler locks and other parallel pieces, as well as to investigate improving performance.</p>",
        "id": 178960455,
        "sender_full_name": "simulacrum",
        "timestamp": 1571929036
    },
    {
        "content": "<p>(oh, that reminds me, I need to post video from the last meeting)</p>",
        "id": 178960483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929056
    },
    {
        "content": "<p>Our plan is to have the MVP be to do high-level parallelization in a few critical places</p>",
        "id": 178960489,
        "sender_full_name": "simulacrum",
        "timestamp": 1571929058
    },
    {
        "content": "<p>(LLVM -- already done, but we can do better; typeck, I believe; linting, etc)</p>",
        "id": 178960567,
        "sender_full_name": "simulacrum",
        "timestamp": 1571929094
    },
    {
        "content": "<p>I think that's all</p>",
        "id": 178960591,
        "sender_full_name": "simulacrum",
        "timestamp": 1571929114
    },
    {
        "content": "<p>it seems like we've determined that the use of locks is fairly ok. We've still got some cases that need to be looked at and cleaned-up and/or documented (<em>cough</em> <code>Session</code> <em>cough</em>), but overall not a huge problem.</p>",
        "id": 178960602,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929120
    },
    {
        "content": "<p>Not that this is that surprising :)</p>",
        "id": 178960613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929131
    },
    {
        "content": "<p>But the bigger concern is that the parallel performance isn't as good as we might like, and in particular the jobserver integration and timing for big cargo builds is not great, right? Thus it's not quite at the point we would like to justify the slowdown of adding locks</p>",
        "id": 178960651,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929167
    },
    {
        "content": "<p>(Thus we were investigating how things are working now and what experiments we might do to see what needs to be improved)</p>",
        "id": 178960683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929189
    },
    {
        "content": "<p>Ah, yes -- we're looking to investigate jobserver performance in particular as the current belief of the source of our problems, but we don't yet know if that's actually the problem :)</p>",
        "id": 178960775,
        "sender_full_name": "simulacrum",
        "timestamp": 1571929233
    },
    {
        "content": "<p>freakin' jobserver :)</p>",
        "id": 178960826,
        "sender_full_name": "mw",
        "timestamp": 1571929268
    },
    {
        "content": "<p><a href=\"https://youtu.be/lVjW0Nw8N_g\" target=\"_blank\" title=\"https://youtu.be/lVjW0Nw8N_g\">video is uploading now</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"lVjW0Nw8N_g\" href=\"https://youtu.be/lVjW0Nw8N_g\" target=\"_blank\" title=\"https://youtu.be/lVjW0Nw8N_g\"><img src=\"https://i.ytimg.com/vi/lVjW0Nw8N_g/default.jpg\"></a></div>",
        "id": 178960840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929275
    },
    {
        "content": "<p>OK, I guess that is the end of our time here folks</p>",
        "id": 178960874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929292
    },
    {
        "content": "<h1>Fin</h1>",
        "id": 178960881,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571929294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I think the wg-nll stream should probably disband after the leak-check / migrate-mode and possibly <code>x @ Some(y)</code> things have been fixed</p>",
        "id": 178968854,
        "sender_full_name": "centril",
        "timestamp": 1571933762
    },
    {
        "content": "<p>so there's still a tad bit of work left</p>",
        "id": 178968915,
        "sender_full_name": "centril",
        "timestamp": 1571933780
    },
    {
        "content": "<p>Makes sense, though I think in practice that work is more taking place in / around <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a>. Anyway, not a big distinction.</p>",
        "id": 178978474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571939591
    },
    {
        "content": "<p>Fair point <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 178980915,
        "sender_full_name": "centril",
        "timestamp": 1571941059
    },
    {
        "content": "<p><code>x @ Some(y)</code> can probably be moved to the t-compiler stream</p>",
        "id": 178980996,
        "sender_full_name": "centril",
        "timestamp": 1571941094
    }
]