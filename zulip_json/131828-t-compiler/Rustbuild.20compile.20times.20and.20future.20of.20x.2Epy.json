[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> I notice you've recently been making a lot of PRs improving the compile times of rustbuild. I really appreciate the work, and lots of people are benefiting from it :) I do want to mention though that <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> has suggested a few times that we should eventually pre-compile rustbuild and download it as part of the <code>rust-dev</code> component. At that point the compile time will become less relevant because very few people will be recompiling it (only if they modify bootstrap).</p>\n<p>We should probably work out:</p>\n<ul>\n<li>How much effort it makes sense to invest in rustbuild compile times</li>\n<li>How soon on the horizon it is to pre-compile rustbuild - maybe this is something we can do after switching all logic except the platform triple + submodules out of x.py?</li>\n<li>How does downloading rustbuild interact with my work on removing logic from x.py? I've suggested on the tracking issue that <code>cargo run</code> would be the main entrypoint, but that wouldn't be possible if we're trying to download rustbuild ahead of time. If <code>cargo run</code> isn't the entrypoint, that reduces the scope of the work considerably (e.g. no need to deal with submodules), but IMO it also makes it less useful overall - as long as both python + rust are necessary no one <em>really</em> cares about whether the logic is in python or rust except for me and Mark, except to the extent it impacts compile times.</li>\n</ul>",
        "id": 276136813,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1647915886
    }
]