[
    {
        "content": "<p>Why do we have the comments in the <code>.rs</code> file (<code>//~ERROR ...</code>)? They are pretty annoying to change and they nullify the benefits of bless. They seem somewhat redundant to me. Am I missing something?</p>",
        "id": 189628149,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583265437
    },
    {
        "content": "<p>they ensure that we actually get errors where errors should be</p>",
        "id": 189629269,
        "sender_full_name": "RalfJ",
        "timestamp": 1583266081
    },
    {
        "content": "<p>when I write a compile-fail test that expects errors in 5 places, I want to be sure that someone dosnt use <code>--bless</code> on it until there is just 1 error left</p>",
        "id": 189629343,
        "sender_full_name": "RalfJ",
        "timestamp": 1583266114
    },
    {
        "content": "<p>sometimes I also want to be sure that from multiple things that could error in that line, I get a specific error</p>",
        "id": 189629370,
        "sender_full_name": "RalfJ",
        "timestamp": 1583266136
    },
    {
        "content": "<p>indeed, at some point we weren't requiring them for UI tests, and it was all too easy to overlook changes that were unexpected</p>",
        "id": 189631231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583267505
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> they aren't as annoying as they used to be, since they no longer have to carry as much of the diagnostic message for their utility. Many people now just leave just the error code on them.</p>",
        "id": 189654644,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583288133
    },
    {
        "content": "<p>(and leave the diagnostic details to the .stderr file)</p>",
        "id": 189654649,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583288156
    },
    {
        "content": "<p>It's not a good idea to use error codes in <code>//~ ERROR</code> comments, as error codes are not really stable or meaningful</p>",
        "id": 189655877,
        "sender_full_name": "centril",
        "timestamp": 1583289994
    },
    {
        "content": "<p>To be honest, I prefer to include messages (as you imply is better practice), since they are indeed self-documenting and thus inherently more meaningful</p>",
        "id": 189695742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583332196
    },
    {
        "content": "<p>but I don't understand the basis with which you say that error codes are not stable.</p>",
        "id": 189695811,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583332211
    },
    {
        "content": "<p>Error codes can be reused and whatnot; I don't think we have a rule that says \"once you've used an error code for something you may never reuse it\" -- but the main point is that they are not very meaningful when reading tests and whatnot</p>",
        "id": 189744025,
        "sender_full_name": "centril",
        "timestamp": 1583361932
    },
    {
        "content": "<p>if we had more semantic error codes instead of numbers I think the story might be different</p>",
        "id": 189744094,
        "sender_full_name": "centril",
        "timestamp": 1583361967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Hmm... so is it acceptable to truncate an existing test's comments? In particular, I have 97 failing tests on one of my branches because a word in an error changed (but it's still the same error).</p>",
        "id": 189751282,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583369189
    },
    {
        "content": "<p>Oh, whoops Zulip was hiding the rest of this thread... reading it now</p>",
        "id": 189751305,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583369219
    },
    {
        "content": "<p>Hmm... I see</p>",
        "id": 189751398,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583369348
    },
    {
        "content": "<p>What if we made compiletest only check that the string in the error appears somewhere in the error message? Then, we could write much short comments that are less likely to go stale (and the full .stderr records the whole message).</p>",
        "id": 189751502,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583369463
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> I think it's acceptable to not include the whole string, assuming it includes some important parts</p>",
        "id": 189751987,
        "sender_full_name": "centril",
        "timestamp": 1583370065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> Do you mean that that's possible today or that you would be ok with us making it that way? (I'm aware that compiletest allows a prefix of an error, but does it allow arbitrary substrings?)</p>",
        "id": 189752078,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583370136
    },
    {
        "content": "<p>IIRC it's possible today (but not an arbitrary substring :)</p>",
        "id": 189752082,
        "sender_full_name": "lqd",
        "timestamp": 1583370150
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> it's possible today to use a prefix</p>",
        "id": 189752084,
        "sender_full_name": "centril",
        "timestamp": 1583370151
    },
    {
        "content": "<p>I  feel a prefix is the right balance</p>",
        "id": 189752111,
        "sender_full_name": "centril",
        "timestamp": 1583370183
    },
    {
        "content": "<p>do you feel arbitrary substrings would be less likely to go stale than prefixes ?</p>",
        "id": 189752202,
        "sender_full_name": "lqd",
        "timestamp": 1583370294
    },
    {
        "content": "<p>(I assume it's not a question directed towards me)</p>",
        "id": 189752228,
        "sender_full_name": "centril",
        "timestamp": 1583370341
    },
    {
        "content": "<blockquote>\n<p>do you feel arbitrary substrings would be less likely to go stale than prefixes ?</p>\n</blockquote>\n<p>That's a great question</p>",
        "id": 189752240,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583370362
    },
    {
        "content": "<p>/me looks at my PR again</p>",
        "id": 189752286,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583370400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> indeed :) I don't mind prefixes either, but if arbitrary substrings somehow managed to be better, maybe it could be worthwhile; I'm not sure diagnostics changes happen more likely in the beginning rather than the rest of the message</p>",
        "id": 189752379,
        "sender_full_name": "lqd",
        "timestamp": 1583370508
    },
    {
        "content": "<p>perhaps we should have a length restriction on the substring</p>",
        "id": 189752396,
        "sender_full_name": "centril",
        "timestamp": 1583370538
    },
    {
        "content": "<p>e.g. the most recent PR where that happened to me was changes in the middle of the message</p>",
        "id": 189752397,
        "sender_full_name": "lqd",
        "timestamp": 1583370540
    },
    {
        "content": "<p>\"substring cannot be shorter than X characters\"</p>",
        "id": 189752404,
        "sender_full_name": "centril",
        "timestamp": 1583370550
    },
    {
        "content": "<p>Another option of course is to not check the actual sting in the comment. That is, we only check that the right kind of diagnostic is emitted there, and the rest of the comment is purely documentation</p>",
        "id": 189753563,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583372155
    },
    {
        "content": "<p>Looking at my PR again, I don't arbitrary substrings would really help, because in my case I was changing a key word in the error</p>",
        "id": 189753627,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583372201
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/131828-t-compiler/topic/ui.20test.20comments/near/189753563\" title=\"#narrow/stream/131828-t-compiler/topic/ui.20test.20comments/near/189753563\">said</a>:</p>\n<blockquote>\n<p>Another option of course is to not check the actual sting in the comment. That is, we only check that the right kind of diagnostic is emitted there, and the rest of the comment is purely documentation</p>\n</blockquote>\n<p>that works already I think? You can just specify <code>//~ ERROR</code> without any info</p>",
        "id": 189772817,
        "sender_full_name": "oli",
        "timestamp": 1583400261
    },
    {
        "content": "<p>(Please don't do that though)</p>",
        "id": 189776720,
        "sender_full_name": "centril",
        "timestamp": 1583403586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"126931\">centril</span> <a href=\"#narrow/stream/131828-t-compiler/topic/ui.20test.20comments/near/189744025\" title=\"#narrow/stream/131828-t-compiler/topic/ui.20test.20comments/near/189744025\">said</a>:</p>\n<blockquote>\n<p>Error codes can be reused and whatnot; I don't think we have a rule that says \"once you've used an error code for something you may never reuse it\" -- but the main point is that they are not very meaningful when reading tests and whatnot</p>\n</blockquote>\n<p>I think there was explicit discussion in the past that we did not want to reuse error codes. The main reasoning was that error codes are a common thing that comes up when one uses a search engine to try to better understand an error message.</p>",
        "id": 189799825,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583420516
    },
    {
        "content": "<p>my brief skims of my email chains and of internals.rlo posts did not bring up any evidence supporting my claim above, however.</p>",
        "id": 189799894,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583420545
    },
    {
        "content": "<p>anyway that is why I said I was confused by <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> 's statement that error codes were not stable. Because, to my mind, they are.</p>",
        "id": 189799962,
        "sender_full_name": "pnkfelix",
        "timestamp": 1583420595
    },
    {
        "content": "<p>We don't generally re-use error codes and, even if we did, I don't think it's likely to cause any real problems.</p>",
        "id": 189800301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420800
    },
    {
        "content": "<p>Personally I thikn substring would likely be ok.</p>",
        "id": 189800309,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420806
    },
    {
        "content": "<p>The ERROR lines are basically a heuristic to try and ensure that things don't change \"too much\" or in unexpected ways</p>",
        "id": 189800336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420830
    },
    {
        "content": "<p>I've sometimes wanted regex too :)</p>",
        "id": 189800356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420847
    },
    {
        "content": "<p>but anyway I <em>definitely</em> feel like that using some prefix is just fine, and I think I agree that <code>//~ ERROR</code> by itself is probably too little...</p>",
        "id": 189800379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420869
    },
    {
        "content": "<p>a \"distinctive substring\" seems fine though</p>",
        "id": 189800393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420879
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/ui.20test.20comments/near/189800301\" title=\"#narrow/stream/131828-t-compiler/topic/ui.20test.20comments/near/189800301\">said</a>:</p>\n<blockquote>\n<p>We don't generally re-use error codes and, even if we did, I don't think it's likely to cause any real problems.</p>\n</blockquote>\n<p>to elaborate: you'd have to (a) deprecate the ERROR code and (b) replace it with something semantically different and (c) have some test that unexpected creates this new error on the same line as before, all in one PR</p>",
        "id": 189800531,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420945
    },
    {
        "content": "<p>that said, I used to do the E123 codes, but I've started to avoid them because (as <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> wrote) they're less self documenting</p>",
        "id": 189800584,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1583420983
    },
    {
        "content": "<p>I think compiletest actually already does only substring checking:</p>\n<div class=\"codehilite\"><pre><span></span>// src/tools/compiletest/src/runtest.rs:1375\n                expected_errors.iter().enumerate().position(|(index, expected_error)| {\n                    !found[index]\n                        &amp;&amp; actual_error.line_num == expected_error.line_num\n                        &amp;&amp; (expected_error.kind.is_none()\n                            || actual_error.kind == expected_error.kind)\n                        &amp;&amp; actual_error.msg.contains(&amp;expected_error.msg) // &lt;------ substring of error message\n                });\n</pre></div>",
        "id": 189943577,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583535973
    },
    {
        "content": "<p>So if there is consensus, it seems that \"distinctive substring\" is the direction we want to go?</p>",
        "id": 189943618,
        "sender_full_name": "mark-i-m",
        "timestamp": 1583536012
    },
    {
        "content": "<p>I think that describes what I try to do, yes</p>",
        "id": 190007222,
        "sender_full_name": "RalfJ",
        "timestamp": 1583659757
    }
]