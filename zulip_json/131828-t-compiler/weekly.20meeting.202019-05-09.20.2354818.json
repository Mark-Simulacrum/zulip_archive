[
    {
        "content": "<p>Hello <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Triage meeting starting now. You can find the <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-05-09.20.2354818\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-05-09.20.2354818\">pre-triage topic</a> here -- mostly I assigned priorities to nominated things.</p>",
        "id": 165254845,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410499
    },
    {
        "content": "<p>Let me start by highlighting some issues for which we could use volunteers <span aria-label=\"hand\" class=\"emoji emoji-270b\" role=\"img\" title=\"hand\">:hand:</span> , or where I would like some feedback</p>",
        "id": 165254942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410536
    },
    {
        "content": "<ul>\n<li>Exponential compile-time and type_length_limit blowup when nesting closure wrappers <a href=\"https://github.com/rust-lang/rust/issues/54540\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54540\">#54540</a> </li>\n</ul>\n<p>I think that <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> had a prety specific proposal on this that seemed actionable. However, I can't find those comments right now. =) It's currently p-medium, but it's blocking a p-high regression that seems similar.</p>",
        "id": 165255002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410581
    },
    {
        "content": "<ul>\n<li>compiler panic \"randomly\" with incremental build <a href=\"https://github.com/rust-lang/rust/issues/60629\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60629\">#60629</a> </li>\n</ul>\n<p>This is an incremental panic that a few people have highlighted. It looks like it's \"close\" to have a clear reproduction, but not quite. It'd be awesome if somebody could try and make a clear reproduction (i.e., compile this, apply this patch, compile again).</p>",
        "id": 165255081,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410637
    },
    {
        "content": "<ul>\n<li>Compiler crash when dealing with Any and Ref <a href=\"https://github.com/rust-lang/rust/issues/60622\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60622\">#60622</a> </li>\n</ul>\n<p>A regression from 1.30 that <a href=\"https://github.com/rust-lang/rust/issues/60622#issuecomment-490317852\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60622#issuecomment-490317852\">@**centril** has helpfully reduced</a>. Looks like it is somewhere around HIR lowering or something? A bit hard to tell.</p>",
        "id": 165255222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410711
    },
    {
        "content": "<ul>\n<li>Regression: Typemap type mismatch in 1.34.0+ <a href=\"https://github.com/rust-lang/rust/issues/60375\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60375\">#60375</a> </li>\n</ul>\n<p>This causes crashes on windows and may be windows specific. Something in the runtime behavior of <code>TypeMap</code> seems to have changed. The work here would be to try and narrow down the problem.</p>",
        "id": 165255267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410753
    },
    {
        "content": "<p>OK, that's all I have in my notes, but there are also a large number of <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AP-high+label%3AT-compiler+no%3Aassignee\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AP-high+label%3AT-compiler+no%3Aassignee\">unassigned P-high issues</a>.</p>",
        "id": 165255345,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410784
    },
    {
        "content": "<p>Before we look at that, I wanted to start by looking at a beta/stable nomination</p>",
        "id": 165255377,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410815
    },
    {
        "content": "<blockquote>\n<p>save-analysis: Fix ICE when processing associated constant <a href=\"https://github.com/rust-lang/rust/issues/60649\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60649\">#60649</a></p>\n</blockquote>",
        "id": 165255407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410835
    },
    {
        "content": "<p>This is a PR by <span class=\"user-mention\" data-user-id=\"153740\">@Igor Matuszewski</span> that, I believe, seems to fix some important RLS regressions. I've not created a poll yet, I see there were some comments by <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>.</p>",
        "id": 165255443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410859
    },
    {
        "content": "<p>Actually, based on comments in the PR, I guess it's mostly 'beta nominated', since a point release is unlikely.</p>",
        "id": 165255535,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410915
    },
    {
        "content": "<p>/poll Should we backport <a href=\"https://github.com/rust-lang/rust/issues/60649\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60649\">#60649</a>?</p>",
        "id": 165255555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410931
    },
    {
        "content": "<p>(Do we have any mobile users for whom the poll will not show)</p>",
        "id": 165255580,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1557410950
    },
    {
        "content": "<p>I don't grok save_analysis and don't have time to dig in deeper as to why my ideas don't fit. The change fixes the panic and it's semi-clear to me why it does, so my comments are resolved</p>",
        "id": 165255582,
        "sender_full_name": "oli",
        "timestamp": 1557410951
    },
    {
        "content": "<p>feel free to use either emoji <em>or</em> poll</p>",
        "id": 165255598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410967
    },
    {
        "content": "<p>or whatever :)</p>",
        "id": 165255612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410976
    },
    {
        "content": "<p>it's just to get a rough sense anyway</p>",
        "id": 165255618,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557410983
    },
    {
        "content": "<p>OK, i'm going to mark that as beta-accepted</p>",
        "id": 165255702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411021
    },
    {
        "content": "<p>OK, so, let's see -- we have a bunch of P-high issues, and we have I-nominated issues.</p>",
        "id": 165255814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411109
    },
    {
        "content": "<p>Let's do I-nominated</p>",
        "id": 165255889,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411137
    },
    {
        "content": "<blockquote>\n<p>Hide type errors likely caused by incorrect struct literal <a href=\"https://github.com/rust-lang/rust/issues/60118\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60118\">#60118</a> </p>\n</blockquote>\n<p>I think we resolved this, right? At least, we would want to do more design here? (cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>)</p>",
        "id": 165255920,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411165
    },
    {
        "content": "<blockquote>\n<p>add support for unchecked math <a href=\"https://github.com/rust-lang/rust/issues/59148\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59148\">#59148</a></p>\n</blockquote>",
        "id": 165255933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411180
    },
    {
        "content": "<p>the proposal is to add various intrinsics for arithmetic where it is UB to overflow, to aid in optimization</p>",
        "id": 165255973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411211
    },
    {
        "content": "<p>lang team says \"experiment away but do not expose publicly\"</p>",
        "id": 165255979,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411214
    },
    {
        "content": "<p>I can close <a href=\"https://github.com/rust-lang/rust/issues/60118\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60118\">#60118</a></p>",
        "id": 165256033,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1557411243
    },
    {
        "content": "<p>I'm inclined to say \"compiler team says this is fine\" -- it's not like it's a real maintenance burden for us?</p>",
        "id": 165256056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411252
    },
    {
        "content": "<p>(it's basically exposing some LLVM intrinsics)</p>",
        "id": 165256066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411263
    },
    {
        "content": "<p>I'm going to go with that and mark this as unblocked unless anyone objects or thinks we should discuss it more broadly</p>",
        "id": 165256096,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411286
    },
    {
        "content": "<p>OK there are <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">a lot of I-nominated issues</a></p>",
        "id": 165256191,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> you want to start with the one you highlighted?</p>",
        "id": 165256198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411358
    },
    {
        "content": "<p>I actually forget what that was</p>",
        "id": 165256256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411376
    },
    {
        "content": "<blockquote>\n<p>Turn HIR indexing into a query <a href=\"https://github.com/rust-lang/rust/issues/59064\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59064\">#59064</a></p>\n</blockquote>",
        "id": 165256286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411415
    },
    {
        "content": "<p>My sense is that this might be a good candidate for the design meeting =)</p>",
        "id": 165256305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411424
    },
    {
        "content": "<p>I might have nominated that?</p>",
        "id": 165256344,
        "sender_full_name": "mw",
        "timestamp": 1557411459
    },
    {
        "content": "<p>and yes, I think this is something that should be designed beforehand</p>",
        "id": 165256369,
        "sender_full_name": "mw",
        "timestamp": 1557411480
    },
    {
        "content": "<p>and agreed upon</p>",
        "id": 165256421,
        "sender_full_name": "mw",
        "timestamp": 1557411488
    },
    {
        "content": "<blockquote>\n<p>How do we deal with a situation like this one where one member wants to work on something complicated with long-term effects but there is not enough bandwidth in the rest of the team to come up with (or at least think through and review) a proposed architecture/design?</p>\n</blockquote>",
        "id": 165256450,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411513
    },
    {
        "content": "<p>that seems like context</p>",
        "id": 165256453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411516
    },
    {
        "content": "<p>the PR, IIRC, is part of a series of PRs that do refactorings towards end-to-end queries</p>",
        "id": 165256462,
        "sender_full_name": "mw",
        "timestamp": 1557411521
    },
    {
        "content": "<p>Yeah</p>",
        "id": 165256467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411530
    },
    {
        "content": "<p>and there were a few things in this PR and the followups that would do non-trivial stuff around the query system</p>",
        "id": 165256520,
        "sender_full_name": "mw",
        "timestamp": 1557411570
    },
    {
        "content": "<p>I don't think that PR should be discussed at the design meeting though, it's quite straightforward</p>",
        "id": 165256524,
        "sender_full_name": "Zoxc",
        "timestamp": 1557411573
    },
    {
        "content": "<p>I am inclined to agree, I feel like this is exactly the sort of thing I had hope we would discuss in design meetings beforehand -- to try and get buy in on the general direction, and to help reviewers so they have an ide what the PR is trying to do</p>",
        "id": 165256527,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411576
    },
    {
        "content": "<blockquote>\n<p>I don't think that PR should be discussed at the design meeting though, it's quite straightforward</p>\n</blockquote>\n<p>I dont' recall the specific PR, I was more referring to the overall plan</p>",
        "id": 165256600,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411605
    },
    {
        "content": "<p>But I guess there isn't overall agreement on it being straightforward based on <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>'s comments :)</p>",
        "id": 165256626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411621
    },
    {
        "content": "<p>Here are my concerns: <a href=\"https://github.com/rust-lang/rust/pull/59064#issuecomment-478565733\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59064#issuecomment-478565733\">https://github.com/rust-lang/rust/pull/59064#issuecomment-478565733</a></p>",
        "id": 165256698,
        "sender_full_name": "mw",
        "timestamp": 1557411676
    },
    {
        "content": "<p>and the subsequent PR looked like they did similar things</p>",
        "id": 165256721,
        "sender_full_name": "mw",
        "timestamp": 1557411697
    },
    {
        "content": "<p>So I think two things</p>\n<ul>\n<li>I can see that discussing the overall plan -- i.e., where do we think we're ending up, do we agree on the invariants etc might help here</li>\n<li>But also it seems like another key question is finding the right person to act as \"reviewer\"</li>\n</ul>",
        "id": 165256852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411770
    },
    {
        "content": "<p>OK, well, it seems like the comments have been made.</p>",
        "id": 165257049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557411921
    },
    {
        "content": "<p>I still feel like I would like to have a design meeting discussion laying out the overall plan that we are shooting for, and some of the intermediate steps. I don't know how much detail I want, perhaps not a ton, but it seems like something we can discuss. I also think we should try to figure out who will be the right person to do the reviewing, especially as <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> will be doing on some further parental leave over the summer. I do think the PR seems like \"the sort of step\" that we are going to need though.</p>",
        "id": 165257227,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412034
    },
    {
        "content": "<p>(Put another way, I think this end-to-end work should probably be part of a working group, even if it's mostly a working group of 1?)</p>",
        "id": 165257330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412091
    },
    {
        "content": "<p>I've been reviewing some of the PRs, I don't think we need an @mw level reviewer for the PRs if the general direction is agreed upon</p>",
        "id": 165257345,
        "sender_full_name": "oli",
        "timestamp": 1557412105
    },
    {
        "content": "<p>Anyway, we gotta move on. I'll leave some comments and a pointer to what was said.</p>",
        "id": 165257368,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412119
    },
    {
        "content": "<p>If we do something like this, there should be clear documentation on why it's done, what the pitfalls are and a way forward to remove the hack again, if possible</p>",
        "id": 165257370,
        "sender_full_name": "mw",
        "timestamp": 1557412119
    },
    {
        "content": "<blockquote>\n<p>I've been reviewing some of the PRs, I don't think we need an @mw level reviewer for the PRs if the general direction is agreed upon</p>\n</blockquote>\n<p>(what does \"mw level\" mean?)</p>",
        "id": 165257381,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412133
    },
    {
        "content": "<p>well... deep knowledge of our incremental system</p>",
        "id": 165257419,
        "sender_full_name": "oli",
        "timestamp": 1557412159
    },
    {
        "content": "<p>I mostly mean that we should decide who will do it -- I think <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I'd be quite happy for you to do it :)</p>",
        "id": 165257420,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412160
    },
    {
        "content": "<p>Ah, ok</p>",
        "id": 165257424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412163
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/59064#issuecomment-490929390\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59064#issuecomment-490929390\">Left my comment</a></p>",
        "id": 165257647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412319
    },
    {
        "content": "<p>hmm, so we're at 32 minutes --</p>",
        "id": 165257761,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412391
    },
    {
        "content": "<p>I'm thinking we should try to spend more time on nominated or p-high issues</p>",
        "id": 165257787,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412406
    },
    {
        "content": "<p>until 45 after</p>",
        "id": 165257792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412408
    },
    {
        "content": "<blockquote>\n<p>Implement converting an AST to a token tree <a href=\"https://github.com/rust-lang/rust/issues/43081\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/43081\">#43081</a></p>\n</blockquote>",
        "id": 165257808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> are you around?</p>",
        "id": 165257814,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412426
    },
    {
        "content": "<p>I think I will remove the nomination for this, but it seems like there is still ongoing design, and might make a great design meeting candidate too in time</p>",
        "id": 165257887,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412462
    },
    {
        "content": "<p>(pinged Eddy on Discord)</p>",
        "id": 165257904,
        "sender_full_name": "centril",
        "timestamp": 1557412477
    },
    {
        "content": "<blockquote>\n<p>Pattern errors are too imprecise and should be removed in favor of MIR borrowck <a href=\"https://github.com/rust-lang/rust/issues/45600\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/45600\">#45600</a></p>\n</blockquote>",
        "id": 165257986,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412532
    },
    {
        "content": "<p>this was nominated by <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> but I suspect we can remove that</p>",
        "id": 165257997,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412539
    },
    {
        "content": "<p>in particular, there's been some discussion in the meantime</p>",
        "id": 165258016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412557
    },
    {
        "content": "<p>(actually maybe we'll touch on that today as part of <span class=\"user-group-mention\" data-user-group-id=\"491\">@WG-nll</span> check-in)</p>",
        "id": 165258068,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412567
    },
    {
        "content": "<p>(I thought you said WG-nll was over?)</p>",
        "id": 165258095,
        "sender_full_name": "centril",
        "timestamp": 1557412594
    },
    {
        "content": "<p>well, it's still on the check-in calendar :P</p>",
        "id": 165258109,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412610
    },
    {
        "content": "<p>/me is ruled by the calendar</p>",
        "id": 165258116,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412615
    },
    {
        "content": "<p>(but I agree it's basically over at this point, and was going to raise that point)</p>",
        "id": 165258131,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412624
    },
    {
        "content": "<blockquote>\n<p>Panics in destructors can cause the return value to be leaked <a href=\"https://github.com/rust-lang/rust/issues/47949\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/47949\">#47949</a></p>\n</blockquote>",
        "id": 165258140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412626
    },
    {
        "content": "<p>I guess this is more nomated for lang; it's a longstanding \"weird case\"</p>",
        "id": 165258156,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412637
    },
    {
        "content": "<p>(since 1.0)</p>",
        "id": 165258168,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412645
    },
    {
        "content": "<p>I think the biggest discussion is wether we want to remove that pattern checker in lieu of relying on the borrow checker and if we do, does that require an rfc because we'd start accepting more code.</p>",
        "id": 165258169,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1557412646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> that's a T-Lang discussion however</p>",
        "id": 165258201,
        "sender_full_name": "centril",
        "timestamp": 1557412672
    },
    {
        "content": "<blockquote>\n<p>I think the biggest discussion is wether we want to remove that pattern checker in lieu of relying on the borrow checker and if we do, does that require an rfc because we'd start accepting more code.</p>\n</blockquote>\n<p>ah, ok. I feel like we always \"intended to\" as part of NLL but it wasn't explicitly discussed as such</p>",
        "id": 165258202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412672
    },
    {
        "content": "<p>in fact, I think we <em>had</em> an RFC about it maybe? I can't remember</p>",
        "id": 165258210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412679
    },
    {
        "content": "<p>in any case, we <em>did</em> cover this a bit in T-lang ..</p>",
        "id": 165258271,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412691
    },
    {
        "content": "<p>yeah; bind by move &amp; stuff</p>",
        "id": 165258295,
        "sender_full_name": "centril",
        "timestamp": 1557412710
    },
    {
        "content": "<p>Matthew helpfully made a preliminary report</p>",
        "id": 165258309,
        "sender_full_name": "centril",
        "timestamp": 1557412720
    },
    {
        "content": "<blockquote>\n<p>Exponential compile-time and type_length_limit blowup when nesting closure wrappers <a href=\"https://github.com/rust-lang/rust/issues/54540\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54540\">#54540</a></p>\n</blockquote>",
        "id": 165258317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412726
    },
    {
        "content": "<p>I nominated this</p>",
        "id": 165258319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412728
    },
    {
        "content": "<p>mostly beacuse <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> and I were talking about it last time</p>",
        "id": 165258327,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412735
    },
    {
        "content": "<p>it's more  of a \"volunteer task\" than anything I guess</p>",
        "id": 165258336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412741
    },
    {
        "content": "<p>I'm going to remove nomination</p>",
        "id": 165258357,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412754
    },
    {
        "content": "<blockquote>\n<p>Update dependency versions in the various <code>Cargo.toml</code>s to the version that we actually use <a href=\"https://github.com/rust-lang/rust/issues/57443\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57443\">#57443</a></p>\n</blockquote>",
        "id": 165258370,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412767
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> nominated this</p>",
        "id": 165258375,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412773
    },
    {
        "content": "<blockquote>\n<p>Nominating for discussion at the team meeting. Let's create a repo for this. It's a general purpose tool that we want to use in rustbuild. As per this year's strategy of moving things out of tree, I want to start this out of tree. I can take care of everything once we have a repo where I have merge or r+ powers.</p>\n</blockquote>",
        "id": 165258379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412787
    },
    {
        "content": "<p>oh yea, so the thing is less the impl, but whether we are ok to create a new repo and <em>start</em> out of tree</p>",
        "id": 165258389,
        "sender_full_name": "oli",
        "timestamp": 1557412798
    },
    {
        "content": "<p>works for me</p>",
        "id": 165258440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412804
    },
    {
        "content": "<p>we did have a sketch of a process on this</p>",
        "id": 165258455,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412813
    },
    {
        "content": "<p>but it was pretty informal, maybe a PR or something..?</p>",
        "id": 165258461,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412822
    },
    {
        "content": "<p>An idea: have a bot tell us when a dependency is outdated by making an issue</p>",
        "id": 165258483,
        "sender_full_name": "centril",
        "timestamp": 1557412834
    },
    {
        "content": "<p>hmm.. I'll search around and if I don't find anything... I'll add a process thing to the compiler-team repo?</p>",
        "id": 165258490,
        "sender_full_name": "oli",
        "timestamp": 1557412840
    },
    {
        "content": "<p>The procedure is <a href=\"https://github.com/rust-lang/compiler-team/blob/master/procedures/crates.md\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/master/procedures/crates.md\">described here</a></p>",
        "id": 165258529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412874
    },
    {
        "content": "<blockquote>\n<p>Create a PR modifying this document to include the crate in the list below. Use @rfcbot merge to gain agreement from compiler team members.</p>\n</blockquote>",
        "id": 165258539,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412883
    },
    {
        "content": "<p>it's a bit .. hidden in that document though</p>",
        "id": 165258557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412903
    },
    {
        "content": "<p>cool... I should have looked around</p>",
        "id": 165258559,
        "sender_full_name": "oli",
        "timestamp": 1557412905
    },
    {
        "content": "<p>took me a bit to find it</p>",
        "id": 165258560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412906
    },
    {
        "content": "<p>maybe should be made more prominent :)</p>",
        "id": 165258571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412914
    },
    {
        "content": "<p>ok, that is resolved then. I'll start the process and try to make the doc more visible</p>",
        "id": 165258580,
        "sender_full_name": "oli",
        "timestamp": 1557412922
    },
    {
        "content": "<p>+1</p>",
        "id": 165258627,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557412927
    },
    {
        "content": "<blockquote>\n<p>mir-opt tests extremely slow. <a href=\"https://github.com/rust-lang/rust/issues/58485\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58485\">#58485</a></p>\n</blockquote>",
        "id": 165258728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413001
    },
    {
        "content": "<p>I don't know why this is nominated</p>",
        "id": 165258750,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413022
    },
    {
        "content": "<p>seems like it's p-medium, nice to have, etc?</p>",
        "id": 165258760,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413029
    },
    {
        "content": "<p>Ah, I guess, \"Nominating for discussion (specifically, investigating this) at the next @rust-lang/compiler team meeting.\", but I think we're all set</p>",
        "id": 165258831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413053
    },
    {
        "content": "<p>Oh, I guess it was whether to port to use ui tests ? (I think that seems fine...)</p>",
        "id": 165258877,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413086
    },
    {
        "content": "<p>(If more discussion is needed, we can use the design meeting for that)</p>",
        "id": 165258896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413101
    },
    {
        "content": "<p>OK, that's all the time we've got</p>",
        "id": 165258914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413110
    },
    {
        "content": "<p>Let's do some quick check-ins. First, </p>\n<blockquote>\n<p>WG-Diagnostics</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> was going to tell us about <span class=\"user-group-mention\" data-user-group-id=\"1187\">@WG-diagnostics</span></p>",
        "id": 165258932,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413128
    },
    {
        "content": "<p>so I just checked, and we have not done anything towards our goal of ripping diagnostics out of the compiler that I know of. Maybe <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> knows more.</p>",
        "id": 165259007,
        "sender_full_name": "oli",
        "timestamp": 1557413175
    },
    {
        "content": "<p>We haven't had a first meeting yet, so I'll organize that</p>",
        "id": 165259011,
        "sender_full_name": "oli",
        "timestamp": 1557413186
    },
    {
        "content": "<p>OK =)</p>",
        "id": 165259049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413215
    },
    {
        "content": "<p>Sounds good!</p>",
        "id": 165259053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413221
    },
    {
        "content": "<p>Next was <span class=\"user-group-mention\" data-user-group-id=\"491\">@WG-nll</span> -- there remain a few items of follow-up:</p>\n<ul>\n<li>Enabling migration mode for Rust 2015</li>\n<li>The bind-by-move-in-match stuff</li>\n</ul>",
        "id": 165259126,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413277
    },
    {
        "content": "<p>(There is no more regular meeting etc though)</p>",
        "id": 165259184,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413294
    },
    {
        "content": "<p>To be quite honest I've been too busy to keep up with those items, but I don't think <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> is here right now to fill us in</p>",
        "id": 165259195,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413308
    },
    {
        "content": "<p>Er, well, <a href=\"https://github.com/rust-lang/rust/pull/59114\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59114\">https://github.com/rust-lang/rust/pull/59114</a> mergd -- so I guess we have migration mode on 2015</p>",
        "id": 165259205,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413325
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 165259222,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413338
    },
    {
        "content": "<p>we do; NLL is on 2015 in 1.36</p>",
        "id": 165259224,
        "sender_full_name": "centril",
        "timestamp": 1557413342
    },
    {
        "content": "<p>So then the question now is to establish the precise criteria for the next step, killing the old AST borrow checker.</p>",
        "id": 165259239,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413347
    },
    {
        "content": "<p>if everything is using NLL now, is there any reason to wait?</p>",
        "id": 165259272,
        "sender_full_name": "varkor",
        "timestamp": 1557413374
    },
    {
        "content": "<p>We should probably create a tracking issue for this (or maybe a GH project)</p>",
        "id": 165259281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413381
    },
    {
        "content": "<blockquote>\n<p>if everything is using NLL now, is there any reason to wait?</p>\n</blockquote>\n<p>yes, because migation mode gives warnings for old patterns that used to be (incorrectly) accepted</p>",
        "id": 165259300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413396
    },
    {
        "content": "<p>ah, of course</p>",
        "id": 165259355,
        "sender_full_name": "varkor",
        "timestamp": 1557413407
    },
    {
        "content": "<p>we'll have to give people time to fix those, do crater runs, and all that</p>",
        "id": 165259359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> next step might be to do crater then?</p>",
        "id": 165259370,
        "sender_full_name": "centril",
        "timestamp": 1557413416
    },
    {
        "content": "<p>there may also be some outstanding bugs we wanted to fix</p>",
        "id": 165259371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413416
    },
    {
        "content": "<p>seems like we need to \"take stock\" of the full set of items</p>",
        "id": 165259397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413438
    },
    {
        "content": "<p>(this is where I remind y'all of the virtues of minimum lint levels ^,-)</p>",
        "id": 165259403,
        "sender_full_name": "centril",
        "timestamp": 1557413441
    },
    {
        "content": "<p>OK, well, that's all there is to say on that, I think.</p>",
        "id": 165259467,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413484
    },
    {
        "content": "<p>We've got a few minutes left...</p>",
        "id": 165259653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413579
    },
    {
        "content": "<p>I'm going to try to get through a few I-nominated issues dang it</p>",
        "id": 165259675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413588
    },
    {
        "content": "<blockquote>\n<p>Decouple nightly RLS from Clippy <a href=\"https://github.com/rust-lang/rust/issues/59761\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59761\">#59761</a></p>\n</blockquote>",
        "id": 165259738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413631
    },
    {
        "content": "<p>I'd like to quickly discuss <a href=\"https://github.com/rust-lang/rust/pull/59752\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59752\">https://github.com/rust-lang/rust/pull/59752</a> if possible</p>",
        "id": 165259809,
        "sender_full_name": "mw",
        "timestamp": 1557413644
    },
    {
        "content": "<p>This was nominated by <span class=\"user-mention\" data-user-id=\"125254\">@kennytm</span> -- but I'm not sure what there is to discuss. Maybe it was nominated for dev-tools though</p>",
        "id": 165259810,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413645
    },
    {
        "content": "<blockquote>\n<p>Limit dylib symbols <a href=\"https://github.com/rust-lang/rust/issues/59752\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59752\">#59752</a></p>\n</blockquote>",
        "id": 165259827,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413659
    },
    {
        "content": "<p>Go for it :)</p>",
        "id": 165259828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413661
    },
    {
        "content": "<p>here's a summary: <a href=\"https://github.com/rust-lang/rust/pull/59752#issuecomment-490020239\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59752#issuecomment-490020239\">https://github.com/rust-lang/rust/pull/59752#issuecomment-490020239</a></p>",
        "id": 165259854,
        "sender_full_name": "mw",
        "timestamp": 1557413677
    },
    {
        "content": "<blockquote>\n<p>This PR \"fixes\" how we export symbols from Rust dylibs by giving the linker an explicit list of symbols to export. I'm writing \"fixes\" in quotes here because:</p>\n<div class=\"codehilite\"><pre><span></span>we actually don&#39;t define what symbols get exported from Rust dylibs exactly\nthe current behavior is inconsistent between different platforms\nthere&#39;s at least one case that relies on the more lenient behavior on some platforms.\n</pre></div>\n\n\n<p>So the PR makes things more consistent but breaks something that relies on underspecified behavior. I'm wondering what to do here. Crater doesn't show breakage for the change, the problematic case seems to have a proposed fix upstream and Rust dylibs aren't used that much in the wild anyway. On the other hand this isn't an urgent problem and the PR might introduce breakage.</p>\n<p>Ideally we'd fix the situation around Rust dylibs (by either deprecating them or specifying them more completely).</p>\n<p>Meanwhile, do we want to merge this?</p>\n</blockquote>",
        "id": 165259884,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413706
    },
    {
        "content": "<p>the PR makes Rust dylibs more consistent across platforms</p>",
        "id": 165259891,
        "sender_full_name": "mw",
        "timestamp": 1557413709
    },
    {
        "content": "<p>it breaks a bit of stuff</p>",
        "id": 165259911,
        "sender_full_name": "mw",
        "timestamp": 1557413727
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span></p>",
        "id": 165259921,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413736
    },
    {
        "content": "<p>but that relies on things that we don't really guarantee</p>",
        "id": 165259930,
        "sender_full_name": "mw",
        "timestamp": 1557413743
    },
    {
        "content": "<p>which is easy because Rust dylibs are rather shaky to begin with</p>",
        "id": 165259948,
        "sender_full_name": "mw",
        "timestamp": 1557413760
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> wrote:</p>\n<blockquote>\n<p>To throw in my personal opinion, I'm all for locking down the dylib crate type to basically \"work for rustc as priority number 1 and we'll figure other things out later\". Other use cases of dynamic libraries in Rust should all be using cdylib which is much more appropriate and has better definitions about symbols and whatnot. For dylib we've largely (AFAIK) just kept it working for the compiler and haven't really done much else to it.</p>\n</blockquote>",
        "id": 165259952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413762
    },
    {
        "content": "<blockquote>\n<p>This was nominated by <span class=\"user-mention silent\" data-user-id=\"125254\">kennytm</span> -- but I'm not sure what there is to discuss. Maybe it was nominated for dev-tools though</p>\n</blockquote>\n<p>(59761 was nominated for T-infra when that issue still had that label)</p>",
        "id": 165259996,
        "sender_full_name": "kennytm",
        "timestamp": 1557413763
    },
    {
        "content": "<p>I'd like to merge</p>",
        "id": 165260005,
        "sender_full_name": "mw",
        "timestamp": 1557413770
    },
    {
        "content": "<p>Have we reached out to the case that we know to be affected?</p>",
        "id": 165260027,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413787
    },
    {
        "content": "<p>but there might be breakage so I wanted to at least inform the compiler team</p>",
        "id": 165260029,
        "sender_full_name": "mw",
        "timestamp": 1557413790
    },
    {
        "content": "<p>yes, we have</p>",
        "id": 165260038,
        "sender_full_name": "mw",
        "timestamp": 1557413796
    },
    {
        "content": "<p>there's a PR open to fix the issue, I think</p>",
        "id": 165260060,
        "sender_full_name": "mw",
        "timestamp": 1557413816
    },
    {
        "content": "<p>OK, I am ok to merge. I wonder where we would document this sort of thing.</p>",
        "id": 165260062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413819
    },
    {
        "content": "<p>document what exactly?</p>",
        "id": 165260087,
        "sender_full_name": "mw",
        "timestamp": 1557413842
    },
    {
        "content": "<p>what symbols etc are expected to be exported</p>",
        "id": 165260260,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413918
    },
    {
        "content": "<p>I feel like this is an area where I would like input -- I see Josh Tripplet sort of weighed in a bit on thread</p>",
        "id": 165260286,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413936
    },
    {
        "content": "<p>I'd rather document something in the direction of dylib being unstable, deprecated and for internal use only.</p>",
        "id": 165260341,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1557413979
    },
    {
        "content": "<p>that seems fine to document for now</p>",
        "id": 165260366,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557413998
    },
    {
        "content": "<p>eventually I think we may want to support it more properly though</p>",
        "id": 165260443,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557414016
    },
    {
        "content": "<p>anyway, i'm fine with this, but I'd like to hear back from josh tripplet on his opinion</p>",
        "id": 165260471,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557414044
    },
    {
        "content": "<p>(reading some backscroll now)</p>",
        "id": 165260479,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414052
    },
    {
        "content": "<p>I'm not entirely clear btw if this is \"t-compiler\" or \"t-lang\" or what =) it's... t-something</p>",
        "id": 165260489,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1557414062
    },
    {
        "content": "<p>the underlying issue is t-lang, I'd say</p>",
        "id": 165260544,
        "sender_full_name": "mw",
        "timestamp": 1557414101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> when in doubt, say \"both\" :P</p>",
        "id": 165260545,
        "sender_full_name": "centril",
        "timestamp": 1557414101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> so the main breakage is that C symbols not declared in rust don't show up, right?</p>",
        "id": 165260555,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414106
    },
    {
        "content": "<p>or are there other forms of breakage that we know of?</p>",
        "id": 165260566,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414116
    },
    {
        "content": "<p>the crater run came back clean</p>",
        "id": 165260631,
        "sender_full_name": "mw",
        "timestamp": 1557414131
    },
    {
        "content": "<p>I don't think C symbol will show up at all</p>",
        "id": 165260645,
        "sender_full_name": "Zoxc",
        "timestamp": 1557414145
    },
    {
        "content": "<p>but this is rather platform dependent, so I don't know</p>",
        "id": 165260651,
        "sender_full_name": "mw",
        "timestamp": 1557414147
    },
    {
        "content": "<p>C symbols need to show up at least somewhat for the compiler to work over time</p>",
        "id": 165260701,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414183
    },
    {
        "content": "<p>we only know that it broke that one crate because it's used by rustc during bootstrap, I think</p>",
        "id": 165260725,
        "sender_full_name": "mw",
        "timestamp": 1557414194
    },
    {
        "content": "<p>e.g. if you have an <code>#[inline]</code> function in one dylib calling a C symbol linked into that dylib</p>",
        "id": 165260727,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414194
    },
    {
        "content": "<p>that was just the crate trying to use LLVM symbols implicitly through the dylib we have, right?</p>",
        "id": 165260753,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414214
    },
    {
        "content": "<p>yes</p>",
        "id": 165260770,
        "sender_full_name": "mw",
        "timestamp": 1557414225
    },
    {
        "content": "<p>ok, I just wanted to confirm</p>",
        "id": 165260889,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414289
    },
    {
        "content": "<p>I'm still in favor...</p>",
        "id": 165260894,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1557414294
    },
    {
        "content": "<p>let's maybe wait until the beginning of the next cycle with merging</p>",
        "id": 165260899,
        "sender_full_name": "mw",
        "timestamp": 1557414295
    },
    {
        "content": "<p>then we should be on the safe side</p>",
        "id": 165260944,
        "sender_full_name": "mw",
        "timestamp": 1557414319
    }
]