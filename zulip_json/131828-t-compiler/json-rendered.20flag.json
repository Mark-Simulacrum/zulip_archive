[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> -- you around?</p>",
        "id": 169884891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604371
    },
    {
        "content": "<p>(Also cc <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span>, <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span>)</p>",
        "id": 169884905,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604398
    },
    {
        "content": "<p>Jop</p>",
        "id": 169884906,
        "sender_full_name": "oli",
        "timestamp": 1562604402
    },
    {
        "content": "<p>I wanted to briefly discuss <a href=\"https://github.com/rust-lang/rust/issues/60987\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60987\">#60987</a></p>",
        "id": 169884915,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604415
    },
    {
        "content": "<p>I think we should stabilize <strong>something</strong>, so I moved to stabilize the latest proposal.</p>\n<p>That said, I have some concerns: I think this is mildly backwards incompatible and not necessarily the behavior that people would expect. </p>\n<p>The original proposal, where <code>--json-rendered</code> is effectively a hidden flag that controls the details of JSON output, seems fine to me and in some ways superior. Moreover, it's something we could always deprecate in the future. So I kind of prefer <a href=\"https://github.com/rust-lang/rust/issues/60987#issuecomment-502228452\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60987#issuecomment-502228452\">the original proposal</a>.</p>",
        "id": 169884919,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604418
    },
    {
        "content": "<p>If I fcp cancel and move to merge the original proposal, are there strong objections?</p>",
        "id": 169884940,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604431
    },
    {
        "content": "<p>On a <span aria-label=\"boat\" class=\"emoji emoji-26f5\" role=\"img\" title=\"boat\">:boat:</span> in the Mediterranean, so no promises on internet stability</p>",
        "id": 169884946,
        "sender_full_name": "oli",
        "timestamp": 1562604442
    },
    {
        "content": "<p>I basically want to move pipelined compilation forward :)</p>",
        "id": 169884966,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604469
    },
    {
        "content": "<p>Also, I'm jealous</p>",
        "id": 169884972,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604476
    },
    {
        "content": "<p>Reading the issue, one sec</p>",
        "id": 169885014,
        "sender_full_name": "oli",
        "timestamp": 1562604484
    },
    {
        "content": "<p>I like the idea of a json flag which let's you request what you want printed with JSON, <a href=\"https://github.com/rust-lang/rust/issues/60419#issuecomment-508217889\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60419#issuecomment-508217889\">https://github.com/rust-lang/rust/issues/60419#issuecomment-508217889</a></p>",
        "id": 169885079,
        "sender_full_name": "Zoxc",
        "timestamp": 1562604546
    },
    {
        "content": "<p>Colored errors could be one thing on that list</p>",
        "id": 169885107,
        "sender_full_name": "Zoxc",
        "timestamp": 1562604574
    },
    {
        "content": "<p>Yea, renaming json-rendered is probably a good idea</p>",
        "id": 169885267,
        "sender_full_name": "oli",
        "timestamp": 1562604661
    },
    {
        "content": "<p>Other than that, the original proposal is forwards compatible with passing a list of things</p>",
        "id": 169885293,
        "sender_full_name": "oli",
        "timestamp": 1562604691
    },
    {
        "content": "<p>Yep. If it's just a question of the name, I think basically any name seems fine</p>",
        "id": 169885300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604715
    },
    {
        "content": "<p>Is it is <code>--json</code> vs <code>--json-rendered</code>?</p>",
        "id": 169885354,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604747
    },
    {
        "content": "<p>As long as we have some way to combine flags like color and shortness in a sensible way (dash separated is fine by me), I have no objections</p>",
        "id": 169885359,
        "sender_full_name": "oli",
        "timestamp": 1562604758
    },
    {
        "content": "<p>I don't understand what you mean by that :)</p>",
        "id": 169885365,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604779
    },
    {
        "content": "<p>I guess you mean <code>--json-rendered=foo-bar</code> or something?</p>",
        "id": 169885382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604793
    },
    {
        "content": "<p>Yea</p>",
        "id": 169885392,
        "sender_full_name": "oli",
        "timestamp": 1562604800
    },
    {
        "content": "<p>as opposed to <code>,</code>?</p>",
        "id": 169885396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604804
    },
    {
        "content": "<p>anyway, that's for the future it seems</p>",
        "id": 169885399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604808
    },
    {
        "content": "<p>No</p>",
        "id": 169885402,
        "sender_full_name": "oli",
        "timestamp": 1562604810
    },
    {
        "content": "<p>Comma is for multiple things</p>",
        "id": 169885410,
        "sender_full_name": "oli",
        "timestamp": 1562604819
    },
    {
        "content": "<p>oh I see</p>",
        "id": 169885428,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604835
    },
    {
        "content": "<p>so something like <code>--json=color=foo,bar-shortness=true</code>?</p>",
        "id": 169885476,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604846
    },
    {
        "content": "<p>Dash is for having short diagnostics but with color or short diagnostics without colora</p>",
        "id": 169885478,
        "sender_full_name": "oli",
        "timestamp": 1562604847
    },
    {
        "content": "<p>Hmmm that may be overkill</p>",
        "id": 169885511,
        "sender_full_name": "oli",
        "timestamp": 1562604866
    },
    {
        "content": "<p>seems like overkill but also not an immediate concern :)</p>",
        "id": 169885514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604873
    },
    {
        "content": "<p>or at least, there are many plausible separators</p>",
        "id": 169885523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604878
    },
    {
        "content": "<p>Just <code>diagnostics-short-color</code></p>",
        "id": 169885527,
        "sender_full_name": "oli",
        "timestamp": 1562604881
    },
    {
        "content": "<p>the current proposal accepts plain, ansi-colors, short, short-ansi-colors</p>",
        "id": 169885560,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604913
    },
    {
        "content": "<p>Yea I mean just to change the original proposal by Alex to be <code>diagnostic-*</code></p>",
        "id": 169885565,
        "sender_full_name": "oli",
        "timestamp": 1562604915
    },
    {
        "content": "<p>oh like change the values to <code>diagnostic-plain</code>, ...?</p>",
        "id": 169885582,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562604931
    },
    {
        "content": "<p>In order to differentiate from zoxcs artifact example</p>",
        "id": 169885597,
        "sender_full_name": "oli",
        "timestamp": 1562604942
    },
    {
        "content": "<p>I see</p>",
        "id": 169885701,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562605003
    },
    {
        "content": "<p>/me shrugs</p>",
        "id": 169885707,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562605008
    },
    {
        "content": "<p>i.e., because these are all \"diagnostic things\", so we can group them</p>",
        "id": 169885720,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562605022
    },
    {
        "content": "<p>We can then worry about what passing both <code>diagnostic-short</code> and <code>diagnostic-short-color</code> means in the futurr</p>",
        "id": 169885723,
        "sender_full_name": "oli",
        "timestamp": 1562605024
    },
    {
        "content": "<p>We can then worry about what passing both <code>diagnostic-short</code> and <code>diagnostic-short-color</code> means in the future</p>",
        "id": 169885729,
        "sender_full_name": "oli",
        "timestamp": 1562605026
    },
    {
        "content": "<p>in case we have in the future some other kinds of json (e.g., artifacts)</p>",
        "id": 169885733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562605031
    },
    {
        "content": "<p>Or that</p>",
        "id": 169885737,
        "sender_full_name": "oli",
        "timestamp": 1562605039
    },
    {
        "content": "<p>Ok</p>",
        "id": 169885738,
        "sender_full_name": "oli",
        "timestamp": 1562605040
    },
    {
        "content": "<p>I think any set of strings is fine :)</p>",
        "id": 169885744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562605047
    },
    {
        "content": "<p>Original proposal seems fine to me</p>",
        "id": 169885752,
        "sender_full_name": "oli",
        "timestamp": 1562605052
    },
    {
        "content": "<p>Maybe error out if <code>--color</code> is used together with <code>--json-rendered</code></p>",
        "id": 169885811,
        "sender_full_name": "oli",
        "timestamp": 1562605088
    },
    {
        "content": "<p>I gotta run now, dinnertime, ruddering to the shore</p>",
        "id": 169885886,
        "sender_full_name": "oli",
        "timestamp": 1562605169
    },
    {
        "content": "<p>ok</p>",
        "id": 169885891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562605173
    },
    {
        "content": "<p>So yea, going with Alex's original proposal is  fine with me</p>",
        "id": 169885907,
        "sender_full_name": "oli",
        "timestamp": 1562605200
    },
    {
        "content": "<p>I have sympathy for <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> 's point that there may be a collection of related flags hiding here that deserve treatment analogous to <code>-C</code></p>",
        "id": 169900006,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562615954
    },
    {
        "content": "<p>can we grab <code>-J</code> (json) or <code>-F</code> (formatting) for this or something ?</p>",
        "id": 169900040,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562615983
    },
    {
        "content": "<p>having said that, the time for such discussion was probably back when <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> first made the point.  I doin't mind being told \"we don't want to keep bike-shedding this, and such a flag-family could be added later backward-compatibly\"</p>",
        "id": 169900157,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562616040
    },
    {
        "content": "<blockquote>\n<p>having said that, the time for such discussion was probably back when <span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> first made the point.  I doin't mind being told \"we don't want to keep bike-shedding this, and such a flag-family could be added later backward-compatibly\"</p>\n</blockquote>\n<p>roughly my feeling :P</p>",
        "id": 169902080,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562617730
    },
    {
        "content": "<p>keep in mind that this is a fairly \"internal\" flag</p>",
        "id": 169902085,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562617738
    },
    {
        "content": "<p>i.e., it's really just meant for cargo to communicate with rustc</p>",
        "id": 169902093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562617746
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> and I were debating about whether it would make sense to have a <code>--cargo=foo=bar</code> flag where the expected arguments are documented as potentially changing every rustc revision, so we could add stuff like this without stabilizing the core rustc-cargo interface.)</p>",
        "id": 169902136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562617783
    },
    {
        "content": "<p>I think <code>--cargo=foo=bar</code> is fine as long as we take care in how we \"sell\" it. We probably don't want to have features that are forever deployed solely for cargo (or at least not many such features): If its worth having for cargo, its <em>probably</em> worth providing to others.</p>",
        "id": 170433074,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562660474
    },
    {
        "content": "<p>But if the intent is more: \"This is how we are initially exposing such functionality, and in the longer term we may add access to these features via proper, stable flags\", then that is easier for me to swallow.</p>",
        "id": 170433100,
        "sender_full_name": "pnkfelix",
        "timestamp": 1562660519
    },
    {
        "content": "<p><code>-Fjson=...</code> would be fine with me</p>",
        "id": 170612174,
        "sender_full_name": "eddyb",
        "timestamp": 1562833128
    },
    {
        "content": "<p>(but I agree this should've been discussed back then)</p>",
        "id": 170612191,
        "sender_full_name": "eddyb",
        "timestamp": 1562833155
    },
    {
        "content": "<blockquote>\n<p>But if the intent is more: \"This is how we are initially exposing such functionality, and in the longer term we may add access to these features via proper, stable flags\", then that is easier for me to swallow.</p>\n</blockquote>\n<p>yeah, I agree with that <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span></p>",
        "id": 170640815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1562856928
    },
    {
        "content": "<p>to quote myself:</p>\n<blockquote>\n<p>IMO one thing I'd be fine with is just increasing the amount of detail in the JSON output, and expect any consumers to adapt<br>\nas an alternative to increasing amounts of configurability</p>\n</blockquote>",
        "id": 170640891,
        "sender_full_name": "eddyb",
        "timestamp": 1562856974
    },
    {
        "content": "<blockquote>\n<p>I were debating about whether it would make sense to have a --cargo=foo=bar flag where the expected arguments are documented as potentially changing every rustc revision</p>\n</blockquote>\n<p>That might come in handy for \"out of process rustc for RLS\": flag <code>--dump-save-analysis</code> should be usable on stable by RLS, but we don't want to stabilize it.</p>",
        "id": 171067632,
        "sender_full_name": "matklad",
        "timestamp": 1563361424
    }
]