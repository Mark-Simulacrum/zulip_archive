[
    {
        "content": "<p>I will be doing pre-triage in this channel.</p>",
        "id": 168594955,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037309
    },
    {
        "content": "<p>first up: <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-nominated\">nominated unprioritized issues</a></p>",
        "id": 168595147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037472
    },
    {
        "content": "<p>\"Forgone caching in cycles caused much overflow in trait solving\" <a href=\"https://github.com/rust-lang/rust/issues/61960\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61960\">#61960</a> -- i filed this last night. Centril since nominated it, presumably to get it prioritized. I think it probably gets the same priority that related issue <a href=\"https://github.com/rust-lang/rust/issues/60846\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/60846\">#60846</a> has.</p>",
        "id": 168595188,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037519
    },
    {
        "content": "<p>So, triaging <a href=\"https://github.com/rust-lang/rust/issues/61960\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61960\">#61960</a> as P-high, removing nomination tag.</p>",
        "id": 168595230,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037528
    },
    {
        "content": "<p>next: \"<code>type_name</code> ICE\" <a href=\"https://github.com/rust-lang/rust/issues/61894\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61894\">#61894</a></p>",
        "id": 168595287,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037576
    },
    {
        "content": "<p>Should be P-high if we want to stabilize</p>",
        "id": 168595327,
        "sender_full_name": "centril",
        "timestamp": 1561037620
    },
    {
        "content": "<p>currently relies on feature(core_intrinsics) ...</p>",
        "id": 168595330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037621
    },
    {
        "content": "<p>but as <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> says, the stabilization of <code>type_name</code> becomes an issue</p>",
        "id": 168595355,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037640
    },
    {
        "content": "<p>okay, and the FCP (w/ inclination to merge) for <a href=\"https://github.com/rust-lang/rfcs/issues/1428\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/issues/1428\">RFC 1428</a> recently ended like 3 days ago.</p>",
        "id": 168595486,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037723
    },
    {
        "content": "<p>so yes, seems like a blocker for stabilization</p>",
        "id": 168595506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037737
    },
    {
        "content": "<p>but also I think I'd prefer for us to immediately prioiritize things related to the release</p>",
        "id": 168595542,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037755
    },
    {
        "content": "<p>oh I think I forgot to explain to <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> that you can have parameterization in scope that's not part of monomorphization. for name mangling we produce something that demangles to <code>_</code> in that case</p>",
        "id": 168595627,
        "sender_full_name": "eddyb",
        "timestamp": 1561037794
    },
    {
        "content": "<p>because there remain a large set of beta-regressions that I have not yet managed to get all the way through (see <a href=\"#narrow/stream/131828-t-compiler/topic/1.2E36.20regressions/near/168452214\" title=\"#narrow/stream/131828-t-compiler/topic/1.2E36.20regressions/near/168452214\">yet another topic</a>)</p>",
        "id": 168595631,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037797
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> would like to take on the ICE?</p>",
        "id": 168595707,
        "sender_full_name": "centril",
        "timestamp": 1561037847
    },
    {
        "content": "<p>okay well lets call this (<a href=\"https://github.com/rust-lang/rust/issues/61894\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61894\">#61894</a>) P-high for now</p>",
        "id": 168595708,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037850
    },
    {
        "content": "<p>I'd say <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> but if he doesn't have time, me</p>",
        "id": 168595818,
        "sender_full_name": "eddyb",
        "timestamp": 1561037919
    },
    {
        "content": "<p>next: \"Using extra lifetime parameter when implementing a trait is allowed\" <a href=\"https://github.com/rust-lang/rust/issues/61888\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61888\">#61888</a></p>",
        "id": 168595829,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037931
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> he doesn't</p>",
        "id": 168595834,
        "sender_full_name": "centril",
        "timestamp": 1561037937
    },
    {
        "content": "<p>I ... don't know what to say about <a href=\"https://github.com/rust-lang/rust/issues/61888\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61888\">#61888</a></p>",
        "id": 168595866,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561037968
    },
    {
        "content": "<p>I'm going to assume that its nominated for lang team discussion</p>",
        "id": 168595943,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038006
    },
    {
        "content": "<p>next: \"rustc runs out of memory when compiling an <code>if</code> statement with no block, enclosed in parentheses\" <a href=\"https://github.com/rust-lang/rust/issues/61858\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61858\">#61858</a></p>",
        "id": 168596018,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038051
    },
    {
        "content": "<p>that's pretty awesome</p>",
        "id": 168596048,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038070
    },
    {
        "content": "<p>(the expression in question is <code>(if foobar)</code>)</p>",
        "id": 168596070,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038086
    },
    {
        "content": "<p>I have to assume this is some sort of error recovery going terribly terribly wrong.</p>",
        "id": 168596113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038107
    },
    {
        "content": "<p>/me looks at <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 168596172,
        "sender_full_name": "centril",
        "timestamp": 1561038123
    },
    {
        "content": "<p>but it also ... doesn't feel P-high to me.</p>",
        "id": 168596203,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038142
    },
    {
        "content": "<p>marking <a href=\"https://github.com/rust-lang/rust/issues/61858\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61858\">#61858</a> as P-medium for now. Though I do want to assign it. I'll assign to self and <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> . And remove the nomation tag.</p>",
        "id": 168596251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038176
    },
    {
        "content": "<p>next: \" type parameter <code>T/#1</code> (T/1) out of range when substituting\" <a href=\"https://github.com/rust-lang/rust/issues/61808\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61808\">#61808</a></p>",
        "id": 168596335,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038243
    },
    {
        "content": "<p>looks like <a href=\"https://github.com/rust-lang/rust/issues/61041\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61041\">#61041</a> needs to be finished?</p>",
        "id": 168596481,
        "sender_full_name": "eddyb",
        "timestamp": 1561038325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> do you know if <a href=\"https://github.com/rust-lang/rust/issues/61808\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61808\">#61808</a> would be resolved by PR <a href=\"https://github.com/rust-lang/rust/issues/61041\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61041\">#61041</a> ?</p>",
        "id": 168596494,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038339
    },
    {
        "content": "<p>it would be nice to reduce it to a smaller standalone test case, in any case</p>",
        "id": 168596592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038366
    },
    {
        "content": "<p>but oh does it rely on clippy anyway?</p>",
        "id": 168596611,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038378
    },
    {
        "content": "<p>I guess so. So never mind.</p>",
        "id": 168596623,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038389
    },
    {
        "content": "<p>I don't know how best to prioritize it. It feels P-medium at the moment but maybe <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> would convince me otherwise.</p>",
        "id": 168596675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038432
    },
    {
        "content": "<p>I'll mark it P-medium and assign to self and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 168596691,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038448
    },
    {
        "content": "<p>next: \"Codegen ICE/regression with 2019-06-12 nightly when using async fn&lt;T: Fn()&gt;(&amp;self, T)\" <a href=\"https://github.com/rust-lang/rust/issues/61793\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61793\">#61793</a></p>",
        "id": 168596840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038518
    },
    {
        "content": "<p>how are we currently triaging async-await bugs?</p>",
        "id": 168596911,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038568
    },
    {
        "content": "<p>I'm going to assign this to niko to let them figure out the approprite prioirty and any other async-await specific tags.</p>",
        "id": 168597056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038638
    },
    {
        "content": "<p>next: \"Size mismatch when const transmuting\" <a href=\"https://github.com/rust-lang/rust/issues/61774\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61774\">#61774</a></p>",
        "id": 168597193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038723
    },
    {
        "content": "<blockquote>\n<p>next: \"Codegen ICE/regression with 2019-06-12 nightly when using async fn&lt;T: Fn()&gt;(&amp;self, T)\" <a href=\"https://github.com/rust-lang/rust/issues/61793\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61793\">#61793</a></p>\n</blockquote>\n<p>Seems Async-Await-Blocking to me</p>",
        "id": 168597252,
        "sender_full_name": "centril",
        "timestamp": 1561038776
    },
    {
        "content": "<p>so, even though <a href=\"https://github.com/rust-lang/rust/issues/61774\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61774\">#61774</a> does ICE with or without the feature gate in place</p>",
        "id": 168597254,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038778
    },
    {
        "content": "<p>we do issue the diagnostic saying that it is feature gated if you are missing the feature gate</p>",
        "id": 168597289,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038802
    },
    {
        "content": "<p>which to me means this still falls under the umbrella of \"gated\"</p>",
        "id": 168597308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038816
    },
    {
        "content": "<p>and thus not something to worry about in stable rustc</p>",
        "id": 168597320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038822
    },
    {
        "content": "<p>P-medium + assign varkor?</p>",
        "id": 168597332,
        "sender_full_name": "centril",
        "timestamp": 1561038831
    },
    {
        "content": "<p>yeah, triage <a href=\"https://github.com/rust-lang/rust/issues/61774\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61774\">#61774</a> P-medium, remove nomination, assign self and varkor.</p>",
        "id": 168597397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038852
    },
    {
        "content": "<p>next: \"Regression: implementing <code>Clone</code> for trait objects\" <a href=\"https://github.com/rust-lang/rust/issues/61759\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61759\">#61759</a></p>",
        "id": 168597481,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038919
    },
    {
        "content": "<p>Did we ever have a lint for \"obvious\" infinite recursion? I cannot remember.</p>",
        "id": 168597598,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561038966
    },
    {
        "content": "<p>yes.</p>",
        "id": 168597728,
        "sender_full_name": "nagisa",
        "timestamp": 1561039066
    },
    {
        "content": "<p>well, not at a type level, but at regular code level.</p>",
        "id": 168597788,
        "sender_full_name": "nagisa",
        "timestamp": 1561039086
    },
    {
        "content": "<p>I'm not even sure if the infinite recursion here would qualify as \"obvious\" anyway</p>",
        "id": 168597830,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039119
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/builtin/static.UNCONDITIONAL_RECURSION.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/builtin/static.UNCONDITIONAL_RECURSION.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/builtin/static.UNCONDITIONAL_RECURSION.html</a></p>",
        "id": 168597858,
        "sender_full_name": "nagisa",
        "timestamp": 1561039136
    },
    {
        "content": "<p>anyway, stable-to-stable regression</p>",
        "id": 168597862,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039137
    },
    {
        "content": "<p>only question is whether to immediately write <a href=\"https://github.com/rust-lang/rust/issues/61759\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/61759\">#61759</a> off as \"expected fallout from <a href=\"https://github.com/rust-lang/rust/issues/59500\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59500\">#59500</a>\", or to dig deeper into the matter.</p>",
        "id": 168597909,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039174
    },
    {
        "content": "<p>okay well time is up, lets go over to the meeting.</p>",
        "id": 168598025,
        "sender_full_name": "pnkfelix",
        "timestamp": 1561039220
    }
]