[
    {
        "content": "<p>Have there ever been any discussions about formatting all of the compiler with rustfmt so it is all standardized and the same? Or are there reasons why that cannot be done?</p>",
        "id": 134626565,
        "sender_full_name": "davidtwco",
        "timestamp": 1537907970
    },
    {
        "content": "<p>Just something I was curious about.</p>",
        "id": 134626572,
        "sender_full_name": "davidtwco",
        "timestamp": 1537907977
    },
    {
        "content": "<p>I thought that it's been happening piecemeal.</p>",
        "id": 134626947,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537908327
    },
    {
        "content": "<p>The big \"reason\" I can see is that it will likely break every outstanding PR ;-)</p>",
        "id": 134626972,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537908359
    },
    {
        "content": "<p>Yeah, I was thinking that it could be done module-by-module, a PR that formats it all and then adds a check to tidy so that it can't regress.</p>",
        "id": 134627030,
        "sender_full_name": "davidtwco",
        "timestamp": 1537908395
    },
    {
        "content": "<p>If it has been happening piecemeal then am I right in thinking that it isn't being checked by tidy to make sure code is kept formatted by rustfmt?</p>",
        "id": 134627057,
        "sender_full_name": "davidtwco",
        "timestamp": 1537908426
    },
    {
        "content": "<p>I have not seen any such checks (but I'm a lightweight bystander)</p>",
        "id": 134627086,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537908466
    },
    {
        "content": "<p>For example - <a href=\"https://github.com/rust-lang/rust/commit/d0c1e5a99e3a9b0d57e8f1deea3c76bd1fb7c0e9\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/d0c1e5a99e3a9b0d57e8f1deea3c76bd1fb7c0e9\">https://github.com/rust-lang/rust/commit/d0c1e5a99e3a9b0d57e8f1deea3c76bd1fb7c0e9</a></p>",
        "id": 134627148,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537908505
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> I would really like to see this happen. I want to be able to enable rustfmt-on-save so badly.</p>",
        "id": 134689952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537982317
    },
    {
        "content": "<p>What would it take?  A flag day could be handled by writing a script people could use to <code>git filter-branch</code> on their pending patches.  Or, maybe it could be done directory-by-directory somehow?</p>",
        "id": 134690668,
        "sender_full_name": "Tom Tromey",
        "timestamp": 1537983156
    },
    {
        "content": "<p>maybe it could be done gradually</p>\n<ul>\n<li>apply #![cfg_attr(rustfmt, rustfmt_skip)] to every module in a swoop, to the point where running rustfmt effectively changes nothing when ran</li>\n<li>then one module at a time, prioritizing modules with least chance of breaking PRs or included in/ following large PRs that change a lot anyway, remove the flag. apply rustfmt_skip on individual functions where it matters</li>\n<li>now rustfmt runs on the module by default from now on</li>\n<li>grep for the module wide attribute to see whats left</li>\n</ul>",
        "id": 134693840,
        "sender_full_name": "memoryruins",
        "timestamp": 1537986462
    },
    {
        "content": "<p>there's this issue: <a href=\"https://github.com/rust-lang/rust/issues/49567\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/49567\">https://github.com/rust-lang/rust/issues/49567</a></p>",
        "id": 134694017,
        "sender_full_name": "varkor",
        "timestamp": 1537986651
    },
    {
        "content": "<p>it does mess git blame up entirely, which can be annoying</p>",
        "id": 134694029,
        "sender_full_name": "varkor",
        "timestamp": 1537986673
    },
    {
        "content": "<p>it's not checked in <code>tidy</code> at the moment, but it would need to be</p>",
        "id": 134694048,
        "sender_full_name": "varkor",
        "timestamp": 1537986713
    },
    {
        "content": "<ul>\n<li>oh, and any new module created will have rustfmt ran on it by default</li>\n</ul>",
        "id": 134694280,
        "sender_full_name": "memoryruins",
        "timestamp": 1537986926
    },
    {
        "content": "<p>I think once the Edition is released we should just do a flag day and be done with it</p>",
        "id": 134694828,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537987444
    },
    {
        "content": "<p>for tidy, running rustfmt as a user could be something like --bless, then for travis, if tidy runs rutstfm and theres a diff, tidy fails (as if it wasnt mercilous enough)</p>",
        "id": 134694839,
        "sender_full_name": "memoryruins",
        "timestamp": 1537987450
    },
    {
        "content": "<p>I think that just running rustfmt on a module in a PR and adding a tidy check for new code. After that everyone will just get used to running that on everything for tidy to pass.</p>",
        "id": 134694850,
        "sender_full_name": "davidtwco",
        "timestamp": 1537987471
    },
    {
        "content": "<p>flag day would pull the bandaid</p>",
        "id": 134695056,
        "sender_full_name": "memoryruins",
        "timestamp": 1537987684
    },
    {
        "content": "<p>Is there any issue with the CI running rustfmt itself? Is it simply that we don't fully trust rustfmt yet?</p>",
        "id": 134776663,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1538086025
    },
    {
        "content": "<p>I don't think it is desirable for the CI to actually reformat code, but I think there's some consensus that the CI would run rustfmt in a mode where it will check that a code is formatted. Much in the same way tidy won't wrap lines for you, just tell you that the lines are too long.</p>",
        "id": 134776929,
        "sender_full_name": "davidtwco",
        "timestamp": 1538086399
    },
    {
        "content": "<p>And why isn't it desirable?</p>",
        "id": 134777625,
        "sender_full_name": "Alexander Regueiro",
        "timestamp": 1538087221
    },
    {
        "content": "<p>Many people (myself included) are pretty wary of automated tools creating git commits containing actual substance.</p>",
        "id": 134781413,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1538092234
    }
]