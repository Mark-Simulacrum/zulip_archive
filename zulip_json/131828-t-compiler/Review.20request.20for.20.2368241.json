[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/68241\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68241\">#68241</a> been blocked on review from <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> for a few weeks now. That PR is in turn blocking significant perf improvements in <a href=\"https://github.com/rust-lang/rust/issues/68528\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68528\">#68528</a>. Would someone be willing to review all or part of <a href=\"https://github.com/rust-lang/rust/issues/68241\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68241\">#68241</a>? I say \"part\" because that PR includes several small, independent changes for better perf  and debugging that are closely related to the borrowck dataflow changes but could be split out. Those changes are already isolated into commits. cc <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span></p>",
        "id": 187734372,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581202071
    },
    {
        "content": "<p>Yeah I’m sorry, a bunch of my review requests have gone mishandled for far too long</p>",
        "id": 187739261,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581211852
    },
    {
        "content": "<p>It didn’t help that I didn’t get as much free time at the Mozilla all hands as I was expected</p>",
        "id": 187739269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581211891
    },
    {
        "content": "<p>I won’t get to it until Monday at the earliest</p>",
        "id": 187739311,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581211960
    },
    {
        "content": "<p>No worries. Just hoping to find someone who could work steal.</p>",
        "id": 187743971,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581222180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> If you split out the first 5 commits into a separate PR, I'd be happy to r+ that. I may be able to review additional parts later as well.</p>",
        "id": 187766891,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581270811
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>! I split the graphviz changes into <a href=\"https://github.com/rust-lang/rust/issues/69005\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69005\">#69005</a>.</p>",
        "id": 187768418,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581273770
    },
    {
        "content": "<p>Reviewed &amp; approved</p>",
        "id": 187768479,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581273882
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> just so we're on the same page regarding expectations for this PR : when I followed the perf.rlo link, the the task-clock and wall-times show a fair amount of red (i.e. regressions). They might be acceptable regressions, but reading the description of the PR itself, I wasn't expecting to see much regression at all.</p>",
        "id": 187856063,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581367453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> am I misunderstanding the perf results? Or looking at an outdated link:?</p>",
        "id": 187856080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581367471
    },
    {
        "content": "<p>I expect this PR to be <em>roughly</em> performance neutral, maybe slightly positive: some regressions due to additional boilerplate and a more fine-grained cursor offset by skipping block-transfer function caching.</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I am assuming that the changes in wall-time measurements were due to variance. For example, here's the <a href=\"https://perf.rust-lang.org/compare.html?start=4b172cc73f5f1fb1e3d60527fb29605fa267985c&amp;end=31ca0fd7b109756a7c52baff29870d7831f3e723&amp;stat=task-clock\" target=\"_blank\" title=\"https://perf.rust-lang.org/compare.html?start=4b172cc73f5f1fb1e3d60527fb29605fa267985c&amp;end=31ca0fd7b109756a7c52baff29870d7831f3e723&amp;stat=task-clock\">task-clock results for an initial version of the PR</a>. This is <em>without</em> the MIR visitor or the block transfer function skipping. I don't think these results represent a true  2% improvement to some opt/debug builds,  even though there is more green. I expect any true perf changes from this PR to be in check builds, where changes in borrowck performance aren't dwarfed by variance during codegen.</p>",
        "id": 187857629,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581368510
    },
    {
        "content": "<p>Btw, lemme rebase away the graphviz changes</p>",
        "id": 187857686,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581368525
    },
    {
        "content": "<p>If you like I can split out the block transfer function caching optimization and/or do another perf run</p>",
        "id": 187858177,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581368844
    },
    {
        "content": "<p>Otherwise, we can always revert this if it actually causes a persistent wall-time regression. We'll be able to see it in the graphs.</p>",
        "id": 187858285,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581368918
    },
    {
        "content": "<p>I mostly wanted clarity about your expectations</p>",
        "id": 187876450,
        "sender_full_name": "pnkfelix",
        "timestamp": 1581385559
    }
]