[
    {
        "content": "<p>Is there a reason for this split? It seems like we should perhaps unify these. AFAICT, most of the behavior is the same, though the attributes differ a little on some of the functionality offered. In particular:</p>\n<ul>\n<li>rustc_deprecated since has special handling for \"future\" versions, comparing to the release of the Rust compiler being compiled with. We could still handle this by tying it to \"crates using staged API\" or something like that.</li>\n<li>rustc_deprecated permits suggestions; this could be added to deprecated as an unstable feature.</li>\n</ul>\n<p>AFAICT, these are the only two differences. I think initially we'd probably just alias the two internally rather than trying to deprecate rustc_deprecated, as it is used quite a bit in std and so. We can clean it up in a separate PR.</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> </p>\n<p>I'd be happy to propose a PR (or I guess MCP first perhaps, depending on how folks feel).</p>",
        "id": 204374430,
        "sender_full_name": "simulacrum",
        "timestamp": 1595199462
    },
    {
        "content": "<p>Iâ€™m pretty sure normal users would want to have access to suggestions as well, eventually.</p>",
        "id": 204376169,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595202775
    },
    {
        "content": "<p>Yeah - and basically any other feature useful to std, except for tying versioning to the compiler I guess (though even that seems somewhat useful, for some crates).</p>",
        "id": 204379544,
        "sender_full_name": "simulacrum",
        "timestamp": 1595209200
    },
    {
        "content": "<p>worst case we just have <code>#[rustc_deprecation_suggestions(...)]</code> if we want a top-level attribute to make sure we don't accidentally allow it in stable code</p>",
        "id": 204381340,
        "sender_full_name": "eddyb",
        "timestamp": 1595212149
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/29935#issuecomment-158307821\">this comment</a> was the justification for having two separate attributes</p>",
        "id": 204386775,
        "sender_full_name": "Eric Huss",
        "timestamp": 1595221274
    },
    {
        "content": "<p>The special treatment of future versions was added after I touched that code for the last time.</p>",
        "id": 204391197,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595227866
    },
    {
        "content": "<p>IIRC, the \"deprecation inheritance\" scheme is the same for both attributes, only the attribute \"fields\" and their reporting is slightly different, so it should be possible to unify them.</p>",
        "id": 204391277,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595227956
    },
    {
        "content": "<p>It does sound like there's general consensus to unify them, so I'll probably start looking at doing so. <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> -- would you be a good reviewer for that? Is there someone else better?</p>",
        "id": 204413781,
        "sender_full_name": "simulacrum",
        "timestamp": 1595246723
    },
    {
        "content": "<p>Looks like highfive has already assigned me. I'll review.</p>",
        "id": 204540381,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1595334293
    }
]