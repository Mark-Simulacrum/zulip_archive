[
    {
        "content": "<p>Topic start.</p>",
        "id": 148174752,
        "sender_full_name": "nagisa",
        "timestamp": 1542892800
    },
    {
        "content": "<p>2 minutes and then some till the meeting <span class=\"user-group-mention\" data-user-group-id=\"492\">@T-compiler</span>.</p>",
        "id": 148179777,
        "sender_full_name": "nagisa",
        "timestamp": 1542898666
    },
    {
        "content": "<p>Today is thanksgiving, so at least <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is known to be absent (also <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> is on a vacation).</p>",
        "id": 148179834,
        "sender_full_name": "nagisa",
        "timestamp": 1542898697
    },
    {
        "content": "<p>Please react somehow so I know who’s participating. If there’s nobody else but me, I might just do some triage myself and call it a day.</p>",
        "id": 148179844,
        "sender_full_name": "nagisa",
        "timestamp": 1542898716
    },
    {
        "content": "<p>Hi all!</p>",
        "id": 148179934,
        "sender_full_name": "nagisa",
        "timestamp": 1542898808
    },
    {
        "content": "<p>Without a further ado…</p>\n<p><strong><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+\">P-high T-compiler</a></strong> 2 issues.</p>",
        "id": 148179952,
        "sender_full_name": "nagisa",
        "timestamp": 1542898833
    },
    {
        "content": "<p><em>NLL error on closure, but not on equivalent function <a href=\"https://github.com/rust-lang/rust/issues/55526\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55526\"><a href=\"https://github.com/rust-lang/rust/issues/55526\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55526\">#55526</a></a></em> no progress, seems like <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> hadn’t an opportunity to look at this, leaving assigned to <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, hopefully next week either him or <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> looks at this.</p>",
        "id": 148179965,
        "sender_full_name": "nagisa",
        "timestamp": 1542898859
    },
    {
        "content": "<p><em>regression: stack overflow on macosx with xcode 6.4 <a href=\"https://github.com/rust-lang/rust/issues/55471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55471\"><a href=\"https://github.com/rust-lang/rust/issues/55471\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55471\">#55471</a></a></em> no change here either. We ran a crater and found no genuine regressions. Still some perf issues and portability still needs to be worked out. I hadn’t an opportunity to get back to my portability work, maybe <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> has anything more to say?</p>",
        "id": 148179992,
        "sender_full_name": "nagisa",
        "timestamp": 1542898888
    },
    {
        "content": "<p>I'll revert the base-stack sizes and exclude windows for now</p>",
        "id": 148180065,
        "sender_full_name": "oli",
        "timestamp": 1542898941
    },
    {
        "content": "<p>stacker has a PR to fix windows, but it needs a rebase and I don't understand what it does</p>",
        "id": 148180073,
        "sender_full_name": "oli",
        "timestamp": 1542898952
    },
    {
        "content": "<p>Okay. Is the stacker PR linked on the rustc PR?</p>",
        "id": 148180086,
        "sender_full_name": "nagisa",
        "timestamp": 1542898980
    },
    {
        "content": "<p>not yet, will cross-link</p>",
        "id": 148180104,
        "sender_full_name": "oli",
        "timestamp": 1542899006
    },
    {
        "content": "<p>Either way this issue won’t be \"fully\" fixed until we get all platforms working to some extent.</p>",
        "id": 148180107,
        "sender_full_name": "nagisa",
        "timestamp": 1542899009
    },
    {
        "content": "<p>/me shrugs</p>",
        "id": 148180150,
        "sender_full_name": "nagisa",
        "timestamp": 1542899043
    },
    {
        "content": "<p>Moving on,<br>\n<strong><a href=\"https://github.com/rust-lang/rust/milestone/55\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/milestone/55\">Rust 2018 Release milestone</a></strong> 2 issues. 1 issue is T-lang, though relevant to us, I think?</p>",
        "id": 148180167,
        "sender_full_name": "nagisa",
        "timestamp": 1542899059
    },
    {
        "content": "<p><em>Issue 56128 segment id ice nightly <a href=\"https://github.com/rust-lang/rust/issues/56143\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56143\"><a href=\"https://github.com/rust-lang/rust/issues/56143\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56143\">#56143</a></a></em>. beta-accepted. <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>  has reviewed it and left some comments.</p>",
        "id": 148180177,
        "sender_full_name": "nagisa",
        "timestamp": 1542899073
    },
    {
        "content": "<p>spoiler alert: this PR fixes a few issues we’ll talk about later on</p>",
        "id": 148180187,
        "sender_full_name": "nagisa",
        "timestamp": 1542899087
    },
    {
        "content": "<p>Seems to be WIP still?</p>",
        "id": 148180204,
        "sender_full_name": "mw",
        "timestamp": 1542899114
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> is on it :)</p>",
        "id": 148180218,
        "sender_full_name": "mw",
        "timestamp": 1542899134
    },
    {
        "content": "<p>yeah, it seems to still need some work on it</p>",
        "id": 148180219,
        "sender_full_name": "nagisa",
        "timestamp": 1542899137
    },
    {
        "content": "<p>Seems in good hands either way. Does anybody know whether long weekend is a thing in the US?</p>",
        "id": 148180278,
        "sender_full_name": "nagisa",
        "timestamp": 1542899164
    },
    {
        "content": "<p>Best case this will land on Friday.</p>",
        "id": 148180292,
        "sender_full_name": "nagisa",
        "timestamp": 1542899191
    },
    {
        "content": "<p>\"nikomatsakis added some commits 3 hours ago \" :P</p>",
        "id": 148180294,
        "sender_full_name": "mw",
        "timestamp": 1542899197
    },
    {
        "content": "<p>Next is <em>[beta] resolve: Implement edition hygiene for imports and absolute paths <a href=\"https://github.com/rust-lang/rust/issues/56053\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56053\"><a href=\"https://github.com/rust-lang/rust/issues/56053\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56053\">#56053</a></a></em> Crater recently failed with quite a few regressions, which seem to have been anticipated. Seems to be in good hands and covered so no action necessary unless somebody wants to discuss it somehow?</p>",
        "id": 148180305,
        "sender_full_name": "nagisa",
        "timestamp": 1542899214
    },
    {
        "content": "<p>This is otherwise a T-lang PR, so most of the decisions made here are for T-lang to make.</p>",
        "id": 148180340,
        "sender_full_name": "nagisa",
        "timestamp": 1542899274
    },
    {
        "content": "<p>But some of you might want to review the code etc.</p>",
        "id": 148180386,
        "sender_full_name": "nagisa",
        "timestamp": 1542899296
    },
    {
        "content": "<p>which is why I wanted to bring this to y'all’s attention.</p>",
        "id": 148180396,
        "sender_full_name": "nagisa",
        "timestamp": 1542899312
    },
    {
        "content": "<p>Next up,<br>\n<strong><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated\">beta-nominated</a></strong> Most issues reviewed previously in <a href=\"#narrow/stream/131828-t-compiler/subject/beta.20backports\" title=\"#narrow/stream/131828-t-compiler/subject/beta.20backports\">beta-backports thread earlier this week</a>. There is one beta-nominated issue that is yet to be reviewed.</p>",
        "id": 148180419,
        "sender_full_name": "nagisa",
        "timestamp": 1542899343
    },
    {
        "content": "<p>Which is… <em>Forward rust version number to tools <a href=\"https://github.com/rust-lang/rust/issues/56134\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56134\"><a href=\"https://github.com/rust-lang/rust/issues/56134\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56134\">#56134</a></a></em> Feels like T-infra/T-tools to me <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span> <span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> you should also label a team along with the beta-nominated flag.</p>",
        "id": 148180433,
        "sender_full_name": "nagisa",
        "timestamp": 1542899365
    },
    {
        "content": "<blockquote>\n<p>I did some more checking... None of the regressed crates on <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> seem to have any reverse dependencies (except for one crate which has a reverse dependency due to the same author; the transitive &amp; reflexive closure consists of 1 single reverse dep). The crates also don't seem to have many users. The ecosystem impact of this doesn't seem to be very notable.</p>\n</blockquote>\n<p>I'll take a look at the code, but I'd lean on Centril's assessment there.</p>",
        "id": 148180438,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542899371
    },
    {
        "content": "<p>ups, yea, will add teams to nominations from now on</p>",
        "id": 148180453,
        "sender_full_name": "oli",
        "timestamp": 1542899395
    },
    {
        "content": "<p>Am I correct that this is T-tools?</p>",
        "id": 148180508,
        "sender_full_name": "nagisa",
        "timestamp": 1542899417
    },
    {
        "content": "<p>yes, I tagged it as such now</p>",
        "id": 148180531,
        "sender_full_name": "oli",
        "timestamp": 1542899440
    },
    {
        "content": "<p>Great!</p>",
        "id": 148180537,
        "sender_full_name": "nagisa",
        "timestamp": 1542899445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you want to discuss that PR any further?</p>",
        "id": 148180552,
        "sender_full_name": "nagisa",
        "timestamp": 1542899469
    },
    {
        "content": "<p>Personally to me 64 broken crates seems scary, regardless of what those crates are</p>",
        "id": 148180575,
        "sender_full_name": "nagisa",
        "timestamp": 1542899502
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> no, just pointing my agreement with the stated positions in the PR without spamming it :)</p>",
        "id": 148180646,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542899555
    },
    {
        "content": "<p>Okay. Moving on then,</p>\n<p><strong><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3Astable-nominated\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3Astable-nominated\">stable-nominated</a></strong> 0 issues! <span class=\"emoji emoji-1f684\" title=\"high speed train\">:high_speed_train:</span></p>",
        "id": 148180655,
        "sender_full_name": "nagisa",
        "timestamp": 1542899575
    },
    {
        "content": "<p><strong><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-beta\">stable-to-beta-regressions</a></strong> 1 yet unreviewed issue.</p>",
        "id": 148180665,
        "sender_full_name": "nagisa",
        "timestamp": 1542899599
    },
    {
        "content": "<p><em>Beta ICE: ItemLocalIds not assigned densely <a href=\"https://github.com/rust-lang/rust/issues/56128\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56128\"><a href=\"https://github.com/rust-lang/rust/issues/56128\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56128\">#56128</a></a></em> the previously looked-at beta-accepted PR (<a href=\"https://github.com/rust-lang/rust/issues/56143\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56143\">#56143</a>) fixes this. P-high.</p>",
        "id": 148180669,
        "sender_full_name": "nagisa",
        "timestamp": 1542899604
    },
    {
        "content": "<p>Does P-high seem appropriate to everyone?</p>",
        "id": 148180686,
        "sender_full_name": "nagisa",
        "timestamp": 1542899619
    },
    {
        "content": "<p>The other beta regression is the stack overflow one which also is being worked on (stacker).</p>",
        "id": 148180759,
        "sender_full_name": "nagisa",
        "timestamp": 1542899702
    },
    {
        "content": "<p><strong><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-nightly\">stable-to-nightly-regressions</a></strong> 2 issues.</p>",
        "id": 148180773,
        "sender_full_name": "nagisa",
        "timestamp": 1542899724
    },
    {
        "content": "<p><em>Miscompilation since rustc 1.32.0-nightly (04fdb44f5 2018-11-03) <a href=\"https://github.com/rust-lang/rust/issues/56069\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56069\"><a href=\"https://github.com/rust-lang/rust/issues/56069\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56069\">#56069</a></a></em> no minimal test case. Anybody wants to look at this? Smells like they might have UB unsafe code to me.</p>",
        "id": 148180780,
        "sender_full_name": "nagisa",
        "timestamp": 1542899730
    },
    {
        "content": "<p>Might also be worthwhile to wait for the reporter to come up with a smaller reproducer as well</p>",
        "id": 148180852,
        "sender_full_name": "nagisa",
        "timestamp": 1542899786
    },
    {
        "content": "<p>Wrote a comment on the issue indirectly requesting for the reproducer</p>",
        "id": 148180956,
        "sender_full_name": "nagisa",
        "timestamp": 1542899913
    },
    {
        "content": "<p><em>Panic rustc 1.31.0-nightly (96064eb61 2018-10-28) running on x86_64-pc-windows-msvc: in hir_id_validator.rs:31 <a href=\"https://github.com/rust-lang/rust/issues/55475\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55475\"><a href=\"https://github.com/rust-lang/rust/issues/55475\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55475\">#55475</a></a></em> seems to be fixed by previously looked-at beta-accepted PR (<a href=\"https://github.com/rust-lang/rust/issues/56143\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56143\">#56143</a>). P-high.</p>",
        "id": 148180959,
        "sender_full_name": "nagisa",
        "timestamp": 1542899919
    },
    {
        "content": "<p>Any objections to P-high?</p>",
        "id": 148180967,
        "sender_full_name": "nagisa",
        "timestamp": 1542899935
    },
    {
        "content": "<p>/me decides to drive some conersation by interpreting +1 as an objection (not)</p>",
        "id": 148181015,
        "sender_full_name": "nagisa",
        "timestamp": 1542900002
    },
    {
        "content": "<p><strong><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\">S-waiting-on-team T-compiler</a> 0 issues!</strong></p>",
        "id": 148181063,
        "sender_full_name": "nagisa",
        "timestamp": 1542900039
    },
    {
        "content": "<p><strong><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen%20label%3AT-compiler%20label%3AI-nominated%20\">I-nominated T-compiler</a></strong> 3 issues (2 of them nominated for WG-compiler-nll, not us)</p>",
        "id": 148181074,
        "sender_full_name": "nagisa",
        "timestamp": 1542900060
    },
    {
        "content": "<p><em>Compiler in 1.30.1 stable reliably panics on Windows <a href=\"https://github.com/rust-lang/rust/issues/56095\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56095\"><a href=\"https://github.com/rust-lang/rust/issues/56095\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56095\">#56095</a></a></em> P-high, T1 platform. Could be related to windows machines having a tendency to accumulate uptime because it doesn’t do \"real\" restarts.</p>",
        "id": 148181086,
        "sender_full_name": "nagisa",
        "timestamp": 1542900078
    },
    {
        "content": "<p>I recall mildly Windows having a debug option to start counting uptime from a very high value</p>",
        "id": 148181101,
        "sender_full_name": "nagisa",
        "timestamp": 1542900106
    },
    {
        "content": "<p>react with a <span class=\"emoji emoji-1f44e\" title=\"thumbs down\">:thumbs_down:</span> if you don't dislike not misinterpreting <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span>s as objections.</p>",
        "id": 148181103,
        "sender_full_name": "mw",
        "timestamp": 1542900109
    },
    {
        "content": "<p>(also react with <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span> if you don’t disagree with P-high <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span>)</p>",
        "id": 148181156,
        "sender_full_name": "nagisa",
        "timestamp": 1542900142
    },
    {
        "content": "<p>this is really a libs issue</p>",
        "id": 148181166,
        "sender_full_name": "mw",
        "timestamp": 1542900172
    },
    {
        "content": "<p>but we should maybe work around it nonetheless</p>",
        "id": 148181175,
        "sender_full_name": "mw",
        "timestamp": 1542900184
    },
    {
        "content": "<p>Kind of, yes.</p>",
        "id": 148181179,
        "sender_full_name": "nagisa",
        "timestamp": 1542900185
    },
    {
        "content": "<p>makes me wonder though, why this is coming up only now</p>",
        "id": 148181195,
        "sender_full_name": "nagisa",
        "timestamp": 1542900203
    },
    {
        "content": "<p>Did something change in our compiler implementation? Perhaps there was some recent windows update that broke times?</p>",
        "id": 148181208,
        "sender_full_name": "nagisa",
        "timestamp": 1542900226
    },
    {
        "content": "<p>While we're relabelling, lets also add an <code>O-Windows</code> label</p>",
        "id": 148181210,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542900230
    },
    {
        "content": "<p>because -Z self-profile hit stable?</p>",
        "id": 148181216,
        "sender_full_name": "mw",
        "timestamp": 1542900240
    },
    {
        "content": "<p>i.e. the code seems to always be executed, not only if -Zself-profile is enabled</p>",
        "id": 148181273,
        "sender_full_name": "mw",
        "timestamp": 1542900277
    },
    {
        "content": "<p>Ah…</p>",
        "id": 148181279,
        "sender_full_name": "nagisa",
        "timestamp": 1542900289
    },
    {
        "content": "<p>maybe</p>",
        "id": 148181281,
        "sender_full_name": "mw",
        "timestamp": 1542900295
    },
    {
        "content": "<p>well, it seems there are two courses of action then:</p>",
        "id": 148181305,
        "sender_full_name": "nagisa",
        "timestamp": 1542900343
    },
    {
        "content": "<p>1. Investigate what change in the compiler caused this to get triggered now, and perhaps workaround it;</p>",
        "id": 148181357,
        "sender_full_name": "nagisa",
        "timestamp": 1542900364
    },
    {
        "content": "<p>there's a suggested fix here: <a href=\"https://github.com/rust-lang/rust/issues/51648\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/51648\">https://github.com/rust-lang/rust/issues/51648</a></p>",
        "id": 148181384,
        "sender_full_name": "mw",
        "timestamp": 1542900386
    },
    {
        "content": "<p>2. (T-libs) Figure out what causes a <em>monotonically</em> increasing timer to not increase in such a way.</p>",
        "id": 148181399,
        "sender_full_name": "nagisa",
        "timestamp": 1542900400
    },
    {
        "content": "<p>I think we should:<br>\n1. ask <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> to implement the work-around</p>",
        "id": 148181504,
        "sender_full_name": "mw",
        "timestamp": 1542900483
    },
    {
        "content": "<p>2. open a T-libs issue about <code>fn elapsed()</code> panicking unexpectedly</p>",
        "id": 148181532,
        "sender_full_name": "mw",
        "timestamp": 1542900509
    },
    {
        "content": "<p>Is there a ticket for the latter?</p>",
        "id": 148181535,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542900512
    },
    {
        "content": "<p>I haven't looked actually</p>",
        "id": 148181544,
        "sender_full_name": "mw",
        "timestamp": 1542900535
    },
    {
        "content": "<p>I’m not aware of one, but can’t say I’ve looked for it either</p>",
        "id": 148181555,
        "sender_full_name": "nagisa",
        "timestamp": 1542900544
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+elapsed+panic\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+elapsed+panic\">https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+elapsed+panic</a> nothing other than <code>rustc</code> tickets here</p>",
        "id": 148181598,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542900583
    },
    {
        "content": "<p>Ah, and for the record, it seems to me that this issue is indeed a duplicate of the linked issue</p>",
        "id": 148181605,
        "sender_full_name": "nagisa",
        "timestamp": 1542900599
    },
    {
        "content": "<p>(by <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>)</p>",
        "id": 148181658,
        "sender_full_name": "nagisa",
        "timestamp": 1542900608
    },
    {
        "content": "<p>regardless of what the reporter says about it being more intermittent.</p>",
        "id": 148181668,
        "sender_full_name": "nagisa",
        "timestamp": 1542900626
    },
    {
        "content": "<p>How often it happens is probably just an interaction with newer code in rustc</p>",
        "id": 148181709,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542900669
    },
    {
        "content": "<p>Okay, there seems to be some more activity going on, but lets just move on</p>",
        "id": 148181819,
        "sender_full_name": "nagisa",
        "timestamp": 1542900774
    },
    {
        "content": "<p><em>Add a forever unstable opt-out of const qualification checks <a href=\"https://github.com/rust-lang/rust/issues/56123\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56123\"><a href=\"https://github.com/rust-lang/rust/issues/56123\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/56123\">#56123</a></a></em> That’s a PR. <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> care to elaborate what the question here is?</p>",
        "id": 148181823,
        "sender_full_name": "nagisa",
        "timestamp": 1542900779
    },
    {
        "content": "<p>The conversation in the PR is mostly about the colour of the shed</p>",
        "id": 148181920,
        "sender_full_name": "nagisa",
        "timestamp": 1542900849
    },
    {
        "content": "<p>i.e. what the flag/feature name should be named like.</p>",
        "id": 148181934,
        "sender_full_name": "nagisa",
        "timestamp": 1542900860
    },
    {
        "content": "<p>the question is whether we want a feature that is unsound to use by definition</p>",
        "id": 148181937,
        "sender_full_name": "oli",
        "timestamp": 1542900867
    },
    {
        "content": "<p>it is great for testing and demonstrating unsoundness</p>",
        "id": 148181942,
        "sender_full_name": "oli",
        "timestamp": 1542900876
    },
    {
        "content": "<p>well as long as it is a forever unstable debug feature, why not</p>",
        "id": 148181982,
        "sender_full_name": "nagisa",
        "timestamp": 1542900894
    },
    {
        "content": "<p>it is always wrong to be used in user-space</p>",
        "id": 148181985,
        "sender_full_name": "oli",
        "timestamp": 1542900896
    },
    {
        "content": "<blockquote>\n<p>demonstrating unsoundness</p>\n</blockquote>\n<p>that doesn’t sound like a good reason to add a debug flag though</p>",
        "id": 148182014,
        "sender_full_name": "nagisa",
        "timestamp": 1542900922
    },
    {
        "content": "<p>I could see myself agreeing to it if it was instead marketed as </p>\n<blockquote>\n<p>testing miri</p>\n</blockquote>",
        "id": 148182019,
        "sender_full_name": "nagisa",
        "timestamp": 1542900939
    },
    {
        "content": "<p>well... for RFCs around const stuff it's very hard to explain things</p>",
        "id": 148182021,
        "sender_full_name": "oli",
        "timestamp": 1542900944
    },
    {
        "content": "<p>we had weirder debug flags either way</p>",
        "id": 148182109,
        "sender_full_name": "nagisa",
        "timestamp": 1542901025
    },
    {
        "content": "<p>I'm not gonna market a feature in a way that I'm not planning on using it just to get it merged</p>",
        "id": 148182116,
        "sender_full_name": "oli",
        "timestamp": 1542901037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> are the demonstrations for the purpose of writing RFCs?</p>",
        "id": 148182136,
        "sender_full_name": "nagisa",
        "timestamp": 1542901079
    },
    {
        "content": "<p>yes</p>",
        "id": 148182180,
        "sender_full_name": "oli",
        "timestamp": 1542901091
    },
    {
        "content": "<p>mostly giving examples why alternative X won't work</p>",
        "id": 148182192,
        "sender_full_name": "oli",
        "timestamp": 1542901109
    },
    {
        "content": "<p>Would \"internal unstable\" (like the scope inside <code>println</code>) be appropriate for this?</p>",
        "id": 148182201,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901121
    },
    {
        "content": "<p>no, the libstd should never use this feature</p>",
        "id": 148182217,
        "sender_full_name": "oli",
        "timestamp": 1542901142
    },
    {
        "content": "<p>I can in fact add assertions that guarantee it's not used in the libstd</p>",
        "id": 148182237,
        "sender_full_name": "oli",
        "timestamp": 1542901174
    },
    {
        "content": "<p>making this feature a flag would make it impossible to misuse within libstd</p>",
        "id": 148182298,
        "sender_full_name": "nagisa",
        "timestamp": 1542901213
    },
    {
        "content": "<p>or most of the code, really</p>",
        "id": 148182303,
        "sender_full_name": "nagisa",
        "timestamp": 1542901220
    },
    {
        "content": "<p>indeed</p>",
        "id": 148182306,
        "sender_full_name": "oli",
        "timestamp": 1542901224
    },
    {
        "content": "<p>that is a good argument for making it a flag</p>",
        "id": 148182313,
        "sender_full_name": "oli",
        "timestamp": 1542901236
    },
    {
        "content": "<p>I'll bring this up in the PR</p>",
        "id": 148182315,
        "sender_full_name": "oli",
        "timestamp": 1542901246
    },
    {
        "content": "<p>#[feature(nll)] made a lot of sense for experiments</p>",
        "id": 148182348,
        "sender_full_name": "nagisa",
        "timestamp": 1542901265
    },
    {
        "content": "<p>but it also was indended to be used by crates</p>",
        "id": 148182352,
        "sender_full_name": "nagisa",
        "timestamp": 1542901274
    },
    {
        "content": "<p>Just saying, that we definitely had (and have) all sorts of weird -Z flags most of which are never used except in very specific situations by few people</p>",
        "id": 148182432,
        "sender_full_name": "nagisa",
        "timestamp": 1542901379
    },
    {
        "content": "<p>Okay, lets move on.</p>",
        "id": 148182449,
        "sender_full_name": "nagisa",
        "timestamp": 1542901408
    },
    {
        "content": "<p><strong><a href=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/labels/regression-from-stable-to-stable\">regression-stable-to-stable</a></strong></p>\n<p><em>Internal Compiler Error in 1.30 and 1.31 <a href=\"https://github.com/rust-lang/rust/issues/55846\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55846\"><a href=\"https://github.com/rust-lang/rust/issues/55846\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/55846\">#55846</a></a></em> seems to have been fixed in beta, a fix needs to be identified and perhaps backported. Also tested. Unless somebody volunteers, nothing to discuss here.</p>",
        "id": 148182451,
        "sender_full_name": "nagisa",
        "timestamp": 1542901414
    },
    {
        "content": "<p>/me looks around the room for volunteers</p>",
        "id": 148182456,
        "sender_full_name": "nagisa",
        "timestamp": 1542901429
    },
    {
        "content": "<p>Well it’s fixed anyway, <span class=\"emoji emoji-1f38a\" title=\"party ball\">:party_ball:</span>!</p>",
        "id": 148182515,
        "sender_full_name": "nagisa",
        "timestamp": 1542901480
    },
    {
        "content": "<p>There also some more issues, but they all seem to be reviewed already.</p>",
        "id": 148182555,
        "sender_full_name": "nagisa",
        "timestamp": 1542901534
    },
    {
        "content": "<p>Finding the PR that fixed it would be nice to verify that a test was added.</p>",
        "id": 148182560,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901541
    },
    {
        "content": "<p>Otherwise we'll need to come up with a repro.</p>",
        "id": 148182567,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901550
    },
    {
        "content": "<p>We kinda have one, don’t we</p>",
        "id": 148182633,
        "sender_full_name": "nagisa",
        "timestamp": 1542901596
    },
    {
        "content": "<p>(I mean we verified it as fixed using the (quite large, admittedly) piece of code that’s linked to on the issue)</p>",
        "id": 148182654,
        "sender_full_name": "nagisa",
        "timestamp": 1542901624
    },
    {
        "content": "<p>Right, it just needs minifying :)</p>",
        "id": 148182681,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901658
    },
    {
        "content": "<p>Well that’s not critical at all <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 148182687,
        "sender_full_name": "nagisa",
        "timestamp": 1542901671
    },
    {
        "content": "<p>/me marks as E-help-wanted will write up what needs to be done</p>",
        "id": 148182741,
        "sender_full_name": "nagisa",
        "timestamp": 1542901698
    },
    {
        "content": "<p>we could slap <code>E-easy</code> <code>E-mentor</code> on it</p>",
        "id": 148182747,
        "sender_full_name": "varkor",
        "timestamp": 1542901703
    },
    {
        "content": "<p>thanks, Zulip, notifications only on my phone, which I wasn't looking at...</p>",
        "id": 148182758,
        "sender_full_name": "eddyb",
        "timestamp": 1542901723
    },
    {
        "content": "<p><strong>all</strong> the <code>E-</code> flags!</p>",
        "id": 148182760,
        "sender_full_name": "varkor",
        "timestamp": 1542901729
    },
    {
        "content": "<p>that concludes the agenda, mostly (I skipped looking at RFCs etc, which we don’t usually look at)</p>",
        "id": 148182776,
        "sender_full_name": "nagisa",
        "timestamp": 1542901746
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121053\">@varkor</span> I usually slap <code>E-easy</code> until I have time to come back and write mentoring instructions and add <code>E-mentor</code> only then :)</p>",
        "id": 148182781,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901750
    },
    {
        "content": "<p>anybody wants to raise a topic for discussion?</p>",
        "id": 148182794,
        "sender_full_name": "nagisa",
        "timestamp": 1542901764
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/55373\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55373\">https://github.com/rust-lang/rust/pull/55373</a></p>",
        "id": 148182806,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>: in this case, the mentoring instructions should be: \"reduce this test case as much as possible\", so should be easy to write up :P</p>",
        "id": 148182811,
        "sender_full_name": "varkor",
        "timestamp": 1542901792
    },
    {
        "content": "<p>It's a very much WIP fix to an incorrectly allowed macro definition</p>",
        "id": 148182877,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901829
    },
    {
        "content": "<p>/me thinks</p>",
        "id": 148182884,
        "sender_full_name": "nagisa",
        "timestamp": 1542901836
    },
    {
        "content": "<p>The fallout is large</p>",
        "id": 148182886,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901839
    },
    {
        "content": "<p>while yes <code> </code> is not really a part of the FOLLOWS list for <code>$EXPR</code>…</p>",
        "id": 148182901,
        "sender_full_name": "nagisa",
        "timestamp": 1542901860
    },
    {
        "content": "<p>I'll put in the work to turn it into a proper lint, which will be warn by default</p>",
        "id": 148182904,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901863
    },
    {
        "content": "<p>But this will still have a large fallout throughout many macro defining crates</p>",
        "id": 148182930,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901897
    },
    {
        "content": "<p>Even <code>rustc</code> was guilty of exploiting this a lot!</p>",
        "id": 148182953,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901919
    },
    {
        "content": "<p>Well, it is quite easy to <code>$($x:expr)*</code> <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 148183005,
        "sender_full_name": "nagisa",
        "timestamp": 1542901937
    },
    {
        "content": "<p>Indeed</p>",
        "id": 148183020,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542901957
    },
    {
        "content": "<p>how does it behave currently?</p>",
        "id": 148183026,
        "sender_full_name": "nagisa",
        "timestamp": 1542901961
    },
    {
        "content": "<p>does it greedily consume expressions separated by a space?</p>",
        "id": 148183038,
        "sender_full_name": "nagisa",
        "timestamp": 1542901979
    },
    {
        "content": "<p>IIRC, it does</p>",
        "id": 148183089,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902027
    },
    {
        "content": "<p>Seems like a sensible behaviour given the code</p>",
        "id": 148183145,
        "sender_full_name": "nagisa",
        "timestamp": 1542902067
    },
    {
        "content": "<p>It seems sensible to lint this essentially forever</p>",
        "id": 148183164,
        "sender_full_name": "nagisa",
        "timestamp": 1542902099
    },
    {
        "content": "<p>It doesn't <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=c27c674a45d16949c84452504e2e67e4\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=c27c674a45d16949c84452504e2e67e4\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=c27c674a45d16949c84452504e2e67e4</a></p>",
        "id": 148183185,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902117
    },
    {
        "content": "<p>It seems to work in a greedy manner</p>",
        "id": 148183206,
        "sender_full_name": "nagisa",
        "timestamp": 1542902153
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=7dadb31228b7363b3270d83f90ae6505\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=7dadb31228b7363b3270d83f90ae6505\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=7dadb31228b7363b3270d83f90ae6505</a></p>",
        "id": 148183257,
        "sender_full_name": "nagisa",
        "timestamp": 1542902178
    },
    {
        "content": "<p>while sure macro invocation appears to be super ambiguous.</p>",
        "id": 148183277,
        "sender_full_name": "nagisa",
        "timestamp": 1542902208
    },
    {
        "content": "<p>I guess the issue here is compatibility hazard</p>",
        "id": 148183288,
        "sender_full_name": "nagisa",
        "timestamp": 1542902219
    },
    {
        "content": "<p>Yep, I feel that this will have to be a perma-warn lint</p>",
        "id": 148183322,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902257
    },
    {
        "content": "<p>oh, and where lints are impossible, it is fine to just warn</p>",
        "id": 148183386,
        "sender_full_name": "nagisa",
        "timestamp": 1542902292
    },
    {
        "content": "<p>especially in cases like these <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 148183390,
        "sender_full_name": "nagisa",
        "timestamp": 1542902296
    },
    {
        "content": "<p>does not make sense to give people ability to disable warning about buggy code that should be fixed</p>",
        "id": 148183399,
        "sender_full_name": "nagisa",
        "timestamp": 1542902320
    },
    {
        "content": "<p>We're gonna get a lot of complaints...</p>",
        "id": 148183418,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902334
    },
    {
        "content": "<p>or <code>deny(warnings)</code> while at that.</p>",
        "id": 148183419,
        "sender_full_name": "nagisa",
        "timestamp": 1542902335
    },
    {
        "content": "<p>It is a bug.</p>",
        "id": 148183434,
        "sender_full_name": "nagisa",
        "timestamp": 1542902346
    },
    {
        "content": "<p>If we just warn (I'd be down with that), it'd make sense to keep it nightly only for two releases</p>",
        "id": 148183451,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902361
    },
    {
        "content": "<p>even though it is a bug fix, widely used crates exploit it</p>",
        "id": 148183468,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902379
    },
    {
        "content": "<p>including the generated serde code</p>",
        "id": 148183478,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902391
    },
    {
        "content": "<p>keeping it nightly only for two releases should give the community time to move away from using this, and then we can enable it for all channels from then on</p>",
        "id": 148183559,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902434
    },
    {
        "content": "<p>what do y'all think?</p>",
        "id": 148183562,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902437
    },
    {
        "content": "<p>\"it\" here being the warning</p>",
        "id": 148183589,
        "sender_full_name": "nagisa",
        "timestamp": 1542902474
    },
    {
        "content": "<p>Correct, a lint wouldn't need this much glove-handling</p>",
        "id": 148183607,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902516
    },
    {
        "content": "<p>as each project could just adjust it and carry on as they were at their leisure</p>",
        "id": 148183650,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902532
    },
    {
        "content": "<p>Well, thanks all for participating.</p>",
        "id": 148183678,
        "sender_full_name": "nagisa",
        "timestamp": 1542902594
    },
    {
        "content": "<p>Sorry for derailing the ending there ^_^</p>",
        "id": 148183691,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1542902614
    },
    {
        "content": "<p>Its fine, we had time <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 148183695,
        "sender_full_name": "nagisa",
        "timestamp": 1542902622
    },
    {
        "content": "<p>doesn’t happen too often</p>",
        "id": 148183699,
        "sender_full_name": "nagisa",
        "timestamp": 1542902631
    },
    {
        "content": "<p>Thanks for driving the meeting, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> ! <span class=\"emoji emoji-2764\" title=\"heart\">:heart:</span></p>",
        "id": 148184638,
        "sender_full_name": "mw",
        "timestamp": 1542903958
    }
]