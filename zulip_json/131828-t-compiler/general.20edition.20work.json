[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> so I noticed this the other day <a href=\"https://github.com/rust-lang/rust/issues/54230\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54230\">https://github.com/rust-lang/rust/issues/54230</a> and I was thinking this would be a nice thing to do for the 2018 release to help people transition</p>",
        "id": 133957613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936534
    },
    {
        "content": "<p>I'm not sure if there's another issue about it</p>",
        "id": 133957617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936542
    },
    {
        "content": "<p>anyway, thought you might enjoy it if you are looking for something different</p>",
        "id": 133957626,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936554
    },
    {
        "content": "<p>Sounds good, I'll assign and take a look.</p>",
        "id": 133957926,
        "sender_full_name": "davidtwco",
        "timestamp": 1536936796
    },
    {
        "content": "<p>if we don't want to be <em>too</em> smart, this is real easy</p>",
        "id": 133957956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936841
    },
    {
        "content": "<p>I guess that .. ideally .. we might also compare against possible crate names?</p>",
        "id": 133958005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936853
    },
    {
        "content": "<p>well, best thing seems like it would be to compare against names in the root + possible crate names, but the former might be tricky to enumerate; we probably don't have a \"complete\" list at the time. But we could get an \"incomplete\" list relatively easily</p>",
        "id": 133958024,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936891
    },
    {
        "content": "<p>should probably ping <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> or <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> for thoughts</p>",
        "id": 133958044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936908
    },
    {
        "content": "<p>(done)</p>",
        "id": 133958146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536936989
    },
    {
        "content": "<p>wait, what list of crates?</p>",
        "id": 133960333,
        "sender_full_name": "eddyb",
        "timestamp": 1536938569
    },
    {
        "content": "<p>from the prelude?</p>",
        "id": 133960364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938594
    },
    {
        "content": "<p>one thing that I'm not sure everyone's on board with: migration code should remove \"extern crate\" only when redundant with extern_prelude crates</p>",
        "id": 133960405,
        "sender_full_name": "eddyb",
        "timestamp": 1536938634
    },
    {
        "content": "<p>if we see <code>use foo::bar::baz</code>  and <code>foo</code> is not valid, we should try to help the user find things they might have meant, is what I am saying. I am particularly interested in the case of helping people overcome 2015 \"muscle memory\", but it's probably good to also help people by suggesting crates.</p>",
        "id": 133960423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938642
    },
    {
        "content": "<blockquote>\n<p>one thing that I'm not sure everyone's on board with: migration code should remove \"extern crate\" only when redundant with extern_prelude crates</p>\n</blockquote>\n<p>define \"redundant\"?</p>",
        "id": 133960470,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938658
    },
    {
        "content": "<p>I think I'm on board with that...</p>",
        "id": 133960474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938665
    },
    {
        "content": "<p>there are some weird cases where you could re-write to <code>use crate_name;</code> I guess</p>",
        "id": 133960487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938686
    },
    {
        "content": "<p>I mean, you can't remove extern crate rustc</p>",
        "id": 133960514,
        "sender_full_name": "eddyb",
        "timestamp": 1536938729
    },
    {
        "content": "<p>but you can remove extern crate cargodep</p>",
        "id": 133960525,
        "sender_full_name": "eddyb",
        "timestamp": 1536938742
    },
    {
        "content": "<p>yes ok</p>",
        "id": 133960529,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938753
    },
    {
        "content": "<p>we're too aggressive now in other words, because we don't check that</p>",
        "id": 133960575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938764
    },
    {
        "content": "<p>(seems right)</p>",
        "id": 133960580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1536938767
    },
    {
        "content": "<p>well, <em>if</em> we don't check that. idk</p>",
        "id": 133960654,
        "sender_full_name": "eddyb",
        "timestamp": 1536938847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I <a href=\"https://github.com/rust-lang/rust/issues/54230#issuecomment-421814679\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54230#issuecomment-421814679\">added a comment to the issue</a>: at some point the error has changed and it does now make a suggestion. Is this still something we want to look at?</p>",
        "id": 134064642,
        "sender_full_name": "davidtwco",
        "timestamp": 1537124841
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> not sure if I was ambigious in the comment: that error was changed without my doing anything - some other PR landed it. So I'm not sure how much there is to do for that issue anymore.</p>",
        "id": 134107363,
        "sender_full_name": "davidtwco",
        "timestamp": 1537197697
    },
    {
        "content": "<p>I don't think it's a very good suggestion</p>",
        "id": 134107484,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537197812
    },
    {
        "content": "<p>(personally)</p>",
        "id": 134107487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537197817
    },
    {
        "content": "<p>but it's not <em>wrong</em></p>",
        "id": 134107501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537197829
    },
    {
        "content": "<p>that said</p>",
        "id": 134107552,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537197851
    },
    {
        "content": "<p>if we modify the test slightly...</p>",
        "id": 134107558,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537197856
    },
    {
        "content": "<p>If there are improvements you'd like to see made then I can still work on doing that. I just noticed that the error had changed while I was digging around at the weekend and wasn't sure if there was still work to be done as a result.</p>",
        "id": 134107575,
        "sender_full_name": "davidtwco",
        "timestamp": 1537197875
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/54230#issuecomment-422060771\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54230#issuecomment-422060771\">left a comment</a></p>",
        "id": 134107595,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537197900
    },
    {
        "content": "<p>yeah, the exact thing to do is a bit unclear</p>",
        "id": 134107604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537197908
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0432]: unresolved import `foo`\n  --&gt; src/test/ui/rust-2018/local-path-suggestions.rs:18:9\n   |\n18 |     use foo::Bar;\n   |         ^^^ Could not find `foo` in `{{root}}`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0432`.\n</pre></div>",
        "id": 134107685,
        "sender_full_name": "davidtwco",
        "timestamp": 1537197966
    },
    {
        "content": "<p>I guess I can work on improving the above.</p>",
        "id": 134107695,
        "sender_full_name": "davidtwco",
        "timestamp": 1537197982
    },
    {
        "content": "<p>(that's from the example in the comment you left)</p>",
        "id": 134107720,
        "sender_full_name": "davidtwco",
        "timestamp": 1537198017
    },
    {
        "content": "<p>that's what I would expect, yes</p>",
        "id": 134108032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198334
    },
    {
        "content": "<p>the other case I would like to see improved is something like <code>use tsd::foo</code></p>",
        "id": 134108040,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198351
    },
    {
        "content": "<p>which would ideally suggest <code>std</code></p>",
        "id": 134108043,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198355
    },
    {
        "content": "<p>(or maybe it does?)</p>",
        "id": 134108044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198358
    },
    {
        "content": "<p>this applies to <code>use foo</code> too, potentialy</p>",
        "id": 134108046,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198363
    },
    {
        "content": "<p>basically I think we should look for:</p>\n<ul>\n<li>crates with \"similar\" names (and suggest that alternative)</li>\n<li>modules/items in the root with \"similar\" names (and suggest <code>use crate::module_name</code>)</li>\n</ul>\n<p>but we could start by looking for modules/items in the root with an <em>exact</em> match</p>",
        "id": 134108078,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198419
    },
    {
        "content": "<p>Doing <code>use tsd::path</code> doesn't suggest <code>use std::path</code>.</p>",
        "id": 134108079,
        "sender_full_name": "davidtwco",
        "timestamp": 1537198421
    },
    {
        "content": "<p>(I'm not 100% sure how to do it, though)</p>",
        "id": 134108084,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198429
    },
    {
        "content": "<p>Just the same error as above with the <code>{{root}}</code>.</p>",
        "id": 134108094,
        "sender_full_name": "davidtwco",
        "timestamp": 1537198436
    },
    {
        "content": "<p>ok</p>",
        "id": 134108098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1537198442
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Submitted a PR for the above: <a href=\"https://github.com/rust-lang/rust/issues/54391\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/54391\">#54391</a> - apologies for the delay on it, didn't find time to look at it as quickly as I'd hoped. </p>\n<p>Happy to change up how it is implemented if it isn't what you had in mind - error reporting logic seems fairly scattered in the resolve crate and I wasn't sure at which point to insert the suggestions, since there were a handful of places where similar suggestions are added currently. Not sure about the <code>resolve_self_super_hint.rs</code> test case change either.</p>",
        "id": 134315625,
        "sender_full_name": "davidtwco",
        "timestamp": 1537456382
    }
]