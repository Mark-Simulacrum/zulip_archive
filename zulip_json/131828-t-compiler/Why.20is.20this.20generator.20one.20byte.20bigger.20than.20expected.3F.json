[
    {
        "content": "<p>I expect the generator returned from <code>overlap_x_and_y</code> to be 1025 bytes. (1024 bytes for <code>Foo</code> + 1 byte for the discriminant) When compiling using cg_clif this is indeed true. However when compiling using cg_llvm it gives 1026 bytes. This mismatch causes the <code>size-moved-locals.rs</code> test to fail for cg_clif.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// based on size-moved-locals.rs</span>\n<span class=\"cp\">#![feature(generators, generator_trait)]</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">ops</span>::<span class=\"n\">Generator</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">FOO_SIZE</span>: <span class=\"kt\">usize</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1024</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"p\">([</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">FOO_SIZE</span><span class=\"p\">]);</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"nb\">Drop</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">drop</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">overlap_x_and_y</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"n\">Generator</span><span class=\"o\">&lt;</span><span class=\"n\">Yield</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">Return</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">FOO_SIZE</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kr\">yield</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">drop</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">FOO_SIZE</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kr\">yield</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">drop</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">assert_eq</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"mi\">1026</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">mem</span>::<span class=\"n\">size_of_val</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">overlap_x_and_y</span><span class=\"p\">()));</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 197066422,
        "sender_full_name": "bjorn3",
        "timestamp": 1589130616
    },
    {
        "content": "<p>The extra byte looks to be a drop flag</p>",
        "id": 197066848,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1589131171
    },
    {
        "content": "<p>I'm not sure why compiling for <code>cg_clif</code> would change this.</p>",
        "id": 197066937,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1589131251
    },
    {
        "content": "<p>Why do we still have drop flags anywhere?</p>",
        "id": 197066959,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589131318
    },
    {
        "content": "<p>Oh, <em>across</em>  a yield</p>",
        "id": 197067004,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589131335
    },
    {
        "content": "<p>But there are no dynamic drops in that generator</p>",
        "id": 197067025,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589131373
    },
    {
        "content": "<p>Layout of the generator:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: layout_of([static generator@src/main.rs:16:5: 23:6 {Foo, ()}]) = Layout {\n    fields: Arbitrary {\n        offsets: [\n            Size {\n                raw: 0,\n            },\n        ],\n        memory_index: [\n            0,\n        ],\n    },\n    variants: Multiple {\n        discr: Scalar {\n            value: Int(\n                I8,\n                false,\n            ),\n            valid_range: 0..=4,\n        },\n        discr_kind: Tag,\n        discr_index: 0,\n        variants: [\n            Layout {\n                fields: Arbitrary {\n                    offsets: [],\n                    memory_index: [],\n                },\n                variants: Single {\n                    index: 0,\n                },\n                abi: Aggregate {\n                    sized: true,\n                },\n                largest_niche: None,\n                align: AbiAndPrefAlign {\n                    abi: Align {\n                        pow2: 0,\n                    },\n                    pref: Align {\n                        pow2: 3,\n                    },\n                },\n                size: Size {\n                    raw: 2,\n                },\n            },\n            Layout {\n                fields: Arbitrary {\n                    offsets: [],\n                    memory_index: [],\n                },\n                variants: Single {\n                    index: 1,\n                },\n                abi: Aggregate {\n                    sized: true,\n                },\n                largest_niche: None,\n                align: AbiAndPrefAlign {\n                    abi: Align {\n                        pow2: 0,\n                    },\n                    pref: Align {\n                        pow2: 3,\n                    },\n                },\n                size: Size {\n                    raw: 2,\n                },\n            },\n            Layout {\n                fields: Arbitrary {\n                    offsets: [],\n                    memory_index: [],\n                },\n                variants: Single {\n                    index: 2,\n                },\n                abi: Aggregate {\n                    sized: true,\n                },\n                largest_niche: None,\n                align: AbiAndPrefAlign {\n                    abi: Align {\n                        pow2: 0,\n                    },\n                    pref: Align {\n                        pow2: 3,\n                    },\n                },\n                size: Size {\n                    raw: 2,\n                },\n            },\n            Layout {\n                fields: Arbitrary {\n                    offsets: [\n                        Size {\n                            raw: 2,\n                        },\n                        Size {\n                            raw: 1,\n                        },\n                    ],\n                    memory_index: [\n                        1,\n                        0,\n                    ],\n                },\n                variants: Single {\n                    index: 3,\n                },\n                abi: Aggregate {\n                    sized: true,\n                },\n                largest_niche: None,\n                align: AbiAndPrefAlign {\n                    abi: Align {\n                        pow2: 0,\n                    },\n                    pref: Align {\n                        pow2: 3,\n                    },\n                },\n                size: Size {\n                    raw: 1026,\n                },\n            },\n            Layout {\n                fields: Arbitrary {\n                    offsets: [\n                        Size {\n                            raw: 2,\n                        },\n                        Size {\n                            raw: 1,\n                        },\n                    ],\n                    memory_index: [\n                        1,\n                        0,\n                    ],\n                },\n                variants: Single {\n                    index: 4,\n                },\n                abi: Aggregate {\n                    sized: true,\n                },\n                largest_niche: None,\n                align: AbiAndPrefAlign {\n                    abi: Align {\n                        pow2: 0,\n                    },\n                    pref: Align {\n                        pow2: 3,\n                    },\n                },\n                size: Size {\n                    raw: 1026,\n                },\n            },\n        ],\n    },\n    abi: Aggregate {\n        sized: true,\n    },\n    largest_niche: Some(\n        Niche {\n            offset: Size {\n                raw: 0,\n            },\n            scalar: Scalar {\n                value: Int(\n                    I8,\n                    false,\n                ),\n                valid_range: 0..=4,\n            },\n        },\n    ),\n    align: AbiAndPrefAlign {\n        abi: Align {\n            pow2: 0,\n        },\n        pref: Align {\n            pow2: 3,\n        },\n    },\n    size: Size {\n        raw: 1026,\n    },\n}\n</code></pre></div>",
        "id": 197067048,
        "sender_full_name": "bjorn3",
        "timestamp": 1589131393
    },
    {
        "content": "<p>MIR of the generator:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">overlap_x_and_y</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span><span class=\"err\">#</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"n\">_1</span>: <span class=\"nc\">std</span>::<span class=\"n\">pin</span>::<span class=\"n\">Pin</span><span class=\"o\">&lt;&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_2</span>: <span class=\"p\">())</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">std</span>::<span class=\"n\">ops</span>::<span class=\"n\">GeneratorState</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_0</span>: <span class=\"nc\">std</span>::<span class=\"n\">ops</span>::<span class=\"n\">GeneratorState</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// return place in scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_3</span>: <span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">];</span><span class=\"w\">                 </span><span class=\"c1\">// in scope 0 at src/main.rs:17:21: 17:34</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_4</span>: <span class=\"p\">();</span><span class=\"w\">                      </span><span class=\"c1\">// in scope 0 at src/main.rs:18:9: 18:14</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_5</span>: <span class=\"p\">();</span><span class=\"w\">                          </span><span class=\"c1\">// in scope 0 at src/main.rs:19:9: 19:16</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_6</span>: <span class=\"nc\">Foo</span><span class=\"p\">;</span><span class=\"w\">                     </span><span class=\"c1\">// in scope 0 at src/main.rs:19:14: 19:15</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_7</span>: <span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">];</span><span class=\"w\">                 </span><span class=\"c1\">// in scope 0 at src/main.rs:20:21: 20:34</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_8</span>: <span class=\"p\">();</span><span class=\"w\">                      </span><span class=\"c1\">// in scope 0 at src/main.rs:21:9: 21:14</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_9</span>: <span class=\"p\">();</span><span class=\"w\">                          </span><span class=\"c1\">// in scope 0 at src/main.rs:22:9: 22:16</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_10</span>: <span class=\"nc\">Foo</span><span class=\"p\">;</span><span class=\"w\">                    </span><span class=\"c1\">// in scope 0 at src/main.rs:22:14: 22:15</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_11</span>: <span class=\"p\">();</span><span class=\"w\">                     </span><span class=\"c1\">// in scope 0 at src/main.rs:16:15: 16:15</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_12</span>: <span class=\"kt\">isize</span><span class=\"p\">;</span><span class=\"w\">                  </span><span class=\"c1\">// in scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">    </span><span class=\"n\">scope</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"nc\">Foo</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// in scope 1 at src/main.rs:17:13: 17:14</span>\n<span class=\"w\">        </span><span class=\"n\">scope</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">4</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"nc\">Foo</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// in scope 2 at src/main.rs:20:13: 20:14</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb0</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">discriminant</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}])));</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">        </span><span class=\"n\">switchInt</span><span class=\"p\">(</span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_12</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"k\">u32</span>: <span class=\"nc\">bb1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"k\">u32</span>: <span class=\"nc\">bb10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"k\">u32</span>: <span class=\"nc\">bb9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"k\">u32</span>: <span class=\"nc\">bb7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"k\">u32</span>: <span class=\"nc\">bb8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">otherwise</span>: <span class=\"nc\">bb11</span><span class=\"p\">];</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb1</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">1</span>: <span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:17:13: 17:14</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_3</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 0 at src/main.rs:17:21: 17:34</span>\n<span class=\"w\">        </span><span class=\"n\">_3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"k\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">FOO_SIZE</span><span class=\"p\">];</span><span class=\"w\">      </span><span class=\"c1\">// scope 0 at src/main.rs:17:21: 17:34</span>\n<span class=\"w\">        </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">1</span>: <span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:17:17: 17:35</span>\n<span class=\"w\">        </span><span class=\"p\">((((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"nc\">Foo</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_3</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:17:17: 17:35</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_3</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 0 at src/main.rs:17:34: 17:35</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_4</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:18:9: 18:14</span>\n<span class=\"w\">        </span><span class=\"p\">((</span><span class=\"n\">_0</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Yielded</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"p\">())</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_4</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 1 at src/main.rs:18:9: 18:14</span>\n<span class=\"w\">        </span><span class=\"n\">discriminant</span><span class=\"p\">(</span><span class=\"n\">_0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\">            </span><span class=\"c1\">// scope 1 at src/main.rs:18:9: 18:14</span>\n<span class=\"w\">        </span><span class=\"n\">discriminant</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}])))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 1 at src/main.rs:18:9: 18:14</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\">                          </span><span class=\"c1\">// scope 1 at src/main.rs:18:9: 18:14</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb2</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_6</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:19:15: 19:16</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_5</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:19:16: 19:17</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_7</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:20:21: 20:34</span>\n<span class=\"w\">        </span><span class=\"n\">_7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"k\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">FOO_SIZE</span><span class=\"p\">];</span><span class=\"w\">      </span><span class=\"c1\">// scope 1 at src/main.rs:20:21: 20:34</span>\n<span class=\"w\">        </span><span class=\"p\">((((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">4</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"nc\">Foo</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_7</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 1 at src/main.rs:20:17: 20:35</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_7</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:20:34: 20:35</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_8</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 2 at src/main.rs:21:9: 21:14</span>\n<span class=\"w\">        </span><span class=\"p\">((</span><span class=\"n\">_0</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Yielded</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"p\">())</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 2 at src/main.rs:21:9: 21:14</span>\n<span class=\"w\">        </span><span class=\"n\">discriminant</span><span class=\"p\">(</span><span class=\"n\">_0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\">            </span><span class=\"c1\">// scope 2 at src/main.rs:21:9: 21:14</span>\n<span class=\"w\">        </span><span class=\"n\">discriminant</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}])))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 2 at src/main.rs:21:9: 21:14</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\">                          </span><span class=\"c1\">// scope 2 at src/main.rs:21:9: 21:14</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cleanup</span><span class=\"p\">)</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">1</span>: <span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:23:5: 23:6</span>\n<span class=\"w\">        </span><span class=\"n\">discriminant</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}])))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">        </span><span class=\"n\">resume</span><span class=\"p\">;</span><span class=\"w\">                          </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cleanup</span><span class=\"p\">)</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_6</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:19:15: 19:16</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_5</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:19:16: 19:17</span>\n<span class=\"w\">        </span><span class=\"n\">goto</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">bb3</span><span class=\"p\">;</span><span class=\"w\">                     </span><span class=\"c1\">// scope 1 at src/main.rs:1:1: 1:1</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb5</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_10</span><span class=\"p\">);</span><span class=\"w\">                </span><span class=\"c1\">// scope 2 at src/main.rs:22:15: 22:16</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_9</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 2 at src/main.rs:22:16: 22:17</span>\n<span class=\"w\">        </span><span class=\"n\">_11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">();</span><span class=\"w\">                  </span><span class=\"c1\">// scope 0 at src/main.rs:16:15: 23:6</span>\n<span class=\"w\">        </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">1</span>: <span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:23:5: 23:6</span>\n<span class=\"w\">        </span><span class=\"p\">((</span><span class=\"n\">_0</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Complete</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"p\">())</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_11</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:23:6: 23:6</span>\n<span class=\"w\">        </span><span class=\"n\">discriminant</span><span class=\"p\">(</span><span class=\"n\">_0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\">            </span><span class=\"c1\">// scope 0 at src/main.rs:23:6: 23:6</span>\n<span class=\"w\">        </span><span class=\"n\">discriminant</span><span class=\"p\">((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}])))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:23:6: 23:6</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\">                          </span><span class=\"c1\">// scope 0 at src/main.rs:23:6: 23:6</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cleanup</span><span class=\"p\">)</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_10</span><span class=\"p\">);</span><span class=\"w\">                </span><span class=\"c1\">// scope 2 at src/main.rs:22:15: 22:16</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_9</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 2 at src/main.rs:22:16: 22:17</span>\n<span class=\"w\">        </span><span class=\"n\">goto</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">bb3</span><span class=\"p\">;</span><span class=\"w\">                     </span><span class=\"c1\">// scope 1 at src/main.rs:1:1: 1:1</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb7</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_4</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_4</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:18:13: 18:14</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_5</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:19:9: 19:16</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_6</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 1 at src/main.rs:19:14: 19:15</span>\n<span class=\"w\">        </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">1</span>: <span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 1 at src/main.rs:19:14: 19:15</span>\n<span class=\"w\">        </span><span class=\"n\">_6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">3</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"nc\">Foo</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// scope 1 at src/main.rs:19:14: 19:15</span>\n<span class=\"w\">        </span><span class=\"n\">_5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">mem</span>::<span class=\"nb\">drop</span>::<span class=\"o\">&lt;</span><span class=\"n\">Foo</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_6</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"k\">return</span>: <span class=\"nc\">bb2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unwind</span>: <span class=\"nc\">bb4</span><span class=\"p\">];</span><span class=\"w\"> </span><span class=\"c1\">// scope 1 at src/main.rs:19:9: 19:16</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb8</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_8</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">        </span><span class=\"n\">StorageDead</span><span class=\"p\">(</span><span class=\"n\">_8</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 2 at src/main.rs:21:13: 21:14</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_9</span><span class=\"p\">);</span><span class=\"w\">                 </span><span class=\"c1\">// scope 2 at src/main.rs:22:9: 22:16</span>\n<span class=\"w\">        </span><span class=\"n\">StorageLive</span><span class=\"p\">(</span><span class=\"n\">_10</span><span class=\"p\">);</span><span class=\"w\">                </span><span class=\"c1\">// scope 2 at src/main.rs:22:14: 22:15</span>\n<span class=\"w\">        </span><span class=\"n\">_10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">(((</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">_1</span><span class=\"p\">.</span><span class=\"mi\">0</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">generator</span><span class=\"o\">@</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">5</span>: <span class=\"mi\">23</span>:<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">Foo</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()}]))</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"err\">#</span><span class=\"mi\">4</span><span class=\"p\">).</span><span class=\"mi\">0</span>: <span class=\"nc\">Foo</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// scope 2 at src/main.rs:22:14: 22:15</span>\n<span class=\"w\">        </span><span class=\"n\">_9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">mem</span>::<span class=\"nb\">drop</span>::<span class=\"o\">&lt;</span><span class=\"n\">Foo</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_10</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"k\">return</span>: <span class=\"nc\">bb5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unwind</span>: <span class=\"nc\">bb6</span><span class=\"p\">];</span><span class=\"w\"> </span><span class=\"c1\">// scope 2 at src/main.rs:22:9: 22:16</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb9</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;generator resumed after panicking&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">bb9</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb10</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;generator resumed after completion&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">bb10</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">bb11</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">unreachable</span><span class=\"p\">;</span><span class=\"w\">                     </span><span class=\"c1\">// scope 0 at src/main.rs:16:5: 23:6</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 197067213,
        "sender_full_name": "bjorn3",
        "timestamp": 1589131519
    },
    {
        "content": "<p>I don't see any drop flags</p>",
        "id": 197067261,
        "sender_full_name": "bjorn3",
        "timestamp": 1589131572
    },
    {
        "content": "<p><code>_1.0: &amp;mut [static generator@src/main.rs:16:5: 23:6 {Foo, ()}])) as variant#3).1</code> is the drop flag</p>",
        "id": 197067560,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1589131909
    },
    {
        "content": "<p>Ah</p>",
        "id": 197067655,
        "sender_full_name": "bjorn3",
        "timestamp": 1589132012
    },
    {
        "content": "<p>Found the difference between cg_llvm and cg_clif! Because cg_clif doesn't yet support unwinding, I was passing <code>-Cpanic=abort</code> by default. Using <code>-Cpanic=unwind</code> fixed the size difference.</p>",
        "id": 197068183,
        "sender_full_name": "bjorn3",
        "timestamp": 1589132445
    }
]