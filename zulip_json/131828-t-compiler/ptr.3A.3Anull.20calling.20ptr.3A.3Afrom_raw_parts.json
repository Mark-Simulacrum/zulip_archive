[
    {
        "content": "<p>For implementing <a href=\"https://github.com/rust-lang/rust/issues/93959\">https://github.com/rust-lang/rust/issues/93959</a> I’m changing <code>ptr::null</code> from <code>0 as *const T</code> (which only works for <code>T: Sized</code>) to <code>ptr::from_raw_parts(0 as *const (), ())</code> and get this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: `ptr::metadata::from_raw_parts` is not yet stable as a const fn\nhelp: const-stable functions can only call other const-stable functions\n</code></pre></div>",
        "id": 271869904,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1644864323
    },
    {
        "content": "<p>What do you recommend here? Is there an escape hatch? I could copy and inline the body of <code>from_raw_parts</code> in order to follow the letter of this rule but that doesn’t seem like a beneficial change</p>",
        "id": 271870117,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1644864416
    },
    {
        "content": "<p>Or would <code>#[unstable]</code> without <code>#[rustc_const_unstable]</code> make sense for <code>from_raw_parts</code>?</p>",
        "id": 271870333,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1644864514
    },
    {
        "content": "<p>(Note that I also needed <code>#[rustc_allow_const_fn_unstable(const_fn_trait_bound)]</code> to get this far)</p>",
        "id": 271870462,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1644864585
    },
    {
        "content": "<p>You can also allow <code>ptr_metadata</code>: <code>#[rustc_allow_const_fn_unstable(const_fn_trait_bound, ptr_metadata)]</code></p>",
        "id": 271871057,
        "sender_full_name": "Urgau",
        "timestamp": 1644864847
    }
]