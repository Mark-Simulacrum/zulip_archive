[
    {
        "content": "<p>I often get mixed up about whether <code>cfg(bootstrap)</code> means <em>when building with beta</em> or <em>when building with the compiler that beta built</em>. What do you think of renaming <code>cfg(bootstrap)</code> to <code>cfg(stageN)</code> where <code>N</code> is the relevant stage? Of course, then we'd need to decide whether the stage refers to the compiler that we are building <em>with</em>, or the compiler that is being <em>built</em>.</p>\n<p>If <code>cfg(bootstrap)</code> means <em>when building with beta</em>, I think <code>cfg(stage0)</code> would be the clearest name. If <code>cfg(bootstrap)</code> means <em>when building with the compiler that beta built</em>, then I'm not sure about which number should be used.</p>\n<p>I'd also be open to names other than <code>cfg(stageN)</code>; I just want a name that won't confuse me every time I need to use it <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 261044852,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636573912
    },
    {
        "content": "<p>Also, the rustc-dev-guide's <a href=\"https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html#why-does-only-libstd-use-cfgbootstrap\">docs</a> on this don't actually say what <code>cfg(bootstrap)</code> means, so it'd be good to address that too.</p>",
        "id": 261045059,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636573999
    },
    {
        "content": "<p>We used to have stage0</p>",
        "id": 261047936,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575163
    },
    {
        "content": "<p>but it's not entirely true</p>",
        "id": 261047941,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575167
    },
    {
        "content": "<p>we only apply those gates if the bootstrap (i.e., downloaded / config.toml rustc =) compiler is an older version than the current one</p>",
        "id": 261048009,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575196
    },
    {
        "content": "<p>in particular, if you are re-building the compiler with itself, you don't want cfg(bootstrap)</p>",
        "id": 261048050,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575217
    },
    {
        "content": "<p>(which happens when a distro needs to rebuild for any reason)</p>",
        "id": 261048199,
        "sender_full_name": "cuviper",
        "timestamp": 1636575275
    },
    {
        "content": "<p>Ok, I wonder if there's another name that would still be correct but also be clearer</p>",
        "id": 261048230,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575290
    },
    {
        "content": "<p>I just get confused about whether \"bootstrap\" means \"building with the bootstrap compiler\" or \"bootstrapping a version of compiler with the same version\"</p>",
        "id": 261048367,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575346
    },
    {
        "content": "<p><code>old_rustc</code>?</p>",
        "id": 261048368,
        "sender_full_name": "cuviper",
        "timestamp": 1636575346
    },
    {
        "content": "<p>That sounds much clearer to me!</p>",
        "id": 261048404,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575359
    },
    {
        "content": "<p>I'd be all for renaming to <code>old_rustc</code> if others agree.</p>",
        "id": 261048507,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575391
    },
    {
        "content": "<p>Should I open an MCP?</p>",
        "id": 261048514,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575395
    },
    {
        "content": "<p>I don't think we need an MCP for this.</p>",
        "id": 261048536,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575404
    },
    {
        "content": "<p>Well, should I open a PR to rust-lang/rust then? ;)</p>",
        "id": 261048606,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575438
    },
    {
        "content": "<p>If you're willing to do the work to update things to the new name (source code, release process, rustc dev guide), I'm OK with old_rustc.</p>",
        "id": 261048609,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575440
    },
    {
        "content": "<p>I just want to make sure others are okay with the new name before making the change</p>",
        "id": 261048653,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575456
    },
    {
        "content": "<p>OTOH, I've thought about a more explicit version number there -- it may be worth it.</p>",
        "id": 261048696,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575474
    },
    {
        "content": "<p>e.g., 1_56</p>",
        "id": 261048706,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575479
    },
    {
        "content": "<p>but it probably doesn't bring enough value, so is not actually beneficial</p>",
        "id": 261048776,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575498
    },
    {
        "content": "<p>wasn't there an RFC for version cfg?</p>",
        "id": 261048794,
        "sender_full_name": "cuviper",
        "timestamp": 1636575510
    },
    {
        "content": "<p>well, that's the public-facing side of things and I think wouldn't work for this usecase (not actually sure though)</p>",
        "id": 261048830,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575530
    },
    {
        "content": "<p>why wouldn't it?</p>",
        "id": 261048847,
        "sender_full_name": "cuviper",
        "timestamp": 1636575538
    },
    {
        "content": "<p>IIRC there was some debate over whether nightly \"behaves\" like the newer version</p>",
        "id": 261048873,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575550
    },
    {
        "content": "<p>I forget where that landed</p>",
        "id": 261048881,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575553
    },
    {
        "content": "<p>hrm</p>",
        "id": 261048895,
        "sender_full_name": "cuviper",
        "timestamp": 1636575560
    },
    {
        "content": "<p>if it works switching to that feels... better to me</p>",
        "id": 261048896,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575562
    },
    {
        "content": "<p>I <em>think</em></p>",
        "id": 261048933,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575581
    },
    {
        "content": "<p>not actually confident in that assessment :)</p>",
        "id": 261048954,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575588
    },
    {
        "content": "<p>The problem with <code>cfg(1_56)</code> is that it'll be a pain if a PR takes a while to get merged</p>",
        "id": 261048977,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575600
    },
    {
        "content": "<p>Like with feature gate versions that often are wrong by the time the PR is merged</p>",
        "id": 261049052,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575619
    },
    {
        "content": "<p>there's definitely benefit to being able to hack around people adding cfg(bootstrap) to submodules</p>",
        "id": 261049060,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575622
    },
    {
        "content": "<p>this is a moving target anyway, no?</p>",
        "id": 261049068,
        "sender_full_name": "cuviper",
        "timestamp": 1636575629
    },
    {
        "content": "<p>(or other places that are hard to adjust)</p>",
        "id": 261049073,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575632
    },
    {
        "content": "<p>said RFC: <a href=\"https://rust-lang.github.io/rfcs/2523-cfg-path-version.html\">https://rust-lang.github.io/rfcs/2523-cfg-path-version.html</a></p>",
        "id": 261049168,
        "sender_full_name": "cuviper",
        "timestamp": 1636575671
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rename.20.60cfg.28bootstrap.29.60.20to.20.60cfg.28stageN.29.60/near/261049060\">said</a>:</p>\n<blockquote>\n<p>there's definitely benefit to being able to hack around people adding cfg(bootstrap) to submodules</p>\n</blockquote>\n<p>Hmm, what do you mean?</p>",
        "id": 261049209,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575689
    },
    {
        "content": "<p>it seems that consensus was that nightly should _not_ claim to be its supposed version<br>\n<a href=\"https://github.com/rust-lang/rust/issues/64796#issuecomment-625474439\">https://github.com/rust-lang/rust/issues/64796#issuecomment-625474439</a></p>",
        "id": 261049478,
        "sender_full_name": "cuviper",
        "timestamp": 1636575797
    },
    {
        "content": "<p>so that won't work here</p>",
        "id": 261049531,
        "sender_full_name": "cuviper",
        "timestamp": 1636575824
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rename.20.60cfg.28bootstrap.29.60.20to.20.60cfg.28stageN.29.60/near/261049209\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rename.20.60cfg.28bootstrap.29.60.20to.20.60cfg.28stageN.29.60/near/261049060\">said</a>:</p>\n<blockquote>\n<p>there's definitely benefit to being able to hack around people adding cfg(bootstrap) to submodules</p>\n</blockquote>\n<p>Hmm, what do you mean?</p>\n</blockquote>\n<p>Let me see if I can dig it up</p>",
        "id": 261049613,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575848
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/stdarch/pull/796\">https://github.com/rust-lang/stdarch/pull/796</a></p>",
        "id": 261049660,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575875
    },
    {
        "content": "<p>Trying to page context back in, but in any case, I think old_rustc is not contentious (just maybe not 'best', which seems OK)</p>",
        "id": 261049748,
        "sender_full_name": "simulacrum",
        "timestamp": 1636575929
    },
    {
        "content": "<p>Yeah, I just want something that is unambiguous (or at least less ambiguous)</p>",
        "id": 261049880,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636575989
    },
    {
        "content": "<p>Just to be clear, <code>cfg(bootstrap)</code> currently means \"when building with beta (or whatever the bootstrap compiler is)\", right?</p>",
        "id": 261049962,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576037
    },
    {
        "content": "<p>And then we'd change that to <code>old_rustc</code></p>",
        "id": 261049975,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576043
    },
    {
        "content": "<p>when building nightly with beta, or beta with stable, or stable N with stable N-1</p>",
        "id": 261050057,
        "sender_full_name": "cuviper",
        "timestamp": 1636576085
    },
    {
        "content": "<p>Ok, so basically the \"first\" compile of the current sources</p>",
        "id": 261050092,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576111
    },
    {
        "content": "<p>yes, but it's also possible to build stable N with stable N, which should not set <code>cfg(bootstrap)</code></p>",
        "id": 261050150,
        "sender_full_name": "cuviper",
        "timestamp": 1636576145
    },
    {
        "content": "<p>I'll try to open some PRs with this change within the next week or so</p>",
        "id": 261050155,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576146
    },
    {
        "content": "<p>hence \"old\"</p>",
        "id": 261050215,
        "sender_full_name": "cuviper",
        "timestamp": 1636576167
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rename.20.60cfg.28bootstrap.29.60.20to.20.60cfg.28stageN.29.60/near/261050150\">said</a>:</p>\n<blockquote>\n<p>yes, but it's also possible to build stable N with stable N, which should not set <code>cfg(bootstrap)</code></p>\n</blockquote>\n<p>But then that's not the \"first\" compile of stable N, since you already need a stable N</p>",
        "id": 261050229,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576172
    },
    {
        "content": "<p>Right? Or am I misunderstanding</p>",
        "id": 261050258,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576184
    },
    {
        "content": "<p>ok, if you mean \"first\" globally, not just stage0</p>",
        "id": 261050330,
        "sender_full_name": "cuviper",
        "timestamp": 1636576204
    },
    {
        "content": "<p>point release shifts also don't count as <code>cfg(bootstrap)</code>, e.g. 1.56.0 building 1.56.1 is the \"same\" for this purpose</p>",
        "id": 261050420,
        "sender_full_name": "cuviper",
        "timestamp": 1636576251
    },
    {
        "content": "<p>Huh, really?</p>",
        "id": 261050443,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576260
    },
    {
        "content": "<p>Wow, this is even more complicated than I thought <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 261050462,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576268
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rename.20.60cfg.28bootstrap.29.60.20to.20.60cfg.28stageN.29.60/near/261048009\">said</a>:</p>\n<blockquote>\n<p>we only apply those gates if the bootstrap (i.e., downloaded / config.toml rustc =) compiler is an older version than the current one</p>\n</blockquote>\n<p>So does \"older version\" mean \"older, modulo point releases\"?</p>",
        "id": 261050822,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576450
    },
    {
        "content": "<p>yeah, I didn't recall the point release thing (which is mostly just because we don't bump the bootstrap compiler around point releases)</p>",
        "id": 261050875,
        "sender_full_name": "simulacrum",
        "timestamp": 1636576481
    },
    {
        "content": "<p>so in rust-lang upstream builds, we have 1.55.0 -&gt; 1.56.0, then 1.55.0 -&gt; 1.56.1</p>\n<p>whereas in Fedora I have to build 1.55.0 -&gt; 1.56.0 -&gt; 1.56.1, and I don't want <code>cfg(bootstrap)</code> (as if 1.55) in the second build</p>",
        "id": 261051139,
        "sender_full_name": "cuviper",
        "timestamp": 1636576616
    },
    {
        "content": "<p>Interesting, why are upstream and distro builds run differently?</p>",
        "id": 261051318,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576705
    },
    {
        "content": "<p>because the distro only carries one version at a time</p>",
        "id": 261051370,
        "sender_full_name": "cuviper",
        "timestamp": 1636576730
    },
    {
        "content": "<p>upstream downloads whatever it wants from <a href=\"http://static.rust-lang.org\">static.rust-lang.org</a></p>",
        "id": 261051458,
        "sender_full_name": "cuviper",
        "timestamp": 1636576763
    },
    {
        "content": "<p>we could do the same upstream too, tbh, and perhaps should, but it's not something we care about too much.</p>",
        "id": 261051467,
        "sender_full_name": "simulacrum",
        "timestamp": 1636576768
    },
    {
        "content": "<p>Ah, I think I see what you mean <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 261051657,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576870
    },
    {
        "content": "<p>The one thing I'm confused about is why you don't want <code>cfg(bootstrap)</code> enabled when building 1.56.1 with 1.56.0</p>",
        "id": 261051719,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636576908
    },
    {
        "content": "<p>we use <code>cfg(bootstrap)</code> for language changes, mostly, so that's expecting the semantics of a particular previous version</p>",
        "id": 261051824,
        "sender_full_name": "cuviper",
        "timestamp": 1636576957
    },
    {
        "content": "<p>point releases don't change those kind of things</p>",
        "id": 261052038,
        "sender_full_name": "cuviper",
        "timestamp": 1636577064
    },
    {
        "content": "<p>(in theory they could, then we distro folks would have to do some local patching to deal with the transition)</p>",
        "id": 261052172,
        "sender_full_name": "cuviper",
        "timestamp": 1636577150
    },
    {
        "content": "<p>but anyway this is why an explicit version might make sense. when 1.56.0 uses <code>cfg(bootstrap)</code>, it really means <code>cfg(rustc_is_1_55)</code></p>",
        "id": 261052363,
        "sender_full_name": "cuviper",
        "timestamp": 1636577235
    },
    {
        "content": "<p>I guess what I mean is: what is the downside of using <code>cfg(bootstrap)</code> when building 1.x.1 with 1.x.0? (since not using <code>cfg(bootstrap)</code> from my perspective seems to add some complexity)</p>",
        "id": 261052520,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636577319
    },
    {
        "content": "<p>suppose there's something simple like an unstable language feature that changed the <code>feature(name)</code>, and this is used in <code>std</code>. with the old rustc, we want to set <code>#![feature(old_name)]</code>, and after that we want to set <code>#![feature(new_name)]</code></p>",
        "id": 261052864,
        "sender_full_name": "cuviper",
        "timestamp": 1636577509
    },
    {
        "content": "<p>or similarly when such a feature is stabilized, we only want to set it with the old rustc</p>",
        "id": 261052949,
        "sender_full_name": "cuviper",
        "timestamp": 1636577534
    },
    {
        "content": "<p>so <code>cfg(bootstrap)</code> is selecting between the old and new way of doing things</p>",
        "id": 261053034,
        "sender_full_name": "cuviper",
        "timestamp": 1636577581
    },
    {
        "content": "<p>1.55.0 did it one way, 1.56.0 does it a new way, and 1.56.1 does it the same new way, just with some bug fixes</p>",
        "id": 261053116,
        "sender_full_name": "cuviper",
        "timestamp": 1636577633
    },
    {
        "content": "<p>I think <code>cfg(bootstrap)</code> is more clear than <code>cfg(old_rustc)</code></p>",
        "id": 261053305,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636577716
    },
    {
        "content": "<p>that makes it sound like you could use 1.20 to build 1.30 or something</p>",
        "id": 261053323,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636577727
    },
    {
        "content": "<p>which is definitely not true</p>",
        "id": 261053327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636577731
    },
    {
        "content": "<p>sure, we could also keep the name and make sure that these reasons are captured rustc-dev docs</p>",
        "id": 261053617,
        "sender_full_name": "cuviper",
        "timestamp": 1636577875
    },
    {
        "content": "<p>I guess <code>cfg(previous_rustc)</code> is slightly closer to the intended meaning, but like <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> and <span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> it's still not quite right when there's a point release</p>",
        "id": 261053655,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636577883
    },
    {
        "content": "<p>(I haven't looked)</p>",
        "id": 261053665,
        "sender_full_name": "cuviper",
        "timestamp": 1636577884
    },
    {
        "content": "<p>they're not, really - I found this thread from <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/1255\">https://github.com/rust-lang/rustc-dev-guide/issues/1255</a></p>",
        "id": 261053699,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636577903
    },
    {
        "content": "<p>I don't really care about the name personally and if documenting it is enough for folks, seems fine</p>",
        "id": 261053708,
        "sender_full_name": "simulacrum",
        "timestamp": 1636577907
    },
    {
        "content": "<p>I just want to emphasize that literally all these places change basically on an every-release cycle anyway, so it's relatively low cost to update</p>",
        "id": 261053749,
        "sender_full_name": "simulacrum",
        "timestamp": 1636577931
    },
    {
        "content": "<p>(modulo docs/compiler team knowledge, etc., but that's not <em>too</em> hard to propagate to and we're not suggesting daily changes)</p>",
        "id": 261053788,
        "sender_full_name": "simulacrum",
        "timestamp": 1636577956
    },
    {
        "content": "<p>yeah, the developer knowledge is the bigger risk of changing, but few ever deal with this</p>",
        "id": 261053898,
        "sender_full_name": "cuviper",
        "timestamp": 1636578004
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rename.20.60cfg.28bootstrap.29.60.20to.20.60cfg.28stageN.29.60/near/261053116\">said</a>:</p>\n<blockquote>\n<p>1.55.0 did it one way, 1.56.0 does it a new way, and 1.56.1 does it the same new way, just with some bug fixes</p>\n</blockquote>\n<p>Ohhh, I get it now</p>",
        "id": 261055084,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636578549
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/rename.20.60cfg.28bootstrap.29.60.20to.20.60cfg.28stageN.29.60/near/261053323\">said</a>:</p>\n<blockquote>\n<p>that makes it sound like you could use 1.20 to build 1.30 or something</p>\n</blockquote>\n<p>I think in nearly all the cases where someone is using <code>cfg(bootstrap)</code>, they either would know using 1.20 to build 1.30 wouldn't work or wouldn't try it. I think most people who use it are just changing a feature-gate name etc.</p>",
        "id": 261055363,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636578705
    },
    {
        "content": "<p>sure, but like, you could use that same argument for keeping the name the same. I'm just saying if we pick a new name it should be more descriptive</p>",
        "id": 261055452,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636578738
    },
    {
        "content": "<p>The issue with keeping the name the same is I (and likely others) always forget whether to use <code>cfg(bootstrap)</code> or <code>cfg(not(bootstrap))</code> for a particular change</p>",
        "id": 261055486,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636578759
    },
    {
        "content": "<p>I'd be happy with a more descriptive name, but I'm worried that it'll be bikeshedded and no name improvement will be made</p>",
        "id": 261055576,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636578814
    },
    {
        "content": "<p>And the issue with using docs is then people have to go find a docs page every time they use <code>cfg(bootstrap)</code>. IMO it'd be better if the name were more self-explanatory</p>",
        "id": 261055699,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636578872
    },
    {
        "content": "<p>FWIW I feel like I have at least built up an intuition for it, so it's hard for me to evaluate names against each other.</p>",
        "id": 261056160,
        "sender_full_name": "simulacrum",
        "timestamp": 1636579101
    },
    {
        "content": "<p>Yeah, I think the issue is that building up that intuition takes a while and to make it stick you have to use or remove <code>cfg(bootstrap)</code> often (which IIRC you do as part of the release process)</p>",
        "id": 261056290,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636579194
    },
    {
        "content": "<p>Yeah, whoever bumps the compiler -- usually Pietro or me.</p>\n<p>I don't remember starting doing it so I feel like it's always been intuitive but I can definitely believe it's not (like most of rustbuild...)</p>",
        "id": 261056459,
        "sender_full_name": "simulacrum",
        "timestamp": 1636579276
    },
    {
        "content": "<p>(FWIW, looks like <code>cfg(stage0)</code> -&gt; <code>cfg(bootstrap)</code> happened in <a href=\"https://github.com/rust-lang/rust/issues/61494\">#61494</a>.)</p>",
        "id": 261058235,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636580129
    },
    {
        "content": "<p>Btw, thanks <span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> and <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> for helping me understand the release process better :)</p>",
        "id": 261060579,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636581430
    }
]