[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> -- did you want me to prepare that forward compatibility warning PR?</p>",
        "id": 224394936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611869164
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> . Yeah I haven't gotten around to that yet.</p>",
        "id": 224400495,
        "sender_full_name": "pnkfelix",
        "timestamp": 1611871740
    },
    {
        "content": "<p>I need to do dinner+childcare now, I'm guessing I need to come back and do more work tonight at this rate, given what's still on my plate.</p>",
        "id": 224405313,
        "sender_full_name": "pnkfelix",
        "timestamp": 1611873957
    },
    {
        "content": "<p>If you can look into this thing with forbid lints and groups, that would be great. At this point though I do think a revert for this beta cycle seems entirely reasonable</p>",
        "id": 224405414,
        "sender_full_name": "pnkfelix",
        "timestamp": 1611874001
    },
    {
        "content": "<p>(we clearly just didn't anticipate the fallout from this when we made the original plan, IMO)</p>",
        "id": 224405462,
        "sender_full_name": "pnkfelix",
        "timestamp": 1611874031
    },
    {
        "content": "<p>(a revert of the handling of the handlilng of groups, that is, to go back to the old broken failure to apply the lint to the group members as well)</p>",
        "id": 224405578,
        "sender_full_name": "pnkfelix",
        "timestamp": 1611874086
    },
    {
        "content": "<p>lint groups revert should be a 1-line change essentially I think</p>",
        "id": 224406198,
        "sender_full_name": "simulacrum",
        "timestamp": 1611874462
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_lint/src/levels.rs#L121\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_lint/src/levels.rs#L121</a> needs to change to something like specs.get(..., ...)</p>",
        "id": 224406272,
        "sender_full_name": "simulacrum",
        "timestamp": 1611874521
    },
    {
        "content": "<p>hmm, ok</p>",
        "id": 224409738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611876765
    },
    {
        "content": "<p>I hadn't considered that kind of 'targeted revert' as a possibility</p>",
        "id": 224409766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611876786
    },
    {
        "content": "<p>we can try a fuller revert, but then we'd need to re-apply the fix to the previous regresssion</p>",
        "id": 224409924,
        "sender_full_name": "simulacrum",
        "timestamp": 1611876874
    },
    {
        "content": "<p>which likely needs rebasing... it seems like a pain</p>",
        "id": 224409944,
        "sender_full_name": "simulacrum",
        "timestamp": 1611876888
    },
    {
        "content": "<p>I think we're just worried about the group impact, right? I didn't see detailed notes on the lang team decision or new rationale</p>",
        "id": 224409977,
        "sender_full_name": "simulacrum",
        "timestamp": 1611876910
    },
    {
        "content": "<p>I don't want to do a full revert, exactly</p>",
        "id": 224410165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877040
    },
    {
        "content": "<p>and yes, the specific concern is around group impact</p>",
        "id": 224410175,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877047
    },
    {
        "content": "<p>the <a href=\"https://github.com/rust-lang/lang-team/blob/master/minutes/2021-01-26.md#p-high-issues-on-rust-langrust\">meeting minutes</a> have rough notes, but it comes down to \"this is impacting folks, so even if it is right, we should phase it in\"</p>",
        "id": 224410321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877133
    },
    {
        "content": "<p>and that we didn't want to go down the whole path of making some things not fire when in macros etc 'under the gun'</p>",
        "id": 224410347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877150
    },
    {
        "content": "<p>Yeah that makes sense, I was thinking we would potentially take a harder line given breakage is entirely crate local and likely just affects people doing forbid of big groups like warnings which should be really rare.</p>",
        "id": 224410660,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877407
    },
    {
        "content": "<p>I don't 100% understand the code here but, <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>, from your comment, I gather that the call to <code>get_lint_level</code> manages the case where the lint is in a group</p>",
        "id": 224410678,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877428
    },
    {
        "content": "<p>and <code>specs</code> is precisely the set of things that were set by the user?</p>",
        "id": 224410687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877440
    },
    {
        "content": "<p>It takes care of looking up in all parent groups yes, as well as e.g. CLI args and such</p>",
        "id": 224410735,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877452
    },
    {
        "content": "<p>specs is the current list of things set at higher levels</p>",
        "id": 224410757,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877471
    },
    {
        "content": "<p>so if we change to <code>specs</code> here, would that .. ah, maybe not relevant. I was going to ask if it would overlook conflicts with CLI args</p>",
        "id": 224410780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877494
    },
    {
        "content": "<p>It would, I think, if the CLI arg was a lint group or similar</p>",
        "id": 224410823,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877520
    },
    {
        "content": "<p>But it's what we did before</p>",
        "id": 224410834,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877529
    },
    {
        "content": "<p>it seems pretty easy to make this a FCW</p>",
        "id": 224410851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877545
    },
    {
        "content": "<p>I've not added one before but yes</p>",
        "id": 224410920,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877582
    },
    {
        "content": "<p>I'm reviewing the plan we had</p>",
        "id": 224410943,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877596
    },
    {
        "content": "<p>I believe what we were thinking was that <code>forbid(warnings)</code> would be treated as if it were <code>deny</code></p>",
        "id": 224411120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877722
    },
    {
        "content": "<p>but I realize now that issuing a warning in that case is a bit weird because</p>",
        "id": 224411139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877737
    },
    {
        "content": "<p>we don't <em>know</em> that an error would result if it were forbid</p>",
        "id": 224411166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877755
    },
    {
        "content": "<p>it seems like the FCW should come at the point where the \"previously ignored\" forbid creates an error</p>",
        "id": 224411198,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877775
    },
    {
        "content": "<p>Right</p>",
        "id": 224411207,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877783
    },
    {
        "content": "<p>so the code for <code>get_lint_level</code> is a bit confusing to me</p>",
        "id": 224411216,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877791
    },
    {
        "content": "<p>Which should be a matter of checking specs va get_lint_level and seeing if results are different</p>",
        "id": 224411265,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877804
    },
    {
        "content": "<p>or rather <code>get_lint_id_level</code></p>",
        "id": 224411267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877806
    },
    {
        "content": "<p>If yes, FCW</p>",
        "id": 224411270,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877810
    },
    {
        "content": "<p>ah, hmm, yeah, ok</p>",
        "id": 224411279,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877819
    },
    {
        "content": "<p>that works :)</p>",
        "id": 224411280,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877821
    },
    {
        "content": "<p>I hadn't thought of that</p>",
        "id": 224411283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877823
    },
    {
        "content": "<p>I can probably explain code too</p>",
        "id": 224411300,
        "sender_full_name": "simulacrum",
        "timestamp": 1611877841
    },
    {
        "content": "<p>the thing that confused me specifically</p>",
        "id": 224411332,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877867
    },
    {
        "content": "<p><code>get_lint_id_level</code> first checks for specs:</p>",
        "id": 224411348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877884
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">specs</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">aux</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">specs</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 224411350,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877886
    },
    {
        "content": "<p>that seems clear enough</p>",
        "id": 224411355,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877889
    },
    {
        "content": "<p>but then it looks something up in <code>self.list</code></p>",
        "id": 224411372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877916
    },
    {
        "content": "<p>I guess I just don't quite know what <code>self.list</code> is</p>",
        "id": 224411435,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877949
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">                </span><span class=\"n\">LintSet</span>::<span class=\"n\">Node</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">ref</span><span class=\"w\"> </span><span class=\"n\">specs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">parent</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">specs</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 224411437,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877951
    },
    {
        "content": "<p>I couldn't quite tell what <code>specs</code> was meant to be</p>",
        "id": 224411440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877957
    },
    {
        "content": "<p>that said, I like your preferred approach :)</p>",
        "id": 224411480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611877990
    },
    {
        "content": "<p>Do you have a link handy?</p>",
        "id": 224411500,
        "sender_full_name": "simulacrum",
        "timestamp": 1611878007
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/c0b64d97beebb09325b5587abed39f4f1621026f/compiler/rustc_middle/src/lint.rs#L114-L142\">get_lint_id_level</a></p>",
        "id": 224411590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611878066
    },
    {
        "content": "<p>Ah</p>",
        "id": 224411685,
        "sender_full_name": "simulacrum",
        "timestamp": 1611878145
    },
    {
        "content": "<p>Yeah I remember noe</p>",
        "id": 224411689,
        "sender_full_name": "simulacrum",
        "timestamp": 1611878149
    },
    {
        "content": "<p>That's so we can revert the change latter</p>",
        "id": 224411741,
        "sender_full_name": "simulacrum",
        "timestamp": 1611878173
    },
    {
        "content": "<p>list is basically the stack we push onto iirc as we go down the HIR</p>",
        "id": 224411754,
        "sender_full_name": "simulacrum",
        "timestamp": 1611878192
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> but I think my strategy of just comparing two gets should be fine</p>",
        "id": 224411878,
        "sender_full_name": "simulacrum",
        "timestamp": 1611878285
    },
    {
        "content": "<p>I've implemented it</p>",
        "id": 224412267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611878566
    },
    {
        "content": "<p>I'm testing to see if it works</p>",
        "id": 224412270,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611878570
    },
    {
        "content": "<p>(I didn't implement the full FCW thing, but I added the check and made it alter the error message, so i can see if it's doing what I want)</p>",
        "id": 224412306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611878596
    },
    {
        "content": "<p>I am reminded that I have to figure out why my \"vscode on rustc\" setup no longer seems to work like it used to</p>",
        "id": 224412315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611878610
    },
    {
        "content": "<p>but <em>that's</em> for another topic</p>",
        "id": 224412319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611878614
    },
    {
        "content": "<p>seems to work</p>",
        "id": 224415911,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611880034
    },
    {
        "content": "<p>Great! I imagine we'll want to check it backports to beta cleanly but I expect it should</p>",
        "id": 224416065,
        "sender_full_name": "simulacrum",
        "timestamp": 1611880189
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>warning: deny(bad_style) incompatible with previous forbid\n --&gt; src/test/ui/lint/issue-80988.rs:2:9\n  |\n1 | #![forbid(warnings)]\n  |           -------- `forbid` level set here\n2 | #![deny(bad_style)]\n  |         ^^^^^^^^^ overruled by previous forbid\n  |\n  = note: `#[warn(forbidden_lint_groups)]` on by default\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n  = note: for more information, see issue #57571 &lt;https://github.com/rust-lang/rust/issues/57571&gt;\n</code></pre></div>",
        "id": 224476323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611930091
    },
    {
        "content": "<p>(current status)</p>",
        "id": 224476332,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611930095
    },
    {
        "content": "<p>except for some reason I get two warnings</p>",
        "id": 224476483,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611930149
    },
    {
        "content": "<p>I think I know why -- I think that the first one has the \"note, on by default\" thing, and the second does not, and hence they are not regarded as duplicates</p>",
        "id": 224478054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611930836
    },
    {
        "content": "<p>I wouldn't worry about two warnings</p>",
        "id": 224481583,
        "sender_full_name": "simulacrum",
        "timestamp": 1611932348
    },
    {
        "content": "<p>so</p>",
        "id": 224494978,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611936989
    },
    {
        "content": "<p>i'm not overly worried about that but I am confused about something</p>",
        "id": 224495004,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937000
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>athena. rustc +rust-4-stage1 src/test/ui/error-codes/E0453.rs\nwarning: allow(non_snake_case) incompatible with previous forbid\n --&gt; src/test/ui/error-codes/E0453.rs:3:9\n  |\n1 | #![forbid(non_snake_case)]\n  |           -------------- `forbid` level set here\n2 |\n3 | #[allow(non_snake_case)]\n  |         ^^^^^^^^^^^^^^ overruled by previous forbid\n  |\n  = note: `#[warn(forbidden_lint_groups)]` on by default\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n  = note: for more information, see issue #57571 &lt;https://github.com/rust-lang/rust/issues/57571&gt;\n\nwarning: allow(non_snake_case) incompatible with previous forbid\n --&gt; src/test/ui/error-codes/E0453.rs:3:9\n  |\n1 | #![forbid(non_snake_case)]\n  |           -------------- `forbid` level set here\n2 |\n3 | #[allow(non_snake_case)]\n  |         ^^^^^^^^^^^^^^ overruled by previous forbid\n  |\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n  = note: for more information, see issue #57571 &lt;https://github.com/rust-lang/rust/issues/57571&gt;\n\nwarning: 2 warnings emitted\n</code></pre></div>",
        "id": 224495032,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937011
    },
    {
        "content": "<p>this test gives a hard error on stable</p>",
        "id": 224495049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937017
    },
    {
        "content": "<p>so the FCW is wrong</p>",
        "id": 224495067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937021
    },
    {
        "content": "<p>however, it seems like the code is correct... that is, <code>non_snake_case</code> is not present in <code>specs</code></p>",
        "id": 224495124,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937038
    },
    {
        "content": "<p>hm</p>",
        "id": 224495423,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937131
    },
    {
        "content": "<p>are those on the same level?</p>",
        "id": 224495440,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937137
    },
    {
        "content": "<p>we <em>also</em> fixed the bug in 1.50 that forbid/allow right after each other used to not error, but now do</p>",
        "id": 224495494,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937157
    },
    {
        "content": "<p>that's independent of lint groups</p>",
        "id": 224495504,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937162
    },
    {
        "content": "<p>we can phase that in as well or we can make that part of the story a hard error</p>",
        "id": 224495523,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937176
    },
    {
        "content": "<p>they are not on the same level</p>",
        "id": 224496304,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937478
    },
    {
        "content": "<p>is the <code>specs</code> list only things on the same level?</p>",
        "id": 224496331,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937488
    },
    {
        "content": "<p>hm</p>",
        "id": 224496377,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937512
    },
    {
        "content": "<p>specs should be everything I would think</p>",
        "id": 224496400,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937522
    },
    {
        "content": "<p>can I just check if the \"previous source\" is a forbid of a lint group</p>",
        "id": 224496411,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937525
    },
    {
        "content": "<p>possibly</p>",
        "id": 224496424,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937533
    },
    {
        "content": "<p>I am a bit worried though, because it seems like we'd still have the bug on lint groups in this case</p>",
        "id": 224496464,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937550
    },
    {
        "content": "<p>i.e., that the FCW is falsely emitted</p>",
        "id": 224496491,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937561
    },
    {
        "content": "<p>it may be that I did not quite have the right picture of what changed between old and new versions</p>",
        "id": 224496551,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937574
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/131828-t-compiler/topic/forward.20compatibility.20warning.20for.20forbid.20lints.20and.20groups/near/224496464\">said</a>:</p>\n<blockquote>\n<p>I am a bit worried though, because it seems like we'd still have the bug on lint groups in this case</p>\n</blockquote>\n<p>I don't understand what you mean by this</p>",
        "id": 224497005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937751
    },
    {
        "content": "<p>which bug?</p>",
        "id": 224497038,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937763
    },
    {
        "content": "<p>hm</p>",
        "id": 224497264,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937837
    },
    {
        "content": "<p><code>specs</code> does seem to be things on the same level</p>",
        "id": 224497346,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937864
    },
    {
        "content": "<p>I would not expect the FCW to fire in your example of different levels w/o lint groups being involved</p>",
        "id": 224497455,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937905
    },
    {
        "content": "<p>Agreed; I think the thing to test for is</p>",
        "id": 224497501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937921
    },
    {
        "content": "<p>but not because of lint groups, but rather just because it was previously already a hard error</p>",
        "id": 224497545,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937924
    },
    {
        "content": "<p>i.e., our condition is already wrong somehow</p>",
        "id": 224497577,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937935
    },
    {
        "content": "<ul>\n<li>is the forbidden thing different from the thing triggering the error</li>\n</ul>",
        "id": 224497580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937936
    },
    {
        "content": "<p>which implies it must be a lint group</p>",
        "id": 224497594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937943
    },
    {
        "content": "<p>I presume that <code>#![forbid(warnings)] #[allow(warnings]]</code> was previously an error too</p>",
        "id": 224497636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937958
    },
    {
        "content": "<p>we just failed to consider groups</p>",
        "id": 224497646,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937961
    },
    {
        "content": "<p>(I can test that)</p>",
        "id": 224497659,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937964
    },
    {
        "content": "<p>I believe that's true</p>",
        "id": 224497679,
        "sender_full_name": "simulacrum",
        "timestamp": 1611937973
    },
    {
        "content": "<p>ok, I can confirm that</p>",
        "id": 224497737,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611937990
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/forward.20compatibility.20warning.20for.20forbid.20lints.20and.20groups/near/224497580\">said</a>:</p>\n<blockquote>\n<ul>\n<li>is the forbidden thing different from the thing triggering the error</li>\n</ul>\n</blockquote>\n<p>I'm trying to say that I <em>think</em> this is not quite sufficient, because we would not expect specs and the get_lint_level to differ in the example you pasted last, right?</p>",
        "id": 224497807,
        "sender_full_name": "simulacrum",
        "timestamp": 1611938022
    },
    {
        "content": "<p>i.e., I am worried there's a more fundamental misunderstanding of the structures involved</p>",
        "id": 224497863,
        "sender_full_name": "simulacrum",
        "timestamp": 1611938040
    },
    {
        "content": "<p>which example, E0453?</p>",
        "id": 224497932,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938054
    },
    {
        "content": "<p>if so, I do expect them to differ, because <a href=\"http://E0453.rs\">E0453.rs</a> is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![forbid(non_snake_case)]</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[allow(non_snake_case)]</span><span class=\"w\"></span>\n<span class=\"c1\">//~^ ERROR allow(non_snake_case) incompatible</span>\n<span class=\"c1\">//~| ERROR allow(non_snake_case) incompatible</span>\n<span class=\"c1\">//~| ERROR allow(non_snake_case) incompatible</span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 224498090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938108
    },
    {
        "content": "<p>and <code>specs</code> seems to be \"what is on this level\"</p>",
        "id": 224498129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938116
    },
    {
        "content": "<p>or at least, it is empty here</p>",
        "id": 224498170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938128
    },
    {
        "content": "<p>hm, then I misunderstood specs</p>",
        "id": 224498182,
        "sender_full_name": "simulacrum",
        "timestamp": 1611938131
    },
    {
        "content": "<p>but when I look at the case where they are on the <em>same</em> level</p>",
        "id": 224498193,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938135
    },
    {
        "content": "<p>I see entries in <code>specs</code></p>",
        "id": 224498211,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938140
    },
    {
        "content": "<p>that said, i am sort of confused because</p>",
        "id": 224498232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938146
    },
    {
        "content": "<p>I read the old code and it se--- ah, I wonder</p>",
        "id": 224498253,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938152
    },
    {
        "content": "<p>so, the old code <em>only</em> checked specs</p>",
        "id": 224498267,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938157
    },
    {
        "content": "<p>and so I <em>am</em> confused how we see errors on stable in E0453 for example</p>",
        "id": 224498336,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938170
    },
    {
        "content": "<p>i don't know what other changes you made along the way</p>",
        "id": 224498360,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938181
    },
    {
        "content": "<p>I am now wondering if on stable that code was meant to only report errors at the same level, and there was some other check across levels?</p>",
        "id": 224498440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938207
    },
    {
        "content": "<p>I guess maybe I should go review your original PR :)</p>",
        "id": 224498453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611938214
    },
    {
        "content": "<p>I think there was a loop of some kind</p>",
        "id": 224498502,
        "sender_full_name": "simulacrum",
        "timestamp": 1611938233
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/131828-t-compiler/topic/forward.20compatibility.20warning.20for.20forbid.20lints.20and.20groups/near/224498440\">said</a>:</p>\n<blockquote>\n<p>I am now wondering if on stable that code was meant to only report errors at the same level, and there was some other check across levels?</p>\n</blockquote>\n<p>I wouldnt be surprsied if this were the case, since the original problem was that we <em>only</em> had the check across levels, and a no-op for the same level. (Right?)</p>",
        "id": 224499177,
        "sender_full_name": "pnkfelix",
        "timestamp": 1611938509
    },
    {
        "content": "<p>yes, that was the original case, though that code was broken for lint groups</p>",
        "id": 224499648,
        "sender_full_name": "simulacrum",
        "timestamp": 1611938696
    },
    {
        "content": "<p>let me try checking for groups explicitly and see how it behaves vis a vis existing tests</p>",
        "id": 224501715,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611939482
    },
    {
        "content": "<p>I'm still tinkering here -- very slowly --</p>",
        "id": 224537259,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611956322
    },
    {
        "content": "<p>I see now what you meant <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> that comparing for equality means that we don't address <a href=\"https://github.com/rust-lang/rust/issues/80988\">#80988</a>, though we do address the actual cases we saw in practice I think? not sure.</p>",
        "id": 224537317,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611956356
    },
    {
        "content": "<p>I'm trying to write something that just checks for 'is it a lint group' but for some reason it's not working</p>",
        "id": 224537340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611956367
    },
    {
        "content": "<p>still debugging</p>",
        "id": 224537347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611956371
    },
    {
        "content": "<p>this seems to work now</p>",
        "id": 224539479,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611957550
    },
    {
        "content": "<p>the <code>WARNINGS</code> group is very special</p>",
        "id": 224539501,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611957561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you know if there's a test covering a scenario like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![forbid(unused)]</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[allow(warnings)]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>i.e., two overlapping groups?</p>\n<p>Similarly, having a forbid on a specific lint and then an allow on the group later on.</p>",
        "id": 224552923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1611965244
    },
    {
        "content": "<p>I don't think there is</p>",
        "id": 224553002,
        "sender_full_name": "simulacrum",
        "timestamp": 1611965299
    },
    {
        "content": "<p>Or at least, I neither added or saw one in brief greps back then</p>",
        "id": 224553014,
        "sender_full_name": "simulacrum",
        "timestamp": 1611965320
    },
    {
        "content": "<p>OK, so, I was going to open a PR but I realized that my change doesn't <em>quite</em> do what is needed here.</p>",
        "id": 224585099,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612013231
    },
    {
        "content": "<p>In particular, this makes the <code>#[allow]</code> not an error, but it still means that any occurrence of the lint will be an error, so I expect that <a href=\"https://github.com/rust-lang/rust/issues/81218\">#81218</a> is not fixed</p>",
        "id": 224585104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612013264
    },
    {
        "content": "<p>I should test that</p>",
        "id": 224585105,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612013267
    },
    {
        "content": "<p>Probably what we want to do is -- issue a FCW for the allow but then permit it to take effect</p>",
        "id": 224585113,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612013276
    },
    {
        "content": "<p>Actually, maybe it'd be better to respect the new setting no matter what?</p>",
        "id": 224585658,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612014092
    },
    {
        "content": "<p>I am not sure what I would expect to be honest</p>",
        "id": 224585660,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612014102
    },
    {
        "content": "<p>Hm, I think we have to make the allow take effect - otherwise it'd be just as breaking most likely</p>",
        "id": 224587716,
        "sender_full_name": "simulacrum",
        "timestamp": 1612016954
    },
    {
        "content": "<p>I guess we could limit to warning, but if the allow is in a macro that doesn't do you any good.</p>",
        "id": 224587724,
        "sender_full_name": "simulacrum",
        "timestamp": 1612016979
    },
    {
        "content": "<p>Yeah, that is what I'm doing, and I think it's right</p>",
        "id": 224588243,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612017797
    },
    {
        "content": "<p>I actually think it's right all the time</p>",
        "id": 224588247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612017801
    },
    {
        "content": "<p>but at least in the FCW case</p>",
        "id": 224588249,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612017810
    }
]