[
    {
        "content": "<p>Testing rustc got the following two ICEs today:</p>\n<div class=\"codehilite\"><pre><span></span><code>---- [ui] ui/associated-type-bounds/traits-assoc-type-macros.rs stdout ----\n\nerror: test compilation failed although it shouldn&#39;t!\nstatus: exit status: 101\ncommand: &quot;/sb/d/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc&quot; &quot;/sb/d/rust/src/test/ui/associated-type-bounds/traits-assoc-type-macros.rs&quot; &quot;-Zthreads=1&quot; &quot;--target=x86_64-unknown-linux-gnu&quot; &quot;--error-format&quot; &quot;json&quot; &quot;-Ccodegen-units=1&quot; &quot;-Zui-testing&quot; &quot;-Zdeduplicate-diagnostics=no&quot; &quot;-Zemit-future-incompat-report&quot; &quot;--emit&quot; &quot;metadata&quot; &quot;-C&quot; &quot;prefer-dynamic&quot; &quot;--out-dir&quot; &quot;/sb/d/rust/build/x86_64-unknown-linux-gnu/test/ui/associated-type-bounds/traits-assoc-type-macros&quot; &quot;-A&quot; &quot;unused&quot; &quot;-Crpath&quot; &quot;-O&quot; &quot;-Cdebuginfo=0&quot; &quot;-Lnative=/sb/d/rust/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;-Cincremental=tmp/traits-assoc-type-macros&quot; &quot;-L&quot; &quot;/sb/d/rust/build/x86_64-unknown-linux-gnu/test/ui/associated-type-bounds/traits-assoc-type-macros/auxiliary&quot;\nstdout:\n------------------------------------------\n\n------------------------------------------\nstderr:\n------------------------------------------\nerror: internal compiler error: encountered incremental compilation error with explicit_item_bounds(traits_assoc_type_macros[b93b]::Deserializer::Error)\n   |\n   = help: This is a known issue with the compiler. Run `cargo clean` to allow your project to compile\n   = note: Please follow the instructions below to create a bug report with the provided information\n   = note: See &lt;https://github.com/rust-lang/rust/issues/84970&gt; for more information\n\nthread &#39;rustc&#39; panicked at &#39;Found unstable fingerprints for explicit_item_bounds(traits_assoc_type_macros[b93b]::Deserializer::Error): [(Binder(TraitPredicate(&lt;&lt;Self as Deserializer&gt;::Error as std::marker::Sized&gt;), []), /sb/d/rust/src/test/ui/associated-type-bounds/traits-assoc-type-macros.rs:8:5: 8:16 (#0))]&#39;, /sb/d/rust/compiler/rustc_query_system/src/query/plumbing.rs:644:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>and </p>\n<div class=\"codehilite\"><pre><span></span><code>---- [ui] ui/async-await/issues/issue-64964.rs stdout ----\n\nerror: test compilation failed although it shouldn&#39;t!\nstatus: exit status: 101\ncommand: &quot;/sb/d/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc&quot; &quot;/sb/d/rust/src/test/ui/async-await/issues/issue-64964.rs&quot; &quot;-Zthreads=1&quot; &quot;--target=x86_64-unknown-linux-gnu&quot; &quot;--error-format&quot; &quot;json&quot; &quot;-Ccodegen-units=1&quot; &quot;-Zui-testing&quot; &quot;-Zdeduplicate-diagnostics=no&quot; &quot;-Zemit-future-incompat-report&quot; &quot;--emit&quot; &quot;metadata&quot; &quot;-C&quot; &quot;prefer-dynamic&quot; &quot;--out-dir&quot; &quot;/sb/d/rust/build/x86_64-unknown-linux-gnu/test/ui/async-await/issues/issue-64964&quot; &quot;-A&quot; &quot;unused&quot; &quot;-Crpath&quot; &quot;-O&quot; &quot;-Cdebuginfo=0&quot; &quot;-Lnative=/sb/d/rust/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;-Z&quot; &quot;query-dep-graph&quot; &quot;-C&quot; &quot;incremental=tmp/issue-64964&quot; &quot;--edition=2018&quot; &quot;-L&quot; &quot;/sb/d/rust/build/x86_64-unknown-linux-gnu/test/ui/async-await/issues/issue-64964/auxiliary&quot;\nstdout:\n------------------------------------------\n\n------------------------------------------\nstderr:\n------------------------------------------\nerror: internal compiler error: encountered incremental compilation error with predicates_of(core[128f]::future::future::Future)\n   |\n   = help: This is a known issue with the compiler. Run `cargo clean` to allow your project to compile\n   = note: Please follow the instructions below to create a bug report with the provided information\n   = note: See &lt;https://github.com/rust-lang/rust/issues/84970&gt; for more information\n\nthread &#39;rustc&#39; panicked at &#39;Found unstable fingerprints for predicates_of(core[128f]::future::future::Future): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(&lt;Self as std::future::Future&gt;), []), /sb/d/rust/library/core/src/future/future.rs:32:1: 32:17 (#0))] }&#39;, /sb/d/rust/compiler/rustc_query_system/src/query/plumbing.rs:644:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>cc <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span></p>",
        "id": 251211217,
        "sender_full_name": "nagisa",
        "timestamp": 1630320334
    },
    {
        "content": "<p>How did you get these? By running <code>./x.py test src/test/ui</code>?</p>",
        "id": 251231489,
        "sender_full_name": "mw",
        "timestamp": 1630331214
    },
    {
        "content": "<p><code>./x.py test --stage=1 --bless</code>, here's a reflog with the builds interspersed as far as I remember them:</p>\n<div class=\"codehilite\"><pre><span></span><code>748a089acdf (HEAD, fork/nagisa/aapcs-on-aarch) HEAD@{0}: commit (amend): Disallow the aapcs CC on Aarch64\n$ the failing `x.py test --stage 1`\n1dc9fdba2e8 HEAD@{1}: rebase (pick): Disallow the aapcs CC on Aarch64\ndbb0fe9d803 (origin/master, origin/HEAD) HEAD@{2}: rebase (start): checkout origin/master\needb53753e9 (origin/pr/88399) HEAD@{3}: checkout: moving from fb5fbaaab01f7612980e159316f45a31d25dfb05 to fork/nagisa/aapcs-on-aarch\nfb5fbaaab01 (origin/pr/88397, fork/nagisa/unsupported-calling-conventions) HEAD@{4}: commit (amend): Tracking issue for UNSUPPORTED_CALLING_CONVENTIONS\n$ x.py test --stage 1 --bless\n5b21fe0d744 HEAD@{5}: checkout: moving from eedb53753e96bbcdafec6a0d16be8232ac8f8b90 to fork/nagisa/unsupported-calling-conventions\needb53753e9 (origin/pr/88399) HEAD@{6}: commit (amend): Disallow the aapcs CC on Aarch64\n$ # a couple of other `x.py test`s, but fairly recently did a fresh build\n</code></pre></div>",
        "id": 251242974,
        "sender_full_name": "nagisa",
        "timestamp": 1630335789
    },
    {
        "content": "<p>so basically I did a rebase and then tried to rebuild rustc. before the rebase I was on a branch that looked like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>* fb5fbaaab01 - (origin/pr/88397, fork/nagisa/unsupported-calling-conventions) Tracking issue for UNSUPPORTED_CALLING_CONVENTIONS (3 days ago) &lt;Simonas Kazlauskas&gt;\n*   4a6547cca6d - Auto merge of #88227 - 12101111:nobundle-link-order, r=petrochenkov (3 days ago) &lt;bors&gt;\n</code></pre></div>",
        "id": 251243254,
        "sender_full_name": "nagisa",
        "timestamp": 1630335883
    },
    {
        "content": "<p>I still have the checkout in the state as it fails so I could investigate with some pointers and suggestions wrt where I should look.</p>",
        "id": 251243377,
        "sender_full_name": "nagisa",
        "timestamp": 1630335944
    },
    {
        "content": "<p>Those aren't incremental tests, so I'm not sure why we're building them in incremental mode</p>",
        "id": 251243530,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630336006
    },
    {
        "content": "<p>We should probably disable that</p>",
        "id": 251243547,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630336012
    },
    {
        "content": "<p>I saw this before</p>",
        "id": 251244375,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630336345
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> had said it was probably caused rebasing onto master</p>",
        "id": 251244458,
        "sender_full_name": "Jack Huey",
        "timestamp": 1630336370
    },
    {
        "content": "<p>I think we're re-using the incremental state from the previous stage1 build of Rust, which is completely unsupported</p>",
        "id": 251244817,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630336506
    },
    {
        "content": "<p>All local builds have the same version string (the current version with the <code>-dev</code>) suffix, so it doesn't get automatically discarded</p>",
        "id": 251244895,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630336536
    },
    {
        "content": "<p>would it make sense to ensure this version string is something along the lines of <code>git merge-base HEAD origin/master</code>? It wouldn't help if you're changing something incremental, but in most cases if you're just hacking on some unrelated area of the compiler and <code>git commit</code>ing, it would not discard the incremental cache.</p>",
        "id": 251245288,
        "sender_full_name": "nagisa",
        "timestamp": 1630336694
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> That is the <code>ignore-git</code> setting in <code>config.toml</code>.</p>\n<p>I'm a bit confused, this looks like a <em>test</em> is failing incremental.  Why is the <code>tmp</code> directory not cleared between running tests?</p>",
        "id": 251245617,
        "sender_full_name": "Eric Huss",
        "timestamp": 1630336830
    },
    {
        "content": "<p>I think leaving out the git string is the right default</p>",
        "id": 251245797,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630336922
    },
    {
        "content": "<p>As otherwise, it would be almost impossible to debug certain incremental issues</p>",
        "id": 251245870,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630336941
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Incremental.20ICE.20running.20rustc.20tests.20on.20origin.2Fmaster/near/251243530\">said</a>:</p>\n<blockquote>\n<p>Those aren't incremental tests, so I'm not sure why we're building them in incremental mode</p>\n</blockquote>\n<p>The tests say they are for incremental, can you say why they shouldn't use incremental?</p>\n<div class=\"codehilite\"><pre><span></span><code>// This test case makes sure that we can compile with incremental compilation\n// enabled when there are macros, traits, inheritance and associated types involved.\n</code></pre></div>\n<p>Should they be moved to <code>src/test/incremental</code>?  The incremental tests handle clearing the directory between runs which would avoid this problem.</p>\n<p>Another option is to use something like <code>-Cincremental={{build-base}}/...</code> to place the output in a well defined location that could be cleared before the test starts.</p>",
        "id": 251250994,
        "sender_full_name": "Eric Huss",
        "timestamp": 1630338997
    },
    {
        "content": "<p>Oh, I see</p>",
        "id": 251253420,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630340094
    },
    {
        "content": "<p>In that case, I think we should just be clearing out the temporary directory when the compiler is rebuilt</p>",
        "id": 251253464,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1630340115
    },
    {
        "content": "<p>I've got those ICE before</p>",
        "id": 251281246,
        "sender_full_name": "Gary Guo",
        "timestamp": 1630351675
    },
    {
        "content": "<p>Just <code>rm -rf tmp</code></p>",
        "id": 251281304,
        "sender_full_name": "Gary Guo",
        "timestamp": 1630351689
    },
    {
        "content": "<p>I believe they are just not recompiled after rustc recompilation</p>",
        "id": 251281413,
        "sender_full_name": "Gary Guo",
        "timestamp": 1630351742
    },
    {
        "content": "<p>We could just.. recompile them?</p>",
        "id": 251281605,
        "sender_full_name": "Gary Guo",
        "timestamp": 1630351825
    },
    {
        "content": "<p>NVM, replied a bit to fast before completing reading the thread <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 251281894,
        "sender_full_name": "Gary Guo",
        "timestamp": 1630351952
    },
    {
        "content": "<p>I think those tests should just be moved to <code>src/test/incremental</code> where compiletest will take care of the cache directory</p>",
        "id": 251517837,
        "sender_full_name": "mw",
        "timestamp": 1630482893
    }
]