[
    {
        "content": "<p>Let's discuss the proposed changes to the stability annotations to propagate automatically to their variants and fields here</p>",
        "id": 203393543,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594305503
    },
    {
        "content": "<p>for context, this is regarding this PR:  Inherit <code>#[stable(..)]</code> annotations in enum variants and fields from its item <a href=\"https://github.com/rust-lang/rust/issues/71481\">#71481</a></p>",
        "id": 203396889,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306915
    },
    {
        "content": "<p>which is to address this issue:  Reduce the places where <code>stable</code> annotations are needed <a href=\"https://github.com/rust-lang/rust/issues/65515\">#65515</a></p>",
        "id": 203396980,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594306935
    },
    {
        "content": "<p>The PR propagates down a <code>stable</code> annotation down to an ADTs variants and fields to reduce the verbosity of displayed code in diagnostics involving them. The argument has been raised that it could lead to the stabilization of variants and fields by accident. Note that you can still override the new behavior using the <code>unstable</code> annotation. An alternative approach raised in the compiler meeting would be to only propagate the annotation to _fields_ and not enums. That would get us the biggest bang for the buck as most of the cases I've seen where annotations were shown to users where when pointing at variants (which don't cover their annotations).</p>",
        "id": 203397612,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594307204
    },
    {
        "content": "<p>(To be clear, you mean: \"to _fields_ and not enum <strong>variants</strong>\", right?)</p>",
        "id": 203398413,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307573
    },
    {
        "content": "<p>another suggestion by <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> was to extend the <code>#[stable]</code> attribute domain-specific language to support <code>#[stable(..., include_fields)]</code> as a way to opt-in to the new behavior.</p>",
        "id": 203398584,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> do you think that's overkill? Would it just not get used? I cannot imagine it to be that hard to implement...</p>",
        "id": 203398676,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594307699
    },
    {
        "content": "<blockquote>\n<p>(To be clear, you mean: \"to _fields_ and not enum variants\", right?)</p>\n</blockquote>\n<p>yes</p>",
        "id": 203398730,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594307730
    },
    {
        "content": "<p>I think it would be possible, but at that point we could also do it for variants, right?</p>",
        "id": 203398830,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594307770
    },
    {
        "content": "<p>That would get around the \"accidental mistake\" angle</p>",
        "id": 203398865,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594307788
    },
    {
        "content": "<p>Arguably one technical reason to propagate the <code>#[stable]</code> annotation in enums is because visibility behaves that way</p>",
        "id": 203411390,
        "sender_full_name": "nagisa",
        "timestamp": 1594313527
    },
    {
        "content": "<p>but it only behaves that way with variants AFAIR?</p>",
        "id": 203412378,
        "sender_full_name": "nagisa",
        "timestamp": 1594314065
    },
    {
        "content": "<p>The interesting thing to me is that this is only for our own consumption. We don't need to be worried about _end users_ misusing this.</p>",
        "id": 203424936,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594320936
    },
    {
        "content": "<p>I’m worried about implementation of stdlib misusing this.</p>",
        "id": 203425174,
        "sender_full_name": "nagisa",
        "timestamp": 1594321041
    },
    {
        "content": "<p>It sounds super easy to accidentally add something that you think ought to be unstable but rather ends up being stable due to an annotation that's not very local.</p>",
        "id": 203425221,
        "sender_full_name": "nagisa",
        "timestamp": 1594321077
    },
    {
        "content": "<p>I don't think that no annotation would be assumed to be unstable. I would have expected an <code>unstable</code> annotation to be provided instead.</p>",
        "id": 203425363,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1594321143
    },
    {
        "content": "<p>What I’m advocating is local/explicit annotations, stable or unstable.</p>",
        "id": 203425429,
        "sender_full_name": "nagisa",
        "timestamp": 1594321188
    },
    {
        "content": "<p>I guess I’ll motivate this with an example that I encounter super often when designing my own libraries...</p>",
        "id": 203425505,
        "sender_full_name": "nagisa",
        "timestamp": 1594321212
    },
    {
        "content": "<p>I often get bitten by myself adding a variant or a field to a variant of an enum and finding that its accidentally public (despite not having a local <code>pub</code> anywhere, because public works differently in enums). I often have to go out of my way to not forget to ensure certain things stay private. Luckily its more often than not just some library nobody ever uses, so I can just keep churning out breaking releases no problem.</p>",
        "id": 203425743,
        "sender_full_name": "nagisa",
        "timestamp": 1594321350
    },
    {
        "content": "<p>accidentally stabilizing some field in the standard library has way higher consequences.</p>",
        "id": 203425780,
        "sender_full_name": "nagisa",
        "timestamp": 1594321369
    },
    {
        "content": "<p>(Side note that I regret not having the \"explicit pub\" rule extend to enum variants...)</p>",
        "id": 204207023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1594993386
    }
]