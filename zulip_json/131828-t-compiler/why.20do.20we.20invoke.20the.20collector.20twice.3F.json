[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>, <span class=\"user-mention\" data-user-id=\"124287\">@mw</span>, or somebody, perhaps one of you can explain <a href=\"https://github.com/rust-lang/rust/blob/79d8a0fcefa5134db2a94739b1d18daa01fc6e9f/src/librustc_codegen_utils/codegen_backend.rs#L128-L132\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/79d8a0fcefa5134db2a94739b1d18daa01fc6e9f/src/librustc_codegen_utils/codegen_backend.rs#L128-L132\">this code</a> to me:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">codegen_crate</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">tcx</span>: <span class=\"nc\">TyCtxt</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;tcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_rx</span>: <span class=\"nc\">mpsc</span>::<span class=\"n\">Receiver</span><span class=\"o\">&lt;</span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">dyn</span><span class=\"w\"> </span><span class=\"n\">Any</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"></span>\n<span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">dyn</span><span class=\"w\"> </span><span class=\"n\">Any</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span>::<span class=\"n\">rustc_mir</span>::<span class=\"n\">monomorphize</span>::<span class=\"n\">assert_symbols_are_distinct</span><span class=\"p\">(</span><span class=\"n\">tcx</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">collector</span>::<span class=\"n\">collect_crate_mono_items</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">tcx</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">collector</span>::<span class=\"n\">MonoItemCollectionMode</span>::<span class=\"n\">Eager</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">).</span><span class=\"mf\">0.</span><span class=\"n\">iter</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">mono_item</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">collector</span>::<span class=\"n\">collect_crate_mono_items</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">tcx</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">collector</span>::<span class=\"n\">MonoItemCollectionMode</span>::<span class=\"n\">Eager</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">).</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>unless i'm missing something, won't this run the collector <em>twice</em>?</p>",
        "id": 152567672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545852414
    },
    {
        "content": "<p>I would expect a query or something</p>",
        "id": 152567683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545852448
    },
    {
        "content": "<p>maybe that code is dead or something? (not obviously true)</p>",
        "id": 152567687,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1545852475
    },
    {
        "content": "<p>Yes, that just looks wrong. It's probably meant to call the <code>collect_and_partition_mono_items</code> query.</p>",
        "id": 154557073,
        "sender_full_name": "mw",
        "timestamp": 1546854606
    },
    {
        "content": "<p>should we file an issue <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> ?</p>",
        "id": 154578386,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546876219
    },
    {
        "content": "<p>yes</p>",
        "id": 154579006,
        "sender_full_name": "mw",
        "timestamp": 1546876735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> filed <a href=\"https://github.com/rust-lang/rust/issues/57406\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57406\">https://github.com/rust-lang/rust/issues/57406</a></p>",
        "id": 154579206,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546876897
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
        "id": 154581026,
        "sender_full_name": "mw",
        "timestamp": 1546878368
    },
    {
        "content": "<p>are there specific tests to run for this issue apart from the codegen ones ? mostly I'm wondering if changing the collector mode from eager to \"whatever the query is doing\" (that is, lazy unless we asked to link dead code) will need special care ?</p>",
        "id": 154593017,
        "sender_full_name": "lqd",
        "timestamp": 1546888774
    },
    {
        "content": "<p>(I guess I can also open a WIP PR and see what travis complains about)</p>",
        "id": 154593114,
        "sender_full_name": "lqd",
        "timestamp": 1546888818
    },
    {
        "content": "<blockquote>\n<p>I guess I can also open a WIP PR</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/57418\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57418\">#57418</a><br>\n(and thanks <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I wondered whether I should have mentioned  in the PR description the reason for removing the <code>assert_symbols_are_distinct</code>)</p>",
        "id": 154595475,
        "sender_full_name": "lqd",
        "timestamp": 1546890416
    },
    {
        "content": "<p>Never hurts to mention it, so that a reviewer doesnâ€™t need to go and verify <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 154596728,
        "sender_full_name": "nagisa",
        "timestamp": 1546891258
    },
    {
        "content": "<p>turns out this is an <a href=\"https://github.com/rust-lang/rust/pull/57418#issuecomment-452323034\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/57418#issuecomment-452323034\">unimportant codegen backend</a> not the LLVM one, some comments might have saved us all the confusion :)</p>",
        "id": 154650848,
        "sender_full_name": "lqd",
        "timestamp": 1546960484
    },
    {
        "content": "<p>I realized that already, still seems bad</p>",
        "id": 154654383,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546963607
    },
    {
        "content": "<p>but if I thought it was on the main code path I would have made a bigger deal of it :)</p>",
        "id": 154654396,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1546963615
    },
    {
        "content": "<p>I wonder if there are tests for this specific code path</p>",
        "id": 154654904,
        "sender_full_name": "lqd",
        "timestamp": 1546963995
    },
    {
        "content": "<p>(apparently so, nice)</p>",
        "id": 154664429,
        "sender_full_name": "lqd",
        "timestamp": 1546971423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124287\">@mw</span> what do you want me to do for <a href=\"https://github.com/rust-lang/rust/issues/57418\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57418\">#57418</a> ? I'm not sure how to test this backend (it seems to be used in one <code>run-make-fulldeps</code> test) to make sure the behaviour doesn't change (and bjorn3 thought it was broken). I was thinking: 1) remove the <code>inst.def.is_inline(tcx)</code> calls you mentioned 2) add a comment explaining what this backend does (apparently it's part of a bigger picture to allow rustc to be built without LLVM)</p>",
        "id": 154711358,
        "sender_full_name": "lqd",
        "timestamp": 1547026814
    },
    {
        "content": "<p>I'm not sure what this backend is used for, either. I think even the RLS needs LLVM at the moment.</p>",
        "id": 154715990,
        "sender_full_name": "mw",
        "timestamp": 1547031811
    },
    {
        "content": "<p>I'd say, if the <code>run-make-fulldeps</code> tests pass, it should be fine.</p>",
        "id": 154716033,
        "sender_full_name": "mw",
        "timestamp": 1547031842
    },
    {
        "content": "<p>I'd also start with removing the <code>is_inline</code> calls and see if that breaks any tests.</p>",
        "id": 154716061,
        "sender_full_name": "mw",
        "timestamp": 1547031885
    },
    {
        "content": "<p>hmm bjorn3 says this backend is not really used</p>",
        "id": 154721856,
        "sender_full_name": "lqd",
        "timestamp": 1547039321
    },
    {
        "content": "<p>OK, in that case, anything that doesn't break tests is fine, I'd say.</p>",
        "id": 154721879,
        "sender_full_name": "mw",
        "timestamp": 1547039378
    },
    {
        "content": "<p>I've removed the is_inline call, and it doesn't change the <code>run-make-fulldeps</code> tests locally; I'll push the commit so that we can check Travis (update: commit pushed)</p>",
        "id": 154722172,
        "sender_full_name": "lqd",
        "timestamp": 1547039728
    }
]