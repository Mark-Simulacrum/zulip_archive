[
    {
        "content": "<p>I'm just allocating a topic to discuss reduction tooling, which was <a href=\"https://blog.rust-lang.org/inside-rust/2022/02/22/compiler-team-ambitions-2022.html#mcve-reduction-tooling\">mentioned as an aspiration</a> in the 2022 ambitions post</p>",
        "id": 273827248,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646236230
    },
    {
        "content": "<p>my current big open question is how many of the techniques described in <a href=\"http://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\">my blog post</a> can be expressed atop current tools (like <a href=\"https://embed.cs.utah.edu/creduce/\">creduce</a> and <a href=\"https://github.com/jethrogb/rust-reduce\">rust-reduce</a>), versus which techniques would require a new tool to be developed.</p>",
        "id": 273827478,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646236325
    },
    {
        "content": "<p>actually, a better first step would be to just collect the set of existing useful reduction tools that might be applied to Rust. <code>creduce</code> gets the most attention, but I'm pretty sure I saw others mentioned, perhaps in reddit in reaction to either the ambitions post or my blog post specifically about MCVE itself...</p>",
        "id": 273828438,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646236653
    },
    {
        "content": "<p>okay, here's a <a href=\"https://www.reddit.com/r/rust/comments/dy6nk7/rust_bug_minimization_patterns/f7znrqk/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3\">relevant reddit subthread</a></p>",
        "id": 273831870,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646237646
    },
    {
        "content": "<p><a href=\"https://blog.regehr.org/?s=reduction\">John Regehr's blog has a reduction tag</a> and that might yield excellent background reading material.</p>",
        "id": 273832041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646237718
    },
    {
        "content": "<p>and <a href=\"https://www.drmaciver.com/2019/01/notes-on-test-case-reduction/\">David MacIver has a post with lots of links</a> that go pretty far back in time. I have not yet read e.g. the <a href=\"https://www.cs.purdue.edu/homes/xyzhang/fall07/Papers/delta-debugging.pdf\">delta debugging paper</a> by Zeller + Hlidebrandt</p>",
        "id": 273832308,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646237819
    },
    {
        "content": "<p>Perses is my current recommendation here for most purposes; it'll typically be much faster than creduce</p>",
        "id": 273832913,
        "sender_full_name": "simulacrum",
        "timestamp": 1646238096
    },
    {
        "content": "<p>this, right? <a href=\"https://github.com/perses-project/perses\">https://github.com/perses-project/perses</a></p>",
        "id": 273833560,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646238328
    },
    {
        "content": "<p>yeah</p>",
        "id": 273833608,
        "sender_full_name": "simulacrum",
        "timestamp": 1646238351
    },
    {
        "content": "<p>IIRC, the default needs a slight adjustment on some Rust inputs (it tokenizes incorrectly for &lt;&lt; or &gt;&gt;, leading to compile failures), but it's a relatively easy fix in the test script when necessary.</p>",
        "id": 273833752,
        "sender_full_name": "simulacrum",
        "timestamp": 1646238395
    },
    {
        "content": "<p>Is perses restricted to a single file the way that (IIRC) creduce is? Or will it operate on multi-file (or even multi-crate ???) builds?</p>",
        "id": 273835195,
        "sender_full_name": "pnkfelix",
        "timestamp": 1646238904
    },
    {
        "content": "<p>Everything is basically single file to my knowledge</p>",
        "id": 273839129,
        "sender_full_name": "simulacrum",
        "timestamp": 1646240301
    },
    {
        "content": "<p>rust-reduce helps by concatenating all the files in a crate (sometimes it causes issues) into a single file via <a href=\"https://github.com/TedDriggs/syn-inline-mod\">https://github.com/TedDriggs/syn-inline-mod</a></p>",
        "id": 273842372,
        "sender_full_name": "lqd",
        "timestamp": 1646241441
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/91594#issuecomment-986920073\">this comment</a> mentions running <code>perses</code> alongside <code>cargo-expand</code> to put everything in one file</p>",
        "id": 273966287,
        "sender_full_name": "detrumi",
        "timestamp": 1646311363
    }
]