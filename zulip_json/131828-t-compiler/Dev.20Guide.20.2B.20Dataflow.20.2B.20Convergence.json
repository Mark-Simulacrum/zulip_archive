[
    {
        "content": "<p>Pinging <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span>, since I think they were involved in this part of the Dev Guide.</p>",
        "id": 218092961,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606484384
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 218093036,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606484408
    },
    {
        "content": "<p>So on <a href=\"https://rustc-dev-guide.rust-lang.org/mir/dataflow.html#convergence\">this part of the dev guide</a> it is stated that:</p>\n<blockquote>\n<p>Having a top value ensures that your semilattice has a finite height, and the law state above ensures that once the dataflow state reaches top, it will no longer change (the fixpoint will be top).</p>\n</blockquote>\n<p>Which I'm not entirely sure is the case?</p>\n<p>As I've understood it, there are lattices with both a top and bottom value which have infinite height (think of the natural numbers with the partial order of divisibility: a | b &lt;----&gt; \"a divides b\", which has top and bottom elements (bottom is 1, and top is 0) but is infinite in height). So, I think I'm missing a third restriction over the lattice, that forces its height to be finite... but it might be implicit in the document or it might be missing. I'm not sure which.</p>\n<p>Sorry if what I'm asking is too obvious &gt;.&lt; but I want to know if we're on the same page, so that I can move forward with learning the dataflow tools :3</p>",
        "id": 218093481,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606484667
    },
    {
        "content": "<p>The dataflow framework docs explain this in a different way: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/dataflow/trait.Analysis.html#convergence\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir/dataflow/trait.Analysis.html#convergence</a></p>",
        "id": 218094386,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606485207
    },
    {
        "content": "<p>Note that convergence is a non-issue when writing only gen-kill analyses, which cover the majority of dataflow analyses you might want to do</p>",
        "id": 218094875,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606485464
    },
    {
        "content": "<p>You mean monotonicity? <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span></p>",
        "id": 218099995,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606488814
    },
    {
        "content": "<p>If I'm understanding it correctly, monotonicity would still require a finite domain</p>",
        "id": 218100104,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606488864
    },
    {
        "content": "<p>hmm, the docs seem to imply convergence, but I'm not sure</p>",
        "id": 218100157,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606488899
    },
    {
        "content": "<blockquote>\n<p>when writing only gen-kill analyses, which cover the majority of dataflow analyses you might want to do</p>\n</blockquote>\n<p>I'm actually not sure if where I'm headed with the constprop augmentation, a gen-kill analysis is all that I'll need. Although that would be pretty nice :3</p>",
        "id": 218100240,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606488958
    },
    {
        "content": "<p>oh, if you're adding range analysis then you need more</p>",
        "id": 218100336,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606489000
    },
    {
        "content": "<p>Yeah, I was thinking the other day that this tool fits what I think value range analysis would need</p>",
        "id": 218100391,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606489038
    },
    {
        "content": "<p>And thus I might be able to get away with both doing VRA and supporting a better constprop through the same analysis</p>",
        "id": 218100440,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606489073
    },
    {
        "content": "<p>(VRA in this case would be almost a superset of constprop, right?)</p>",
        "id": 218100505,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606489095
    },
    {
        "content": "<p>BTW I don't remember which module it was, but yesterday I was studying dataflow with this playlist (linked by the dataflow docs in the dev guide :3) <a href=\"https://www.youtube.com/watch?v=NVBQSR_HdL0&amp;list=PL_sGR8T76Y58l3Gck3ZwIIHLWEmXrOLV_&amp;index=2\">https://www.youtube.com/watch?v=NVBQSR_HdL0&amp;list=PL_sGR8T76Y58l3Gck3ZwIIHLWEmXrOLV_&amp;index=2</a><br>\nAnd there they mentioned the issue of needing a finite domain. I'm gonna dig up the exact slide, but there's where I learned about that</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"NVBQSR_HdL0\" href=\"https://www.youtube.com/watch?v=NVBQSR_HdL0&amp;list=PL_sGR8T76Y58l3Gck3ZwIIHLWEmXrOLV_&amp;index=2\"><img src=\"https://i.ytimg.com/vi/NVBQSR_HdL0/default.jpg\"></a></div>",
        "id": 218100615,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606489175
    },
    {
        "content": "<p>Alright, found it. Here are all the restrictions that they stated to ensure termination: <br>\n<a href=\"https://www.youtube.com/watch?v=fWoc2bZZ59A&amp;list=PL_sGR8T76Y58l3Gck3ZwIIHLWEmXrOLV_&amp;index=3&amp;t=9m34s\">https://www.youtube.com/watch?v=fWoc2bZZ59A&amp;list=PL_sGR8T76Y58l3Gck3ZwIIHLWEmXrOLV_&amp;index=3&amp;t=9m34s</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"fWoc2bZZ59A\" href=\"https://www.youtube.com/watch?v=fWoc2bZZ59A&amp;list=PL_sGR8T76Y58l3Gck3ZwIIHLWEmXrOLV_&amp;index=3&amp;t=9m34s\"><img src=\"https://i.ytimg.com/vi/fWoc2bZZ59A/default.jpg\"></a></div><ol>\n<li>A complete lattice (so, a partial order, a Top element, a Bottom element, and join_b(x, y) is <code>x |_| y</code> for all b.</li>\n<li>Trans_b is monotonic (so, if <code>x &lt;= y</code>, then <code>trans_b(x) &lt;= trans_b(y)</code>)</li>\n<li>And the last one that seals the deal, <strong>finite lattice height</strong>. So not entirely a finite domain (you could have e.g. infinite width in some or all levels of the lattice, but the amount of steps that separate Bottom from Top is finite).</li>\n</ol>",
        "id": 218101537,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606489732
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span>)</p>",
        "id": 218118179,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606500996
    },
    {
        "content": "<p>Sounds correct to me, but I'm not that well-versed in dataflow</p>",
        "id": 218118324,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606501135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"212698\">@Félix Fischer</span> Please open a PR to the dev-guide with <code>r? @oli-obk</code> if that section is incorrect :)</p>",
        "id": 218120053,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606502809
    },
    {
        "content": "<p>Ahhh, but <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> I'm not entirely sure if it's incorrect, that's why I pinged you here, since you were the last editor of that section and I'd assumed that maybe you knew the answer :)</p>",
        "id": 218123501,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606505762
    },
    {
        "content": "<p>I'm not sure either :)</p>\n<p>I'm quite new to data-flow analysis (I learned from this videos that you referenced); I've been trying to understand it, but I think you know more than I.</p>",
        "id": 218124249,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606506377
    },
    {
        "content": "<p>Oh noes, I'm also new to data-flow analysis (although the lattice topic is close to other discrete math things that I'm very familiar with, so maybe that's where I give the impression x3)</p>\n<p>Tell you what. Shall I open a PR and then we ask others that are involved in that, for review?<br>\nI should open one regardless, since I want to put a link to the Wikipedia article about semi-lattices (since they are mentioned but only the Lattice article is linked to) :)</p>",
        "id": 218124535,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1606506667
    },
    {
        "content": "<p>Sounds like a deal :)</p>",
        "id": 218127650,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606509542
    },
    {
        "content": "<p>Well, I ended up opening an Issue describing all my nitpicks with that section. <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> take a look <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>  <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/990\">https://github.com/rust-lang/rustc-dev-guide/issues/990</a></p>",
        "id": 220149533,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1608141322
    }
]