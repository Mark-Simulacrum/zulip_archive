[
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> -- <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> told me he is not able to be here today. If anyone else wants to run the triage meeting (<span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>?) that would be great, otherwise I can be around at the usual time (in ~4 hours) but I won't be able to do any pre-triage.</p>",
        "id": 188096072,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581591956
    },
    {
        "content": "<p>/me afk for now</p>",
        "id": 188096114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581591964
    },
    {
        "content": "<p>I will likely miss most of the meeting today as well.</p>",
        "id": 188108675,
        "sender_full_name": "simulacrum",
        "timestamp": 1581602709
    },
    {
        "content": "<p>PSA: I'm out sick and won't be online or review PRs for at least the rest of the week.</p>",
        "id": 188112762,
        "sender_full_name": "mw",
        "timestamp": 1581605509
    },
    {
        "content": "<p>Oh dear! Poor compiler team</p>",
        "id": 188113288,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581605800
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>! Triage meeting starting <strong>now</strong>. We've got a bunch of people out today so we're just going to do the best we can. =) I'll probably cut right to any nominations and other urgent things. According to <a href=\"https://rust-lang.github.io/compiler-team/about/triage-meeting/\" target=\"_blank\" title=\"https://rust-lang.github.io/compiler-team/about/triage-meeting/\">the calendar</a>, this week we have a check-in from <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a> (cc me, <span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span>) and <a class=\"stream\" data-stream-id=\"216091\" href=\"/#narrow/stream/216091-t-compiler.2Fwg-polymorphization\">#t-compiler/wg-polymorphization</a> (cc <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>).</p>\n<p>But first...</p>\n<h1>Announcements</h1>",
        "id": 188113601,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606010
    },
    {
        "content": "<ul>\n<li>Tomorrow is Valentine's day <span aria-label=\"chocolate\" class=\"emoji emoji-1f36b\" role=\"img\" title=\"chocolate\">:chocolate:</span> <span aria-label=\"heart kiss\" class=\"emoji emoji-1f618\" role=\"img\" title=\"heart kiss\">:heart_kiss:</span> <span aria-label=\"bow and arrow\" class=\"emoji emoji-1f3f9\" role=\"img\" title=\"bow and arrow\">:bow_and_arrow:</span></li>\n</ul>",
        "id": 188113642,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606042
    },
    {
        "content": "<ul>\n<li>Tomorrow is a <strong>planning meeting</strong></li>\n</ul>",
        "id": 188113669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606063
    },
    {
        "content": "<ul>\n<li>Reminder that there are <a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=is%3Aopen+is%3Aissue+label%3AT-compiler+label%3AP-high+no%3Aassignee\">31 unassigned P-high issues</a></li>\n</ul>",
        "id": 188113928,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606230
    },
    {
        "content": "<p>OK, let's get started I guess. We'll kick off with </p>\n<h1><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=label%3Abeta-nominated+label%3AT-compiler\">Beta nominations</a></h1>",
        "id": 188114012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606264
    },
    {
        "content": "<ul>\n<li>Correct ICE caused by macros generating invalid spans <a href=\"https://github.com/rust-lang/rust/issues/68611\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68611\">#68611</a></li>\n</ul>",
        "id": 188114043,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606288
    },
    {
        "content": "<p>From last week:</p>\n<blockquote>\n<p>(we discussed backporting this in today's T-compiler meeting. We are not certain what warn! will do here, in terms of what an end-user will see, so we held off on approving this change until after we've double-checked the default UX there...)</p>\n</blockquote>",
        "id": 188114117,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606323
    },
    {
        "content": "<p>Yeah I was bit dubious about the <code>warn!</code> call here though it seems like this PR is basically harmless</p>",
        "id": 188114170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606347
    },
    {
        "content": "<p>But I guess I don't care enough to make a big thing out of it. I'm content to backport, that seems to be the consensus opinion from the emojis above :)</p>",
        "id": 188114291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606394
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/68611\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68611\">#68611</a> is also <strong>stable-nominated</strong>, should we also approve for stable backport?</li>\n</ul>",
        "id": 188114321,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606410
    },
    {
        "content": "<p>OK.</p>",
        "id": 188114413,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606459
    },
    {
        "content": "<h1><a href=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3Astable-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?utf8=%E2%9C%93&amp;q=+label%3Astable-nominated+label%3AT-compiler\">Stable nominated</a></h1>",
        "id": 188114557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606536
    },
    {
        "content": "<p>There are none that are not already approved.</p>",
        "id": 188114571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606543
    },
    {
        "content": "<p>I added a new beta-nominated PR</p>",
        "id": 188114578,
        "sender_full_name": "centril",
        "timestamp": 1581606549
    },
    {
        "content": "<ul>\n<li>Fix extra subslice lowering <a href=\"https://github.com/rust-lang/rust/issues/69128\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69128\">#69128</a> (for <strong>beta</strong> backport)</li>\n</ul>",
        "id": 188114632,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606587
    },
    {
        "content": "<p>seems ok to me</p>",
        "id": 188114857,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606722
    },
    {
        "content": "<p>though I can't register a vote easily because of how emojis work:)</p>",
        "id": 188114913,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606735
    },
    {
        "content": "<p>Did slice patterns get stabilized?</p>",
        "id": 188114933,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581606751
    },
    {
        "content": "<p>They did yes</p>",
        "id": 188114939,
        "sender_full_name": "centril",
        "timestamp": 1581606757
    },
    {
        "content": "<p>Ah</p>",
        "id": 188114945,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581606760
    },
    {
        "content": "<p>(In beta)</p>",
        "id": 188114948,
        "sender_full_name": "centril",
        "timestamp": 1581606764
    },
    {
        "content": "<p>Thanks</p>",
        "id": 188114959,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581606771
    },
    {
        "content": "<p>Not a lot of votes above :) I'm inclined to approve.</p>",
        "id": 188115001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606804
    },
    {
        "content": "<p>If there are any concerns though please do raise them</p>",
        "id": 188115023,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606821
    },
    {
        "content": "<p>/me does not vote on their own PRs... it feels wrong :D</p>",
        "id": 188115026,
        "sender_full_name": "centril",
        "timestamp": 1581606822
    },
    {
        "content": "<p>OK, approved, moving on.</p>",
        "id": 188115125,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606859
    },
    {
        "content": "<h1><a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pulls?q=is%3Aopen+is%3Apr+label%3AS-waiting-on-team+label%3AT-compiler\">S-waiting-on-team</a></h1>",
        "id": 188115194,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606905
    },
    {
        "content": "<ul>\n<li>rustc_session: allow overriding lint level of individual lints from a group <a href=\"https://github.com/rust-lang/rust/issues/67885\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67885\">#67885</a></li>\n</ul>",
        "id": 188115218,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606918
    },
    {
        "content": "<p>Just entered FCP, nothing more to say here probably</p>",
        "id": 188115236,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606930
    },
    {
        "content": "<ul>\n<li>Print nicer async/await trait errors for generators in any place in the error 'stack' <a href=\"https://github.com/rust-lang/rust/issues/67116\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67116\">#67116</a></li>\n</ul>",
        "id": 188115255,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606944
    },
    {
        "content": "<p><a href=\"https://internals.rust-lang.org/t/poll-how-much-context-to-give-for-async-error-messages/11753\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/poll-how-much-context-to-give-for-async-error-messages/11753\">Created an internals thread</a> in response to our last discussion</p>",
        "id": 188115276,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606959
    },
    {
        "content": "<p>The poll there had 71% in favor of minimal details</p>",
        "id": 188115348,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581606983
    },
    {
        "content": "<p>I personally agree with the majority; \"overloading\" is a real concern</p>",
        "id": 188115388,
        "sender_full_name": "centril",
        "timestamp": 1581607005
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/0tA_-kxynpmVgMjodAsOk1MQ/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/0tA_-kxynpmVgMjodAsOk1MQ/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/0tA_-kxynpmVgMjodAsOk1MQ/pasted_image.png\"></a></div>",
        "id": 188115411,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607019
    },
    {
        "content": "<p>I am tempted to say:</p>\n<ul>\n<li>We should consider (for the future) things like \"verbose\" or innovative UI options in IDEs</li>\n<li>But for this immediate PR we should prefer minimal stack trace</li>\n</ul>",
        "id": 188115452,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607055
    },
    {
        "content": "<p>Btw; I'd like to highlight a new soundness hole:</p>\n<blockquote>\n<p>Static lifetimes checking regression in rustc 1.41.0 <a href=\"https://github.com/rust-lang/rust/issues/69114\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69114\">#69114</a></p>\n</blockquote>",
        "id": 188115703,
        "sender_full_name": "centril",
        "timestamp": 1581607188
    },
    {
        "content": "<p>OK, <a href=\"https://github.com/rust-lang/rust/pull/67116#issuecomment-585810320\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/67116#issuecomment-585810320\">left a comment</a>, feel free to add your own thoughts.</p>",
        "id": 188115705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607189
    },
    {
        "content": "<p>It would be good to fix that one sooner rather than later and consider stable backporting.</p>",
        "id": 188115792,
        "sender_full_name": "centril",
        "timestamp": 1581607216
    },
    {
        "content": "<p>I wonder if <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> has time for deeper investigation</p>",
        "id": 188115825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607246
    },
    {
        "content": "<p>left a comment</p>",
        "id": 188115899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607292
    },
    {
        "content": "<ul>\n<li>PowerPC C ZST ABI fixes <a href=\"https://github.com/rust-lang/rust/issues/64259\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64259\">#64259</a> is S-waiting-on-our-team</li>\n</ul>",
        "id": 188115933,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607309
    },
    {
        "content": "<p>I'm not sure if it's really waiting on our team though :)</p>",
        "id": 188115991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607326
    },
    {
        "content": "<p>wait</p>",
        "id": 188115996,
        "sender_full_name": "eddyb",
        "timestamp": 1581607328
    },
    {
        "content": "<p>did I forget about it again</p>",
        "id": 188116010,
        "sender_full_name": "eddyb",
        "timestamp": 1581607334
    },
    {
        "content": "<p>for another month</p>",
        "id": 188116016,
        "sender_full_name": "eddyb",
        "timestamp": 1581607340
    },
    {
        "content": "<p>I don't know what current status is</p>",
        "id": 188116033,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607350
    },
    {
        "content": "<p><span aria-label=\"speechless\" class=\"emoji emoji-1f636\" role=\"img\" title=\"speechless\">:speechless:</span></p>",
        "id": 188116055,
        "sender_full_name": "eddyb",
        "timestamp": 1581607363
    },
    {
        "content": "<p>most recent comments suggest</p>\n<ul>\n<li><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> was going to investigate (but prob didn't have time)</li>\n<li>glaubitz says \"Is there actually stuff left to merge? The ABI fixes that were shipped with 1.40 actually reduced the number of testsuite failures for us on Debian powerpc dramatically.\"</li>\n</ul>",
        "id": 188116067,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607370
    },
    {
        "content": "<p>yeah this ZST stuff is much rarer than the other things fixed</p>",
        "id": 188116120,
        "sender_full_name": "eddyb",
        "timestamp": 1581607417
    },
    {
        "content": "<p>I think maybe you were going to prepare some minimal PR, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>, with the apprach you preferred? I remember discussing that a bit, at least.</p>",
        "id": 188116247,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607490
    },
    {
        "content": "<p>yeah then I forgot about it, <em>clearly</em></p>",
        "id": 188116278,
        "sender_full_name": "eddyb",
        "timestamp": 1581607508
    },
    {
        "content": "<p>I can leave a comment pinging the author saying \"we'd prefer to do this minimal thing\"</p>",
        "id": 188116301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607522
    },
    {
        "content": "<p>(i.e., from the team)</p>",
        "id": 188116314,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607526
    },
    {
        "content": "<p>I think you outlined what you had in mind on a comment somewhere, right?</p>",
        "id": 188116323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607532
    },
    {
        "content": "<p>I feel comfortable anyway taking minimal steps first and not risking over-generalizing</p>",
        "id": 188116341,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607546
    },
    {
        "content": "<p>Or you can just do that :)</p>",
        "id": 188116423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607580
    },
    {
        "content": "<p>I see <a href=\"https://github.com/rust-lang/rust/pull/64259#discussion_r329126394\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64259#discussion_r329126394\">this comment</a> from you:</p>\n<blockquote>\n<p>Wait, you've removed the target_env == \"gnu\" - this workaround only makes sense in that case, because ZSTs in C are a GNU extension.</p>\n</blockquote>",
        "id": 188116442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607592
    },
    {
        "content": "<p>I think it's split over several comments but what I had in mind is like a one line diff, we should've just done it months ago Q_Q</p>",
        "id": 188116444,
        "sender_full_name": "eddyb",
        "timestamp": 1581607592
    },
    {
        "content": "<p>sigh :)</p>",
        "id": 188116457,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607601
    },
    {
        "content": "<p>I remember you giving some small diff, yeah</p>",
        "id": 188116474,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607606
    },
    {
        "content": "<p>OK I'm going to leave a comment saying \"eddyb has a one line diff\" :P</p>",
        "id": 188116577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607668
    },
    {
        "content": "<p>no, you need to actually pester me to put up a PR &gt;_&lt;</p>",
        "id": 188116789,
        "sender_full_name": "eddyb",
        "timestamp": 1581607765
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/64259#issuecomment-585815831\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64259#issuecomment-585815831\">done</a></p>",
        "id": 188116818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607784
    },
    {
        "content": "<blockquote>\n<p>no, you need to actually pester me to put up a PR &gt;_&lt;</p>\n</blockquote>\n<p>/me adds a \"to do\" item: \"pester eddyb to put up a PR\"</p>",
        "id": 188116840,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607795
    },
    {
        "content": "<p>(I am actually doing this :P)</p>",
        "id": 188116852,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607801
    },
    {
        "content": "<p>Ooookay, moving on.</p>",
        "id": 188116936,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607829
    },
    {
        "content": "<h1><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">Nominated issues</a> -- there are 17</h1>",
        "id": 188116957,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607847
    },
    {
        "content": "<p>we won't get through them all so maybe people can scan for ones to prioritize, I will do the same</p>",
        "id": 188116973,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607859
    },
    {
        "content": "<ul>\n<li>internal compiler error: \"byte index 4 is not a char boundary\" <a href=\"https://github.com/rust-lang/rust/issues/69130\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69130\">#69130</a>  (this is fresh)</li>\n</ul>",
        "id": 188117009,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607878
    },
    {
        "content": "<p>just needs prioritization, I guess</p>",
        "id": 188117026,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607885
    },
    {
        "content": "<p>P-medium I think</p>",
        "id": 188117056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607900
    },
    {
        "content": "<p>agree</p>",
        "id": 188117065,
        "sender_full_name": "centril",
        "timestamp": 1581607907
    },
    {
        "content": "<ul>\n<li><code>miri</code> no longer builds after <a href=\"https://github.com/rust-lang/rust/issues/69105\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69105\">rust-lang/rust#69105</a> <a href=\"https://github.com/rust-lang/rust/issues/69117\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69117\">#69117</a></li>\n</ul>",
        "id": 188117164,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607951
    },
    {
        "content": "<p>P-medium I guess</p>",
        "id": 188117176,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607961
    },
    {
        "content": "<p>has PR I think</p>",
        "id": 188117180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581607963
    },
    {
        "content": "<p>Static lifetimes checking regression in rustc 1.41.0 A-borrow-checker A-lifetimes C-bug I-nominated I-unsound <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span> P-high T-compiler regression-from-stable-to-stable<br>\n<a href=\"https://github.com/rust-lang/rust/issues/69114\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69114\">#69114</a> opened 16 hours ago by ilyavenner</p>",
        "id": 188117246,
        "sender_full_name": "centril",
        "timestamp": 1581607994
    },
    {
        "content": "<p>didn't we just talk about that?</p>",
        "id": 188117269,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608010
    },
    {
        "content": "<p>Discussed before; Let's assign to Matthew?</p>",
        "id": 188117273,
        "sender_full_name": "centril",
        "timestamp": 1581608013
    },
    {
        "content": "<p>sure, ok, I'll do so and leave a comment</p>",
        "id": 188117300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608032
    },
    {
        "content": "<p>ICE: multiple @ bindings of slice patterns, e.g. <code>[a @ .., b @ ..]</code> A-slice-patterns C-bug I-ICE I-nominated T-compiler<br>\n<a href=\"https://github.com/rust-lang/rust/issues/69103\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69103\">#69103</a> opened 21 hours ago by memoryruins </p>\n<p>Has PR, labeling as P-high due to impending stabilization and removing nomination</p>",
        "id": 188117391,
        "sender_full_name": "centril",
        "timestamp": 1581608077
    },
    {
        "content": "<p>you would think <code>*p = &amp;n</code> where <code>p: *mut &amp;'static T</code> would still error if <code>&amp;n</code> isn't <code>&amp;'static T</code></p>",
        "id": 188117421,
        "sender_full_name": "eddyb",
        "timestamp": 1581608100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> let's discuss on issue</p>",
        "id": 188117452,
        "sender_full_name": "centril",
        "timestamp": 1581608115
    },
    {
        "content": "<p>oh yeah I didn't want to spam it and I was too slow here :P</p>",
        "id": 188117465,
        "sender_full_name": "eddyb",
        "timestamp": 1581608126
    },
    {
        "content": "<p>Rustc overflow its stack when using impl Trait and the struct containing the function itself A-impl-trait C-bug I-crash I-nominated T-compiler<br>\n<a href=\"https://github.com/rust-lang/rust/issues/69096\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69096\">#69096</a> opened yesterday by lszxb</p>",
        "id": 188117475,
        "sender_full_name": "centril",
        "timestamp": 1581608131
    },
    {
        "content": "<p>/me is a bit confused about who is trying to drive :)</p>",
        "id": 188117498,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608145
    },
    {
        "content": "<p>I guess I did ask for people to make some suggestions...</p>",
        "id": 188117520,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608158
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> two drivers can be more effective :P</p>",
        "id": 188117567,
        "sender_full_name": "centril",
        "timestamp": 1581608165
    },
    {
        "content": "<p>\"interleaved driving\"</p>",
        "id": 188117575,
        "sender_full_name": "centril",
        "timestamp": 1581608169
    },
    {
        "content": "<p>I'm feeling a bit overwhelmed :)</p>",
        "id": 188117579,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608171
    },
    {
        "content": "<p>I was paging back with stuff and saw I had missed discussion is all</p>",
        "id": 188117594,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608181
    },
    {
        "content": "<p>anyway, it's fine, we can look at <a href=\"https://github.com/rust-lang/rust/issues/69096\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69096\">#69096</a></p>",
        "id": 188117598,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608188
    },
    {
        "content": "<p>Looks like codegen issue</p>",
        "id": 188117610,
        "sender_full_name": "centril",
        "timestamp": 1581608195
    },
    {
        "content": "<p>(from backtrace)</p>",
        "id": 188117623,
        "sender_full_name": "centril",
        "timestamp": 1581608207
    },
    {
        "content": "<p>Do we think this should... compile, not... ?</p>",
        "id": 188117640,
        "sender_full_name": "centril",
        "timestamp": 1581608221
    },
    {
        "content": "<p>is it a regression? probably not</p>",
        "id": 188117669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608237
    },
    {
        "content": "<p>checking</p>",
        "id": 188117679,
        "sender_full_name": "centril",
        "timestamp": 1581608252
    },
    {
        "content": "<p>I feel like we added some code to check for this sort of thing</p>",
        "id": 188117693,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608259
    },
    {
        "content": "<p>well, hmm,</p>",
        "id": 188117754,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608283
    },
    {
        "content": "<p>I guess the type is not infinite</p>",
        "id": 188117769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608290
    },
    {
        "content": "<p>the problem is probably occurring when generating the symbol name, <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>, does the symbol name somehow include the return type or something?</p>",
        "id": 188117815,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608323
    },
    {
        "content": "<p>Godbolt says this regressed in 1.30.0</p>",
        "id": 188117820,
        "sender_full_name": "centril",
        "timestamp": 1581608327
    },
    {
        "content": "<p>used to compile</p>",
        "id": 188117831,
        "sender_full_name": "centril",
        "timestamp": 1581608333
    },
    {
        "content": "<p>ah, interesting, let's tag it for the cleanup crew</p>",
        "id": 188117855,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608349
    },
    {
        "content": "<p>As far as priority, it's a regression, which makes me tend towards P-high, though I'd otherwise have probably said P-medium</p>",
        "id": 188118036,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608450
    },
    {
        "content": "<p>Yeah; although I could see P-medium being justified as \"no one said anything for so many releases\" :P</p>",
        "id": 188118065,
        "sender_full_name": "centril",
        "timestamp": 1581608478
    },
    {
        "content": "<p>but let's do p-high</p>",
        "id": 188118069,
        "sender_full_name": "centril",
        "timestamp": 1581608482
    },
    {
        "content": "<ul>\n<li>Suspicious lifetime inference. <a href=\"https://github.com/rust-lang/rust/issues/68948\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68948\">#68948</a></li>\n</ul>",
        "id": 188118160,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> how can I do the one-line patch when <a href=\"https://github.com/rust-lang/rust/issues/69096\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69096\">#69096</a> is far more interesting lol (left a comment already)</p>",
        "id": 188118198,
        "sender_full_name": "eddyb",
        "timestamp": 1581608547
    },
    {
        "content": "<p>I think this is \"close as expected behavior\"</p>",
        "id": 188118210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608559
    },
    {
        "content": "<p>I naively thought we weren't wasting time with LLVM type names anymore, I wonder what kind of compile time wins we can get from skipping that</p>",
        "id": 188118230,
        "sender_full_name": "eddyb",
        "timestamp": 1581608574
    },
    {
        "content": "<ul>\n<li>'index out of bounds: the len is 1 but the index is 1': libcore/slice/mod.rs <a href=\"https://github.com/rust-lang/rust/issues/68801\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68801\">#68801</a></li>\n</ul>",
        "id": 188118363,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608645
    },
    {
        "content": "<p>I think the problem here is we don't really know the code that reproduces it</p>",
        "id": 188118404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608672
    },
    {
        "content": "<p>ubiquitous <code>#[track_caller]</code> can't come soon enough</p>",
        "id": 188118414,
        "sender_full_name": "eddyb",
        "timestamp": 1581608682
    },
    {
        "content": "<p>I'm inclined to un-nominate and re-nominate if we have an example.</p>",
        "id": 188118478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608725
    },
    {
        "content": "<p>but I can just leave it a week, don't care</p>",
        "id": 188118486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608734
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> let's call it P-high though?</p>",
        "id": 188118489,
        "sender_full_name": "centril",
        "timestamp": 1581608737
    },
    {
        "content": "<p>we do now though? just not from the original poster</p>",
        "id": 188118491,
        "sender_full_name": "eddyb",
        "timestamp": 1581608738
    },
    {
        "content": "<p>I don't believe we have anything that is narrowed down to something actionable</p>",
        "id": 188118507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608750
    },
    {
        "content": "<p>let's ping cleanup?</p>",
        "id": 188118523,
        "sender_full_name": "centril",
        "timestamp": 1581608759
    },
    {
        "content": "<p>but I'm not entirely sure</p>",
        "id": 188118524,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608760
    },
    {
        "content": "<p>Yeah, I was debating</p>",
        "id": 188118569,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608767
    },
    {
        "content": "<p>this is presumably reducible <a href=\"https://github.com/rust-lang/rust/issues/68801#issuecomment-582920167\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68801#issuecomment-582920167\">https://github.com/rust-lang/rust/issues/68801#issuecomment-582920167</a></p>",
        "id": 188118570,
        "sender_full_name": "eddyb",
        "timestamp": 1581608768
    },
    {
        "content": "<p>sure, cleanup crew seems reasonable</p>",
        "id": 188118576,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608772
    },
    {
        "content": "<p>something about that comment made me suspect it won't reproduce but perhaps I was wrong</p>",
        "id": 188118605,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608792
    },
    {
        "content": "<p>let's try cleanup crew then, seems good</p>",
        "id": 188118613,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608800
    },
    {
        "content": "<p>...and priority?</p>",
        "id": 188118706,
        "sender_full_name": "centril",
        "timestamp": 1581608861
    },
    {
        "content": "<p>re: priority, the ICE is pretty bad</p>",
        "id": 188118709,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608863
    },
    {
        "content": "<p>it's not a regression afawk?</p>",
        "id": 188118722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608870
    },
    {
        "content": "<p>no idea</p>",
        "id": 188118818,
        "sender_full_name": "centril",
        "timestamp": 1581608911
    },
    {
        "content": "<p>Yeah, hard to say, especially witout a minimal example</p>",
        "id": 188118844,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608933
    },
    {
        "content": "<p>I guess P-high is ok, given the uselessness of the ICE</p>",
        "id": 188118860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581608942
    },
    {
        "content": "<p>we could leave nominated and revisit</p>",
        "id": 188118875,
        "sender_full_name": "centril",
        "timestamp": 1581608955
    },
    {
        "content": "<p>I marked as P-high. Let's do one more then pivot to check-ins</p>",
        "id": 188118993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> btw, why is <a href=\"https://github.com/rust-lang/rust/pull/68938\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/68938\">https://github.com/rust-lang/rust/pull/68938</a> nominated?</p>",
        "id": 188119020,
        "sender_full_name": "centril",
        "timestamp": 1581609026
    },
    {
        "content": "<ul>\n<li>30-60% perf regression in ctfe-stress <a href=\"https://github.com/rust-lang/rust/issues/68967\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68967\">#68967</a></li>\n</ul>",
        "id": 188119044,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609043
    },
    {
        "content": "<p>caused by  Promote references to constants instead of statics <a href=\"https://github.com/rust-lang/rust/issues/67000\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67000\">#67000</a> (cc <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>)</p>",
        "id": 188119082,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609066
    },
    {
        "content": "<blockquote>\n<p>We knew about this regression in the PR, maybe you remember that discussion. In <a href=\"https://github.com/rust-lang/rust/issues/67000\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67000\">#67000</a> (comment) I finally came to the conclusion that the reason we regressed perf here is that before that PR we didn't actually evaluate the promoteds, we just created pointers to them. <a href=\"https://github.com/rust-lang/rust/issues/67000\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67000\">#67000</a> causes all promoteds to get evaluated immediately when their use site is evaluated. Basically any real program would already have done this work as collect would have evaluated the constant. Only if you have loads and loads of dead promoteds can you see the difference.</p>\n</blockquote>",
        "id": 188119092,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609077
    },
    {
        "content": "<p>Sounds like wontfix?</p>",
        "id": 188119099,
        "sender_full_name": "centril",
        "timestamp": 1581609084
    },
    {
        "content": "<p>going by oliver's note</p>",
        "id": 188119107,
        "sender_full_name": "centril",
        "timestamp": 1581609089
    },
    {
        "content": "<p>Was going to say the same.</p>",
        "id": 188119119,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609095
    },
    {
        "content": "<p>OK, closing.</p>",
        "id": 188119127,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609101
    },
    {
        "content": "<h1>Working group check-ins</h1>",
        "id": 188119202,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609139
    },
    {
        "content": "<p>Let's start with <a class=\"stream\" data-stream-id=\"216091\" href=\"/#narrow/stream/216091-t-compiler.2Fwg-polymorphization\">#t-compiler/wg-polymorphization</a> (cc <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span>)</p>",
        "id": 188119224,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609154
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> wrote me this to post in case they're not around:</p>\n<blockquote>\n<p>Since this is the first update to the compiler team meeting, this working group is my work for my master's thesis - it aims to implement an analysis to detect when functions could remain polymorphic during code generation. Hopefully this will reduce the amount of LLVM IR generated and improve compilation times.</p>\n<p>So far, I've got a basic analysis working and I've got it integrated into the compiler such that a <code>codegen-unit</code> test that I've written pass with the analysis turned on and working. For the last couple months, I've been working on getting the compiler to bootstrap with the analysis turned on, and fighting ICEs to do so.</p>\n<p>I've not been able to spend much time on it recently due to other university/work drains on my time, but progress should pick up soon.</p>\n</blockquote>",
        "id": 188119261,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609184
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 188119297,
        "sender_full_name": "davidtwco",
        "timestamp": 1581609217
    },
    {
        "content": "<p>Specifically the starting point is to detect functions that are generic but have some type parameters that are fully unused (this arises commonly with closures)</p>",
        "id": 188119303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609221
    },
    {
        "content": "<p>Is there anything people can do to help, <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> ?</p>",
        "id": 188119325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609233
    },
    {
        "content": "<p>I'm not sure there is at the moment, it's just me finding some time to get back to it and work through the remaining ICEs.</p>",
        "id": 188119400,
        "sender_full_name": "davidtwco",
        "timestamp": 1581609259
    },
    {
        "content": "<p>OK. I forget if you said, is the branch pushed somewhere public?</p>",
        "id": 188119417,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609272
    },
    {
        "content": "<p>Anyone who wants to can leave some review comments on the approach though, here's the branch: <a href=\"https://github.com/rust-lang/rust/compare/master...davidtwco:issue-46477-polymorphization\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/compare/master...davidtwco:issue-46477-polymorphization\">https://github.com/rust-lang/rust/compare/master...davidtwco:issue-46477-polymorphization</a></p>",
        "id": 188119438,
        "sender_full_name": "davidtwco",
        "timestamp": 1581609284
    },
    {
        "content": "<p>(it's long overdue a rebase)</p>",
        "id": 188119470,
        "sender_full_name": "davidtwco",
        "timestamp": 1581609303
    },
    {
        "content": "<p>OK, 5 minutes left, let's do a quick <a class=\"stream\" data-stream-id=\"144729\" href=\"/#narrow/stream/144729-wg-traits\">#wg-traits</a> check-in</p>",
        "id": 188119521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609331
    },
    {
        "content": "<h1>wg-traits (cc <span class=\"user-group-mention\" data-user-group-id=\"692\">@WG-traits</span>, I wonder how up to date that alias is)</h1>",
        "id": 188119541,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609346
    },
    {
        "content": "<p>We are trying to get the \"sprint concept\" up and going again</p>",
        "id": 188119555,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609357
    },
    {
        "content": "<p>And we had a recent discussion about which things to focus on</p>",
        "id": 188119601,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609367
    },
    {
        "content": "<p>I was thinking before this meeting I shuold've maybe prepared a summary :)</p>",
        "id": 188119614,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609375
    },
    {
        "content": "<p>but there's a mix of work on chalk / work on rustc</p>",
        "id": 188119624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609381
    },
    {
        "content": "<p>the idea is to sort of migrate rustc to integrate ideas from chalk and make it able to support GATs etc, while also improving chalk and working towards the rustc-integration we want. The hope is that the two can approach each other and eventually be readily merged. (But without blocking everything on that day.)</p>",
        "id": 188119663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609417
    },
    {
        "content": "<p>we've got some new blood coming in, which is great</p>",
        "id": 188119685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609431
    },
    {
        "content": "<p>we had some notes on the topics in <a href=\"https://paper.dropbox.com/doc/wg-traits-2020-sprint-planning--AuNFr3WGUhJ~DsCkt_aNOxmvAg-SSt74TfcovdnKKhZNyzeW\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/wg-traits-2020-sprint-planning--AuNFr3WGUhJ~DsCkt_aNOxmvAg-SSt74TfcovdnKKhZNyzeW\">this dropbox paper</a>, still working out some of the details</p>",
        "id": 188119749,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609466
    },
    {
        "content": "<p>I guess that's about it :)</p>",
        "id": 188119825,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609495
    },
    {
        "content": "<p>Any final comments? We're at 58 minutes</p>",
        "id": 188119891,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609544
    },
    {
        "content": "<p>OK, thanks everyone for attending! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 188120135,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1581609660
    },
    {
        "content": "<p>Sorry I wasn't able to come for the check in :/ was busy with work</p>",
        "id": 188123118,
        "sender_full_name": "Jack Huey",
        "timestamp": 1581611284
    }
]