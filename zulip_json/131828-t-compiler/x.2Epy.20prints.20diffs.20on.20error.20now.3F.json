[
    {
        "content": "<p>Hey, did \"we\" change things recently to print the diff against master when <code>x.py</code> fails? (or at least when <code>x.py tidy</code> fails?)</p>",
        "id": 185542402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578952784
    },
    {
        "content": "<p>(or maybe this is somehow an artifact of <code>git submodule update</code> call... /me is so confused about the current output...)_</p>",
        "id": 185542487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578952816
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> maybe formatting diff?</p>",
        "id": 185542506,
        "sender_full_name": "simulacrum",
        "timestamp": 1578952834
    },
    {
        "content": "<p>x.py tidy runs x.py fmt --check internally</p>",
        "id": 185542534,
        "sender_full_name": "simulacrum",
        "timestamp": 1578952856
    },
    {
        "content": "<p>(if you paste the output I can maybe help more :)</p>",
        "id": 185542558,
        "sender_full_name": "simulacrum",
        "timestamp": 1578952872
    },
    {
        "content": "<p>its definitely tidy</p>",
        "id": 185542591,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578952906
    },
    {
        "content": "<p><a href=\"https://gist.github.com/84be405c649c26a26dda0e7126f37f96\" target=\"_blank\" title=\"https://gist.github.com/84be405c649c26a26dda0e7126f37f96\">https://gist.github.com/84be405c649c26a26dda0e7126f37f96</a></p>",
        "id": 185542670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578952949
    },
    {
        "content": "<p>oh!</p>",
        "id": 185542697,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578952970
    },
    {
        "content": "<p>its running rustfmt, of course</p>",
        "id": 185542704,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578952975
    },
    {
        "content": "<p>(and it doesn't like my particular line break choices)</p>",
        "id": 185542730,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578952987
    },
    {
        "content": "<p>((right?))</p>",
        "id": 185542764,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953008
    },
    {
        "content": "<p>seems like it</p>",
        "id": 185542777,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953021
    },
    {
        "content": "<p>I think we may eventually move format check out, just because it can be annoying (though I personally don't run tidy locally either)</p>",
        "id": 185542854,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953051
    },
    {
        "content": "<p>I wouldn't mind it so much if the output were compatible with my regexps for emacs compilation-mode</p>",
        "id": 185542939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953117
    },
    {
        "content": "<p>Or wait, maybe they are compatible, heh</p>",
        "id": 185542959,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953129
    },
    {
        "content": "<p>/me hadn't even tried to follow the link yet</p>",
        "id": 185542965,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953138
    },
    {
        "content": "<p>too confused to try the obvious thing</p>",
        "id": 185542971,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953145
    },
    {
        "content": "<p>no, wait, I was right the first time</p>",
        "id": 185543023,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953165
    },
    {
        "content": "<p>But I can probably add an appropriate regexp to rust-mode.el</p>",
        "id": 185543055,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953194
    },
    {
        "content": "<p>perhaps :)</p>",
        "id": 185543091,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953223
    },
    {
        "content": "<p>rustfmt should probably use rustc style errors</p>",
        "id": 185543110,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953236
    },
    {
        "content": "<p>odd that it forces a line break on that `println! call... is this the thing that Ralf has been complaining about?</p>",
        "id": 185543121,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953249
    },
    {
        "content": "<p>the lines fit in 100 characters...</p>",
        "id": 185543132,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953258
    },
    {
        "content": "<p>(...barely)</p>",
        "id": 185543140,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953267
    },
    {
        "content": "<p>yeah for some reason rustfmt seems very eager to insert a linebreak after the <code>macro!(</code></p>",
        "id": 185543269,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953346
    },
    {
        "content": "<p>rather than allowing for</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">macro</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">ARG1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">ARG2</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">ARG3</span><span class=\"p\">)</span><span class=\"w\"></span>\n</pre></div>",
        "id": 185543303,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953372
    },
    {
        "content": "<p>/me will have to go look up corresponding debates on rustfmt style stuff</p>",
        "id": 185543371,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953404
    },
    {
        "content": "<p>well, if it is going to wrap, then it's going to force a linebreak</p>",
        "id": 185543399,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953423
    },
    {
        "content": "<p>since the function call style is</p>\n<div class=\"codehilite\"><pre><span></span>foo(\n    arg1,\n    arg2,\n    ...\n);\n</pre></div>",
        "id": 185543418,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953445
    },
    {
        "content": "<p>(when multi-line)</p>",
        "id": 185543425,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953452
    },
    {
        "content": "<p>notably println! is \"known\" to rustfmt</p>",
        "id": 185543448,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953462
    },
    {
        "content": "<p>not </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">arg2</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">arg3</span><span class=\"w\"></span>\n<span class=\"p\">);</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>?</p>",
        "id": 185543468,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953479
    },
    {
        "content": "<p>I don't think so, no</p>",
        "id": 185543473,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953485
    },
    {
        "content": "<p>or at least the style I suggest is consistent with function declarations</p>",
        "id": 185543481,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953495
    },
    {
        "content": "<p>hmm. Okay, not my cup of tea, but whatever</p>",
        "id": 185543487,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953501
    },
    {
        "content": "<p>yeah I know that function declarations often appear with a line break before the first formal parameter</p>",
        "id": 185543552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953523
    },
    {
        "content": "<p>so  i guess this follows from that</p>",
        "id": 185543642,
        "sender_full_name": "pnkfelix",
        "timestamp": 1578953577
    },
    {
        "content": "<p><a href=\"https://github.com/rust-dev-tools/fmt-rfcs/blob/master/guide/expressions.md#multi-line-calls\" target=\"_blank\" title=\"https://github.com/rust-dev-tools/fmt-rfcs/blob/master/guide/expressions.md#multi-line-calls\">https://github.com/rust-dev-tools/fmt-rfcs/blob/master/guide/expressions.md#multi-line-calls</a></p>",
        "id": 185543644,
        "sender_full_name": "simulacrum",
        "timestamp": 1578953577
    }
]