[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> So the <code>check_tool_name_for_backwards_compat</code> was implemented with only Clippy in mind, but could also be reused for rustdoc. This can be done, by modifying <a href=\"https://github.com/rust-lang/rust/blob/b9c403be11bef38638b38012be80444ad3f09dde/compiler/rustc_lint/src/context.rs#L382\">this line</a> to also cover rustdoc. </p>\n<p>What this would do is to check if there is a tool lint for the specified lint name and if there is, emit a warning <a href=\"https://github.com/rust-lang/rust/blob/b9c403be11bef38638b38012be80444ad3f09dde/compiler/rustc_lint/src/levels.rs#L301-L327\">here</a>. (The warning message needs to be adapted, removing the mention of clippy) </p>\n<p>To be more specific:<br>\nIf <code>#[allow(broken_intra_doc_links)]</code> is used anywhere and you would change all lints to be scoped with <code>rustdoc::</code> (+modify <a href=\"https://github.com/rust-lang/rust/blob/b9c403be11bef38638b38012be80444ad3f09dde/compiler/rustc_lint/src/context.rs#L382\">this line</a>), a warning will be emitted for the <code>allow</code> attribute, but it will still work without adding <code>rustdoc::</code> to the lint name.</p>",
        "id": 221206757,
        "sender_full_name": "flip1995",
        "timestamp": 1609328562
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> hmm, I tried this last night but it didn't work: <a href=\"https://github.com/jyn514/rust/commit/e31ac63c3198c0bc1c26fdb336a36e6e465c3f88\">https://github.com/jyn514/rust/commit/e31ac63c3198c0bc1c26fdb336a36e6e465c3f88</a></p>",
        "id": 221218803,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609340812
    },
    {
        "content": "<p>do I need to keep the existing <code>declare_lint!</code> calls in rustc_lint_defs?</p>",
        "id": 221218815,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609340827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> You have to use the <code>declare_tool_lint</code> macro. Clippy does this by defining its own macro: <a href=\"https://github.com/rust-lang/rust-clippy/blob/0d8a27a6f6a1b0cd69f531d34dfbda65bbcf1cfa/clippy_lints/src/lib.rs#L106-L108\">https://github.com/rust-lang/rust-clippy/blob/0d8a27a6f6a1b0cd69f531d34dfbda65bbcf1cfa/clippy_lints/src/lib.rs#L106-L108</a></p>\n<p>So you should be able to define the lints like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">declare_tool_lint</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">rustdoc</span>::<span class=\"n\">BROKEN_INTRA_DOC_LINKS</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Warn</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"failures in resolving intra-doc link targets\"</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Note the <code>rustdoc::</code> in front of the lint name.</p>",
        "id": 221222191,
        "sender_full_name": "flip1995",
        "timestamp": 1609343807
    },
    {
        "content": "<p>(outdated)</p>",
        "id": 221222322,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609343911
    },
    {
        "content": "<p>ok, using <code>declare_tool_lint</code> now registers the lints properly, but it's still not picking up on the renaming</p>",
        "id": 221223172,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609344573
    },
    {
        "content": "<p>I tried <code>register_renamed(\"broken_intra_doc_links\", \"rustdoc::broken_intra_doc_links\");</code> which panicked with 'invalid renaming'</p>",
        "id": 221223236,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609344613
    },
    {
        "content": "<p>oh wait I added back the old lints lol, let me remove them again</p>",
        "id": 221223329,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609344656
    },
    {
        "content": "<p>You don't have to add <code>register_renamed</code> for those lints. This is magically checked in the rustc_lints::context module already.</p>",
        "id": 221223599,
        "sender_full_name": "flip1995",
        "timestamp": 1609344723
    },
    {
        "content": "<p>didn't work unfortunately :/</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: unknown lint: `non_autolinks`\n --&gt; src/test/rustdoc-ui/url-improvements.rs:1:9\n  |\n1 | #![deny(non_autolinks)]\n  |         ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unknown_lints)]` on by default\n</code></pre></div>",
        "id": 221224198,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609345265
    },
    {
        "content": "<p>I think <code>check_tool_name_for_backwards_compat</code> might be related specifically to lint groups? I want it to register renames for individual lints</p>",
        "id": 221224300,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609345381
    },
    {
        "content": "<p>this is being executed so I don't know what's going wrong :/</p>\n<div class=\"codehilite\"><pre><span></span><code>DEBUG rustc_lint::context checking rustdoc::non_autolinks for backwards compat\nwarning: unknown lint: `non_autolinks`\n --&gt; src/test/rustdoc-ui/url-improvements.rs:1:9\n  |\n1 | #![deny(non_autolinks)]\n  |         ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unknown_lints)]` on by default\n</code></pre></div>",
        "id": 221224884,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609345856
    },
    {
        "content": "<p>With which compiler stage are you testing this? Have you registered the lints with <code>store.register_lints([NON_AUTOLINKS, ...])</code>?</p>",
        "id": 221225233,
        "sender_full_name": "flip1995",
        "timestamp": 1609346220
    },
    {
        "content": "<p>Can you push the code and send me a link to the branch?</p>",
        "id": 221225250,
        "sender_full_name": "flip1995",
        "timestamp": 1609346253
    },
    {
        "content": "<p>I'm testing with stage 1. I called <code>register_group</code> but not <code>register_lints</code> - do I need both?</p>",
        "id": 221225265,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346274
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221225250\">said</a>:</p>\n<blockquote>\n<p>Can you push the code and send me a link to the branch?</p>\n</blockquote>\n<p>sure, one sec</p>",
        "id": 221225273,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346281
    },
    {
        "content": "<p>Yeah, <code>register_lints</code> does the actual registering of the lint. <code>register_group</code> is optional, if you want to group lints.</p>",
        "id": 221225326,
        "sender_full_name": "flip1995",
        "timestamp": 1609346316
    },
    {
        "content": "<p>Yeah, <code>register_lints</code> does the actual registering of the lint. <code>register_group</code> is optional, if you want to group lints.</p>",
        "id": 221225327,
        "sender_full_name": "flip1995",
        "timestamp": 1609346316
    },
    {
        "content": "<p><a href=\"https://github.com/jyn514/rust/commits/rustdoc-lints\">https://github.com/jyn514/rust/commits/rustdoc-lints</a></p>",
        "id": 221225340,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346330
    },
    {
        "content": "<p>ah, ok</p>",
        "id": 221225347,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346331
    },
    {
        "content": "<p>ayyy that did it <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<div class=\"codehilite\"><pre><span></span><code>warning: lint name `non_autolinks` is deprecated and may not have an effect in the future. Also `cfg_attr(cargo-clippy)` won&#39;t be necessary anymore\n --&gt; src/test/rustdoc-ui/url-improvements.rs:1:9\n  |\n1 | #![deny(non_autolinks)]\n  |         ^^^^^^^^^^^^^ help: change it to: `rustdoc::non_autolinks`\n  |\n  = note: `#[warn(renamed_and_removed_lints)]` on by default\n</code></pre></div>",
        "id": 221225611,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346568
    },
    {
        "content": "<p>thank you <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 221225615,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346572
    },
    {
        "content": "<p>it looks like this does have an effect though, right? Can I change the error to just suggest changing the name?</p>\n<div class=\"codehilite\"><pre><span></span><code>error: unneeded long form for URL\n --&gt; src/test/rustdoc-ui/url-improvements.rs:3:5\n  |\n3 | /// [http://aa.com](http://aa.com)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `&lt;http://aa.com&gt;`\n  |\nnote: the lint level is defined here\n --&gt; src/test/rustdoc-ui/url-improvements.rs:1:9\n  |\n1 | #![deny(non_autolinks)]\n  |         ^^^^^^^^^^^^^\n</code></pre></div>",
        "id": 221225641,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346614
    },
    {
        "content": "<p>Nice! Please also remove the mention of <code>cfg_attr(clippy)</code> from the message, while you're at it. This isn't a thing since 1 1/2 year or so anymore.</p>",
        "id": 221225731,
        "sender_full_name": "flip1995",
        "timestamp": 1609346687
    },
    {
        "content": "<p>(duplicated)</p>",
        "id": 221225741,
        "sender_full_name": "flip1995",
        "timestamp": 1609346697
    },
    {
        "content": "<p>(duplicated)</p>",
        "id": 221225746,
        "sender_full_name": "flip1995",
        "timestamp": 1609346702
    },
    {
        "content": "<p>It has to have an effect, right?</p>",
        "id": 221225754,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609346704
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221225741\">said</a>:</p>\n<blockquote>\n<p>(duplicated)</p>\n</blockquote>\n<p>yeah mobile zulip is awful <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221225770,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346733
    },
    {
        "content": "<p>This is just deprecating the lint, not actually removing it?</p>",
        "id": 221225779,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609346749
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LÃ©o Lanteri Thauvin</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221225779\">said</a>:</p>\n<blockquote>\n<p>This is just deprecating the lint, not removing it</p>\n</blockquote>\n<p>right, what I mean is that <code>#[deny(non_autolinks)]</code> behaves the same as <code>deny(rustdoc::non_autolinks)</code></p>",
        "id": 221225832,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346771
    },
    {
        "content": "<p>Isn't that desirable for a deprecation period?</p>",
        "id": 221225848,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609346797
    },
    {
        "content": "<p>Yes this still has an effect.  That's by design. It should be an alias. I think the massage that the attribute without the <code>rustdoc::</code> scope may not have an effect in the future is still fine?</p>",
        "id": 221225853,
        "sender_full_name": "flip1995",
        "timestamp": 1609346804
    },
    {
        "content": "<p>yeah, I misread it - it says \"may not have an effect in the future\", not \"may not have an effect\"</p>",
        "id": 221225883,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346841
    },
    {
        "content": "<p>hmm but now there's a different issue:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0710]: an unknown tool name found in scoped lint: `rustdoc::broken_intra_doc_links`\n --&gt; intra-doc/broken-reexport.rs:4:9\n  |\n4 | #![deny(rustdoc::broken_intra_doc_links)]\n  |         ^^^^^^^\n</code></pre></div>",
        "id": 221226027,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609346994
    },
    {
        "content": "<p>this is when running with rustc directly</p>",
        "id": 221226035,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609347001
    },
    {
        "content": "<p>You probably have to \"register\" <code>rustdoc</code> somewhere</p>",
        "id": 221226097,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609347029
    },
    {
        "content": "<p>how do I do that?</p>",
        "id": 221226108,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609347040
    },
    {
        "content": "<p>See <code>is_known_lint_tool</code></p>",
        "id": 221226111,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609347049
    },
    {
        "content": "<p>oh boooo</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">is_known_lint_tool</span><span class=\"p\">(</span><span class=\"n\">m_item</span>: <span class=\"nc\">Ident</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">sym</span>::<span class=\"n\">clippy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sym</span>::<span class=\"n\">rustc</span><span class=\"p\">].</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">m_item</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 221226112,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609347050
    },
    {
        "content": "<p>Oh yeah tool lints are only allowed for <code>rustc::</code> and <code>clippy::</code>. This is hardcoded somewhere. I couldn't find it before though.</p>",
        "id": 221226121,
        "sender_full_name": "flip1995",
        "timestamp": 1609347058
    },
    {
        "content": "<p>Oh yeah, that's it. Just add rustdoc here.</p>",
        "id": 221226135,
        "sender_full_name": "flip1995",
        "timestamp": 1609347073
    },
    {
        "content": "<p>another question, sorry to keep bothering you. Rustdoc is now ignoring unknown lints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![deny(rustdoc::x)]</span><span class=\"w\"></span>\n<span class=\"c1\">//~^ ERROR unknown lint</span>\n<span class=\"cp\">#![deny(rustdoc::intra_doc_link_resolution_failure)]</span><span class=\"w\"></span>\n<span class=\"c1\">//~^ ERROR lint `intra_doc_link_resolution_failure` has been renamed</span>\n</code></pre></div>\n<p>^ that has no output</p>",
        "id": 221227451,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348015
    },
    {
        "content": "<p>I think the lint system assumes anything starting with <code>rustdoc::</code> is valid? But I want it to give a warning instead.</p>",
        "id": 221227485,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348048
    },
    {
        "content": "<p>Oh yeah, that's the thing with tool lints: If something is prefixed with a tool name, rustc assumes that this lint is available in the tool and never warns on it. The tool then has to deal with the possibility of a unknown tool lint itself.</p>",
        "id": 221227605,
        "sender_full_name": "flip1995",
        "timestamp": 1609348131
    },
    {
        "content": "<p>Oh yeah, that's the thing with tool lints: If something is prefixed with a tool name, rustc assumes that this lint is available in the tool and never warns on it. The tool then has to deal with the possibility of a unknown tool lint itself.</p>",
        "id": 221227606,
        "sender_full_name": "flip1995",
        "timestamp": 1609348131
    },
    {
        "content": "<p>Clippy has the <code>unknown_clippy_lints</code> for this.</p>",
        "id": 221227645,
        "sender_full_name": "flip1995",
        "timestamp": 1609348138
    },
    {
        "content": "<p>that's frustrating :/</p>",
        "id": 221227692,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348151
    },
    {
        "content": "<p>ok, let me look at <code>unknown_clippy_lints</code></p>",
        "id": 221227701,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348161
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust-clippy/blob/7a7399076ac7494f27a1fc4ffd377da33eb80484/clippy_lints/src/attrs.rs#L411\">https://github.com/rust-lang/rust-clippy/blob/7a7399076ac7494f27a1fc4ffd377da33eb80484/clippy_lints/src/attrs.rs#L411</a></p>",
        "id": 221227805,
        "sender_full_name": "flip1995",
        "timestamp": 1609348232
    },
    {
        "content": "<p>could we instead get rustc to warn on unknown lints if there's any lint for that tool registered?</p>",
        "id": 221228173,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348317
    },
    {
        "content": "<p>then each tool doesn't have to copy paste this code</p>",
        "id": 221228241,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348324
    },
    {
        "content": "<p>That would be possible. But you'd have to implement a check for this. There probably was a reason why we decided to let it be handled by the tool back then, though...</p>",
        "id": 221228613,
        "sender_full_name": "flip1995",
        "timestamp": 1609348441
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/b9c403be11bef38638b38012be80444ad3f09dde/compiler/rustc_lint/src/levels.rs#L338\">https://github.com/rust-lang/rust/blob/b9c403be11bef38638b38012be80444ad3f09dde/compiler/rustc_lint/src/levels.rs#L338</a></p>",
        "id": 221228721,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348485
    },
    {
        "content": "<p>heh, you added the comment: <a href=\"https://github.com/rust-lang/rust/commit/7b9388b7b5fcdbb2f7e7178dc0a533e3284184c5\">https://github.com/rust-lang/rust/commit/7b9388b7b5fcdbb2f7e7178dc0a533e3284184c5</a></p>",
        "id": 221228929,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348586
    },
    {
        "content": "<p>the closest thing I found was <a href=\"https://github.com/rust-lang/rust/pull/52851#discussion_r206079410\">https://github.com/rust-lang/rust/pull/52851#discussion_r206079410</a> which doesn't seem very satisfying</p>",
        "id": 221228983,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348639
    },
    {
        "content": "<p>shouldn't it just be the same behavior as a normal unknown lint?</p>",
        "id": 221229121,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609348729
    },
    {
        "content": "<p>Ah yeah, the argument was to keep it consistent with tool attributes, like <code>rustfmt::skip</code>: tools have to deal with unknown attributes. So also lint tools should deal with unknown lints.</p>\n<p>2 1/2 years later, I think this is not the best solution and we should detect if it couldn't find the lint because it doesn't exist or because the tool isn't used.</p>\n<p>We can just change this behavior, since <code>is_known_lint_tool</code> makes sure, that only specific tools are allowed to implement tool lints. (Good thing, we didn't stabilize the tool_lint feature)</p>",
        "id": 221229439,
        "sender_full_name": "flip1995",
        "timestamp": 1609348962
    },
    {
        "content": "<p>doing that now</p>",
        "id": 221229511,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349026
    },
    {
        "content": "<p>The <code>unknown_clippy_lints</code> lint will then have to be deprecated. I can do this for you, if you want.</p>",
        "id": 221229592,
        "sender_full_name": "flip1995",
        "timestamp": 1609349072
    },
    {
        "content": "<p>that would be great! maybe changing this should be a separate PR from deprecating rustdoc's lints though <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221229616,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349098
    },
    {
        "content": "<p>Yeah I guess. Any idea how to check if lints from a tool are available? Maybe add a separate <code>LintStore::register_tool_lints</code> <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 221229750,
        "sender_full_name": "flip1995",
        "timestamp": 1609349201
    },
    {
        "content": "<p>I was just going to do</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">lint_groups</span><span class=\"p\">.</span><span class=\"n\">any</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">lint</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">lint</span><span class=\"p\">.</span><span class=\"n\">starts_with</span><span class=\"p\">(</span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"{}::\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tool_name</span><span class=\"p\">)))</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 221229789,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349245
    },
    {
        "content": "<p>less work for maintainers like me :P</p>",
        "id": 221229822,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349275
    },
    {
        "content": "<p>I think <code>self.by_name.any</code> would be better. A tool doesn't have to register a group for lints.</p>\n<p>Also the edge case of a tool defining 0 lints should be covered in the tests.</p>",
        "id": 221229961,
        "sender_full_name": "flip1995",
        "timestamp": 1609349395
    },
    {
        "content": "<p>hmm, I don't know how to detect a tool that defines 0 lints</p>",
        "id": 221230053,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349449
    },
    {
        "content": "<p>do we need to support that? the only tool that does that is rustfmt and I don't think it uses lints at all; it's not registered in <code>is_known_lint_tool</code></p>",
        "id": 221230115,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349508
    },
    {
        "content": "<p>We don't have to care about this yet, but it should be well defined once we stabilize tool_lints. Adding a regression test makes definitely sense though. (Also a FIXME for this case).</p>",
        "id": 221230266,
        "sender_full_name": "flip1995",
        "timestamp": 1609349630
    },
    {
        "content": "<p>ah ok, I'm fine with a FIXME and a test showing a current behavior</p>",
        "id": 221230321,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349654
    },
    {
        "content": "<p>Yeah that should be good enough for now. You can also write <code>// FIXME(flip1995): ...</code> if you want.</p>",
        "id": 221230357,
        "sender_full_name": "flip1995",
        "timestamp": 1609349695
    },
    {
        "content": "<p>ooh this is <em>so</em> close</p>\n<div class=\"codehilite\"><pre><span></span><code>error: unknown lint: `x`\n --&gt; /home/joshua/rustc3/src/test/rustdoc-ui/unknown-renamed-lints.rs:7:9\n  |\n7 | #![deny(rustdoc::x)]\n  |         ^^^^^^^^^^\n\nerror: unknown lint: `intra_doc_link_resolution_failure`\n --&gt; /home/joshua/rustc3/src/test/rustdoc-ui/unknown-renamed-lints.rs:9:9\n  |\n9 | #![deny(rustdoc::intra_doc_link_resolution_failure)]\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre></div>",
        "id": 221230646,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349884
    },
    {
        "content": "<p><code>intra_doc_link</code> I think I have to register myself since it was renamed (twice now), the first one just looks like a bug I introduced</p>",
        "id": 221230686,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349914
    },
    {
        "content": "<p>I just noticed the <code>rustc3</code> folder <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 221230746,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609349959
    },
    {
        "content": "<p>oh yeah I have a lot of copies lol</p>",
        "id": 221230757,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609349970
    },
    {
        "content": "<p>one is completely dedicated to <a href=\"https://github.com/rust-lang/rust/pull/79540\">https://github.com/rust-lang/rust/pull/79540</a>, another is for rebasing random PRs so I don't destroy my build cache, the third one is for actually working on things</p>",
        "id": 221230785,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350001
    },
    {
        "content": "<p>The compiler should still stay silent, if no lints were found for the tool.</p>",
        "id": 221230880,
        "sender_full_name": "flip1995",
        "timestamp": 1609350059
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221230880\">said</a>:</p>\n<blockquote>\n<p>The compiler should still stay silent, if no lints were found for the tool.</p>\n</blockquote>\n<p>right, this is running rustdoc</p>",
        "id": 221230894,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350071
    },
    {
        "content": "<p>I'll add a test for the compiler directly in a sec, I'm still at the 'get things working' stage <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221230908,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350084
    },
    {
        "content": "<p>Hm, that's weird <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 221230911,
        "sender_full_name": "flip1995",
        "timestamp": 1609350085
    },
    {
        "content": "<p>you should see all the warnings the compiler gives when building rustdoc itself right now <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221230917,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350096
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221230911\">said</a>:</p>\n<blockquote>\n<p>Hm, that's weird <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>the reason is that <code>intra_doc_resolution_failure</code> was renamed twice: once to <code>broken_intra_doc_links</code> and again to <code>rustdoc::broken_intra_doc_links</code></p>",
        "id": 221230995,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350144
    },
    {
        "content": "<p>I need to figure out how to tell that to the lint machinery</p>",
        "id": 221230997,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350150
    },
    {
        "content": "<blockquote>\n<p>thread 'rustc' panicked at 'src/librustdoc/core.rs:484:24: invalid lint renaming of intra_doc_resolution_failure to broken_intra_doc_links', compiler/rustc_middle/src/util/bug.rs:35:26</p>\n</blockquote>\n<p><span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 221231115,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350257
    },
    {
        "content": "<p>Having an alias from <code>rustdoc::intra_doc_resolution_failure</code> to <code>rustdoc::broken_intra_doc_links</code> is probably unnecessary, right?</p>",
        "id": 221231125,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609350273
    },
    {
        "content": "<p>yeah, that shouldn't be needed</p>",
        "id": 221231146,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350287
    },
    {
        "content": "<p>Because people won't have <code>rustdoc::intra_doc_resolution_failure</code> in their codebases</p>",
        "id": 221231147,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609350292
    },
    {
        "content": "<p>I'd guess you have to change the alias for <code>intra_doc_resolution_failure</code> to use <code>rustdoc::broken_intra_doc_links</code>?</p>",
        "id": 221231176,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609350323
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">LÃ©o Lanteri Thauvin</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221231176\">said</a>:</p>\n<blockquote>\n<p>I'd guess you have to change the alias for <code>intra_doc_resolution_failure</code> to use <code>rustdoc::</code>?</p>\n</blockquote>\n<p>trying that</p>",
        "id": 221231198,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350344
    },
    {
        "content": "<p>ayyyy</p>\n<div class=\"codehilite\"><pre><span></span><code>error: lint `intra_doc_link_resolution_failure` has been renamed to `rustdoc::broken_intra_doc_links`\n --&gt; /home/joshua/rustc3/src/test/rustdoc-ui/unknown-renamed-lints.rs:9:9\n  |\n9 | #![deny(intra_doc_link_resolution_failure)]\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `rustdoc::broken_intra_doc_links`\n  |\nnote: the lint level is defined here\n --&gt; /home/joshua/rustc3/src/test/rustdoc-ui/unknown-renamed-lints.rs:3:9\n  |\n3 | #![deny(renamed_and_removed_lints)]\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: unknown lint: `intra_doc_link_resolution_failure`\n  --&gt; /home/joshua/rustc3/src/test/rustdoc-ui/unknown-renamed-lints.rs:14:9\n   |\n14 | #![deny(rustdoc::intra_doc_link_resolution_failure)]\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: did you mean: `intra_doc_link_resolution_failure`\n</code></pre></div>",
        "id": 221231317,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350432
    },
    {
        "content": "<p>best of both worlds :)</p>",
        "id": 221231328,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350445
    },
    {
        "content": "<p>now if I could just get it to say 'unknown lint <code>rustdoc::x</code>' instead of 'unknown lint <code>x</code>' we'd be all set :)</p>",
        "id": 221231457,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350580
    },
    {
        "content": "<p>yeah see it's especially confusing here because it would be valid if you used <code>rustdoc</code> alone:</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: unknown lint: `rustdoc`\n  --&gt; $DIR/check-fail.rs:4:9\n   |\nLL | #![deny(rustdoc::rustdoc)]\n   |         ^^^^^^^^^^^^^^^^\n</code></pre></div>",
        "id": 221231638,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609350729
    },
    {
        "content": "<p>Clippy uses <code>clippy::all</code> for the default set of lints.</p>",
        "id": 221232084,
        "sender_full_name": "flip1995",
        "timestamp": 1609351103
    },
    {
        "content": "<p>(aaah, duplicate)</p>",
        "id": 221232118,
        "sender_full_name": "flip1995",
        "timestamp": 1609351129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221232084\">said</a>:</p>\n<blockquote>\n<p>Clippy uses <code>clippy::all</code> for the default set of lints.</p>\n</blockquote>\n<p>I don't follow, sorry - how is that related? or are you suggesting that <code>rustdoc::all</code> should be an alias for the <code>rustdoc</code> lint group?</p>",
        "id": 221232274,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351242
    },
    {
        "content": "<p>Does the <code>rustdoc</code> lint group already exist? Yeah, I think <code>rustdoc::all</code> would be better, because it will avoid the questions why you have to write <code>rustdoc</code> twice.</p>",
        "id": 221232382,
        "sender_full_name": "flip1995",
        "timestamp": 1609351328
    },
    {
        "content": "<p>oh I was just planning to keep <code>deny(rustdoc)</code></p>",
        "id": 221232407,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351357
    },
    {
        "content": "<p>And I think being consistent with the other tools is interesting</p>",
        "id": 221232425,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609351373
    },
    {
        "content": "<p>(the <code>rustdoc::rustdoc</code> thing is a <code>sed</code> command gone wrong <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> )</p>",
        "id": 221232432,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351379
    },
    {
        "content": "<p>That being said <code>clippy::all</code> is also kind of controversial, because it  doesn't include all lints, just warn-by-default litns.</p>",
        "id": 221232439,
        "sender_full_name": "flip1995",
        "timestamp": 1609351386
    },
    {
        "content": "<p>yeah I think I would prefer to stick with <code>deny(rustdoc)</code> for now</p>",
        "id": 221232482,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351418
    },
    {
        "content": "<p>I would use <code>rustdoc::all</code>. But again, I don't want to get in the way here.</p>",
        "id": 221232507,
        "sender_full_name": "flip1995",
        "timestamp": 1609351441
    },
    {
        "content": "<p>Out of curiosity, is there a reason to not have <code>clippy::*</code>?</p>",
        "id": 221232604,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609351505
    },
    {
        "content": "<p>does that syntax parse?</p>",
        "id": 221232720,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351588
    },
    {
        "content": "<p>I think it would</p>",
        "id": 221232729,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609351595
    },
    {
        "content": "<p>Since the <code>clippy::*</code> part is a <code>Path</code></p>",
        "id": 221232739,
        "sender_full_name": "LÃ©o Lanteri Thauvin",
        "timestamp": 1609351606
    },
    {
        "content": "<p>It would. But lint names and groups are just strings internally, not paths. So it isn't really supported by the compiler and making it work would be more of a hack than anything else.</p>",
        "id": 221232871,
        "sender_full_name": "flip1995",
        "timestamp": 1609351695
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/221231457\">said</a>:</p>\n<blockquote>\n<p>now if I could just get it to say 'unknown lint <code>rustdoc::x</code>' instead of 'unknown lint <code>x</code>' we'd be all set :)</p>\n</blockquote>\n<p>got it</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/compiler/rustc_lint/src/levels.rs b/compiler/rustc_lint/src/levels.rs</span>\n<span class=\"gh\">index 5acc806a04d..eb585f5882e 100644</span>\n<span class=\"gd\">--- a/compiler/rustc_lint/src/levels.rs</span>\n<span class=\"gi\">+++ b/compiler/rustc_lint/src/levels.rs</span>\n<span class=\"gu\">@@ -380,6 +380,11 @@ pub(crate) fn push(</span>\n                             src,\n                             Some(li.span().into()),\n                             |lint| {\n<span class=\"gi\">+                                let name = if let Some(tool_name) = tool_name {</span>\n<span class=\"gi\">+                                    format!(\"{}::{}\", tool_name, name)</span>\n<span class=\"gi\">+                                } else {</span>\n<span class=\"gi\">+                                    name.to_string()</span>\n<span class=\"gi\">+                                };</span>\n                                 let mut db = lint.build(&amp;format!(\"unknown lint: `{}`\", name));\n                                 if let Some(suggestion) = suggestion {\n                                     db.span_suggestion(\n</code></pre></div>",
        "id": 221232936,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351761
    },
    {
        "content": "<p>oh wait what</p>\n<div class=\"codehilite\"><pre><span></span><code>$ rustdoc --test check-attr.rs\nerror[E0710]: an unknown tool name found in scoped lint: `rustdoc::invalid_codeblock_attributes`\n --&gt; check-attr.rs:1:9\n  |\n1 | #![deny(rustdoc::invalid_codeblock_attributes)]\n  |         ^^^^^^^\n</code></pre></div>",
        "id": 221233025,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351833
    },
    {
        "content": "<p>oops ignore that, wrong version of rustdoc</p>",
        "id": 221233150,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351927
    },
    {
        "content": "<p>the <em>actual</em> issue is that <code>rustdoc --test</code> ignores unknown and renamed lints</p>",
        "id": 221233163,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351941
    },
    {
        "content": "<p>which is probably an issue on rustdoc's end</p>",
        "id": 221233184,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609351968
    },
    {
        "content": "<p>oh lol this is the issue <span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> brought up before - in test mode, rustdoc doesn't register lints</p>",
        "id": 221233469,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609352179
    },
    {
        "content": "<p>I'll just register the lints in both modes</p>",
        "id": 221233475,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609352185
    },
    {
        "content": "<p>and that did it <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 221234057,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609352677
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> I'll open a PR with just the tool lint changes so you can deprecate the clippy lint</p>",
        "id": 221234107,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609352735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> took me longer than expect to clean things up but <a href=\"https://github.com/rust-lang/rust/pull/80524\">https://github.com/rust-lang/rust/pull/80524</a></p>",
        "id": 221236394,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609354575
    },
    {
        "content": "<p>I try to get to it tomorrow morning. If not it will have to wait until next year ;) So probably Saturday or Sunday.</p>",
        "id": 221236472,
        "sender_full_name": "flip1995",
        "timestamp": 1609354629
    },
    {
        "content": "<p>no rush, I still need to write test cases anyway</p>",
        "id": 221236565,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609354707
    },
    {
        "content": "<p>and it probably should see feedback from t-compiler too</p>",
        "id": 221236571,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609354716
    },
    {
        "content": "<p>This will be harder to get right, than expected. I left comments of my findings in the PR.</p>",
        "id": 221284722,
        "sender_full_name": "flip1995",
        "timestamp": 1609414541
    },
    {
        "content": "<p>left a reply</p>",
        "id": 221333791,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609473519
    },
    {
        "content": "<p>(and building stage 2, but I don't expect it to be done tonight)</p>",
        "id": 221333795,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609473530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> what do you think about allowing internal lints in tests? <a href=\"https://github.com/rust-lang/rust/pull/80573#issuecomment-753330760\">https://github.com/rust-lang/rust/pull/80573#issuecomment-753330760</a></p>",
        "id": 221356581,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609515839
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> how do I mark <code>unknown_clippy_lints</code> as removed/deprecated?</p>",
        "id": 222924604,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744425
    },
    {
        "content": "<p>right now I think it will give duplicate warnings now that rustc warns properly on unknown lints</p>",
        "id": 222924672,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744460
    },
    {
        "content": "<p>I can do this for you. That is faster than explaining it.</p>",
        "id": 222924699,
        "sender_full_name": "flip1995",
        "timestamp": 1610744478
    },
    {
        "content": "<p>fair enough</p>",
        "id": 222924717,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744486
    },
    {
        "content": "<p>let me give you push access</p>",
        "id": 222924727,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744493
    },
    {
        "content": "<p>also left a comment in the PR about that</p>",
        "id": 222924754,
        "sender_full_name": "flip1995",
        "timestamp": 1610744509
    },
    {
        "content": "<p>I do want to test first that the diagnostics are actually duplicated and things work as intended</p>",
        "id": 222924820,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/222924727\">said</a>:</p>\n<blockquote>\n<p>let me give you push access</p>\n</blockquote>\n<p>sent</p>",
        "id": 222924957,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/222924699\">said</a>:</p>\n<blockquote>\n<p>I can do this for you. That is faster than explaining it.</p>\n</blockquote>\n<p>by the way, you may want to write down how to do this at some point</p>",
        "id": 222925374,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744811
    },
    {
        "content": "<p>in case you go on vacation or something</p>",
        "id": 222925389,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744817
    },
    {
        "content": "<p><del>wow \"have to go on vacation\" is like the most menacing way to write that <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> </del></p>",
        "id": 222925458,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744854
    },
    {
        "content": "<p>oh oops I should really stop force-pushing now that we're working from the same branch</p>",
        "id": 222925658,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744965
    },
    {
        "content": "<p>uhhhhh just <code>git pull --rebase</code> when you get a chance</p>",
        "id": 222925674,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610744976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> do you have time to do this today? I don't mind fumbling with it if you're busy</p>",
        "id": 222931811,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610748277
    },
    {
        "content": "<p>this is blocking <a href=\"https://github.com/rust-lang/rust/pull/80527\">https://github.com/rust-lang/rust/pull/80527</a> so I'd like to merge it relatively soon</p>",
        "id": 222931853,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610748313
    },
    {
        "content": "<p>I'll do this once I've built the compiler and can test Clippy in rustc. Had to rebuild LLVM on the PC I'm currently on.</p>\n<p>And I plan to add a <code>cargo dev deprecate</code> command to clippy, rather than writing doc <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 222931995,
        "sender_full_name": "flip1995",
        "timestamp": 1610748401
    },
    {
        "content": "<blockquote>\n<p>Had to rebuild LLVM on the PC I'm currently on.</p>\n</blockquote>\n<p><span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>",
        "id": 222932020,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610748415
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/80932/\">https://github.com/rust-lang/rust/pull/80932/</a> should help with that</p>",
        "id": 222932034,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610748423
    },
    {
        "content": "<p>fyi <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> if you have time to review <a href=\"https://github.com/rust-lang/rust/issues/80932\">#80932</a> ^ that would be amazing <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> the changes were relatively simple compared to all the other crazy bootstrap things I've been doing haha</p>",
        "id": 222934477,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610749470
    },
    {
        "content": "<p>err I guess <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Downloading.20static.20LLVM.20on.20windows\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Downloading.20static.20LLVM.20on.20windows</a> would be a better stream</p>",
        "id": 222934623,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610749551
    },
    {
        "content": "<p>(and let me know if I should stop pinging you for reviews)</p>",
        "id": 222934786,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610749631
    },
    {
        "content": "<p>no pinging is fine, but I won't have the time today I suspect. Hopefully going to knock out all my PRs this weekend though.</p>",
        "id": 222934845,
        "sender_full_name": "simulacrum",
        "timestamp": 1610749669
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"264664\">@flip1995</span> I have a follow-up question: I rebased <a href=\"https://github.com/rust-lang/rust/pull/80527\">https://github.com/rust-lang/rust/pull/80527</a> over <a href=\"https://github.com/rust-lang/rust/pull/80524\">https://github.com/rust-lang/rust/pull/80524</a> just now and got the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: unknown lint: `non_autolinks`\n</code></pre></div>\n<p>This is the sort of thing that's meant to be caught by <code>check_tool_name_for_backwards_compat</code>, right? I think the issue is that rustdoc only registers lints when running <em>rustdoc</em>, not when running <em>rustc</em>. How do I tell rustc itself that the lint was renamed?</p>",
        "id": 222935547,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610750055
    },
    {
        "content": "<p>Hm. Maybe this was the actual reason, why we left the the handling of unknown lints to tools <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 222941070,
        "sender_full_name": "flip1995",
        "timestamp": 1610753611
    },
    {
        "content": "<p>no no this is unrelated to the first PR</p>",
        "id": 222941543,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610753994
    },
    {
        "content": "<p>this is because I removed the built-in lint</p>",
        "id": 222941550,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610753999
    },
    {
        "content": "<p>and I am confused how this works for clippy but not rustdoc</p>",
        "id": 222941613,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610754028
    },
    {
        "content": "<p>Oh I think clippy lints had to be allowed with <code>cfg_attr(clippy-driver, allow(lint_name))</code>, so this was never a problem.</p>",
        "id": 222941668,
        "sender_full_name": "flip1995",
        "timestamp": 1610754095
    },
    {
        "content": "<p>oh ugh I see</p>",
        "id": 222941676,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610754106
    },
    {
        "content": "<p>maybe just register the lints as removed in rustc?</p>",
        "id": 222941726,
        "sender_full_name": "flip1995",
        "timestamp": 1610754124
    },
    {
        "content": "<p>yeah, there's few enough I could do them one by one</p>",
        "id": 222941743,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610754138
    },
    {
        "content": "<p>and if <code>register_renamed</code> doesn't work I can do <code>register_removed(\"use rustdoc::x\")</code> instead</p>",
        "id": 222942292,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610754593
    },
    {
        "content": "<p>yup, why am I not surprised</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;compiler/rustc_lint/src/lib.rs:329:11: invalid lint renaming of broken_intra_doc_links to rustdoc::broken_intra_doc_links&#39;, compiler/rustc_middle/src/util/bug.rs:35:26\n</code></pre></div>",
        "id": 222942342,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610754609
    },
    {
        "content": "<p>Yeah you probably have to register them as removed in rustc and if possible as renamed in rustdoc. Not sure if you can do both though</p>",
        "id": 222942373,
        "sender_full_name": "flip1995",
        "timestamp": 1610754653
    },
    {
        "content": "<p>hmm, I wonder if <code>check_backwards_compat</code> will still work if it was marked as removed</p>",
        "id": 222942527,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610754783
    },
    {
        "content": "<p>lol, truly the best help</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: lint `non_autolinks` has been removed: `use rustdoc::{} instead`\n</code></pre></div>",
        "id": 222942616,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610754858
    },
    {
        "content": "<p>close enough:</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: lint `non_autolinks` has been removed: use `rustdoc::non_autolinks` instead\n</code></pre></div>",
        "id": 222943155,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610755285
    },
    {
        "content": "<p>it won't enable the lint, but the lint already did nothing while running rustc anyway</p>",
        "id": 222943186,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610755311
    },
    {
        "content": "<p>The only thing that isn't working is that for <code>clippy::All</code> doesn't produce a suggestion.</p>",
        "id": 222944529,
        "sender_full_name": "flip1995",
        "timestamp": 1610756484
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/131828-t-compiler/topic/Help.20renaming.20builtin.20lints.20to.20tool.20lints/near/222943186\">said</a>:</p>\n<blockquote>\n<p>it won't enable the lint, but the lint already did nothing while running rustc anyway</p>\n</blockquote>\n<p>I think that is fine. It just shouldn't be a hard error</p>",
        "id": 222945141,
        "sender_full_name": "flip1995",
        "timestamp": 1610757000
    },
    {
        "content": "<p>I will do the deprecation tomorrow. It's too late now.</p>",
        "id": 222945245,
        "sender_full_name": "flip1995",
        "timestamp": 1610757060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I pushed my code up. I also modified the <code>no_lint_suggestion</code> method a bit. The Clippy suggestion generation was actually more advanced, so I copied it over to rustc.</p>",
        "id": 222991633,
        "sender_full_name": "flip1995",
        "timestamp": 1610815565
    },
    {
        "content": "<p>awesome! thanks so much :) I left a review</p>",
        "id": 222993325,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610817321
    },
    {
        "content": "<p>I think I addressed everything</p>",
        "id": 222998635,
        "sender_full_name": "flip1995",
        "timestamp": 1610822817
    }
]