[
    {
        "content": "<p>If I declare a mutable static:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">TX_WAKER</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Waker</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">;</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>This seems to be placed in BSS:</p>\n<div class=\"codehilite\"><pre><span></span>00800221 l     O .bss   00000004 _ZN5blink3fut8TX_WAKER17h8714705085b6d300E\n</pre></div>\n\n\n<p>I assume that means it needs to be zeroed out when I load in myself in AVR land?</p>",
        "id": 168220871,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1560628091
    },
    {
        "content": "<p>Yes, it is usually the responsibility of the code itself to zero out the <code>.bss</code> section in embedded land</p>",
        "id": 168227664,
        "sender_full_name": "nagisa",
        "timestamp": 1560642382
    },
    {
        "content": "<p>It is often done by whatever thin supporting libraries you may have â€“ the ARM thumb implements this code in their device libraries, for example</p>",
        "id": 168227666,
        "sender_full_name": "nagisa",
        "timestamp": 1560642412
    }
]