[
    {
        "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> ; our weekly meeting, held in this topic area, will start in about 47 minutes.</p>",
        "id": 163097720,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554988423
    },
    {
        "content": "<p>In the meantime, I will be doing pre-triage in a <a href=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-04-11.20.2354818/near/163097690\" title=\"#narrow/stream/131828-t-compiler/topic/pre-meeting.20triage.202019-04-11.20.2354818/near/163097690\">parallel topic</a></p>",
        "id": 163097778,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554988448
    },
    {
        "content": "<p><span aria-label=\"question\" class=\"emoji emoji-2753\" role=\"img\" title=\"question\">:question:</span> re: \"regression: conflicting trait impls because <code>Box&lt;dyn Fn*&gt;</code> now implements <code>Fn*</code>.\" <a href=\"https://github.com/rust-lang/rust/issues/59750\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59750\">#59750</a>  : was this expected fallout from some other recent change? And is this actually a T-libs problem rather than a T-compiler one?</p>",
        "id": 163099419,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554989693
    },
    {
        "content": "<p><span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> seeking help on resolving \"[firefox] error: relocation refers to local symbol \"\" [12], which is defined in a discarded section\" <a href=\"https://github.com/rust-lang/rust/issues/59652\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59652\">#59652</a></p>",
        "id": 163099963,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554990031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I think <code>Box&lt;dyn Fn*&gt;</code> is a T-Lang/T-Libs issue; it happened due to standard coherence issues due the introduction of impls</p>",
        "id": 163100856,
        "sender_full_name": "centril",
        "timestamp": 1554990663
    },
    {
        "content": "<p>the teams that participated in FCP were T-Lang &amp; T-Libs</p>",
        "id": 163100875,
        "sender_full_name": "centril",
        "timestamp": 1554990685
    },
    {
        "content": "<p>okay I'll go find the associated issues and link them and then close <a href=\"https://github.com/rust-lang/rust/issues/59750\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59750\">#59750</a></p>",
        "id": 163101387,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991034
    },
    {
        "content": "<p><span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span> seeking help on resolving \"Compiler panic with generic-typed nested closures\" <a href=\"https://github.com/rust-lang/rust/issues/59494\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59494\">#59494</a></p>",
        "id": 163101405,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>  regression arose from: <a href=\"https://github.com/rust-lang/rust/pull/59500\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59500\">https://github.com/rust-lang/rust/pull/59500</a>, FCP in <a href=\"https://github.com/rust-lang/rust/pull/55431\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/55431\">https://github.com/rust-lang/rust/pull/55431</a>.</p>",
        "id": 163101488,
        "sender_full_name": "centril",
        "timestamp": 1554991086
    },
    {
        "content": "<p>Hi all =)</p>",
        "id": 163101952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991384
    },
    {
        "content": "<p>hi <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span></p>",
        "id": 163101966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991393
    },
    {
        "content": "<p>you can see the results of pre-triage above</p>",
        "id": 163101996,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991418
    },
    {
        "content": "<p>the messages with a constructor worker ( <span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span>) are seeking volunteers</p>",
        "id": 163102014,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991436
    },
    {
        "content": "<p>I didn't finish all the pre-triage I wanted to</p>",
        "id": 163102084,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991468
    },
    {
        "content": "<p>but we can dive into what's left here</p>",
        "id": 163102089,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991472
    },
    {
        "content": "<p>lo and behold, there are <em>zero</em> beta-nominations. (Probably because we just cut the beta)</p>",
        "id": 163102105,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991492
    },
    {
        "content": "<p><span aria-label=\"construction worker\" class=\"emoji emoji-1f477\" role=\"img\" title=\"construction worker\">:construction_worker:</span>  I wanted to mention something. I think we should start posting \"minimal minutes\" from this meeting to an internals thread (and the compiler-team repository). I think they would have the form of this:</p>\n<p># Volunters wanted</p>\n<ul>\n<li>links to issues go here</li>\n</ul>\n<p># Backport decisions</p>\n<ul>\n<li>... maybe list these? does anybody care?</li>\n</ul>\n<p># Working group sync</p>\n<p>for each working group, link to the zulip comment where the sync started, and maybe include a few details, but maybe not even that.</p>\n<p>Any volunteers to do that for this week?  =)</p>",
        "id": 163102106,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991492
    },
    {
        "content": "<p>I'm partially looking for a way to get more visibility for the <strong>volunteers wanted</strong> issues</p>",
        "id": 163102136,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991515
    },
    {
        "content": "<p>I'd offer to do it but I almost always have to leave immediately after these meetings end</p>",
        "id": 163102149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991535
    },
    {
        "content": "<p>I can do it</p>",
        "id": 163102159,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1554991543
    },
    {
        "content": "<p>volunteers wanted seems like something that we should autogen from github tags</p>",
        "id": 163102168,
        "sender_full_name": "oli",
        "timestamp": 1554991555
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>! :hero:</p>",
        "id": 163102171,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991558
    },
    {
        "content": "<p>same with backport decisions</p>",
        "id": 163102255,
        "sender_full_name": "oli",
        "timestamp": 1554991588
    },
    {
        "content": "<p>I think it's fine to have some github tags but I wouldn't want to block on having minutes for want of tooling</p>",
        "id": 163102300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991618
    },
    {
        "content": "<p>I also think we need to start looking into how to more widely <em>advertise</em> said minutes, but let's get some first</p>",
        "id": 163102326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991633
    },
    {
        "content": "<p>(I mean, probably just having a little blog and maybe a twitter account would suffice)</p>",
        "id": 163102361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991669
    },
    {
        "content": "<p>so it seems like the set of triage topics is remarkably short today</p>",
        "id": 163102582,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991814
    },
    {
        "content": "<p>just two nominated issues, one of which is one of the \"volunteers wanted\" ones from above, <a href=\"https://github.com/rust-lang/rust/issues/59652\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59652\">#59652</a></p>",
        "id": 163102781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991864
    },
    {
        "content": "<p>there's an issue that's been on my radar for a bit</p>",
        "id": 163102817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991897
    },
    {
        "content": "<p>and the other nominated issue is the PR about the performance impact of local interners, PR <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a></p>",
        "id": 163102822,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991901
    },
    {
        "content": "<p>where we can probably clear that nomination label</p>",
        "id": 163102899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991936
    },
    {
        "content": "<p>since I'm pretty sure we've already discussed this a couple of times</p>",
        "id": 163102907,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991942
    },
    {
        "content": "<p>it is nonetheless waiting-on-team, in a sense</p>",
        "id": 163102912,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991948
    },
    {
        "content": "<p>(its marked do-not-merge, but we owe @Zoxc  a decision about whether to move forward here.)</p>",
        "id": 163102929,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554991965
    },
    {
        "content": "<p>cargo check fails only in incremental mode <a href=\"https://github.com/rust-lang/rust/issues/58291\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58291\">#58291</a>, which I think has been affecting the <a class=\"stream\" data-stream-id=\"185405\" href=\"/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0\">#t-compiler/wg-rls-2.0</a> folks (cc <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>, <span class=\"user-mention\" data-user-id=\"129457\">@Florian Diebold</span>) -- <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> have you seen this one?</p>",
        "id": 163102932,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554991967
    },
    {
        "content": "<p>nope, haven't seen it yet</p>",
        "id": 163103006,
        "sender_full_name": "mw",
        "timestamp": 1554992016
    },
    {
        "content": "<blockquote>\n<p>just two nominated issues, one of which is one of the \"volunteers wanted\" ones from above, <a href=\"https://github.com/rust-lang/rust/issues/59652\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59652\">#59652</a></p>\n</blockquote>\n<p>so this seems semi-urgent, no?</p>",
        "id": 163103016,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992019
    },
    {
        "content": "<p>hmm unfortunately we probably need to start dealing with unprioiritzed/unnominated bugs like this one</p>",
        "id": 163103019,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992021
    },
    {
        "content": "<p>you're asking if <a href=\"https://github.com/rust-lang/rust/issues/59652\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59652\">#59652</a> seems urgent?</p>",
        "id": 163103029,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992034
    },
    {
        "content": "<p>I am</p>",
        "id": 163103035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992039
    },
    {
        "content": "<p>yes I think it is urgent.</p>",
        "id": 163103078,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992044
    },
    {
        "content": "<p>Is there any reason <em>not</em> to just revert the offending PR? I guess because it seems so strange to imagine it having an affect?</p>",
        "id": 163103100,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992067
    },
    {
        "content": "<p>I would like to perhaps also get an isolated test case</p>",
        "id": 163103143,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992092
    },
    {
        "content": "<p>which vorner may be able to supply</p>",
        "id": 163103151,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992101
    },
    {
        "content": "<p>(Or did we decide that this is not in fact the fault of <a href=\"https://github.com/rust-lang/rust/issues/59401\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59401\">#59401</a>?)</p>",
        "id": 163103161,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992106
    },
    {
        "content": "<p>ok</p>",
        "id": 163103166,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992107
    },
    {
        "content": "<p>I guess we can wait to revert as a last resort</p>",
        "id": 163103182,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992119
    },
    {
        "content": "<p>I'll assign myself to follow up on this, I guess</p>",
        "id": 163103193,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992128
    },
    {
        "content": "<p>because ... I do such a stellar job at that on all the other issues I assign myself to ...</p>",
        "id": 163103205,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992145
    },
    {
        "content": "<p>&lt;/sarcasm&gt;</p>",
        "id": 163103207,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992151
    },
    {
        "content": "<p>I'll un-nominate it</p>",
        "id": 163103329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992230
    },
    {
        "content": "<p>regarding PR <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a></p>",
        "id": 163103376,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992273
    },
    {
        "content": "<p>should we consider making a WG-rustc-memory-usage ?</p>",
        "id": 163103426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992284
    },
    {
        "content": "<p>I am not inclined to do so unless we have people who really want to put energy into it</p>",
        "id": 163103478,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992320
    },
    {
        "content": "<p>But I think it'd be good to have on a lsit of \"things we would <em>like</em> to do\"</p>",
        "id": 163103521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992331
    },
    {
        "content": "<p>i.e., not quite \"volunteers wanted\" but maybe \"wg leaders wanted\" :)</p>",
        "id": 163103557,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992350
    },
    {
        "content": "<p>okay</p>",
        "id": 163103564,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992357
    },
    {
        "content": "<p>I guess it depends on how much <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> thinks they would be able to do</p>",
        "id": 163103571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992362
    },
    {
        "content": "<p>(ps, <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span>, are you monitoring zulip now? That'd be awesome =)</p>",
        "id": 163103587,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992378
    },
    {
        "content": "<p>also, <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> and <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> are the only ones with unchecked boxes on PR <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a></p>",
        "id": 163103604,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992392
    },
    {
        "content": "<p>I thought I checked my box</p>",
        "id": 163103612,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992398
    },
    {
        "content": "<p>whoops:)</p>",
        "id": 163103619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992401
    },
    {
        "content": "<p>/me checks</p>",
        "id": 163103703,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992425
    },
    {
        "content": "<p>eddyb also claimed their vote did not register</p>",
        "id": 163103710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992429
    },
    {
        "content": "<p>okay well</p>",
        "id": 163103883,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992529
    },
    {
        "content": "<p>that might be it for triage. I mean, there were other P-high issues I didn't get to in pre-triage</p>",
        "id": 163103902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992548
    },
    {
        "content": "<p>but I think we're all better off if we just jump to WG-checkins?</p>",
        "id": 163103933,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992560
    },
    {
        "content": "<p>Is it the triage meeting we normally do small announcements in? (I don't have any myself, but some folks might)</p>",
        "id": 163104008,
        "sender_full_name": "davidtwco",
        "timestamp": 1554992610
    },
    {
        "content": "<p>Call for somebody to benchmark runtime perf of <a href=\"https://github.com/rust-lang/rust/pull/59546\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59546\">https://github.com/rust-lang/rust/pull/59546</a></p>",
        "id": 163104018,
        "sender_full_name": "nagisa",
        "timestamp": 1554992618
    },
    {
        "content": "<p>oh I forgot to ask for any announcemnets at the start</p>",
        "id": 163104095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992648
    },
    {
        "content": "<p>so yeah, lets maybe allow people to chime in with anything they want for a few minutes</p>",
        "id": 163104113,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992661
    },
    {
        "content": "<blockquote>\n<p>Call for somebody to benchmark runtime perf of <a href=\"https://github.com/rust-lang/rust/pull/59546\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/59546\">https://github.com/rust-lang/rust/pull/59546</a></p>\n</blockquote>\n<p>cc <span class=\"user-mention\" data-user-id=\"130111\">@Adam Perry</span> -- any chance we can run lolbench on this?</p>",
        "id": 163104180,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992707
    },
    {
        "content": "<p><span aria-label=\"horn\" class=\"emoji emoji-1f4ef\" role=\"img\" title=\"horn\">:horn:</span> Announcement <span aria-label=\"horn\" class=\"emoji emoji-1f4ef\" role=\"img\" title=\"horn\">:horn:</span> </p>\n<p>The steering meeting is tomorrow. <a href=\"#narrow/stream/131828-t-compiler/topic/pre-steering.20meeting.202019.2E04.2E12.20.2358850\" title=\"#narrow/stream/131828-t-compiler/topic/pre-steering.20meeting.202019.2E04.2E12.20.2358850\">The theme is likely to be a proposal for a team design meeting</a></p>",
        "id": 163104233,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992753
    },
    {
        "content": "<p>Which imo is also relevant to <a href=\"https://github.com/rust-lang/rust/issues/57214\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/57214\">#57214</a> and <a href=\"https://github.com/rust-lang/rust/issues/59546\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59546\">#59546</a></p>",
        "id": 163104301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992776
    },
    {
        "content": "<p>It's likely I'm not able to participate</p>",
        "id": 163104309,
        "sender_full_name": "oli",
        "timestamp": 1554992783
    },
    {
        "content": "<p>In steering meeting you mean?</p>",
        "id": 163104318,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992793
    },
    {
        "content": "<p>yes</p>",
        "id": 163104323,
        "sender_full_name": "oli",
        "timestamp": 1554992798
    },
    {
        "content": "<p>If you have thoughts you'd like to leave, please leave them in <a href=\"#narrow/stream/131828-t-compiler/topic/pre-steering.20meeting.202019.2E04.2E12.20.2358850\" title=\"#narrow/stream/131828-t-compiler/topic/pre-steering.20meeting.202019.2E04.2E12.20.2358850\">the pre-steering meeting topic then</a></p>",
        "id": 163104351,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992823
    },
    {
        "content": "<p>And I'll try to echo them</p>",
        "id": 163104362,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554992830
    },
    {
        "content": "<p>okay well while we wait another minute or so for any other announcements</p>",
        "id": 163104580,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554992992
    },
    {
        "content": "<p>the <a href=\"https://github.com/rust-lang/compiler-team/blob/master/about/triage-meeting.md#working-group-check-in\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/master/about/triage-meeting.md#working-group-check-in\">check-in schedule</a> lists today has being for wg-mir-opt and wg-pipelining</p>",
        "id": 163104655,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993018
    },
    {
        "content": "<p>(wasn't wg-pipelining just formed recently?)</p>",
        "id": 163104664,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993028
    },
    {
        "content": "<p>anyway, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>, are you representing wg-mir-opt today?</p>",
        "id": 163104725,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993083
    },
    {
        "content": "<p>jup</p>",
        "id": 163104743,
        "sender_full_name": "oli",
        "timestamp": 1554993103
    },
    {
        "content": "<p>okay. and is either <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> or <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> around to represent wg-pipelining ?</p>",
        "id": 163104814,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993125
    },
    {
        "content": "<p>(I'm going to assume \"no\" for now, but I figured I'd ask)</p>",
        "id": 163104834,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993141
    },
    {
        "content": "<p>in the meantime: <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> , why don't you go ahead and let us know whats up in mir-optimization land.</p>",
        "id": 163104854,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993158
    },
    {
        "content": "<blockquote>\n<p>okay. and is either <span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> or <span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> around to represent wg-pipelining ?</p>\n</blockquote>\n<p>I can if needed</p>",
        "id": 163104894,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554993186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that'd be great; thanks</p>",
        "id": 163104966,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993241
    },
    {
        "content": "<p>I'm here now!</p>",
        "id": 163105183,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554993352
    },
    {
        "content": "<p>sorry for the delay</p>",
        "id": 163105187,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554993355
    },
    {
        "content": "<p>So, our big next goal is making <code>Place</code> not recursive</p>",
        "id": 163105192,
        "sender_full_name": "oli",
        "timestamp": 1554993359
    },
    {
        "content": "<p>we've been idle on that for a few weeks, but <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> has picked it up again and is proceeding very fast</p>",
        "id": 163105266,
        "sender_full_name": "oli",
        "timestamp": 1554993386
    },
    {
        "content": "<p>We will regress max-rss in an intermediate step, but the final structure will use less memory in total, be easier to work with and probably even faster</p>",
        "id": 163105294,
        "sender_full_name": "oli",
        "timestamp": 1554993417
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 163105341,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1554993456
    },
    {
        "content": "<p>sorry about the delay, Rust Latam stuff got all my time :)</p>",
        "id": 163105365,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1554993475
    },
    {
        "content": "<p>Once we have that, there are further refactorings of <code>Place</code> (like getting rid of the <code>Deref</code> projection), that are supposed to make borrow checking simpler. We have quite a list of things to do left from the all-hands, but are picking our battles one by one</p>",
        "id": 163105368,
        "sender_full_name": "oli",
        "timestamp": 1554993477
    },
    {
        "content": "<p>(I'm here btw)</p>",
        "id": 163105415,
        "sender_full_name": "eddyb",
        "timestamp": 1554993484
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> for your help with the <code>Place</code> work <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 163105436,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1554993499
    },
    {
        "content": "<p>That's mostly it from us, no big things, but progress</p>",
        "id": 163105440,
        "sender_full_name": "oli",
        "timestamp": 1554993500
    },
    {
        "content": "<p>for reference, the relevant Place bug was <a href=\"https://github.com/rust-lang/rust/issues/52708\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52708\">#52708</a>, right?</p>",
        "id": 163105520,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993567
    },
    {
        "content": "<blockquote>\n<p>for reference, the relevant Place bug was <a href=\"https://github.com/rust-lang/rust/issues/52708\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/52708\">#52708</a>, right?</p>\n</blockquote>\n<p>yes</p>",
        "id": 163105631,
        "sender_full_name": "csmoe",
        "timestamp": 1554993616
    },
    {
        "content": "<p>out of curiousity, you said the final structure will use less memory in total. nnethercote did voice concern in a recent comment about Place itself increasing from 16- to 24-bytes</p>",
        "id": 163105653,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993635
    },
    {
        "content": "<p>and that causing Statement to grow</p>",
        "id": 163105665,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> ^</p>",
        "id": 163105673,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993654
    },
    {
        "content": "<blockquote>\n<p>That's mostly it from us, no big things, but progress</p>\n</blockquote>\n<p>ps, this sounds awesome y'all</p>",
        "id": 163105723,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554993687
    },
    {
        "content": "<p>would you mind either here or in the issue, making a note explaining why the overall memory usage should not increase?</p>",
        "id": 163105728,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993691
    },
    {
        "content": "<p>yes, we'll get back down to 16 bits, but the interned memory will be less</p>",
        "id": 163105742,
        "sender_full_name": "oli",
        "timestamp": 1554993702
    },
    {
        "content": "<p>so no regression on <code>Statement</code>, but an improvement in interned memory</p>",
        "id": 163105810,
        "sender_full_name": "oli",
        "timestamp": 1554993724
    },
    {
        "content": "<p>surely not 16-<em>bits</em> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 163105818,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993729
    },
    {
        "content": "<p>are you going to decrease it from 24-bytes down to 16-bytes by using indices rather than pointers?</p>",
        "id": 163105860,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993773
    },
    {
        "content": "<p>well, we don't have to have this discussion synchronously here</p>",
        "id": 163106057,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993884
    },
    {
        "content": "<p>bytes -.- xD</p>",
        "id": 163106058,
        "sender_full_name": "oli",
        "timestamp": 1554993885
    },
    {
        "content": "<p>especially since the person most worried about it is not here in this room</p>",
        "id": 163106067,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993896
    },
    {
        "content": "<p>okay, so that's the update from WG-mir-opt</p>",
        "id": 163106128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993946
    },
    {
        "content": "<p>I'm also interested on what's the idea there :)</p>",
        "id": 163106138,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1554993954
    },
    {
        "content": "<p>lets hear from <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> about WG-pipelining next</p>",
        "id": 163106149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554993962
    },
    {
        "content": "<p>but yeah I guess I can open a topic on wg-mit-opt</p>",
        "id": 163106216,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1554993978
    },
    {
        "content": "<p>Sure! So the pipelining WG was created a few days ago at the request of <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>, so it's all very new and I'm not sure I have a ton to report other than that it exists</p>",
        "id": 163106257,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994014
    },
    {
        "content": "<p>well it's worth reporting that you did a great writeup</p>",
        "id": 163106291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994029
    },
    {
        "content": "<p>I should look at that and maybe help</p>",
        "id": 163106296,
        "sender_full_name": "eddyb",
        "timestamp": 1554994033
    },
    {
        "content": "<p>indeed :)</p>",
        "id": 163106303,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994036
    },
    {
        "content": "<p>and just conveying the general idea of what's going on</p>",
        "id": 163106305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994038
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> and I met over video last Friday</p>",
        "id": 163106312,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994043
    },
    {
        "content": "<p>do we have someone who wants to work on that?</p>",
        "id": 163106315,
        "sender_full_name": "eddyb",
        "timestamp": 1554994046
    },
    {
        "content": "<p>and I jotted down a ton of notes at <a href=\"https://github.com/rust-lang/compiler-team/blob/master/working-groups/pipelining/NOTES.md\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/master/working-groups/pipelining/NOTES.md\">https://github.com/rust-lang/compiler-team/blob/master/working-groups/pipelining/NOTES.md</a></p>",
        "id": 163106320,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994048
    },
    {
        "content": "<p>currently the members of the WG are me and <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span></p>",
        "id": 163106335,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994058
    },
    {
        "content": "<p>and the plan, on the rustc side of things, is for this to likely be a relatively short-lived WG</p>",
        "id": 163106342,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994068
    },
    {
        "content": "<p>the goal is to enable Cargo to invoke rustc in a pipelined fashion</p>",
        "id": 163106352,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994080
    },
    {
        "content": "<p>but the WG isn't currently going to cover the Cargo integration</p>",
        "id": 163106404,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994088
    },
    {
        "content": "<p>so it's just ensuring that all the compiler support is in place for Cargo to best take advantage of that</p>",
        "id": 163106416,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994100
    },
    {
        "content": "<p>and by \"pipelining\" what I mean is that Cargo can start dependant rustc processes sooner</p>",
        "id": 163106428,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994115
    },
    {
        "content": "<p>overlapping their execution with the parent processes slightly</p>",
        "id": 163106441,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994120
    },
    {
        "content": "<p>basically today we compile all your dependencies one after the other:</p>\n<div class=\"codehilite\"><pre><span></span>         meta                meta\n[-libA----|--------][-libB----|--------][-binary-----------]\n0s        5s       10s       15s       20s                30s\n</pre></div>",
        "id": 163106442,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994121
    },
    {
        "content": "<p>(sort of like CPU pipeliens)</p>",
        "id": 163106444,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994126
    },
    {
        "content": "<p>but we should be able to overlap them, letting the downstream crates start compiling while the upstream ones do LLVM work:</p>\n<div class=\"codehilite\"><pre><span></span>[-libA----|--------]\n          [-libB----|--------]\n                    [-binary-----------]\n0s        5s       10s       15s       20s\n</pre></div>",
        "id": 163106480,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994147
    },
    {
        "content": "<p>heh that's a much better idea, and in that chart \"meta\" is where metadata is produced, where after rustc has metadata it shoudl be able to start down stream compiles immediately</p>",
        "id": 163106496,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994159
    },
    {
        "content": "<p>I'm stealing from <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span>'s writeup beacuse I don't think they would think to copy their own pretty pictures in here :P</p>",
        "id": 163106500,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994162
    },
    {
        "content": "<p>(you're not wrong)</p>",
        "id": 163106505,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994170
    },
    {
        "content": "<p>And... I think that's roughly everything for a checkin I can think of, but if others have questions I can try to answer</p>",
        "id": 163106529,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994194
    },
    {
        "content": "<p>(a ton more technical details are in the NOTES.md file and we can probably discuss technical issues on the tracking issue)</p>",
        "id": 163106598,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994216
    },
    {
        "content": "<blockquote>\n<p>do we have someone who wants to work on that?</p>\n</blockquote>\n<p>I'm interested, but unsure what <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>'s plan is :)</p>",
        "id": 163106607,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1554994224
    },
    {
        "content": "<p>which is located at <a href=\"https://github.com/rust-lang/rust/issues/58465\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58465\">https://github.com/rust-lang/rust/issues/58465</a></p>",
        "id": 163106614,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994230
    },
    {
        "content": "<p>One non-obvious thing was the signaling mechanism</p>",
        "id": 163106647,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994250
    },
    {
        "content": "<p>That is, the plan is for rustc to compile the metadata and then send a signal to cargo when that is ready</p>",
        "id": 163106669,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994265
    },
    {
        "content": "<p>So cargo can know to kick off the dependent compilations</p>",
        "id": 163106684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994275
    },
    {
        "content": "<p>right?</p>",
        "id": 163106685,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994276
    },
    {
        "content": "<p>Right yeah, so we're assuming that this is all going to be in-process for rustc</p>",
        "id": 163106703,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994290
    },
    {
        "content": "<p>oh, btw, I was talking to <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> this morning and thinking maybe we should make cross-crate metadata more like incremental even without moving to full \"cross-crate incremental state usage\"</p>",
        "id": 163106707,
        "sender_full_name": "eddyb",
        "timestamp": 1554994296
    },
    {
        "content": "<p>so Cargo will not invoke rustc twice (once producing metadata and once producing the final linkable artifact)</p>",
        "id": 163106714,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994302
    },
    {
        "content": "<p>so this necessitates rustc sending Cargo some sort of signal that metadata is ready</p>",
        "id": 163106721,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994313
    },
    {
        "content": "<blockquote>\n<p>That is, the plan is for rustc to compile the metadata and then send a signal to cargo when that is ready</p>\n</blockquote>\n<p>reviewing the doc, I guess that's just dumping some stuff to stdout</p>",
        "id": 163106725,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994319
    },
    {
        "content": "<p>I wonder if we could expose partially-written <code>ar</code> files or something, heh</p>",
        "id": 163106776,
        "sender_full_name": "eddyb",
        "timestamp": 1554994327
    },
    {
        "content": "<p>right yes, so that's the current plan of action</p>",
        "id": 163106781,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994330
    },
    {
        "content": "<blockquote>\n<p>oh, btw, I was talking to <span class=\"user-mention silent\" data-user-id=\"124287\">mw</span> this morning and thinking maybe we should make cross-crate metadata more like incremental even without moving to full \"cross-crate incremental state usage\"</p>\n</blockquote>\n<p>that would be an independent change, right <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>? (i.e., cargo wouldn't notice)</p>",
        "id": 163106801,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994348
    },
    {
        "content": "<p>is to have something on the rustc CLI control whether rustc prints a JSON message (or somethign like that) when an output is ready</p>",
        "id": 163106805,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994349
    },
    {
        "content": "<p>so we keep appending object files to an <code>.rlib</code> and only update the file list at the end. but idk if that is supported by anything</p>",
        "id": 163106830,
        "sender_full_name": "eddyb",
        "timestamp": 1554994368
    },
    {
        "content": "<p>(my initial thinking was to just reuse <code>--error-format=json</code> as the CLI flag)</p>",
        "id": 163106843,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994378
    },
    {
        "content": "<blockquote>\n<p>is to have something on the rustc CLI control whether rustc prints a JSON message (or somethign like that) when an output is ready</p>\n</blockquote>\n<p>i assume we also need to be careful,when in this mode, not to emit anything to stdout that <em>isn't</em> a json message?</p>",
        "id": 163106872,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554994396
    },
    {
        "content": "<p>so how would metadata be used without huge changes? <code>rmeta</code> + <code>rlib</code> output?</p>",
        "id": 163106891,
        "sender_full_name": "eddyb",
        "timestamp": 1554994407
    },
    {
        "content": "<p>or I guess cargo can just throw away any content that isn't already json formatted?</p>",
        "id": 163106899,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554994414
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> IIRC that is already a concern</p>",
        "id": 163106904,
        "sender_full_name": "eddyb",
        "timestamp": 1554994418
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> nah not necessarily, Cargo would just eat any lines that start with <code>{</code></p>",
        "id": 163106907,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994419
    },
    {
        "content": "<p>(which I think is what Cargo already does today)</p>",
        "id": 163106920,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994429
    },
    {
        "content": "<p>does <code>--emit=rmeta,rlib</code> work today?</p>",
        "id": 163107051,
        "sender_full_name": "eddyb",
        "timestamp": 1554994494
    },
    {
        "content": "<p>can <code>cargo check</code> reuse up-to-date crates that weren't built by <code>cargo check</code>? seems relevant here</p>",
        "id": 163107127,
        "sender_full_name": "eddyb",
        "timestamp": 1554994528
    },
    {
        "content": "<p>Yes that was one thing I thought we would have to get working (rustc to only consume metadata files, not rlibs as inputs), but it turns out that all already works in rustc</p>",
        "id": 163107130,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994531
    },
    {
        "content": "<p>fascinating :D</p>",
        "id": 163107138,
        "sender_full_name": "eddyb",
        "timestamp": 1554994541
    },
    {
        "content": "<p>There are no plans to integrate this with <code>cargo check</code> right now</p>",
        "id": 163107142,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994543
    },
    {
        "content": "<p>a lot of stuff might be coincidental, FWIW, I'd double-check with <span class=\"user-mention\" data-user-id=\"124287\">@mw</span> and whoever else worked in those areas</p>",
        "id": 163107208,
        "sender_full_name": "eddyb",
        "timestamp": 1554994572
    },
    {
        "content": "<p>one thing I was looking at today was a list of symbol name exports in crate metadata, I hope that's serialized properly even with <code>rmeta</code> output</p>",
        "id": 163107228,
        "sender_full_name": "eddyb",
        "timestamp": 1554994594
    },
    {
        "content": "<blockquote>\n<p>can <code>cargo check</code> reuse up-to-date crates that weren't built by <code>cargo check</code>? seems relevant here</p>\n</blockquote>\n<p>i got the impression from other bugs I've seen go by that <code>cargo check</code> does not play well with <code>cargo build</code>, in terms of either destroying or failing to reuse intermediate results</p>",
        "id": 163107232,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554994597
    },
    {
        "content": "<p>Correct, <code>cargo check</code> and <code>cargo build</code> cannot reuse the same caches</p>",
        "id": 163107269,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994626
    },
    {
        "content": "<p>(I was thinking that if Cargo starts doing <code>--emit=rmeta,rlib</code>, the <code>rmeta</code> is already what <code>cargo check</code> needs, but it's a bit offtopic)</p>",
        "id": 163107281,
        "sender_full_name": "eddyb",
        "timestamp": 1554994639
    },
    {
        "content": "<p>there's actually behavior in the compiler today where <code>--emit metadata</code> produces different metadata than <code>--emit metadata,link</code></p>",
        "id": 163107284,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994640
    },
    {
        "content": "<p>ahh! that's what I was wondering</p>",
        "id": 163107310,
        "sender_full_name": "eddyb",
        "timestamp": 1554994660
    },
    {
        "content": "<p>makes sense, even if not ideal :P</p>",
        "id": 163107320,
        "sender_full_name": "eddyb",
        "timestamp": 1554994673
    },
    {
        "content": "<p>can you elaborate a bit?</p>",
        "id": 163107330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994682
    },
    {
        "content": "<p>there's other werid Cargo reasons they're not using the same cache, but yeah that's somewhat offtopic I think :)</p>",
        "id": 163107382,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994688
    },
    {
        "content": "<p>is it because doing linking requires us to generate .. more info or something?</p>",
        "id": 163107393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> about how the metadata is different?</p>",
        "id": 163107396,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994701
    },
    {
        "content": "<p>I wonder if in <code>rmeta</code> output  mode, Cargo could just watch for the file and start dependent rustc right away without any rustc changes</p>",
        "id": 163107404,
        "sender_full_name": "eddyb",
        "timestamp": 1554994707
    },
    {
        "content": "<p>yeah</p>",
        "id": 163107409,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994711
    },
    {
        "content": "<p>I believe so, what <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> was mentioning about symbols definitely comes to mind</p>",
        "id": 163107414,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994715
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> have you given any more consideration to having these two steps be available as separate rustc invocations? I'm currently working on goma (distributed compiler+cache) support for Rust and that's something that has come up repeatedly</p>",
        "id": 163107423,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554994723
    },
    {
        "content": "<p>where we use the crate types to guide symbol visibility tables and whanot</p>",
        "id": 163107425,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994724
    },
    {
        "content": "<p>I've definitely encountered bugs and ICEs that only reproduce in very specific modes</p>",
        "id": 163107430,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994729
    },
    {
        "content": "<p>(we can talk on a separate thread later)</p>",
        "id": 163107459,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554994747
    },
    {
        "content": "<p>since we create the file elsewhere and \"atomically\" move it into place</p>",
        "id": 163107466,
        "sender_full_name": "eddyb",
        "timestamp": 1554994751
    },
    {
        "content": "<p>so when Cargo might see the file, it's already complete</p>",
        "id": 163107477,
        "sender_full_name": "eddyb",
        "timestamp": 1554994765
    },
    {
        "content": "<p>assuming it has a predictable file name</p>",
        "id": 163107485,
        "sender_full_name": "eddyb",
        "timestamp": 1554994780
    },
    {
        "content": "<p>PS, I'm so happy to see this \"sync\" doing exactly what I had hoped it would do, and getting feedback from the rest of the team on the ideas so far :)</p>",
        "id": 163107493,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> we have, yeah, but decided to not pursue that at this time because it seems unlikely to be a win for the local compile build case (all on the same machine). That being said I suspect for the distributed use case it would have clear wins. I also think, though, that it's probably just a change in Cargo to invoke rustc twice rather than changing rustc itself, so that's probably something we can tack on later if necessary.</p>",
        "id": 163107497,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554994788
    },
    {
        "content": "<p>( but yeah seems like we could move the detailed discussions to <a class=\"stream\" data-stream-id=\"195180\" href=\"/#narrow/stream/195180-t-compiler.2Fwg-pipelining\">#t-compiler/wg-pipelining</a>, seeing as meeting time is almost up )</p>",
        "id": 163107554,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554994804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> we should  talk about that but I think not integrating such a distributed cache with incremental would be a mistake</p>",
        "id": 163107571,
        "sender_full_name": "eddyb",
        "timestamp": 1554994810
    },
    {
        "content": "<p>and cross-crate incremental is different than <code>rmeta</code> (which could be considered \"legacy crate metadata\")</p>",
        "id": 163107627,
        "sender_full_name": "eddyb",
        "timestamp": 1554994858
    },
    {
        "content": "<p>@eddyb I'm not sure how we <em>would</em> integrate it with incremental</p>",
        "id": 163107637,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554994863
    },
    {
        "content": "<p>basically there is more or less no reason incremental caches can't be read cross-crate to replace <code>rmeta</code></p>",
        "id": 163107664,
        "sender_full_name": "eddyb",
        "timestamp": 1554994887
    },
    {
        "content": "<p>almost all the infrastructure is in place anyway</p>",
        "id": 163107679,
        "sender_full_name": "eddyb",
        "timestamp": 1554994899
    },
    {
        "content": "<p>There is-- they would dirty the inputs to the cache</p>",
        "id": 163107696,
        "sender_full_name": "Taylor Cramer",
        "timestamp": 1554994917
    },
    {
        "content": "<p><code>rmeta</code> could just be an incremental cache archive at this point</p>",
        "id": 163107698,
        "sender_full_name": "eddyb",
        "timestamp": 1554994918
    },
    {
        "content": "<p>okay I have to go and I agree with <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> that this conversation can move into <a class=\"stream\" data-stream-id=\"195180\" href=\"/#narrow/stream/195180-t-compiler.2Fwg-pipelining\">#t-compiler/wg-pipelining</a></p>",
        "id": 163107766,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554994942
    },
    {
        "content": "<p>thanks to everyone in <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span> for attending!</p>",
        "id": 163107781,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554994952
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> what do you think of the file watching alternative to rustc signalling?</p>",
        "id": 163107839,
        "sender_full_name": "eddyb",
        "timestamp": 1554995005
    },
    {
        "content": "<p>the crazy thing is that it could've been implemented in any Cargo that supports a rustc that supports rmeta</p>",
        "id": 163107858,
        "sender_full_name": "eddyb",
        "timestamp": 1554995023
    },
    {
        "content": "<p>Heh, sounds like a cross-platform nightmare</p>",
        "id": 163107863,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554995027
    },
    {
        "content": "<p>(also very unlikely to work on all kinds of filesystems like nfs)</p>",
        "id": 163107901,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1554995040
    },
    {
        "content": "<p>idk how I didn't think of it before - ofc, maybe I did and also heard about the nightmare</p>",
        "id": 163107948,
        "sender_full_name": "eddyb",
        "timestamp": 1554995046
    },
    {
        "content": "<p>Cargo <em>could</em> poll every 10ms or so, I wonder how sucky that would be</p>",
        "id": 163107970,
        "sender_full_name": "eddyb",
        "timestamp": 1554995069
    },
    {
        "content": "<p>it only needs to do it for the output of running rustc processes</p>",
        "id": 163107987,
        "sender_full_name": "eddyb",
        "timestamp": 1554995085
    },
    {
        "content": "<p>(To me an explicit print to stdout sounds less fragile.)</p>",
        "id": 163107994,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554995093
    },
    {
        "content": "<p>yes, I agree</p>",
        "id": 163108013,
        "sender_full_name": "eddyb",
        "timestamp": 1554995107
    },
    {
        "content": "<p>if we didn't control the full stack here, then I'd be more open to <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> 's alternative approach.</p>",
        "id": 163108035,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554995132
    },
    {
        "content": "<p>we could also use it for Cargo build progress updates :P</p>",
        "id": 163108039,
        "sender_full_name": "eddyb",
        "timestamp": 1554995134
    },
    {
        "content": "<p>I think I'm fine with the rustc thing if it's not very pipeline-centric, but more like \"artifact emitted\"</p>",
        "id": 163108146,
        "sender_full_name": "eddyb",
        "timestamp": 1554995195
    },
    {
        "content": "<p>PS, <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> -- you will prepare some minutes? Maybe make a pull request to <a href=\"https://github.com/rust-lang/compiler-team\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team\">https://github.com/rust-lang/compiler-team</a> creating a directory <code>minutes/triage-meeting</code>, similar to <a href=\"https://github.com/rust-lang/compiler-team/tree/master/minutes/steering-meeting\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/tree/master/minutes/steering-meeting\">the steering-meeting directory</a>?</p>",
        "id": 163108170,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554995223
    },
    {
        "content": "<p>If so, ping me when that's available :)</p>",
        "id": 163108185,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554995234
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> It's available <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>  <a href=\"https://github.com/rust-lang/compiler-team/pull/51\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/pull/51\">https://github.com/rust-lang/compiler-team/pull/51</a></p>",
        "id": 163108815,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1554995652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> I created this thread on IRLO, if you want to post there: <a href=\"https://internals.rust-lang.org/t/compiler-team-triage-meeting/9803\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/compiler-team-triage-meeting/9803\">https://internals.rust-lang.org/t/compiler-team-triage-meeting/9803</a></p>",
        "id": 163109008,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554995791
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>! x-posted</p>",
        "id": 163109076,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1554995861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> btw, where should we discuss the distributed compilation matter further?</p>",
        "id": 163109089,
        "sender_full_name": "eddyb",
        "timestamp": 1554995874
    },
    {
        "content": "<p>I think we could do some really cool things, even though Rust is not a pure language :P</p>",
        "id": 163109152,
        "sender_full_name": "eddyb",
        "timestamp": 1554995893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> and <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> -- I'd say just make a topic here in <a class=\"stream\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler\">#t-compiler</a>, if you think it's out of scope for the pipelining WG (which it sounds like it <em>might</em> be).</p>",
        "id": 163109330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1554996008
    }
]