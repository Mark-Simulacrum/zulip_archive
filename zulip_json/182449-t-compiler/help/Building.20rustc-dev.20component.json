[
    {
        "content": "<p>Hi all, I'm trying to do some println debugging in the compiler while developing a new -Zcodegen-backend, but when building a compiler using <code>./x.py dist</code>, adding the toolchain via <code>rustup toolchain link stage2 build/blah/stage2</code>, using that toolchain, and building my codegen-backend, I get \"can't find crate rustc_ast\".<br>\nI think this means that the rustc-dev component wasn't built, or something like that - I know it's not built by default on stable, so is there maybe some flag I have to enable (in config.toml or something) to get it to be built?</p>",
        "id": 213265737,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602668551
    },
    {
        "content": "<p>When using <code>./x.py dist</code> I think you need to use <code>./x.py dist rustc-dev</code> to build the <code>rustc-dev</code> component. If you just want to use <code>rustup toolchain link</code> you shouldn't use <code>./x.py dist</code>, but instead <code>./x.py build</code>. Maybe with <code>--stage 2</code>.</p>",
        "id": 213266490,
        "sender_full_name": "bjorn3",
        "timestamp": 1602669062
    },
    {
        "content": "<p>Hmm, right, got confused by this page then, it seemed to imply that you needed <code>./x.py dist</code> to link the toolchain. <a href=\"https://rustc-dev-guide.rust-lang.org/building/build-install-distribution-artifacts.html\">https://rustc-dev-guide.rust-lang.org/building/build-install-distribution-artifacts.html</a><br>\nI'll try just <code>./x.py build --stage 2</code> then.</p>",
        "id": 213266667,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602669169
    },
    {
        "content": "<p>While that's building, I also saw this - should this be nightly _or_ dev? not sure if this code is relevant <a href=\"https://github.com/rust-lang/rust/blob/5565241f65cf402c3dbcb55dd492f172c473d4ce/src/tools/build-manifest/src/main.rs#L377\">https://github.com/rust-lang/rust/blob/5565241f65cf402c3dbcb55dd492f172c473d4ce/src/tools/build-manifest/src/main.rs#L377</a></p>",
        "id": 213266945,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602669352
    },
    {
        "content": "<p>That is only for packaging I think. Also you are by default on the <code>dev</code> channel when building locally.</p>",
        "id": 213267070,
        "sender_full_name": "bjorn3",
        "timestamp": 1602669420
    },
    {
        "content": "<p>Hmm, that still didn't work. There's nothing else I should have added to the <code>./x.py build --stage 2</code> command?</p>",
        "id": 213267979,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602669989
    },
    {
        "content": "<p>Does linking <code>build/blah/stage1</code> work?</p>",
        "id": 213268168,
        "sender_full_name": "bjorn3",
        "timestamp": 1602670129
    },
    {
        "content": "<p>Ah, looks like it did! Just had some compiler errors that I assumed were because it was trying to link against the outdated stage0 api, but no, looks like there's changes that haven't shipped in nightly yet (e.g. removing <code>rustc_codegen_ssa::back::write::dump_incremental_data</code>)</p>",
        "id": 213268394,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602670309
    },
    {
        "content": "<p>I changed the codegen backend interface a bit in <a href=\"https://github.com/rust-lang/rust/issues/77795\">#77795</a>, which landed 5 hours ago.</p>",
        "id": 213268732,
        "sender_full_name": "bjorn3",
        "timestamp": 1602670560
    },
    {
        "content": "<p>Basically I moved a lot of common things out of the codegen backend into rustc_interface. I also removed <code>rustc_codegen_ssa::back::write::dump_incremental_data</code> as it didn't do anything at all.</p>",
        "id": 213268818,
        "sender_full_name": "bjorn3",
        "timestamp": 1602670604
    },
    {
        "content": "<p>What codegen backend are you creating if I may ask?</p>",
        "id": 213269069,
        "sender_full_name": "bjorn3",
        "timestamp": 1602670784
    },
    {
        "content": "<p>That's currently a (kind of badly-kept) secret, but we're hopefully open-sourcing in the next few weeks :)</p>",
        "id": 213269202,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602670892
    },
    {
        "content": "<p>I see.</p>",
        "id": 213269225,
        "sender_full_name": "bjorn3",
        "timestamp": 1602670913
    },
    {
        "content": "<p>Ah, right, now hitting the problem that I was hitting earlier with <a href=\"https://github.com/rust-lang/rust/pull/77565\">https://github.com/rust-lang/rust/pull/77565</a> , \"no ImplicitCtxt stored in tls\". (funnily enough, that's the exact PR I'm trying to debug, I think I implemented it horribly wrong)</p>",
        "id": 213269432,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602671055
    },
    {
        "content": "<p>I would have prefered the codegen backend was added only when using <code>-Zbinary-dep-depinfo</code> instead of unconditionally.</p>",
        "id": 213269507,
        "sender_full_name": "bjorn3",
        "timestamp": 1602671136
    },
    {
        "content": "<p>I often make codegen backend changes that only affect specific pieces of code. I don't want to have to rebuild everything in that case.</p>",
        "id": 213269587,
        "sender_full_name": "bjorn3",
        "timestamp": 1602671172
    },
    {
        "content": "<blockquote>\n<p>\"no ImplicitCtxt stored in tls\"</p>\n</blockquote>\n<p>Are you spawning another thread?</p>",
        "id": 213270035,
        "sender_full_name": "bjorn3",
        "timestamp": 1602671504
    },
    {
        "content": "<p>No. The exact same backend code works on nightly, so I'm guessing it's dynamic linking weirdness or something like that.</p>",
        "id": 213270257,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602671632
    },
    {
        "content": "<p>Just a wild guess: Are you sure are compiling the backend using the same rustc as you want to load it into? Try <code>ldd</code> on both rustc and the codegen backend to find the <code>rustc_driver</code> version.</p>",
        "id": 213270408,
        "sender_full_name": "bjorn3",
        "timestamp": 1602671733
    },
    {
        "content": "<p>well, <code>ldd</code> on the backend .so doesn't find it, because it's normally ran through <code>cargo +toolchain</code>, which I presume adds the proper dirs to LD_LIBRARY_PATH?</p>",
        "id": 213270703,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602671943
    },
    {
        "content": "<p>You can use <code>rustup run stage2 ldd /path/to/codegen_backend.so</code>. (assuming that your toolchain is called stage2)</p>",
        "id": 213270758,
        "sender_full_name": "bjorn3",
        "timestamp": 1602671988
    },
    {
        "content": "<p>well that's extremely bizzare, I built against stage1 (because stage2 \"can't find crate rustc_ast\"), but <code>rustup run stage1 ldd the_thing.so</code> doesn't find the .sos, but <code>rustup run stage2 ...</code> does.</p>",
        "id": 213271130,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602672255
    },
    {
        "content": "<p>Strange. I don't know enough about bootstrap to know what is wrong.</p>",
        "id": 213271619,
        "sender_full_name": "bjorn3",
        "timestamp": 1602672625
    },
    {
        "content": "<p>(I know nothing about that backend, but if it is what I think it is, I'm excited for that work to finally appear <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  :)</p>",
        "id": 213273026,
        "sender_full_name": "lqd",
        "timestamp": 1602673673
    }
]