[
    {
        "content": "<p>I'm looking at adding a <code>-Z allow-features=x,y,z</code> command-line flag to the compiler, and it looks like all the list options like this are space-separated</p>",
        "id": 160815813,
        "sender_full_name": "tmandry",
        "timestamp": 1552592854
    },
    {
        "content": "<p>unfortunately, I can't figure out a way to put a space inside a command line option in my test <code>compile-flags</code></p>",
        "id": 160815923,
        "sender_full_name": "tmandry",
        "timestamp": 1552592910
    },
    {
        "content": "<p>so my question is..<br>\n1. is space-separated the right format for an option like this?<br>\n2. how the heck do I test this?</p>",
        "id": 160815982,
        "sender_full_name": "tmandry",
        "timestamp": 1552592971
    },
    {
        "content": "<p>note that if I specify the option more than once, it overwrites the list rather than appending</p>",
        "id": 160816096,
        "sender_full_name": "tmandry",
        "timestamp": 1552593021
    },
    {
        "content": "<p>here's my PR: <a href=\"https://github.com/rust-lang/rust/issues/59169\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/59169\">#59169</a></p>",
        "id": 160816115,
        "sender_full_name": "tmandry",
        "timestamp": 1552593040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> I think <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> added a flag that lets you specify arbitrary crate-level attributes</p>",
        "id": 160818933,
        "sender_full_name": "simulacrum",
        "timestamp": 1552595141
    },
    {
        "content": "<p>so it might be worth just using that instead? I forget the name though</p>",
        "id": 160818941,
        "sender_full_name": "simulacrum",
        "timestamp": 1552595153
    },
    {
        "content": "<p>crate-attrs perhaps?</p>",
        "id": 160818949,
        "sender_full_name": "simulacrum",
        "timestamp": 1552595161
    },
    {
        "content": "<p>I think <code>-Zcrate-attr</code></p>",
        "id": 160819018,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1552595211
    },
    {
        "content": "<p>Oh, I misinterpreted what the flag does</p>",
        "id": 160819076,
        "sender_full_name": "simulacrum",
        "timestamp": 1552595259
    },
    {
        "content": "<p>I would maybe think about reworking the flag to be a crate attribute since that's easier to test etc and then just rely on <code>-Z crate-attrs</code> to actually specify it from build systems and the like</p>",
        "id": 160819144,
        "sender_full_name": "simulacrum",
        "timestamp": 1552595288
    },
    {
        "content": "<p>hmm, adding it as a crate attribute seems more potentially controversial</p>",
        "id": 160821686,
        "sender_full_name": "tmandry",
        "timestamp": 1552597092
    },
    {
        "content": "<p>would that require an RFC?</p>",
        "id": 160821702,
        "sender_full_name": "tmandry",
        "timestamp": 1552597106
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ^</p>",
        "id": 160822889,
        "sender_full_name": "tmandry",
        "timestamp": 1552597923
    },
    {
        "content": "<p>I think as long as it's unstable I wouldn't expect it to be</p>",
        "id": 160822924,
        "sender_full_name": "simulacrum",
        "timestamp": 1552597950
    },
    {
        "content": "<p>So one other thing that I might suggest is to perhaps use something like <code>syn</code> to parse your crates and implement this as a tidy-style rule?</p>",
        "id": 160823009,
        "sender_full_name": "simulacrum",
        "timestamp": 1552598012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> But in terms of <code>-Z</code> argument I'd personally feel better about comma-sep (features can't have commas in them so should be fairly easy to implement)</p>",
        "id": 160823301,
        "sender_full_name": "simulacrum",
        "timestamp": 1552598192
    },
    {
        "content": "<p>comma-separated should be easy to test and is what I would have expected personally</p>",
        "id": 160823662,
        "sender_full_name": "tmandry",
        "timestamp": 1552598506
    },
    {
        "content": "<p>I just didn't go that route because I couldn't find any other comma-separated options :)</p>",
        "id": 160823709,
        "sender_full_name": "tmandry",
        "timestamp": 1552598525
    },
    {
        "content": "<p>Heh</p>",
        "id": 160823765,
        "sender_full_name": "simulacrum",
        "timestamp": 1552598585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> I think that might be partially because we just don't have many options</p>",
        "id": 160823794,
        "sender_full_name": "simulacrum",
        "timestamp": 1552598614
    },
    {
        "content": "<p>OTOH, you could also do \"only one feature per option\" and then just all the options are joined together (additive)</p>",
        "id": 160823857,
        "sender_full_name": "simulacrum",
        "timestamp": 1552598646
    },
    {
        "content": "<p>Features are never stable so I would expect the <code>-Z</code> flag to also never be stable</p>",
        "id": 160824798,
        "sender_full_name": "centril",
        "timestamp": 1552599259
    },
    {
        "content": "<p>(features == the gating mechanism itself and the names we assign in <code>#![feature(&lt;name&gt;)]</code>)</p>",
        "id": 160824812,
        "sender_full_name": "centril",
        "timestamp": 1552599268
    },
    {
        "content": "<p>okay, I think I'll make it comma-separated then</p>",
        "id": 160826151,
        "sender_full_name": "tmandry",
        "timestamp": 1552600223
    },
    {
        "content": "<p>related issue: how do I run the <code>error-index.md</code> doctests</p>",
        "id": 160826195,
        "sender_full_name": "tmandry",
        "timestamp": 1552600256
    },
    {
        "content": "<p>I can never remember</p>",
        "id": 160826207,
        "sender_full_name": "tmandry",
        "timestamp": 1552600264
    }
]