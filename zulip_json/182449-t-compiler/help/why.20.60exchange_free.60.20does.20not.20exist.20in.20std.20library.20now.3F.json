[
    {
        "content": "<p>I am doing some experimental changes on the compiler. I have found out how to use <code>exchange_malloc</code> to allocate memory. I am looking for how to deallocate those memory. I found an old stack overflow answer <a href=\"https://stackoverflow.com/a/30356213/2378484\">https://stackoverflow.com/a/30356213/2378484</a> that introduces <code>exchange_free</code>. However, it does not exist in the current std library. Rather, I found <code>box_free</code>. Do they work similarly? If I want to generate some code to free the memory allocated by <code>exchange_malloc</code>, which should I use? <br>\nThrough some quick search, I realized I can try to monomorphize <code>box_free</code>.</p>",
        "id": 226283975,
        "sender_full_name": "sfzhu",
        "timestamp": 1613274712
    },
    {
        "content": "<p><code>Box</code> uses <code>box_free</code> to free the allocated memory. You shouldn't use <code>exchange_malloc</code> or <code>box_free</code>. Instead use <code>std::alloc::alloc()</code> and <code>std::alloc::dealloc()</code>. <code>exchange_malloc</code> and <code>box_free</code> only exist because of the deep integration of <code>Box</code> in the compiler that exists for legacy reasons.</p>",
        "id": 226293393,
        "sender_full_name": "bjorn3",
        "timestamp": 1613291969
    }
]