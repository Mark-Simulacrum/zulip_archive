[
    {
        "content": "<p>Hi, </p>\n<p>Trying to understand the DefID when the representation of the Program is an AST and not HIR.</p>\n<p>My confusion is that I thought the AST only deals  with NodeID? </p>\n<p>Also my understanding is that if DefID uniquely identifies an element in a crate, then it cannot be present in the AST unless parsing cannot be done in parallel?</p>",
        "id": 219380414,
        "sender_full_name": "kev",
        "timestamp": 1607539810
    },
    {
        "content": "<p>Where is <code>DefId</code> used for the AST?</p>",
        "id": 219380608,
        "sender_full_name": "bjorn3",
        "timestamp": 1607539913
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> I saw it in rustc_resolve , which I thought was for the AST?</p>",
        "id": 219381330,
        "sender_full_name": "kev",
        "timestamp": 1607540211
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_resolve/late.rs.html#1-2436\">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_resolve/late.rs.html#1-2436</a></p>",
        "id": 219381370,
        "sender_full_name": "kev",
        "timestamp": 1607540227
    },
    {
        "content": "<p>I think the <code>DefId</code>'s here are assigned once the respective items won't be removed or fundamentally changed anymore.</p>",
        "id": 219381624,
        "sender_full_name": "bjorn3",
        "timestamp": 1607540327
    },
    {
        "content": "<p>Oh I see, was away trying to verify this, but it makes sense if that is the case. I think this means that Macros are eagerly assigned DefIds when we have the AST, or something like that?</p>",
        "id": 219382352,
        "sender_full_name": "kev",
        "timestamp": 1607540616
    }
]