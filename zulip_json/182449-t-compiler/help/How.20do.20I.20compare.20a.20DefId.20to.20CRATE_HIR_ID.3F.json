[
    {
        "content": "<p>Currently I have the following code: <code>item.def_id.as_local().map(|def_id| self.cx.tcx.hir().as_local_hir_id(def_id)) = Some(hir::CRATE_HIR_ID)</code>. Is there an easier way to do this?</p>",
        "id": 203605420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594487992
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 203605476,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594488078
    },
    {
        "content": "<p>(sorry, I keep replying in the wrong thread)</p>",
        "id": 203605480,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594488098
    },
    {
        "content": "<p>hmm maybe <code>def_id.is_top_level_module()</code>?</p>",
        "id": 203605482,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594488103
    },
    {
        "content": "<p>Yes, that should work.</p>",
        "id": 203605557,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1594488227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> you generally shouldn't need to convert a <code>DefId</code> into a <code>HirId</code> unless you plan to grab some HIR nodes. kind of weird that <code>CRATE_HIR_ID</code> even exists tbh</p>",
        "id": 203620128,
        "sender_full_name": "eddyb",
        "timestamp": 1594513973
    },
    {
        "content": "<p>I guess this makes sense but it could be a constant <em>shrug</em> <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_span/def_id.rs#L167\">https://github.com/rust-lang/rust/blob/master/src/librustc_span/def_id.rs#L167</a></p>",
        "id": 203620187,
        "sender_full_name": "eddyb",
        "timestamp": 1594514047
    },
    {
        "content": "<p>This is left over from when intra-doc links were first written and people assumed they would always be to within the local crate</p>",
        "id": 203620251,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594514188
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/73101/commits/b11656273c16c647c367ffa95203722cd3cf41b3#diff-2bcad7b16b56ef2ebb92f8e60ae33773R475\">https://github.com/rust-lang/rust/pull/73101/commits/b11656273c16c647c367ffa95203722cd3cf41b3#diff-2bcad7b16b56ef2ebb92f8e60ae33773R475</a></p>",
        "id": 203620268,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594514229
    },
    {
        "content": "<p>sure, what I mean is that <code>HirId</code> only makes sense if you actually go poking at the HIR</p>",
        "id": 203620272,
        "sender_full_name": "eddyb",
        "timestamp": 1594514233
    },
    {
        "content": "<p>most of the time, having a <code>DefId</code> is the \"better\" thing to have</p>",
        "id": 203620274,
        "sender_full_name": "eddyb",
        "timestamp": 1594514252
    },
    {
        "content": "<p>so a <code>HirId</code> is like a \"downgrade\"</p>",
        "id": 203620279,
        "sender_full_name": "eddyb",
        "timestamp": 1594514279
    },
    {
        "content": "<p>(it's also not free to convert to it, for now)</p>",
        "id": 203620323,
        "sender_full_name": "eddyb",
        "timestamp": 1594514300
    },
    {
        "content": "<p>hmm now I'm wondering if this code will break if you implement a foreign trait for a type in a different module <a href=\"https://github.com/rust-lang/rust/blob/b11656273c16c647c367ffa95203722cd3cf41b3/src/librustdoc/passes/collect_intra_doc_links.rs#L298\">https://github.com/rust-lang/rust/blob/b11656273c16c647c367ffa95203722cd3cf41b3/src/librustdoc/passes/collect_intra_doc_links.rs#L298</a></p>",
        "id": 203620327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594514325
    },
    {
        "content": "<p>it's <code>and_then</code></p>",
        "id": 203620676,
        "sender_full_name": "eddyb",
        "timestamp": 1594514956
    },
    {
        "content": "<p>so it would just end up here <a href=\"https://github.com/rust-lang/rust/blob/b11656273c16c647c367ffa95203722cd3cf41b3/src/librustdoc/passes/collect_intra_doc_links.rs#L328-L329\">https://github.com/rust-lang/rust/blob/b11656273c16c647c367ffa95203722cd3cf41b3/src/librustdoc/passes/collect_intra_doc_links.rs#L328-L329</a></p>",
        "id": 203620680,
        "sender_full_name": "eddyb",
        "timestamp": 1594514975
    },
    {
        "content": "<p>assuming you mean that the <code>as_local_hir_id</code> would return <code>None</code></p>",
        "id": 203620681,
        "sender_full_name": "eddyb",
        "timestamp": 1594514996
    },
    {
        "content": "<p>yeah</p>",
        "id": 203620723,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594515020
    },
    {
        "content": "<p>ok neat, and the only other place <code>hir()</code> is called is for <code>Self</code> which shouldn't lead to issues</p>",
        "id": 203620726,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594515040
    },
    {
        "content": "<p>and checking if the item is private, which only happens if it's a local item anyway</p>",
        "id": 203620732,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1594515070
    }
]