[
    {
        "content": "<p>Is there anyway to replace a THIR / MIR body? In particular I'd like to replace the body of certain DefIds <em>before</em> borrow checking occurs so around the moment that <code>mir_built</code> occurs.</p>",
        "id": 250238533,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582214
    },
    {
        "content": "<p>From what I can tell, i can only edit the <code>MIR</code> by stealing it but that would screw up further compilation...</p>",
        "id": 250238577,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582245
    },
    {
        "content": "<p>I suppose if a solution exists for <code>HIR</code> that could also work</p>",
        "id": 250238604,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582300
    },
    {
        "content": "<p>rustdoc tried this for HIR and it didn't go well <a href=\"https://github.com/rust-lang/rust/pull/73566\">https://github.com/rust-lang/rust/pull/73566</a></p>",
        "id": 250238626,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629582336
    },
    {
        "content": "<p>ah hmm ok</p>",
        "id": 250238689,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582435
    },
    {
        "content": "<p>it might be <em>possible</em> but I would expect it to be hard</p>",
        "id": 250238692,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629582449
    },
    {
        "content": "<p>In my situation I have a<code>DefId</code> which references other <code>DefIds</code> which I <strong>know</strong> to be invalid, I'd like to either edit the bodies of those <code>DefIds</code> to replace them with <code>abort</code> or edit the original <code>DefId</code> to no longer refer to the 'child' defids</p>",
        "id": 250238898,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582761
    },
    {
        "content": "<p>you're saying that its too hard at HIR level but is there any other stage I can intervene at?</p>",
        "id": 250238903,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582783
    },
    {
        "content": "<p>I don't know, sorry. FWIW it sounds like your thing is a lot more narrow in scope than what rustdoc is doing, so it might be easier</p>",
        "id": 250238911,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629582811
    },
    {
        "content": "<p>im ideally looking for a point <em>between</em> typechecking and borrow checking</p>",
        "id": 250238912,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582814
    },
    {
        "content": "<p>rustdoc was replacing entire function bodies</p>",
        "id": 250238914,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629582819
    },
    {
        "content": "<p>yea i mean that is how i was planning on implementing it tbh</p>",
        "id": 250238921,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582833
    },
    {
        "content": "<p>I just need to replace certain function bodies..</p>",
        "id": 250238965,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629582854
    },
    {
        "content": "<p>You could provide your own implementation of mir_built to the query system, to wrap and modify the output of the original mir_built. Client code would implicitly invoke your implementation and benefit from the modifications.</p>",
        "id": 250239819,
        "sender_full_name": "cjgillot",
        "timestamp": 1629584065
    },
    {
        "content": "<p>oh wait that's possible?</p>",
        "id": 250240011,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629584351
    },
    {
        "content": "<p>how do I override the query?</p>",
        "id": 250240016,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629584362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"312719\">Xavier Denis</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Replace.20THIR.20.2F.20MIR.20body/near/250240016\">said</a>:</p>\n<blockquote>\n<p>how do I override the query?</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/blob/b1928aa3b4a8a2df462e408b67ad29737a3f8f31/src/librustdoc/core.rs#L282\">https://github.com/rust-lang/rust/blob/b1928aa3b4a8a2df462e408b67ad29737a3f8f31/src/librustdoc/core.rs#L282</a></p>",
        "id": 250240081,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629584410
    },
    {
        "content": "<p>(obviously the bit that comes before <code>DEFAULT_QUERY_PROVIDERS</code> will be different)</p>",
        "id": 250240090,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629584426
    },
    {
        "content": "<p>ok this is sick... time to write more hacks</p>",
        "id": 250240124,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629584486
    },
    {
        "content": "<p>im making poor rustc suffer so much :(</p>",
        "id": 250240174,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629584538
    },
    {
        "content": "<p>hmmm replacing the body in <code>mir_built</code> <em>almost</em> works, but I'm still getting move errors because old, invalid information is leaking through the <code>InfCtx</code></p>",
        "id": 250242913,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629588368
    },
    {
        "content": "<p>i just need to figure out how to clear out the information about captured variables and i'm home free!!!</p>",
        "id": 250243014,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629588583
    },
    {
        "content": "<p>I've done it! I managed to trick rustc and erase the body of specific functions before borrow checking!</p>",
        "id": 250284805,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1629653740
    }
]