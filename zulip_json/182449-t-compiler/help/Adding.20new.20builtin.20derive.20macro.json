[
    {
        "content": "<p>Hi! I'm trying to experiment with adding a new builtin derive macro in rustc, and I think I'm running into some bootstrap issues... I think I've made all of the code changes needed (it mirrors all of the ones <code>Clone</code> and <code>Hash</code> have), but when I <code>./x.py build</code> the stage0 compiler complains that <code>error: cannot find a built-in macro with name DwhMacro</code> - could anyone give me any hints for how to sidestep the fact that the bootstrap compiler doesn't have a definition for my macro?</p>\n<p>Code changes I've made:</p>\n<ul>\n<li>Added to the list of symbols in src/librustc_span/symbol.rs</li>\n<li>Added a <code>pub macro DwhMacro($item:item) { /* compiler built-in */}</code> block, and added it to the preludes in library/core/src/prelude/v1.rs and library/std/src/prelude/v1.rs</li>\n<li>Added an impl, and added it to the map of macros in src/librustc_builtin_macros/lib.rs</li>\n</ul>",
        "id": 208754216,
        "sender_full_name": "Daniel Wagner-Hall",
        "timestamp": 1598997480
    },
    {
        "content": "<p>The macro and all uses need to be behind <code>#[cfg(bootstrap)]</code></p>",
        "id": 208754311,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1598997543
    },
    {
        "content": "<p>Edit: Oh, it needs to be behind <code>#[cfg(not(bootstrap))]</code> - that makes sense, thanks!</p>",
        "id": 208755413,
        "sender_full_name": "Daniel Wagner-Hall",
        "timestamp": 1598998271
    },
    {
        "content": "<p>Err, yeah, sorry</p>",
        "id": 208756003,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1598998594
    }
]