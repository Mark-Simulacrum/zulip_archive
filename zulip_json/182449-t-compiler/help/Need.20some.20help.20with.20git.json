[
    {
        "content": "<p>I'm trying to get changes from a remote repo, rebase and then create a PR for the pulled in changes from the remote repo. I'm doing the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>git checkout origin/static-initializers-mir-val\ngit switch -c static-refs-mir\n</code></pre></div>\n<p>this yields:</p>\n<div class=\"codehilite\"><pre><span></span><code>db019f21604 (HEAD -&gt; static-refs-mir, origin/static-refs-initializers-val) try to bless 32bit mir tests manually\nfff06e5edcb use AllocId and Ty in ExprKind::StaticRef and delay ConstValue construction\n54ff25e4467 bless mir-opt tests\n22d6204db8c use mir::Visitor when collecting alloc_ids in pretty printing\n8092b90cb2f bless tests\nc612ef8f48a treat mir::ConstantKind::Val correctly in check_static_ptr\n5e0fab6da5e use ConstantKind::Val in StaticRef\n6bf3008f075 Auto merge of #94024 - matthiaskrgr:rollup-0hwxm0w, r=matthiaskrgr\n</code></pre></div>\n<p>If I then try to rebase, those changes are overridden however:</p>\n<p><code>git rebase master</code> yields:</p>\n<div class=\"codehilite\"><pre><span></span><code>1b14fd3b106 (HEAD -&gt; static-refs-mir, upstream/master, origin/master, origin/HEAD, origin/master, master) Auto merge of #94612 - matthiaskrgr:rollup-2jm5wkr, r=matthiaskrgr\nb4baef56750 Rollup merge of #94600 - est31:master, r=notriddle\nf9b4976d60b Rollup merge of #94593 - estebank:issue-94510, r=davidtwco\n4014e159c90 Rollup merge of #94568 - bjorn3:rustbuild_remove_dead_code, r=Mark-Simulacrum\nee3a2c7a8c1 Rollup merge of #94549 - m-ou-se:thread-is-finished, r=yaahc\n</code></pre></div>\n<p>Alternatively if I add a new commit after the switch command, that new command remains after the rebase?!</p>\n<div class=\"codehilite\"><pre><span></span><code>3a793c220cc (HEAD -&gt; static-refs-mir) foo\ndb019f21604 (origin/static-initializers-mir-val) try to bless 32bit mir tests manually\nfff06e5edcb use AllocId and Ty in ExprKind::StaticRef and delay ConstValue construction\n54ff25e4467 bless mir-opt tests\n22d6204db8c use mir::Visitor when collecting alloc_ids in pretty printing\n8092b90cb2f bless tests\nc612ef8f48a treat mir::ConstantKind::Val correctly in check_static_ptr\n5e0fab6da5e use ConstantKind::Val in StaticRef\n6bf3008f075 Auto merge of #94024 - matthiaskrgr:rollup-0hwxm0w, r=matthiaskrgr\ncc836ee2921 Rollup merge of #94014 - flip1995:clippy_transmute_lint_regroup, r=dtolnay\na87be980d82 Rollup merge of #94001 - durin42:llvm-15-uwtable, r=nikic\nc6b27db8767 Rollup merge of #93999 - barzamin:suggest-raw-strings, r=jackh726\n</code></pre></div>\n<p><code>git rebase master</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>01339e8f91b (HEAD -&gt; static-refs-mir) foo\n1b14fd3b106 (upstream/master, origin/master, origin/HEAD, origin/master, master) Auto merge of #94612 - matthiaskrgr:rollup-2jm5wkr, r=matthiaskrgr\nb4baef56750 Rollup merge of #94600 - est31:master, r=notriddle\nf9b4976d60b Rollup merge of #94593 - estebank:issue-94510, r=davidtwco\n4014e159c90 Rollup merge of #94568 - bjorn3:rustbuild_remove_dead_code, r=Mark-Simulacrum\nee3a2c7a8c1 Rollup merge of #94549 - m-ou-se:thread-is-finished, r=yaahc\n5115bdc2e28 Rollup merge of #94524 - bjorn3:remove_num_cpus, r=Mark-Simulacrum\n</code></pre></div>\n<p>How can I keep the commits from the remote repo after rebasing?</p>",
        "id": 274371789,
        "sender_full_name": "BN",
        "timestamp": 1646648318
    },
    {
        "content": "<p>Try <code>git fetch upstream</code> and then <code>git rebase upstream/master</code>.</p>",
        "id": 274378137,
        "sender_full_name": "bjorn3",
        "timestamp": 1646652342
    },
    {
        "content": "<p>Never mind. Looks like master and upstream/master are equal.</p>",
        "id": 274378283,
        "sender_full_name": "bjorn3",
        "timestamp": 1646652412
    },
    {
        "content": "<p>Those commits were originally merged into upstream/master, but the PR was later reverted. Could that have something to do with this?</p>",
        "id": 274379064,
        "sender_full_name": "BN",
        "timestamp": 1646652862
    },
    {
        "content": "<p>Yeah, that makes sense. Git rebase removes commits that have aready been applied without regard for revertions.</p>",
        "id": 274379147,
        "sender_full_name": "bjorn3",
        "timestamp": 1646652934
    },
    {
        "content": "<p>You can try reverting the revert and maybe amend the commit messages afterwards.</p>",
        "id": 274379167,
        "sender_full_name": "bjorn3",
        "timestamp": 1646652960
    },
    {
        "content": "<p>ok thanks</p>",
        "id": 274379337,
        "sender_full_name": "BN",
        "timestamp": 1646653069
    }
]