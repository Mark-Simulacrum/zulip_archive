[
    {
        "content": "<p>While working on <a href=\"https://github.com/rust-lang/rust/issues/65983\">https://github.com/rust-lang/rust/issues/65983</a>, I changed rustdoc around to pass DefIds to <code>resolve_str_path_error</code> instead of <code>LocalDefId</code>s. Now rustdoc is panicking on any file, including empty files. Is this a bug in my code or in <code>rustc_middle</code>? The panic comes from <code>tcx.parent(def_id)</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">        </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">rustc_middle</span>::<span class=\"n\">ty</span>::<span class=\"n\">DefIdTree</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">parent_node</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">parent</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">def_id</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>Backtrace (the relevant bits):</p>\n<div class=\"codehilite\"><pre><span></span><code>  13: core::panicking::panic_bounds_check\n             at src/libcore/panicking.rs:73\n  14: &lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index\n             at /home/joshua/src/rust/src/libcore/slice/mod.rs:2872\n  15: core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index\n             at /home/joshua/src/rust/src/libcore/slice/mod.rs:2732\n  16: &lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index\n             at /home/joshua/src/rust/src/liballoc/vec.rs:1947\n  17: &lt;rustc_index::vec::IndexVec&lt;I,T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index\n             at /home/joshua/src/rust/src/librustc_index/vec.rs:716\n  18: rustc_hir::definitions::DefPathTable::def_key\n             at /home/joshua/src/rust/src/librustc_hir/definitions.rs:53\n  19: rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::def_key\n             at src/librustc_metadata/rmeta/decoder.rs:1411\n  20: rustc_metadata::rmeta::decoder::cstore_impl::&lt;impl rustc_middle::middle::cstore::CrateStore for rustc_metadata::creader::CStore&gt;::def_key\n             at src/librustc_metadata/rmeta/decoder/cstore_impl.rs:484\n  21: rustc_middle::ty::context::TyCtxt::def_key\n             at src/librustc_middle/ty/context.rs:1188\n  22: &lt;rustc_middle::ty::context::TyCtxt as rustc_middle::ty::DefIdTree&gt;::parent\n             at src/librustc_middle/ty/mod.rs:358\n  23: &lt;rustdoc::passes::collect_intra_doc_links::LinkCollector as rustdoc::fold::DocFolder&gt;::fold_item\n             at src/librustdoc/passes/collect_intra_doc_links.rs:482\n</code></pre></div>",
        "id": 200025888,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591539199
    },
    {
        "content": "<p>oh and the message was <code>thread 'rustc' panicked at 'index out of bounds: the len is 38899 but the index is 38905', /home/joshua/src/rust/src/librustc_hir/definitions.rs:53:9</code></p>",
        "id": 200025951,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591539264
    },
    {
        "content": "<p>it might be because rustdoc allocates non-real defids?</p>",
        "id": 200026038,
        "sender_full_name": "simulacrum",
        "timestamp": 1591539437
    },
    {
        "content": "<p>What do you mean?</p>",
        "id": 200026108,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591539544
    },
    {
        "content": "<p>IIRC last I looked, rustdoc sometimes has a DefId which is not \"real\" in the sense that it's not present in the tcx maps or so</p>",
        "id": 200026121,
        "sender_full_name": "simulacrum",
        "timestamp": 1591539601
    },
    {
        "content": "<p>see e.g. <a href=\"https://github.com/Mark-Simulacrum/rust/blob/6f015768c28a6e4cf163967cb62b70c645791858/src/librustdoc/clean/types.rs#L88-L90\">https://github.com/Mark-Simulacrum/rust/blob/6f015768c28a6e4cf163967cb62b70c645791858/src/librustdoc/clean/types.rs#L88-L90</a> which has special handling</p>",
        "id": 200026173,
        "sender_full_name": "simulacrum",
        "timestamp": 1591539650
    },
    {
        "content": "<p>So rustdoc does a weird pass where it removes some layer of the AST</p>",
        "id": 200026490,
        "sender_full_name": "marmeladema",
        "timestamp": 1591540280
    },
    {
        "content": "<p>which invalidates the DefId tree</p>",
        "id": 200026498,
        "sender_full_name": "marmeladema",
        "timestamp": 1591540299
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/pull/72088\">https://github.com/rust-lang/rust/pull/72088</a> and <a href=\"https://github.com/rust-lang/rust/issues/71820\">https://github.com/rust-lang/rust/issues/71820</a> for a similar issue</p>",
        "id": 200026546,
        "sender_full_name": "marmeladema",
        "timestamp": 1591540359
    },
    {
        "content": "<p>And I don't really know how to help you ... I am also stuck. I think the ultimate goal is to remove <code>ReplaceBodyWithLoop</code> entirely but I don't really understand what is it needed for right now and by what it should be replaced.</p>",
        "id": 200026780,
        "sender_full_name": "marmeladema",
        "timestamp": 1591540700
    },
    {
        "content": "<p>Oh that's so unfortunate ... <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you know if that <code>MAX_DEF_ID</code> snippet is a function somewhere? If so I could just call <code>def_id.is_fake()</code> and then ignore fake ids</p>",
        "id": 200027685,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591541986
    },
    {
        "content": "<p>hm I guess probably no given that it's not being used here?</p>",
        "id": 200027689,
        "sender_full_name": "simulacrum",
        "timestamp": 1591541999
    },
    {
        "content": "<p>ok, I think I'll make a PR for that</p>",
        "id": 200027732,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591542012
    },
    {
        "content": "<p>but to be honest I'm not familiar with that piece of rustdocs code</p>",
        "id": 200027736,
        "sender_full_name": "simulacrum",
        "timestamp": 1591542015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> looking at the comments in <a href=\"https://github.com/Mark-Simulacrum/rust/blob/6f015768c28a6e4cf163967cb62b70c645791858/src/librustdoc/core.rs#L103\">https://github.com/Mark-Simulacrum/rust/blob/6f015768c28a6e4cf163967cb62b70c645791858/src/librustdoc/core.rs#L103</a>, it looks like there are two issues: 1. ids which were originally valid, but were invalidated by <code>ReplaceBodyWithLoop</code>, and 2. ids which were always fake and were never valid. The first looks really hard to deal with but also less common, so for now I'm only dealing with the second.</p>",
        "id": 200029851,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591545371
    },
    {
        "content": "<p>Lucky you :p</p>",
        "id": 200030288,
        "sender_full_name": "marmeladema",
        "timestamp": 1591546074
    },
    {
        "content": "<p>Oh don't worry, I'm sure the first case will show up before I'm through <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 200030420,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591546269
    },
    {
        "content": "<p>I'm working on <a href=\"https://github.com/rust-lang/rust/issues/65983\">https://github.com/rust-lang/rust/issues/65983</a> so I'm touching <em>basically</em> every part of the frontend</p>",
        "id": 200030428,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591546289
    },
    {
        "content": "<p>Oh your touching the <code>export_map</code> right now? Me too <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 200030631,
        "sender_full_name": "marmeladema",
        "timestamp": 1591546591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> fyi <a href=\"https://github.com/rust-lang/rust/pull/73090\">https://github.com/rust-lang/rust/pull/73090</a><br>\nDunno if that impacts what you're currently working on</p>",
        "id": 200031638,
        "sender_full_name": "marmeladema",
        "timestamp": 1591547903
    },
    {
        "content": "<p>Thanks for the link. I'm mostly working on the rustdoc side for now. I didn't realize <code>ExportMap</code> only had local items, that makes sense since they're all from the same crate though.</p>",
        "id": 200032192,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591548812
    },
    {
        "content": "<p>Yay if I don't call <code>.parent()</code> for fake IDs it works <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 200032547,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591549317
    },
    {
        "content": "<p>omg the links work too <a href=\"/user_uploads/4715/HyktyukNaqAox6eiWIKshfGU/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/HyktyukNaqAox6eiWIKshfGU/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/HyktyukNaqAox6eiWIKshfGU/image.png\"></a></div>",
        "id": 200032680,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591549447
    },
    {
        "content": "<p>It links to the external URL though, not to the dependency <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 200032694,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591549462
    },
    {
        "content": "<p>let me comment on the issue, we've gotten a little far from the panic</p>",
        "id": 200032699,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591549474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> I ran into the first case <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> </p>\n<div class=\"codehilite\"><pre><span></span><code>(-bash@build-server) ~/.../src/test ▶️ rustdoc +stage1 rustdoc/macro-in-closure.rs\nthread &#39;rustc&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;, /home/joshua/src/rust/src/librustc_hir/definitions.rs:358:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n(-bash@build-server) ~/.../src/test ▶️ cat !$\ncat rustdoc/macro-in-closure.rs\n// Regression issue for rustdoc ICE encountered in PR #65252.\n\n#![feature(decl_macro)]\n\nfn main() {\n    || {\n        macro m() {}\n    };\n}\n</code></pre></div>",
        "id": 200042574,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591564363
    },
    {
        "content": "<p>Yes thats exactly the same test that is failing in the issue I mentioned. But as a matter of fact, <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> has started working on this :) we might have a solution sooner than expected</p>",
        "id": 200042761,
        "sender_full_name": "marmeladema",
        "timestamp": 1591564606
    }
]