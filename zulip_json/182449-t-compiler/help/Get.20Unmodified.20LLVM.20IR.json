[
    {
        "content": "<p>Say I have some rust code and the asm it compiles to, which has missed optimizations on <code>-C opt-level=3</code>, and I would like to see if this is rustc's fault or LLVM's fault.</p>\n<p>If I understand correctly, then <code>--emit llvm-ir -C opt-level=3</code>will emit the residual LLVM-IR after both rustc and llvm optimization passes run; if the optimization is illegal for this LLVM-IR,  then it is not necessarily rustc's fault, because the LLVM optimizations may have defined some behavior that was undefined before the optimizations.</p>\n<p>On the other hand, if the optimization is illegal with <code>--emit llvm-ir -C opt-level=0</code> this is also not conclusive, since possibly rustc optimizations being on would have emitted different LLVM-IR for which the optimization would then have been legal. What is the correct way to check this? Is there some kind of \"rustc optimizations yes, LLVM optimizations no\" flag? I have tried checking <code>-C llvm-args</code> but did not find anything (probably I'm missing things)</p>",
        "id": 264580332,
        "sender_full_name": "Jake",
        "timestamp": 1639251489
    },
    {
        "content": "<p>Try <code>-Cno-prepopulate-passes</code>. This will disable all LLVM optimizations and transformations.</p>",
        "id": 264580488,
        "sender_full_name": "bjorn3",
        "timestamp": 1639251670
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 264580553,
        "sender_full_name": "Jake",
        "timestamp": 1639251740
    }
]