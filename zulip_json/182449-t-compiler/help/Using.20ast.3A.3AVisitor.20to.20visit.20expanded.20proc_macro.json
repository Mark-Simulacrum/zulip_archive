[
    {
        "content": "<p>Currently in rustdoc, we only load dependencies that are needed for the intra doc links. However we had a regression (<a href=\"https://github.com/rust-lang/rust/issues/84738\">https://github.com/rust-lang/rust/issues/84738</a>) because of that. The problem is that if an intra doc link is generated by a proc macro, we currently don't see it. Is there a way with this visitor to \"walk through\" the expanded proc macro?</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></p>",
        "id": 240390641,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1622062746
    },
    {
        "content": "<p>Extra info: we use <code>let parts = abort_on_err(queries.expansion(), sess).peek();</code>, so I guess the expansion is done already. If I then try to do <code>resolver.borrow_mut().access(|resolver| resolver.resolve_crate(&amp;krate));</code>, then I get a panic:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;path resolved multiple times (PartialRes { base_res: PrimTy(Int(I128)), unresolved_segments: 0 } before, PartialRes { base_res: PrimTy(Int(I128)), unresolved_segments: 0 } now)&#39;, compiler/rustc_resolve/src/lib.rs:2826:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n</code></pre></div>\n<p>So I guess I misunderstood the problem maybe...</p>",
        "id": 240450650,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1622114351
    }
]