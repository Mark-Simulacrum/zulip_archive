[
    {
        "content": "<p>EDIT: This issue was due to an incremental cache error, it was replaced by another one (that I'm trying to understand) after a <code>cargo clean</code></p>\n<p><del>To keep it short, I took librustdoc as a base, forked it and then heavily modified it. When calling <code>mir_built()</code> I get a panic if I analyze more than one file. I'm calling my custom analysis from <code>core.rs:run_global_ctxt()</code>. I can reproduce the bug by replacing my whole analysis by this function:</del></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">my_custom_analysis</span><span class=\"p\">(</span><span class=\"n\">tcx</span>: <span class=\"nc\">ty</span>::<span class=\"n\">TyCtxt</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">HashMap</span><span class=\"o\">&lt;</span><span class=\"n\">DefId</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FunctionDependencies</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// let mut monomorphized_functions: HashSet&lt;(DefId, String)&gt; = default();</span>\n<span class=\"w\">    </span><span class=\"n\">tcx</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">body_owners</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">filter_map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">caller</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">mir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">mir_built</span><span class=\"p\">(</span><span class=\"n\">ty</span>::<span class=\"n\">WithOptConstParam</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">did</span>: <span class=\"nc\">caller</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">const_param_did</span>: <span class=\"nc\">tcx</span><span class=\"p\">.</span><span class=\"n\">opt_const_param_of</span><span class=\"p\">(</span><span class=\"n\">caller</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"c1\">// mir real code does stuff with mir ;)</span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">collect</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><del>When I run my rustdoc fork on a single file it works perfectly:</del></p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo run -- some_file.rs\n</code></pre></div>\n<p><del>However if I try to run it on a whole project, I get a panic:</del></p>\n<div class=\"codehilite\"><pre><span></span><code>$ RUSTDOC=target/release/my_binary cargo doc\nthread &#39;rustc&#39; panicked at &#39;attempted to read from stolen value&#39;, /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/steal.rs:35:21\n</code></pre></div>\n<p><del>I think I don't understand how I'm supposed to use MIR. I thought, that I long as I only called <code>mir.borrow()</code> to be able to use <code>mir::Body</code> I was fine (and not <code>mir.steal()</code>). What am I missing?</del></p>",
        "id": 218157739,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606558467
    },
    {
        "content": "<p>NOTE: I previously posted this exact same topic, and removed it because I thought that it was due to a bug in the incremental build cache. It wasn't <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> </p>\n<p>To keep it short, I took librustdoc as a base, forked it and then heavily modified it. When calling <code>mir_built()</code> I get a panic if I analyze more than one file. I'm calling my custom analysis from <code>core.rs:run_global_ctxt()</code>. I can reproduce the bug by replacing my whole analysis by this function:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">my_custom_analysis</span><span class=\"p\">(</span><span class=\"n\">tcx</span>: <span class=\"nc\">ty</span>::<span class=\"n\">TyCtxt</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">HashMap</span><span class=\"o\">&lt;</span><span class=\"n\">DefId</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FunctionDependencies</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// let mut monomorphized_functions: HashSet&lt;(DefId, String)&gt; = default();</span>\n<span class=\"w\">    </span><span class=\"n\">tcx</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">body_owners</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">filter_map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">caller</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">mir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">mir_built</span><span class=\"p\">(</span><span class=\"n\">ty</span>::<span class=\"n\">WithOptConstParam</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">did</span>: <span class=\"nc\">caller</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">const_param_did</span>: <span class=\"nc\">tcx</span><span class=\"p\">.</span><span class=\"n\">opt_const_param_of</span><span class=\"p\">(</span><span class=\"n\">caller</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"c1\">// mir real code does stuff with mir ;)</span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">collect</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>When I run my rustdoc fork on a single file it works perfectly:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo run -- some_file.rs\n</code></pre></div>\n<p>~~However if I try to run it on a whole project, I get a panic:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ RUSTDOC=target/release/my_binary cargo doc\nthread &#39;rustc&#39; panicked at &#39;attempted to read from stolen value&#39;, /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/steal.rs:35:21\n</code></pre></div>\n<p>I think I don't understand how I'm supposed to use MIR. I thought, that I long as I only called <code>mir.borrow()</code> to be able to use <code>mir::Body</code> I was fine (and not <code>mir.steal()</code>). What am I missing?</p>",
        "id": 218167962,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606575988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> somone else is calling <code>steal()</code> before you call <code>borrow()</code></p>",
        "id": 218168029,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576092
    },
    {
        "content": "<p>you need to find out who and why</p>",
        "id": 218168030,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576096
    },
    {
        "content": "<p><code>rg steal -w</code> returns no results</p>",
        "id": 218168043,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576135
    },
    {
        "content": "<p>I'd be suspicious of <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustdoc/core.rs#L465\">https://github.com/rust-lang/rust/blob/master/src/librustdoc/core.rs#L465</a>, maybe</p>",
        "id": 218168116,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576233
    },
    {
        "content": "<p>getting the backtrace would help too</p>",
        "id": 218168118,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576238
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>wall of text</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\"><pre><span></span><code> Running `/home/robin/dev/cargo-callgraph/target/debug/cargo-callgraph --crate-type lib --crate-name rustc_rayon_core /home/robin/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-rayon-core-0.3.0/src/lib.rs --cap-lints allow -o /home/robin/dev/cargo-callgraph/target/doc --error-format=json --json=diagnostic-rendered-ansi -L dependency=/home/robin/dev/cargo-callgraph/target/debug/deps --extern crossbeam_deque=/home/robin/dev/cargo-callgraph/target/debug/deps/libcrossbeam_deque-d946aa781c891c9b.rmeta --extern crossbeam_queue=/home/robin/dev/cargo-callgraph/target/debug/deps/libcrossbeam_queue-e97d5e9eabb9deae.rmeta --extern crossbeam_utils=/home/robin/dev/cargo-callgraph/target/debug/deps/libcrossbeam_utils-dc839f467baf84df.rmeta --extern lazy_static=/home/robin/dev/cargo-callgraph/target/debug/deps/liblazy_static-88e83b46113e8454.rmeta --extern num_cpus=/home/robin/dev/cargo-callgraph/target/debug/deps/libnum_cpus-8691f1093f8a1d16.rmeta --crate-version 0.3.0`\n</code></pre></div>\n\n<p>thread 'rustc' panicked at 'attempted to read from stolen value', /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/steal.rs:35:21<br>\nstack backtrace:<br>\n   0: std::panicking::begin_panic<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/panicking.rs:519:12<br>\n   1: rustc_data_structures::steal::Steal&lt;T&gt;::borrow::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/steal.rs:35:21<br>\n   2: core::cell::Ref&lt;T&gt;::map<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/cell.rs:1262:22<br>\n   3: rustc_data_structures::steal::Steal&lt;T&gt;::borrow<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/steal.rs:34:9<br>\n   4: cargo_callgraph::extract_dependencies::extract_dependencies::{{closure}}<br>\n             at /home/robin/dev/cargo-callgraph/extract_dependencies.rs:422:23<br>\n   5: core::iter::adapters::map_fold::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs:905:28<br>\n   6: core::iter::adapters::map_fold::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs:905:21<br>\n   7: core::iter::traits::iterator::Iterator::fold<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:2023:21<br>\n   8: &lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs:945:9<br>\n   9: &lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs:945:9<br>\n  10: core::iter::traits::iterator::Iterator::for_each<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:678:9<br>\n  11: &lt;hashbrown:<span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend<br>\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs:3041:9<br>\n  12: &lt;std::collections:<span aria-label=\"hash\" class=\"emoji emoji-0023-20e3\" role=\"img\" title=\"hash\">:hash:</span><span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:2692:9<br>\n  13: &lt;std::collections:<span aria-label=\"hash\" class=\"emoji emoji-0023-20e3\" role=\"img\" title=\"hash\">:hash:</span><span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs:2677:9<br>\n  14: core::iter::traits::iterator::Iterator::collect<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:1670:9<br>\n  15: cargo_callgraph::extract_dependencies::extract_dependencies<br>\n             at /home/robin/dev/cargo-callgraph/extract_dependencies.rs:415:5<br>\n  16: cargo_callgraph::core::run_global_ctxt::{{closure}}<br>\n             at /home/robin/dev/cargo-callgraph/core.rs:498:28<br>\n  17: rustc_data_structures::profiling::VerboseTimingGuard::run<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/profiling.rs:570:9<br>\n  18: rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_session/src/utils.rs:9:9<br>\n  19: cargo_callgraph::core::run_global_ctxt<br>\n             at /home/robin/dev/cargo-callgraph/core.rs:497:5<br>\n  20: cargo_callgraph::core::run_core::{{closure}}::{{closure}}::{{closure}}::{{closure}}<br>\n             at /home/robin/dev/cargo-callgraph/core.rs:474:21<br>\n  21: rustc_interface::passes::QueryContext::enter::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/passes.rs:725:42<br>\n  22: rustc_middle::ty::context::tls::enter_context::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_middle/src/ty/context.rs:1735:50<br>\n  23: rustc_middle::ty::context::tls::set_tlv<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_middle/src/ty/context.rs:1719:9<br>\n  24: rustc_middle::ty::context::tls::enter_context<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_middle/src/ty/context.rs:1735:9<br>\n  25: rustc_interface::passes::QueryContext::enter<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/passes.rs:725:9<br>\n  26: cargo_callgraph::core::run_core::{{closure}}::{{closure}}::{{closure}}<br>\n             at /home/robin/dev/cargo-callgraph/core.rs:473:17<br>\n  27: rustc_data_structures::profiling::VerboseTimingGuard::run<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/profiling.rs:570:9<br>\n  28: rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_session/src/utils.rs:9:9<br>\n  29: cargo_callgraph::core::run_core::{{closure}}::{{closure}}<br>\n             at /home/robin/dev/cargo-callgraph/core.rs:472:46<br>\n  30: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/queries.rs:415:19<br>\n  31: cargo_callgraph::core::run_core::{{closure}}<br>\n             at /home/robin/dev/cargo-callgraph/core.rs:431:9<br>\n  32: rustc_interface::interface::create_compiler_and_run::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/interface.rs:196:13<br>\n  33: rustc_span::with_source_map<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_span/src/lib.rs:764:5<br>\n  34: rustc_interface::interface::create_compiler_and_run<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/interface.rs:190:5<br>\n  35: cargo_callgraph::core::run_core<br>\n             at /home/robin/dev/cargo-callgraph/core.rs:430:5<br>\n  36: cargo_callgraph::main_options<br>\n             at /home/robin/dev/cargo-callgraph/lib.rs:583:53<br>\n  37: cargo_callgraph::main_args::{{closure}}<br>\n             at /home/robin/dev/cargo-callgraph/lib.rs:516:17<br>\n  38: rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals::{{closure}}::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/util.rs:152:13<br>\n  39: scoped_tls::ScopedKey&lt;T&gt;::set<br>\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/scoped-tls-1.0.0/src/lib.rs:137:9<br>\n  40: rustc_span::with_session_globals<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_span/src/lib.rs:93:5<br>\n  41: rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/util.rs:150:9<br>\n  42: rustc_interface::util::scoped_thread::{{closure}}<br>\n             at /home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_interface/src/util.rs:125:24<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.</p>\n</div></div>",
        "id": 218168134,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576313
    },
    {
        "content": "<p>sorry - I meant the backtrace of steal, I'd just throw a <code>panic!</code> into <code>fn steal</code></p>",
        "id": 218168174,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576348
    },
    {
        "content": "<p>I love the inline emojis in the middle of the codeblock!</p>",
        "id": 218168177,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576356
    },
    {
        "content": "<p>Btw I think it may be worth it to have a <code>debug!</code> in <code>steal()</code></p>",
        "id": 218168187,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606576402
    },
    {
        "content": "<p>Not for this particular issue, but in general</p>",
        "id": 218168192,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606576415
    },
    {
        "content": "<p>it might already, I haven't checked</p>",
        "id": 218168194,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576417
    },
    {
        "content": "<p>I have no idea on how to do it, since I've build my source out of tree</p>",
        "id": 218168199,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576429
    },
    {
        "content": "<p>AFAICT it doesn't, actually</p>",
        "id": 218168204,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606576435
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">steal</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">T</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">value_ref</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">try_write</span><span class=\"p\">().</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"stealing value which is locked\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">value_ref</span><span class=\"p\">.</span><span class=\"n\">take</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"attempt to read from stolen value\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 218168252,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606576470
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> your backtrace shows<code>borrow</code>, but it doesn't appear in your code</p>",
        "id": 218168286,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576560
    },
    {
        "content": "<p>It's not. (hence the absence of results with <code>rg</code>)</p>",
        "id": 218168404,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576728
    },
    {
        "content": "<p>this is going to be tricky then, because you're missing debug symbols to show the actual function that caused this</p>",
        "id": 218168423,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576768
    },
    {
        "content": "<p>I totally forgot, what is the word you use to say that the rustc crate is imported not from <code>Cargo.toml</code> but as an extern crate?</p>",
        "id": 218168426,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576773
    },
    {
        "content": "<p><a href=\"#narrow/stream/131828-t-compiler/topic/Debug.20symbols.20in.20separate.20files.3F\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Debug.20symbols.20in.20separate.20files.3F</a></p>",
        "id": 218168430,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576779
    },
    {
        "content": "<p>loaded from sysroot</p>",
        "id": 218168431,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606576782
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 218168435,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576793
    },
    {
        "content": "<p>In the backtrace, the 4th element is</p>\n<div class=\"codehilite\"><pre><span></span><code>/home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler/rustc_data_structures/src/steal.rs\n</code></pre></div>\n<p>But the folder</p>\n<div class=\"codehilite\"><pre><span></span><code>/home/robin/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/compiler\n</code></pre></div>\n<p>doesn't exists</p>",
        "id": 218168579,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576970
    },
    {
        "content": "<p>so I can't even modify it inline :(</p>",
        "id": 218168588,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606576997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> I would recommend building with x.py rather than trying to modify rustc out of tree</p>",
        "id": 218168727,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606577263
    },
    {
        "content": "<p>So  I copy all of my code in-place of librustdoc, re-name it back to rustdoc. Then what should I run to only build \"rustdoc\" <code>./x.py build rustdoc</code>?</p>",
        "id": 218168840,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606577409
    },
    {
        "content": "<p>x.py build src/tools/rustdoc library/std</p>",
        "id": 218168916,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606577550
    },
    {
        "content": "<p>Or actually I think just x.py build will work</p>",
        "id": 218168921,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606577577
    },
    {
        "content": "<p>Since the tools change never landed</p>",
        "id": 218168924,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606577589
    },
    {
        "content": "<p>I thought it was possible to not build llvm, but to download a pre-build binary. I forgot how to do it</p>",
        "id": 218169272,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606578238
    },
    {
        "content": "<p>Run x.py setup, it will make things nice</p>",
        "id": 218169330,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578332
    },
    {
        "content": "<p>(I guess people aren't reading the help text?)</p>",
        "id": 218169334,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578348
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[llvm]</span>\n<span class=\"n\">download-ci-llvm</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n</code></pre></div>\n<p>This is probably what you mean <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 218169367,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606578364
    },
    {
        "content": "<p>(From <a href=\"https://rustc-dev-guide.rust-lang.org/building/suggested.html#skipping-llvm-build\">https://rustc-dev-guide.rust-lang.org/building/suggested.html#skipping-llvm-build</a>)</p>",
        "id": 218169381,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606578391
    },
    {
        "content": "<p>Right, that will break on Mac or windows though</p>",
        "id": 218169390,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578425
    },
    {
        "content": "<p>The default is if-available if you use x.py setup</p>",
        "id": 218169401,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578450
    },
    {
        "content": "<p><em>I didn't even know <code>x.py setup</code> existed</em> <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 218169454,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606578486
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Issue.20with.20.60rustc_middle.3A.3Amir_built().60/near/218169334\">said</a>:</p>\n<blockquote>\n<p>(I guess people aren't reading the help text?)</p>\n</blockquote>\n<p>What help text? <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 218169463,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606578537
    },
    {
        "content": "<p>it's not proposed in <code>x.py setup</code> if you choose option b (\"compiler: Contribute to the compiler or rustdoc\")</p>",
        "id": 218169464,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606578542
    },
    {
        "content": "<p>and it's not in <code>x.py --help</code> either</p>",
        "id": 218169476,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606578583
    },
    {
        "content": "<p>nor <code>x.py build --help</code></p>",
        "id": 218169478,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606578591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> it should have generated <code>profile = \"compiler\"</code></p>",
        "id": 218169595,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578747
    },
    {
        "content": "<p>and since that didn't work I'm guessing you're on mac</p>",
        "id": 218169598,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578754
    },
    {
        "content": "<p>so you're out of luck, sorry</p>",
        "id": 218169600,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578758
    },
    {
        "content": "<p>nope, on archlinux, intel 64 bits</p>",
        "id": 218169612,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606578778
    },
    {
        "content": "<p>can you paste config.toml here?</p>",
        "id": 218169625,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606578810
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code># Includes one of the default files in src/bootstrap/defaults\nprofile = &quot;compiler&quot;\nchangelog-seen = 2\n</code></pre></div>",
        "id": 218169740,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606578996
    },
    {
        "content": "<p>but I re-run <code>x.py setup</code> since I did the first compilation 15 minutes ago</p>",
        "id": 218169747,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606579034
    },
    {
        "content": "<p>that should be working, then, weird</p>",
        "id": 218169751,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606579054
    },
    {
        "content": "<p>when you run<code>x.py build</code> it builds llvm?</p>",
        "id": 218169754,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606579059
    },
    {
        "content": "<p>I also added the llvm section as Léo proposed. I'm waiting to see if at one point llvm is built (I interrupted the first build)</p>",
        "id": 218169800,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606579097
    },
    {
        "content": "<p>So far it's building rust crates</p>",
        "id": 218169810,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606579120
    },
    {
        "content": "<p>oh if it's not being built now it won't be built</p>",
        "id": 218169813,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606579126
    },
    {
        "content": "<p>it's built before rustc</p>",
        "id": 218169815,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606579130
    },
    {
        "content": "<blockquote>\n<p>Build completed successfully in 0:23:25</p>\n</blockquote>\n<p>Yeah, so much speed!</p>",
        "id": 218170319,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606579939
    },
    {
        "content": "<p>I'm blaming my CPU, not the build system btw</p>",
        "id": 218170324,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606579959
    },
    {
        "content": "<p>nah, it takes my laptop 45 minutes to compile rustc</p>",
        "id": 218170403,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606580146
    },
    {
        "content": "<p>absolutely awful <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 218170405,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606580151
    },
    {
        "content": "<p>yeah, 45 mn is really high</p>",
        "id": 218171351,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606581837
    },
    {
        "content": "<p>So I was able to copy back all of my modification into my local copy of the <code>rust</code> repo, and build my custom \"<code>rustdoc</code>\". How do I use it with cargo?</p>",
        "id": 218223516,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606674339
    },
    {
        "content": "<p><a href=\"https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html?highlight=rustup,link#creating-a-rustup-toolchain\">https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html?highlight=rustup,link#creating-a-rustup-toolchain</a></p>",
        "id": 218223528,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606674360
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ <span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span> <span class=\"nv\">RUSTDOC</span><span class=\"o\">=</span>/home/robin/dev/rust/target/debug/rustdoc_tool_binary cargo doc\nwarning: output filename collision.\nThe lib target <span class=\"sb\">`</span>crossbeam-utils<span class=\"sb\">`</span> in package <span class=\"sb\">`</span>crossbeam-utils v0.7.2<span class=\"sb\">`</span> has the same output filename as the lib target <span class=\"sb\">`</span>crossbeam-utils<span class=\"sb\">`</span> in package <span class=\"sb\">`</span>crossbeam-utils v0.6.6<span class=\"sb\">`</span>.\nColliding filename is: /home/robin/dev/cargo-callgraph/target/doc/crossbeam_utils/index.html\nThe targets should have unique names.\nThis is a known bug where multiple crates with the same name use\nthe same path<span class=\"p\">;</span> see &lt;https://github.com/rust-lang/cargo/issues/6313&gt;.\n Documenting itoa v0.4.6\n Documenting regex-syntax v0.6.21\n Documenting dot v0.1.4\n Documenting crossbeam-utils v0.6.6\n/home/robin/dev/rust/target/debug/rustdoc_tool_binary: error <span class=\"k\">while</span> loading shared libraries: libtest-5016d499037f0dbe.so: cannot open shared object file: No such file or directory\n/home/robin/dev/rust/target/debug/rustdoc_tool_binary: error <span class=\"k\">while</span> loading shared libraries: libtest-5016d499037f0dbe.so: cannot open shared object file: No such file or directory\n/home/robin/dev/rust/target/debug/rustdoc_tool_binary: error <span class=\"k\">while</span> loading shared libraries: libtest-5016d499037f0dbe.so: cannot open shared object file: No such file or directory\nerror: could not document <span class=\"sb\">`</span>itoa<span class=\"sb\">`</span>\n\nCaused by:\n  process didn<span class=\"err\">'</span>t <span class=\"nb\">exit</span> successfully: <span class=\"sb\">`</span>/home/robin/dev/rust/target/debug/rustdoc_tool_binary --crate-type lib --crate-name itoa /home/robin/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs --cap-lints allow -o /home/robin/dev/cargo-callgraph/target/doc --error-format<span class=\"o\">=</span>json --json<span class=\"o\">=</span>diagnostic-rendered-ansi -L <span class=\"nv\">dependency</span><span class=\"o\">=</span>/home/robin/dev/cargo-callgraph/target/debug/deps --crate-version <span class=\"m\">0</span>.4.6<span class=\"sb\">`</span> <span class=\"o\">(</span><span class=\"nb\">exit</span> code: <span class=\"m\">127</span><span class=\"o\">)</span>\nwarning: build failed, waiting <span class=\"k\">for</span> other <span class=\"nb\">jobs</span> to finish...\n/home/robin/dev/rust/target/debug/rustdoc_tool_binary: error <span class=\"k\">while</span> loading shared libraries: libtest-5016d499037f0dbe.so: cannot open shared object file: No such file or directory\nerror: build failed\n</code></pre></div>",
        "id": 218223543,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606674362
    },
    {
        "content": "<p>right, because you're not using a rustup toolchain</p>",
        "id": 218223659,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606674498
    },
    {
        "content": "<p>the instructions I linked should work</p>",
        "id": 218223662,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606674501
    },
    {
        "content": "<p>I admit, I'm lost. I build rustdoc with <code>./x.py build src/tools/rustdoc</code>. I think I need to put my new rustdoc into a new distribution. According to <a href=\"https://rustc-dev-guide.rust-lang.org/building/build-install-distribution-artifacts.html\">that page</a> it seems to just be <code>x.py dist</code>, but I would have assume that this would put more than just rustdoc in it?</p>",
        "id": 218223954,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606674859
    },
    {
        "content": "<p>what? where are you seeing x.py dist?</p>",
        "id": 218223975,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606674896
    },
    {
        "content": "<p><code>rustup toolchain link stage1 build/&lt;host-triple&gt;/stage1</code></p>",
        "id": 218223981,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606674902
    },
    {
        "content": "<p>distribution artifacts are a separate thing, that's not what you want</p>",
        "id": 218224001,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606674941
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Issue.20with.20.60rustc_middle.3A.3Amir_built().60/near/218223975\">said</a>:</p>\n<blockquote>\n<p>what? where are you seeing x.py dist?</p>\n</blockquote>\n<p>On the \"build distribution artifact\" page</p>",
        "id": 218224050,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606674979
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Issue.20with.20.60rustc_middle.3A.3Amir_built().60/near/218224001\">said</a>:</p>\n<blockquote>\n<p>distribution artifacts are a separate thing, that's not what you want</p>\n</blockquote>\n<p>ah!</p>",
        "id": 218224057,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606674996
    },
    {
        "content": "<p>also you'll want <code>x.py build</code> or it won't have the standard library</p>",
        "id": 218224142,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606675110
    },
    {
        "content": "<p>in the rustc repo</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ rustup toolchain link stage1 build/x86_64-unknown-linux-gnu/stage1\n$ ./x.py build +stage1 src/tools/rustdoc\nUpdating only changed submodules\nSubmodules updated in <span class=\"m\">0</span>.04 seconds\n    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> in <span class=\"m\">0</span>.43s\nthread <span class=\"s1\">'main'</span> panicked at <span class=\"s1\">'error: no rules matched +stage1'</span>, src/bootstrap/builder.rs:225:17\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace\nfailed to run: /home/robin/dev/rust/build/bootstrap/debug/bootstrap build +stage1 src/tools/rustdoc\nBuild completed unsuccessfully in <span class=\"m\">0</span>:00:01\n$ ./x.py build +stage1\nUpdating only changed submodules\nSubmodules updated in <span class=\"m\">0</span>.02 seconds\n    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> in <span class=\"m\">0</span>.17s\nthread <span class=\"s1\">'main'</span> panicked at <span class=\"s1\">'error: no rules matched +stage1'</span>, src/bootstrap/builder.rs:225:17\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace\nfailed to run: /home/robin/dev/rust/build/bootstrap/debug/bootstrap build +stage1\nBuild completed unsuccessfully in <span class=\"m\">0</span>:00:00\n</code></pre></div>\n<p>Then on the crate I want to analyze:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span> cargo +stage1 doc\nwarning: output filename collision.\nThe lib target <span class=\"sb\">`</span>crossbeam-utils<span class=\"sb\">`</span> in package <span class=\"sb\">`</span>crossbeam-utils v0.7.2<span class=\"sb\">`</span> has the same output filename as the lib target <span class=\"sb\">`</span>crossbeam-utils<span class=\"sb\">`</span> in package <span class=\"sb\">`</span>crossbeam-utils v0.6.6<span class=\"sb\">`</span>.\nColliding filename is: /home/robin/dev/cargo-callgraph/target/doc/crossbeam_utils/index.html\nThe targets should have unique names.\nThis is a known bug where multiple crates with the same name use\nthe same path<span class=\"p\">;</span> see &lt;https://github.com/rust-lang/cargo/issues/6313&gt;.\n    Checking cfg-if v0.1.10\n   Compiling libc v0.2.80\n   Compiling autocfg v1.0.1\n    Checking lazy_static v1.4.0\nerror<span class=\"o\">[</span>E0463<span class=\"o\">]</span>: can<span class=\"s1\">'t find crate for `std`</span>\n\n<span class=\"s1\">error[E0463]: can'</span>t find crate <span class=\"k\">for</span> <span class=\"sb\">`</span>std<span class=\"sb\">`</span>\n\nerror<span class=\"o\">[</span>E0463<span class=\"o\">]</span>: can<span class=\"s1\">'t find crate for `core`</span>\n\n<span class=\"s1\">error[E0463]: can'</span>t find crate <span class=\"k\">for</span> <span class=\"sb\">`</span>core<span class=\"sb\">`</span>\n\nerror: aborting due to previous error\n\nFor more information about this error, try <span class=\"sb\">`</span>rustc --explain E0463<span class=\"sb\">`</span>.\nerror: aborting due to previous error\n\nerror: aborting due to previous error\n\nerror: aborting due to previous error\n\nFor more information about this error, try <span class=\"sb\">`</span>rustc --explain E0463<span class=\"sb\">`</span>.\nFor more information about this error, try <span class=\"sb\">`</span>rustc --explain E0463<span class=\"sb\">`</span>.\nFor more information about this error, try <span class=\"sb\">`</span>rustc --explain E0463<span class=\"sb\">`</span>.\nerror: could not compile <span class=\"sb\">`</span>lazy_static<span class=\"sb\">`</span>\n\nTo learn more, run the <span class=\"nb\">command</span> again with --verbose.\nwarning: build failed, waiting <span class=\"k\">for</span> other <span class=\"nb\">jobs</span> to finish...\nerror: build failed\n</code></pre></div>",
        "id": 218224273,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606675252
    },
    {
        "content": "<p>right, you built rustdoc but not the standard library</p>",
        "id": 218224297,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606675293
    },
    {
        "content": "<p><code>+stage1</code> is rustup syntax, not x.py syntax</p>",
        "id": 218224306,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606675305
    },
    {
        "content": "<p><code>x.py build --stage 1 library/std src/tools/rustdoc</code> is what you want, but that happens to be the default so you can just use <code>x.py build</code></p>",
        "id": 218224354,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606675328
    },
    {
        "content": "<p>ok, perfect</p>",
        "id": 218224374,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606675351
    },
    {
        "content": "<p>I recommend reading through <a href=\"https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html\">https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html</a> at some point</p>",
        "id": 218224397,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606675395
    },
    {
        "content": "<p><em>Note: this is not an attack against any one, or even the Rust project, I just wanted to explain my current thought process</em></p>\n<p>I think I read it a few month ago (I need to re-read it), but what is <em>really</em> confusing for my specific use-case is that I don't <em>feel</em> that I need to do all of that because I'm not trying to build rustc. All of the bootstrapping consideration <em>feels</em> that they should not exist (for my use-case), because I'm just building a regular rust application. I have the <em>feeling</em> that I just need a rust parser, and it happens that this parser is the internal parts of rustc. I know that those internal parts requires a <strong>very</strong> blinding edge compiler, but given that I didn't modified it at all, at least the latest nightly should be recent enough to be able to build it. Apart from having a very recent nightly, I am <em>not</em> expecting to have anything else to change to my workflow, especially <strong>not</strong> being able to use cargo. I would <strong>absolutely</strong> not have the same position if I was currently modifying the internals of rustc/stdlib, especially if I was directly using the things I was currently implementing (bootstrapping consideration would be very relevant).</p>\n<p>I put some emphasis, because it's what I <em>feel</em>, but may not what it <em>can</em> be, nor what it <em>is</em> currently. I am aware of the current libraryfication of rustc, but I don't know what is the current status.</p>",
        "id": 218224920,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606676075
    },
    {
        "content": "<p>And don't get me wrong, I absolutely understand what, and why bootstrapping is needed (and why it's extremely hard to do) when building a compiler.</p>",
        "id": 218225040,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606676257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> if you <em>really</em> <em>really</em> want to use cargo, you can use <code>cd compiler/rustc &amp;&amp; cargo +nightly build</code></p>",
        "id": 218225099,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676314
    },
    {
        "content": "<p><em>however</em>, that does not set up a sysroot, that does not build llvm, that does not provide you a way to use the compiler you just built from rustdoc</p>",
        "id": 218225106,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676337
    },
    {
        "content": "<p>It's not that I want, it's that I don't understand why I can't.</p>",
        "id": 218225116,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606676351
    },
    {
        "content": "<p>if you're interested in making <code>cargo build</code> work for rustdoc, I would <em>love</em> to have that, it just doesn't work right now</p>",
        "id": 218225124,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676359
    },
    {
        "content": "<p><a href=\"#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/Building.20rustdoc.20out.20of.20tree</a></p>",
        "id": 218225129,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676366
    },
    {
        "content": "<p>I also understand that the guides are targeted against someone who want to build the compiler (it's the rustc crate after all <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> )</p>",
        "id": 218225133,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606676373
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281841\">Robin Moussu</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Issue.20with.20.60rustc_middle.3A.3Amir_built().60/near/218225116\">said</a>:</p>\n<blockquote>\n<p>It's not that I want, it's that I don't understand why I can't.</p>\n</blockquote>\n<p>ok, please read the bootstrapping chapter then</p>",
        "id": 218225140,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676382
    },
    {
        "content": "<p>if you still have questions after that I'm happy to answer them</p>",
        "id": 218225143,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676389
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Issue.20with.20.60rustc_middle.3A.3Amir_built().60/near/218225124\">said</a>:</p>\n<blockquote>\n<p>if you're interested in making <code>cargo build</code> work for rustdoc, I would <em>love</em> to have that, it just doesn't work right now</p>\n</blockquote>\n<p>I would <em>love</em> to help with that, but currently I know that I don't have the expertise to do it. That's a chicken and egg problem! It's unfortunately often the case on big project. The people who will understand the best what doesn't work the way it should are newcomers (because it's much more painful than needed), but they don't have the knowledge to fix it (especially documentation), while more experience people notices those issue much less (because they know how to ignore them), and don't really have the time to do it anyway because their expertise make them required in even more important issue.</p>",
        "id": 218225374,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606676667
    },
    {
        "content": "<p>I will try to dedicate some time to building rustdoc in-trre with RTIM this week.</p>",
        "id": 218225401,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676728
    },
    {
        "content": "<p>I think if we solve the sysroot issue it won't actually be that hard</p>",
        "id": 218225413,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676748
    },
    {
        "content": "<p>The tricky bit is how to document it without it being even more confusing than it is currently</p>",
        "id": 218225442,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606676763
    },
    {
        "content": "<p>The other thing is there needs to be a way to run the tests without going through x.py</p>",
        "id": 218226008,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606677507
    },
    {
        "content": "<p>Maybe we could set compiletest as a dev-dependency and forward all the arguments through?</p>",
        "id": 218226014,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606677525
    },
    {
        "content": "<p>I want to understand why is my MIR stolen ;) I think the easiest way to find it is to show the backtrace every time the <code>steal()</code> function is called. I see three possibilities</p>\n<ol>\n<li>unconditionally panic (instead of just panicking when stealing already stolen MIR)</li>\n<li>run <code>cargo +stage1 doc</code> within gdb</li>\n<li>prints the backtrace each time I'm in the steal function</li>\n</ol>\n<p>I can't do 1) because x.py seems to build the compiler with the modifying steal, then use the faulty compiler to build rustdoc. For 2,  it's much harder than I thought initially, mostly because <code>cargo</code> forks, and I need to know on which child I need to attach gdb. I guess 3 would be the easiest, but I'm not sure on how to do it.</p>",
        "id": 218226276,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606677961
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> FYI building without x.py will never have debuginfo</p>",
        "id": 218226326,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606678001
    },
    {
        "content": "<p>since it isn't published in nightlies or in the <code>@bors try</code> runs</p>",
        "id": 218226335,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606678016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> I recommend 2, you can find what cargo is doing with <code>-v</code></p>",
        "id": 218226348,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606678052
    },
    {
        "content": "<p>1) isn't building rustdoc with the new compiler, btw, it's building the standard library</p>",
        "id": 218226412,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606678106
    },
    {
        "content": "<p>theoretically you could <em>only</em> build rustdoc and not the standard library, then try to run your program on a <code>no_core</code> file</p>",
        "id": 218226419,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606678126
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Issue.20with.20.60rustc_middle.3A.3Amir_built().60/near/218226412\">said</a>:</p>\n<blockquote>\n<p>1) isn't building rustdoc with the new compiler, btw, it's building the standard library</p>\n</blockquote>\n<p>Right ;)</p>",
        "id": 218226525,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1606678267
    }
]