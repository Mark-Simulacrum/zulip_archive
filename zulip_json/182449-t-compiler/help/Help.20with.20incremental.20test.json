[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/89836#pullrequestreview-789716356\">In this review</a>, <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> recommends an incremental test for <a href=\"https://github.com/rust-lang/rust/issues/89836\">#89836</a>:</p>\n<blockquote>\n<p>For this case, we would like to ensure we cannot link code compiled with two rustc versions. A run-make test could do the trick, by compiling one crate with the bootstrap compiler and the second crate with the master compiler. (Or easier: only the master compiler with two different values of CFG_VERSION.)</p>\n</blockquote>\n<p>I've never used this test suite before. It looks like there's kind of a lot to learn!</p>\n<p>I posted <a href=\"https://github.com/rust-lang/rust/pull/89836#issuecomment-952325148\">something I cobbled together</a> from existing tests. Will this work to exercise the linking we'd need to test?</p>\n<p>Would love to hear from someone with experience in incremental testing! <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 259246454,
        "sender_full_name": "pierwill",
        "timestamp": 1635344537
    },
    {
        "content": "<p>I don't really understand what the test you wrote does. Could you add a few comments on what it aims to test and how it does it?</p>\n<p>For reference, by a run-make test, I meant a test inside <code>src/test/run-make/</code> with a Makefile. For instance:</p>\n<div class=\"codehilite\" data-code-language=\"Makefile\"><pre><span></span><code><span class=\"cp\">-include ../../run-make-fulldeps/tools.mk</span>\n\n<span class=\"nf\">all</span><span class=\"o\">:</span>\n    <span class=\"k\">$(</span>RUSTC<span class=\"k\">)</span> a.rs --crate-type<span class=\"o\">=</span>dylib <span class=\"c1\"># a.rs is a dylib</span>\n    <span class=\"k\">$(</span>RUSTC<span class=\"k\">)</span> b.rs --extern-crate a --crate-type<span class=\"o\">=</span>dylib <span class=\"c1\"># b.rs is bin</span>\n    <span class=\"k\">$(</span>call RUN, b<span class=\"k\">)</span>\n    <span class=\"nv\">CFG_VERSION</span><span class=\"o\">=</span>bar <span class=\"k\">$(</span>RUSTC<span class=\"k\">)</span> a.rs --crate-type<span class=\"o\">=</span>dylib <span class=\"c1\"># compile with another rustc-version</span>\n<span class=\"c\">    # Verify that this fails to find symbols</span>\n    <span class=\"k\">$(</span>call RUN, b<span class=\"k\">)</span>\n</code></pre></div>\n<p>with <a href=\"http://a.rs\">a.rs</a> exposing a function, and <a href=\"http://b.rs\">b.rs</a> using it through the dylib.</p>",
        "id": 259427336,
        "sender_full_name": "cjgillot",
        "timestamp": 1635443650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316352\">@pierwill</span>, did you see this answer?</p>",
        "id": 259843655,
        "sender_full_name": "cjgillot",
        "timestamp": 1635759936
    },
    {
        "content": "<p>Thanks for the ping, <span class=\"user-mention\" data-user-id=\"248906\">@cjgillot</span> . Ah! That example helps!</p>",
        "id": 259869119,
        "sender_full_name": "pierwill",
        "timestamp": 1635776383
    },
    {
        "content": "<blockquote>\n<p>I don't really understand what the test you wrote does. Could you add a few comments on what it aims to test and how it does it?</p>\n</blockquote>\n<p>I don't think what I was trying is likely to work. I'll work on a new test based on your example <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 259881232,
        "sender_full_name": "pierwill",
        "timestamp": 1635782158
    },
    {
        "content": "<p>Is this the kind of error we want?</p>\n<div class=\"codehilite\"><pre><span></span><code>error: cannot satisfy dependencies so `std` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `core` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `compiler_builtins` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `rustc_std_workspace_core` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `alloc` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `libc` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `unwind` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `cfg_if` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `hashbrown` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `rustc_std_workspace_alloc` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `rustc_demangle` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `std_detect` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `addr2line` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `gimli` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `object` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `memchr` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `panic_unwind` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: aborting due to 17 previous errors; 1 warning emitted\n\nmake: *** [all] Error 1\n</code></pre></div>",
        "id": 259892016,
        "sender_full_name": "pierwill",
        "timestamp": 1635786727
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 259893609,
        "sender_full_name": "bjorn3",
        "timestamp": 1635787482
    },
    {
        "content": "<p>Hm... Can't seem to get around the error above...</p>",
        "id": 259900426,
        "sender_full_name": "pierwill",
        "timestamp": 1635790893
    },
    {
        "content": "<p>I'm lost on how to actually make the dynamic linking work <span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span>  <a href=\"https://github.com/rust-lang/rust/pull/89836/commits/38eec6627e895ca4c4830be2001214a65e2df8bd\">https://github.com/rust-lang/rust/pull/89836/commits/38eec6627e895ca4c4830be2001214a65e2df8bd</a></p>",
        "id": 259907866,
        "sender_full_name": "pierwill",
        "timestamp": 1635794318
    },
    {
        "content": "<p>Error: <a href=\"https://github.com/rust-lang/rust/runs/4071364310?check_suite_focus=true#step:25:3616\">https://github.com/rust-lang/rust/runs/4071364310?check_suite_focus=true#step:25:3616</a></p>",
        "id": 259907906,
        "sender_full_name": "pierwill",
        "timestamp": 1635794355
    }
]