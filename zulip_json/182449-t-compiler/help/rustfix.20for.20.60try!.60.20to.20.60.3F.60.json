[
    {
        "content": "<p>How hard would it be to make the current deprecation warning for <code>try!</code> rustfixable?</p>",
        "id": 178031362,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570960952
    },
    {
        "content": "<p>It looks like the current warning comes purely from the use of <code>rustc_deprecated</code>. Could the compiler build in support for that deprecation itself, and then offer a rustfix?</p>",
        "id": 178031553,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570961170
    },
    {
        "content": "<p>(I can imagine adding support for rustfix suggestions to deprecation attributes, but that would require a more general \"replace this with that\" syntax in the attribute, and I don't mind special-casing this for simplicity.)</p>",
        "id": 178031579,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570961224
    },
    {
        "content": "<p>I'm trying to figure out where the <code>suggestion</code> in <code>RustcDeprecation</code> gets used.</p>",
        "id": 178031865,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570961623
    },
    {
        "content": "<p>AFAIK just replacing one with the other will not always type-solve, anymore.</p>",
        "id": 178032022,
        "sender_full_name": "nagisa",
        "timestamp": 1570961856
    },
    {
        "content": "<p>This might or might not be the case why we do not do it already.</p>",
        "id": 178032030,
        "sender_full_name": "nagisa",
        "timestamp": 1570961878
    },
    {
        "content": "<p>Under what circumstances would it not?</p>",
        "id": 178032106,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570961988
    },
    {
        "content": "<p>/me would like to get rustfix to help converting 400+ uses of <code>try!</code> in a project.</p>",
        "id": 178032156,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570962011
    },
    {
        "content": "<p>(Also, I found <code>late_report_deprecation</code> where the suggestion gets used.)</p>",
        "id": 178032178,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570962068
    },
    {
        "content": "<p>if it's just to actually translate them, use rustfmt</p>",
        "id": 178032389,
        "sender_full_name": "lqd",
        "timestamp": 1570962396
    },
    {
        "content": "<p>with <code>use_try_shorthand = true</code> specifically</p>",
        "id": 178032411,
        "sender_full_name": "lqd",
        "timestamp": 1570962426
    },
    {
        "content": "<p>should be easier than to teach how to do it to the compiler :)</p>",
        "id": 178032473,
        "sender_full_name": "lqd",
        "timestamp": 1570962495
    },
    {
        "content": "<p>Oh, handy; I didn't know <code>rustfmt</code> could do that.</p>",
        "id": 178032480,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570962509
    },
    {
        "content": "<p>I'll have to figure out how to disable the <em>rest</em> of <code>rustfmt</code> so I don't get a pile of things mixed into one commit, but that should still be easier. :)</p>",
        "id": 178032490,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570962530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Thanks!</p>",
        "id": 178032585,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570962625
    },
    {
        "content": "<p>you're welcome</p>",
        "id": 178032817,
        "sender_full_name": "lqd",
        "timestamp": 1570963034
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  Ah, I see; across the whole project, I did indeed have <em>one</em> case where switching from <code>try!</code> to <code>?</code> resulted in insufficient information for type inference.</p>",
        "id": 178032818,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570963035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> aww and here I just crafted a convulted example: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cdaaa9ad06842745213d63a786c391c8\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cdaaa9ad06842745213d63a786c391c8\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cdaaa9ad06842745213d63a786c391c8</a></p>",
        "id": 178032897,
        "sender_full_name": "nagisa",
        "timestamp": 1570963199
    },
    {
        "content": "<p>I believe this is mostly because <code>?</code> is able to work with <code>Option</code>s and other <code>Try</code> implementing types and <code>r#try</code> is just for <code>Result</code>.</p>",
        "id": 178032946,
        "sender_full_name": "nagisa",
        "timestamp": 1570963242
    },
    {
        "content": "<p>Right, that's the case I ran into as well.</p>",
        "id": 178032947,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570963256
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0282]: type annotations needed for `&amp;(_, _)`\n</pre></div>",
        "id": 178032955,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570963279
    },
    {
        "content": "<p>I'm having a lot of trouble getting rustfmt to <em>not</em> do things. <code>disable_all_formatting</code> also disables <code>use_try_shorthand</code>...</p>",
        "id": 178033139,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570963675
    },
    {
        "content": "<p>I can avoid a <em>lot</em> of it with <code>max_width=400</code>, but I still have a lot of cases like this to sort through:</p>\n<div class=\"codehilite\"><pre><span></span>-        _ =&gt; {\n-            return Err(format!(&quot;Remote does not have either a tag or branch named {}&quot;, tag).into())\n-        }\n+        _ =&gt; return Err(format!(&quot;Remote does not have either a tag or branch named {}&quot;, tag).into()),\n</pre></div>",
        "id": 178033239,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570963827
    },
    {
        "content": "<p>/me shrugs; still less trouble to sort through than doing it by hand.</p>",
        "id": 178033414,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570964236
    },
    {
        "content": "<p>Thanks again.</p>",
        "id": 178033415,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1570964240
    }
]