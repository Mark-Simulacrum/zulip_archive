[
    {
        "content": "<p>when using RA, I regularly have to recompile with it running x.py check on save conflicts with my manual x.py test runs. I heard that there may be a global flock for x.py build/check/test invocations? I cant find the pr, does anyone know the status of that?</p>",
        "id": 260719962,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636406116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257428\">@Gus Wynn</span> <a href=\"https://github.com/rust-lang/rust/pull/88310\">https://github.com/rust-lang/rust/pull/88310</a></p>",
        "id": 260720108,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406177
    },
    {
        "content": "<p>I haven't heard from the author in a few weeks, you could probably take over the PR if you're interested</p>",
        "id": 260720125,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406190
    },
    {
        "content": "<p>I tried so many search terms and couldnt find it!</p>",
        "id": 260720129,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636406193
    },
    {
        "content": "<p>I went to rust-lang/rust/pulls -&gt; filter by A-rustbuild -&gt; Ctrl+F lock</p>",
        "id": 260720176,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406223
    },
    {
        "content": "<p>did we resolve the \"too many flock impls\" problem?</p>",
        "id": 260720180,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636406225
    },
    {
        "content": "<p>Lol nope</p>",
        "id": 260720190,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406230
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> suggested just using sqlite3 for locking lol</p>",
        "id": 260720223,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406249
    },
    {
        "content": "<p>How much do I want to just factor out cargo's FileLock impl.....seems annoying to setup a supported crate</p>",
        "id": 260720313,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636406285
    },
    {
        "content": "<p>maybe we are at \"something is better than nothing\" stage and improving/consolidating later could help....we could even put this behind a config.toml flag to opt in</p>",
        "id": 260720378,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636406347
    },
    {
        "content": "<p>I would talk to the cargo team about that, they've mentioned not wanting to maintain public crates in the past</p>",
        "id": 260720382,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257428\">@Gus Wynn</span> I would seriously consider the sqlite thing, it's in the python standard library and everything</p>",
        "id": 260720408,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406372
    },
    {
        "content": "<p>I don't want this to be behind an option though or no one will know about it</p>",
        "id": 260720436,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406394
    },
    {
        "content": "<p>oh to do it in the python before we build and shell out to the rust bootstrap code?</p>",
        "id": 260720549,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636406443
    },
    {
        "content": "<p>Yeah, it needs it anyway to prevent downloads overwriting each other</p>",
        "id": 260720605,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636406479
    },
    {
        "content": "<p>interesting, ill see if I can find time</p>",
        "id": 260720778,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1636406577
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"257428\">Gus Wynn</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/flocking.20for.20x.2Epy/near/260719962\">said</a>:</p>\n<blockquote>\n<p>when using RA, I regularly have to recompile with it running x.py check on save conflicts with my manual x.py test runs. I heard that there may be a global flock for x.py build/check/test invocations? I cant find the pr, does anyone know the status of that?</p>\n</blockquote>\n<p>This has been bothering me too, but I didn't realize there was a solution!</p>",
        "id": 260754578,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636434686
    },
    {
        "content": "<p>TIL “flocking” is an abbreviation for file locking</p>",
        "id": 260823573,
        "sender_full_name": "pnkfelix",
        "timestamp": 1636475705
    },
    {
        "content": "<p>flock(2)ing</p>",
        "id": 260826909,
        "sender_full_name": "The 8472",
        "timestamp": 1636477474
    },
    {
        "content": "<p>No birds involved ;)</p>",
        "id": 260854833,
        "sender_full_name": "Noah Lev",
        "timestamp": 1636489190
    }
]