[
    {
        "content": "<p>Hi all.  I'm trying to run tests on the standard library, in preparation for a PR for stabilizing <a href=\"https://github.com/rust-lang/rust/issues/55300\">https://github.com/rust-lang/rust/issues/55300</a>.  I'm following the instructions in the <a href=\"https://rustc-dev-guide.rust-lang.org/getting-started.html\">getting started guide</a>, but it dies trying to find <code>ninja</code>, and my attempts to set <code>ninja = false</code> have failed.  My steps are below.  Any advice would be appreciated!</p>\n<ol>\n<li>\n<p>Cloned rust</p>\n</li>\n<li>\n<p><code>python3 x.py setup</code> -&gt; a) Contribute to standard library<br>\nGot error:<br>\nCouldn't find required command: ninja<br>\nYou should install ninja, or set ninja=false in config.toml</p>\n</li>\n<li>\n<p>ninja isn't in brew, it looks like I'd have to manually install a binary that I'd forget about maintaining, so I look for config.toml</p>\n</li>\n<li>\n<p>There is no config.toml, but there's a config.toml.example that says:</p>\n</li>\n</ol>\n<h1>To configure rustbuild, copy this file to the directory from which you will be</h1>\n<h1>running the build, and name it config.toml.</h1>\n<ol start=\"5\">\n<li>\n<p>I copy config.toml.example to config.toml, adding a <code>ninja = false</code> line.</p>\n</li>\n<li>\n<p><code>python3 x.py setup</code> -&gt; a) Contribute to standard library <br>\nGot error<br>\nerror: you asked <code>x.py</code> to setup a new config file, but one already exists at <code>config.toml</code><br>\nhelp: try adding <code>profile = \"library\"</code> at the top of config.toml<br>\nnote: this will use the configuration in /Users/jagill/dev/rust/src/bootstrap/defaults/config.library.toml</p>\n</li>\n<li>\n<p>I add the line <code>profile = \"library\"</code> to the top of config.toml.<br>\nSame error!<br>\nerror: you asked <code>x.py</code> to setup a new config file, but one already exists at <code>config.toml</code><br>\nhelp: try adding <code>profile = \"library\"</code> at the top of config.toml<br>\nnote: this will use the configuration in /Users/jagill/dev/rust/src/bootstrap/defaults/config.library.toml</p>\n</li>\n<li>\n<p>??? What now?</p>\n</li>\n</ol>",
        "id": 212506378,
        "sender_full_name": "James Gill",
        "timestamp": 1602034584
    },
    {
        "content": "<p>I should say that I'm in macos!  (latest version, more or less)</p>",
        "id": 212506402,
        "sender_full_name": "James Gill",
        "timestamp": 1602034628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350322\">@James Gill</span> you don't need to both copy config.toml and run x.py setup</p>",
        "id": 212506412,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602034651
    },
    {
        "content": "<p>hmm that error message is not very helpful :/ it should say \"if you have profile = ... you don't need to run x.py setup\"</p>",
        "id": 212506426,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602034672
    },
    {
        "content": "<p>I copied config.toml just to set <code>nina = false</code>.  I don't know if I should do anything more intelligent if I copy config.toml, or if there's a way to set <code>ninja = false</code> without config.toml?</p>",
        "id": 212506495,
        "sender_full_name": "James Gill",
        "timestamp": 1602034742
    },
    {
        "content": "<p>Should I just <code>cargo test</code> then?</p>",
        "id": 212506511,
        "sender_full_name": "James Gill",
        "timestamp": 1602034773
    },
    {
        "content": "<p>all the settings in <code>config.toml.example</code> can be set without it. since you already copied it all you need to do is change <code>ninja = true</code> to <code>ninja = false</code>, then <code>x.py test --stage 0 library/std</code></p>",
        "id": 212506601,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602034855
    },
    {
        "content": "<p>Ok, great, now it's finding real errors.  Follow-up question: if I'm stabilizing a feature, should I replace <code>#[unstable(feature = \"foo\", issue = \"xxx\")]</code> with <code>#[stable(feature = \"foo\", since = \"1.XX.0\")]</code>?  Is there some canonical choice for the <code>since</code> version?</p>",
        "id": 212506895,
        "sender_full_name": "James Gill",
        "timestamp": 1602035208
    },
    {
        "content": "<p><code>since</code> is the version of rust it was stabilized in. in your case it's 1.49.0: <a href=\"https://forge.rust-lang.org/#current-release-versions\">https://forge.rust-lang.org/#current-release-versions</a></p>",
        "id": 212506907,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602035238
    },
    {
        "content": "<p>That worked, and the tests pass!  Thanks!</p>",
        "id": 212507337,
        "sender_full_name": "James Gill",
        "timestamp": 1602035662
    },
    {
        "content": "<p>you're welcome :)</p>",
        "id": 212507346,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602035673
    }
]