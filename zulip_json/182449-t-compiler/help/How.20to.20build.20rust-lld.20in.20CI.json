[
    {
        "content": "<p>On my machine, I've set <code>lld=true</code> in my <code>config.toml</code>, and so the path <code>build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/bin</code> contains <code>rust-lld</code>. However, when my PR is built in CI, it fails because <code>build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/bin</code> does not contain <code>rust-lld</code>. How can I build <code>rust-lld</code> in CI?</p>",
        "id": 241407869,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622734265
    },
    {
        "content": "<p>It's probably a rustup component</p>",
        "id": 241409231,
        "sender_full_name": "nagisa",
        "timestamp": 1622734815
    },
    {
        "content": "<p>Llvm-tools-preview maybe. As name suggests it isn't stable.</p>",
        "id": 241409270,
        "sender_full_name": "nagisa",
        "timestamp": 1622734836
    },
    {
        "content": "<p>Ah hm, probably answered about the wrong thing.</p>",
        "id": 241409326,
        "sender_full_name": "nagisa",
        "timestamp": 1622734868
    },
    {
        "content": "<p>I guess that would simply mean we don't have a need to build it, maybe only do so in dist. Why do you need lld specifically?</p>",
        "id": 241409647,
        "sender_full_name": "nagisa",
        "timestamp": 1622735009
    },
    {
        "content": "<p>I'm testing rust-lld support in this PR <a href=\"https://github.com/rust-lang/rust/pull/85961\">https://github.com/rust-lang/rust/pull/85961</a> :P <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 241410141,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622735204
    },
    {
        "content": "<p>you _may_ need a fulldeps make test for this, but not sure.</p>",
        "id": 241414756,
        "sender_full_name": "nagisa",
        "timestamp": 1622737217
    },
    {
        "content": "<p>Actually, I'm not even sure which copy of <code>rust-lld</code> I should be using: the one built in the project dir, or the one in the rustup toolchain.</p>",
        "id": 241417717,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622738579
    },
    {
        "content": "<p>For tests of rustc, the one built in the project dir. rustup does not come in play in anyway for the purposes of rustc build system.</p>",
        "id": 241419371,
        "sender_full_name": "nagisa",
        "timestamp": 1622739324
    },
    {
        "content": "<p>AFAIK <code>rust-lld</code> isn't built for the  most of the test builders. There are a few that require it (like test-various). It is usually only built for dist builders.</p>\n<p>I would maybe suggest picking a linux builder and adding <code>--enable-lld</code>, and teach compiletest to ignore the test if rust-lld isn't available. But that is a decision maybe infra would want to weigh in on.  Building lld is pretty fast, though.</p>",
        "id": 241427651,
        "sender_full_name": "Eric Huss",
        "timestamp": 1622742557
    },
    {
        "content": "<p>Sorry, what's a test builder, and where can I add <code>--enable-lld</code>?</p>",
        "id": 241497617,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622790107
    },
    {
        "content": "<p>Ah, not sure how familiar you are with the rust-lang CI.  There are about 60 jobs which each build either for distribution (\"dist\") or for running tests (or sometimes both!).  <a href=\"https://github.com/rust-lang-ci/rust/actions/runs/905427730\">Here</a> is a link to a recent run where you can see a list of their names.  They are defined in <a href=\"https://github.com/rust-lang/rust/blob/master/.github/workflows/ci.yml\">ci.yml</a>.  Most of them are docker images.  Probably one of the most basic ones that runs tests is <a href=\"https://github.com/rust-lang/rust/blob/master/src/ci/docker/host-x86_64/x86_64-gnu/Dockerfile\">x86_64-gnu</a>.  The Dockerfile is where the per-job settings are set. You can search through the other docker files to see an example like <a href=\"https://github.com/rust-lang/rust/blob/c4c2ab57a43737867982fafc8cfacd9b069fee96/src/ci/docker/host-x86_64/x86_64-gnu-debug/Dockerfile#L37\">this</a> where <code>--enable-lld</code> is set.  You would just need to add that to one of the docker files that runs the tests you are writing. I think x86_64-gnu is maybe a good choice, since it is basic and runs fairly fast (~40 minutes). It is important to consider how long each job runs.</p>\n<p>There is some documentation <a href=\"https://rustc-dev-guide.rust-lang.org/tests/intro.html#testing-with-docker-images\">here</a> for running the docker images locally if you want to test out your changes.</p>",
        "id": 241524575,
        "sender_full_name": "Eric Huss",
        "timestamp": 1622807808
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span>  I see that mingw-check, x86_64-gnu-llvm-10, and x86_64-gnu-tools is run on my PR, but not x86_64-gnu. How do I run x86_64-gnu?</p>",
        "id": 241529248,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622810456
    },
    {
        "content": "<p>If you would prefer to try it out via CI, you can temporarily add it to the \"pr\" list in <a href=\"https://github.com/rust-lang/rust/blob/master/.github/workflows/ci.yml\"><code>ci.yml</code></a>. Just copy and paste the <code>x86_64-gnu</code> job next to the other three, and run the instructions at the top of the file to regenerate the ci.yml file.  Just be sure to remove it once you have verified it is working properly.</p>",
        "id": 241530119,
        "sender_full_name": "Eric Huss",
        "timestamp": 1622810978
    },
    {
        "content": "<p>Huh, adding <code>enable-lld</code> to <code>x86_64-gnu</code> works since cmake is up to date, but not on <code>x86_64-gnu-llvm-10</code>. I'm guessing this is because the former runs ubuntu 20.04 and the latter runs 18.04? Is there anything I could do to update cmake on the latter, or do I just have to ignore the latter somehow?</p>",
        "id": 241544899,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622817488
    },
    {
        "content": "<p>I think the test will need to be able to ignore any situation where lld doesn't exist, so I wouldn't bother trying to get lld to build on gnu-llvm-10.</p>",
        "id": 241552006,
        "sender_full_name": "Eric Huss",
        "timestamp": 1622820448
    },
    {
        "content": "<p>How would I ignore such a test? <a href=\"https://rustc-dev-guide.rust-lang.org/tests/adding.html#ignoring-tests\">https://rustc-dev-guide.rust-lang.org/tests/adding.html#ignoring-tests</a> doesn't seem to have anything relevant. <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span></p>",
        "id": 241563116,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622825353
    },
    {
        "content": "<p>You'd need to teach compiletest how to do that.  That would probably involve adding a new header (like one of the <code>needs-...</code> headers).  The headers are in <a href=\"https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/header.rs\">https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/header.rs</a>.</p>",
        "id": 241563438,
        "sender_full_name": "Eric Huss",
        "timestamp": 1622825502
    },
    {
        "content": "<p>How does RUST_CONFIGURE_ARGS work? In particular, I'm interested where the <code>enable-lld</code> flag affects the compilation of rust-lld.</p>",
        "id": 241570177,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622828613
    },
    {
        "content": "<p>The default CI script is <a href=\"https://github.com/rust-lang/rust/blob/master/src/ci/run.sh\"><code>run.sh</code></a> which passes <code>RUST_CONFIGURE_ARGS</code> to the <a href=\"https://github.com/rust-lang/rust/blob/master/configure\"><code>configure</code></a> script which essentially just stores those settings in <code>config.toml</code>.  <code>x.py</code> reads the config, and the code that builds lld is around <a href=\"https://github.com/rust-lang/rust/blob/595088d602049d821bf9a217f2d79aea40715208/src/bootstrap/native.rs#L524-L616\">here</a>.</p>",
        "id": 241575260,
        "sender_full_name": "Eric Huss",
        "timestamp": 1622831209
    }
]