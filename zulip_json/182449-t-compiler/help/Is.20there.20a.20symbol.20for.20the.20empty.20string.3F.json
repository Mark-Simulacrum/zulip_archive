[
    {
        "content": "<p>I see <code>kw::Invalid</code> but that seems like a hack ... is there a sanctioned way to do this?</p>",
        "id": 219928215,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607996445
    },
    {
        "content": "<p>maybe <span class=\"user-mention\" data-user-id=\"274471\">@Arlie Davis</span> knows?</p>",
        "id": 219928220,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607996450
    },
    {
        "content": "<p>I can always <code>Symbol::intern(\"\")</code> but that seems a waste</p>",
        "id": 219928225,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607996464
    },
    {
        "content": "<p>I think both are fine, but I'd prefer kw::Invalid.</p>",
        "id": 219928246,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1607996513
    },
    {
        "content": "<p>huh, looks like Attribute does that too: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_ast/attr/mod.rs.html#145-147\">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_ast/attr/mod.rs.html#145-147</a></p>",
        "id": 219928298,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607996543
    },
    {
        "content": "<p>thanks!</p>",
        "id": 219928300,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607996545
    },
    {
        "content": "<p>(for context, I'm switching <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustdoc/clean/types/struct.Item.html#structfield.name\"><code>Item::name</code></a> from String to Symbol)</p>",
        "id": 219928330,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607996607
    },
    {
        "content": "<p>do you think you'd take a PR adding <code>Symbol::is_empty()</code>?</p>",
        "id": 219928495,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607996803
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Is.20there.20a.20symbol.20for.20the.20empty.20string.3F/near/219928330\">said</a>:</p>\n<blockquote>\n<p>(for context, I'm switching <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustdoc/clean/types/struct.Item.html#structfield.name\"><code>Item::name</code></a> from String to Symbol)</p>\n</blockquote>\n<p>and then I see things like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">compare_impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">b</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">lhs</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"kp\">&amp;&amp;</span><span class=\"nc\">Impl</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rhs</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">b</span> <span class=\"kp\">&amp;&amp;</span><span class=\"nc\">Impl</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Ordering</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"p\">.</span><span class=\"n\">inner_impl</span><span class=\"p\">().</span><span class=\"n\">print</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"p\">.</span><span class=\"n\">inner_impl</span><span class=\"p\">().</span><span class=\"n\">print</span><span class=\"p\">());</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// lhs and rhs are formatted as HTML, which may be unnecessary</span>\n<span class=\"w\">    </span><span class=\"n\">compare_names</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">lhs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">rhs</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and I wonder why I bother <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>",
        "id": 219928706,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607997024
    },
    {
        "content": "<p>is_empty might already exist? I feel like I've seen that though maybe not on Symbol itself</p>",
        "id": 219932876,
        "sender_full_name": "simulacrum",
        "timestamp": 1608001939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Is.20there.20a.20symbol.20for.20the.20empty.20string.3F/near/219932876\">said</a>:</p>\n<blockquote>\n<p>is_empty might already exist? I feel like I've seen that though maybe not on Symbol itself</p>\n</blockquote>\n<p>not on symbol: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/symbol/struct.Symbol.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/symbol/struct.Symbol.html</a></p>",
        "id": 219932897,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608001962
    },
    {
        "content": "<p>you can use <code>symbol.as_str() == \"\"</code> but that locks the interner</p>",
        "id": 219932915,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608001987
    },
    {
        "content": "<p>I think <code>symbol == kw::Invalid</code> is a good short-term equivalent for <code>is_empty</code> (and it won't need to lock the thread-local <code>Interner</code>). Maybe we need an alias of <code>sym::empty_string</code> for <code>kw::Invalid</code>, so that it's clear which meaning we're using.</p>",
        "id": 220046990,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1608068661
    },
    {
        "content": "<p>FWIW, we could just rename <code>kw::Invalid</code> to <code>kw::Empty</code>.</p>",
        "id": 220054471,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1608072497
    },
    {
        "content": "<p>I've looked through the uses of <code>kw::Invalid</code> and many of them would be clearer as <code>kw::Empty</code>.</p>",
        "id": 220054634,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1608072606
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Is.20there.20a.20symbol.20for.20the.20empty.20string.3F/near/220054471\">said</a>:</p>\n<blockquote>\n<p>FWIW, we could just rename <code>kw::Invalid</code> to <code>kw::Empty</code>.</p>\n</blockquote>\n<p>working on this now</p>",
        "id": 221182272,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609291386
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/80495\">https://github.com/rust-lang/rust/pull/80495</a></p>",
        "id": 221182571,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609291761
    }
]