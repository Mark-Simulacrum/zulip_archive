[
    {
        "content": "<p>Hey all. I am trying to link an attribute to a closure but can't use <code>#[feature(stmt_expr_attributes)]</code>. In proc_macros we generate something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"cp\">#[some_attr]</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_closure</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|..</span><span class=\"p\">.</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">_closure</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If <code>#[some_attr]</code> is directly on the closure, the attribute gets attached to the actual implementation function, but as shown above, the attribute is only on the assignment statement. I can find this <code>#[some_attr]</code> when walking the HIR, I find it in a <code>Local</code> statement. I was wondering if I can somehow turn the <code>HirId</code>(s) that I find in that <code>Local</code> into a <code>DefId</code> of the implementation function of the closure?</p>",
        "id": 215828951,
        "sender_full_name": "Aurel Bílý",
        "timestamp": 1604659364
    },
    {
        "content": "<p>DefIds are cross-crate and I don't think closures are, so it may not be possible</p>",
        "id": 215851857,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604672579
    },
    {
        "content": "<p>but if it is, you'd do it with <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/hir/map/struct.Map.html#method.local_def_id\"><code>local_def_id()</code></a></p>",
        "id": 215851940,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604672623
    },
    {
        "content": "<p>Thanks, I think that did it! <code>local_def_id</code> returned the closure <code>DefId</code> when I called it on the closure's <code>body.hir_id</code>. What did you mean by the cross-crate comment? The closure I have is always defined right there in the assignment statement.</p>",
        "id": 215858981,
        "sender_full_name": "Aurel Bílý",
        "timestamp": 1604675590
    },
    {
        "content": "<p>I think closures can be cross-crate though</p>",
        "id": 215861484,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1604676659
    },
    {
        "content": "<p>DefIds are a stable identifier that can be used across crates, when compiling downstream crates that depend on the current one. Not everything that has a HirId has a DefId, for example <code>use</code> statements.</p>",
        "id": 215862002,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604676889
    },
    {
        "content": "<p>It sounds like closures do have DefIds though</p>",
        "id": 215862030,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604676901
    }
]