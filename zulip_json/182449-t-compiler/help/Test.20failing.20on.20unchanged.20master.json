[
    {
        "content": "<p>A test has suddenly started failing (consistently) despite me being on an unchanged master (currently <code>0157cc</code>), what steps could I take to resolve this?  It's the <code>ui/deriving/issue-89188-gat-hrtb.rs</code> tests if that helps.  The error is attached.</p>\n<p>I have already tried <code>x.py clean</code>and building without <code>--keep-stage=1</code> (I typically use it when possible)</p>\n<p><a href=\"/user_uploads/4715/JT7NCziGOd8SAntaBjKENX7M/err.txt\">err.txt</a></p>",
        "id": 256629859,
        "sender_full_name": "asquared31415",
        "timestamp": 1633632625
    },
    {
        "content": "<p>are you building the compiler with <code>debug-assertions = true</code>?</p>",
        "id": 256630922,
        "sender_full_name": "The 8472",
        "timestamp": 1633633003
    },
    {
        "content": "<p>I have <code>debug = true</code> and <code>incremental = true</code>, besides that using the <code>compiler</code> profile</p>",
        "id": 256631167,
        "sender_full_name": "asquared31415",
        "timestamp": 1633633092
    },
    {
        "content": "<p>Yeah, that probably turns on overflow checks. The compiler isn't tested that way, so that kind of bug goes uncaught. You should file an issue, there have been bugs like that before.</p>",
        "id": 256631482,
        "sender_full_name": "The 8472",
        "timestamp": 1633633210
    },
    {
        "content": "<p>The code would likely fail anyway, as the overflowing subtraction is used as an index immediately, but I will check</p>",
        "id": 256631755,
        "sender_full_name": "asquared31415",
        "timestamp": 1633633315
    },
    {
        "content": "<p>Huh I guess not.  Will file an issue.</p>",
        "id": 256632743,
        "sender_full_name": "asquared31415",
        "timestamp": 1633633688
    },
    {
        "content": "<p>there are two subtractions, the first one might overflow and then the addition might turn overflow it back into the valid range. and the following unwrap_or tries to do some fixup too. so if there's a bug it could be easily masked.</p>",
        "id": 256632906,
        "sender_full_name": "The 8472",
        "timestamp": 1633633766
    }
]