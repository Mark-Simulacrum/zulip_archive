[
    {
        "content": "<p>Hi y'all!! I have a question and I think it belongs on t-compiler/help</p>\n<p>If I have 2 static libraries that only expose thing in the C ABI and each one is compiled with different versions of rustc, do I encounter symbol problems trying to link both into a C binary?</p>",
        "id": 209472724,
        "sender_full_name": "Gray Jack",
        "timestamp": 1599628563
    },
    {
        "content": "<p>All mangled symbols have a hash that depends on the compiler version. There are a few unmangled symbols in compiler_builtins, but those should only pulled from one of the static libs by the linker. Which one doesn't matter, as they have fixed semantics required by LLVM. In fact the linker may use the compiler_builtins implementation for normal C programs (<code>libgcc_s</code>?) instead. There also some unmangled symbols exported by libcore, libpanic_* and libstd (starting with <code>__rdl_</code>, <code>__rg_</code> and <code>__rust_</code>) for for example panic handling and allocating. I don't know if there will be a conflict there. You could try it.</p>",
        "id": 209483653,
        "sender_full_name": "bjorn3",
        "timestamp": 1599639851
    },
    {
        "content": "<p>Thanks!!! I'll certainly try those cases where you're not sure</p>",
        "id": 209593112,
        "sender_full_name": "Gray Jack",
        "timestamp": 1599709102
    }
]