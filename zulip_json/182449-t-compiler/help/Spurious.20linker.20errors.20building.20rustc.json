[
    {
        "content": "<p>I get spurious <code>undefined reference</code> errors when building rustc, pretty much daily. They're always to these <code>anon</code> symbols:</p>\n<div class=\"codehilite\"><pre><span></span><code>         /home/tgnottingham/Projects/rust/rust/library/core/src/option.rs:386: undefined reference to `anon.04b56f81f8d51f30b8720ce746e686ac.0.llvm.4938662292890509205&#39;\n          /usr/bin/ld: /tmp/rustcTyeVKl/librustc_metadata-4849b55e661cd891.rlib(rustc_metadata-4849b55e661cd891.2rvbnxcl0w6plmot.rcgu.o): relocation R_X86_64_PC32 against undefined hidden symbol `anon.04b56f81f8d51f30b8720ce746e686ac.0.llvm.4938662292890509205&#39; can not be used when making a shared object\n          /usr/bin/ld: final link failed: bad value\n          collect2: error: ld returned 1 exit status\n</code></pre></div>\n<p>Of course it always happens at the end of compilation, so it's a real drag. I generally have to <code>rm -r build</code> to get past it (<code>./x.py clean</code> doesn't seem to do the trick). Does anyone else run into this?</p>",
        "id": 219665639,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1607722681
    },
    {
        "content": "<p>Seems like it might be related to LLVM - that's why <code>./x.py clean</code> doesn't work (IIRC, <code>./x.py clean</code> doesn't remove LLVM)</p>",
        "id": 219674671,
        "sender_full_name": "Noah Lev",
        "timestamp": 1607729401
    },
    {
        "content": "<p>Yeah, seems that way. Looks like it's happened in the past -- <a href=\"https://github.com/rust-lang/rust/issues/67802\">https://github.com/rust-lang/rust/issues/67802</a>. I'll see if I can get a repro at some point.</p>",
        "id": 219723333,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1607800997
    },
    {
        "content": "<p>It just happened to me now :/</p>",
        "id": 219725674,
        "sender_full_name": "Noah Lev",
        "timestamp": 1607803889
    },
    {
        "content": "<p>Oh well, time to rebuild LLVM <em>again</em></p>",
        "id": 219725677,
        "sender_full_name": "Noah Lev",
        "timestamp": 1607803902
    },
    {
        "content": "<p>Interesting, I'm using <code>download-ci-llvm = true</code> and was wondering if that was part of the problem, but apparently not.</p>",
        "id": 219726026,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1607804422
    },
    {
        "content": "<p>Probably incremental, but not sure, maybe worth turning that off</p>",
        "id": 219726613,
        "sender_full_name": "simulacrum",
        "timestamp": 1607805359
    },
    {
        "content": "<p>I'll try running without incremental for a while and see how it goes</p>",
        "id": 219727657,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1607806767
    },
    {
        "content": "<p>Discussed this a bit with <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> in <a href=\"https://github.com/rust-lang/rust/issues/79946\">#79946</a>.</p>\n<p>It seems like this is highly likely to be related to rust-analyzer running in the background during compilation. The problem only occurs for me when I'm editing source during compilation and I have rust-analyzer going.</p>",
        "id": 220294819,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1608235545
    },
    {
        "content": "<p>I don't use rust-analyzer (though I should!) so that couldn't have been what caused mine.</p>",
        "id": 220307917,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608241786
    },
    {
        "content": "<p>I think it's unlikely it was the RLS since I often edit rust-lang/rust using plain Vim.</p>",
        "id": 220307994,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608241808
    },
    {
        "content": "<p>Though sometimes I use Sublime which will run the RLS but then the plugin crashes because rust-lang/rust is too much for it <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 220308061,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608241838
    },
    {
        "content": "<p>It may not be rust-analyzer specifically, but that it runs <code>cargo check</code> or <code>x.py check</code>. <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span>, do you have anything configured that might be running <code>cargo</code>/<code>x.py</code> while you're already compiling?</p>",
        "id": 220308475,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1608242059
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 220309300,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608242493
    },
    {
        "content": "<p>Unfortunately I forget what other things I was running when I ran into this.</p>",
        "id": 220309344,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608242517
    },
    {
        "content": "<p>But I definitely have incremental on.</p>",
        "id": 220309394,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608242525
    },
    {
        "content": "<p>I may have been using <code>--keep-stage-std 1</code> but I don't think that should affect this.</p>",
        "id": 220309425,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608242541
    },
    {
        "content": "<p>This just happened to me, and I've never used rust-analyzer</p>",
        "id": 221087454,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609185827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> can you post the exact error?</p>",
        "id": 221089227,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609187465
    },
    {
        "content": "<p>this has now appeared in three different contexts so I don't think they're actually the same bug, they're just all linker errors</p>",
        "id": 221089247,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609187487
    },
    {
        "content": "<p>sorry, I cleared my terminal output :/</p>",
        "id": 221089268,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187519
    },
    {
        "content": "<p>this is almost certainly not a linker bug</p>",
        "id": 221089320,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187545
    },
    {
        "content": "<p>this kind of thing has come up several times before</p>",
        "id": 221089324,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187560
    },
    {
        "content": "<p>and it's always been an issue with incremental compilation</p>",
        "id": 221089328,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187566
    },
    {
        "content": "<p>we incorrectly re-use an output object file from LLVM</p>",
        "id": 221089340,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187578
    },
    {
        "content": "<p>right, I ran into something similar with <a href=\"https://github.com/rust-lang/cargo/issues/8838\">https://github.com/rust-lang/cargo/issues/8838</a></p>",
        "id": 221089344,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609187581
    },
    {
        "content": "<p>I'll let you know if it happens again</p>",
        "id": 221089374,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187606
    },
    {
        "content": "<p>but my point is that similar errors <em>also</em> appear for <a href=\"https://github.com/rust-lang/rust/issues/76661\">https://github.com/rust-lang/rust/issues/76661</a> and whatever <a href=\"https://github.com/rust-lang/rust/issues/79946\">https://github.com/rust-lang/rust/issues/79946</a> is, so I don't think they're all the same root cause</p>",
        "id": 221089379,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609187615
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/76661\">https://github.com/rust-lang/rust/issues/76661</a> looks like a completely different error</p>",
        "id": 221089401,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187642
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79946\">https://github.com/rust-lang/rust/issues/79946</a> looks more like the other issues</p>",
        "id": 221089452,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187688
    },
    {
        "content": "<p>interesting, the error I got was also from a proc macro</p>",
        "id": 221089456,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187695
    },
    {
        "content": "<p><code>librustc_builtin_macros</code></p>",
        "id": 221089458,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187700
    },
    {
        "content": "<p>actually, nvm</p>",
        "id": 221089543,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187775
    },
    {
        "content": "<p><code>libwasm_bindgen_macro_support</code> depends on some typical proc-macro-related crates (e.g. <code>syn</code>), but is not itself a proc-macro</p>",
        "id": 221089560,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1609187805
    }
]