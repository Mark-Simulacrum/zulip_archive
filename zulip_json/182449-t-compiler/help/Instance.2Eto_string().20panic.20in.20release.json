[
    {
        "content": "<p>I'm  running into a panic from calling <code>.to_string()</code> on an instance of <code>rustc_middle::ty::instance::Instance</code> in release mode, despite the line working as expected in debug mode. Looking over the <a href=\"https://github.com/rust-lang/rust/blob/257782579915963c9dbe7433102275743837b9a8/compiler/rustc_middle/src/ty/instance.rs#L259\">implementation of</a> <code>Display</code>,  I don't see anything obvious that would cause a different in behavior in debug mode.</p>\n<p>This is happening in the context of a custom Rust backend in the <a href=\"https://github.com/model-checking/rmc\">RMC project</a>, and the exact line of code causing the issue can be seen in <a href=\"https://github.com/avanhatt/rmc/commit/70d460e81515832531712866006b63b6f2180fa4\">this commit</a>. Without this line, both debug and release do not panic/work as expected. </p>\n<p>The panic trace is listed below. I have <code>RUSTFLAGS=\"-Z trim-diagnostic-paths=no\"</code> set. </p>\n<p>I'm new to working with the Rust compiler internals, so please let me know if this is not the right place to ask for help!</p>\n<div class=\"codehilite\"><pre><span></span><code>error: internal compiler error: trimmed_def_paths constructed\n  |\n  = note: delayed at    0: std::backtrace_rs::backtrace::libunwind::trace\n                       at ./library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\n                std::backtrace_rs::backtrace::trace_unsynchronized\n                       at ./library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n                std::backtrace::Backtrace::create\n                       at ./library/std/src/backtrace.rs:327:13\n             1: std::backtrace::Backtrace::force_capture\n                       at ./library/std/src/backtrace.rs:310:9\n             2: rustc_errors::Handler::delay_good_path_bug\n             3: rustc_middle::ty::print::pretty::trimmed_def_paths\n             4: rustc_query_impl::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_query_impl::plumbing::QueryCtxt&gt; for rustc_query_impl::queries::trimmed_def_paths&gt;::compute\n             5: rustc_data_structures::stack::ensure_sufficient_stack\n             6: rustc_query_system::query::plumbing::get_query_impl\n             7: rustc_query_system::query::plumbing::get_query\n             8: &lt;rustc_middle::ty::print::pretty::FmtPrinter&lt;F&gt; as rustc_middle::ty::print::Printer&gt;::print_def_path\n             9: rustc_middle::ty::print::Printer::default_print_def_path\n            10: &lt;rustc_middle::ty::print::pretty::FmtPrinter&lt;F&gt; as rustc_middle::ty::print::Printer&gt;::print_def_path\n            11: rustc_middle::ty::print::Printer::default_print_def_path\n            12: &lt;rustc_middle::ty::print::pretty::FmtPrinter&lt;F&gt; as rustc_middle::ty::print::Printer&gt;::print_def_path\n            13: &lt;rustc_middle::ty::instance::Instance as core::fmt::Display&gt;::fmt\n            14: rustc_codegen_llvm::gotoc::&lt;impl rustc_codegen_llvm::gotoc::metadata::GotocCtx&gt;::declare_function\n            15: &lt;rustc_codegen_llvm::gotoc::GotocCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate\n            16: rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time\n            17: rustc_interface::passes::start_codegen\n            18: rustc_interface::passes::QueryContext::enter\n            19: rustc_interface::queries::Query&lt;T&gt;::compute\n            20: rustc_interface::queries::Queries::ongoing_codegen\n            21: rustc_driver::run_compiler::{{closure}}::{{closure}}\n                       at ./compiler/rustc_driver/src/lib.rs:414:13\n                rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n                       at ./compiler/rustc_interface/src/queries.rs:432:19\n            22: rustc_driver::run_compiler::{{closure}}\n                       at ./compiler/rustc_driver/src/lib.rs:313:22\n                rustc_interface::interface::create_compiler_and_run::{{closure}}\n                       at ./compiler/rustc_interface/src/interface.rs:208:13\n                rustc_span::with_source_map\n                       at ./compiler/rustc_span/src/lib.rs:870:5\n            23: rustc_interface::interface::create_compiler_and_run\n                       at ./compiler/rustc_interface/src/interface.rs:202:5\n            24: rustc_interface::interface::run_compiler::{{closure}}\n                       at ./compiler/rustc_interface/src/interface.rs:224:12\n                rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals::{{closure}}::{{closure}}\n                       at ./compiler/rustc_interface/src/util.rs:152:13\n                scoped_tls::ScopedKey&lt;T&gt;::set\n                       at /Users/avanhatt/.cargo/registry/src/github.com-1ecc6299db9ec823/scoped-tls-1.0.0/src/lib.rs:137:9\n            25: rustc_span::with_session_globals\n                       at ./compiler/rustc_span/src/lib.rs:104:5\n            26: rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals::{{closure}}\n                       at ./compiler/rustc_interface/src/util.rs:150:9\n                rustc_interface::util::scoped_thread::{{closure}}\n                       at ./compiler/rustc_interface/src/util.rs:125:24\n                std::sys_common::backtrace::__rust_begin_short_backtrace\n                       at ./library/std/src/sys_common/backtrace.rs:125:18\n            27: std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}\n                       at ./library/std/src/thread/mod.rs:481:17\n                &lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once\n                       at ./library/std/src/panic.rs:347:9\n                std::panicking::try::do_call\n                       at ./library/std/src/panicking.rs:401:40\n                std::panicking::try\n                       at ./library/std/src/panicking.rs:365:19\n            28: std::panic::catch_unwind\n                       at ./library/std/src/panic.rs:434:14\n                std::thread::Builder::spawn_unchecked::{{closure}}\n                       at ./library/std/src/thread/mod.rs:480:30\n                core::ops::function::FnOnce::call_once{{vtable.shim}}\n                       at ./library/core/src/ops/function.rs:227:5\n            29: &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once\n                       at ./library/alloc/src/boxed.rs:1575:9\n                &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once\n                       at ./library/alloc/src/boxed.rs:1575:9\n            30: std::sys::unix::thread::Thread::new::thread_start\n                       at ./library/std/src/sys/unix/thread.rs:71:17\n            31: __pthread_start\n\n\nthread &#39;rustc&#39; panicked at &#39;no warnings or errors encountered even though `delayed_good_path_bugs` issued&#39;, compiler/rustc_errors/src/lib.rs:1021:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.54.0-dev running on x86_64-apple-darwin\n\nnote: compiler flags: -Z codegen-backend=gotoc\n\nquery stack during panic:\nend of query stack\n</code></pre></div>",
        "id": 241434530,
        "sender_full_name": "Alexa VanHattum",
        "timestamp": 1622745772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"418083\">@Alexa VanHattum</span> Try wrapping the <code>.to_string()</code> call in a <code>rustc_middle::ty::print::with_no_trimmed_paths()</code> call. You shouldn't need <code>-Ztrim-diagnostic-path=no</code> in that case either.</p>",
        "id": 241434967,
        "sender_full_name": "bjorn3",
        "timestamp": 1622745974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> that seems to work, thank you so much!</p>",
        "id": 241435660,
        "sender_full_name": "Alexa VanHattum",
        "timestamp": 1622746297
    }
]