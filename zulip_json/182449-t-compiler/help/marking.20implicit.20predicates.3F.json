[
    {
        "content": "<p>it looks like by the time a TraitPredicate makes it to error reporting stages, there's no information on whether it originally came from an implicit bound (such as implicit <code>Sized</code> for type parameters). is it considered too expensive to tag them with that information?</p>",
        "id": 241332266,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1622676460
    },
    {
        "content": "<p>That kind of information can be stored in the <code>ObligationCause</code></p>",
        "id": 241336336,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622680022
    },
    {
        "content": "<p>as the original <code>Obligation</code> should be available in error reporting code</p>",
        "id": 241336349,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1622680041
    },
    {
        "content": "<p>thanks. <code>Bounds</code> (mostly dealt with in astconv) looks like the lowest level structure that still has knowledge of whether a set of bounds includes the implicit <code>Sized</code> bound. it looks like by the time my current function of interest <code>check_type_bounds</code> runs, any <code>Bounds</code> have been flattened to <code>Predicate</code>s or something like that, which lack that bit of information</p>",
        "id": 241340144,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1622684384
    }
]