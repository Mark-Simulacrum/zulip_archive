[
    {
        "content": "<p>Where is the sourcemap created? Specifically, I'm wondering how rustc knows what files it needs to load since I think it knows before it has figured out which modules are declared. Does it just glob-load <code>*.rs</code> files? Thanks!</p>",
        "id": 218139944,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606525626
    },
    {
        "content": "<p>The parser requests the source files from the <code>SourceMap</code> using <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/source_map/struct.SourceMap.html#method.load_file\"><code>SourceMap::load_file</code></a> in <a href=\"https://github.com/rust-lang/rust/blob/4ae328bef47dffcbf363e5ae873f419c06a5511d/compiler/rustc_parse/src/lib.rs#L151\"><code>try_file_to_source_file</code></a>. <code>SourceMap::load_file</code> in turn uses the <code>FileLoader</code> of the compilation session to load the source file. The default <code>FileLoader</code> reads directly from the disk.</p>",
        "id": 218159179,
        "sender_full_name": "bjorn3",
        "timestamp": 1606561164
    },
    {
        "content": "<p>Ah, so the files aren't loaded ahead-of-time?</p>",
        "id": 218186329,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606606523
    },
    {
        "content": "<p>no, that wouldn't work</p>",
        "id": 218186383,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606606591
    },
    {
        "content": "<p>you could have <code>#[path = \"Z:\\whatever.rs\"]</code></p>",
        "id": 218186387,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606606605
    },
    {
        "content": "<p>there's no way to preload that</p>",
        "id": 218186391,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606606624
    },
    {
        "content": "<p>Ah, I haven't heard of that attribute.</p>",
        "id": 218232802,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606687101
    },
    {
        "content": "<p>If we didn't allow loading from an arbitrary path, could we load all the <code>*.rs</code> files in the <code>src</code> directory in advance?</p>",
        "id": 218232815,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606687133
    },
    {
        "content": "<p>(i.e. in the driver)</p>",
        "id": 218232825,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606687143
    },
    {
        "content": "<p>I think so</p>",
        "id": 218233092,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606687531
    },
    {
        "content": "<p>It's what rust-analyzer does</p>",
        "id": 218233093,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606687537
    },
    {
        "content": "<p>and so far that only falls short when <code>#[path]</code> is involved, which is why <code>std::arch</code> doesn't get completed</p>",
        "id": 218233102,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1606687560
    }
]