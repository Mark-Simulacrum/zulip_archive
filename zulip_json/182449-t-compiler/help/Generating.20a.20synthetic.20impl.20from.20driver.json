[
    {
        "content": "<p>Hi!</p>\n<p>Is there anyway for a rustc driver to generate a synthetic implementation (like <code>Fn</code>/<code>FnMut</code>/<code>FnOnce</code>) during compilation?</p>",
        "id": 270178397,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1643708842
    },
    {
        "content": "<p>In my case I have a parallel <code>Fn</code> hierarchy and want to generate a trait impl for closures automatically</p>",
        "id": 270178426,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1643708861
    },
    {
        "content": "<p>I know that the <code>fn</code> traits are handled specially in the compiler ( :( ) but I can't figure out how I could create and inject a \"normal\" instance to trait resolution</p>",
        "id": 270178742,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1643709013
    },
    {
        "content": "<p>Is there a query I can override?</p>",
        "id": 270178798,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1643709038
    },
    {
        "content": "<p>hmm perhaps <code>trait_impls_of</code> ?</p>",
        "id": 270179526,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1643709302
    },
    {
        "content": "<p>still requires me to be able to generate <code>DefId</code>s at the very minimum :/</p>",
        "id": 270180010,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1643709533
    },
    {
        "content": "<p>Hmm, because the traits <code>fn / fnmut / fnonce</code> are treated specially for closures, the instances don't show up as part of <code>trait_impls_of</code></p>",
        "id": 270203903,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1643720102
    }
]