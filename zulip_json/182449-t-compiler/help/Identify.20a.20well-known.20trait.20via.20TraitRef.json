[
    {
        "content": "<p>Is is possible to easily compare/identify a <code>rustc_middle::TraitRef</code>? I want to skip <code>core::marker::Structural(Partial)Eq</code> and am currently doing it via pretty-printing with <code>def_path_str</code> (<code>def_path_str(def_id).contains(\"::marker::Structural\")</code> <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span> )</p>\n<p>It seems wasteful to print every trait candidate to only potentially skip these few. Is it possible to, let's say, get a def to <code>core::marker::StructuralEq</code> myself?</p>",
        "id": 217324743,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1605817008
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">structural_teq_def_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">require_lang_item</span><span class=\"p\">(</span><span class=\"n\">LangItem</span>::<span class=\"n\">StructuralTeq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">structural_peq_def_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">require_lang_item</span><span class=\"p\">(</span><span class=\"n\">LangItem</span>::<span class=\"n\">StructuralPeq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>seems to work =)</p>",
        "id": 217326148,
        "sender_full_name": "Igor Matuszewski",
        "timestamp": 1605817772
    }
]