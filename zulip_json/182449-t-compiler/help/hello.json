[
    {
        "content": "<p>Welcome to <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a>.</p>\n<p><strong>Description</strong>: Questions about hacking on the compiler</p>",
        "id": 156618260,
        "sender_full_name": "Welcome Bot",
        "timestamp": 1548174846
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44f\" title=\"clap\">:clap:</span> <span class=\"emoji emoji-1f44f\" title=\"clap\">:clap:</span> <span class=\"emoji emoji-1f44f\" title=\"clap\">:clap:</span></p>",
        "id": 156618333,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1548174921
    },
    {
        "content": "<p>me, trolling: \"what is a compiler?\"</p>",
        "id": 156618785,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1548175260
    },
    {
        "content": "<p>however is /help different from bare stream?</p>",
        "id": 156626427,
        "sender_full_name": "nagisa",
        "timestamp": 1548181362
    },
    {
        "content": "<p>The <code>/help</code> is just part of the stream name</p>",
        "id": 156626526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548181436
    },
    {
        "content": "<p>They are otherwise independent</p>",
        "id": 156626571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548181443
    },
    {
        "content": "<p>What I meant to ask is what prompted creation of this stream at all</p>",
        "id": 156627485,
        "sender_full_name": "nagisa",
        "timestamp": 1548182057
    },
    {
        "content": "<p>in the <a href=\"https://internals.rust-lang.org/t/compiler-steering-meeting/8588/31?u=nikomatsakis\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/compiler-steering-meeting/8588/31?u=nikomatsakis\">steering meeting on 2018.12.14</a>, we decided that this name would help newcomers feel welcome to ask questions</p>",
        "id": 156636296,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548188679
    },
    {
        "content": "<p>e.g., in and around <a href=\"#narrow/stream/131828-t-compiler/subject/steering.20meeting.202018-12-14/near/151782693\" title=\"#narrow/stream/131828-t-compiler/subject/steering.20meeting.202018-12-14/near/151782693\">this comment</a> =)</p>",
        "id": 156636330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1548188713
    },
    {
        "content": "<p>Hello<br>\nHow can I get <code>DefId</code> of a function from <code>std</code> in MIR? Is it appropriate to ask questions like that here?</p>",
        "id": 158646164,
        "sender_full_name": "maksimsco",
        "timestamp": 1550262078
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"202336\">@maksimsco</span> This is a good (and appropriate to ask here) question. If the function is a lang item (has a <code>#[lang=foo]</code> attribute), then you can go through <code>tcx.lang_items()</code>, if not, then there's currently no sensible way. What are you trying to achieve?</p>",
        "id": 158646448,
        "sender_full_name": "oli",
        "timestamp": 1550262310
    },
    {
        "content": "<p>There's currently an open PR which may add a way to get arbitrary functions from the libstd for diagnostic purposes: <a href=\"https://github.com/rust-lang/rust/pull/58070#issuecomment-462125065\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58070#issuecomment-462125065\">https://github.com/rust-lang/rust/pull/58070#issuecomment-462125065</a></p>",
        "id": 158646540,
        "sender_full_name": "oli",
        "timestamp": 1550262375
    },
    {
        "content": "<p>nondiagnostic purposes need  to make the relevant item a lang item</p>",
        "id": 158646551,
        "sender_full_name": "oli",
        "timestamp": 1550262388
    },
    {
        "content": "<p>@oli Wow, thanks. This is very helpful</p>",
        "id": 158647469,
        "sender_full_name": "maksimsco",
        "timestamp": 1550263201
    },
    {
        "content": "<p>Can someone exaplain a concept in MIR? <br>\nI can't understand what <code>rustc::mir::interpret::Scalar</code> is and why it works with <code>Scalar { size: 0, bits: 0 }</code> when constructing <code>tcx.mk_lazy_const</code> to a function?</p>",
        "id": 158697449,
        "sender_full_name": "maksimsco",
        "timestamp": 1550327095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"202336\">@maksimsco</span> a function (not a function pointer) is zero sized. So just like <code>()</code> it doesn't actually have any data. So, the <code>size</code> field is 0, because the number of valid bits in the <code>bits</code> field is zero. You are not allowed to read any of the bits.</p>",
        "id": 158704452,
        "sender_full_name": "oli",
        "timestamp": 1550337849
    },
    {
        "content": "<p>In order to represent such a value in the MIR, we construct a zero sized constant</p>",
        "id": 158704460,
        "sender_full_name": "oli",
        "timestamp": 1550337883
    },
    {
        "content": "<p>similar to how constructing a <code>true</code> literal would give you <code>Scalar { size: 1, bits: 1 }</code> and a <code>false</code> literal would give you <code>Scalar { size: 1, bits: 0 }</code></p>",
        "id": 158704471,
        "sender_full_name": "oli",
        "timestamp": 1550337918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> Thank you, very good explanation, got it!</p>",
        "id": 158705338,
        "sender_full_name": "maksimsco",
        "timestamp": 1550339421
    },
    {
        "content": "<p>Is it possible to use miri as standalone interpreter for independent *.rs files? So, could I run <code>miri hello.rs</code> ?</p>",
        "id": 158792806,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550489041
    },
    {
        "content": "<p>The miri's Github page has a text <code>An experimental interpreter for Rust's mid-level intermediate representation (MIR). It can run binaries</code>.  Can miri run binaries?</p>",
        "id": 158793009,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550489313
    },
    {
        "content": "<p>Yes, that should in fact work out of the box. If it does not, please open an issue</p>",
        "id": 158794661,
        "sender_full_name": "oli",
        "timestamp": 1550491413
    },
    {
        "content": "<p><code>miri simple.rs</code></p>\n<div class=\"codehilite\"><pre><span></span>warning: unused variable: `y`\n --&gt; simple.rs:3:9\n  |\n3 |     let y = 3*x + 3;\n  |         ^ help: consider prefixing with an underscore: `_y`\n  |\n  = note: #[warn(unused_variables)] on by default\n\nerror[E0080]: constant evaluation error: no mir for `std::rt::lang_start_internal`\n   |\n   = note: inside call to `std::rt::lang_start::&lt;()&gt;`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0080`.\n</pre></div>",
        "id": 158795778,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550492716
    },
    {
        "content": "<p>I didn't <code>cargo +nightly miri setup</code>. Should I do this command? What does it mean?</p>",
        "id": 158796088,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550493032
    },
    {
        "content": "<p>Yes, you need to do the setup and follow the instructions</p>",
        "id": 158796264,
        "sender_full_name": "oli",
        "timestamp": 1550493230
    },
    {
        "content": "<p>The setup compiles <code>libstd</code> with MIR for every single function in the <code>libstd</code></p>",
        "id": 158796315,
        "sender_full_name": "oli",
        "timestamp": 1550493257
    },
    {
        "content": "<p>Normally <code>libstd</code> only contains the MIR for functions which are not fully translated to llvm (e.g. generic functions or <code>#[inline]</code> functions)</p>",
        "id": 158796329,
        "sender_full_name": "oli",
        "timestamp": 1550493302
    },
    {
        "content": "<p>After <code>cargo +nightly miri setup</code> there's the same error.</p>",
        "id": 158796562,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550493561
    },
    {
        "content": "<p>From docs: <code>miri const evaluator</code>. What does it means <code>const</code>? It means that miri evaluate constant (fixed) mir code? Or something else?</p>",
        "id": 158800359,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550497102
    },
    {
        "content": "<p>hm, sounds like outdated docs ;)</p>",
        "id": 158807516,
        "sender_full_name": "oli",
        "timestamp": 1550503687
    },
    {
        "content": "<p>is that in the miri-repo?</p>",
        "id": 158807520,
        "sender_full_name": "oli",
        "timestamp": 1550503692
    },
    {
        "content": "<p>or in the rustc docs?</p>",
        "id": 158807526,
        "sender_full_name": "oli",
        "timestamp": 1550503700
    },
    {
        "content": "<p><code>An experimental interpreter for Rust's mid-level intermediate representation (MIR). It can run binaries</code> Can miri run binaries? ||| Source: <a href=\"https://github.com/rust-lang/miri/blob/master/README.md\" target=\"_blank\" title=\"https://github.com/rust-lang/miri/blob/master/README.md\">https://github.com/rust-lang/miri/blob/master/README.md</a>  , see the first line.</p>",
        "id": 158814886,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550510046
    },
    {
        "content": "<p>Source: <a href=\"https://rust-lang.github.io/rustc-guide/miri.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/miri.html\">https://rust-lang.github.io/rustc-guide/miri.html</a>, please see 26.1 <code>miri const evaluator</code>.  What does it means <code>const</code>? It means that miri evaluate constant (fixed) mir code? Or something else?</p>",
        "id": 158815262,
        "sender_full_name": "Alexey Melnikov",
        "timestamp": 1550510358
    },
    {
        "content": "<p>ah indeed, that is a misnomer. it's a <code>miri-engine based const evalutor</code></p>",
        "id": 158822453,
        "sender_full_name": "oli",
        "timestamp": 1550517373
    },
    {
        "content": "<p>not to be confused with <code>miri</code> the tool</p>",
        "id": 158822456,
        "sender_full_name": "oli",
        "timestamp": 1550517381
    },
    {
        "content": "<p>Although it's a good idea to start a new Zulip topic for each new... topic...</p>",
        "id": 158838379,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1550534953
    },
    {
        "content": "<p>If zulip had the ability to mark topics as resolved, that would be much clearer I think</p>",
        "id": 158857313,
        "sender_full_name": "oli",
        "timestamp": 1550564570
    },
    {
        "content": "<p>Hi, I've been trying to understand the rust compiler and have noticed a function name which is a bit strange in the <code>hir/map</code> namespace: <code>maybe_body_owned_by_by_hir_id</code>. I suspect the <code>_by_by_</code> is a typo..?</p>\n<p>I could submit a PR but I'm not sure what the etiquette on fixing minor typos such as this is? Open an issue first?</p>",
        "id": 168440702,
        "sender_full_name": "Thomas Mulvaney",
        "timestamp": 1560881751
    },
    {
        "content": "<p>PRs fixing minor typos are generally well received even without an issue. If fixing the typo requires changing a lot of code, it will be harder to land your PR though.</p>",
        "id": 168442274,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1560882747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> thanks for the info! I'll open a PR then.</p>",
        "id": 168443250,
        "sender_full_name": "Thomas Mulvaney",
        "timestamp": 1560883353
    },
    {
        "content": "<p>I think this has already been fixed in a PR</p>",
        "id": 168456073,
        "sender_full_name": "centril",
        "timestamp": 1560892505
    }
]