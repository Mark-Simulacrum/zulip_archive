[
    {
        "content": "<p>Hello everyone! I am trying to investigate an issue that I reported <a href=\"https://github.com/rust-lang/rust/issues/71104\" title=\"https://github.com/rust-lang/rust/issues/71104\">https://github.com/rust-lang/rust/issues/71104</a><br>\nAnd _i think_ that declarative macro 2.0 in closure are not lowered to hir properly. Looking at the <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/rustdoc/macro-in-closure.rs\" title=\"https://github.com/rust-lang/rust/blob/master/src/test/rustdoc/macro-in-closure.rs\">https://github.com/rust-lang/rust/blob/master/src/test/rustdoc/macro-in-closure.rs</a> test case, i end up in a situation where the def id does not have a corresponding hir id</p>",
        "id": 196074662,
        "sender_full_name": "marmeladema",
        "timestamp": 1588461517
    },
    {
        "content": "<p>Does that seem sensible?</p>",
        "id": 196074663,
        "sender_full_name": "marmeladema",
        "timestamp": 1588461523
    },
    {
        "content": "<p>so the bug is triggered because the declarative macro is appended to the <code>exported_macros</code> vec and later on rustdoc tries to access the parent def id of the macro, which is not properly lowered because its a closure</p>",
        "id": 196076796,
        "sender_full_name": "marmeladema",
        "timestamp": 1588465668
    },
    {
        "content": "<p>should a declarative macro be exported when defined in a closure?</p>",
        "id": 196076998,
        "sender_full_name": "marmeladema",
        "timestamp": 1588466019
    },
    {
        "content": "<p>I filled a bug for this in case I forget: <a href=\"https://github.com/rust-lang/rust/issues/71820\" title=\"https://github.com/rust-lang/rust/issues/71820\">https://github.com/rust-lang/rust/issues/71820</a></p>",
        "id": 196078758,
        "sender_full_name": "marmeladema",
        "timestamp": 1588469213
    },
    {
        "content": "<p>I'd like to fix this issue to understand the internals of the compiler, would someone be ready to mentor me? I have a few questions</p>",
        "id": 196117526,
        "sender_full_name": "marmeladema",
        "timestamp": 1588532678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> if you have some time :) its about lowering of declararive macro</p>",
        "id": 196118550,
        "sender_full_name": "marmeladema",
        "timestamp": 1588534247
    },
    {
        "content": "<p>Not sure about the details, but my first question here is what happens with non-macro items?</p>",
        "id": 196175763,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588596807
    },
    {
        "content": "<p>(Non-macro items if they are defined in a closure.)</p>",
        "id": 196175797,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588596838
    },
    {
        "content": "<p>Macro items should then behave identically.</p>",
        "id": 196175852,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588596862
    },
    {
        "content": "<p>In general, I'm not sure why macros are lowered into a separate list in HIR.</p>",
        "id": 196176053,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588596994
    },
    {
        "content": "<p>Perhaps then need to be lowered into regular HIR items since they need to exist until metadata encoding and metadata encoding is performed on HIR.</p>",
        "id": 196176126,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588597047
    },
    {
        "content": "<p>Anyway, doing that is probably not necessary for resolving the issue with IDs, it's likely that macros can do same things with IDs like other items while still being stored in a separate list.</p>",
        "id": 196176238,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588597125
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> ok ill try to understand how it works for other items. On the same topic, i see that now declarative macros have a visibility token associated pub/pub(crate)/etc. Should a macro without pub/pub(crate) inside a closure be exported (ie: made public)?</p>",
        "id": 196215775,
        "sender_full_name": "marmeladema",
        "timestamp": 1588614585
    },
    {
        "content": "<p>Same logic \"macro items should behave like other items\" applies here.</p>",
        "id": 196216245,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588614834
    },
    {
        "content": "<p>We encode all items, even private ones.<br>\nThey are used in diagnostics, at the very least.</p>",
        "id": 196216382,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588614891
    },
    {
        "content": "<p>I checked for regular macro rules, and if the macro_export attribute is not present, they are not part of the hir tree</p>",
        "id": 196216858,
        "sender_full_name": "marmeladema",
        "timestamp": 1588615118
    },
    {
        "content": "<p>I managed to reproduce it using regular macro rules so i guess its a more generic issue</p>",
        "id": 196245426,
        "sender_full_name": "marmeladema",
        "timestamp": 1588629861
    },
    {
        "content": "<p>Is this really supposed to be working: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=b0a0cf8828275c5be13a89d96df1b19b\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=b0a0cf8828275c5be13a89d96df1b19b\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=b0a0cf8828275c5be13a89d96df1b19b</a> ??</p>",
        "id": 196251329,
        "sender_full_name": "marmeladema",
        "timestamp": 1588634112
    },
    {
        "content": "<p>#[macro_export] exposes the macro to the whole current module/crate? No matter where the macro is defined?</p>",
        "id": 196251356,
        "sender_full_name": "marmeladema",
        "timestamp": 1588634149
    },
    {
        "content": "<p>Yep, that's how it works.<br>\n<code>#[macro_export]</code> plants the macro into the crate root, so it's available as <code>that_crate::mac</code> to other crates and as <code>crate::mac</code> to this crate.</p>",
        "id": 196253239,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588635888
    },
    {
        "content": "<p>Compatibility with macros 1.0.</p>",
        "id": 196253281,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1588635926
    },
    {
        "content": "<p>Ok</p>",
        "id": 196253409,
        "sender_full_name": "marmeladema",
        "timestamp": 1588636078
    },
    {
        "content": "<p>and in term of hir, i tried to understand how other thing works when within a closure but macros are kind of the only thing that can be defined inside a closure and be visible outside</p>",
        "id": 196253482,
        "sender_full_name": "marmeladema",
        "timestamp": 1588636122
    },
    {
        "content": "<p>so i don't know how in that case they should be lowered, basically i don't know if 1/ the closure should be lowered differently or 2/ the exported macros should belong to the module directly</p>",
        "id": 196253597,
        "sender_full_name": "marmeladema",
        "timestamp": 1588636204
    },
    {
        "content": "<p>I tried to avoid the bug (not really fix it) by calling <code>get_parent_did</code> instead of <code>DefIdTree::parent</code> to get the parent hir_id: <a href=\"https://github.com/rust-lang/rust/pull/72039\" title=\"https://github.com/rust-lang/rust/pull/72039\">https://github.com/rust-lang/rust/pull/72039</a><br>\nBut now it fails in other tests with a </p>\n<div class=\"codehilite\"><pre><span></span><code>error: internal compiler error: src/librustc_mir/monomorphize/collector.rs:761: cannot create local mono-item for DefId(15:5 ~ nested_fn_macro[8787]::n[0]::p[0]::f[0])\n</code></pre></div>",
        "id": 196987500,
        "sender_full_name": "marmeladema",
        "timestamp": 1589024327
    },
    {
        "content": "<p>If anyone with experiences around macro and lowering has some spare time, i could really use some help :)</p>",
        "id": 196987756,
        "sender_full_name": "marmeladema",
        "timestamp": 1589024684
    }
]