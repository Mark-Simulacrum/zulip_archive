[
    {
        "content": "<p>I'm trying to verify some new Rust coverage tests locally on my Mac (in <code>run-make-fulldeps</code>) based on a new PR that works on Linux. I fetched and checked out the changes, but the tests are being ignored. When I add <code>--test-args --ignored</code>, the compiler says:</p>\n<div class=\"codehilite\"><pre><span></span><code>can&#39;t find crate for `profiler_builtins`\n</code></pre></div>\n<p>This worked last week with the same config.toml, but just to be sure, I refreshed my config.toml from the latest <code>config.toml.example</code>, and turned on <code>profiler = true</code>, but got the same result.</p>\n<p>Is there a known issue here?</p>",
        "id": 216955752,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605575938
    },
    {
        "content": "<p>Note, I see the <code>profiler_builtins</code> lib in stage0:</p>\n<div class=\"codehilite\"><pre><span></span><code>build/x86_64-apple-darwin/stage0/lib/rustlib/x86_64-apple-darwin/lib/libprofiler_builtins-8b23e17aa76539a7.rlib\n</code></pre></div>\n<p>but it's not in stage1</p>",
        "id": 216956017,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605576179
    },
    {
        "content": "<p>these are the only changes I made from a recent (today) <code>config.toml.example</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>&gt; ninja = true\n268a269\n&gt; profiler = true\n357a359\n&gt; debug = true\n433a436\n&gt; incremental = true\n437a441\n&gt; parallel-compiler = true\n</code></pre></div>",
        "id": 216956131,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605576273
    },
    {
        "content": "<p>Fulldeps tests don't work with stage 1</p>",
        "id": 216956528,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605576694
    },
    {
        "content": "<p>You need --stage 2</p>",
        "id": 216956539,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605576712
    },
    {
        "content": "<p>Actually it's not just MacOS. <code>run-make-fulldeps</code> just wrapped up for my Windows test, and I have the same problem there as well.</p>",
        "id": 216956597,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605576741
    },
    {
        "content": "<p>OK, maybe I'm building differently, starting with just <code>./x.py test ...</code> (without having done <code>x.py build</code> first. If this isn't a recent change, that's probably the reason. Thanks.</p>",
        "id": 216956669,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605576829
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 216956728,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605576874
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 216956747,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605576899
    },
    {
        "content": "<p>Sorry, mobile zulip is buggy</p>",
        "id": 216956762,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605576928
    },
    {
        "content": "<p>I'm kind of surprised this didn't work: <code>./x.py test src/test/run-make-fulldeps/coverage --stage 2</code></p>\n<p>So now I'm running <code>./x.py build</code> by itself, first, and then after that I'll try the tests again. (I'm surprised I'm having problems with this. This seems like a new dependency issue.)</p>",
        "id": 216959142,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605579331
    },
    {
        "content": "<p>hmm that should have worked :/</p>",
        "id": 216959203,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605579366
    },
    {
        "content": "<p>Yeah, still not working after <code>./x.py build</code> either</p>",
        "id": 216959208,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605579380
    },
    {
        "content": "<p>it's the same error that <code>profiler_builtins</code> isn't found?</p>",
        "id": 216959214,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605579393
    },
    {
        "content": "<p>yeah, it's not there. Just under stage0.</p>",
        "id": 216959224,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605579409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Are you aware of any recent changes to how <code>profiler_builtins</code> is built?</p>",
        "id": 216959942,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605580142
    },
    {
        "content": "<p>Ah... <a href=\"https://github.com/rust-lang/rust/pull/78354\">https://github.com/rust-lang/rust/pull/78354</a></p>",
        "id": 216960184,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605580432
    },
    {
        "content": "<p>that landed 5 days ago</p>",
        "id": 216960223,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605580444
    },
    {
        "content": "<p>The timing is right.</p>\n<p>I don't think it's working intuitively</p>",
        "id": 216960235,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605580474
    },
    {
        "content": "<p>Oh hm, I did not approve that change...</p>",
        "id": 216960266,
        "sender_full_name": "simulacrum",
        "timestamp": 1605580525
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> please be more careful when approving for others, I had asked to do another read through on <a href=\"https://github.com/rust-lang/rust/issues/78354\">#78354</a></p>",
        "id": 216960282,
        "sender_full_name": "simulacrum",
        "timestamp": 1605580559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296355\">@Rich Kadel</span> I'm not sure that profilers ever worked on macOS? But if that change in question is causing problems, please feel free to provide feedback - I would not expect it to break things if profiler = true is specified, I think, but I have not done a thorough review of the code yet</p>",
        "id": 216960417,
        "sender_full_name": "simulacrum",
        "timestamp": 1605580696
    },
    {
        "content": "<p>It definitely worked. I was testing with it regularly.</p>",
        "id": 216960427,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605580720
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/78354\">#78354</a> copies the (commented out) <code>#profiler = false</code> line from the <code>rust</code> section to the sample target (<code>linux</code>) section, and bootstrap has changes related to this.</p>\n<p>I have a feeling that changing <code>profiler = true</code> in rust is not changing the \"target-specific default\" (just a guess mind-you). I'm trying to explicitly set the <code>profiler</code> setting for <code>darwin</code> to see if that works.</p>",
        "id": 216960536,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605580879
    },
    {
        "content": "<p>I see it's building profiler-builtins now, with that config.toml change</p>",
        "id": 216960597,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605580941
    },
    {
        "content": "<p>I think the new target-specific settings, if not set, need to default to the non-specific setting; but it's not working that way today.</p>",
        "id": 216960697,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605581064
    },
    {
        "content": "<p>(I said \"rust\" section but in config.toml it is the \"build\" section. Sorry.)</p>",
        "id": 216960877,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605581293
    },
    {
        "content": "<p>I'm adding a note to the PR now.</p>",
        "id": 216960889,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605581306
    },
    {
        "content": "<p>Just to be clear, profiler_builtins does work on Linux, Mac, and Windows, and the new Rust LLVM InstrProf source-based coverage feature depends on this library.  I do often build on all three platforms, e.g., to debug platform-dependent issues, particularly in the tests.</p>",
        "id": 216961836,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605582433
    },
    {
        "content": "<p>I filed <a href=\"https://github.com/rust-lang/rust/issues/79124\">#79124</a>, per Mark's recommendation, and I confirmed the workaround. My tests work after making the following change to config.toml:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[target.x86_64-apple-darwin]</span>\n<span class=\"n\">profiler</span> <span class=\"o\">=</span> <span class=\"n\">toml</span>\n</code></pre></div>\n<p>(Change the target to whatever target you're compiling for.)</p>",
        "id": 216962863,
        "sender_full_name": "Rich Kadel",
        "timestamp": 1605583745
    }
]