[
    {
        "content": "<p>Hi all! I'm wondering if <em>post-optimization</em> MIR is guaranteed to be reducible - specifically, the BBs output by rustc_codegen_ssa. If so, is there any guarantees it will continue to be going forwards? If not, do you know of an example that isn't?<br>\n(I'm kind of surprised that I looked all over and couldn't find an answer to this anywhere, heh)</p>",
        "id": 213386431,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602745493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330900\">@Ashley Hauck</span> I don't think it is guaranteed anywhere. I only know that the successor of calls is guaranteed to only have a single predecessor. <a href=\"https://github.com/rust-lang/rust/blob/93deabce03dc10a80244f5da3e3819452744da2a/compiler/rustc_mir/src/transform/add_call_guards.rs\">https://github.com/rust-lang/rust/blob/93deabce03dc10a80244f5da3e3819452744da2a/compiler/rustc_mir/src/transform/add_call_guards.rs</a> cg_llvm assumes so it can add the return value storage code to the destination block instead of creating a new block just for this. <a href=\"https://github.com/rust-lang/rust/issues/67161\">#67161</a></p>",
        "id": 213390967,
        "sender_full_name": "bjorn3",
        "timestamp": 1602748892
    },
    {
        "content": "<p>I can't think of any way the current mir optimizations could create an irreducible CFG. It could plausibly happen in the future though.</p>",
        "id": 213391076,
        "sender_full_name": "bjorn3",
        "timestamp": 1602748972
    },
    {
        "content": "<p>okay, thanks so much!</p>",
        "id": 213391553,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1602749265
    }
]