[
    {
        "content": "<p>I'm trying to get debug statements from rustc when building a project using cargo. The project is a library with a single dependency. </p>\n<p>I do get the output of RUSTC_LOG printed to the console, but the weird thing is that I get the same output in different build calls. I use the standard dev profile settings. After I build from scratch using <code>RUSTC_LOG=rustc_typeck</code> and then run the build command again I get the same debug output printed to the console that I got in the first build call?! Does anybody know why that is and what I can do to only get the debug output of the second 'unchanged' build run?</p>",
        "id": 268370134,
        "sender_full_name": "BN",
        "timestamp": 1642501240
    },
    {
        "content": "<p>What probably happens is that cargo caches rustc output and rustc does not run at all in the \"unchanged\" scenario.</p>",
        "id": 268370682,
        "sender_full_name": "tm",
        "timestamp": 1642501546
    },
    {
        "content": "<p>Thanks for the answer.</p>",
        "id": 268372028,
        "sender_full_name": "BN",
        "timestamp": 1642502350
    },
    {
        "content": "<p>I have had a perf regression in the unchanged-incr scenario for the benchmark <code>issue-46449</code>. I find this confusing given your explanation. What is the perf tool measuring? Why would we ever get regressions on any benchmark if cargo doesn't run rustc in the <code>unchanged-incr</code> scenario?</p>",
        "id": 268372540,
        "sender_full_name": "BN",
        "timestamp": 1642502615
    },
    {
        "content": "<p><a href=\"https://perf.rust-lang.org/compare.html?start=488acf86a75c56d30b16822e953c505a9e4901a7&amp;end=fcb93cd944d39604d20b8ea2ec20a15d08c2f84b\">https://perf.rust-lang.org/compare.html?start=488acf86a75c56d30b16822e953c505a9e4901a7&amp;end=fcb93cd944d39604d20b8ea2ec20a15d08c2f84b</a></p>",
        "id": 268372570,
        "sender_full_name": "BN",
        "timestamp": 1642502631
    },
    {
        "content": "<p>It updates timestamps of some / all files in the project, without changing their content.</p>",
        "id": 268373405,
        "sender_full_name": "tm",
        "timestamp": 1642503105
    },
    {
        "content": "<p>If you are testing things manually touch src/lib.rs should do the trick, but I would recommend using rustc-perf if looking at official benchmarks.</p>",
        "id": 268373978,
        "sender_full_name": "tm",
        "timestamp": 1642503443
    }
]