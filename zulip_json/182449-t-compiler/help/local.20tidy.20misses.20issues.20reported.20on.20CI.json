[
    {
        "content": "<p>I ran a <code>./x.py test tidy</code> locally, pushed the branch and then got a CI failure on a file that isn't dirty. Any idea what might be causing this? running <code>./x.py fmt</code> also doesn't change it.</p>",
        "id": 245553198,
        "sender_full_name": "The 8472",
        "timestamp": 1625927338
    },
    {
        "content": "<p>What error did you get?</p>",
        "id": 245554028,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1625928214
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/87025#issuecomment-877645205\">https://github.com/rust-lang/rust/pull/87025#issuecomment-877645205</a></p>",
        "id": 245554101,
        "sender_full_name": "The 8472",
        "timestamp": 1625928277
    },
    {
        "content": "<p>did you run <code>./x.py fmt</code> exactly like that, or did you specify some directory names? i found that sometimes misses stuff that's caught by the full <code>./x.py fmt</code></p>",
        "id": 245558184,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625932661
    },
    {
        "content": "<p>Exactly <code>./x.py fmt</code>, yes.</p>",
        "id": 245558513,
        "sender_full_name": "The 8472",
        "timestamp": 1625932972
    },
    {
        "content": "<p>yeah those particular kinds of changes from rustfmt look really familiar. i wonder if it's a stable vs beta thing? or in-tree vs not?</p>",
        "id": 245558756,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1625933264
    },
    {
        "content": "<p>Hrrm, maybe <code>x.py fmt --stage 1</code> should build rustfmt and use that. Or tidy could use it opportunistically if it has been built.</p>",
        "id": 245558836,
        "sender_full_name": "The 8472",
        "timestamp": 1625933385
    },
    {
        "content": "<p>x.py uses a nightly rustfmt, it's neither in-tree nor beta. You can see the version in src/stage0.txt.</p>\n<p>I don't think having a fmt --stage 1 command is useful - at best it does nothing, at worst it behaves differently, which will actually break when you push to CI. Gating on stage 1 is really painful for people working on the standard library, since they now need a compiler build no matter what.</p>",
        "id": 245559338,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934091
    },
    {
        "content": "<p>If it uses nightly then what could cause it to behave differently compared to CI?</p>",
        "id": 245559531,
        "sender_full_name": "The 8472",
        "timestamp": 1625934309
    },
    {
        "content": "<p>Oh you mean a nightly build from the rustfmt repository?</p>",
        "id": 245559545,
        "sender_full_name": "The 8472",
        "timestamp": 1625934341
    },
    {
        "content": "<p>I don't know, sorry. You can check to see if you've modified stage 0.txt by accident maybe? Or do you have RUSTFMT set in your environment?</p>",
        "id": 245559557,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> I mean a nightly toolchain, like the ones distributed by rustup</p>",
        "id": 245559609,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934381
    },
    {
        "content": "<p>(but x.py downloads it directly instead of going through rustup)</p>",
        "id": 245559627,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934406
    },
    {
        "content": "<p><code>src/stage0.txt</code> is unmodified according to git. RUSTFMT is not set. I do have a dirty cargo submodule though.</p>",
        "id": 245559642,
        "sender_full_name": "The 8472",
        "timestamp": 1625934465
    },
    {
        "content": "<p>Hmm, do you have rustc = ... in config.toml?</p>",
        "id": 245559690,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934496
    },
    {
        "content": "<p>Oh! You may need to rebase over master if this branch is highly outdated, stage0.txt may have changed in the meantime</p>",
        "id": 245559701,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934532
    },
    {
        "content": "<p>no <code>rustc =</code></p>\n<div class=\"codehilite\"><pre><span></span><code>$ git fetch upstream &amp;&amp; git rebase upstream/master\nCurrent branch opt-dropless-arena-from-iter is up to date.\n</code></pre></div>",
        "id": 245559798,
        "sender_full_name": "The 8472",
        "timestamp": 1625934662
    },
    {
        "content": "<p>Yeah I'm baffled</p>",
        "id": 245559805,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934674
    },
    {
        "content": "<p>Sorry :/</p>",
        "id": 245559807,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625934678
    },
    {
        "content": "<p>Running the exact command listed as failing by CI (without checkout replaced with an absolute path to the root of your repository) may be helpful... but this does look strange. Not expected behavior for sure.</p>",
        "id": 245560552,
        "sender_full_name": "simulacrum",
        "timestamp": 1625935798
    },
    {
        "content": "<p>hmm, this happened in another PR too: <a href=\"https://github.com/rust-lang/rust/pull/73936#issuecomment-877705438\">https://github.com/rust-lang/rust/pull/73936#issuecomment-877705438</a></p>",
        "id": 245573160,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1625952978
    }
]