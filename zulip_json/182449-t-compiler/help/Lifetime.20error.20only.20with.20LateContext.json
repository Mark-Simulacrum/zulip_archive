[
    {
        "content": "<p>I put the following code in rustc_lint/src/builtin.rs and I get a lifetime error on the last line. I can't reproduce the error with anything other than <code>LateContext</code>. What am I missing?</p>\n<p>Also, I first ran into this in clippy, but there the error looked different and was less helpful: \"these two types are declared with different lifetimes...\" but it's not about two types.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">bok_ref</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"nc\">std</span>::<span class=\"n\">cell</span>::<span class=\"n\">Ref</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">bok_cx</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">_</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"nc\">LateContext</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">test</span><span class=\"p\">(</span><span class=\"n\">rf</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">std</span>::<span class=\"n\">cell</span>::<span class=\"n\">Ref</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">LateContext</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">bok_ref</span><span class=\"p\">(</span><span class=\"n\">rf</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">bok_cx</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 239590644,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1621517195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"360405\">@Cameron Steffen</span> Can you paste the error you're getting?</p>",
        "id": 239591588,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621517581
    },
    {
        "content": "<p>in rustc</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>error: lifetime may not live long enough\n   --&gt; compiler/rustc_lint/src/builtin.rs:167:5\n    |\n164 | pub fn test(x: &amp;X&lt;'_&gt;, rf: &amp;std::cell::Ref&lt;'_, u32&gt;, cx: &amp;LateContext&lt;'_&gt;) {\n    |                                                          -            -- let's call this `'2`\n    |                                                          |\n    |                                                          let's call the lifetime of this reference `'1`\n...\n167 |     bok_cx(cx);\n    |     ^^^^^^^^^^ argument requires that `'1` must outlive `'2`\n</code></pre></div>\n<p>in clippy</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>error[E0623]: lifetime mismatch\n  --&gt; src/tools/clippy/clippy_utils/src/hir_utils.rs:31:12\n   |\n28 | pub fn test(x: &amp;X&lt;'_&gt;, rf: &amp;std::cell::Ref&lt;'_, u32&gt;, cx: &amp;LateContext&lt;'_&gt;) {\n   |                                                          ----------------\n   |                                                          |\n   |                                                          these two types are declared with different lifetimes...\n...\n31 |     bok_cx(cx);\n   |            ^^ ...but data from `cx` flows into `cx` here\n\nerror: aborting due to previous error\n</code></pre></div>",
        "id": 239591729,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1621517628
    },
    {
        "content": "<p>here's a reproduction: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=3264cce0c703449fdb25e42b5aaadd55\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=3264cce0c703449fdb25e42b5aaadd55</a></p>",
        "id": 239591839,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621517663
    },
    {
        "content": "<p>the issue is that <code>LateContext</code> is invariant over its lifetime</p>",
        "id": 239591887,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621517674
    },
    {
        "content": "<p><code>LateContext</code>contains a <code>Cell&lt;Option&lt;&amp;'tcx TypeckResults&lt;'tcx&gt;&gt;&gt;</code> which makes it invariant over its lifetime</p>",
        "id": 239591906,
        "sender_full_name": "Giacomo Stevanato",
        "timestamp": 1621517679
    },
    {
        "content": "<p>I'm working on <a href=\"https://github.com/rust-lang/rust/pull/85343\">https://github.com/rust-lang/rust/pull/85343</a>, which will improve the error message</p>",
        "id": 239592010,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621517724
    },
    {
        "content": "<p>thank you! I'll have to read the nomicon to understand...</p>",
        "id": 239592259,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1621517823
    },
    {
        "content": "<p>any idea why the error differs?</p>",
        "id": 239592294,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1621517837
    },
    {
        "content": "<p>The error in rustc occurs because the crate gets built with <code>#![feature(nll)]</code> or <code>-Z borrowck=mir</code></p>",
        "id": 239592748,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621518014
    },
    {
        "content": "<p>for whatever reason, that's not happening with clippy</p>",
        "id": 239592776,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621518023
    },
    {
        "content": "<p>So the better error message is basically an unstable feature?</p>",
        "id": 239592875,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1621518061
    },
    {
        "content": "<p>sort of - <code>#![feature(nll)]</code> performs 'more' borrow-checking on the MIR. That enables us to accept more code, and also produces nicer errors in some cases</p>",
        "id": 239593249,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621518198
    },
    {
        "content": "<p>Sure enough. I got the better error in clippy. Should we add <code>#![feature(nll)]</code>?</p>",
        "id": 239593607,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1621518334
    }
]