[
    {
        "content": "<p>Is there a way to see types of temporaries in mir dumps somehow? For example instead of <code>_1 = ...</code> I'd like to see <code>_1: &lt;type&gt; = ...</code>.</p>",
        "id": 225668553,
        "sender_full_name": "osa1",
        "timestamp": 1612866263
    },
    {
        "content": "<p>The types are defined at the top of the mir. Eg</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// WARNING: This output format is intended for human consumers only</span>\n<span class=\"c1\">// and is subject to change without notice. Knock yourself out.</span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_0</span>: <span class=\"p\">();</span><span class=\"w\">                      </span><span class=\"c1\">// return place in scope 0 at src/main.rs:1:11: 1:11</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_1</span>: <span class=\"p\">();</span><span class=\"w\">                          </span><span class=\"c1\">// in scope 0 at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/std/src/macros.rs:95:9: 95:62</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_2</span>: <span class=\"nc\">std</span>::<span class=\"n\">fmt</span>::<span class=\"n\">Arguments</span><span class=\"p\">;</span><span class=\"w\">     </span><span class=\"c1\">// in scope 0 at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/std/src/macros.rs:95:28: 95:61</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_3</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">];</span><span class=\"w\">                 </span><span class=\"c1\">// in scope 0 at src/main.rs:2:14: 2:29</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_4</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">];</span><span class=\"w\">              </span><span class=\"c1\">// in scope 0 at src/main.rs:2:14: 2:29</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_5</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">];</span><span class=\"w\">                  </span><span class=\"c1\">// in scope 0 at src/main.rs:2:14: 2:29</span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 225669413,
        "sender_full_name": "bjorn3",
        "timestamp": 1612866815
    },
    {
        "content": "<p>Ah, I missed that as the output is large and never bothered to read it from the beginning. Thanks!</p>",
        "id": 225671147,
        "sender_full_name": "osa1",
        "timestamp": 1612867811
    }
]