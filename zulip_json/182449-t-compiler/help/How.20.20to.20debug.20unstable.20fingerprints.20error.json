[
    {
        "content": "<p>Can anyone give any insights in how I might approach debugging <a href=\"https://github.com/rust-lang/rust/pull/82272#issuecomment-824561341\">https://github.com/rust-lang/rust/pull/82272#issuecomment-824561341</a>? Maybe some background on <em>what</em> this error even is?</p>",
        "id": 235696024,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619104325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232957\">@Jack Huey</span> this is an error from <code>-Z incremental-verify-ich</code>, which is on by default since recently: <a href=\"https://github.com/rust-lang/rust/pull/83007\">https://github.com/rust-lang/rust/pull/83007</a></p>",
        "id": 235696121,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619104363
    },
    {
        "content": "<p>it means that the query system is incorrectly caching something that has changed</p>",
        "id": 235696170,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619104384
    },
    {
        "content": "<p>Right, that's about the limit of what I know</p>",
        "id": 235699072,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105504
    },
    {
        "content": "<p>But don't really know about how to approach fixing it</p>",
        "id": 235699094,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105516
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20.20to.20debug.20unstable.20fingerprints.20error/near/235696170\">said</a>:</p>\n<blockquote>\n<p>it means that the query system is incorrectly caching something that has changed</p>\n</blockquote>\n<p>Can you elaborate on that?</p>",
        "id": 235699190,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105549
    },
    {
        "content": "<p>hmm well I don't know how HashStable works internally, but hashing an Rc sounds dubious</p>",
        "id": 235699193,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105550
    },
    {
        "content": "<p>does that mean it will hash the strong and weak counts as well?</p>",
        "id": 235699214,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105560
    },
    {
        "content": "<p>Hmm. Well, I'm removing that bit, so let's see if that fixes it</p>",
        "id": 235699509,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105659
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20.20to.20debug.20unstable.20fingerprints.20error/near/235699190\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20.20to.20debug.20unstable.20fingerprints.20error/near/235696170\">said</a>:</p>\n<blockquote>\n<p>it means that the query system is incorrectly caching something that has changed</p>\n</blockquote>\n<p>Can you elaborate on that?</p>\n</blockquote>\n<p>well I'm not 100% sure how the incremental system works (there's a lot of detail in <a href=\"https://rustc-dev-guide.rust-lang.org/queries/incremental-compilation.html\">https://rustc-dev-guide.rust-lang.org/queries/incremental-compilation.html</a>) but the basic idea is that the query system notices that all the inputs to a query haven't changed and uses the old output. if it doesn't match, that means some of the inputs aren't being tracked by the query system</p>",
        "id": 235699615,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105686
    },
    {
        "content": "<p>that can happen if you use global state or an <code>_untracked()</code> function</p>",
        "id": 235699642,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105698
    },
    {
        "content": "<p>you could also try just not having these outputs as part of the query system and calculating them unconditionally instead</p>",
        "id": 235699769,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105737
    },
    {
        "content": "<p>I don't know more without looking at the code, and I don't know very much about traits either <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 235699793,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105753
    },
    {
        "content": "<p>Ah gotcha. So if inputs haven't changed but hash has -&gt; error?</p>",
        "id": 235699795,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105754
    },
    {
        "content": "<p>exactly</p>",
        "id": 235699806,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105759
    },
    {
        "content": "<p>Okay then I'm gonna guess it's the <code>Lrc</code></p>",
        "id": 235699897,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105786
    },
    {
        "content": "<p>Unless there's some sorting going on</p>",
        "id": 235699919,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105801
    },
    {
        "content": "<p><code>FxHashMap</code> is stable right</p>",
        "id": 235699977,
        "sender_full_name": "Jack Huey",
        "timestamp": 1619105831
    },
    {
        "content": "<p>whether sorting is part of the hash depends on the type currently I think <a href=\"https://github.com/rust-lang/rust/pull/84234/files\">https://github.com/rust-lang/rust/pull/84234/files</a></p>",
        "id": 235700009,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232957\">Jack Huey</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20.20to.20debug.20unstable.20fingerprints.20error/near/235699977\">said</a>:</p>\n<blockquote>\n<p><code>FxHashMap</code> is stable right</p>\n</blockquote>\n<p>uhhh I am not sure, rustdoc only uses queries, it doesn't define them</p>",
        "id": 235700118,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619105883
    },
    {
        "content": "<p>I think <code>FxHashMap</code> is only stable if it's given the exact same sequence of insert, remove, and capacity changes</p>",
        "id": 235703950,
        "sender_full_name": "cuviper",
        "timestamp": 1619107499
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/84447\">https://github.com/rust-lang/rust/issues/84447</a></p>",
        "id": 235858321,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619190808
    }
]