[
    {
        "content": "<p>I'm hacking on rustc, and used rustup link to use the stage1 toolchain in my test projects.  It seems that cargo by default isn't the one matching my stage1 toolchain, which makes sense (it doesn't even build by default...).  So I build cargo (./x.py build cargo), but the rustup linked toolchain still doesn't have it.  That also makes sense, the cargo binary is in a different directory under the build.</p>\n<p>What do I do now?  To keep making progress I've been just manually copying cargo into the stage1 directory, but I'm sure there must be a smarter way to do this, right?</p>\n<p>I suppose I don't really need the matching cargo, all I really need is a cargo that will let me pass -Z flags.  It seems like rustup is falling back to stable cargo.  Is there some way for me to update my toolchain link to fall back to nightly cargo?</p>",
        "id": 264110107,
        "sender_full_name": "Andrew Dona-Couch",
        "timestamp": 1638936981
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462913\">@Andrew Dona-Couch</span> yes, <code>rustup override set nightly</code> should change the default for just the current repo</p>",
        "id": 264110318,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638937263
    },
    {
        "content": "<p>Rustup automatically falls back to nightly, beta, or stable (in that order, whichever is the first one it finds that is installed).</p>",
        "id": 264110321,
        "sender_full_name": "Eric Huss",
        "timestamp": 1638937270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> that doesn't sound right, you can <code>rustup set default</code> to any toolchain. Do you mean x.py?</p>",
        "id": 264110344,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638937312
    },
    {
        "content": "<p>For a toolchain that doesn't have a <code>cargo</code> executable in the <code>bin</code> directory, rustup will search for one in nightly/beta/stable toolchains.</p>",
        "id": 264110424,
        "sender_full_name": "Eric Huss",
        "timestamp": 1638937409
    },
    {
        "content": "<p>So when you run <code>cargo +stage1</code> or you have a <code>stage1</code> override, that's how things usually work without building cargo.</p>",
        "id": 264110491,
        "sender_full_name": "Eric Huss",
        "timestamp": 1638937473
    },
    {
        "content": "<p>Oh I see, so the issue is that I didn't have nightly installed at all, I didn't have beta installed through rustup, and stable was installed because rustup automatically installs it.  So <code>rustup install nightly</code> is all I need for it to work right.</p>",
        "id": 264111188,
        "sender_full_name": "Andrew Dona-Couch",
        "timestamp": 1638938193
    },
    {
        "content": "<p>I think this warrants a mention in the docs, but I'm not sure what docs.  Maybe the rustc-dev-guide section about rustup link?</p>",
        "id": 264111339,
        "sender_full_name": "Andrew Dona-Couch",
        "timestamp": 1638938378
    },
    {
        "content": "<p>Yeah, that sounds like a good place :)</p>",
        "id": 264111969,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638939070
    },
    {
        "content": "<p>It is mentioned <a href=\"https://rust-lang.github.io/rustup/concepts/toolchains.html#custom-toolchains\">here</a>, but I think adding it to the rustc-dev-guide would be a good idea.</p>",
        "id": 264112808,
        "sender_full_name": "Eric Huss",
        "timestamp": 1638939955
    },
    {
        "content": "<p>Indeed it is mentioned in the rustup docs!  I've opened a PR to the rustc-dev-guide.  Thanks all.</p>",
        "id": 264112962,
        "sender_full_name": "Andrew Dona-Couch",
        "timestamp": 1638940168
    }
]