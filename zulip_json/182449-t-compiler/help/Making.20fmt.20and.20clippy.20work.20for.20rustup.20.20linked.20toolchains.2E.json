[
    {
        "content": "<p>Hi,</p>\n<p>I'd like to try to fix <code>cargo fmt</code> and <code>cargo clippy</code> for rustup linked toolchains. Currently these targets do not work as the required binaries are in (e.g.) <code>stage1-tools-bin</code> instead of <code>stage1/bin</code> (I raised <a href=\"https://github.com/rust-lang/rust/issues/81431\">a bug for this here</a>).</p>\n<p>Fixing this would make my life easier in a project I'm working on where I currently have to use xtask-based hacks to get the targets running properly.</p>\n<p>Can anyone suggest the least offensive way I could fix this? Copying or linking the binaries into the correct bin directory perhaps?</p>\n<p>Thanks</p>",
        "id": 233490293,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617803337
    },
    {
        "content": "<p><code>extended = true</code> ;)</p>",
        "id": 233490339,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617803356
    },
    {
        "content": "<p>I don't think that helps. We've always had <code>extended=true</code>.</p>\n<p>I would verify against the latest rust, but seems the build is broken.</p>",
        "id": 233654315,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617889535
    },
    {
        "content": "<p>ah ok I see, the issue is the binaries aren't copied</p>",
        "id": 233654525,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617889619
    },
    {
        "content": "<p>I think you could make a PR adding that</p>",
        "id": 233654538,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617889626
    },
    {
        "content": "<blockquote>\n<p>I would verify against the latest rust, but seems the build is broken.</p>\n</blockquote>\n<p>how do you mean?</p>",
        "id": 233654581,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617889642
    },
    {
        "content": "<p>I just pulled on the master branch (commit <code>69e1d22</code>) and got:</p>\n<div class=\"codehilite\"><pre><span></span><code>   Compiling rustc-ap-rustc_span v705.0.0\nerror[E0599]: no method named `expect_none` found for enum `Option&lt;Fingerprint&gt;` in the current scope\n    --&gt; /home/vext01/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-ap-rustc_span-705.0.0/src/lib.rs:2003:48\n     |\n2003 |                 cache[index].replace(sub_hash).expect_none(&quot;Cache slot was filled&quot;);\n     |                                                ^^^^^^^^^^^ method not found in `Option&lt;Fingerprint&gt;`\n\nerror[E0599]: no method named `expect_none` found for enum `Option&lt;u32&gt;` in the current scope\n   --&gt; /home/vext01/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-ap-rustc_span-705.0.0/src/hygiene.rs:121:54\n    |\n121 |             expn_data.orig_id.replace(self.as_u32()).expect_none(&quot;orig_id should be None&quot;);\n    |                                                      ^^^^^^^^^^^ method not found in `Option&lt;u32&gt;`\n\nerror[E0599]: no method named `expect_none` found for enum `Option&lt;u32&gt;` in the current scope\n   --&gt; /home/vext01/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-ap-rustc_span-705.0.0/src/hygiene.rs:205:42\n    |\n205 |             data.orig_id.replace(raw_id).expect_none(&quot;orig_id should be None&quot;);\n    |                                          ^^^^^^^^^^^ method not found in `Option&lt;u32&gt;`\n\nerror: aborting due to 3 previous errors\n</code></pre></div>",
        "id": 233655615,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617890020
    },
    {
        "content": "<blockquote>\n<p>ah ok I see, the issue is the binaries aren't copied</p>\n</blockquote>\n<p>Right.  I'll just try copying them then... perhaps a bit wasteful, but it will fix the problem.</p>",
        "id": 233655810,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617890091
    },
    {
        "content": "<p>I think the errors are because rustfmt and rls are still \"build fail\" <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span><br>\n<a href=\"/user_uploads/4715/8Vc64Nzfz5yse3ANcGGtYn6x/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/8Vc64Nzfz5yse3ANcGGtYn6x/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/8Vc64Nzfz5yse3ANcGGtYn6x/image.png\"></a></div>",
        "id": 233656353,
        "sender_full_name": "hyd-dev",
        "timestamp": 1617890280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"223288\">Edd Barrett</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Making.20fmt.20and.20clippy.20work.20for.20rustup.20.20linked.20toolchains.2E/near/233655810\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>ah ok I see, the issue is the binaries aren't copied</p>\n</blockquote>\n<p>Right.  I'll just try copying them then... perhaps a bit wasteful, but it will fix the problem.</p>\n</blockquote>\n<p>fwiw this is exactly how the rest of the toolchain works, rustdoc and rustc are also copied</p>",
        "id": 233656576,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617890350
    },
    {
        "content": "<p>I would see where that's done and copy the tools at the same time</p>",
        "id": 233656595,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617890357
    },
    {
        "content": "<p>Why aren't they hard linked instead?</p>",
        "id": 233656952,
        "sender_full_name": "hyd-dev",
        "timestamp": 1617890464
    },
    {
        "content": "<p>oh, they might be</p>",
        "id": 233657016,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617890488
    },
    {
        "content": "<p>not sure off the top of my head</p>",
        "id": 233657026,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617890491
    },
    {
        "content": "<p>I considered hard links, but they are less flexible as they can't straddle filesystem boundaries.</p>\n<p>I'll just do what is done for other tools...</p>",
        "id": 233657280,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617890577
    },
    {
        "content": "<p>putting stage1-tools and stage2 in different filesystems seems like ... a bad idea, since x.py deletes those pretty frequently</p>",
        "id": 233657461,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617890643
    },
    {
        "content": "<p>Agreed :P</p>",
        "id": 233657868,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617890786
    },
    {
        "content": "<p>Hard linking may also fail in filesystems that do not support it (such as FAT).<br>\nFWIW Cargo has a <code>link_or_copy</code> function: <a href=\"https://github.com/rust-lang/cargo/blob/58a961314437258065e23cb6316dfc121d96fb71/crates/cargo-util/src/paths.rs#L490-L493\">https://github.com/rust-lang/cargo/blob/58a961314437258065e23cb6316dfc121d96fb71/crates/cargo-util/src/paths.rs#L490-L493</a></p>",
        "id": 233658638,
        "sender_full_name": "hyd-dev",
        "timestamp": 1617891048
    },
    {
        "content": "<p>I would just set up a directory with symlinks (I use similar setups for a few different cases). Roughly:</p>\n<div class=\"codehilite\"><pre><span></span><code>mkdir -p ~/.rustup/toolchains/dev/bin\nln -s `pwd`/build/$HOST/stage1/lib ~/.rustup/toolchains/dev\nln -s `pwd`/build/$HOST/stage1/bin/* ~/.rustup/toolchains/dev/bin\nln -s `pwd`/build/$HOST/stage1-tools-bin/* ~/.rustup/toolchains/dev/bin\n</code></pre></div>",
        "id": 233661349,
        "sender_full_name": "Eric Huss",
        "timestamp": 1617892010
    },
    {
        "content": "<p>I'm not sure if I'm going about this right:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/src/bootstrap/tool.rs b/src/bootstrap/tool.rs</span>\n<span class=\"gh\">index e85f4628fb0..847b5577035 100644</span>\n<span class=\"gd\">--- a/src/bootstrap/tool.rs</span>\n<span class=\"gi\">+++ b/src/bootstrap/tool.rs</span>\n<span class=\"gu\">@@ -218,6 +218,10 @@ impl Step for ToolBuild {</span>\n                 builder.cargo_out(compiler, self.mode, target).join(exe(tool, compiler.host));\n             let bin = builder.tools_dir(compiler).join(exe(tool, compiler.host));\n             builder.copy(&amp;cargo_out, &amp;bin);\n<span class=\"gi\">+            // Also ensure the tool is present in the sysroot so that it can be invoked from rustup</span>\n<span class=\"gi\">+            // linked toolchains.</span>\n<span class=\"gi\">+            let stage_bin = builder.sysroot(compiler).join(\"bin\").join(exe(tool, compiler.host));</span>\n<span class=\"gi\">+            builder.copy(&amp;bin, &amp;stage_bin);</span>\n             Some(bin)\n         }\n     }\n<span class=\"gu\">@@ -725,7 +729,13 @@ macro_rules! tool_extended {</span>\n tool_extended!((self, builder),\n     Cargofmt, rustfmt, \"src/tools/rustfmt\", \"cargo-fmt\", stable=true, {};\n     CargoClippy, clippy, \"src/tools/clippy\", \"cargo-clippy\", stable=true, in_tree=true, {};\n<span class=\"gd\">-    Clippy, clippy, \"src/tools/clippy\", \"clippy-driver\", stable=true, in_tree=true, {};</span>\n<span class=\"gi\">+    Clippy, clippy, \"src/tools/clippy\", \"clippy-driver\", stable=true, in_tree=true, {</span>\n<span class=\"gi\">+        builder.ensure(CargoClippy {</span>\n<span class=\"gi\">+            compiler: self.compiler,</span>\n<span class=\"gi\">+            target: self.target,</span>\n<span class=\"gi\">+            extra_features: Vec::new(),</span>\n<span class=\"gi\">+        });</span>\n<span class=\"gi\">+    };</span>\n     Miri, miri, \"src/tools/miri\", \"miri\", stable=false, {};\n     CargoMiri, miri, \"src/tools/miri/cargo-miri\", \"cargo-miri\", stable=false, {};\n     Rls, rls, \"src/tools/rls\", \"rls\", stable=true, {\n</code></pre></div>\n<p>The first hunk ensures tools get copied into <code>stageX/bin</code> and the second hunk ensures <code>cargo-clippy</code> is built when <code>clippy-driver</code> is built.</p>\n<p>Trying to use <code>cargo clippy</code> via a linked toolchain to the resulting <code>build/x86.../stage1</code> then gives:</p>\n<div class=\"codehilite\"><pre><span></span><code>error while loading shared libraries: librustc_driver-d32673f74e22c41d.so: cannot open shared object file: No such file or directory\n</code></pre></div>\n<p>Am I on the right track?</p>",
        "id": 233677623,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617896779
    },
    {
        "content": "<p>does rustdoc work fine from the same directory?</p>",
        "id": 233685229,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617899693
    },
    {
        "content": "<p>rustdoc and clippy work essentially the same</p>",
        "id": 233685261,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617899703
    },
    {
        "content": "<p>rustdoc <em>does</em> work, but clippy does not.</p>",
        "id": 233738360,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617919625
    },
    {
        "content": "<p>Oh that's extremely strange</p>",
        "id": 233738595,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617919747
    },
    {
        "content": "<p>If you run ldd on both is it the same?</p>",
        "id": 233738608,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617919756
    },
    {
        "content": "<p>Maybe clippy-driver is overriding the sysroot or something? I wish it didn't do that ...</p>",
        "id": 233738638,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617919781
    },
    {
        "content": "<p>Actually you've jogged my memory I think there's an existing issue for this one sec</p>",
        "id": 233738818,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617919870
    },
    {
        "content": "<p>I think one of <a href=\"https://github.com/rust-lang/rust/issues/78778#issuecomment-808729036\">https://github.com/rust-lang/rust/issues/78778#issuecomment-808729036</a> or <a href=\"https://github.com/rust-lang/rust/issues/76666#issuecomment-691670131\">https://github.com/rust-lang/rust/issues/76666#issuecomment-691670131</a> may be related</p>",
        "id": 233739485,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617920285
    },
    {
        "content": "<p>You could also look how x.py test src/tools/clippy works currently</p>",
        "id": 233739540,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617920322
    },
    {
        "content": "<blockquote>\n<p>ldd</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gd\">--- /tmp/ldd.rustdoc    2021-04-09 10:45:42.583734868 +0100</span>\n<span class=\"gi\">+++ /tmp/ldd.clippy-driver      2021-04-09 10:45:53.404102455 +0100</span>\n<span class=\"gu\">@@ -1,13 +1,8 @@</span>\n<span class=\"gd\">-       linux-vdso.so.1 (0x00007ffeb3fdd000)</span>\n<span class=\"gd\">-       libtest-94fa06da86470f19.so =&gt; /home/vext01/source/rust/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/libtest-94fa06da86470f19.so (0x00007f439088e000)</span>\n<span class=\"gd\">-       librustc_driver-5c14f2255fac32a9.so =&gt; /home/vext01/source/rust/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-5c14f2255fac32a9.so (0x00007f438848e000)</span>\n<span class=\"gd\">-       libstd-86d67478b13a23dc.so =&gt; /home/vext01/source/rust/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/libstd-86d67478b13a23dc.so (0x00007f43882dc000)</span>\n<span class=\"gd\">-       libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f43882ab000)</span>\n<span class=\"gd\">-       libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f4388128000)</span>\n<span class=\"gd\">-       libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f438810c000)</span>\n<span class=\"gd\">-       libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f4387f4b000)</span>\n<span class=\"gd\">-       libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f4387f46000)</span>\n<span class=\"gd\">-       libz.so.1 =&gt; /lib/x86_64-linux-gnu/libz.so.1 (0x00007f4387d28000)</span>\n<span class=\"gd\">-       libstdc++.so.6 =&gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f4387ba4000)</span>\n<span class=\"gd\">-       /lib64/ld-linux-x86-64.so.2 (0x00007f4391022000)</span>\n<span class=\"gd\">-       librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f4387b98000)</span>\n<span class=\"gi\">+       linux-vdso.so.1 (0x00007ffe39171000)</span>\n<span class=\"gi\">+       librustc_driver-d32673f74e22c41d.so =&gt; not found</span>\n<span class=\"gi\">+       libstd-2c44c75d734c864e.so =&gt; not found</span>\n<span class=\"gi\">+       libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f0900056000)</span>\n<span class=\"gi\">+       libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f08ffed3000)</span>\n<span class=\"gi\">+       libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f08ffeb9000)</span>\n<span class=\"gi\">+       libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f08ffcf6000)</span>\n<span class=\"gi\">+       /lib64/ld-linux-x86-64.so.2 (0x00007f090067e000)</span>\n</code></pre></div>\n<p>Crucially librustc_driver is not found for clippy_driver.</p>",
        "id": 233794178,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617961804
    },
    {
        "content": "<p>The comment in your first link about <code>add_rustc_lib_path()</code> may be something I need to pursue. Investigating...</p>",
        "id": 233794330,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617961883
    },
    {
        "content": "<blockquote>\n<p>You could also look how x.py test src/tools/clippy works currently</p>\n</blockquote>\n<p>It looks like they have to workaround this problem by explicitly setting the sysroot:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/bootstrap/test.rs#L617-L629\">https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/bootstrap/test.rs#L617-L629</a></p>",
        "id": 233794960,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617962176
    },
    {
        "content": "<p>I'm not having much joy here. If anyone has any ideas, I'm all ears.</p>\n<p>I wonder if  <a href=\"https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/bootstrap/tool.rs#L492-L497\">this</a> has anything to do with it?</p>",
        "id": 233801302,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617965615
    },
    {
        "content": "<blockquote>\n<ul>\n<li><a href=\"http://librustc_driver-5c14f2255fac32a9.so\">librustc_driver-5c14f2255fac32a9.so</a> =&gt; /home/vext01/source/rust/build/x86_64-unknown-linux-gnu/stage1/bin/../lib/librustc_driver-5c14f2255fac32a9.so (0x00007f438848e000)</li>\n<li><a href=\"http://librustc_driver-d32673f74e22c41d.so\">librustc_driver-d32673f74e22c41d.so</a> =&gt; not found</li>\n</ul>\n</blockquote>\n<p>This looks wrong - the hashes should be the same. Are you sure you copied it into the right stage?</p>",
        "id": 233808794,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617969722
    },
    {
        "content": "<blockquote>\n<ul>\n<li>let stage_bin = builder.sysroot(compiler).join(\"bin\").join(exe(tool, <a href=\"http://compiler.host\">compiler.host</a>));</li>\n</ul>\n</blockquote>\n<p>ok yes this is incorrect - this is the sysroot of the compiler <em>building</em> clippy, not the one it runs with</p>",
        "id": 233808895,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617969762
    },
    {
        "content": "<p>forget bootstrap for a second - if you move clippy-driver from stage1/ to stage2/ does it work?</p>",
        "id": 233808995,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617969801
    },
    {
        "content": "<p>So before I didn't have a <code>stage2</code> dir at all, so I did <code>./x.py build --stage 2</code> to get one.</p>\n<p>This stage2 included a <code>clippy-driver</code> (presumably due to my changes). When I link stage2 in rustup and use it, it works.</p>\n<p>Copying the <code>clippy-driver</code> from <code>stage1/bin</code> to <code>stage2/bin</code> and using the stage2 toolchain also works.</p>",
        "id": 233812078,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617971387
    },
    {
        "content": "<p>ok cool, so I think you should be able to fix this by using that sysroot when copying the binary</p>",
        "id": 233812263,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971447
    },
    {
        "content": "<p>Thanks -- I'll give it a shot!</p>",
        "id": 233812297,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617971463
    },
    {
        "content": "<p>hmm actually I vaguely remember <code>--stage 1</code> builds not working with clippy in the past</p>",
        "id": 233812511,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971552
    },
    {
        "content": "<p>the real test is if moving <code>stage0-tools-bin/clippy-driver</code> to stage1/bin works</p>",
        "id": 233812538,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971567
    },
    {
        "content": "<p>There is no <code>stage0-tools-bin</code> directory in my <code>build/</code> .</p>\n<p>Searching all stage0 dirs, I don't see a clippy-driver binary:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ find stage0-* -name &#39;clippy-driver&#39;\n$\n</code></pre></div>",
        "id": 233812942,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617971738
    },
    {
        "content": "<p>yes you need to build it with <code>x.py build --stage 0 src/tools/clippy</code></p>",
        "id": 233812967,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971750
    },
    {
        "content": "<p>(running that locally but rustc_private is taking a while to compile - I think it's a bug in download-rustc, it shouldn't be compiled at all)</p>",
        "id": 233813031,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971767
    },
    {
        "content": "<p>remember that <code>build --stage 0</code> means \"build with stage 0\", it <em>generates</em> the stage1/ toolchain</p>",
        "id": 233813078,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971788
    },
    {
        "content": "<p>Ah sorry. Building now...</p>",
        "id": 233813104,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617971805
    },
    {
        "content": "<p>np</p>",
        "id": 233813121,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971810
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>    Finished release [optimized] target(s) in 42.91s\nthread &#39;main&#39; panicked at &#39;failed to copy `/home/vext01/source/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/cargo-clippy` to `/home/vext01/source/rust/build/x86_64-unknown-linux-gnu/stage0-sysroot/bin/cargo-clippy`: No such file or directory (os error 2)&#39;, src/bootstrap/lib.rs:1206:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nfailed to run: /home/vext01/source/rust/build/bootstrap/debug/bootstrap build --stage 0 src/tools/clippy/\nBuild completed unsuccessfully in 0:00:43\n</code></pre></div>",
        "id": 233813184,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617971849
    },
    {
        "content": "<p>that's your same bug as before - it's using the build sysroot</p>",
        "id": 233813242,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971877
    },
    {
        "content": "<p>it's copying to stage0-sysroot, it should be copying to stage1</p>",
        "id": 233813340,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617971906
    },
    {
        "content": "<p>ugh, let me revert my changes</p>",
        "id": 233813401,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617971946
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Making.20fmt.20and.20clippy.20work.20for.20rustup.20.20linked.20toolchains.2E/near/233813031\">said</a>:</p>\n<blockquote>\n<p>(running that locally but rustc_private is taking a while to compile - I think it's a bug in download-rustc, it shouldn't be compiled at all)</p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><code>        // NOTE: the ABI of the beta compiler is different from the ABI of the downloaded compiler,\n        // so its artifacts can&#39;t be reused.\n        if builder.config.download_rustc &amp;&amp; compiler.stage != 0 {\n</code></pre></div>\n<p>rude why was past me so insistent on things <em>working</em> <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 233813543,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972006
    },
    {
        "content": "<p>copying <code>clippy-driver</code> and <code>cargo-clippy</code> from <code>stage0-tools-bin</code> into <code>stage1/bin</code> works.</p>",
        "id": 233813786,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617972126
    },
    {
        "content": "<p>So I just need to fix which sysroot I copy from.</p>",
        "id": 233813830,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617972147
    },
    {
        "content": "<p>I think this should actually go in <code>impl Step for Assemble</code></p>",
        "id": 233813901,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972182
    },
    {
        "content": "<p>otherwise the target sysroot may not yet exist</p>",
        "id": 233813908,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972187
    },
    {
        "content": "<p>OK, i'll have to do some reading and experimentation</p>",
        "id": 233813973,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617972220
    },
    {
        "content": "<p>somewhere around here: <a href=\"https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/bootstrap/compile.rs#L1122\">https://github.com/rust-lang/rust/blob/bc66b92f7f1114a78b98504a927ca9c0aa12c71a/src/bootstrap/compile.rs#L1122</a></p>",
        "id": 233813976,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972222
    },
    {
        "content": "<p>Thanks for your help. I'm criminally unfamiliar with the bootstrap code and I'm stll in that \"oh, well this is overwhelming\" stage :)</p>",
        "id": 233814007,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617972238
    },
    {
        "content": "<p>haha yeah bootstrap is a little overwhelming <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 233814059,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972249
    },
    {
        "content": "<p>not so much the logic, but the amount going on</p>",
        "id": 233814085,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972264
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> described it as \"lots of persistent state\"</p>",
        "id": 233814236,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972361
    },
    {
        "content": "<p>yeah</p>",
        "id": 233814363,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617972413
    },
    {
        "content": "<p>What does \"assemble\" mean in this context btw?</p>",
        "id": 233814374,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617972424
    },
    {
        "content": "<p>it's just a fancy word for \"copy things to the new sysroot\"</p>",
        "id": 233814399,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972436
    },
    {
        "content": "<p><a href=\"https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html#assembling-the-compiler\">https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html#assembling-the-compiler</a></p>",
        "id": 233814439,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617972449
    },
    {
        "content": "<p>OK, so this appears to work:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/src/bootstrap/compile.rs b/src/bootstrap/compile.rs</span>\n<span class=\"gh\">index 8244c7710ab..b281dca36ff 100644</span>\n<span class=\"gd\">--- a/src/bootstrap/compile.rs</span>\n<span class=\"gi\">+++ b/src/bootstrap/compile.rs</span>\n<span class=\"gu\">@@ -1127,6 +1127,20 @@ impl Step for Assemble {</span>\n         let compiler = builder.rustc(target_compiler);\n         builder.copy(&amp;rustc, &amp;compiler);\n\n<span class=\"gi\">+        use crate::tool::{CargoClippy, Clippy};</span>\n<span class=\"gi\">+        let clippy_bin = builder.ensure(Clippy {</span>\n<span class=\"gi\">+            compiler: build_compiler,</span>\n<span class=\"gi\">+            target: build_compiler.host,</span>\n<span class=\"gi\">+            extra_features: Vec::new(),</span>\n<span class=\"gi\">+        });</span>\n<span class=\"gi\">+        builder.copy(&amp;clippy_bin.unwrap(), &amp;bindir.join(\"clippy-driver\"));</span>\n<span class=\"gi\">+        let cargo_clippy_bin = builder.ensure(CargoClippy {</span>\n<span class=\"gi\">+            compiler: build_compiler,</span>\n<span class=\"gi\">+            target: build_compiler.host,</span>\n<span class=\"gi\">+            extra_features: Vec::new(),</span>\n<span class=\"gi\">+        });</span>\n<span class=\"gi\">+        builder.copy(&amp;cargo_clippy_bin.unwrap(), &amp;bindir.join(\"cargo-clippy\"));</span>\n<span class=\"gi\">+</span>\n         target_compiler\n     }\n }\n</code></pre></div>\n<p>Obviously this is quick and dirty. I shouldn't hard-code tool names and I need to ensure these are only built if requested in <code>config.toml</code>.</p>\n<p>Looks on the right track?</p>",
        "id": 233819229,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617974421
    },
    {
        "content": "<p>Should there perhaps be a loop over all of the optional extended tools that does the same if they are enabled?</p>",
        "id": 233819522,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617974526
    },
    {
        "content": "<p>hmm I think you can do this more simply - you can just copy everything in <code>builder.tools_dir(build_compiler)</code></p>",
        "id": 233819877,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617974657
    },
    {
        "content": "<p>and that will take care of whether the tool should be built or not</p>",
        "id": 233819925,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617974682
    },
    {
        "content": "<p>(I found that by looking at what <code>impl Step for ToolBuild</code> returns)</p>",
        "id": 233820293,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617974840
    },
    {
        "content": "<blockquote>\n<p>hmm I think you can do this more simply - you can just copy everything in builder.tools_dir(build_compiler)</p>\n</blockquote>\n<p>I don't think that's right. Here that directory resolves to <code>build/x86_64-unknown-linux-gnu/stage0-tools-bin</code> which is an empty directory for a stage1 build.</p>",
        "id": 233825297,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617976742
    },
    {
        "content": "<p>s/build_compiler/target_compiler/ perhaps?</p>",
        "id": 233825420,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617976801
    },
    {
        "content": "<p>try it and see? :P</p>",
        "id": 233825933,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617976946
    },
    {
        "content": "<p>Ugh. It works the second time you run <code>x.py build --stage 1</code>. Presumably this point is too early in the build and the tools don't exist yet.</p>",
        "id": 233827107,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1617977373
    },
    {
        "content": "<p>hmm - <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> do you happen to know what's going on? we're trying to make sure all the binaries in <code>stage0-tools-bin</code> end up in <code>stage1/bin</code></p>",
        "id": 233827366,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617977470
    },
    {
        "content": "<p>That seems like an odd goal to me, they are of a different stage - if anything, they should go into stage0/bin, if they're bootstrap tools. Other than that I don't really have the time to investigate much</p>",
        "id": 233827548,
        "sender_full_name": "simulacrum",
        "timestamp": 1617977537
    },
    {
        "content": "<p>hmm, how do you mean? isn't stage0-tools-bin for tools built by the stage0 compiler?</p>",
        "id": 233827997,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617977700
    },
    {
        "content": "<p>I don't remember, maybe it is</p>",
        "id": 233828065,
        "sender_full_name": "simulacrum",
        "timestamp": 1617977727
    },
    {
        "content": "<p>regardless, I have no immediate thoughts</p>",
        "id": 233828077,
        "sender_full_name": "simulacrum",
        "timestamp": 1617977734
    },
    {
        "content": "<p>ok, no problem :) I'll keep looking into it</p>",
        "id": 233828109,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617977748
    }
]