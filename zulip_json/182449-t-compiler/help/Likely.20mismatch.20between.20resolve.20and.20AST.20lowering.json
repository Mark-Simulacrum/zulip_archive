[
    {
        "content": "<p>I've been looking into <a href=\"https://github.com/rust-lang/rust/issues/91370\">#91370</a>. I'm not 100% sure yet, but I think I might know what's going on. It seems like resolve is treating the impl as real, so it's appearing in <code>tcx.all_local_trait_impls(())</code>, but  AST lowering ignores it, because it's in the body of a foreign function item, and that sort of body isn't getting lowered because it shouldn't exist. If I'm correct, the way to fix the ICE is to resolve the mismatch. </p>\n<p>I guess I have two questions. First, does my theory sound plausible? I've checked the AST lowering end, but haven't checked the resolve end completely yet. Second, what's the best way to deal with this? I'm guessing it would be to make resolve ignore it, although I'm not entirely sure.</p>",
        "id": 266588167,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1641089123
    },
    {
        "content": "<p>I agree with your theory.<br>\nThere are two ways to deal with this:</p>\n<ol>\n<li>change lowering to deal with foreign fn bodies;</li>\n<li>change the late resolver to ignore them.</li>\n</ol>\n<p>I believe (1) would just move the issue.  HIR is manipulated by visitors, so having an item somewhere which is not reachable by a visitor (for instance in a body that we ignore) would just ICE elsewhere.  We had the case not long ago when lowering attempted to deal with expressions inside attributes.</p>\n<p>Therefore, I think the proper solution is (2): modify LateResolutionVisitor to ignore foreign fn bodies like ItemLowerer does.</p>",
        "id": 266605062,
        "sender_full_name": "cjgillot",
        "timestamp": 1641116342
    },
    {
        "content": "<p>Do you know why things are set up with AST lowering and resolve both working with the AST independently of each other? I've had it make things complicated for me in the past, and here it actually caused a bug. It must be setup this way for a reason.</p>",
        "id": 266664845,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1641201128
    },
    {
        "content": "<p>Also, thank you the helpful advice! I've now fixed the problem and opened a PR.</p>",
        "id": 266665052,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1641201304
    },
    {
        "content": "<p>I <code>r?</code>ed you on it. I hope you don't mind.</p>",
        "id": 266665067,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1641201312
    }
]