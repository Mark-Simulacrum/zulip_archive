[
    {
        "content": "<p>I'm editing files in rustc_span, and I guess because it's a very central library (at the top of dependency tree) it takes forever to rebuild stage 1 compiler after editing. I'm using <code>./x.py build --stage 1</code>. Any tips?</p>",
        "id": 222960465,
        "sender_full_name": "osa1",
        "timestamp": 1610773257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119169\">@osa1</span> do you have <code>incremental = true</code> in config.toml?</p>",
        "id": 222960489,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610773295
    },
    {
        "content": "<p>it takes me a while with incremental, but not more than maybe 5 minutes</p>",
        "id": 222960516,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610773305
    },
    {
        "content": "<p>That line is commented out:</p>\n<div class=\"codehilite\"><pre><span></span><code># Whether to always use incremental compilation when building rustc\n#incremental = false\n</code></pre></div>\n<p>Should I enable this as <code>incremental = true</code>?</p>",
        "id": 222960567,
        "sender_full_name": "osa1",
        "timestamp": 1610773339
    },
    {
        "content": "<p>yes, it will be a <em>lot</em> faster</p>",
        "id": 222960572,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610773348
    },
    {
        "content": "<p>Thanks, just did that.</p>",
        "id": 222960612,
        "sender_full_name": "osa1",
        "timestamp": 1610773403
    },
    {
        "content": "<p>you might want to consider setting <code>profile = \"compiler\"</code> at the top of config.toml, that has lots of other useful defaults</p>",
        "id": 222960970,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610773921
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"err\">&gt;</span> <span class=\"n\">cat</span> <span class=\"n\">src</span><span class=\"err\">/</span><span class=\"n\">bootstrap</span><span class=\"err\">/</span><span class=\"n\">defaults</span><span class=\"err\">/</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">compiler</span><span class=\"p\">.</span><span class=\"n\">toml</span>\n<span class=\"c1\"># These defaults are meant for contributors to the compiler who do not modify codegen or LLVM</span>\n<span class=\"k\">[rust]</span>\n<span class=\"c1\"># This enables `RUSTC_LOG=debug`, avoiding confusing situations</span>\n<span class=\"c1\"># where adding `debug!()` appears to do nothing.</span>\n<span class=\"c1\"># However, it makes running the compiler slightly slower.</span>\n<span class=\"n\">debug-logging</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"c1\"># This greatly increases the speed of rebuilds, especially when there are only minor changes. However, it makes the initial build slightly slower.</span>\n<span class=\"n\">incremental</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n\n<span class=\"k\">[llvm]</span>\n<span class=\"c1\"># Will download LLVM from CI if available on your platform (Linux only for now)</span>\n<span class=\"c1\"># https://github.com/rust-lang/rust/issues/77084 tracks support for more platforms</span>\n<span class=\"n\">download-ci-llvm</span> <span class=\"o\">=</span> <span class=\"s\">\"if-available\"</span>\n</code></pre></div>",
        "id": 222961010,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610773934
    },
    {
        "content": "<p>Thanks. I already have the first two set manually. For the LLVM I'm using a local llvm-config so I'm not building it.</p>",
        "id": 222961484,
        "sender_full_name": "osa1",
        "timestamp": 1610774751
    }
]