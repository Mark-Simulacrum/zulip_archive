[
    {
        "content": "<p>How do I get tracing::debug! lines when using x.py test?<br>\nprepending RUSTC_LOG=rustc_privacy didnt seem to work...</p>",
        "id": 209429382,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599591619
    },
    {
        "content": "<p>you need to set <code>debug = true</code> in <code>config.toml</code></p>",
        "id": 209429609,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599591728
    },
    {
        "content": "<p>unfortunately this requires rebuilding the whole compiler :(</p>",
        "id": 209429640,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599591745
    },
    {
        "content": "<p>er, debug-assertions = true</p>",
        "id": 209429768,
        "sender_full_name": "simulacrum",
        "timestamp": 1599591817
    },
    {
        "content": "<p>and probably std-debug-assertions = false if you want things to be faster</p>",
        "id": 209429787,
        "sender_full_name": "simulacrum",
        "timestamp": 1599591831
    },
    {
        "content": "<p>probably we should have a debug-logging = true</p>",
        "id": 209429855,
        "sender_full_name": "simulacrum",
        "timestamp": 1599591853
    },
    {
        "content": "<p>that would be nice</p>",
        "id": 209429889,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599591871
    },
    {
        "content": "<p>ah thanks everyone, ill try debug-assertions = true and debug-assertions-std = false, it seems to be working!</p>",
        "id": 209430097,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599592007
    },
    {
        "content": "<p>hmm, debug-logging would be nice, maybe ill look into that</p>",
        "id": 209430120,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599592032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> what would be the exact semantics of debug-logging that you are looking for?</p>",
        "id": 209532368,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599667680
    },
    {
        "content": "<p>ideally we'd not enable debug asserts at all and instead toggle the feature on tracing based on this</p>",
        "id": 209532479,
        "sender_full_name": "simulacrum",
        "timestamp": 1599667720
    },
    {
        "content": "<p>i.e., debug assertions would be orthogonal to whether logging is complete or not</p>",
        "id": 209532526,
        "sender_full_name": "simulacrum",
        "timestamp": 1599667742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ah i see, I need to dig into how debug_assertions ends up turning on logging</p>",
        "id": 209535788,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599669473
    },
    {
        "content": "<p>There is a feature enabled on tracing somewhere</p>",
        "id": 209535868,
        "sender_full_name": "simulacrum",
        "timestamp": 1599669501
    },
    {
        "content": "<p>Something like release_max_level_debug</p>",
        "id": 209535917,
        "sender_full_name": "simulacrum",
        "timestamp": 1599669520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/logging.20when.20using.20x.2Epy/near/209535917\">said</a>:</p>\n<blockquote>\n<p>Something like release_max_level_debug</p>\n</blockquote>\n<p>ah i didn't realize it actually tracing that is checking debug_assertions </p>\n<p>also the order here means I can't just ADD the max_level_trace feature in bootstrap, as rustc_driver's Cargo.toml has the default release_max_level_info...need to think about this</p>",
        "id": 209541574,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599672193
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257428\">@Gus Wynn</span> my suggestion would be to <em>remove</em> the default and set that feature flag through rustbuild</p>",
        "id": 209548253,
        "sender_full_name": "simulacrum",
        "timestamp": 1599675405
    },
    {
        "content": "<p>expanding this bit <a href=\"https://github.com/rust-lang/rust/blob/3f5e617e3630ad61aa35637bbe0ab704eada5974/src/bootstrap/lib.rs#L535-L536\">https://github.com/rust-lang/rust/blob/3f5e617e3630ad61aa35637bbe0ab704eada5974/src/bootstrap/lib.rs#L535-L536</a></p>",
        "id": 209548290,
        "sender_full_name": "simulacrum",
        "timestamp": 1599675437
    }
]