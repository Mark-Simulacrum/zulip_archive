[
    {
        "content": "<p>I'm trying to build <code>rustc</code> with a patched <code>rustc-hash</code> (incorporating <a href=\"https://github.com/rust-lang/rustc-hash/pull/16\">this PR</a>), which I'm specifying in the <code>[patch.crates-io]</code> table of the workspace <code>Config.toml</code>. However, the <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_lint/src/internal.rs#L15-L60\"><code>rustc::default-hash-types</code></a> lint is triggered when building this <code>rustc-hash</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>% x b\nBuilding stage0 compiler artifacts (x86_64-apple-darwin -&gt; x86_64-apple-darwin)\n   Compiling rustc-hash v1.1.0 (/Users/eggyal/coding/rustc-hash)\nerror: Prefer FxHashMap over HashMap, it has better performance\n  --&gt; /Users/eggyal/coding/rustc-hash/src/lib.rs:39:24\n   |\n39 | use std::collections::{HashMap, HashSet};\n   |                        ^^^^^^^ help: use: `FxHashMap`\n   |\n   = note: `-D rustc::default-hash-types` implied by `-D warnings`\n   = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary\n</code></pre></div>\n<p>What I don't understand is how the unpatched <code>rustc-hash</code> gets built without failing on the same lint?</p>",
        "id": 235650396,
        "sender_full_name": "eggyal",
        "timestamp": 1619085842
    },
    {
        "content": "<p>Turns out that <code>path</code> dependencies get linted while repo ones do not, so I fixed this by changing my patch to the latter.</p>",
        "id": 235658254,
        "sender_full_name": "eggyal",
        "timestamp": 1619090290
    },
    {
        "content": "<p>you could also just allow the lint for now</p>",
        "id": 235680884,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619099559
    }
]