[
    {
        "content": "<p>are there any rustc integration tests that invoke libtest?</p>",
        "id": 173621306,
        "sender_full_name": "tmandry",
        "timestamp": 1566263893
    },
    {
        "content": "<p><em>suddenly remembers how to use grep again</em></p>",
        "id": 173621318,
        "sender_full_name": "tmandry",
        "timestamp": 1566263947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> I believe compiletest is built ontop of libtest, but I could be wrong. rustdoc tests are for sure</p>",
        "id": 173621477,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264179
    },
    {
        "content": "<p>(i.e., <code>rustdoc --test</code>, not the tests for rustdoc)</p>",
        "id": 173621483,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264188
    },
    {
        "content": "<p>I want to test the output of the libtest runner itself</p>",
        "id": 173621490,
        "sender_full_name": "tmandry",
        "timestamp": 1566264215
    },
    {
        "content": "<p>so I'd really like to have a run-pass or run-fail test, but with a stderr matcher</p>",
        "id": 173621551,
        "sender_full_name": "tmandry",
        "timestamp": 1566264252
    },
    {
        "content": "<p>I think it's all UI tests these days but in theory you'd just do something like <code>// compile-args --test</code> presumably?</p>",
        "id": 173621569,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264283
    },
    {
        "content": "<p>right, there are tests which do that</p>",
        "id": 173621574,
        "sender_full_name": "tmandry",
        "timestamp": 1566264298
    },
    {
        "content": "<p>and you can specify <code>// run-pass</code></p>",
        "id": 173621581,
        "sender_full_name": "tmandry",
        "timestamp": 1566264305
    },
    {
        "content": "<p>yep, that should work then</p>",
        "id": 173621584,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264310
    },
    {
        "content": "<p>but I want to match against the output of the <em>program</em>, not the compiler</p>",
        "id": 173621588,
        "sender_full_name": "tmandry",
        "timestamp": 1566264318
    },
    {
        "content": "<p>hm, oh, that's an interesting use case</p>",
        "id": 173621590,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264326
    },
    {
        "content": "<p>you can definitely do a run-make test but those are a bit of a pain</p>",
        "id": 173621596,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264337
    },
    {
        "content": "<p>I'd personally think we could definitely make run-pass tests match against the output of the program (perhaps optionally)</p>",
        "id": 173621674,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264450
    },
    {
        "content": "<p>that seems really useful</p>",
        "id": 173621682,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264460
    },
    {
        "content": "<p>that <em>would</em> be really useful :)</p>",
        "id": 173621737,
        "sender_full_name": "tmandry",
        "timestamp": 1566264503
    },
    {
        "content": "<p>I imagine it wouldn't be terribly difficult to hook up as we have most of the functionality already in compiletest</p>",
        "id": 173621746,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264527
    },
    {
        "content": "<p>if you'd like I can try and take a look tomorrow or so, I should have some free time (unless you want to do it, in which case I'd be happy to review)</p>",
        "id": 173621762,
        "sender_full_name": "simulacrum",
        "timestamp": 1566264559
    },
    {
        "content": "<p>go for it! otherwise I can pick it up in a couple days</p>",
        "id": 173621836,
        "sender_full_name": "tmandry",
        "timestamp": 1566264664
    },
    {
        "content": "<p>hm looks like it's mostly a pretty easy patch but requires some reshuffling if done well that I don't think I have the time to do, so I'm going to file an issue with some instructions</p>",
        "id": 173676428,
        "sender_full_name": "simulacrum",
        "timestamp": 1566321129
    },
    {
        "content": "<p>okay, that would be helpful, thanks!</p>",
        "id": 173686390,
        "sender_full_name": "tmandry",
        "timestamp": 1566328049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> oh, forgot to link it here: <a href=\"https://github.com/rust-lang/rust/issues/63751\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63751\">https://github.com/rust-lang/rust/issues/63751</a></p>",
        "id": 173694767,
        "sender_full_name": "simulacrum",
        "timestamp": 1566334134
    },
    {
        "content": "<p>(not sure if you already saw it)</p>",
        "id": 173694775,
        "sender_full_name": "simulacrum",
        "timestamp": 1566334138
    },
    {
        "content": "<p>I hadn't, thanks for posting that!</p>",
        "id": 173756973,
        "sender_full_name": "tmandry",
        "timestamp": 1566350544
    }
]