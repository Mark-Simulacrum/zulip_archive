[
    {
        "content": "<p>What performance differences would there be between <code>HashMap&lt;String, HashMap&lt;String, Vec&lt;String&gt;&gt;&gt;</code> and <code>HashMap&lt;(String, Sting), Vec&lt;String&gt;&gt;</code>?</p>",
        "id": 261203994,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1636681932
    },
    {
        "content": "<p>I'm guessing the later would be better in most cases, because it seems like there has to be a cost to each HashMap creation and lookup.</p>",
        "id": 261204173,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1636682172
    },
    {
        "content": "<p>The size of each HashMap would be fairly small.</p>",
        "id": 261204180,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1636682185
    },
    {
        "content": "<p>Yeah, the latter is better - if you use a whole HashMap as a key, you have to hash each and every element in it every time you look up a value</p>",
        "id": 261205089,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636683131
    },
    {
        "content": "<p>(does HashMap even implement Hash?)</p>",
        "id": 261205100,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1636683154
    },
    {
        "content": "<p>There's no use of a hashmap as a key here, just nested hashmaps. But I agree that the latter is better. Nesting hashmaps is likely to be slower, and probably use more memory too</p>",
        "id": 261205302,
        "sender_full_name": "nnethercote",
        "timestamp": 1636683405
    },
    {
        "content": "<p>One counterpoint is if you want to iterate a sub-map, the nested version would probably be better than iterating and filtering the flattened map.</p>",
        "id": 261223717,
        "sender_full_name": "cuviper",
        "timestamp": 1636706133
    },
    {
        "content": "<p>And no, <code>HashMap</code> doesn't implement <code>Hash</code> -- this was debated, but it's difficult to make that consistent with <code>Eq</code>, independent of order.</p>",
        "id": 261223860,
        "sender_full_name": "cuviper",
        "timestamp": 1636706231
    }
]