[
    {
        "content": "<p>wait, why is rustc_mir different from rustdoc?</p>",
        "id": 216298694,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605058985
    },
    {
        "content": "<p>rustdoc loads it from sysroot iirc</p>",
        "id": 216298698,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605058990
    },
    {
        "content": "<p>because rustdoc is built in a different target directory (with other tools)</p>",
        "id": 216298707,
        "sender_full_name": "simulacrum",
        "timestamp": 1605058999
    },
    {
        "content": "<p>oh I see</p>",
        "id": 216298720,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059017
    },
    {
        "content": "<p>are the directories documented somewhere?</p>",
        "id": 216298723,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059022
    },
    {
        "content": "<p>uh, I mean, they're pretty directly mapped</p>",
        "id": 216298732,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059033
    },
    {
        "content": "<p>but no</p>",
        "id": 216298733,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059036
    },
    {
        "content": "<p>I also don't really want to document stuff inside build/</p>",
        "id": 216298779,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059049
    },
    {
        "content": "<p>I guess as internal docs maybe</p>",
        "id": 216298783,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059056
    },
    {
        "content": "<p>right, as reference in the dev guide maybe, or instructions for adding dependencies</p>",
        "id": 216298793,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059074
    },
    {
        "content": "<p><a href=\"https://github.com/Mark-Simulacrum/rust/blob/72f27be42acfa212fc2828dba5b8bed8693cc7f4/src/bootstrap/lib.rs#L602-L611\">https://github.com/Mark-Simulacrum/rust/blob/72f27be42acfa212fc2828dba5b8bed8693cc7f4/src/bootstrap/lib.rs#L602-L611</a></p>",
        "id": 216298803,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059091
    },
    {
        "content": "<p>right now 'should dependencies be loaded from sysroot' is not a question I know how to answer without your input</p>",
        "id": 216298807,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059097
    },
    {
        "content": "<p>I answer it with \"does x.py check work\" basically</p>",
        "id": 216298841,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059132
    },
    {
        "content": "<p>well, it did just now for rustc_mir, didn't it?</p>",
        "id": 216298857,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059152
    },
    {
        "content": "<p>when loading from sysroot</p>",
        "id": 216298861,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059159
    },
    {
        "content": "<p>er, rustc_mir doesn't load tracing from sysroot ... ever</p>",
        "id": 216299095,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059395
    },
    {
        "content": "<p>the steps are:</p>\n<ul>\n<li>try to use it</li>\n<li>fails to work, add to Cargo.toml</li>\n<li>it should work now</li>\n</ul>",
        "id": 216299152,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059425
    },
    {
        "content": "<p>I think I'm confused what 'sysroot' means then - I thought it was all the build artifacts for one stage of the rust compiler?</p>",
        "id": 216299188,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059468
    },
    {
        "content": "<p>there's edge cases I think around conflicts for some crates where you need to make sure it gets into the sysroot (e.g., via the fake deps thing) but that's super rare to run into</p>",
        "id": 216299189,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059469
    },
    {
        "content": "<p>loading from the sysroot means \"--extern foo=/path/to/foo\" is not passed, basically, and the compiler looks in <code>$(rustc --print sysroot)/lib/rustlib/$target/lib/foo.rlib</code> or something like that to find the foo crate</p>",
        "id": 216299268,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059529
    },
    {
        "content": "<p>the target/deps directory is not the sysroot</p>",
        "id": 216299280,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059554
    },
    {
        "content": "<p>same way that e.g. rustc_driver does not load rustc_mir from the sysroot, ever</p>",
        "id": 216299289,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059571
    },
    {
        "content": "<p>that is, compilation of rustc_driver does not load rustc_mir</p>",
        "id": 216299304,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059596
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/enabling.20debug.20logging.20for.20rustc.20in-tree.20tests/near/216299304\">said</a>:</p>\n<blockquote>\n<p>that is, compilation of rustc_driver does not load rustc_mir</p>\n</blockquote>\n<p>wait I was with you until then - doesn't it need to load rustc_mir from target/deps?</p>",
        "id": 216299320,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059625
    },
    {
        "content": "<p>and I'm slightly confused - sysroot is 'dependencies rustc knows about' and target/deps is 'dependencies cargo knows about'?</p>",
        "id": 216299376,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059658
    },
    {
        "content": "<p>are they both rlibs?</p>",
        "id": 216299383,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059673
    },
    {
        "content": "<p>(planning to write all this up in the dev-guide at some point)</p>",
        "id": 216299389,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059695
    },
    {
        "content": "<p>let me fork this</p>",
        "id": 216299393,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059701
    },
    {
        "content": "<p>target/deps is not the sysroot</p>",
        "id": 216299512,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059815
    },
    {
        "content": "<p>right, I got that</p>",
        "id": 216299517,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059830
    },
    {
        "content": "<p>oh, I meant \"does not load rustc_mir from the sysroot\"</p>",
        "id": 216299524,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059841
    },
    {
        "content": "<p>I was trying to clarify that at runtime it could load it from the sysroot if rustc_mir was a dylib (like it was at some point, these days it's statically linked into rustc_driver)</p>",
        "id": 216299568,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059873
    },
    {
        "content": "<p>ohhhh I see, the sysroot <em>also</em> has shared objects</p>",
        "id": 216299689,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059894
    },
    {
        "content": "<p>ok that makes sense, the way llvm is a shared object</p>",
        "id": 216299696,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059903
    },
    {
        "content": "<p>and libstd too, look at that</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ls $(rustc --print sysroot)/lib\nlibchalk_derive-46a5a352f0138c2f.so  libstd-7edd956e9d8d05ea.so\nlibLLVM-11-rust-1.49.0-nightly.so    libtest-5016d499037f0dbe.so\nlibrustc_driver-a574036e5082812b.so  libtracing_attributes-f365db74608592aa.so\nlibrustc_macros-526b2b3435deae8e.so  rustlib\n</code></pre></div>",
        "id": 216299741,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605059953
    },
    {
        "content": "<p>that is not the sysroot</p>",
        "id": 216299746,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059960
    },
    {
        "content": "<p>or, rather, not the one rustc loads from</p>",
        "id": 216299750,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059969
    },
    {
        "content": "<p>you want lib/rustlib/$target/lib</p>",
        "id": 216299756,
        "sender_full_name": "simulacrum",
        "timestamp": 1605059980
    },
    {
        "content": "<p>(which you can remember by thinking \"I want to cross-compile, so we need a target arch in the path somewhere\")</p>",
        "id": 216299822,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060009
    },
    {
        "content": "<p>hmm, what's the difference? I see rustlib/ has proc_macro and libunwind and a bunch of other things</p>",
        "id": 216299845,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060029
    },
    {
        "content": "<p>what is lib/ alone used for?</p>",
        "id": 216299851,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060039
    },
    {
        "content": "<p>that's like the compiler itself</p>",
        "id": 216299868,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060067
    },
    {
        "content": "<p>basically we want to share the compiler code between clippy / rustc/ rustdoc</p>",
        "id": 216299877,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060079
    },
    {
        "content": "<p>chalk_derive and rustc_macros are just \"bugs\" in rustbuild, they don't actually need to be there</p>",
        "id": 216299882,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060099
    },
    {
        "content": "<p>everything else I would expect to be a shared library dep of rustc</p>",
        "id": 216299930,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060127
    },
    {
        "content": "<p>lib/ is built by stage 1 and rustlib/ is built by stage 2? or vice versa?</p>",
        "id": 216299937,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060132
    },
    {
        "content": "<p>in published artifacts they're duplicates of each other (literally copied)</p>",
        "id": 216299955,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060166
    },
    {
        "content": "<p>right, yeah, maybe 'built by' is not the best terminology - I think 'linked to' is better</p>",
        "id": 216299970,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060191
    },
    {
        "content": "<p>is rustlib linked to <code>rustc</code> or to programs built by rustc?</p>",
        "id": 216299981,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060209
    },
    {
        "content": "<p>built by</p>",
        "id": 216299984,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060214
    },
    {
        "content": "<p>for build/stageN, lib/ is stageN-1 artifacts, rustlib/.../lib is stageN artifacts</p>",
        "id": 216299995,
        "sender_full_name": "simulacrum",
        "timestamp": 1605060241
    },
    {
        "content": "<p>this is super helpful :D thank you!</p>",
        "id": 216300034,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060257
    },
    {
        "content": "<p>What do you mean by published artifact?</p>",
        "id": 216300043,
        "sender_full_name": "Charles Ellis O'Riley Jr.",
        "timestamp": 1605060271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"344328\">@Charles Ellis O'Riley Jr.</span> like packaged with rustup</p>",
        "id": 216300049,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060279
    },
    {
        "content": "<p><span aria-label=\"call me\" class=\"emoji emoji-1f919\" role=\"img\" title=\"call me\">:call_me:</span></p>",
        "id": 216300059,
        "sender_full_name": "Charles Ellis O'Riley Jr.",
        "timestamp": 1605060292
    },
    {
        "content": "<p>opened <a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/953\">https://github.com/rust-lang/rustc-dev-guide/issues/953</a> so I don't forget to write this up :) thanks again!</p>",
        "id": 216300254,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605060507
    }
]