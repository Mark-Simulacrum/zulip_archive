[
    {
        "content": "<p>Hi folks!  I've gotten my PR for the new <code>?</code> desugaring done enough to get through CI &amp; a try build, but now I'm at the point where I think I need advice to finalize it.</p>\n<ul>\n<li>\n<p>I did a <a href=\"https://perf.rust-lang.org/compare.html?start=59f551a2dcf57c0d3d96ac5ef60e000524210469&amp;end=9e1fbcd2d92fbe606de781106bb28b5c1e981c0a\">perf run</a>, and while it's sometimes 2% better, it looks like it's overall a bit worse, so I'd appreciate suggestions on how I should figure out what's up there.</p>\n</li>\n<li>\n<p>I added a bunch of <code>rustc_on_unimplemented</code> that mean most of the error messages are <a href=\"https://github.com/rust-lang/rust/pull/84767/files#diff-51c8fb66fa779e1d29208d988bf59e70994eb631a1cd9a65ee66c9e60db440c7R1-R13\">pretty good</a> IMHO, but there are a few that lost some of the special <code>?</code> updates.  How much of that needs to be fixed as part of this PR?  (Some of them I'm uncertain about, since things like \"note: <code>?</code> implicitly converts the error value\" aren't technically correct, so maybe need to be made Result-specific?)  And for things like the ones in inference, I could use some assistance in understanding how to fix them.</p>\n</li>\n<li>\n<p>Who's the right person to review it all?  There are enough places that care about <code>?</code> (codegen tests, mir tests, clippy lints, ...) that this ended up touching a whole bunch of stuff, and I couldn't figure out a great way to split it further.</p>\n</li>\n</ul>",
        "id": 237220504,
        "sender_full_name": "scottmcm",
        "timestamp": 1620072353
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Help.20getting.20.2384767.20.28my.20.60.3F.60.20PR.29.20ready.20for.20merge/near/237220504\">said</a>:</p>\n<blockquote>\n<ul>\n<li>I did a <a href=\"https://perf.rust-lang.org/compare.html?start=59f551a2dcf57c0d3d96ac5ef60e000524210469&amp;end=9e1fbcd2d92fbe606de781106bb28b5c1e981c0a\">perf run</a>, and while it's sometimes 2% better, it looks like it's overall a bit worse, so I'd appreciate suggestions on how I should figure out what's up there.</li>\n</ul>\n</blockquote>\n<p>the details screen shows a heavy regression on <code>type_op_prove_predicate</code> - maybe take a look into that? <a href=\"/user_uploads/4715/Lq8em2DAiWq7Fg0s9_R1l3-r/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/Lq8em2DAiWq7Fg0s9_R1l3-r/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/Lq8em2DAiWq7Fg0s9_R1l3-r/image.png\"></a></div>",
        "id": 237220740,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1620072455
    },
    {
        "content": "<p>^ this screenshot is from diesel</p>",
        "id": 237220753,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1620072460
    },
    {
        "content": "<p><code>type_op_normalize_predicate</code> too</p>",
        "id": 237220784,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1620072480
    },
    {
        "content": "<p>the cargo one just looks like noise from CGUs, I wouldn't worry about it too much</p>",
        "id": 237220907,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1620072514
    },
    {
        "content": "<blockquote>\n<p>I added a bunch of rustc_on_unimplemented that mean most of the error messages are pretty good IMHO, but there are a few that lost some of the special ? updates. How much of that needs to be fixed as part of this PR? (Some of them I'm uncertain about, since things like \"note: ? implicitly converts the error value\" aren't technically correct, so maybe need to be made Result-specific?) And for things like the ones in inference, I could use some assistance in understanding how to fix them.</p>\n</blockquote>\n<p>I would tag <span class=\"user-mention silent\" data-user-id=\"119031\">Esteban KÃ¼ber</span> on the PR maybe</p>",
        "id": 237221176,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1620072624
    }
]