[
    {
        "content": "<p>Can someone tell me what type of LTO is used to build the released rustc versions (the ones obtainable via rustup)?</p>",
        "id": 227051272,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1613781359
    },
    {
        "content": "<p>That is, thin, local thin, or fat?</p>",
        "id": 227051328,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1613781380
    },
    {
        "content": "<p>the Cargo.toml file doesn't appear to list anything, so it's probably the default release profile value: <code>lto=false</code></p>",
        "id": 227052311,
        "sender_full_name": "Lokathor",
        "timestamp": 1613782165
    },
    {
        "content": "<p>Thanks! So that suggests thin local most likely. I'm a bit surprised. If we're going so far as to do things like PGO, I'd think we'd want do a thing like full crate-graph LTO.</p>",
        "id": 227053024,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1613782730
    },
    {
        "content": "<p>I'd hate to see what that does to compile times :/</p>",
        "id": 227053061,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1613782785
    },
    {
        "content": "<p>I was thinking just for the released ones, not the ones we build for development, or even CI. :)</p>",
        "id": 227053177,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1613782843
    },
    {
        "content": "<p>there's no such things as released binaries, we directly copy from CI to nightly/beta/stable</p>",
        "id": 227053449,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783087
    },
    {
        "content": "<p>I believe thinlto is the default though? Or at least that's what I thought was the default</p>",
        "id": 227053484,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783125
    },
    {
        "content": "<p>ah, on x86_64-unknown-linux-gnu we build LLVM with ThinLTO</p>",
        "id": 227053592,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783206
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile#L100\">https://github.com/rust-lang/rust/blob/master/src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile#L100</a></p>",
        "id": 227053622,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783232
    },
    {
        "content": "<p>config::Lto::ThinLocal is the default in rustc at least</p>",
        "id": 227053701,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783293
    },
    {
        "content": "<p>so lto just within the local crate</p>",
        "id": 227053718,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783310
    },
    {
        "content": "<p>which isn't actually reachable with -Clto=thin, that's a full crate graph thinlto</p>",
        "id": 227053747,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783365
    },
    {
        "content": "<p>Interesting... I'm curious about the impact of doing full graph LTO in CI.</p>",
        "id": 227054072,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1613783687
    },
    {
        "content": "<p>You could probably try it on a try build; my guess is it won't be worth the tradeoff of CI time vs runtime wins</p>",
        "id": 227054222,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783827
    },
    {
        "content": "<p>If you wanted to try it the easiest thing is likely to hack rustbuild to pass it for just Mode::Rustc, grepping for CODEGEN_UNITS is a good start</p>",
        "id": 227054299,
        "sender_full_name": "simulacrum",
        "timestamp": 1613783897
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/LTO.20used.20for.20released.20rustcs/near/227054222\">said</a>:</p>\n<blockquote>\n<p>You could probably try it on a try build; my guess is it won't be worth the tradeoff of CI time vs runtime wins</p>\n</blockquote>\n<p>Yeah, you might be right. I'm thinking  about a future where our LTO is able to do devirtualization of some trait method calls. Then the wins might be more substantial.</p>",
        "id": 227054401,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1613784004
    },
    {
        "content": "<p>Found <a href=\"https://github.com/rust-lang/rust/issues/49180\">#49180</a></p>",
        "id": 227055875,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1613785530
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/LTO.20used.20for.20released.20rustcs/near/227054299\">said</a>:</p>\n<blockquote>\n<p>If you wanted to try it the easiest thing is likely to hack rustbuild to pass it for just Mode::Rustc, grepping for CODEGEN_UNITS is a good start</p>\n</blockquote>\n<p><code>dylib</code> crate types don't support LTO, so I don't think it is possible with the current way it is built.</p>",
        "id": 227057927,
        "sender_full_name": "Eric Huss",
        "timestamp": 1613787773
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/cargo/reference/profiles.html#release\">https://doc.rust-lang.org/cargo/reference/profiles.html#release</a> this says release is false by default (aka thin-local)</p>",
        "id": 227058660,
        "sender_full_name": "Lokathor",
        "timestamp": 1613788479
    },
    {
        "content": "<p>so that is correct or does it need an update?</p>",
        "id": 227058694,
        "sender_full_name": "Lokathor",
        "timestamp": 1613788522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> I think that's cargo false, which might mean it's not passed at all to rustc, which is a different default then?</p>",
        "id": 227058774,
        "sender_full_name": "simulacrum",
        "timestamp": 1613788580
    },
    {
        "content": "<p>yeah that seems to be the case when testing locally</p>",
        "id": 227058789,
        "sender_full_name": "simulacrum",
        "timestamp": 1613788618
    },
    {
        "content": "<p>cargo and rustc both having defaults can be confusing in cases like this</p>",
        "id": 227058812,
        "sender_full_name": "simulacrum",
        "timestamp": 1613788633
    },
    {
        "content": "<p>i think we really should be turning this on for rustc that gets sent to the world via rustup, assuming we believe in LTO at all.</p>",
        "id": 227058894,
        "sender_full_name": "Lokathor",
        "timestamp": 1613788691
    },
    {
        "content": "<p>hm, it seems like an odd claim to make that LTO is right for rustc - it might be right for some situations, but not necessarily rustc</p>",
        "id": 227059416,
        "sender_full_name": "simulacrum",
        "timestamp": 1613789314
    },
    {
        "content": "<p>e.g. I imagine there could be some size wins</p>",
        "id": 227059417,
        "sender_full_name": "simulacrum",
        "timestamp": 1613789321
    },
    {
        "content": "<p>er, rather, that if it's not right for rustc, then it's not right for anything</p>",
        "id": 227059425,
        "sender_full_name": "simulacrum",
        "timestamp": 1613789342
    },
    {
        "content": "<p>that said I have a very small belief in lto :)</p>",
        "id": 227059440,
        "sender_full_name": "simulacrum",
        "timestamp": 1613789348
    },
    {
        "content": "<p>that last sentence seals it ;P</p>",
        "id": 227060321,
        "sender_full_name": "Lokathor",
        "timestamp": 1613790256
    },
    {
        "content": "<p>Now, pgo for LLVM I think would be good - but that's in the works, just moving slowly</p>",
        "id": 227060386,
        "sender_full_name": "simulacrum",
        "timestamp": 1613790356
    }
]