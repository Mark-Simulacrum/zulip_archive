[
    {
        "content": "<p>Is it possible to apply code transformations at the HIR level, particularly after trait selection? This would be to implement some sort of language feature or behind-the-scenes transformation (ignore for the time being whether that's advisable).</p>\n<p>The only thing I know of that is remotely similar is <code>await</code>. It seems to me that rustc performs those code transformations during lowering, though, not afterward.</p>",
        "id": 263947888,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1638840103
    },
    {
        "content": "<p>The exact use case would be to do the following:</p>\n<p>For every return expression in a function body:</p>\n<ul>\n<li>Is the expression of the type <code>core::result::Result&lt;T, E&gt;</code>?</li>\n<li>Does <code>E</code> implement some trait <code>core::my::Trait</code> (which has <code>rustc_diagnostic_item</code>)?</li>\n<li>If so, surround the expression with <code>core::result::Result::Ok(..?)</code></li>\n</ul>",
        "id": 263947997,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1638840209
    },
    {
        "content": "<p>No, HIR is immutable. If you want to do a transformatiom after typeck you will have to do it during MIR building.</p>",
        "id": 263966111,
        "sender_full_name": "bjorn3",
        "timestamp": 1638861323
    }
]