[
    {
        "content": "<p>This started as a discord discussion (<a href=\"https://internals.rust-lang.org/t/using-the-rustc-interface-crate/11982/22\" title=\"https://internals.rust-lang.org/t/using-the-rustc-interface-crate/11982/22\">https://internals.rust-lang.org/t/using-the-rustc-interface-crate/11982/22</a>) with <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> and <span class=\"user-mention\" data-user-id=\"198054\">@mark-i-m</span> and then evolved into a github issue (<a href=\"https://github.com/rust-lang/rust/issues/71770\" title=\"https://github.com/rust-lang/rust/issues/71770\">https://github.com/rust-lang/rust/issues/71770</a>) discussion with <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> . The original motivation was \"I would like to be able to read the stream of diagnostics without having to buffer and parse JSON\", but it seems this is an instance of a larger question: is rustc_interface intended to be a high-level interface for rustc?</p>",
        "id": 196069886,
        "sender_full_name": "George Fraser",
        "timestamp": 1588453231
    },
    {
        "content": "<p>rustc_interface seems to be missing many of the components you typically see in a compiler API like the Java Compiler API, or F# compiler service, or many others. Such as, documentation of how to do basic tasks like parsing and getting a pointer to a range, or the present example of a typed API for diagnostics. I am happy to help work on these things, but based on <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> response in the github issue, I am now wondering whether rustc_interface is in fact intended to be a compiler-API in the tradition of these other compiler APIs I have mentioned.</p>",
        "id": 196069957,
        "sender_full_name": "George Fraser",
        "timestamp": 1588453361
    },
    {
        "content": "<p>No, I don't think it is, or at least not today</p>",
        "id": 196069966,
        "sender_full_name": "simulacrum",
        "timestamp": 1588453383
    },
    {
        "content": "<p>it's intended perhaps for internal consumption (e.g. clippy would also use it, I believe)</p>",
        "id": 196069972,
        "sender_full_name": "simulacrum",
        "timestamp": 1588453400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> FYI</p>",
        "id": 196069974,
        "sender_full_name": "George Fraser",
        "timestamp": 1588453406
    },
    {
        "content": "<p>but not really for public consumption</p>",
        "id": 196069975,
        "sender_full_name": "simulacrum",
        "timestamp": 1588453406
    }
]