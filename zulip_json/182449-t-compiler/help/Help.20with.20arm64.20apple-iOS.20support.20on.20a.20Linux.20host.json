[
    {
        "content": "<p>I have an Apple LLVM toolchain compiled for linux, with arm64/arm64e support. I have added the appropiate targets to the rustc source code, but get various errors</p>\n<div class=\"codehilite\"><pre><span></span><code>[target.arm64-apple-ios]\nlinker = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/ld64&quot;\ncc = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/clang&quot;\ncxx = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/clang++&quot;\nar = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/llvm-ar&quot;\nranlib = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/llvm-ranlib&quot;\nllvm-filecheck = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/FileCheck&quot;\nllvm-config = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/llvm-config&quot;\n\n[target.arm64e-apple-ios]\nlinker = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/ld64&quot;\ncc = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/clang&quot;\ncxx = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/clang++&quot;\nar = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/llvm-ar&quot;\nranlib = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/llvm-ranlib&quot;\nllvm-filecheck = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/FileCheck&quot;\nllvm-config = &quot;/home/aleister/Builds/ios-arm64e-clang-toolchain/bin/llvm-config&quot;\n</code></pre></div>",
        "id": 200940036,
        "sender_full_name": "aspen",
        "timestamp": 1592252325
    },
    {
        "content": "<p>and yes, I have renamed aarch64-apple-ios to arm64-apple-ios and updated the appropriate locations in the source, because arm64 is the proper terminology.</p>",
        "id": 200940108,
        "sender_full_name": "aspen",
        "timestamp": 1592252362
    },
    {
        "content": "<p>help would be appreciated, i'm tired of using a macOS VM.</p>",
        "id": 200959542,
        "sender_full_name": "aspen",
        "timestamp": 1592265126
    },
    {
        "content": "<p>personally, I have very little knowledge about iOS or arm, but would <code>rustup target add aarch64-apple-ios</code> work?</p>",
        "id": 200971441,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592280762
    },
    {
        "content": "<p>and then compile with <code>cargo build --target aarch64-apple-ios</code></p>",
        "id": 200971462,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592280790
    },
    {
        "content": "<p>(sorry, corrected the rustup command)</p>",
        "id": 200971548,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592280888
    },
    {
        "content": "<p>(also, sorry, if this is a completely off-base suggestion...)</p>",
        "id": 200971579,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592280940
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"198054\">mark-i-m</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Help.20with.20arm64.20apple-iOS.20support.20on.20a.20Linux.20host/near/200971441\">said</a>:</p>\n<blockquote>\n<p>personally, I have very little knowledge about iOS or arm, but would <code>rustup target add aarch64-apple-ios</code> work?</p>\n</blockquote>\n<p>not rly, because the official target has dynamic linking support off, even though it fully works when turned off.</p>\n<p>plus i need to compile in arm64e support, which is currently a pain because cc-rs/compiler-builtins is an ass.</p>",
        "id": 201049880,
        "sender_full_name": "aspen",
        "timestamp": 1592329318
    },
    {
        "content": "<p>ah, sorry, I don't have any ideas then</p>",
        "id": 201055115,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592331805
    }
]