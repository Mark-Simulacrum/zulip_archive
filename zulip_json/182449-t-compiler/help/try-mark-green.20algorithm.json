[
    {
        "content": "<p><a href=\"https://rustc-dev-guide.rust-lang.org/queries/incremental-compilation.html#the-try-mark-green-algorithm\">https://rustc-dev-guide.rust-lang.org/queries/incremental-compilation.html#the-try-mark-green-algorithm</a></p>\n<blockquote>\n<p>At the core of incremental compilation is an algorithm called \"try-mark-green\". It has the job of determining the color of a given query Q (<strong><em>which must not have yet been executed</em></strong>). In cases where Q has red inputs, determining Q's color may involve re-executing Q so that we can compare its output, but if all of Q's inputs are green, then we can conclude that Q must be green without re-executing it or inspecting its value at all.</p>\n</blockquote>\n<p>If Q is not executed how can it be known that Q has red input, and if the query is red it means it ran before but if it ran before how can the algorithm work since it requires a query to be <strong>must</strong> not have yet been executed ?</p>",
        "id": 263450600,
        "sender_full_name": "Oguz Agcayazi",
        "timestamp": 1638457683
    },
    {
        "content": "<p>I believe we can know if the inputs to the query system have changed, so we can determine whether the queries which depend on the inputs need re-executed or not (re-execution here is the first execution in the current compilation session, the previous execution was in the original compilation session). Once a query has been re-executed, we know if its result is different from before, and that determines whether it is green or red. Because we trust that every query is deterministic, queries that only depend on green queries don't need re-executed.</p>",
        "id": 263451410,
        "sender_full_name": "davidtwco",
        "timestamp": 1638457975
    }
]