[
    {
        "content": "<p>Hello!<br>\nI've ran into issue where compile times take over hour for stable rust (<code>cargo b</code>) but on nightly it takes few minutes (<code>cargo +nightly b</code>). What can I do to troubleshoot this? I've tried using  <code> -C linker=rust-lld.exe</code> and  <code>lto=off</code> but it didn't help. I'm running on Windows. My colleague  doesn't have this problem since he switched to zld linker on Mac.</p>",
        "id": 272783202,
        "sender_full_name": "Vilda",
        "timestamp": 1645525002
    },
    {
        "content": "<p>You could try bisecting nightlies. <a href=\"https://blog.rust-lang.org/inside-rust/2019/12/18/bisecting-rust-compiler.html\">https://blog.rust-lang.org/inside-rust/2019/12/18/bisecting-rust-compiler.html</a><br>\nAlternatively there are some options that can be used to look at how long various passes take, but if it takes an hour and stuff only gets printed when the pass finishes it can be tedious.</p>",
        "id": 272845078,
        "sender_full_name": "The 8472",
        "timestamp": 1645553981
    },
    {
        "content": "<p>cargo-bisect-rustc has a <code>--timeout</code> option for this situation.</p>",
        "id": 272849692,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645556008
    },
    {
        "content": "<p>Does beta have the issue?</p>",
        "id": 272850109,
        "sender_full_name": "Gary Guo",
        "timestamp": 1645556166
    },
    {
        "content": "<p>There's no issue with nightly  and cargo-bisect-rustc seems to work only for nightly.<br>\nMy issue is this:</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo clean\ncargo build\nFinished dev [unoptimized + debuginfo] target(s) in 68m 40s\n</code></pre></div>\n<p>As you can see the stable build takes 68m and that's too much.<br>\nWhen I run it on nightly</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo clean\ncargo +nightly build\nFinished dev [unoptimized + debuginfo] target(s) in 2m 43s\n</code></pre></div>\n<p>That's too big of difference. These are the toolchains:</p>\n<div class=\"codehilite\"><pre><span></span><code> rustup toolchain list\nstable-x86_64-pc-windows-msvc (default)\nnightly-x86_64-pc-windows-msvc\n</code></pre></div>\n<p>and rustc version:<br>\n<code>rustc 1.58.1 (db9d1b20b 2022-01-20)</code></p>\n<p>I'll try to reinstall both of rustc, rustup and toolchains and see if that helps.</p>",
        "id": 272912961,
        "sender_full_name": "Vilda",
        "timestamp": 1645601280
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"480514\">@Vilda</span>. </p>\n<blockquote>\n<p>There's no issue with nightly and cargo-bisect-rustc seems to work only for nightly.</p>\n</blockquote>\n<p>What you'll want to do is use a nightly build from around 12 weeks ago (which is when the current stable release branched off from nightly). That would be about <code>2021-12-01</code>.</p>",
        "id": 272956226,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645626839
    },
    {
        "content": "<p>Just as a shot in the dark, you may want to see if you're hitting the \"projection caching\" issue fixed in <a href=\"https://github.com/rust-lang/rust/pull/89831\">https://github.com/rust-lang/rust/pull/89831</a>. You can test some nightlies around that PR to see if the performance improves (test say, nightly <code>2021-12-18</code> as the before and <code>2021-12-22</code> as the after.</p>",
        "id": 272957035,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1645627264
    }
]