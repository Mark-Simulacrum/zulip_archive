[
    {
        "content": "<p>In the documentation for <a href=\"https://doc.rust-lang.org/std/ptr/fn.read_volatile.html\">std::ptr::volatile_load</a>, it says:</p>\n<blockquote>\n<p><code>src</code> must point to a properly initialized value of type <code>T</code></p>\n</blockquote>\n<p>What does it mean for a value to be properly initialized here? I can think of a couple ways to define this \"proper initialization\":</p>\n<ol>\n<li>The value is marked as such by the compiler</li>\n<li>Its bit-pattern is considered valid for type <code>T</code></li>\n</ol>",
        "id": 272730714,
        "sender_full_name": "Adrian Palacios",
        "timestamp": 1645474189
    },
    {
        "content": "<p>The bit-pattern is valid for type <code>T</code> (as necessary to prevent UB at the compiler level) and all invariants of the type hold. (as necessary to prevent UB at the library level)</p>",
        "id": 272731959,
        "sender_full_name": "bjorn3",
        "timestamp": 1645475108
    }
]