[
    {
        "content": "<p>hi, how do I print an hir::Expr? I want to print the code that it represents, how do I do that?</p>",
        "id": 209947132,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600026951
    },
    {
        "content": "<p>(it's for an error message)</p>",
        "id": 209947263,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600027148
    },
    {
        "content": "<p>for an error message I would use a diagnostic instead</p>",
        "id": 209947274,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027163
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.Diagnostic.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.Diagnostic.html</a></p>",
        "id": 209947277,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027172
    },
    {
        "content": "<p><a href=\"https://rustc-dev-guide.rust-lang.org/diagnostics.html\">https://rustc-dev-guide.rust-lang.org/diagnostics.html</a></p>",
        "id": 209947289,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027195
    },
    {
        "content": "<p>Can you use its <code>span</code>?</p>",
        "id": 209947378,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600027286
    },
    {
        "content": "<p>well I need that for building the suggestion</p>",
        "id": 209947448,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600027365
    },
    {
        "content": "<p>I wondered about <code>span</code> too, but I was not sure how to convert it into DIsplay or &amp;str</p>",
        "id": 209947467,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600027422
    },
    {
        "content": "<p>it might help to look at an existing example: <a href=\"https://github.com/rust-lang/rust/pull/76143/files#diff-0d908c5802dbf98407b95601565449f6R1087\">https://github.com/rust-lang/rust/pull/76143/files#diff-0d908c5802dbf98407b95601565449f6R1087</a></p>",
        "id": 209947542,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027522
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/printing.20an.20hir.3A.3AExpr/near/209947542\">said</a>:</p>\n<blockquote>\n<p>it might help to look at an existing example: <a href=\"https://github.com/rust-lang/rust/pull/76143/files#diff-0d908c5802dbf98407b95601565449f6R1087\">https://github.com/rust-lang/rust/pull/76143/files#diff-0d908c5802dbf98407b95601565449f6R1087</a></p>\n</blockquote>\n<p>I believe the problem is concatenating that <code>span</code> with something else?</p>",
        "id": 209947584,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600027563
    },
    {
        "content": "<p>well if you have a span the diagnostic will print the source code for you</p>",
        "id": 209947599,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027599
    },
    {
        "content": "<p>you don't need to stringify the HIR or anything like that</p>",
        "id": 209947602,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027606
    },
    {
        "content": "<p>Otherwise there's <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir_pretty/index.html\"><code>rustc_hir_pretty</code></a>, not sure if that's relevant</p>",
        "id": 209947679,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600027741
    },
    {
        "content": "<p><code>        let sugg = format!(\"{}.insert({:?}, {})\", base_string_snippet, lit, extension_string);</code></p>",
        "id": 209947684,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600027754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/printing.20an.20hir.3A.3AExpr/near/209947599\">said</a>:</p>\n<blockquote>\n<p>well if you have a span the diagnostic will print the source code for you</p>\n</blockquote>\n<p>Though you won't be able to tweak it</p>",
        "id": 209947686,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600027760
    },
    {
        "content": "<p>oh I see you want a structured suggestion</p>",
        "id": 209947688,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027774
    },
    {
        "content": "<p>yeah not sure about those, sorry</p>",
        "id": 209947691,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600027779
    },
    {
        "content": "<p>where the <code>:?</code> is, I'm trying to put the second function arg which I can get via <code>&amp;args[1]</code></p>",
        "id": 209947697,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600027802
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"217864\">matthiaskrgr</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/printing.20an.20hir.3A.3AExpr/near/209947467\">said</a>:</p>\n<blockquote>\n<p>I wondered about <code>span</code> too, but I was not sure how to convert it into DIsplay or &amp;str</p>\n</blockquote>\n<p>I don't know if this is relevant to what you're asking about, but there's <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/source_map/struct.SourceMap.html#method.span_to_snippet\"><code>span_to_snippet</code></a>.</p>",
        "id": 209956847,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600044004
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"217864\">@matthiaskrgr</span> Did you solve this, and if so can you explain me how? I have a similar need <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 210670081,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600613413
    },
    {
        "content": "<p>uh, I just used the span.. <code>args[0].span</code></p>",
        "id": 210670253,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600613684
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>        let pos_arg = snippet(cx, args[1].span, &quot;..&quot;);\n        let sugg = format!(&quot;{}.insert({}, {})&quot;, base_string_snippet, pos_arg, extension_string);\n</code></pre></div>",
        "id": 210670269,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600613724
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust-clippy/pull/6037/files#diff-76448e132e544f8a1ff89ffa05ef9566R3350\">https://github.com/rust-lang/rust-clippy/pull/6037/files#diff-76448e132e544f8a1ff89ffa05ef9566R3350</a></p>",
        "id": 210670271,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600613734
    },
    {
        "content": "<p>(Expr.span basically)  <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/struct.Expr.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/struct.Expr.html</a></p>",
        "id": 210670331,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600613788
    },
    {
        "content": "<p>Got it, thanks!</p>",
        "id": 210673310,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1600618551
    }
]