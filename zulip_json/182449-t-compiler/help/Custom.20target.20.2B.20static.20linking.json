[
    {
        "content": "<p>Heya everyone! I'm building for riscv64ima-unknown-linux-gnu and thus I'm using build-std to do some fancy magic. I'm trying to get rust to compile a static binary and it really seems to want to refuse. The linking command it emits is _so close_ but it's including a \"-Wl,-Bdynamic\" and a \"-lgcc_s\" which if were omit, the static binary would successfully build. I peeked around in Rust and it seems like these are not configurable things?<br>\nHere's kinda all the different commands/files: <a href=\"https://gist.github.com/gamozolabs/5749465e349be7289bf3f2c61ac52aa4\">https://gist.github.com/gamozolabs/5749465e349be7289bf3f2c61ac52aa4</a><br>\nWhat's being built is just hello world. It seems that internally Rust seems to key off of the environment in some <code>cfg()</code> flags (checking musl vs glibc) and glibc seems hard to coerce into building static?</p>",
        "id": 214138171,
        "sender_full_name": "Brandon Falk",
        "timestamp": 1603334300
    },
    {
        "content": "<p>TL;DR: <a href=\"/user_uploads/4715/aYjIumUmYCofLyJTcCNzlE-q/image.png\">image.png</a> If I remove these 2 flags in red I'll get a statically compiled binary that matches my requirements, but they seem to be baked into the linker command generation.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/aYjIumUmYCofLyJTcCNzlE-q/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/aYjIumUmYCofLyJTcCNzlE-q/image.png\"></a></div>",
        "id": 214138784,
        "sender_full_name": "Brandon Falk",
        "timestamp": 1603335135
    },
    {
        "content": "<p>Might be a bit of a hack, but setting <code>RUSTFLAGS=\"-Zlink-native-libraries=off\"</code> and using:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;late-link-args&quot;: {\n      &quot;gcc&quot;: [\n          &quot;-Wl,-Bstatic&quot;,\n          &quot;-lpthread&quot;\n      ]\n  },\n</code></pre></div>\n\n\n<p>Does the trick to get hello world building on this target staticially</p>",
        "id": 214139721,
        "sender_full_name": "Brandon Falk",
        "timestamp": 1603336444
    },
    {
        "content": "<p>Have you tried passing <code> -C target-feature=+crt-static</code>?</p>",
        "id": 214146902,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1603347033
    },
    {
        "content": "<p>That should cause rust to stop passing <code>-Bdynamic</code>, and switch from gcc_s to the static gcc libraries.</p>",
        "id": 214146933,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1603347094
    },
    {
        "content": "<p>(Make sure you're using latest nightly for that. I just fixed it recently. :) )</p>",
        "id": 214146994,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1603347140
    },
    {
        "content": "<p>Oooh, I tried it but it \"didn't work\". But I'm on 1.47.0-nightly (nightly features on stable branch), I will give it a look!</p>",
        "id": 214151185,
        "sender_full_name": "Brandon Falk",
        "timestamp": 1603351115
    },
    {
        "content": "<p>If it's not much digging, what's the PR/issue that tracked the fix? I'd be curious to peek at the diff and version</p>",
        "id": 214151247,
        "sender_full_name": "Brandon Falk",
        "timestamp": 1603351169
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/77386\">https://github.com/rust-lang/rust/pull/77386</a> (but there was also some work required on the libc crate IIRC)</p>",
        "id": 214157588,
        "sender_full_name": "lqd",
        "timestamp": 1603355615
    },
    {
        "content": "<p>Oh wow, what are the odds! Thanks! Custom target specifications + build-std are just so powerful, I'm gonna experiment a bit more with this on some other targets and architectures I work with, most of which are using static binaries</p>",
        "id": 214166873,
        "sender_full_name": "Brandon Falk",
        "timestamp": 1603361723
    }
]