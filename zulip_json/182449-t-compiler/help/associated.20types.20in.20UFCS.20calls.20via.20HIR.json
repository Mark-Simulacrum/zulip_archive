[
    {
        "content": "<p>Does anyone know what I'm doing wrong here trying to create a call to Future::poll in HIR? <a href=\"https://github.com/rust-lang/rust/commit/5eb7eed0300eaeca84aeab57b61c40369375874f\" title=\"https://github.com/rust-lang/rust/commit/5eb7eed0300eaeca84aeab57b61c40369375874f\">https://github.com/rust-lang/rust/commit/5eb7eed0300eaeca84aeab57b61c40369375874f</a></p>\n<p>The synthesized code hits an error saying that the associated Output type needs to be specified:</p>\n<div class=\"codehilite\"><pre><span></span>error[E0191]: the value of the associated type `Output` (from trait `std::future::Future`) must be specified\n  --&gt; /home/sfackler/code/rust/src/test/ui/async-await/async-with-closure.rs:21:5\n   |\nLL |     get_future(messages).await;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: specify the associated type: `get_future(messages).await&lt;Output = Type&gt;`\n</pre></div>",
        "id": 192986434,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1586134714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243558\">@Steven Fackler</span> are you creating <code>&lt;Future&gt;::poll</code> or <code>Future::poll</code>?</p>",
        "id": 192986977,
        "sender_full_name": "eddyb",
        "timestamp": 1586135568
    },
    {
        "content": "<p>the former isn't what it looks like :P</p>",
        "id": 192986983,
        "sender_full_name": "eddyb",
        "timestamp": 1586135590
    },
    {
        "content": "<p>it's <code>&lt;dyn Future&gt;::poll</code> which is why it wants the associated type specified</p>",
        "id": 192986992,
        "sender_full_name": "eddyb",
        "timestamp": 1586135603
    },
    {
        "content": "<p>Yeah, I want to be making <code>Future::poll</code></p>",
        "id": 192987001,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1586135607
    },
    {
        "content": "<p><code>Future</code> in <code>Future::poll</code> is like a module, not like a type</p>",
        "id": 192987012,
        "sender_full_name": "eddyb",
        "timestamp": 1586135627
    },
    {
        "content": "<p>ah right I don't want QPath::TypeRelative</p>",
        "id": 192987055,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1586135653
    },
    {
        "content": "<p>so it's a regular path, <em>not</em> qualified at all (from the point of view of the compiler)</p>",
        "id": 192987056,
        "sender_full_name": "eddyb",
        "timestamp": 1586135659
    },
    {
        "content": "<p>right</p>",
        "id": 192987057,
        "sender_full_name": "eddyb",
        "timestamp": 1586135660
    },
    {
        "content": "<p>look at how <code>Iterator::next</code> is called for <code>for</code> loops and copy that, I guess?</p>",
        "id": 192987082,
        "sender_full_name": "eddyb",
        "timestamp": 1586135732
    },
    {
        "content": "<p>ah yeah good call</p>",
        "id": 192987088,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1586135752
    },
    {
        "content": "<p>thanks!</p>",
        "id": 192987089,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1586135754
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_ast_lowering/expr.rs#L1091\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_ast_lowering/expr.rs#L1091\">https://github.com/rust-lang/rust/blob/master/src/librustc_ast_lowering/expr.rs#L1091</a></p>",
        "id": 192987153,
        "sender_full_name": "eddyb",
        "timestamp": 1586135789
    },
    {
        "content": "<p>yeah so it just looks like a module path</p>",
        "id": 192987156,
        "sender_full_name": "eddyb",
        "timestamp": 1586135798
    }
]