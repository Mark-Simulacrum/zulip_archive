[
    {
        "content": "<p>I've spent the last two days looking at a case where adding an unnecessary <code>.into()</code> makes the compiler generate more assembly.</p>\n<p>I tried putting #[inline(always)] on the <a href=\"https://doc.rust-lang.org/src/core/convert/mod.rs.html#553-569\">two relevant trait impls</a> and it made my code smaller but the case I was looking at earlier still didn't inline.</p>\n<p>Today I tried to make a minimal reproduction of it but it is too flaky for that. I am currently at a point where adding a feature flag to Cargo.toml makes it work properly, even if the flag is not used. It also stopped reproducing on stable at some point in the minimization process but continued to work on nightly and my own stage2.</p>\n<p>Is this a bug? I thought inline(always) was supposed to force inlining, which should result in no code being generated.</p>",
        "id": 204697469,
        "sender_full_name": "Joonatan Saarhelo",
        "timestamp": 1595439201
    },
    {
        "content": "<p><code>always</code> === \"try really hard\". It doesn't actually mean always, sadly.</p>",
        "id": 204697697,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595439351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/identity.20conversion.20is.20not.20inlined/near/204697697\">said</a>:</p>\n<blockquote>\n<p><code>always</code> === \"try really hard\". It doesn't actually mean always, sadly.</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/53827\">https://github.com/rust-lang/rust/issues/53827</a></p>",
        "id": 204698038,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595439532
    },
    {
        "content": "<p>ok, that explains it somewhat</p>",
        "id": 204698355,
        "sender_full_name": "Joonatan Saarhelo",
        "timestamp": 1595439721
    },
    {
        "content": "<p>But maybe my changes should be merged? At least inlining the trivial case of From is always good. I'm less sure about the Into based on From</p>",
        "id": 204698529,
        "sender_full_name": "Joonatan Saarhelo",
        "timestamp": 1595439811
    },
    {
        "content": "<p>I don't see any particular reason not to, so it seems worth opening a PR and getting smarter people than me to look at it.</p>",
        "id": 204698665,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595439882
    },
    {
        "content": "<p>Ok, will do</p>",
        "id": 204698744,
        "sender_full_name": "Joonatan Saarhelo",
        "timestamp": 1595439928
    }
]