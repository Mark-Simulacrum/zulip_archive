[
    {
        "content": "<p>So I want to enable longcalls but only on extern functions that I'm linking against. For instance this issue: <a href=\"https://github.com/rust-lang/rust/issues/65403\">https://github.com/rust-lang/rust/issues/65403</a> enables long calls for the entire generated binary, including functions that I write. I tried doing something like #[target_feature(enable = \"longcall\")] on a function def like extern \"C\" fn example_func(arg: usize) -&gt; usize; to no avail (just says longcall isn't available even though the compiler option in the issue above works to set long calls for everything). Is there a way to enable long calls like in C where I can do #pragma longcall(1) and/or __attribute__((longcall)) ?</p>",
        "id": 213862262,
        "sender_full_name": "John",
        "timestamp": 1603152644
    },
    {
        "content": "<p>I've got two ideas for a solution. The first is just a macro that effectively converts a regular call to a long call with some magic code. The second is a compiler plugin do a syntax extension that will make these function calls long calls, I think compiler plugins might also be able to do llvm stuff so maybe I could add a longcall attribute to the function there?<br>\nAny thoughts on those?</p>",
        "id": 213918559,
        "sender_full_name": "John",
        "timestamp": 1603200592
    },
    {
        "content": "<p>Third idea is a small C shim that just does inline assembly to jump to the target address</p>",
        "id": 213961661,
        "sender_full_name": "John",
        "timestamp": 1603219015
    },
    {
        "content": "<p>does llvm support the longcall convention ?</p>",
        "id": 214038240,
        "sender_full_name": "lzutao",
        "timestamp": 1603280350
    },
    {
        "content": "<p>also, which targets do you want to use <code>long_call</code> ? ARM or MIPS?<br>\nFor those who don't know about this calling convention, just like me:</p>\n<ul>\n<li><a href=\"https://clang.llvm.org/docs/AttributeReference.html#long-call-far\">https://clang.llvm.org/docs/AttributeReference.html#long-call-far</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/ARM-Function-Attributes.html#ARM-Function-Attributes\">https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/ARM-Function-Attributes.html#ARM-Function-Attributes</a></li>\n<li><a href=\"https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/MIPS-Function-Attributes.html#MIPS-Function-Attributes\">https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/MIPS-Function-Attributes.html#MIPS-Function-Attributes</a></li>\n</ul>",
        "id": 214038590,
        "sender_full_name": "lzutao",
        "timestamp": 1603280617
    },
    {
        "content": "<p>I was targeting PPC, working on embedded development. Clang supports long calls and I can use <code>-Ctarget-features=+longcall</code> in my <code>.cargo/config</code> with build flags and every single call becomes long call, which leads me to think llvm supports longcall</p>",
        "id": 214131008,
        "sender_full_name": "John",
        "timestamp": 1603326095
    },
    {
        "content": "<p>The ideal solution here is just an attribute I can stick on functions and it just works</p>",
        "id": 214131104,
        "sender_full_name": "John",
        "timestamp": 1603326183
    },
    {
        "content": "<p>Does anyone have a resource for writing compiler plugins to modify the llvm bitcode? I can't seem to find any</p>",
        "id": 214267341,
        "sender_full_name": "John",
        "timestamp": 1603418967
    },
    {
        "content": "<p><a href=\"https://osblog.stephenmarz.com/ch7.html\">https://osblog.stephenmarz.com/ch7.html</a></p>",
        "id": 214340154,
        "sender_full_name": "oliver",
        "timestamp": 1603473192
    },
    {
        "content": "<p>Interesting resource, but it doesn't seem like what I'm looking for</p>",
        "id": 214368678,
        "sender_full_name": "John",
        "timestamp": 1603488826
    },
    {
        "content": "<p>which references have you collected so far?</p>",
        "id": 214368996,
        "sender_full_name": "oliver",
        "timestamp": 1603489036
    },
    {
        "content": "<p>For this specific problem, the issue in the first message in this topic, <a href=\"https://doc.rust-lang.org/reference/attributes/codegen.html\">https://doc.rust-lang.org/reference/attributes/codegen.html</a>, <a href=\"https://doc.rust-lang.org/reference/attributes.html\">https://doc.rust-lang.org/reference/attributes.html</a>. I've got a couple others related to macros when I was trying to do the macro stuff to pretend its a longcall</p>",
        "id": 214409138,
        "sender_full_name": "John",
        "timestamp": 1603514634
    }
]