[
    {
        "content": "<p>Hello all, I'm trying to fix <a href=\"https://github.com/rust-lang/rust/issues/72769\">https://github.com/rust-lang/rust/issues/72769</a> and I need to know the visibility of the linked item for that. My idea was to use <code>rustc_privacy::def_id_visibility</code> to look it up, but that function is private. Is there a reason for that, is there a better way to find that information?</p>",
        "id": 199239569,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1590816058
    },
    {
        "content": "<p><code>tcx.privacy_access_levels(LOCAL_CRATE).is_exported(hir_id)</code></p>",
        "id": 199246341,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1590828681
    },
    {
        "content": "<p>Hmm, if I try that I get this error instead:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0308</span><span class=\"p\">]</span>: <span class=\"nc\">mismatched</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">librustdoc</span><span class=\"o\">/</span><span class=\"n\">passes</span><span class=\"o\">/</span><span class=\"n\">collect_intra_doc_links</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">709</span>:<span class=\"mi\">103</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">709</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                     </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">privacy_access_levels</span><span class=\"p\">(</span><span class=\"n\">rustc_hir</span>::<span class=\"n\">def_id</span>::<span class=\"n\">LOCAL_CRATE</span><span class=\"p\">).</span><span class=\"n\">is_exported</span><span class=\"p\">(</span><span class=\"n\">def_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                                                                       </span><span class=\"o\">^^^^^^</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"err\">`</span><span class=\"n\">rustc_hir</span>::<span class=\"n\">HirId</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"err\">`</span><span class=\"n\">rustc_span</span>::<span class=\"n\">def_id</span>::<span class=\"n\">DefId</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 199261474,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1590851920
    },
    {
        "content": "<p>I got <code>def_id</code> from <code>Res::opt_def_id()</code>: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/def/enum.Res.html#method.opt_def_id\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/def/enum.Res.html#method.opt_def_id</a></p>",
        "id": 199261526,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1590851977
    },
    {
        "content": "<p>you can use <code>tcx.hir().as_local_hir_id(def_id.as_local()?)</code> to get the relevant <code>HirId</code></p>",
        "id": 199261582,
        "sender_full_name": "lcnr",
        "timestamp": 1590852027
    },
    {
        "content": "<p>You can also use <code>def_id.expect_local()</code>,  \"localize\" the def id or panic if the def is is foreign. You can use that if the call should never fail.</p>",
        "id": 199261916,
        "sender_full_name": "marmeladema",
        "timestamp": 1590852477
    },
    {
        "content": "<p>I'd rather avoid <code>expect()</code> calls until I know the code base better, <code>as_local()</code> works pretty well though :)</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">.</span><span class=\"n\">opt_def_id</span><span class=\"p\">().</span><span class=\"n\">and_then</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">def_id</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">def_id</span><span class=\"p\">.</span><span class=\"n\">as_local</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">hir_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">hir</span><span class=\"p\">().</span><span class=\"n\">as_local_hir_id</span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">privacy_access_levels</span><span class=\"p\">(</span><span class=\"n\">rustc_hir</span>::<span class=\"n\">def_id</span>::<span class=\"n\">LOCAL_CRATE</span><span class=\"p\">).</span><span class=\"n\">is_exported</span><span class=\"p\">(</span><span class=\"n\">hir_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 199262116,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1590852766
    }
]