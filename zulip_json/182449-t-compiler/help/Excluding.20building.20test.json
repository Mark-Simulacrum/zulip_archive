[
    {
        "content": "<p>Hey, how can I exclude building the <code>test</code> crate for a target which doesn't support it?</p>\n<p>I tried <code>x.py build --stage 1 library/std --exclude library/test</code> but it seems to be excluding everything. For info I'm building on the <code>stable</code> branch.</p>\n<div class=\"codehilite\"><pre><span></span><code>Skipping Set({&quot;library\\\\alloc&quot;, &quot;library\\\\core&quot;, &quot;library\\\\panic_abort&quot;, &quot;library\\\\panic_unwind&quot;, &quot;library\\\\proc_macro&quot;, &quot;library\\\\std&quot;, &quot;library\\\\term&quot;, &quot;library\\\\test&quot;, &quot;library\\\\unwind&quot;}) because it is excluded\nSkipping Set({&quot;library\\\\alloc&quot;, &quot;library\\\\core&quot;, &quot;library\\\\panic_abort&quot;, &quot;library\\\\panic_unwind&quot;, &quot;library\\\\proc_macro&quot;, &quot;library\\\\std&quot;, &quot;library\\\\term&quot;, &quot;library\\\\test&quot;, &quot;library\\\\unwind&quot;}) because it is excluded\nBuild completed successfully in 0:00:01\n</code></pre></div>",
        "id": 225173452,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612452070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> I don't think x.py supports building or filtering individual crates currently. Would love to have that feature added though</p>",
        "id": 225173613,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612452127
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Then what does <code>--exclude</code> <em>do</em>?</p>",
        "id": 225173774,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612452207
    },
    {
        "content": "<p>It excludes paths, not individual crates</p>",
        "id": 225173898,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612452243
    },
    {
        "content": "<p>You'd use it like <code>x.py test --exclude src/tools/tidy</code></p>",
        "id": 225173959,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612452263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> See that's confusing, because that's also a crate.</p>",
        "id": 225174066,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612452312
    },
    {
        "content": "<p>I didn't claim it makes sense <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 225174105,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612452330
    },
    {
        "content": "<p>That's just the granularity x.py happens to have right now</p>",
        "id": 225174155,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612452351
    },
    {
        "content": "<p>Well, in the source code if i wanted to test disabling the <code>test</code> crate, what's the best place to do so?</p>",
        "id": 225174312,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612452403
    },
    {
        "content": "<p>If you just need a hacky workaround, I think changing <code>impl Step for Std</code> in src/bootstrap/compile.rs is the right place</p>",
        "id": 225174497,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612452489
    },
    {
        "content": "<p>Add -p std or something to the cargo invocation</p>",
        "id": 225174528,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612452506
    },
    {
        "content": "<p>Hacky workarounds is all I've got. Thanks <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 225174717,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612452596
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Same question, but for rustdoc, I couldn't where it's being built in bootstrap?</p>",
        "id": 225183408,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612455775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> <a href=\"http://tool.rs\">tool.rs</a></p>",
        "id": 225183456,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612455792
    },
    {
        "content": "<p>Searching <code>impl Step for X</code> almost always works</p>",
        "id": 225183481,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612455805
    },
    {
        "content": "<p>You shouldn't need to special case it though, exclude should work (or just don't tell x.py to build it in the first place: <code>x.py build library/std</code>)</p>",
        "id": 225183603,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612455843
    },
    {
        "content": "<p>Why can't rustdoc be built? Does it depend on libtest or something?</p>",
        "id": 225183662,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612455861
    },
    {
        "content": "<blockquote>\n<p>Why can't rustdoc be built? Does it depend on libtest or something?</p>\n</blockquote>\n<p>Exactly that.</p>",
        "id": 225183775,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612455904
    },
    {
        "content": "<p>Oh right, doctests</p>",
        "id": 225183808,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612455916
    },
    {
        "content": "<p>Now I'm curious how a platform could support libstd but not libtest</p>",
        "id": 225184063,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612456008
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Can't get into it too much, because it's a proprietary platform under an NDA, it probably could eventually compile libtest if I tried hard enough but there's weird linker errors that probably require bootstrap changes I'd rather not deal with right now. I'm more concerned about being able to build a dist version of just <code>rustc</code> + <code>std</code> at the moment than having <code>std</code> and all related tools.</p>",
        "id": 225189179,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612457976
    }
]