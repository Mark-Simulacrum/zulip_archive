[
    {
        "content": "<p>The PR <a href=\"https://github.com/rust-lang/rust/pull/93229\">https://github.com/rust-lang/rust/pull/93229</a> is removing the \"quiet\" option on the error emitter which causes <a href=\"https://github.com/rust-lang/rust/pull/93229/files#diff-00b3b34ce2eb95c63cc6b1a4648ab3939af4b083e2fb0e8d199535fe239b576fR141-R143\">https://github.com/rust-lang/rust/pull/93229/files#diff-00b3b34ce2eb95c63cc6b1a4648ab3939af4b083e2fb0e8d199535fe239b576fR141-R143</a> to emit compiler errors on code which shouldn't be compiled. Is there a way to get this information without the errors?</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 269008431,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1642931085
    },
    {
        "content": "<p>Can you give an example of code where that triggers an error?</p>",
        "id": 269160749,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1643052847
    },
    {
        "content": "<p>Does rustdoc do something unusual to get cfg'd-out code in the HIR?</p>",
        "id": 269160785,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1643052866
    },
    {
        "content": "<p>Rustdoc deliberately supresses these errors. This allows it to continue compilation even if function bodies reference functions not defined for the current target. Libstd uses <code>#[cfg(any(unix, doc))]</code> and similar in a lot of places. This would normally fail to compile as libc doesnt define any functions on windows, but because rustdoc ignores the errors it works just fine.</p>",
        "id": 269165253,
        "sender_full_name": "bjorn3",
        "timestamp": 1643054707
    }
]