[
    {
        "content": "<p>I'm doing an analysis that uses <code>mir::visiit::Visitor::visit_assign</code>. When the <code>rvalue</code> is a binary operator, can I assume that the left operator is the same than the <code>lvalue</code> of the assignment?</p>\n<p>documentation: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/enum.Rvalue.html\"><code>Rvalue</code></a> and <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/visit/trait.Visitor.html#method.visit_assign\">`visit_assign</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">Rvalue</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">BinaryOp</span><span class=\"p\">(</span><span class=\"n\">BinOp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Operand</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Operand</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">visit_assign</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">lvalue</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Place</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">rvalue</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Rvalue</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">location</span>: <span class=\"nc\">Location</span><span class=\"w\"></span>\n<span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 217383843,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1605868109
    },
    {
        "content": "<p>Hmm, why would you be able to assume that? Perhaps I'm misunderstanding, but this MIR:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">_3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_1</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">_2</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>would seem to not satisfy the condition of the left operand (<code>_1</code>) being the same as the lvalue (<code>_3</code>). Or if you mean \"can I assume that the left operand is <em>different</em> from the lvalue\", I think that also wouldn't hold since <code>Place</code>s can be mutable and thus this should be valid MIR:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_3</span>: <span class=\"kt\">i32</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"c1\">// ...</span>\n<span class=\"n\">_3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">_3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_3</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 217528440,
        "sender_full_name": "Noah Lev",
        "timestamp": 1606008785
    }
]