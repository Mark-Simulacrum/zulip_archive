[
    {
        "content": "<p>Hi there,<br>\nthe rustc dev guide suggests to use <code>rustup toolchain link</code> to make use of your freshly built rustc. However, there is no cargo in the linked toolchain, even if I also run <code>x.py  build cargo</code> (in order to have to correct cargo version associated with the rustc version)</p>\n<p>What is the suggested workflow to build your custom rustc compiler and use it with cargo (in its appropriate version) to build test projects with <code>cargo build</code>?</p>",
        "id": 242712769,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623751908
    },
    {
        "content": "<p>if you're talking about using the regular cargo and not a custom built one: the rustup toolchain link allows you to use your custom rustc like any other rustup toolchain. So this will work: <code>cargo +yourcustomrustctoolchain build</code></p>",
        "id": 242713741,
        "sender_full_name": "lqd",
        "timestamp": 1623752542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> if i try this i get the following error: </p>\n<div class=\"codehilite\"><pre><span></span><code>error: &#39;cargo&#39; is not installed for the toolchain &#39;custom&#39;\nnote: this is a custom toolchain, which cannot use `rustup component add`\nhelp: if you built this toolchain from source, and used `rustup toolchain link`, then you may be able to build the component with `x.py`\n</code></pre></div>",
        "id": 242714358,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623752951
    },
    {
        "content": "<p>your custom toolchain may have an issue, what parameters did you pass to  <code>rustup toolchain link</code> ?</p>",
        "id": 242714565,
        "sender_full_name": "lqd",
        "timestamp": 1623753100
    },
    {
        "content": "<p>and does <code>rustc +custom -vV</code> work ?</p>",
        "id": 242714677,
        "sender_full_name": "lqd",
        "timestamp": 1623753173
    },
    {
        "content": "<p>and what does <code>rustup toolchain list -v</code> output ?</p>",
        "id": 242714733,
        "sender_full_name": "lqd",
        "timestamp": 1623753213
    },
    {
        "content": "<p>This is the command I used: </p>\n<div class=\"codehilite\"><pre><span></span><code>rustup toolchain link custom build/x86_64-unknown-linux-gnu/stage1\n</code></pre></div>",
        "id": 242714804,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623753247
    },
    {
        "content": "<p>it may need to be an absolute path, we'll see with the results of the other 2 commands</p>",
        "id": 242714873,
        "sender_full_name": "lqd",
        "timestamp": 1623753315
    },
    {
        "content": "<p>here is the output:</p>\n<div class=\"codehilite\"><pre><span></span><code>root@3fc5958f7dde:/home/builder/rust# rustc +custom -vV\nrustc 1.52.0-dev\nbinary: rustc\ncommit-hash: unknown\ncommit-date: unknown\nhost: x86_64-unknown-linux-gnu\nrelease: 1.52.0-dev\nLLVM version: 9.0.0\nroot@3fc5958f7dde:/home/builder/rust# rustup toolchain list -v\nnightly-2019-02-22-x86_64-unknown-linux-gnu (default)   /root/.rustup/toolchains/nightly-2019-02-22-x86_64-unknown-linux-gnu\ncustom  /home/builder/rust/build/x86_64-unknown-linux-gnu/stage1\n</code></pre></div>",
        "id": 242715108,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623753479
    },
    {
        "content": "<p>(maybe there's a spurious override in config.toml causing issues)</p>",
        "id": 242715162,
        "sender_full_name": "lqd",
        "timestamp": 1623753488
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustup.20toolchain.20link.20-.20cargo.3F/near/242715162\">said</a>:</p>\n<blockquote>\n<p>(maybe there's a spurious override in config.toml causing issues)</p>\n</blockquote>\n<p>you mean the config.toml of rustlang/rust repo?</p>",
        "id": 242715231,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623753565
    },
    {
        "content": "<p>your local one, that x.py setup created or if you copied it from the config.toml.example in the rust repo</p>",
        "id": 242715389,
        "sender_full_name": "lqd",
        "timestamp": 1623753681
    },
    {
        "content": "<p>there are flags to control which tools are built automatically and so on</p>",
        "id": 242715497,
        "sender_full_name": "lqd",
        "timestamp": 1623753757
    },
    {
        "content": "<p>but yeah, very weird, this is how it's supposed to work (and how I remember doing it multiple times)</p>",
        "id": 242715561,
        "sender_full_name": "lqd",
        "timestamp": 1623753834
    },
    {
        "content": "<p>maybe someone more familiar with bootstrap, infra, and so on will be able to help <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 242715624,
        "sender_full_name": "lqd",
        "timestamp": 1623753863
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustup.20toolchain.20link.20-.20cargo.3F/near/242715497\">said</a>:</p>\n<blockquote>\n<p>there are flags to control which tools are built automatically and so on</p>\n</blockquote>\n<p>you mean this one?</p>\n<div class=\"codehilite\"><pre><span></span><code># Installs chosen set of extended tools if enabled. By default builds all.\n# If chosen tool failed to build the installation fails.\n#tools = [&quot;cargo&quot;, &quot;rls&quot;, &quot;clippy&quot;, &quot;rustfmt&quot;, &quot;analysis&quot;, &quot;src&quot;]\n</code></pre></div>",
        "id": 242715639,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623753879
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustup.20toolchain.20link.20-.20cargo.3F/near/242715561\">said</a>:</p>\n<blockquote>\n<p>but yeah, very weird, this is how it's supposed to work (and how I remember doing it multiple times)</p>\n</blockquote>\n<p>okay..that's good to know :) then I will look for strange things in my setup. I just needed to know that this really is the way to go. Thank you very much for your help :)</p>",
        "id": 242715757,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623753972
    },
    {
        "content": "<p>do you have a built <code>rustc</code> in <code>/home/builder/rust/build/x86_64-unknown-linux-gnu/stage1/bin</code> ?</p>",
        "id": 242715767,
        "sender_full_name": "lqd",
        "timestamp": 1623753979
    },
    {
        "content": "<p>yes..actually, rustc is the only binary in <code>/home/builder/rust/build/x86_64-unknown-linux-gnu/stage1/bin</code> <br>\nI expected to have the cargo binary there, too..but it's not there. It's in <code>/home/builder/rust/build/x86_64-unknown-linux-gnu/stage1-tools-bin/</code></p>",
        "id": 242716143,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623754245
    },
    {
        "content": "<p>see I don't have <code>stage1-tools-bin</code></p>",
        "id": 242716311,
        "sender_full_name": "lqd",
        "timestamp": 1623754364
    },
    {
        "content": "<p>nor have I any cargo binaries</p>",
        "id": 242716357,
        "sender_full_name": "lqd",
        "timestamp": 1623754412
    },
    {
        "content": "<p>okay..strange :D</p>",
        "id": 242716382,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623754435
    },
    {
        "content": "<p><code>build</code> doesn't create a full sysroot I don't think</p>",
        "id": 242716445,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754456
    },
    {
        "content": "<p>try <code>dist --stage 1</code> and see if it helps</p>",
        "id": 242716458,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754466
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/81431\">https://github.com/rust-lang/rust/issues/81431</a></p>",
        "id": 242716534,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754508
    },
    {
        "content": "<p>maybe the <code>x.py build cargo</code> didn't completely finish what's required for the rustup toolchain to work and there's an incomplete toolchain rn ?</p>",
        "id": 242716681,
        "sender_full_name": "lqd",
        "timestamp": 1623754597
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> cargo is  built, but it's not in the sysroot directory because x.py doesn't use it for bootstrapping stage 2</p>",
        "id": 242716801,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754682
    },
    {
        "content": "<p>you can copy it manually into stage1/bin but x.py might delete it without noticing</p>",
        "id": 242716843,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754699
    },
    {
        "content": "<p>oh ok</p>",
        "id": 242716862,
        "sender_full_name": "lqd",
        "timestamp": 1623754717
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"245622\">@Oliver Braunsdorf</span> you built with <code>build --stage 1 src/tools</code> or sometihng like that, right?</p>",
        "id": 242716906,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754756
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustup.20toolchain.20link.20-.20cargo.3F/near/242716906\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"245622\">Oliver Braunsdorf</span> you built with <code>build --stage 1 src/tools</code> or sometihng like that, right?</p>\n</blockquote>\n<p>yes, right. Here is the exact command that I used: <code>./x.py build -j$(nproc) --stage 1 -i library/std cargo</code><br>\n`</p>",
        "id": 242717060,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623754854
    },
    {
        "content": "<p>that does not do what you want</p>",
        "id": 242717091,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754880
    },
    {
        "content": "<p><del>it builds the compiler twice and cargo 0 times</del></p>",
        "id": 242717096,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754887
    },
    {
        "content": "<p>ah okay. So I need the <code>dist</code> command?</p>",
        "id": 242717121,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623754908
    },
    {
        "content": "<p>I would recommend the dist command, yes</p>",
        "id": 242717133,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754916
    },
    {
        "content": "<p>in general it's the only one guaranteed to generate a sysroot with everything</p>",
        "id": 242717194,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623754930
    },
    {
        "content": "<p>okay, I will try that right now, thanks! :)<br>\ncan you tell me which targets to append to this command in order to have cargo, rustc, libstd and all other essentials but without building the docs etc.?</p>",
        "id": 242717224,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623754972
    },
    {
        "content": "<p>there should be an <code>--exclude rust-docs</code> flag or something like that</p>",
        "id": 242717345,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623755050
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> which cargo is used if you toolchain link your local build without asking to build cargo with x.py ? stage0's ?</p>",
        "id": 242717575,
        "sender_full_name": "lqd",
        "timestamp": 1623755239
    },
    {
        "content": "<p>I believe so</p>",
        "id": 242717584,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623755248
    },
    {
        "content": "<p>after the dist-command completed, where should I expect the rustc and cargo binaries? And should I use the <code>rustup toolchain link</code> to get what i want?</p>",
        "id": 242717595,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623755252
    },
    {
        "content": "<p>but I'm' not sure</p>",
        "id": 242717596,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623755252
    },
    {
        "content": "<p>you can try it yourself</p>",
        "id": 242717604,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623755255
    },
    {
        "content": "<p>it seems to me that depending on what they need, building cargo or x.py dist may be unnecessary here</p>",
        "id": 242717695,
        "sender_full_name": "lqd",
        "timestamp": 1623755299
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustup.20toolchain.20link.20-.20cargo.3F/near/242717575\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> which cargo is used if you toolchain link your local build without asking to build cargo with x.py ? stage0's ?</p>\n</blockquote>\n<p>maybe the cargo binary of your default rustup toolchain</p>",
        "id": 242717714,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623755316
    },
    {
        "content": "<p>maybe</p>",
        "id": 242717720,
        "sender_full_name": "lqd",
        "timestamp": 1623755323
    },
    {
        "content": "<p>well I don't know why you would need cargo from rust-lang/rust unless you want a full sysroot</p>",
        "id": 242717734,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623755332
    },
    {
        "content": "<p>and your nightly seems super old</p>",
        "id": 242717743,
        "sender_full_name": "lqd",
        "timestamp": 1623755338
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustup.20toolchain.20link.20-.20cargo.3F/near/242717743\">said</a>:</p>\n<blockquote>\n<p>and your nightly seems super old</p>\n</blockquote>\n<p>yes, I worked with a super old compiler version and did not update my rustup nightly toolchain</p>",
        "id": 242717793,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623755381
    },
    {
        "content": "<p>at least <code>dist</code> should work in all cases as joshua said <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 242717886,
        "sender_full_name": "lqd",
        "timestamp": 1623755433
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/rustup.20toolchain.20link.20-.20cargo.3F/near/242717575\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> which cargo is used if you toolchain link your local build without asking to build cargo with x.py ? stage0's ?</p>\n</blockquote>\n<p>According to <a href=\"https://rust-lang.github.io/rustup/concepts/toolchains.html#custom-toolchains\">https://rust-lang.github.io/rustup/concepts/toolchains.html#custom-toolchains</a>:</p>\n<blockquote>\n<p>Because the <code>rust-lang/rust</code> tree does not include Cargo, <em>when <code>cargo</code> is invoked for a custom toolchain and it is not available, <code>rustup</code> will attempt to use <code>cargo</code> from one of the release channels</em>, preferring 'nightly', then 'beta' or 'stable'.</p>\n</blockquote>",
        "id": 242717951,
        "sender_full_name": "hyd-dev",
        "timestamp": 1623755485
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> the <code>x.py dist</code> completed. However, it seems like everything is bundled in rust/build/dist as compressed archives. Is this to be expected? <br>\nI guess I would rather need <code>x.py install</code> to install rustc, cargo and everything else to a directory where I can set my <code>$PATH</code> variable to, right?</p>",
        "id": 242722108,
        "sender_full_name": "Oliver Braunsdorf",
        "timestamp": 1623758527
    },
    {
        "content": "<p>that should work</p>",
        "id": 242722133,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1623758546
    }
]