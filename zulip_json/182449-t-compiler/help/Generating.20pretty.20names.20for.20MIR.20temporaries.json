[
    {
        "content": "<p>We’re working on developing a new codegen backend for Rust at the MIR level. Our codegen currently does a pass over all of the LocalDecls to generate Symbols, which are then used to display program traces. At the moment, the generated temporaries are flooding our traces, making it difficult to follow. To improve this, we want to keep track of pretty names for the temporaries that suggest their significance. </p>\n<p>Specifically, right now we want to find temporaries that are simple copies, moves, or derefs of other temporaries that already have meaningful names (e.g. ones that directly represent Rust variables), and generate suggestive names based off that.</p>\n<p>My current approach is, as we pass over the Local, find all statements within basic blocks that assign to the Local, and check if they are a simple copy, etc. of another Local we’ve already scanned. If it is, then we set the pretty name appropriately, and otherwise, we just use the default generated name (e.g. “var_5”).</p>\n<p>Two questions: 1) Is there another approach that might be more robust/simpler? 2) Given this approach, does there exist a way to directly find all statements which assign to a given Local, or do I just have to do a manual iteration over the basic blocks and their contained statements?</p>\n<p>Thanks!</p>",
        "id": 241444864,
        "sender_full_name": "Thomas Del Vecchio",
        "timestamp": 1622750519
    },
    {
        "content": "<p>Yoy could look at the <code>var_debug_info</code> field of <code>mir::Body</code>. This will help for all user defined locals, but not for temporaries.</p>",
        "id": 241453683,
        "sender_full_name": "bjorn3",
        "timestamp": 1622754326
    },
    {
        "content": "<p>We currently use the <code>var_debug_info</code> to get pretty names for user defined locals, but this doesn't let us know when a temporary <code>_5</code> is just a <code>copy</code> of a user defined local <code>x</code>, in which case we want to use a name like <code>x_5</code> for the pretty name.</p>",
        "id": 241526144,
        "sender_full_name": "Thomas Del Vecchio",
        "timestamp": 1622808745
    }
]