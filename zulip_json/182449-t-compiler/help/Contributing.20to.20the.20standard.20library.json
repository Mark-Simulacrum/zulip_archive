[
    {
        "content": "<p>hi team,</p>\n<p>if i were to say, add a method to a collection in the standard library, how might i try to build it and use it in a local environment? this is my first time getting my hands dirty with contributing. i read the somewhat extensive dev guide, yet still unclear on this. i currently have ran <code>./x.py build -i library/alloc</code>to just build that specific part and have created a toolchain.</p>\n<p>however, i cannot use one of the new methods that i just created, any help is welcome</p>\n<p>thanks</p>",
        "id": 224973361,
        "sender_full_name": "Gowri",
        "timestamp": 1612327911
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"386574\">@Gowri</span> I don't think you can use x.py to test changes to libstd without building a stage1 compiler. You can do that with <code>x.py build --stage 1 library/std</code>.</p>",
        "id": 224978589,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612333722
    },
    {
        "content": "<p>FWIW as someone who has also been working on more on libstd, needing <code>--stage 1</code> for <code>build</code> was pretty unintuitive for me, I would expect build to build the source code I have.</p>",
        "id": 224989463,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612343208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> needing to build <em>against</em> libstd seems kind of rare - if you just want to build your own changes you can use <code>build --stage 0 library/std</code></p>",
        "id": 225019465,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612361243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Well maybe this situation is rare, but what I'm working is adding support for a platform not currently available to Rust, so I have to build a stage 1 compiler that has the target information and then build libstd with that compiler that has that target information.</p>",
        "id": 225019887,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612361407
    },
    {
        "content": "<p>Oh I see. I don't know if there's a way around that, the bootstrap compiler doesn't know about your target</p>",
        "id": 225020090,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612361504
    },
    {
        "content": "<p>It's rarer than contributing to libstd alone, so it isn't the default</p>",
        "id": 225020289,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612361578
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> no, --stage 1 is the default if you say <code>build library/std</code>. That only changes if you run <code>x.py setup library</code> or some similar change to config.toml</p>",
        "id": 225020785,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612361776
    },
    {
        "content": "<p>oh, I see</p>",
        "id": 225020832,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612361800
    },
    {
        "content": "<p>FWIW I do think it would be nice to have a way to link to stage0 std - I think it might be simple as using stage0-sysroot with <code>rustup toolchain link</code>? But I haven't tried</p>",
        "id": 225021612,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612362137
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"386574\">@Gowri</span> the easy and tested way to do this is to add a unit test</p>",
        "id": 225021871,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612362267
    },
    {
        "content": "<p>Or a doc test</p>",
        "id": 225021893,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612362278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>, Thank you! that was what I was looking for.</p>",
        "id": 225094169,
        "sender_full_name": "Gowri",
        "timestamp": 1612392057
    }
]