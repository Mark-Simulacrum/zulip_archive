[
    {
        "content": "<p>Trying to run the tests with <code>./x.py test -i --no-doc</code>, after lots of passing tests I eventually got</p>\n<div class=\"codehilite\"><pre><span></span>Testing panic_abort stage1 (x86_64-unknown-linux-gnu -&gt; x86_64-unknown-linux-gnu)\n   Compiling panic_abort v0.0.0 (/home/user/devel/rust3/src/libpanic_abort)\nerror: the linked panic runtime `panic_unwind` is not compiled with this crate&#39;s panic strategy `abort`\n</pre></div>",
        "id": 163025304,
        "sender_full_name": "ange",
        "timestamp": 1554917004
    },
    {
        "content": "<p>this looks like a misconfiguration on my end, but not sure what I should have done differently</p>",
        "id": 163025336,
        "sender_full_name": "ange",
        "timestamp": 1554917037
    },
    {
        "content": "<p>Could it be leftover artifacts or something?</p>",
        "id": 163025420,
        "sender_full_name": "ange",
        "timestamp": 1554917078
    },
    {
        "content": "<p>Did you ever get anywhere with this? I'm having the same issue</p>",
        "id": 220266712,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608222746
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223286\">@Jake Hughes</span> what happens if you pass <code>--stage 0</code> instead?</p>",
        "id": 220266836,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608222801
    },
    {
        "content": "<p>Good question. I will check</p>",
        "id": 220266922,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608222844
    },
    {
        "content": "<p>This just borks with a warning saying I'd be running tests on the bootstrapping compiler and that what I really want to do is to test with stage 1, which makes sense I guess.</p>",
        "id": 220267168,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608222982
    },
    {
        "content": "<p>oh you're running a full x.py test</p>",
        "id": 220267251,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223024
    },
    {
        "content": "<p>do you actually want to test everything? normally that takes long enough I don't bother</p>",
        "id": 220267278,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223035
    },
    {
        "content": "<p>Yeah not usually, but it's part of CI on my fork, and since I mess around in libstd, I don't care that the docs will be wrong</p>",
        "id": 220267386,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608223084
    },
    {
        "content": "<p>FWIW I expect this is an issue with incremental, but testing that would require a full rebuild</p>",
        "id": 220267402,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223088
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"223286\">Jake Hughes</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Error.20in.20panic_abort.20stage1/near/220267386\">said</a>:</p>\n<blockquote>\n<p>Yeah not usually, but it's part of CI on my fork, and since I mess around in libstd, I don't care that the docs will be wrong</p>\n</blockquote>\n<p>wait, what is the full command you're running?</p>",
        "id": 220267464,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223114
    },
    {
        "content": "<p>After looking a bit more carefully, the only difference between me and OP is that I'm not using the -i flag</p>",
        "id": 220267478,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608223119
    },
    {
        "content": "<p>what is your config.toml?</p>",
        "id": 220267508,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223134
    },
    {
        "content": "<p>The only places I stray from the defaults in my config.toml are the following :</p>\n<div class=\"codehilite\"><pre><span></span><code>[target.x86_64-unknown-linux-gnu]\ncc = &quot;clang&quot;\ncxx = &quot;clang++&quot;\nlinker = &quot;clang&quot;\n</code></pre></div>",
        "id": 220267683,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608223203
    },
    {
        "content": "<p>do you have <code>profile = \"...\"</code> set somewhere? I'm trying to find if incremental is enabled</p>",
        "id": 220267741,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223222
    },
    {
        "content": "<blockquote>\n<p>wait, what is the full command you're running?</p>\n</blockquote>\n<p>The full command is</p>\n<p><code>./x.py test --stage 1 --no-doc</code></p>",
        "id": 220267886,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608223291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Error.20in.20panic_abort.20stage1/near/220267741\">said</a>:</p>\n<blockquote>\n<p>do you have <code>profile = \"...\"</code> set somewhere? I'm trying to find if incremental is enabled</p>\n</blockquote>\n<p>I never set this explicitly, no</p>",
        "id": 220268037,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608223352
    },
    {
        "content": "<p>hmm, ok</p>",
        "id": 220268113,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223394
    },
    {
        "content": "<p>that's weird it only happens for you, let me try it locally</p>",
        "id": 220268126,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608223401
    },
    {
        "content": "<p>Also fully aware that since I'm running a fork, there's a chance I've broken something in a non-obvious way. I just saw OP had the same issue and thought there's a slim chance that it's a config thing :P</p>",
        "id": 220268144,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608223413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223286\">@Jake Hughes</span> <code>x.py test --stage 1 library/panic_abort</code> works for me, I only ran a subset - can you check if it works for you?</p>",
        "id": 220269666,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224089
    },
    {
        "content": "<p>(I would expect not)</p>",
        "id": 220269669,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224092
    },
    {
        "content": "<p>Sure</p>",
        "id": 220269743,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224123
    },
    {
        "content": "<p><code>./x.py test --stage 1 library/panic_abort</code> works fine, however, adding the <code>no-doc</code> flag gives: </p>\n<p><code>``  \nCompiling panic_abort v0.0.0 (/home/jake/research/rustc_boehm/library/panic_abort)\nerror: building tests with panic=abort is not supported without </code>-Zpanic_abort_tests`</p>\n<p>error: aborting due to previous error</p>\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>",
        "id": 220270800,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224583
    },
    {
        "content": "<p>oh interesting</p>",
        "id": 220270850,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224595
    },
    {
        "content": "<p>ugh sorry i can't format it</p>",
        "id": 220270864,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224604
    },
    {
        "content": "<p>yeah I get the same error with --no-doc</p>",
        "id": 220270881,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224609
    },
    {
        "content": "<p>seems like a bug in bootstrap maybe?</p>",
        "id": 220270951,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224642
    },
    {
        "content": "<p>you could workaround it by just not passing --no-doc</p>",
        "id": 220270991,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224650
    },
    {
        "content": "<p>is there a way to turn off the linkchecker?</p>",
        "id": 220271060,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224698
    },
    {
        "content": "<p>I assumed that no-doc took care of that, is there some other way?</p>",
        "id": 220271091,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224711
    },
    {
        "content": "<p>not without making your <code>test</code> command 20 lines long lol</p>",
        "id": 220271115,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224723
    },
    {
        "content": "<p>but yes, you can specify every other test explicitly, and just not specify src/tools/linkchecker</p>",
        "id": 220271134,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224736
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"223286\">Jake Hughes</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Error.20in.20panic_abort.20stage1/near/220271091\">said</a>:</p>\n<blockquote>\n<p>I assumed that no-doc took care of that, is there some other way?</p>\n</blockquote>\n<p>that's not what no-doc does</p>\n<div class=\"codehilite\"><pre><span></span><code>        --no-doc        do not run doc tests\n</code></pre></div>",
        "id": 220271169,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224760
    },
    {
        "content": "<p>'doc test' -&gt; <code>rust</code> blocks in doc-comments</p>",
        "id": 220271257,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224785
    },
    {
        "content": "<p>Oh I see</p>",
        "id": 220271281,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224797
    },
    {
        "content": "<p>so probably you've been running the linkchecker this whole time</p>",
        "id": 220271397,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224863
    },
    {
        "content": "<p>Indeed, the no-doc crashes were probably a red herring and I was failing fast before I even got there lol</p>",
        "id": 220271502,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224907
    },
    {
        "content": "<p>thanks for your help anyway, slightly relieved it's not my changes that broke it</p>",
        "id": 220271550,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224936
    },
    {
        "content": "<p>I can raise an issue if you like?</p>",
        "id": 220271623,
        "sender_full_name": "Jake Hughes",
        "timestamp": 1608224973
    },
    {
        "content": "<p>that would be great!</p>",
        "id": 220271633,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608224979
    }
]