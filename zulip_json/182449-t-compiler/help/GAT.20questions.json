[
    {
        "content": "<p>First question: the GAT rfc states that adding type HRTBs is not a part of it, but also states that <code>type X&lt;'a&gt;: Y</code> is the same as <code>for&lt;'a&gt; Self::X&lt;'a&gt;: Y</code> bound on the trait itself.  I assume it means the same in case of <code>type X&lt;T&gt;: Y</code> which requires(?) type HRTBs (at least implementation wise), so I am a bit confused. <br>\nSecond question: I believe the rfc doesn't mention bounds on the type constructor parameters (i.e. <code>trait Trait&lt;'b&gt; { type X&lt;'a: 'b&gt;; }</code>) , although there is a line that I don't understand that is maybe related: <br>\n    \"This RFC does not propose allowing any sort of bound by the type constructor itself, whether an equality bound or a trait bound (trait bounds of course are also impossible).\"<br>\nDoes that line mean that type constructor can't impose bounds on it's parameters? What about implicit bounds in type constructors parametrized by types?</p>",
        "id": 190015495,
        "sender_full_name": "Areredify",
        "timestamp": 1583677298
    }
]