[
    {
        "content": "<p>Let's say I have a function like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">ex</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">iter</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This generates the HIR:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    let v = [0];\n    {\n        let _t =\n            match #[lang = &quot;into_iter&quot;](v.iter()) {\n                mut iter =&gt;\n                loop {\n                    match #[lang = &quot;next&quot;](&amp;mut iter) {\n                        #[lang = &quot;None&quot;] {  } =&gt; break ,\n                        #[lang = &quot;Some&quot;] { 0: _ } =&gt; { }\n                    }\n                },\n            };\n        _t\n    }\n}\n</code></pre></div>\n<p>And the MIR body has the following source scopes:</p>\n<div class=\"codehilite\"><pre><span></span><code> scope 1 {\n    debug v =&gt; _1;                   // in scope 1 at src/plateau.rs:17:7: 17:8\n    let mut _6: std::slice::Iter&lt;&#39;_#13r, i32&gt;; // in scope 1 at src/plateau.rs:18:12: 18:20\n    scope 2 {\n        debug iter =&gt; _6;            // in scope 2 at src/plateau.rs:18:12: 18:20\n    }\n}\n</code></pre></div>\n<p>When I have a MIR body, is there an easy way to determine that <code>v</code> exists in the source while <code>iter</code> was generated by the compiler?</p>",
        "id": 263502169,
        "sender_full_name": "Will Crichton",
        "timestamp": 1638480188
    },
    {
        "content": "<p>This information should be in the span. See Span::is_desugaring and Span::desugaring_kind.</p>",
        "id": 263503208,
        "sender_full_name": "cjgillot",
        "timestamp": 1638480710
    }
]