[
    {
        "content": "<p>I know there are some requirements when it comes to code that requires changes in both libraries and the compiler. Part of the diagnostic changes I'm implementing requires a change in <code>compiler/rust_macros/src/session_diagnostics.rs</code>. However, this appears to be using the nightly compiler that I have installed, even when called via <code>x.py</code>. What's the proper way to go about making the necessary change?</p>",
        "id": 231246237,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616366666
    },
    {
        "content": "<p>what do you mean \"called by x.py\"? what command are you running?</p>",
        "id": 231248109,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616368916
    },
    {
        "content": "<p>I did a full <code>./x.py check</code>, which afaik checks all crates (?)</p>",
        "id": 231248163,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616368947
    },
    {
        "content": "<p>that checks using the nightly compiler</p>",
        "id": 231248265,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616369059
    },
    {
        "content": "<p>if you want to check using the newly built compiler, use --stage 1</p>",
        "id": 231248270,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616369074
    },
    {
        "content": "<p>alright, will give that a shot. Things I'm learning :)</p>",
        "id": 231248279,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616369099
    },
    {
        "content": "<p>you may find <a href=\"https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html\">https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html</a> helpful</p>",
        "id": 231248549,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616369439
    },
    {
        "content": "<p>you can also use <code>x.py build library/std</code> which defaults to <code>--stage 1</code>, but that might be more confusing than helpful at this point <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 231248649,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616369554
    },
    {
        "content": "<p>Confusing to say the least — <code>./x.py check --stage 1 library/std</code> errors out (it's using a mix of old and new APIs, so that's expected, <em>but</em> the error indicates it's still using the rustup-installed nightly), while <code>./x.py build library/std</code> <em>does not</em> error, while <code>./x.py build --stage 1 library/std</code> <em>does</em> error (in the same manner as the first). If <code>build</code> defaults to stage 1, why would this be the case?</p>",
        "id": 231249785,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616371052
    },
    {
        "content": "<p>To be clear, what I was <em>hoping</em> would happen is an error message that implied it was being built with my local changes. A successful build should not happen, as there is local code referenced that no longer exists.</p>",
        "id": 231250077,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616371363
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Changes.20requiring.20both.20library.20and.20compiler.20modifications/near/231249785\">said</a>:</p>\n<blockquote>\n<p>Confusing to say the least — <code>./x.py check --stage 1 library/std</code> errors out (it's using a mix of old and new APIs, so that's expected, <em>but</em> the error indicates it's still using the rustup-installed nightly), while <code>./x.py build library/std</code> <em>does not</em> error, while <code>./x.py build --stage 1 library/std</code> <em>does</em> error (in the same manner as the first). If <code>build</code> defaults to stage 1, why would this be the case?</p>\n</blockquote>\n<p>that sounds like you've run <code>x.py setup library</code> in the past</p>",
        "id": 231250753,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616372288
    },
    {
        "content": "<p>try setting <code>build-stage = 1</code> explicitly in config.toml and that should give you the <code>--stage 1</code> default for <code>build</code></p>",
        "id": 231250766,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616372322
    },
    {
        "content": "<p>Oh, probably, because I initially didn't think that what I was doing would touch the compiler itself, just library code.</p>",
        "id": 231250778,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616372347
    },
    {
        "content": "<p>yay having people who know what they're doing lol</p>",
        "id": 231250783,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616372354
    },
    {
        "content": "<p>Someone mind taking a look at <a href=\"https://github.com/rust-lang/rust/pull/83363\">PR#83363</a>? The log is exactly what I saw seeing locally (I know, <em>shocker</em>, but you never know?). Given that I have made the necessary changes in the <code>library/proc_macro</code> crate, I don't know what I'm missing.</p>",
        "id": 231263220,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616388144
    },
    {
        "content": "<p>if you add <code>cfg(not(bootstrap))</code> to the change in <code>rustc_macros</code>, does it work? I wouldn't <em>expect</em> that to be necessary but proc-macros are weird</p>",
        "id": 231263263,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616388231
    },
    {
        "content": "<p>And leave the previous implementation behind <code>#[cfg(bootstrap)]</code>? Otherwise it would just disappear, effectively.</p>",
        "id": 231263325,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616388298
    },
    {
        "content": "<p>yeah</p>",
        "id": 231263335,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616388314
    },
    {
        "content": "<p>Confirming no change with <code>./x.py check --stage 1</code></p>",
        "id": 231263822,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616388876
    },
    {
        "content": "<p>no change as in it still gives an error? that's weird :/</p>",
        "id": 231263836,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616388906
    },
    {
        "content": "<p>Yeah literally identical</p>",
        "id": 231263845,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616388915
    },
    {
        "content": "<p>not sure then, sorry</p>",
        "id": 231263920,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616388986
    },
    {
        "content": "<p>All good. Maybe someone else can help. I know you're on the docs team, not libs or compiler haha</p>",
        "id": 231263927,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616389005
    },
    {
        "content": "<p>well, rustdoc is tangentially related :P and I work a lot on bootstrapping</p>",
        "id": 231263962,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616389076
    },
    {
        "content": "<p>(the docs team doesn't really exist anymore)</p>",
        "id": 231264001,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616389086
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123856\">Vadim Petrochenkov</span> should know what's going wrong when he reviews though</p>",
        "id": 231264022,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616389128
    },
    {
        "content": "<p>I don't know much about the teams aside from libs/lang, really. And <em>everything</em> is tangentially related in a way <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 231264031,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616389145
    },
    {
        "content": "<p>I'll drop a comment on the issue and switch it back to waiting on review.</p>",
        "id": 231264044,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616389167
    },
    {
        "content": "<p>Mind flipping the label for me? I'm unable to do so...ironic given that I could remove it.</p>",
        "id": 231264221,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616389318
    },
    {
        "content": "<p>done</p>",
        "id": 231264338,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616389433
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 231264391,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616389489
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Changes.20requiring.20both.20library.20and.20compiler.20modifications/near/231264221\">said</a>:</p>\n<blockquote>\n<p>I'm unable to do so...ironic given that I could remove it.</p>\n</blockquote>\n<p>Is it <a href=\"https://github.com/rust-lang/triagebot/issues/1066\">triagebot#1066</a>? Note that <code>S</code> should be uppercase.</p>",
        "id": 231272083,
        "sender_full_name": "hyd-dev",
        "timestamp": 1616398576
    },
    {
        "content": "<p>Maybe? Not sure if it's case sensitive anyways.</p>",
        "id": 231272127,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1616398639
    }
]