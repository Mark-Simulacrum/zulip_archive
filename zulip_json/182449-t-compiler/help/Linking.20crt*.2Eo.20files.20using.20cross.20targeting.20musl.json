[
    {
        "content": "<p>So, I'm trying to compile a hello world for riscv64-unknown-linux-musl. I'm using <code>cross</code> at the moment, and I have generated a docker image that (I think) has the correct toolchain. Compilation appears to work, but linking is failing saying that <code>cc</code> cannot find five files, all crt*.o. I have gone into the docker image and those files are present, but whatever is invoking <code>cc</code>isn't giving a path for them:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: linking with `cc` failed: exit status: 1\n  |\n  = note: &quot;cc&quot; &quot;crt1.o&quot; &quot;crti.o&quot; &quot;crtbegin.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-fcb1c365989aaa71.risctest.d0c3b2d2-cgu.0.rcgu.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-fcb1c365989aaa71.risctest.d0c3b2d2-cgu.1.rcgu.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-fcb1c365989aaa71.risctest.d0c3b2d2-cgu.2.rcgu.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-fcb1c365989aaa71.7cbnssvq8d3o7ek.rcgu.o&quot; &quot;-Wl,--as-needed&quot; &quot;-L&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps&quot; &quot;-L&quot; &quot;/target/release/deps&quot; &quot;-L&quot; &quot;/xargo/lib/rustlib/riscv64gc-unknown-linux-musl/lib&quot; &quot;-Wl,--start-group&quot; &quot;-Wl,-Bstatic&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libstd-d1a0e8af1724d784.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libpanic_abort-6c53961b25c07e29.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/librustc_demangle-39259970d5c3d274.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libstd_detect-50e1cc1479dd2785.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libhashbrown-d4e1d9ad296d1bea.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/librustc_std_workspace_alloc-ffec08c7fc5869ae.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libunwind-4f18c2af9b252d6c.rlib&quot; &quot;-lunwind&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/liblibc-407d4e74c1f54639.rlib&quot; &quot;-lc&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libcfg_if-c4d5877a62e47ad4.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/liblibc-a6a90479efc625dc.rlib&quot; &quot;-lc&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/liballoc-28682a01ba4365d3.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/librustc_std_workspace_core-c8ea9cd31d925569.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libcore-cdc82cd127739f8e.rlib&quot; &quot;-Wl,--end-group&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libcompiler_builtins-81bec59cc1845e53.rlib&quot; &quot;-Wl,-Bdynamic&quot; &quot;-Wl,--eh-frame-hdr&quot; &quot;-Wl,-znoexecstack&quot; &quot;-nostartfiles&quot; &quot;-L&quot; &quot;/xargo/lib/rustlib/riscv64gc-unknown-linux-musl/lib&quot; &quot;-L&quot; &quot;/xargo/lib/rustlib/riscv64gc-unknown-linux-musl/lib/self-contained&quot; &quot;-o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-fcb1c365989aaa71&quot; &quot;-Wl,--gc-sections&quot; &quot;-static&quot; &quot;-no-pie&quot; &quot;-Wl,-zrelro,-znow&quot; &quot;-Wl,--strip-all&quot; &quot;-nodefaultlibs&quot; &quot;crtend.o&quot; &quot;crtn.o&quot;\n  = note: cc: error: crt1.o: No such file or directory\n          cc: error: crti.o: No such file or directory\n          cc: error: crtbegin.o: No such file or directory\n          cc: error: crtend.o: No such file or directory\n          cc: error: crtn.o: No such file or directory\n</code></pre></div>\n<p>Is there a way to get <code>cross</code> to pass a search path to <code>cc</code>?</p>",
        "id": 270413197,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643819311
    },
    {
        "content": "<p>Does <code>/xargo/lib/rustlib/riscv64gc-unknown-linux-musl/lib/self-contained</code> contain these files? If not, that is a xargo bug. This directory should contain all the parts of musl necessary for linking. This includes all crt objects as well as libc.a.</p>",
        "id": 270421398,
        "sender_full_name": "bjorn3",
        "timestamp": 1643821966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"475891\">@Ross Schulman</span></p>",
        "id": 270421477,
        "sender_full_name": "bjorn3",
        "timestamp": 1643821995
    },
    {
        "content": "<p>Do you mean within the docker container or on the host, <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> ?</p>",
        "id": 270424927,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643823057
    },
    {
        "content": "<p>In the container.</p>",
        "id": 270424969,
        "sender_full_name": "bjorn3",
        "timestamp": 1643823069
    },
    {
        "content": "<p>I'm looking, but <code>find</code> says that the only thing named <code>xargo</code> in the container is the binary itself in /usr/local/bin.</p>",
        "id": 270425738,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643823332
    },
    {
        "content": "<p>Also after running the container? It is created as part of the compilation process.</p>",
        "id": 270428241,
        "sender_full_name": "bjorn3",
        "timestamp": 1643824150
    },
    {
        "content": "<p>Oh, hm, let me try to get into one of the already run containers.</p>",
        "id": 270428876,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643824367
    },
    {
        "content": "<p>:( I'm still working on it. The container stops after the compilation fails, so looking into it is harder.</p>",
        "id": 270439506,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643828539
    },
    {
        "content": "<p>you could start the container with an alternate command (a shell) if the image contains one and then just work inside it</p>",
        "id": 270440224,
        "sender_full_name": "The 8472",
        "timestamp": 1643828812
    },
    {
        "content": "<p>Yeah, I'm working on that, but I have to figure out exactly how <code>cross</code> invokes docker to create the exact same environment, and I haven't gotten that to work yet.</p>",
        "id": 270443309,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643830013
    },
    {
        "content": "<p>Ok. <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> after running the compilation manually in the docker container, there is no <code>self-contained</code> directory within <code>/xargo/lib/rustlib/riscv64gc-unknown-linux-musl/lib/</code>.</p>",
        "id": 270446440,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643831241
    },
    {
        "content": "<p>If the container itself contains a musl toolchain for the target you could try passing <code>-Clink-self-contained=no</code> to rustc.</p>",
        "id": 270446619,
        "sender_full_name": "bjorn3",
        "timestamp": 1643831305
    },
    {
        "content": "<p>Otherwise if you don't have any C dependencies and have a riscv64 linker on your system (or you have lld and use <code>-Clink-arg=-fuse-ld=lld</code>), you can try this instead of <code>cross</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ rustup target add riscv64gc-unknown-linux-musl\n$ cargo build --target riscv64gc-unknown-linux-musl\n</code></pre></div>",
        "id": 270446803,
        "sender_full_name": "bjorn3",
        "timestamp": 1643831395
    },
    {
        "content": "<p>Interestingly, the crt files ARE in <code>/usr/local/riscv64-linux-musl/lib</code> in the container...</p>",
        "id": 270449075,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643832315
    },
    {
        "content": "<p>By default rustc uses a so called \"self-contained\" link on musl. This means that it ships with libc, crt and everything else necessary for linking against the target (except the linker, though it does ship with lld, just not enabled by default). This is contained in the <code>self-contained</code> directory of the respective target in the sysroot. <code>-Clink-self-contained=no</code> will make it use the system installed version instead.</p>",
        "id": 270450180,
        "sender_full_name": "bjorn3",
        "timestamp": 1643832767
    },
    {
        "content": "<p>I've actually got it using the other crt files by just passing in the other directory to -L. The problem now is that rustc is using the system <code>cc</code> to link, which is understandably complaining that all of the files are risc-v ELFs :)</p>",
        "id": 270454072,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643834524
    },
    {
        "content": "<p>Try <code>-Clink-arg=-fuse-ld=lld</code> if lld is installed.</p>",
        "id": 270454794,
        "sender_full_name": "bjorn3",
        "timestamp": 1643834854
    },
    {
        "content": "<p>Sorry, but how do I send that to rustc? Does that go in <a href=\"http://build.rs\">build.rs</a>?</p>",
        "id": 270455633,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643835237
    },
    {
        "content": "<p>I think you want to set that in <code>.cargo/config.toml</code>.</p>",
        "id": 270456637,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643835634
    },
    {
        "content": "<p>Yeah, I thought so too, but that doesn't seem to be having an effect.</p>",
        "id": 270457454,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643835967
    },
    {
        "content": "<p>Ok, definitely making progress. Its now using the cross-compiler cc to link. Problem now is that its not finding <code>lunwind</code>, so I'm figuring that out.</p>",
        "id": 270460804,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643837372
    },
    {
        "content": "<p>Why is it even trying to link lunwind? I have <code>panic = abort</code>in my <code>Cargo.toml</code></p>",
        "id": 270465376,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643839327
    },
    {
        "content": "<p>Libunwind is used for generating backtraces by libstd.</p>",
        "id": 270470532,
        "sender_full_name": "bjorn3",
        "timestamp": 1643841661
    },
    {
        "content": "<p>Oh, ok, interesting.</p>",
        "id": 270471081,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643841965
    },
    {
        "content": "<p>This is where I'm at, at the moment...</p>\n<div class=\"codehilite\"><pre><span></span><code>error: linking with `riscv64-linux-musl-cc` failed: exit status: 1\n  |\n  = note: &quot;riscv64-linux-musl-cc&quot; &quot;/usr/local/riscv64-linux-musl/lib/crt1.o&quot; &quot;/usr/local/riscv64-linux-musl/lib/crti.o&quot; &quot;/usr/local/lib/gcc/riscv64-linux-musl/9.2.0/crtbegin.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-3e7b7219504cb3d3.risctest.fadce640-cgu.0.rcgu.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-3e7b7219504cb3d3.risctest.fadce640-cgu.1.rcgu.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-3e7b7219504cb3d3.risctest.fadce640-cgu.2.rcgu.o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-3e7b7219504cb3d3.2kw4jzz8q1vaeyro.rcgu.o&quot; &quot;-Wl,--as-needed&quot; &quot;-L&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps&quot; &quot;-L&quot; &quot;/target/release/deps&quot; &quot;-L&quot; &quot;/usr/local/riscv64-linux-musl/lib&quot; &quot;-L&quot; &quot;/usr/local/lib/gcc/riscv64-linux-musl/9.2.0&quot; &quot;-L&quot; &quot;/rust/lib/rustlib/riscv64gc-unknown-linux-musl/lib&quot; &quot;-Wl,--start-group&quot; &quot;-Wl,-Bstatic&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libstd-b4b03dadfbcad0f7.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libpanic_abort-a014a1ef7d574a31.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/librustc_demangle-75d17671123f2cb3.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libstd_detect-a289129024f700ca.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libhashbrown-c90a5ae2c17f9509.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/librustc_std_workspace_alloc-bdfd4e39d1226369.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libunwind-dc42d8137b0be4a7.rlib&quot; &quot;-lunwind&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/liblibc-06229b7216571cd0.rlib&quot; &quot;-lc&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libcfg_if-a5258beea873b908.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/liblibc-ea78ae6f8d9aa609.rlib&quot; &quot;-lc&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/liballoc-76628974dfffdc26.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/librustc_std_workspace_core-7f261685d52c9541.rlib&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libcore-297564365220ec67.rlib&quot; &quot;-Wl,--end-group&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/libcompiler_builtins-aa5d63d4d450b798.rlib&quot; &quot;-Wl,-Bdynamic&quot; &quot;-Wl,--eh-frame-hdr&quot; &quot;-Wl,-znoexecstack&quot; &quot;-nostartfiles&quot; &quot;-L&quot; &quot;/rust/lib/rustlib/riscv64gc-unknown-linux-musl/lib&quot; &quot;-L&quot; &quot;/rust/lib/rustlib/riscv64gc-unknown-linux-musl/lib/self-contained&quot; &quot;-o&quot; &quot;/target/riscv64gc-unknown-linux-musl/release/deps/risctest-3e7b7219504cb3d3&quot; &quot;-Wl,--gc-sections&quot; &quot;-static&quot; &quot;-no-pie&quot; &quot;-Wl,-zrelro,-znow&quot; &quot;-nodefaultlibs&quot; &quot;/usr/local/lib/gcc/riscv64-linux-musl/9.2.0/crtend.o&quot; &quot;/usr/local/riscv64-linux-musl/lib/crtn.o&quot;\n  = note: /usr/local/bin/../lib/gcc/riscv64-linux-musl/9.2.0/../../../../riscv64-linux-musl/bin/ld: cannot find -lunwind\n          collect2: error: ld returned 1 exit status\n</code></pre></div>",
        "id": 270471105,
        "sender_full_name": "Ross Schulman",
        "timestamp": 1643841985
    }
]