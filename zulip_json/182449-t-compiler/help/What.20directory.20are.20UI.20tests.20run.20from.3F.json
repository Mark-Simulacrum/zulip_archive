[
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/pull/83705\">https://github.com/rust-lang/rust/pull/83705</a>, I need to pass an argument to a file which exists (which file doesn't matter). Originally I tried just passing the source file itself, but that gave a file not found error, I think because the relative paths are wrong. Is there a way to see what directory the tests are run from? Or does compiletest set any variables I could use?</p>",
        "id": 232617284,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617206526
    },
    {
        "content": "<p>I don't want to use <code>/etc/passwd</code> or something because that will break on windows</p>",
        "id": 232617341,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617206547
    },
    {
        "content": "<p>Maybe use a run-make test?</p>",
        "id": 232617758,
        "sender_full_name": "bjorn3",
        "timestamp": 1617206693
    },
    {
        "content": "<p>I tried <code>$DIR</code> but apparently it doesn't get replaced in <code>compile-flags</code>?</p>",
        "id": 232617775,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617206699
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20directory.20are.20UI.20tests.20run.20from.3F/near/232617758\">said</a>:</p>\n<blockquote>\n<p>Maybe use a run-make test?</p>\n</blockquote>\n<p>hmm but I'd like to test the error output</p>",
        "id": 232617849,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617206722
    },
    {
        "content": "<p>I guess I could just use grep and manually add a .stderr file to compare it too, but then --bless won't work</p>",
        "id": 232617962,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617206761
    },
    {
        "content": "<p>compiletest itself doesn't seem to set the current working directory, so I am guessing that the dir from which <code>x.py</code> is run is used as current working directory. This dir doesn't have to be root of the local rust checkout, so you shouldn't rely on it.</p>",
        "id": 232618731,
        "sender_full_name": "bjorn3",
        "timestamp": 1617207024
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20directory.20are.20UI.20tests.20run.20from.3F/near/232617775\">said</a>:</p>\n<blockquote>\n<p>I tried <code>$DIR</code> but apparently it doesn't get replaced in <code>compile-flags</code>?</p>\n</blockquote>\n<p>I think implementing this is the best option.</p>",
        "id": 232618777,
        "sender_full_name": "bjorn3",
        "timestamp": 1617207043
    },
    {
        "content": "<p>hmm ok I see the issue, right now compiletest only normalizes <em>outputs</em>, not inputs</p>",
        "id": 232619017,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617207133
    },
    {
        "content": "<p>I need to set <code>test_cx.props.compile_flags</code> looks like</p>",
        "id": 232619455,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617207295
    },
    {
        "content": "<p>oh ffs</p>\n<div class=\"codehilite\"><pre><span></span><code>fn expand_variables(mut value: String, config: &amp;Config) -&gt; String {\n    const CWD: &amp;str = &quot;{{cwd}}&quot;;\n    const SRC_BASE: &amp;str = &quot;{{src-base}}&quot;;\n    const BUILD_BASE: &amp;str = &quot;{{build-base}}&quot;\n</code></pre></div>\n<p>it decided to use its own variables <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 232619609,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617207344
    },
    {
        "content": "<p>ok yup <code>// compile-flags:--theme {{src-base}}/invalid-theme-name.rs</code> does what I want</p>",
        "id": 232619788,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617207409
    },
    {
        "content": "<p>do you understand this error?</p>\n<div class=\"codehilite\"><pre><span></span><code>---- [ui] rustdoc-ui/invalid-theme-name.rs stdout ----\n\nerror: error pattern &#39;invalid argument: &quot;/home/joshua/rustc3/src/test/rustdoc-ui/invalid-theme-name.rs&quot;&#39; not found!\nstatus: exit status: 1\n\nstderr:\n------------------------------------------\nerror: invalid argument: &quot;/home/joshua/rustc3/src/test/rustdoc-ui/invalid-theme-name.rs&quot;\n</code></pre></div>",
        "id": 232620147,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617207534
    },
    {
        "content": "<p>ok well changing it to just <code>invalid-argument</code> made it work so we're going with that <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 232620258,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617207573
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1098\">https://github.com/rust-lang/rustc-dev-guide/pull/1098</a></p>",
        "id": 232621450,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1617207998
    }
]