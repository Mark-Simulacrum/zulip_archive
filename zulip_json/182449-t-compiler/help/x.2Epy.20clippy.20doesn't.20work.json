[
    {
        "content": "<p><code>./x.py clippy</code> errors out while compiling core:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>A bunch of errors (there are more warnings above the part I copied)</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">warning</span>: <span class=\"err\">`</span><span class=\"n\">doc</span><span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">stable</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">primitive_docs</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1040</span>:<span class=\"mi\">7</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1040</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"cp\">#[doc(primitive = </span><span class=\"s\">\"reference\"</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">warning</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">previously</span><span class=\"w\"> </span><span class=\"n\">accepted</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">being</span><span class=\"w\"> </span><span class=\"n\">phased</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"kr\">become</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">hard</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">release</span><span class=\"o\">!</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">issue</span><span class=\"w\"> </span>#<span class=\"mi\">82730</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/rust-lang/rust/issues/82730&gt;</span>\n\n<span class=\"n\">warning</span>: <span class=\"err\">`</span><span class=\"n\">doc</span><span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">stable</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">primitive_docs</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1171</span>:<span class=\"mi\">7</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1171</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"cp\">#[doc(primitive = </span><span class=\"s\">\"fn\"</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"o\">^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">warning</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">previously</span><span class=\"w\"> </span><span class=\"n\">accepted</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">being</span><span class=\"w\"> </span><span class=\"n\">phased</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"kr\">become</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">hard</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">release</span><span class=\"o\">!</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">issue</span><span class=\"w\"> </span>#<span class=\"mi\">82730</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/rust-lang/rust/issues/82730&gt;</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0522</span><span class=\"p\">]</span>: <span class=\"nc\">definition</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"n\">language</span><span class=\"w\"> </span><span class=\"n\">item</span>: <span class=\"err\">`</span><span class=\"n\">generator_return</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ops</span><span class=\"o\">/</span><span class=\"n\">generator</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">85</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"cp\">#[lang = </span><span class=\"s\">\"generator_return\"</span><span class=\"cp\">]</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">definition</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"n\">language</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">generator_return</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0522</span><span class=\"p\">]</span>: <span class=\"nc\">definition</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"n\">language</span><span class=\"w\"> </span><span class=\"n\">item</span>: <span class=\"err\">`</span><span class=\"n\">into_future</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">future</span><span class=\"o\">/</span><span class=\"n\">into_future</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">32</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"cp\">#[cfg_attr(not(bootstrap), lang = </span><span class=\"s\">\"into_future\"</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">definition</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"n\">language</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">into_future</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">i8mm</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">valid</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/../../</span><span class=\"n\">stdarch</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">core_arch</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">arm_shared</span><span class=\"o\">/</span><span class=\"n\">neon</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">4811</span>:<span class=\"mi\">43</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">4811</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"cp\">#[cfg_attr(not(bootstrap), target_feature(enable = </span><span class=\"s\">\"i8mm\"</span><span class=\"cp\">))]</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">                                           </span><span class=\"o\">^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">i8mm</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">valid</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">i8mm</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">valid</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/../../</span><span class=\"n\">stdarch</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">core_arch</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">arm_shared</span><span class=\"o\">/</span><span class=\"n\">neon</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">4831</span>:<span class=\"mi\">43</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">4831</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"cp\">#[cfg_attr(not(bootstrap), target_feature(enable = </span><span class=\"s\">\"i8mm\"</span><span class=\"cp\">))]</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">                                           </span><span class=\"o\">^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">i8mm</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">valid</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">i8mm</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">valid</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/../../</span><span class=\"n\">stdarch</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">core_arch</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">arm_shared</span><span class=\"o\">/</span><span class=\"n\">neon</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">4851</span>:<span class=\"mi\">43</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">4851</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"cp\">#[cfg_attr(not(bootstrap), target_feature(enable = </span><span class=\"s\">\"i8mm\"</span><span class=\"cp\">))]</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">                                           </span><span class=\"o\">^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">i8mm</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">valid</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0206</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">type</span>\n   <span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">array</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">345</span>:<span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">345</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nb\">Copy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">N</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                        </span><span class=\"o\">^^^^^^</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">structure</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">enumeration</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0204</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">type</span>\n   <span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/../../</span><span class=\"n\">portable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">core_simd</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">vector</span><span class=\"o\">/</span><span class=\"n\">ptr</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"cp\">#[derive(Debug, Copy, Clone)]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                   </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"></span>\n<span class=\"mi\">7</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"cp\">#[repr(simd)]</span><span class=\"w\"></span>\n<span class=\"mi\">8</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">crate</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">SimdConstPtr</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">LANES</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">([</span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">LANES</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                         </span><span class=\"o\">-----------------</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span>::: <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">marker</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">391</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">391</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"p\">(</span><span class=\"cp\">$item</span>:<span class=\"nc\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">392</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"cm\">/* compiler built-in */</span><span class=\"w\"></span>\n<span class=\"mi\">393</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"cp\">#[derive(Copy)]</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0204</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">type</span>\n   <span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/../../</span><span class=\"n\">portable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">core_simd</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">vector</span><span class=\"o\">/</span><span class=\"n\">ptr</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">32</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">32</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"cp\">#[derive(Debug, Copy, Clone)]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                   </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"></span>\n<span class=\"mi\">33</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"cp\">#[repr(simd)]</span><span class=\"w\"></span>\n<span class=\"mi\">34</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">crate</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">SimdMutPtr</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">LANES</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">([</span><span class=\"o\">*</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">LANES</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                       </span><span class=\"o\">---------------</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span>::: <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">marker</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">391</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">391</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"p\">(</span><span class=\"cp\">$item</span>:<span class=\"nc\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">392</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"cm\">/* compiler built-in */</span><span class=\"w\"></span>\n<span class=\"mi\">393</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"cp\">#[derive(Copy)]</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0204</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">type</span>\n   <span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/../../</span><span class=\"n\">portable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">core_simd</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">vector</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">302</span>:<span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">17</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Simd</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">LANES</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">([</span><span class=\"n\">T</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">LANES</span><span class=\"p\">])</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                        </span><span class=\"o\">----------</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">302</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">LANES</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Simd</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LANES</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                             </span><span class=\"o\">^^^^</span><span class=\"w\"></span>\n</code></pre></div>\n</div></div>\n<p>I've also tried passing <code>--stage {0,1,2}</code>; none of them work. I have download-rustc set to if-unchanged, but IIRC it didn't work even with download-rustc turned off. I suspect Clippy is not handling conditional compilation correctly, given that a lot of the errors are about recently-added code. Any idea what's going on? Could this be related to the bootstrap bump?</p>\n<p>My ultimate goal is to run Clippy on rustdoc, so I'd appreciate suggestions on how to narrow Clippy's output to just rustdoc as well.</p>",
        "id": 263680517,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638588536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> x.py clippy is a hack and uses your host toolchain. Try <code>rustup update nightly</code>.</p>",
        "id": 263683383,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638592457
    },
    {
        "content": "<p>Hmm, I just updated my toolchain earlier today I thought</p>",
        "id": 263683605,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638592901
    },
    {
        "content": "<p>Aha:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">% </span>rustup show active-toolchain\n<span class=\"go\">stable-aarch64-apple-darwin (default)</span>\n</code></pre></div>",
        "id": 263683715,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638593056
    },
    {
        "content": "<p>Trying <code>rustup override set nightly</code></p>",
        "id": 263683722,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638593082
    },
    {
        "content": "<p>That fixed it!</p>",
        "id": 263683795,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638593210
    },
    {
        "content": "<p>Maybe bootstrap should be changed to run with <code>+nightly</code>?</p>",
        "id": 263683798,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638593221
    },
    {
        "content": "<p>Thanks for your help by the way</p>",
        "id": 263683802,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638593232
    },
    {
        "content": "<p>You're welcome :) and hmm, that assumes you have rustup installed, maybe we could make that conditional on <code>rustup --version</code> succeeding. Do you want to make a PR for that?</p>",
        "id": 263684271,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638593943
    },
    {
        "content": "<p>Hmm, not sure if I'll have time to dig through the bootstrap sources soon</p>",
        "id": 263684479,
        "sender_full_name": "Noah Lev",
        "timestamp": 1638594126
    },
    {
        "content": "<p>Well, if you do find time, it's near the top of <code>src/bootstrap/check.rs</code></p>",
        "id": 263684727,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638594581
    },
    {
        "content": "<p>so far I made the best experiences with using clippy from the master toolchain.<br>\nso rustup default master and then ./x.py clippy</p>\n<p><a href=\"https://github.com/kennytm/rustup-toolchain-install-master\">https://github.com/kennytm/rustup-toolchain-install-master</a></p>",
        "id": 263711767,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1638628989
    }
]