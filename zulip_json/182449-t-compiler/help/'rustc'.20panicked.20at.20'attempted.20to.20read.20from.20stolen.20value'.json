[
    {
        "content": "<p>I'm getting the error message <code>'rustc' panicked at 'attempted to read from stolen value'</code> when calling :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">body_owners</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">mir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">mir_built</span><span class=\"p\">(</span><span class=\"n\">ty</span>::<span class=\"n\">WithOptConstParam</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">did</span>: <span class=\"nc\">function</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">const_param_did</span>: <span class=\"nc\">tcx</span><span class=\"p\">.</span><span class=\"n\">opt_const_param_of</span><span class=\"p\">(</span><span class=\"n\">function</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">mir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">mir</span><span class=\"p\">.</span><span class=\"n\">borrow</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// here</span>\n</code></pre></div>\n<p>For the context, I'm creating a tool that analyze the callgraph of a crate. I forked <code>rustdoc</code>, renamed it <code>cargo-callgraph</code> and then modified the function <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustdoc/core/fn.run_global_ctxt.html\"><code>run_global_ctxt</code></a>. You can get the code with <code>git clone git@github.com:robinmoussu/cargo-callgraph.git</code>.</p>\n<p>When running my tool on a single rust file, or on a simple file, this works perfectly (note: the output is hardcoded to <code>example2.dot</code>, don't ask me why!):</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># run on a single file</span>\ncargo run -- test/test1/src/main.rs <span class=\"o\">&amp;&amp;</span> dot -Txlib example2.dot\n\n<span class=\"c1\"># run on a simple crate</span>\n<span class=\"nb\">cd</span> test/test1 <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">RUSTDOC</span><span class=\"o\">=</span>../../target/debug/cargo-callgraph cargo doc <span class=\"o\">&amp;&amp;</span> dot -Txlib example2.dot\n</code></pre></div>\n<p>However, if I try to run it on a more complex crate, for example cargo-callgraph itself, I get the error mentioned above</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ <span class=\"nv\">RUSTDOC</span><span class=\"o\">=</span>target/debug/cargo-callgraph cargo doc\nthread <span class=\"s1\">'rustc'</span> panicked at <span class=\"s1\">'attempted to read from stolen value'</span>, /rustc/e792288df31636ca28108516c63a00ce4267063a/compiler/rustc_data_structures/src/steal.rs:35:21\n</code></pre></div>\n<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_data_structures/steal.rs.html#33-38\">Steal::borrow()</a></p>\n<p>The function whose mir cannot be borrowed is <code>cargo_callgraph[8787]::formats::item_type::ItemType::Module::{constant#0})</code>, and this function was not previously analyzed (I printed the <code>DefId</code> of every function to check it).</p>\n<p>I have no idea of how to debug this.</p>",
        "id": 219145122,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607378757
    },
    {
        "content": "<p>I don't know what's going wrong, but <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/steal/struct.Steal.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/steal/struct.Steal.html</a> might give you some background</p>",
        "id": 219146167,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607379180
    },
    {
        "content": "<p>I think the MIR is stolen for optimizations?</p>",
        "id": 219146252,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607379242
    },
    {
        "content": "<p>You don't have access to debug-level logging, right?</p>",
        "id": 219146321,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607379268
    },
    {
        "content": "<p>Love the docs though</p>\n<blockquote>\n<p>Specifically, we sometimes have queries (<em>cough</em> MIR <em>cough</em>)</p>\n</blockquote>",
        "id": 219146398,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607379328
    },
    {
        "content": "<p>Maybe <code>-Zquery-stats</code> can help you understand which queries get called?</p>",
        "id": 219147585,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607380038
    },
    {
        "content": "<p>Specifically the \"Query value count\" part</p>",
        "id": 219147608,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607380067
    },
    {
        "content": "<p>You might just access <code>optimized_mir</code> and use <code>-Zmir-opt-level=0</code> to ensure that no optimization will ever remove a function call.</p>",
        "id": 219147625,
        "sender_full_name": "bjorn3",
        "timestamp": 1607380081
    },
    {
        "content": "<blockquote>\n<p>I think the MIR is stolen for optimizations?</p>\n</blockquote>\n<p>Correct</p>",
        "id": 219147686,
        "sender_full_name": "bjorn3",
        "timestamp": 1607380106
    },
    {
        "content": "<p>(There's also some documentation about stealing in <a href=\"https://rustc-dev-guide.rust-lang.org/mir/passes.html#stealing\">https://rustc-dev-guide.rust-lang.org/mir/passes.html#stealing</a>)</p>",
        "id": 219148366,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607380486
    },
    {
        "content": "<p>Step one: ask a question. Step two: take a break, and watch the latest <a href=\"https://www.youtube.com/watch?v=ZI2Q5cFqx9k\">wintergatan</a> video (if you don't know the marble machine he his building, it's definitively worth the watch each week). Step three: come back and get amazing proposition. <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"ZI2Q5cFqx9k\" href=\"https://www.youtube.com/watch?v=ZI2Q5cFqx9k\"><img src=\"https://i.ytimg.com/vi/ZI2Q5cFqx9k/default.jpg\"></a></div>",
        "id": 219150214,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607381709
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> why does both <code>-Z query-stats</code> and <code>-Z mir-opt-level</code> are rejected?</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cargo build <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span>full <span class=\"nv\">RUSTDOC</span><span class=\"o\">=</span>target/debug/cargo-callgraph cargo doc --no-deps --jobs <span class=\"m\">1</span> -Zmir-opt-level<span class=\"o\">=</span><span class=\"m\">0</span>\n    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> in <span class=\"m\">0</span>.03s\nerror: unknown <span class=\"sb\">`</span>-Z<span class=\"sb\">`</span> flag specified: mir-opt-level\n</code></pre></div>",
        "id": 219150543,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607381907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span> they're being passed to cargo, not to rustdoc</p>",
        "id": 219150609,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607381956
    },
    {
        "content": "<p>add <code>--</code></p>",
        "id": 219150612,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607381958
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ cargo build &amp;&amp; RUST_BACKTRACE=full RUSTDOC=target/debug/cargo-callgraph cargo doc --no-deps --jobs 1 -- -Zmir-opt-level=0\n    Finished dev [unoptimized + debuginfo] target(s) in 0.03s\nerror: Found argument &#39;-Zmir-opt-level=0&#39; which wasn&#39;t expected, or isn&#39;t valid in this context\n\nUSAGE:\n    cargo doc --jobs &lt;N&gt; --no-deps\n\nFor more information try --help\n</code></pre></div>",
        "id": 219150729,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607382014
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>cargo doc --help\ncargo-doc\nBuild a package&#39;s documentation\n\nUSAGE:\n    cargo doc [OPTIONS]\n\nOPTIONS:\n    -Z &lt;FLAG&gt;...                     Unstable (nightly-only) flags to Cargo, see &#39;cargo -Z help&#39; for details\n</code></pre></div>",
        "id": 219150771,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607382039
    },
    {
        "content": "<p>oh sorry, <code>cargo rustdoc</code>, not <code>cargo doc</code></p>",
        "id": 219150778,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607382049
    },
    {
        "content": "<p><code>cargo build &amp;&amp; RUST_BACKTRACE=full RUSTDOC=target/debug/cargo-callgraph cargo rustdoc --jobs 1 -- -Zmir-opt-level=0</code> gives me the exact same error <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 219150955,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607382144
    },
    {
        "content": "<p>What is the difference between <code>cargo doc</code> and <code>cargo rustdoc</code>?</p>",
        "id": 219150994,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607382174
    },
    {
        "content": "<p><code>cargo doc</code> is a layer on top of <code>rustdoc</code>, whereas <code>cargo rustdoc</code> gives you more direct access. But I don't fully understand the difference either :)</p>",
        "id": 219151796,
        "sender_full_name": "Noah Lev",
        "timestamp": 1607382743
    },
    {
        "content": "<p>Pff, I need to go to bed, and continue tomorrow. Given that my code isn't stealing anything, I will try to do more clean-up and remove everything but my code (there is currently still some remainders of the original <code>librustdoc</code> around my code). I hope it will help. If anyone has other ideas, I'll gladly read them tomorrow.</p>",
        "id": 219152061,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607382930
    },
    {
        "content": "<p>You can use RUSTDOCFLAGS to pass the flags to rustdoc.</p>",
        "id": 219152175,
        "sender_full_name": "bjorn3",
        "timestamp": 1607383017
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>cargo build &amp;&amp; RUSTDOCFLAGS=-Zmir-opt-level=0 RUSTDOC=target/debug/cargo-callgraph cargo doc --jobs 1\n</code></pre></div>\n<p>It still gives the same error (and I also tested with <code>cargo rustdoc</code> without more success). <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 219152520,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607383289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281841\">@Robin Moussu</span>  that sounds like you got rid of some of rustdoc's argument parsing when stripping parts of rustdoc away</p>",
        "id": 219153485,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607384065
    },
    {
        "content": "<p>I don't think so, but will double check tomorrow</p>",
        "id": 219153540,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607384121
    },
    {
        "content": "<p>I have no idea what triggered that bug (especially since <code>tcx.is_mir_available(function))</code> returns true), but I realized that <code>tcx.body_owner()</code> doesn't only iterate on functions and closure, but a bunch of other stuff. I filtered them out, and the buggy item was part of what have been filtered out (it was an <code>AnonConst</code>, but not the only one, so go figure).</p>",
        "id": 219285538,
        "sender_full_name": "Robin Moussu",
        "timestamp": 1607475433
    }
]