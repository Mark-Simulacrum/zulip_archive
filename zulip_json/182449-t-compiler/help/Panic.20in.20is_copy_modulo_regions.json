[
    {
        "content": "<p>Is there perhaps a better way to query whether a given type implements <code>Copy</code>?</p>",
        "id": 262288933,
        "sender_full_name": "Federico Poli",
        "timestamp": 1637568418
    },
    {
        "content": "<p>You could query the trait system.</p>",
        "id": 262297683,
        "sender_full_name": "fee1-dead",
        "timestamp": 1637574444
    },
    {
        "content": "<p>Thanks! Calling <code>type_implements_trait</code> worked fine.</p>",
        "id": 262303987,
        "sender_full_name": "Federico Poli",
        "timestamp": 1637578449
    },
    {
        "content": "<p>Actually, I get a panic even using <code>type_implements_trait</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 29&#39;, /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/std/src/panicking.rs:498:5\n   1: core::panicking::panic_fmt\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/panicking.rs:106:14\n   2: core::panicking::panic_bounds_check\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/library/core/src/panicking.rs:74:5\n   3: &lt;ena::unify::UnificationTable&lt;ena::unify::backing_vec::InPlace&lt;rustc_middle::infer::unify_key::RegionVidKey, &amp;mut alloc::vec::Vec&lt;ena::unify::VarValue&lt;rustc_middle::infer::unify_key::RegionVidKey&gt;&gt;, &amp;mut rustc_infer::infer::undo_log::InferCtxtUndoLogs&gt;&gt;&gt;::uninlined_get_root_key\n   4: &lt;&amp;rustc_middle::ty::TyS as rustc_middle::ty::fold::TypeFoldable&gt;::super_fold_with::&lt;rustc_infer::infer::canonical::canonicalizer::Canonicalizer&gt;\n   5: &lt;rustc_middle::ty::Predicate as rustc_middle::ty::fold::TypeFoldable&gt;::super_fold_with::&lt;rustc_infer::infer::canonical::canonicalizer::Canonicalizer&gt;\n   6: &lt;rustc_infer::infer::canonical::canonicalizer::Canonicalizer&gt;::canonicalize::&lt;rustc_middle::ty::ParamEnvAnd&lt;rustc_middle::ty::Predicate&gt;&gt;\n   7: &lt;rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt&gt;::evaluate_obligation\n   8: &lt;rustc_infer::infer::InferCtxt as rustc_trait_selection::infer::InferCtxtExt&gt;::type_implements_trait\n   9: analysis::mir_utils::is_copy::{{closure}}\n             at /home/fpoli/src/prusti/prusti-dev/analysis/src/mir_utils.rs:221:13\n  10: rustc_infer::infer::InferCtxtBuilder::enter\n             at /rustc/ad442399756573dccacb314b6bf8079964bcc72a/compiler/rustc_infer/src/infer/mod.rs:617:9\n  11: analysis::mir_utils::is_copy\n             at /home/fpoli/src/prusti/prusti-dev/analysis/src/mir_utils.rs:220:9\n</code></pre></div>",
        "id": 262305910,
        "sender_full_name": "Federico Poli",
        "timestamp": 1637579768
    },
    {
        "content": "<p>Here is how I'm calling it:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">is_copy</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tcx</span>: <span class=\"nc\">ty</span>::<span class=\"n\">TyCtxt</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">ty</span>: <span class=\"nc\">ty</span>::<span class=\"n\">Ty</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">param_env</span>: <span class=\"nc\">ty</span>::<span class=\"n\">ParamEnv</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">copy_trait</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">lang_items</span><span class=\"p\">().</span><span class=\"n\">copy_trait</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">infer_ctxt</span><span class=\"p\">().</span><span class=\"n\">enter</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">infcx</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">infcx</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">.</span><span class=\"n\">type_implements_trait</span><span class=\"p\">(</span><span class=\"n\">copy_trait</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ty</span>::<span class=\"n\">List</span>::<span class=\"n\">empty</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">param_env</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">.</span><span class=\"n\">must_apply_considering_regions</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 262305955,
        "sender_full_name": "Federico Poli",
        "timestamp": 1637579795
    },
    {
        "content": "<p>The panic seems to happen whenever <code>ty</code> is a reference. I can special case that on the caller side, but it feels weird.</p>",
        "id": 262306390,
        "sender_full_name": "Federico Poli",
        "timestamp": 1637580090
    }
]