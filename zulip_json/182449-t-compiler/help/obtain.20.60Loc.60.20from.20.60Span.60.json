[
    {
        "content": "<p>If I have a <code>Span</code>, how can I obtain the <code>Loc</code> of the start of it? Trying to determine the indentation of an item for a suggestion (so it matches standard formatting).</p>",
        "id": 245628022,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626038693
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">variant</span><span class=\"p\">.</span><span class=\"n\">span</span><span class=\"p\">.</span><span class=\"n\">lo</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">indentation_width</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">source_map</span><span class=\"p\">().</span><span class=\"n\">lookup_source_file</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">).</span><span class=\"n\">lookup_file_pos</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">).</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">indentation</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\" \"</span><span class=\"p\">.</span><span class=\"n\">repeat</span><span class=\"p\">(</span><span class=\"n\">indentation_width</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Is this a complete hack or am I crazy? It <em>does</em> work, at least for standard formatting (I can think of a case where it would be quite ugly, but only if the input already is).</p>",
        "id": 245628529,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626039597
    },
    {
        "content": "<p>I would not try and match formatting in a suggestion, that's what rustfmt is for. Doing it in the compiler (as you've found) is difficult and prone to error.</p>",
        "id": 245628637,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626039742
    },
    {
        "content": "<p>So a suggestion (in this case <code>#[default] Foo</code>) could have poor formatting? It feels odd to have a machine-output suggestion not have \"proper\" formatting.</p>",
        "id": 245628655,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626039807
    },
    {
        "content": "<p>This is also half me playing around with diagnostics, so it's not a big deal either way.</p>",
        "id": 245628657,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626039827
    },
    {
        "content": "<p>That seems fine to me personally <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 245632492,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626045581
    },
    {
        "content": "<p>Alright. Up to the reviewer anyways <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 245632572,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626045713
    }
]