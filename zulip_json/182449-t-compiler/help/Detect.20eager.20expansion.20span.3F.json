[
    {
        "content": "<p>I am working on making Clippy able to scan macro expansions for inputs without depending on the exact structure of the expansion (<a href=\"https://github.com/rust-lang/rust-clippy/issues/7843\">https://github.com/rust-lang/rust-clippy/issues/7843</a>).</p>\n<p>I've nearly got it, but one weird case I am bumping into is eagerly expanded macros. They create spans that seem to be not from expansion. Is there any general way to detect these? Otherwise, I would falsely assume that <code>true</code> from <code>debug_assert! -&gt; cfg!</code> is an <em>input</em> to <code>debug_assert!</code>. <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></p>",
        "id": 263083863,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1638229743
    },
    {
        "content": "<blockquote>\n<p>They create spans that seem to be not from expansion.</p>\n</blockquote>",
        "id": 263085858,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1638231228
    },
    {
        "content": "<p>If they do, then it's a bug.<br>\nCould you give an example of such macro?</p>",
        "id": 263085910,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1638231250
    },
    {
        "content": "<p><code>cfg!</code> seems to add a macro layer to the result's span.</p>",
        "id": 263086006,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1638231352
    },
    {
        "content": "<p>I'm working with the example <code>debug_assert!(true)</code></p>",
        "id": 263086098,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1638231425
    },
    {
        "content": "<p>uh oh, I might be mistaken...does the input to that macro get repeated?</p>",
        "id": 263086228,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1638231524
    },
    {
        "content": "<p>(expanded in two places?)</p>",
        "id": 263086254,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1638231543
    },
    {
        "content": "<p>oh yeah be cause it prints the value. sorry, I think this is a big false alarm</p>",
        "id": 263086389,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1638231624
    }
]