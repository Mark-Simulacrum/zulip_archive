[
    {
        "content": "<p>On a scale from \"it doesn't matter\" to \"don't ever do this\", how bad is cloning an arbitrary expression? It's an <code>AnonConst</code> that's present in the AST, being used as part of a derive macro.</p>",
        "id": 265791365,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640170929
    },
    {
        "content": "<p>Because it's part of a derive macro, it's running at most once per field per type (pre-monomorphization).</p>",
        "id": 265791424,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640170969
    },
    {
        "content": "<p>Also, if there's a way to run const eval and just use the resulting value, that would be ideal I'd imagine. Not sure how that works in the compiler, though; I'm operating on the AST level.</p>",
        "id": 265791963,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640171358
    },
    {
        "content": "<p>AST is too early for that I think; rustdoc uses <code>tcx.const_eval_poly(def_id)</code> for this</p>",
        "id": 265792467,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640171714
    },
    {
        "content": "<p>(well, rustdoc's handling of consts is a flaming trash heap, but <code>const_eval_poly</code> is one of the many things it does lmao)</p>",
        "id": 265792503,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640171751
    },
    {
        "content": "<p>That's what I thought (I know miri needs mir...it's literally in the name). So the question of cloning is the main one.</p>",
        "id": 265792577,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640171782
    },
    {
        "content": "<p>AnonConst is actually Copy so this should be extremely cheap, just 4 pointers memcopied<br>\n<a href=\"https://doc.rust-lang.org/stable/nightly-rustc/src/rustc_hir/hir.rs.html#1368\">https://doc.rust-lang.org/stable/nightly-rustc/src/rustc_hir/hir.rs.html#1368</a></p>",
        "id": 265792709,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640171904
    },
    {
        "content": "<p>That's hir's version. ast's isn't: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.AnonConst.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/ast/struct.AnonConst.html</a></p>",
        "id": 265792846,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640172023
    },
    {
        "content": "<p>The actual type is <code>Option&lt;rustc_ast::AnonConst&gt;</code> if it at all matters.</p>",
        "id": 265792897,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640172074
    },
    {
        "content": "<p>I imagine anon consts are generally pretty small <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> but really you can shove any sized expression in there so</p>",
        "id": 265793104,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1640172237
    },
    {
        "content": "<p>Yeah, <em>in theory</em> it's super cheap. But someone does something stupid, which let's face it is inevitable</p>",
        "id": 265793193,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640172280
    }
]