[
    {
        "content": "<p>Hello everyone,<br>\nI am testing register definitions for the s390x, and was wondering what the comments above all of the functions defined in <code>src/test/assembly/asm/*-types.rs</code> are for. This is an example of a comment/function:</p>\n<div class=\"codehilite\"><pre><span></span><code>// mips32: #APP\n// mips32: lw $3, %got(extern_func)\n// mips32: #NO_APP\n#[cfg(mips32)]\n#[no_mangle]\npub unsafe fn sym_fn_32() {\n    asm!(&quot;lw $v1, {}&quot;, sym extern_func);\n}\n</code></pre></div>\n<p>I am unsure of how the comment above the function relates to it, and am wondering if anyone would mind providing more detail about these functions and how they are used. I am assuming that the comment does something special, because of the way it looks.</p>",
        "id": 248729429,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1628361291
    },
    {
        "content": "<p>I think llvm's filecheck is used for these tests: <a href=\"https://github.com/rust-lang/rust/blob/57d8747cca741de84918800dca13da0c821e33e0/src/tools/compiletest/src/runtest.rs#L2382\">https://github.com/rust-lang/rust/blob/57d8747cca741de84918800dca13da0c821e33e0/src/tools/compiletest/src/runtest.rs#L2382</a></p>",
        "id": 248729705,
        "sender_full_name": "bjorn3",
        "timestamp": 1628361649
    },
    {
        "content": "<p>I am getting this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: unknown token in expression\n  --&gt; /home/linux1/rust/src/test/assembly/asm/s390x-types.rs:57:14\n   |\n57 |         asm!(concat!($mov,&quot; {}, {}&quot;), out($class) y, in($class) x);\n   |              ^\n   |\nnote: instantiated into assembly here\n  --&gt; &lt;inline asm&gt;:1:6\n   |\n1  |     mvc %r2, %r13\n             ^\n</code></pre></div>\n<p>I've so far added <code>rustc_target/src/asm/s390x.rs</code>, but none of the register definitions I have included there have a prefixed <code>%</code>. The code I have added in <code>rustc_codegen_llvm</code> just adds LLVM's constraint codes for s390x and other basic stuff. I am not sure where else the source of the error could be in the compiler other than these two files, but seeing as there are no prefixed <code>%</code> in either of them, I don't think that is the case.</p>",
        "id": 249638375,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1629143454
    },
    {
        "content": "<p>The <code>%</code> comes from LLVM. I believe that <code>mvc</code> is the wrong instruction: it is only for for memory-to-memory moves. You probably want the <code>lgr</code> instruction for register-to-register moves.</p>",
        "id": 249708367,
        "sender_full_name": "Amanieu",
        "timestamp": 1629201909
    }
]