[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/59ce76548484806ac4970c57c0bb6ad9e53b80f6/compiler/rustc_serialize/src/opaque.rs#L659\">https://github.com/rust-lang/rust/blob/59ce76548484806ac4970c57c0bb6ad9e53b80f6/compiler/rustc_serialize/src/opaque.rs#L659</a></p>\n<p>The utf8 validation there is needed because the serialized data isn't type-tagged and therefore it has to guard against <code>read_str</code> being called at the wrong time, right?</p>",
        "id": 251138777,
        "sender_full_name": "The 8472",
        "timestamp": 1630250144
    },
    {
        "content": "<p>Yeah, the serializer and deserializer may get mismatched or the data could get corrupted.</p>",
        "id": 251141344,
        "sender_full_name": "bjorn3",
        "timestamp": 1630252944
    },
    {
        "content": "<p>I've done a perf run in <a href=\"https://github.com/rust-lang/rust/issues/91407\">#91407</a> to get a baseline how much we'd save by not doing the validation.<br>\n<a href=\"https://perf.rust-lang.org/compare.html?start=207c80f105282245d93024c95ac408c622f70114&amp;end=ae738380b413f7adb5c0254e2c1dc1430fb4e8dd\">https://perf.rust-lang.org/compare.html?start=207c80f105282245d93024c95ac408c622f70114&amp;end=ae738380b413f7adb5c0254e2c1dc1430fb4e8dd</a></p>\n<p>Up to 3% on rustdoc, up to 2.3% on check builds. I think it's worth it.</p>\n<p>Maybe we can retain a little bit of sanity checking by adding a sentinel byte at the end of the string when serializing. Then the encoded length + seeking to the sentinel byte would at least detect cases where we're trying to decode something that wasn't encoded by the matching routine. It doesn't protect against data corruption but neither do most of the other read functions.</p>",
        "id": 263303086,
        "sender_full_name": "The 8472",
        "timestamp": 1638370826
    }
]