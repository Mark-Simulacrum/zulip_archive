[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"153718\">Alexander Huszagh (He/Him)</span> <a href=\"#narrow/stream/122651-general/topic/Search.20PRs.20for.20a.20file/near/244872964\">said</a>:</p>\n<blockquote>\n<p>Does anyone know why cargo-miri would be using outdated versions of rust-core, from a custom build?</p>\n<p>Detailed install instructions, FYI: from a  custom version of rust, from the directory, I first build the package, and then copy the binaries over, and then link the toolchain.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>./x.py build\ncp -a build/x86_64-unknown-linux-gnu/stage2/* ~/cargo_dev/stage2\ncp -a build/x86_64-unknown-linux-gnu/stage2-tools-bin/* ~/cargo_dev/stage2/bin/\nrustup toolchain link stage2 ~/cargo_dev/stage2\n</code></pre></div>\n<p>I think clone stock Miri, build and install it, and then test with a trivial package, using my new rust version:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>rustup default stage2\nrustc --version <span class=\"c1\"># rustc 1.55.0-dev</span>\ncargo --version <span class=\"c1\"># cargo 1.55.0-dev</span>\ngit clone https://github.com/rust-lang/miri\n<span class=\"nb\">cd</span> miri\n./miri build\n./miri install\n</code></pre></div>\n<p>Finally, I think create a dummy package, build, and test to see if it works:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[cfg(test)]</span><span class=\"w\"></span>\n<span class=\"k\">mod</span> <span class=\"nn\">tests</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"cp\">#[test]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">it_works</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"k\">u8</span><span class=\"p\">.</span><span class=\"n\">wrapping_sub</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"k\">u8</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">255</span><span class=\"k\">u8</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"cp\">#[test]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">many_digits</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">..</span><span class=\"mi\">375</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"sc\">'3'</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">// there's an older version that has an arithmetic overflow, which is expected, but didn't use wrapping_sub.</span>\n<span class=\"w\">       </span><span class=\"c1\">// this therefore fails on the old library/core, but not on the new one.</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">parse</span>::<span class=\"o\">&lt;</span><span class=\"kt\">f64</span><span class=\"o\">&gt;</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"cp\">#[test]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"cp\">#[should_panic]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"cp\">#[allow(arithmetic_overflow)]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">fails</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"k\">u8</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"k\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">255</span><span class=\"k\">u8</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Running <code>cargo miri test</code> fails no matter how many times I try to rebuild rust, miri. I've also tried doing clean uninstalls of the toolchain by rebuilding the toolchain, deleting <code>~/cargo_dev/stage2</code>, deleting the <code>miri</code> directory, re-cloning, and rebuilding.</p>\n</blockquote>",
        "id": 244873108,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625426091
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"153718\">Alexander Huszagh (He/Him)</span> <a href=\"#narrow/stream/122651-general/topic/Search.20PRs.20for.20a.20file/near/244872997\">said</a>:</p>\n<blockquote>\n<p>Attempting to change the actual code in libcore to say, not have a wrapping sub (and using an i8, rather than u8, with then a cast back, as a hack), doesn't do anything... I'm very much lost.</p>\n</blockquote>",
        "id": 244873214,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625426255
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"153718\">Alexander Huszagh (He/Him)</span> <a href=\"#narrow/stream/122651-general/topic/Search.20PRs.20for.20a.20file/near/244873049\">said</a>:</p>\n<blockquote>\n<p>Attempting to do <code>./x.py install</code> fails, due to errors in <code>docs</code> (cannot find a library, since it uses nightly and not beta), and then removing that I have failures in <code>rustfmt</code>.</p>\n</blockquote>",
        "id": 244873232,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625426277
    },
    {
        "content": "<p>Likewise, even if I disable everything besides <code>cargo</code>, libunwind fails. I've tried setting it system, which always fails.</p>",
        "id": 244873445,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625426571
    },
    {
        "content": "<p>Have you tried <code>./x.py build src/tools/miri --stage 1</code>? That builds it from the git submodule pointing to the original repo</p>",
        "id": 244873702,
        "sender_full_name": "The 8472",
        "timestamp": 1625426996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> I have done a full build, and then tried to copy the binaries over, and miri seems to be properly built and installed (stage 1 or stage 2).</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ ~/.rustup/toolchains/cdev/bin/miri --version\nrustc <span class=\"m\">1</span>.55.0-dev\n</code></pre></div>\n<p>However, cargo-miri is not installed in that location (is that an issue)?</p>",
        "id": 244873780,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625427115
    },
    {
        "content": "<p>The build log also shows miri being built.</p>",
        "id": 244873827,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625427158
    },
    {
        "content": "<p><code>./x.py build src/tools/miri/cargo-miri --stage 1</code> builds that. It's a separate wrapper executable.</p>",
        "id": 244874269,
        "sender_full_name": "The 8472",
        "timestamp": 1625427868
    },
    {
        "content": "<p>Ah perfect, that seems to be working.</p>",
        "id": 244874287,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625427910
    },
    {
        "content": "<p>Relatively new to internal rust tooling (IE, building rust from scratch, etc.), so this is extremely helpful, thank you.</p>",
        "id": 244874352,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625427977
    },
    {
        "content": "<p>note that miri isn't guaranteed to build for all commits on nightly, it'll be fixed and updated in a delayed fashion. you'll have to check <a href=\"https://rust-lang-nursery.github.io/rust-toolstate/\">https://rust-lang-nursery.github.io/rust-toolstate/</a></p>",
        "id": 244874468,
        "sender_full_name": "The 8472",
        "timestamp": 1625428202
    },
    {
        "content": "<p>Ok, it's not working: it installs fine, but it doesn't seem to use the work and still gives the overflow error. It's weird, everything else works fine.</p>",
        "id": 244874614,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625428389
    },
    {
        "content": "<p>It builds, it just doesn't work. I'm basing off of rust-lang/rust commit 868c702d0c9.</p>",
        "id": 244874642,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625428416
    },
    {
        "content": "<p>By \"doesn't work\" you mean it's not running with the changes you made to std? I don't know what's causing that. Maybe some environment vars not being set correctly by rustup or something? Idk.</p>",
        "id": 244874858,
        "sender_full_name": "The 8472",
        "timestamp": 1625428706
    },
    {
        "content": "<p>Yeah, sorry, that's what I mean. Using the above <code>lib.rs</code> in a standalone crate, I get the following output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ <span class=\"nv\">RUSTFLAGS</span><span class=\"o\">=</span><span class=\"s2\">\"-C overflow-checks=n\"</span> cargo miri <span class=\"nb\">test</span>\nrunning <span class=\"m\">3</span> tests\n<span class=\"nb\">test</span> tests::fails - should panic ... ok\n<span class=\"nb\">test</span> tests::it_works ... ok\n<span class=\"nb\">test</span> tests::many_digits ... FAILED\n\nfailures:\n\n---- tests::many_digits stdout ----\nthread <span class=\"s1\">'main'</span> panicked at <span class=\"s1\">'attempt to subtract with overflow'</span>, /home/ahuszagh/git/rust/library/core/src/num/dec2flt/parse.rs:40:25\n\n$ cargo miri <span class=\"nb\">test</span>\nrunning <span class=\"m\">3</span> tests\n<span class=\"nb\">test</span> tests::fails - should panic ... FAILED\n<span class=\"nb\">test</span> tests::it_works ... ok\n<span class=\"nb\">test</span> tests::many_digits ... FAILED\n\nfailures:\n\n---- tests::fails stdout ----\nnote: <span class=\"nb\">test</span> did not panic as expected\n---- tests::many_digits stdout ----\nthread <span class=\"s1\">'main'</span> panicked at <span class=\"s1\">'attempt to subtract with overflow'</span>, /home/ahuszagh/git/rust/library/core/src/num/dec2flt/parse.rs:40:25\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace\n\n\nfailures:\n    tests::fails\n    tests::many_digits\n</code></pre></div>",
        "id": 244874981,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625428920
    },
    {
        "content": "<p>Maybe, let me check...</p>",
        "id": 244875022,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625428928
    },
    {
        "content": "<p>Ah I think I found it. For some reason, <code>~/.cache/miri/HOST</code> isn't getting overwritten.</p>",
        "id": 244875612,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625429864
    },
    {
        "content": "<p>Just doing <code>rm -rf ~/.cache/miri/HOST</code> works, and then it just \"works\".</p>",
        "id": 244875619,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625429879
    },
    {
        "content": "<p>Thanks for all the help <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 244875664,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1625429908
    }
]