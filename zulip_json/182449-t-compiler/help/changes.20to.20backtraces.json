[
    {
        "content": "<p>Have there been changes to backtraces recently? I think I've got my <code>config.toml</code> right and I've rebuilt everything once or twice but my stack traces (of a ICE I've caused in libcore locally) don't have any of the compiler in them?</p>",
        "id": 184194530,
        "sender_full_name": "davidtwco",
        "timestamp": 1577232580
    },
    {
        "content": "<p>(you can find my <code>config.toml</code> <a href=\"https://github.com/davidtwco/veritas/blob/master/shells/rust.nix#L13-L524\" target=\"_blank\" title=\"https://github.com/davidtwco/veritas/blob/master/shells/rust.nix#L13-L524\">here</a>)</p>",
        "id": 184195621,
        "sender_full_name": "davidtwco",
        "timestamp": 1577235098
    },
    {
        "content": "<p>Nuking the build directory entirely hasn't helped, still only getting this backtrace:</p>\n<div class=\"codehilite\"><pre><span></span>error: internal compiler error: src/librustc/traits/codegen/mod.rs:58: Encountered error `Unimplemented` selecting `Binder(&lt;T as num::dec2flt::rawfp::RawFloat&gt;)` during codegen\n\nthread &#39;rustc&#39; panicked at &#39;Box&lt;Any&gt;&#39;, src/librustc_errors/lib.rs:895:9\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /home/david/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /home/david/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print_fmt\n             at src/libstd/sys_common/backtrace.rs:77\n   3: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n             at src/libstd/sys_common/backtrace.rs:59\n   4: core::fmt::write\n             at src/libcore/fmt/mod.rs:1057\n   5: std::io::Write::write_fmt\n             at src/libstd/io/mod.rs:1426\n   6: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:62\n   7: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:49\n   8: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:195\n   9: std::panicking::default_hook\n             at src/libstd/panicking.rs:215\nerror: could not compile `core`.\n</pre></div>\n\n\n<p>(contents of the error aren't relevant, just the emptiness of the backtrace, this is during building the stage 1 std artifacts)</p>",
        "id": 184197478,
        "sender_full_name": "davidtwco",
        "timestamp": 1577239071
    },
    {
        "content": "<p>I've never used the <code>config.toml</code> backtrace option, what happens if you also specifiy <code>RUST_BACKTRACE=1</code> or <code>RUST_BACKTRACE=full</code>?</p>",
        "id": 184197593,
        "sender_full_name": "oli",
        "timestamp": 1577239294
    },
    {
        "content": "<p>also: maybe there's a double panic happening?</p>",
        "id": 184197638,
        "sender_full_name": "oli",
        "timestamp": 1577239335
    },
    {
        "content": "<p>I would also try w/o the RUST_BACKTRACE env and paste that output</p>",
        "id": 184197640,
        "sender_full_name": "simulacrum",
        "timestamp": 1577239378
    },
    {
        "content": "<p>(sometimes the panic backtracing will hide the second backtrace I think)</p>",
        "id": 184197646,
        "sender_full_name": "simulacrum",
        "timestamp": 1577239391
    },
    {
        "content": "<p>I was using <code>RUST_BACKTRACE=1</code>, will try without tomorrow (it’s 2am here), thanks.</p>",
        "id": 184197936,
        "sender_full_name": "davidtwco",
        "timestamp": 1577239977
    },
    {
        "content": "<p>(it sounds like a bug though -- we haven't actually changed anything here recently though to my knowledge)</p>",
        "id": 184197944,
        "sender_full_name": "simulacrum",
        "timestamp": 1577240019
    },
    {
        "content": "<p>Omitting <code>RUST_BACKTRACE=1</code> shows no backtraces. I've recently switched to fish, I wonder if it could be something related to that? Perhaps the <code>cargo</code> invocation is getting the variable but when it runs <code>rustc</code> that isn't?</p>",
        "id": 184211290,
        "sender_full_name": "davidtwco",
        "timestamp": 1577268047
    },
    {
        "content": "<p>No luck with <code>RUST_BACKTRACE=full</code> or commenting the <code>backtrace</code> option in <code>config.toml</code>.</p>",
        "id": 184212271,
        "sender_full_name": "davidtwco",
        "timestamp": 1577269702
    },
    {
        "content": "<p>(or with changing how I'm setting the environment variable, though I can re-produce in bash, so ruling that out)</p>",
        "id": 184212273,
        "sender_full_name": "davidtwco",
        "timestamp": 1577269714
    },
    {
        "content": "<p><span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 184214506,
        "sender_full_name": "oli",
        "timestamp": 1577274099
    },
    {
        "content": "<p>if you remove the <code>backtrace</code> option you are still getting backtraces but truncated?</p>",
        "id": 184214507,
        "sender_full_name": "oli",
        "timestamp": 1577274121
    },
    {
        "content": "<p>at this point I can only recommend running with <code>--verbose</code>, getting the raw invocation, and running that in gdb</p>",
        "id": 184214554,
        "sender_full_name": "oli",
        "timestamp": 1577274150
    },
    {
        "content": "<p>although with <code>--verbose</code> you only get the raw <code>cargo</code> invocation, so you'll need to run that with <code>--verbose</code> so you get the raw <code>rustc</code> invocation</p>",
        "id": 184214556,
        "sender_full_name": "oli",
        "timestamp": 1577274172
    },
    {
        "content": "<p>Yeah, only the truncated backtrace.</p>",
        "id": 184215154,
        "sender_full_name": "davidtwco",
        "timestamp": 1577275201
    },
    {
        "content": "<p>In the past when I’ve tried to run the rustc invocation for libcore, it has depended on environment variables from cargo and so that hasn’t worked.</p>",
        "id": 184215217,
        "sender_full_name": "davidtwco",
        "timestamp": 1577275268
    },
    {
        "content": "<p>That might have changed though, I’ll try.</p>",
        "id": 184215220,
        "sender_full_name": "davidtwco",
        "timestamp": 1577275278
    },
    {
        "content": "<p>Yeah, running the <code>rustc</code> invocation that is printed asks for <code>RUSTC_STAGE</code>, <code>RUSTC_SYSROOT</code>, etc.</p>",
        "id": 184218517,
        "sender_full_name": "davidtwco",
        "timestamp": 1577281756
    },
    {
        "content": "<p>(and the backtrace from that doesn't include the compiler)</p>",
        "id": 184218521,
        "sender_full_name": "davidtwco",
        "timestamp": 1577281793
    },
    {
        "content": "<p>So, running the <code>rustc</code> from <code>./build/x86_64-unknown-linux-gnu/stage1</code> (which I'm pretty sure is the compiler I just built, and not the beta compiler - or the wrapper from bootstrap) with the same flags seems to compile correctly? Not sure why it isn't reproducing the error.</p>",
        "id": 184219456,
        "sender_full_name": "davidtwco",
        "timestamp": 1577283607
    },
    {
        "content": "<p>Switched build directory, built an older version of my branch (before my rustfmt rebase) and it had a compiler backtrace, updated and rebuilt, no compiler backtrace. I've not changed anything that would break backtraces between those revisions. I'm able to reproduce the lack of backtrace on master, going to bisect.</p>",
        "id": 184221811,
        "sender_full_name": "davidtwco",
        "timestamp": 1577288140
    },
    {
        "content": "<p>Starting from <a href=\"https://github.com/rust-lang/rust/commit/4007d4ef26eab44bdabc2b7574d032152264d3ad\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/commit/4007d4ef26eab44bdabc2b7574d032152264d3ad\">this commit</a> which was what my branch was based on pre-rebase.</p>",
        "id": 184221927,
        "sender_full_name": "davidtwco",
        "timestamp": 1577288393
    },
    {
        "content": "<p>Results from the bisect - <a href=\"http://sprunge.us/ACXOa3\" target=\"_blank\" title=\"http://sprunge.us/ACXOa3\">http://sprunge.us/ACXOa3</a></p>",
        "id": 184227135,
        "sender_full_name": "davidtwco",
        "timestamp": 1577298961
    },
    {
        "content": "<p>Looks like a change in LLVM</p>",
        "id": 184227174,
        "sender_full_name": "davidtwco",
        "timestamp": 1577298986
    },
    {
        "content": "<p>Not really sure how to work around that.</p>",
        "id": 184227176,
        "sender_full_name": "davidtwco",
        "timestamp": 1577298994
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-lang/rust/issues/67615\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/67615\">#67615</a> with what I've found</p>",
        "id": 184227853,
        "sender_full_name": "davidtwco",
        "timestamp": 1577300469
    },
    {
        "content": "<p>For those following along at home, turns out this was because I had <code>debug = true</code>, any <code>debuginfo-level &gt; 1</code> will cause this.</p>",
        "id": 184334192,
        "sender_full_name": "davidtwco",
        "timestamp": 1577468847
    },
    {
        "content": "<p>Frustratingly it changed the ICE that I had been getting, which means I hadn't actually made any progress. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 184334223,
        "sender_full_name": "davidtwco",
        "timestamp": 1577468882
    },
    {
        "content": "<p>(except it hasn't now that I'm back on my original working directory, <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>)</p>",
        "id": 184334685,
        "sender_full_name": "davidtwco",
        "timestamp": 1577469464
    }
]