[
    {
        "content": "<p>I'm currently getting a warning:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>warning: some trace filter directives would enable traces that are disabled statically\n | `Checker::visit_terminator=trace` would enable the TRACE level for the `Checker::visit_terminator` target\n = note: the static max level is `info`\n = help: to enable DEBUG logging, remove the `max_level_info` feature\n</code></pre></div>\n<p>Where is the feature that I need to remove?</p>",
        "id": 273023643,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1645656992
    },
    {
        "content": "<p>Do you have <code>debug-logging=true</code> in <code>config.toml</code>?</p>",
        "id": 273024737,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645657598
    },
    {
        "content": "<p>Yes</p>",
        "id": 273123369,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1645724327
    },
    {
        "content": "<p>I might suggest double-checking that whatever is displaying that is running the appropriate <code>rustc</code>.  And try running something like <code>RUSTC_LOG=Checker::visit_terminator=trace  ./build/x86_64-unknown-linux-gnu/stage1/bin/rustc</code> to verify whether or not that rustc is indeed not compiled correctly.</p>\n<p>Worst case, you could <code>x.py clean</code>.  However, I don't believe that should be necessary since changing the config value will change the features used.</p>",
        "id": 273167223,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645747097
    },
    {
        "content": "<p>The command I'm using is <code>RUSTC_LOG=\"Checker::visit_terminator=trace\" x t -i --bless src/test/ui/rfc-2632-const-trait-impl/staged-api.rs</code>. The behavior is the same after running <code>x clean</code>. <code>RUSTC_LOG=\"Checker::visit_terminator=trace\" ./build/x86_64-unknown-linux-gnu/stage1/bin/rustc</code> emits the help message as expected.</p>",
        "id": 273281901,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1645821495
    },
    {
        "content": "<p>I'm not too familiar with the <code>x</code> wrapper, but assuming it is just running x.py, then <code>RUSTC_LOG</code> is going to be passed to the bootstrap compiler which won't have logging enabled.  So you'll probably end up with that message displayed while things are building.  </p>\n<p>If you just want to see the logging while compiling that test, I would just add <code>// rustc-env:RUSTC_LOG=…</code> to the test or run it manually, such as <code>RUSTC_LOG=… rustc +stage1 src/test/ui/rfc-2632-const-trait-impl/staged-api.rs</code>.</p>",
        "id": 273288613,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645825466
    },
    {
        "content": "<p><code>x</code> is basically <code>x.py</code> but without having to figure out the cwd. I'm pretty sure all it does is resolve to <code>x.py</code>.</p>",
        "id": 273323694,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1645859385
    },
    {
        "content": "<p>For some reason, even the header comment doesn't do anything. I can't (or rather, it wouldn't be trivial to) compile it manually as it's split between two files. Honestly pretty confused as to why none of this is working.</p>",
        "id": 273323739,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1645859428
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> with regards to the const stability PR and debugging ^^</p>",
        "id": 273528424,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1646070908
    }
]