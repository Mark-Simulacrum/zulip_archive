[
    {
        "content": "<p>By looking at <a href=\"https://github.com/rust-lang/rust/blob/78a46efff06558674b51c10d8d81758285746ab5/compiler/rustc_resolve/src/imports.rs#L1383\">the code of it</a>, I see it doesn't include identifiers defined inside the module; it inlcude only re-exports!</p>\n<p>Also, can you please explain the meaning of <code>!ident.span.from_expansion()</code> here? I though it excludes identifiers defined in macros (and was surprised by that),but tests shows that it doesn't! I think I understand macro hygiene but I don't really see how this is related.</p>",
        "id": 253689130,
        "sender_full_name": "Ali MJ Al-Nasrawy",
        "timestamp": 1631853908
    },
    {
        "content": "<p><code>module_exports</code> includes only reexports for the local crate, but for foreign crates it includes all items (<code>cstore.item_children_untracked()</code>), it's kind of mess.</p>",
        "id": 253713158,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1631870187
    },
    {
        "content": "<p><code>!ident.span.from_expansion()</code> is supposed to mean that the import comes from a macro 2.0 (the <code>ident</code> in question was processed by <code>normalize_to_macros_2_0()</code> previously), but it's not really a correct thing to do, I guess it was a hack to avoid item conflicts before hygiene data serialization was implemented.</p>",
        "id": 253713713,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1631870550
    }
]