[
    {
        "content": "<p>I noticed here that this is a pretty hard error: <a href=\"https://github.com/rust-lang/rust/blob/b4bdc07ff5a70175dbcdff7331c557245ddb012f/compiler/rustc_ast_lowering/src/expr.rs#L596\">https://github.com/rust-lang/rust/blob/b4bdc07ff5a70175dbcdff7331c557245ddb012f/compiler/rustc_ast_lowering/src/expr.rs#L596</a> that is emitted, but it doesn't seem to stop the flow of execution. How does this end up stopping the compiler after the lower_to_hir query? or does it not stop the compiler?</p>",
        "id": 209537292,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599670231
    },
    {
        "content": "<p>It doesn't stop compilation. Only <code>fatal</code> errors stop compilation.</p>",
        "id": 209537509,
        "sender_full_name": "bjorn3",
        "timestamp": 1599670331
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> interesting, so we believe in this case that an \"acceptable\" hir will be formed, we continue all analysis, and then eventually fail before codegen?</p>",
        "id": 209538002,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599670570
    },
    {
        "content": "<p>Ah this is what I was looking for: <a href=\"https://github.com/rust-lang/rust/blob/b4bdc07ff5a70175dbcdff7331c557245ddb012f/compiler/rustc_interface/src/queries.rs#L276-L277\">https://github.com/rust-lang/rust/blob/b4bdc07ff5a70175dbcdff7331c557245ddb012f/compiler/rustc_interface/src/queries.rs#L276-L277</a></p>",
        "id": 209538141,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599670656
    },
    {
        "content": "<p>Yes. There are many places where we don't immediately stop compilation, but continue with a best effort guess and then only just before codegen stop.</p>",
        "id": 209538143,
        "sender_full_name": "bjorn3",
        "timestamp": 1599670658
    },
    {
        "content": "<p>Thanks for the help!</p>",
        "id": 209538248,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1599670702
    },
    {
        "content": "<p>Somewhat related I think: what does a fatal error actually cause? In <a href=\"https://github.com/rust-lang/rust/issues/77487\">#77487</a> I have removed some and I experience additional errors being emitted, but I expected the fatal errors not being hit, since the compiler finished. What semantics does FatalError.raise have?</p>",
        "id": 212319828,
        "sender_full_name": "Dániel Buga",
        "timestamp": 1601913503
    },
    {
        "content": "<p>Fatal errors stop compilation by unwinding with a special panic payload, which is then caught somewhere in the driver</p>",
        "id": 212320928,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1601913946
    },
    {
        "content": "<p>So when I see the \"compilation aborted due to N previous errors\" message, that may or may not be the result of a fatal error call? Or is it somehow differentiated in the output?</p>",
        "id": 212326688,
        "sender_full_name": "Dániel Buga",
        "timestamp": 1601916731
    },
    {
        "content": "<p>Not sure, I <em>think</em> we always use <code>FatalError</code> to abort compilation</p>",
        "id": 212327041,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1601916908
    },
    {
        "content": "<p>Often via <code>abort_if_errors</code></p>",
        "id": 212327058,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1601916917
    }
]