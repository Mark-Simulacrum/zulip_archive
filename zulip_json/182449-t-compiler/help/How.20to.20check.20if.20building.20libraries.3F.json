[
    {
        "content": "<p>In the compiler code is there a way to check if I'm currently compiling libraries for stage1 build (maybe an env variable set by the build system)? It's fine if it's hacky, this is for debugging.</p>\n<p>I'm making a change in compilation (method probing) and it causes failures when compiling libraries. If I could compile libraries as before and have a working compiler it would make debugging much easier as I could try my changes on tiny programs instead of complicated std modules.</p>",
        "id": 252748519,
        "sender_full_name": "osa1",
        "timestamp": 1631261343
    },
    {
        "content": "<p>you could keep stage 0 std</p>",
        "id": 252749962,
        "sender_full_name": "The 8472",
        "timestamp": 1631262143
    },
    {
        "content": "<p>Could you explain please? No idea what you mean by \"keep\" or how to compile programs with stage 0 std</p>",
        "id": 252751720,
        "sender_full_name": "osa1",
        "timestamp": 1631263034
    },
    {
        "content": "<p>it's a bootstrap option. <code>./x.py build &lt;foo&gt; --keep-stage-std 0</code></p>",
        "id": 252753116,
        "sender_full_name": "The 8472",
        "timestamp": 1631263775
    },
    {
        "content": "<p>In answer to your direct question: when bootstrapping, RUSTC_STAGE is set: <a href=\"https://github.com/rust-lang/rust/blob/497ee321af3b8496eaccd7af7b437f18bab81abf/src/bootstrap/bin/rustc.rs#L47\">https://github.com/rust-lang/rust/blob/497ee321af3b8496eaccd7af7b437f18bab81abf/src/bootstrap/bin/rustc.rs#L47</a><br>\nBut you won't have it available unless you're building rustc or libstd itself.</p>",
        "id": 252761229,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631268066
    },
    {
        "content": "<p>That worked, thanks!</p>",
        "id": 253531773,
        "sender_full_name": "osa1",
        "timestamp": 1631770684
    }
]