[
    {
        "content": "<p>For Rust MIR, do we have any recommended way or example to clone a function (Body) similar to what we can do in LLVM IR?</p>",
        "id": 275844937,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1647628455
    },
    {
        "content": "<p><code>mir::Body</code> implements <code>Clone</code>. What do you want to do?</p>",
        "id": 275846232,
        "sender_full_name": "bjorn3",
        "timestamp": 1647629112
    },
    {
        "content": "<p>Perhaps they mean cause a second version to be codegened?</p>",
        "id": 275854168,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1647633101
    },
    {
        "content": "<p>Exactly. I want clone a function and modify it, just like second version or extend version of function</p>",
        "id": 275871337,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1647643369
    },
    {
        "content": "<p>for example, when encounter a call site, let a = hello(b), any way to clone a function hello(the modify some statements) , and update call site to be let a = hello_ext(b)</p>",
        "id": 275871478,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1647643460
    },
    {
        "content": "<p>assume I want to keep original function implementation also</p>",
        "id": 275871511,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1647643482
    },
    {
        "content": "<p>The HIR is immutable so you can't really define new functions at that level.</p>",
        "id": 275893354,
        "sender_full_name": "bjorn3",
        "timestamp": 1647671341
    },
    {
        "content": "<p>We could add \"child functions\" to mir bodies that are callable without a def id. Similar to how promoteds used to work</p>",
        "id": 275961523,
        "sender_full_name": "oli",
        "timestamp": 1647774508
    },
    {
        "content": "<p>Or allow mir opts to generate additional mir bodies and return a vec from optimized_mir</p>",
        "id": 275961537,
        "sender_full_name": "oli",
        "timestamp": 1647774539
    },
    {
        "content": "<p>Can you tell us more about your use case?</p>",
        "id": 275961552,
        "sender_full_name": "oli",
        "timestamp": 1647774578
    },
    {
        "content": "<p>God I wish it were possible to create new <code>DefId</code>s during compilation</p>",
        "id": 275976220,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1647794900
    },
    {
        "content": "<p>I.... have ideas for that, but need to flesh out an MCP for experimentation first</p>",
        "id": 275978943,
        "sender_full_name": "oli",
        "timestamp": 1647798389
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/88186\">#88186</a> will introduce this possibility.</p>",
        "id": 275984760,
        "sender_full_name": "cjgillot",
        "timestamp": 1647806205
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> what is MCP?</p>",
        "id": 275992287,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1647817212
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/clone.20a.20function.20on.20MIR/near/275961523\">said</a>:</p>\n<blockquote>\n<p>We could add \"child functions\" to mir bodies that are callable without a def id. Similar to how promoteds used to work</p>\n</blockquote>\n<p>Yeah, this way can achieve a similar effect, however, more flexibility in MIR (convenient APIs may? ) could allow more instrumentation and analysis. So we can do a lot of things in MIR instead of in LLVM.</p>",
        "id": 275992442,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1647817387
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"382085\">Shihao Xia</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/clone.20a.20function.20on.20MIR/near/275992287\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> what is MCP?</p>\n</blockquote>\n<p>a Major Change Proposal, a lightweight way to inform people about big changes and get some feedback and discussion going on whether the change should be done, more info here: <a href=\"https://forge.rust-lang.org/compiler/mcp.html\">https://forge.rust-lang.org/compiler/mcp.html</a></p>",
        "id": 276014509,
        "sender_full_name": "lqd",
        "timestamp": 1647848283
    },
    {
        "content": "<p>Hmm... can you elaborate on his you think that a different scheme will enable more analyses?</p>",
        "id": 276023869,
        "sender_full_name": "oli",
        "timestamp": 1647854849
    }
]