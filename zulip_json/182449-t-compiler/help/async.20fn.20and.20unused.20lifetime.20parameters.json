[
    {
        "content": "<p>From <a href=\"https://github.com/rust-lang/rust-clippy/issues/5983\">this Clippy issue</a></p>\n<p>With this function definition</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>the return type desugars into</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Future</span><span class=\"o\">&lt;</span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"na\">&#39;a</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>Is it expected that the return type ends up tied to the lifetime even if it's not used in any input parameter? </p>\n<p>In the linked issue, the user would expect the <a href=\"https://rust-lang.github.io/rust-clippy/master/#extra_unused_lifetimes\">extra_unused_lifetimes</a> to be triggered, which seems reasonable, but it does not because the lifetime is used in the return type. I'm trying to see if this should be worked around in Clippy or could be considered a bug in the desugaring. Maybe I'm missing something?</p>\n<p>Thanks!</p>",
        "id": 208483293,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1598791166
    }
]