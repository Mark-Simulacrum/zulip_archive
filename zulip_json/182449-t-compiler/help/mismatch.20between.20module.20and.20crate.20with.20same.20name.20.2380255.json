[
    {
        "content": "<p>Can this issue be solved with the data currently available? We wouldn't need to add a parameter to the fn, would we?</p>",
        "id": 220833254,
        "sender_full_name": "pierwill",
        "timestamp": 1608762804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316352\">@pierwill</span> <code>report_maybe_different</code> does not have enough info to give a useful error</p>",
        "id": 220833266,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608762827
    },
    {
        "content": "<p>I would look how this is done for version mismatches</p>",
        "id": 220833272,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608762840
    },
    {
        "content": "<p>Cool. Thought so :)</p>",
        "id": 220833273,
        "sender_full_name": "pierwill",
        "timestamp": 1608762841
    },
    {
        "content": "<blockquote>\n<p>version mismatch</p>\n</blockquote>\n<p>Either of these two? <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/?search=version_mismatch\">https://doc.rust-lang.org/nightly/nightly-rustc/?search=version_mismatch</a></p>\n<p>Are we maybe intersted in a <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/diagnostic_builder/struct.DiagnosticBuilder.html\">DiagnosticBuilder</a>?</p>",
        "id": 220833496,
        "sender_full_name": "pierwill",
        "timestamp": 1608763089
    },
    {
        "content": "<p>yes, <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_trait_selection/traits/error_reporting/mod.rs.html#1396-1423\">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_trait_selection/traits/error_reporting/mod.rs.html#1396-1423</a> looks right</p>",
        "id": 220833561,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763183
    },
    {
        "content": "<blockquote>\n<p>Are we maybe intersted in a DiagnosticBuilder?</p>\n</blockquote>\n<p>that's how you actually emit the error, the tricky bit is knowing when to give the help</p>",
        "id": 220833593,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763202
    },
    {
        "content": "<p>Ah</p>",
        "id": 220833634,
        "sender_full_name": "pierwill",
        "timestamp": 1608763232
    },
    {
        "content": "<p>which it looks like that's not actually part of that function - I'd see where it's called</p>",
        "id": 220833638,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763234
    },
    {
        "content": "<p>Hoo boy this Medium, not Easy huh</p>",
        "id": 220833654,
        "sender_full_name": "pierwill",
        "timestamp": 1608763259
    },
    {
        "content": "<p>lol</p>",
        "id": 220833659,
        "sender_full_name": "pierwill",
        "timestamp": 1608763265
    },
    {
        "content": "<p>oh wait no sorry, that is part of the function - the <code>for</code> loop is looping over things with the same name</p>",
        "id": 220833670,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763278
    },
    {
        "content": "<p>heh, you should see what E-hard looks like <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 220833679,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763292
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/73566\">https://github.com/rust-lang/rust/pull/73566</a></p>",
        "id": 220833683,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763302
    },
    {
        "content": "<p><span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 220833744,
        "sender_full_name": "pierwill",
        "timestamp": 1608763343
    },
    {
        "content": "<p>so instead of  <code>for trait_with_same_path in traits_with_same_path</code>, we want to construct something  like <code>for type_err_with_same_X in type_errs_with_same_X</code>?</p>",
        "id": 220834059,
        "sender_full_name": "pierwill",
        "timestamp": 1608763710
    },
    {
        "content": "<p>Still not sure what X is...</p>",
        "id": 220834074,
        "sender_full_name": "pierwill",
        "timestamp": 1608763727
    },
    {
        "content": "<p>X is <code>def_path</code></p>",
        "id": 220834091,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763751
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyCtxt.html#method.def_path_str\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyCtxt.html#method.def_path_str</a></p>",
        "id": 220834106,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763770
    },
    {
        "content": "<p>Sweet thanx</p>",
        "id": 220834107,
        "sender_full_name": "pierwill",
        "timestamp": 1608763771
    },
    {
        "content": "<p>but this function is the wrong place to do it, because this error is only emitted when a type doesn't implement a trait</p>",
        "id": 220834129,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763797
    },
    {
        "content": "<p>it has the right approach, you need to use the same approach in TypeError</p>",
        "id": 220834195,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608763838
    },
    {
        "content": "<p>yep</p>",
        "id": 220834208,
        "sender_full_name": "pierwill",
        "timestamp": 1608763851
    },
    {
        "content": "<blockquote>\n<p>@pierwill Note that this issue will likely be tricky to fix!</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> oh now you say something <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 220834320,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608764004
    },
    {
        "content": "<p>Seeing now that I won't be able to do it on my own. Might remove assignment.</p>\n<p>Do folks link to Zulip discussions in issues for others to take things up?</p>",
        "id": 220834520,
        "sender_full_name": "pierwill",
        "timestamp": 1608764205
    },
    {
        "content": "<p>My questions might be useful to others.</p>",
        "id": 220834529,
        "sender_full_name": "pierwill",
        "timestamp": 1608764216
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"316352\">pierwill</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/mismatch.20between.20module.20and.20crate.20with.20same.20name.20.2380255/near/220834520\">said</a>:</p>\n<blockquote>\n<p>Seeing now that I won't be able to do it on my own. Might remove assignment.</p>\n<p>Do folks link to Zulip discussions in issues for others to take things up?</p>\n</blockquote>\n<p>I wouldn't say that, I think you're on the right track</p>",
        "id": 220834556,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608764256
    },
    {
        "content": "<p>but yeah linking to zulip sounds fine, I do that a lot</p>",
        "id": 220834567,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608764274
    },
    {
        "content": "<p>Yeah perhaps I should give fixing a compiler issue more than like 30 minutes lol</p>",
        "id": 220834629,
        "sender_full_name": "pierwill",
        "timestamp": 1608764309
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"316352\">pierwill</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/mismatch.20between.20module.20and.20crate.20with.20same.20name.20.2380255/near/220834629\">said</a>:</p>\n<blockquote>\n<p>Yeah perhaps I should give fixing a compiler issue more than like 30 minutes lol</p>\n</blockquote>\n<p>if it makes you feel better, I've been working on <a href=\"https://github.com/rust-lang/rust/pull/79540\">https://github.com/rust-lang/rust/pull/79540</a> for like 3 weeks lol</p>",
        "id": 220834746,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608764426
    },
    {
        "content": "<p>Notes:</p>\n<div class=\"codehilite\"><pre><span></span><code>impl&lt;&#39;tcx&gt; fmt::Display for TypeError&lt;&#39;tcx&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;&#39;_&gt;) -&gt; fmt::Result {\n        use self::TypeError::*;\n        fn report_maybe_different(\n            db: &amp;mut DiagnosticBuilder&lt;&#39;_&gt;,\n            f: &amp;mut fmt::Formatter&lt;&#39;_&gt;,\n            expected: &amp;str,\n            found: &amp;str,\n        ) -&gt; fmt::Result {\n\n            // USE THIS:\n            // https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyCtxt.html#method.def_path_str\n\n            self.tcx.def_path_str()\n\n            // CONSTRUCT SOMETHING LIKE THIS\n            //     let get_trait_impl = |trait_def_id| {\n            //         self.tcx.find_map_relevant_impl(trait_def_id, trait_ref.skip_binder().self_ty(), Some)\n            //     };\n            //     let required_trait_path = self.tcx.def_path_str(trait_ref.def_id());\n            //     let all_traits = self.tcx.all_traits(LOCAL_CRATE);\n            //     let traits_with_same_path: std::collections::BTreeSet&lt;_&gt; = all_traits\n            //         .iter()\n            //         .filter(|trait_def_id| **trait_def_id != trait_ref.def_id())\n            //         .filter(|trait_def_id| self.tcx.def_path_str(**trait_def_id) == required_trait_path)\n            //         .collect();\n\n\n            // THEN DO A FOR LOOP\n            //     for type_error_with_same_path in type_errors_with_same_path {\n            //\n            //\n            //         if let Some(impl_def_id) = get_trait_impl(*trait_with_same_path) {\n            //             let impl_span = self.tcx.def_span(impl_def_id);\n            //             err.span_help(impl_span, &quot;trait impl with same name found&quot;);\n            //             let trait_crate = self.tcx.crate_name(trait_with_same_path.krate);\n            //\n            //\n            //\n            //             let crate_msg = format!(\n            //                 &quot;crate and module {} have same name&quot;,\n            //                 collided_name\n            //             );\n            //             err.note(&amp;crate_msg);\n            //         }\n            //     }\n            // }\n\n            // A naive approach to making sure that we&#39;re not reporting silly errors such as:\n            // (expected closure, found closure).\n            if expected == found {\n                write!(f, &quot;expected {}, found a different {}&quot;, expected, found)\n            } else {\n                write!(f, &quot;expected {}, found {}&quot;, expected, found)\n            }\n        }\n</code></pre></div>",
        "id": 220834894,
        "sender_full_name": "pierwill",
        "timestamp": 1608764556
    },
    {
        "content": "<p>So the end goal is something like </p>\n<div class=\"codehilite\"><pre><span></span><code>    let crate_msg = format!(\n            //                 &quot;crate and module {} have same name&quot;,\n            //                 collided_name\n            //             );\n</code></pre></div>\n<p>yes?</p>",
        "id": 220834977,
        "sender_full_name": "pierwill",
        "timestamp": 1608764646
    },
    {
        "content": "<p>Obviously all the trait-specific stuff in that code will be replaced...</p>",
        "id": 220834996,
        "sender_full_name": "pierwill",
        "timestamp": 1608764684
    },
    {
        "content": "<p>Yeah, that sounds about right</p>",
        "id": 220835029,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608764720
    },
    {
        "content": "<p>And preferably say which is which, that's the main thing I wanted</p>",
        "id": 220835034,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608764736
    },
    {
        "content": "<p>Huh. I need <code>DefId</code>s to get <code>DefPath</code>s... Where will I get the needed <code>DefId</code>s? From a method on <code>tcx</code>? Maybe using the <code>expected</code> and <code>found</code> parameters?</p>",
        "id": 220838669,
        "sender_full_name": "pierwill",
        "timestamp": 1608768333
    },
    {
        "content": "<p>Can I do <code>self.tcx</code> methods in the body of <code>report_maybe_different</code>? Will that play a part in all this?</p>",
        "id": 220838887,
        "sender_full_name": "pierwill",
        "timestamp": 1608768537
    },
    {
        "content": "<p>Okay this is very fun brain-hurting stuff. But I might have to stick to docs for now! <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span> <span aria-label=\"beginner\" class=\"emoji emoji-1f530\" role=\"img\" title=\"beginner\">:beginner:</span></p>",
        "id": 220840455,
        "sender_full_name": "pierwill",
        "timestamp": 1608770866
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/mismatch.20between.20module.20and.20crate.20with.20same.20name.20.2380255/near/220834320\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>@pierwill Note that this issue will likely be tricky to fix!</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> oh now you say something <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n</blockquote>\n<p>I didn't even know you guys were talking about it on Zulip! I just saw that pierwill claimed it and thought it might be worth mentioning that it's hard :)</p>",
        "id": 220843445,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608775480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"316352\">pierwill</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/mismatch.20between.20module.20and.20crate.20with.20same.20name.20.2380255/near/220840455\">said</a>:</p>\n<blockquote>\n<p>Okay this is very fun brain-hurting stuff. But I might have to stick to docs for now! <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span> <span aria-label=\"beginner\" class=\"emoji emoji-1f530\" role=\"img\" title=\"beginner\">:beginner:</span></p>\n</blockquote>\n<p>Working on compiler docs is very helpful, so thanks :)</p>",
        "id": 220843463,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608775526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/mismatch.20between.20module.20and.20crate.20with.20same.20name.20.2380255/near/220834746\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"316352\">pierwill</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/mismatch.20between.20module.20and.20crate.20with.20same.20name.20.2380255/near/220834629\">said</a>:</p>\n<blockquote>\n<p>Yeah perhaps I should give fixing a compiler issue more than like 30 minutes lol</p>\n</blockquote>\n<p>if it makes you feel better, I've been working on <a href=\"https://github.com/rust-lang/rust/pull/79540\">https://github.com/rust-lang/rust/pull/79540</a> for like 3 weeks lol</p>\n</blockquote>\n<p>I said a week ago <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span> and it will probably be just as long before it's merged at this rate, I found three more bugs just tonight</p>",
        "id": 221113654,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609220785
    }
]