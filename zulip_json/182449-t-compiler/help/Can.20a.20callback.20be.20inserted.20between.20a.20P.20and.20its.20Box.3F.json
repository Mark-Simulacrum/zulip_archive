[
    {
        "content": "<p>As part of a PR fixing <a href=\"https://github.com/rust-lang/rust/issues/75577\">#75577</a>, I've had to <a href=\"https://github.com/LegionMammal978/rust/commit/a8ec82765a9fca2339f04e23d84bd6378b6f22ba\">add a manual <code>Drop</code> impl</a> to <code>rustc_ast::ptr::P&lt;T&gt;</code>, so that it drops its contained <code>Box&lt;T&gt;</code> within an <code>ensure_sufficient_stack</code> callback. However, I'm not sure if <a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/245\">this issue regarding <code>ManuallyDrop&lt;Box&lt;_&gt;&gt;</code></a> conflicts with my changes. In particular, I added two <code>unsafe</code> blocks in which the <code>ptr</code> field is invalidated, viz., the <code>into_box</code> and <code>Drop::drop</code> functions. Are either of these usages of <code>ManuallyDrop&lt;Box&lt;T&gt;&gt;</code> unsound?</p>",
        "id": 271473337,
        "sender_full_name": "LegionMammal978",
        "timestamp": 1644517575
    },
    {
        "content": "<p>(If they are problematic, then I could always store <code>ptr</code> as an <code>Option&lt;Box&lt;T&gt;&gt;</code> and use <code>Option::take</code> in <code>into_box</code> and <code>drop</code>, but that wouldn't make nearly as much sense as <code>ManuallyDrop</code> semantically.)</p>",
        "id": 271474281,
        "sender_full_name": "LegionMammal978",
        "timestamp": 1644517962
    }
]