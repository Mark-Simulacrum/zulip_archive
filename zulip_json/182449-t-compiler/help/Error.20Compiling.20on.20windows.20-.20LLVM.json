[
    {
        "content": "<p>I'm trying to build the Rust compiler and I'm getting the following error during the compilation of LLVM:</p>\n<p>ninja: error: 'E:/Development/rust/src/llvm-project/llvm/lib/Demangle/Demangle.cpp', needed by 'lib/Demangle/CMakeFiles/LLVMDemangle.dir/Demangle.cpp.obj', missing and no known rule to make it</p>\n<p>Environment Details:<br>\nCompiler: VS 2019<br>\nNinja: 1.10.2<br>\ncmake: 3.18.5</p>\n<p>The file Demangle.cpp is there. I also managed to build the rust code itself (x.py check is working)<br>\nAny idea what went wrong?</p>",
        "id": 236973917,
        "sender_full_name": "Ori Ben-Shir",
        "timestamp": 1619881073
    },
    {
        "content": "<p>Not sure, but you should be able to avoid building llvm by setting <code>download-ci-llvm = ttue</code></p>",
        "id": 236975141,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619881494
    },
    {
        "content": "<p>Thanks, I was hoping to build LLVM as well. I know Rust is using a different branch of LLVM, but I tried to build it from their master to find out where the problem is, and it is failing on LLVM master as well. So I'll try to find out if there is any information regarding it in the LLVM community.</p>",
        "id": 236978273,
        "sender_full_name": "Ori Ben-Shir",
        "timestamp": 1619883868
    },
    {
        "content": "<p>A coworker hit a similar issue last week and we were able to work around it by disabling ninja (<code>ninja = false</code>) in config.toml.</p>",
        "id": 236978610,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1619884166
    },
    {
        "content": "<p>Small update for future reference: It seems like Ninja is having trouble working with non-default drive. When trying to build from the C:/ drive, it went through this error. If I find a workaround to work with a non-default drive, I'll update it here</p>",
        "id": 237216129,
        "sender_full_name": "Ori Ben-Shir",
        "timestamp": 1620070459
    },
    {
        "content": "<p>So turns out Windows has a feature to make directories Case Sensitive in order to use it in WSL. Ninja on the other hand search all its dependencies as lower case, therefore files weren't found. I'm not sure what activated this flag on the directories I've cloned. I suspect it is related to the fact I used git bash to clone the repository.</p>",
        "id": 237364980,
        "sender_full_name": "Ori Ben-Shir",
        "timestamp": 1620148856
    },
    {
        "content": "<p>I believe that option is per-filesystem rather than per-directory.</p>",
        "id": 237365650,
        "sender_full_name": "nagisa",
        "timestamp": 1620149125
    },
    {
        "content": "<p>Ah, it is per-directory.</p>",
        "id": 237365801,
        "sender_full_name": "nagisa",
        "timestamp": 1620149177
    }
]