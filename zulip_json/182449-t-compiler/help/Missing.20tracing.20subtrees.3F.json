[
    {
        "content": "<p>So, has anyone run into issues with subtrees in logging being missing when debugging?<br>\nFor example, I have this</p>\n<div class=\"codehilite\"><pre><span></span><code>    #[tracing::instrument(level = &quot;debug&quot;, skip(self))]\n    pub fn ast_region_to_region(\n        &amp;self,\n        lifetime: &amp;hir::Lifetime,\n        def: Option&lt;&amp;ty::GenericParamDef&gt;,\n    ) -&gt; ty::Region&lt;&#39;tcx&gt; {\n        dbg!(&amp;lifetime);\n        ...\n</code></pre></div>\n<p>With <code>RUSTC_LOG=debug</code>, I see<br>\n<code>[compiler/rustc_typeck/src/astconv/mod.rs:207] &amp;lifetime = lifetime(HirId { owner: DefId(0:3 ~ min[317d]::C::{opaque#0}), local_id: 3 }: 'static)</code><br>\nwithout something like<br>\n<code>rustc_typeck::astconv::ast_region_to_region lifetime=lifetime(HirId { owner: DefId(0:4 ~ min[317d]::f3), local_id: 6 }: 'static), def=None</code><br>\nbefore.</p>\n<p>Note, I see that <code>ast_region_to_region</code> subtree <em>elsewhere</em> in the log. There are other functions in the call stack that aren't displayed either.</p>\n<p>I also don't see it with <code>RUSTC_LOG=trace</code>. I'm pretty sure I've seen this before, but I don't know if it's something I'm doing.</p>",
        "id": 228519680,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614735470
    },
    {
        "content": "<p>Hmm, <code>s/dbg!/debug!/</code>?</p>",
        "id": 228597187,
        "sender_full_name": "tm",
        "timestamp": 1614780624
    },
    {
        "content": "<p>That's what I'm saying: <code>debug</code> calls, <code>instrument</code>, etc. don't show up. <code>dbg</code> does though</p>",
        "id": 228618583,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614787829
    },
    {
        "content": "<p>are you sure you have debug logging enabled?</p>",
        "id": 228618687,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614787867
    },
    {
        "content": "<p><code>debug-logging = true</code> in config.toml</p>",
        "id": 228618719,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614787875
    },
    {
        "content": "<p>it should warn you if you have a log level that's ignored</p>",
        "id": 228618771,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614787889
    },
    {
        "content": "<p>Yep</p>",
        "id": 228618812,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614787903
    },
    {
        "content": "<p>Again, I do see the functions I'm interested in <em>elsewhere</em> in the log</p>",
        "id": 228618870,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614787919
    },
    {
        "content": "<p>One possibility is cached output from cargo, which is quite confusing when it happens, but otherwise no idea what could be going on.</p>",
        "id": 228763366,
        "sender_full_name": "tm",
        "timestamp": 1614861067
    },
    {
        "content": "<p>Oh that reminds me I have a fix for cached output, it only works for RUSTC_LOG though</p>",
        "id": 228776708,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614866545
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/issues/8374#issuecomment-789810202\">https://github.com/rust-lang/cargo/issues/8374#issuecomment-789810202</a></p>",
        "id": 228776852,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614866599
    },
    {
        "content": "<p>The current solution is way over engineered to work for arbitrary env vars, but it doesn't work for them anyway, so there's not much point</p>",
        "id": 228777074,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614866686
    },
    {
        "content": "<p>This happens when running the rustc binary by itself</p>",
        "id": 228780205,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614867821
    },
    {
        "content": "<p>But when I have seen it before (or at least assuming I did), I've also seen it when running through cargo</p>",
        "id": 228780317,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614867850
    },
    {
        "content": "<p>But I guess that this doesn't matter if there's something in the build artifacts</p>",
        "id": 228780671,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614867978
    },
    {
        "content": "<p>I wonder if some file has the tracing output statically turned off, then when other files are recompiled incrementally, there are still files with the tracing output still statically turned off</p>",
        "id": 228781006,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614868102
    },
    {
        "content": "<p>hmm I would expect setting <code>debug-logging = true</code> to recompile everything</p>",
        "id": 228781058,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614868129
    },
    {
        "content": "<p>but maybe it doesn't?</p>",
        "id": 228781070,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614868133
    },
    {
        "content": "<p>You mean, you would expect setting that to turn off incremental compilation?</p>",
        "id": 228781150,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614868159
    },
    {
        "content": "<p>no, I would expect it to behave the same as <code>touch compiler/rustc_data_structures/lib.rs</code> or something, where bootstrap recompiles all the crates</p>",
        "id": 228781484,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614868271
    },
    {
        "content": "<p>hmm</p>",
        "id": 228781968,
        "sender_full_name": "Jack Huey",
        "timestamp": 1614868438
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Missing.20tracing.20subtrees.3F/near/228776708\">said</a>:</p>\n<blockquote>\n<p>Oh that reminds me I have a fix for cached output, it only works for RUSTC_LOG though</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/82763\">https://github.com/rust-lang/rust/pull/82763</a></p>",
        "id": 228787501,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614870346
    }
]