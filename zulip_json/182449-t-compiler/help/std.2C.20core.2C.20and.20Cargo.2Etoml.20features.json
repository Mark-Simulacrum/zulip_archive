[
    {
        "content": "<p>So... reasonably simple, I think, but may be actually impossible? Is it possible for std to use core with a feature in the fairly naive Cargo-y way, so that when code is included in std from core, that the code is conditionally compiled with that feature?</p>\n<p>I am expecting an answer of \"no\", but I just tried it and got some very unusual errors so I want to understand why.</p>",
        "id": 264381626,
        "sender_full_name": "Jubilee",
        "timestamp": 1639092010
    },
    {
        "content": "<p>like, <code>core</code> has a feature and <code>std</code> enables it, while no-<code>std</code> targets leave it off?</p>",
        "id": 264382665,
        "sender_full_name": "cuviper",
        "timestamp": 1639092757
    },
    {
        "content": "<p>yes.</p>",
        "id": 264382741,
        "sender_full_name": "Jubilee",
        "timestamp": 1639092832
    },
    {
        "content": "<p>I suppose that might get weird with core tests/benches that are somewhat cyclical</p>",
        "id": 264382991,
        "sender_full_name": "cuviper",
        "timestamp": 1639092967
    },
    {
        "content": "<p>but that can probably be managed in rustbuild</p>",
        "id": 264383019,
        "sender_full_name": "cuviper",
        "timestamp": 1639092980
    },
    {
        "content": "<p>I don't know how that'd work for precompiled versions of std.</p>",
        "id": 264386696,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639095443
    },
    {
        "content": "<p>(and core)</p>",
        "id": 264386700,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639095445
    },
    {
        "content": "<p>I think it's possible to do when precompiled â€” why wouldn't it be? The user wouldn't have to know that the two libraries are the same underlying thing.</p>",
        "id": 264388714,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639096978
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> who has looked at merging std/alloc/core in the past to my knowledge</p>",
        "id": 264388730,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639097000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/std.2C.20core.2C.20and.20Cargo.2Etoml.20features/near/264388730\">said</a>:</p>\n<blockquote>\n<p>cc <span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> who has looked at merging std/alloc/core in the past to my knowledge</p>\n</blockquote>\n<p>as part of error in core, but I ended up resolving the issues there with lang items</p>",
        "id": 264388801,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1639097057
    },
    {
        "content": "<p>so I've not been looking into that any further since</p>",
        "id": 264388806,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1639097064
    },
    {
        "content": "<p>Okay,<br>\nso no one knows for sure.</p>",
        "id": 264389130,
        "sender_full_name": "Jubilee",
        "timestamp": 1639097307
    },
    {
        "content": "<p>I am going to... look at the very strange errors I got and wish them well, and not figure out how to make them go away, and proceed with the assumption that I need to do my thing via an extension trait in <code>std</code>. <span aria-label=\"relaxed\" class=\"emoji emoji-263a\" role=\"img\" title=\"relaxed\">:relaxed:</span></p>",
        "id": 264389430,
        "sender_full_name": "Jubilee",
        "timestamp": 1639097559
    },
    {
        "content": "<p>Out of curiosity, what do the errors look like?</p>",
        "id": 264390641,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639098442
    },
    {
        "content": "<p>I would expect this to mostly just work</p>",
        "id": 264390654,
        "sender_full_name": "simulacrum",
        "timestamp": 1639098457
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/bootstrap/compile.rs#L293\">https://github.com/rust-lang/rust/blob/master/src/bootstrap/compile.rs#L293</a> may be useful to look at, if you're doing something really weird, I suppose</p>",
        "id": 264390765,
        "sender_full_name": "simulacrum",
        "timestamp": 1639098513
    },
    {
        "content": "<p>Happy to take a look at specific errors as well.</p>",
        "id": 264390787,
        "sender_full_name": "simulacrum",
        "timestamp": 1639098529
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/std.2C.20core.2C.20and.20Cargo.2Etoml.20features/near/264390654\">said</a>:</p>\n<blockquote>\n<p>I would expect this to mostly just work</p>\n</blockquote>\n<p>uhhh...</p>\n<div class=\"codehilite\" data-code-language=\"PowerShell\"><pre><span></span><code><span class=\"n\">thread</span> <span class=\"s1\">'rustc'</span> <span class=\"n\">panicked</span> <span class=\"n\">at</span> <span class=\"s1\">'no entry found for key'</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">\\</span><span class=\"n\">rustc_metadata</span><span class=\"p\">\\</span><span class=\"n\">src</span><span class=\"p\">\\</span><span class=\"n\">rmeta</span><span class=\"p\">\\</span><span class=\"n\">decoder</span><span class=\"p\">\\</span><span class=\"n\">cstore_impl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"n\">492</span><span class=\"p\">:</span><span class=\"n\">9</span>\n<span class=\"n\">thread</span> <span class=\"s1\">'rustc'</span> <span class=\"n\">panicked</span> <span class=\"n\">at</span> <span class=\"s1\">'no entry found for key'</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">\\</span><span class=\"n\">rustc_metadata</span><span class=\"p\">\\</span><span class=\"n\">src</span><span class=\"p\">\\</span><span class=\"n\">rmeta</span><span class=\"p\">\\</span><span class=\"n\">decoder</span><span class=\"p\">\\</span><span class=\"n\">cstore_impl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"n\">492</span><span class=\"p\">:</span><span class=\"n\">9</span>\n<span class=\"n\">stack</span> <span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"n\">stack</span> <span class=\"n\">backtrace</span><span class=\"p\">:</span>\n   <span class=\"n\">0</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a444970f</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">sys_common</span><span class=\"p\">::</span><span class=\"n\">backtrace</span><span class=\"p\">::</span><span class=\"n\">_print</span><span class=\"p\">::</span><span class=\"n\">DisplayBacktrace</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Display</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">he7b0c252d602fcdc</span>\n   <span class=\"n\">1</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a4473fba</span> <span class=\"p\">-</span> <span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">write</span><span class=\"p\">::</span><span class=\"n\">h6aa0db73705fd604</span>\n   <span class=\"n\">2</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a443b468</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">io</span><span class=\"p\">::</span><span class=\"n\">IoSliceMut</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">h8e4c6764c89f6382</span>\n   <span class=\"n\">3</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a444cc56</span> <span class=\"p\">-</span> <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">take_hook</span><span class=\"p\">::</span><span class=\"n\">h30eaa8b54ef03df3</span>\n   <span class=\"n\">4</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a444c73c</span> <span class=\"p\">-</span> <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">take_hook</span><span class=\"p\">::</span><span class=\"n\">h30eaa8b54ef03df3</span>\n   <span class=\"n\">5</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff998efaf5e</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_middle</span><span class=\"p\">[</span><span class=\"n\">4db38f5bb30aa45a</span><span class=\"p\">]::</span><span class=\"n\">mir</span><span class=\"p\">::</span><span class=\"n\">Operand</span> <span class=\"n\">as</span> <span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">move_paths</span><span class=\"p\">::</span><span class=\"n\">abs_domain</span><span class=\"p\">::</span><span class=\"n\">Lift</span><span class=\"p\">&gt;::</span><span class=\"n\">lift</span>\n   <span class=\"n\">6</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a444d569</span> <span class=\"p\">-</span> <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">rust_panic_with_hook</span><span class=\"p\">::</span><span class=\"n\">hef9b22ae6e202465</span>\n   <span class=\"n\">7</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a444d00b</span> <span class=\"p\">-</span> <span class=\"n\">rust_begin_unwind</span>\n   <span class=\"n\">8</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a444a037</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">sys_common</span><span class=\"p\">::</span><span class=\"n\">backtrace</span><span class=\"p\">::</span><span class=\"n\">_print</span><span class=\"p\">::</span><span class=\"n\">DisplayBacktrace</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Display</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">he7b0c252d602fcdc</span>\n   <span class=\"n\">9</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a444cf69</span> <span class=\"p\">-</span> <span class=\"n\">rust_begin_unwind</span>\n  <span class=\"n\">10</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a44a8440</span> <span class=\"p\">-</span> <span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">panic_fmt</span><span class=\"p\">::</span><span class=\"n\">h8a2153897acddc1e</span>\n  <span class=\"n\">11</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a4470bd0</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">panic</span><span class=\"p\">::</span><span class=\"n\">panic_info</span><span class=\"p\">::</span><span class=\"n\">PanicInfo</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Display</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">h1be40518aba961fa</span>\n  <span class=\"n\">12</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a44a833b</span> <span class=\"p\">-</span> <span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">option</span><span class=\"p\">::</span><span class=\"n\">expect_failed</span><span class=\"p\">::</span><span class=\"n\">h310324ec3680c3dc</span>\n  <span class=\"n\">13</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99cb1aee6</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_metadata</span><span class=\"p\">[</span><span class=\"n\">3f552bc9b26a2513</span><span class=\"p\">]::</span><span class=\"n\">creader</span><span class=\"p\">::</span><span class=\"n\">CStore</span> <span class=\"n\">as</span> <span class=\"n\">rustc_session</span><span class=\"p\">[</span><span class=\"n\">80b12927c96efe93</span><span class=\"p\">]::</span><span class=\"n\">cstore</span><span class=\"p\">::</span><span class=\"n\">CrateStore</span><span class=\"p\">&gt;::</span><span class=\"n\">stable_crate_id_to_crate_num</span>\n  <span class=\"n\">14</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c6ec1c0</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">on_disk_cache</span><span class=\"p\">::</span><span class=\"n\">OnDiskCache</span><span class=\"p\">&gt;::</span><span class=\"n\">load_side_effects</span>\n    <span class=\"n\">Checking</span> <span class=\"n\">rls-data</span> <span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"n\">19</span><span class=\"p\">.</span><span class=\"n\">1</span>\n  <span class=\"n\">15</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c608fdf</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_span</span><span class=\"no\">[fb335929b56265a7]</span><span class=\"p\">::</span><span class=\"n\">span_encoding</span><span class=\"p\">::</span><span class=\"n\">Span</span> <span class=\"n\">as</span> <span class=\"n\">rustc_serialize</span><span class=\"p\">[</span><span class=\"n\">9f7480aaaa4758fb</span><span class=\"p\">]::</span><span class=\"n\">serialize</span><span class=\"p\">::</span><span class=\"n\">Decodable</span><span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">on_disk_cache</span><span class=\"p\">::</span><span class=\"n\">CacheDecoder</span><span class=\"p\">&gt;&gt;::</span><span class=\"n\">decode</span>\n  <span class=\"n\">16</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c7de3ad</span> <span class=\"p\">-</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">query_callbacks</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span>\n  <span class=\"n\">17</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c81fc20</span> <span class=\"p\">-</span> <span class=\"p\">&lt;&amp;</span><span class=\"no\">[rustc_ast[313453e987c93035]</span><span class=\"p\">::</span><span class=\"n\">ast</span><span class=\"p\">::</span><span class=\"n\">InlineAsmTemplatePiece</span><span class=\"p\">]</span> <span class=\"n\">as</span> <span class=\"n\">rustc_serialize</span><span class=\"p\">[</span><span class=\"n\">9f7480aaaa4758fb</span><span class=\"p\">]::</span><span class=\"n\">serialize</span><span class=\"p\">::</span><span class=\"n\">Decodable</span><span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">on_disk_cache</span><span class=\"p\">::</span><span class=\"n\">CacheDecoder</span><span class=\"p\">&gt;&gt;::</span><span class=\"n\">decode</span>\n  <span class=\"n\">18</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c7f1766</span> <span class=\"p\">-</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">query_callbacks</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span>\n  <span class=\"n\">19</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c6e7b4c</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">on_disk_cache</span><span class=\"p\">::</span><span class=\"n\">OnDiskCache</span><span class=\"p\">&gt;::</span><span class=\"n\">load_side_effects</span>\n  <span class=\"n\">20</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c5cad24</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">21</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c5695c2</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">22</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c625012</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">queries</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span> <span class=\"n\">as</span> <span class=\"n\">rustc_query_system</span><span class=\"p\">[</span><span class=\"n\">7f2d0936c5979e74</span><span class=\"p\">]::</span><span class=\"n\">query</span><span class=\"p\">::</span><span class=\"n\">config</span><span class=\"p\">::</span><span class=\"n\">QueryDescription</span><span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">plumbing</span><span class=\"p\">::</span><span class=\"n\">QueryCtxt</span><span class=\"p\">&gt;&gt;::</span><span class=\"n\">describe</span>\n  <span class=\"n\">23</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c4d7a3f</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">24</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c586a61</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">25</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c6646f9</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">Queries</span> <span class=\"n\">as</span> <span class=\"n\">rustc_middle</span><span class=\"p\">[</span><span class=\"n\">4db38f5bb30aa45a</span><span class=\"p\">]::</span><span class=\"n\">ty</span><span class=\"p\">::</span><span class=\"n\">query</span><span class=\"p\">::</span><span class=\"n\">QueryEngine</span><span class=\"p\">&gt;::</span><span class=\"n\">try_mark_green</span>\n  <span class=\"n\">26</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99babb0b6</span> <span class=\"p\">-</span> <span class=\"n\">rustc_ty_utils</span><span class=\"no\">[ac82e78d48daf646]</span><span class=\"p\">::</span><span class=\"n\">provide</span>\n  <span class=\"n\">27</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c68edbf</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_span</span><span class=\"no\">[fb335929b56265a7]</span><span class=\"p\">::</span><span class=\"n\">def_id</span><span class=\"p\">::</span><span class=\"n\">LocalDefId</span> <span class=\"n\">as</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">profiling_support</span><span class=\"p\">::</span><span class=\"n\">SpecIntoSelfProfilingString</span><span class=\"p\">&gt;::</span><span class=\"n\">spec_to_self_profile_string</span>\n  <span class=\"n\">28</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c74a966</span> <span class=\"p\">-</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">query_callbacks</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span>\n  <span class=\"n\">29</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c6378db</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">queries</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span> <span class=\"n\">as</span> <span class=\"n\">rustc_query_system</span><span class=\"p\">[</span><span class=\"n\">7f2d0936c5979e74</span><span class=\"p\">]::</span><span class=\"n\">query</span><span class=\"p\">::</span><span class=\"n\">config</span><span class=\"p\">::</span><span class=\"n\">QueryDescription</span><span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">plumbing</span><span class=\"p\">::</span><span class=\"n\">QueryCtxt</span><span class=\"p\">&gt;&gt;::</span><span class=\"n\">describe</span>\n  <span class=\"n\">30</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c4d1b7f</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">31</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c5c642c</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">32</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99b9fa767</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">44a0375dafd03453</span><span class=\"p\">]::</span><span class=\"n\">check</span><span class=\"p\">::</span><span class=\"n\">wfcheck</span><span class=\"p\">::</span><span class=\"n\">GATSubstCollector</span> <span class=\"n\">as</span> <span class=\"n\">rustc_middle</span><span class=\"p\">[</span><span class=\"n\">4db38f5bb30aa45a</span><span class=\"p\">]::</span><span class=\"n\">ty</span><span class=\"p\">::</span><span class=\"n\">fold</span><span class=\"p\">::</span><span class=\"n\">TypeVisitor</span><span class=\"p\">&gt;::</span><span class=\"n\">visit_ty</span>\n  <span class=\"n\">33</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99ba04240</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">44a0375dafd03453</span><span class=\"p\">]::</span><span class=\"n\">check</span><span class=\"p\">::</span><span class=\"n\">upvar</span><span class=\"p\">::</span><span class=\"n\">InferBorrowKind</span> <span class=\"n\">as</span> <span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">44a0375dafd03453</span><span class=\"p\">]::</span><span class=\"n\">expr_use_visitor</span><span class=\"p\">::</span><span class=\"n\">Delegate</span><span class=\"p\">&gt;::</span><span class=\"n\">mutate</span>\n  <span class=\"n\">34</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c68e446</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_span</span><span class=\"no\">[fb335929b56265a7]</span><span class=\"p\">::</span><span class=\"n\">def_id</span><span class=\"p\">::</span><span class=\"n\">LocalDefId</span> <span class=\"n\">as</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">profiling_support</span><span class=\"p\">::</span><span class=\"n\">SpecIntoSelfProfilingString</span><span class=\"p\">&gt;::</span><span class=\"n\">spec_to_self_profile_string</span>\n  <span class=\"n\">35</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c746c51</span> <span class=\"p\">-</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">query_callbacks</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span>\n  <span class=\"n\">36</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c643b07</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">queries</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span> <span class=\"n\">as</span> <span class=\"n\">rustc_query_system</span><span class=\"p\">[</span><span class=\"n\">7f2d0936c5979e74</span><span class=\"p\">]::</span><span class=\"n\">query</span><span class=\"p\">::</span><span class=\"n\">config</span><span class=\"p\">::</span><span class=\"n\">QueryDescription</span><span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">plumbing</span><span class=\"p\">::</span><span class=\"n\">QueryCtxt</span><span class=\"p\">&gt;&gt;::</span><span class=\"n\">describe</span>\n  <span class=\"n\">37</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c4a9b34</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">38</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c5a5342</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">39</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99ba395e7</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">44a0375dafd03453</span><span class=\"p\">]::</span><span class=\"n\">variance</span><span class=\"p\">::</span><span class=\"n\">terms</span><span class=\"p\">::</span><span class=\"n\">InferredIndex</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">5e9b1f0661f006a4</span><span class=\"p\">]::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span>\n  <span class=\"n\">40</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99b98a119</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">44a0375dafd03453</span><span class=\"p\">]::</span><span class=\"n\">constrained_generic_params</span><span class=\"p\">::</span><span class=\"k\">Parameter</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">5e9b1f0661f006a4</span><span class=\"p\">]::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span>\n  <span class=\"n\">41</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99b8f4902</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">44a0375dafd03453</span><span class=\"p\">]::</span><span class=\"n\">outlives</span><span class=\"p\">::</span><span class=\"n\">explicit</span><span class=\"p\">::</span><span class=\"n\">ExplicitPredicatesMap</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">5e9b1f0661f006a4</span><span class=\"p\">]::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span>\n  <span class=\"n\">42</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99b8f14bf</span> <span class=\"p\">-</span> <span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">44a0375dafd03453</span><span class=\"p\">]::</span><span class=\"n\">check_crate</span>\n  <span class=\"n\">43</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99905e62f</span> <span class=\"p\">-</span> <span class=\"n\">rustc_interface</span><span class=\"p\">[</span><span class=\"n\">3b7069506c759068</span><span class=\"p\">]::</span><span class=\"n\">passes</span><span class=\"p\">::</span><span class=\"n\">analysis</span>\n  <span class=\"n\">44</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c69023b</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_span</span><span class=\"no\">[fb335929b56265a7]</span><span class=\"p\">::</span><span class=\"n\">def_id</span><span class=\"p\">::</span><span class=\"n\">LocalDefId</span> <span class=\"n\">as</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">profiling_support</span><span class=\"p\">::</span><span class=\"n\">SpecIntoSelfProfilingString</span><span class=\"p\">&gt;::</span><span class=\"n\">spec_to_self_profile_string</span>\n  <span class=\"n\">45</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c76257e</span> <span class=\"p\">-</span> <span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">query_callbacks</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span>\n  <span class=\"n\">46</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c6342d1</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">queries</span><span class=\"p\">::</span><span class=\"n\">diagnostic_hir_wf_check</span> <span class=\"n\">as</span> <span class=\"n\">rustc_query_system</span><span class=\"p\">[</span><span class=\"n\">7f2d0936c5979e74</span><span class=\"p\">]::</span><span class=\"n\">query</span><span class=\"p\">::</span><span class=\"n\">config</span><span class=\"p\">::</span><span class=\"n\">QueryDescription</span><span class=\"p\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"n\">8639f0a94254e3b9</span><span class=\"p\">]::</span><span class=\"n\">plumbing</span><span class=\"p\">::</span><span class=\"n\">QueryCtxt</span><span class=\"p\">&gt;&gt;::</span><span class=\"n\">describe</span>\n  <span class=\"n\">47</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c529b99</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">48</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff99c5c3792</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_mir_dataflow</span><span class=\"p\">[</span><span class=\"n\">1f04c5db66c6e383</span><span class=\"p\">]::</span><span class=\"n\">framework</span><span class=\"p\">::</span><span class=\"n\">engine</span><span class=\"p\">::</span><span class=\"n\">RustcMirAttrs</span><span class=\"p\">&gt;::</span><span class=\"n\">output_path</span>\n  <span class=\"n\">49</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff998f7ab70</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_driver</span><span class=\"no\">[a96692e377e9fbc1]</span><span class=\"p\">::</span><span class=\"n\">args</span><span class=\"p\">::</span><span class=\"n\">Error</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">5e9b1f0661f006a4</span><span class=\"p\">]::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span>\n  <span class=\"n\">50</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff998f20a4f</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_middle</span><span class=\"p\">[</span><span class=\"n\">4db38f5bb30aa45a</span><span class=\"p\">]::</span><span class=\"n\">ty</span><span class=\"p\">::</span><span class=\"n\">SymbolName</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">5e9b1f0661f006a4</span><span class=\"p\">]::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Display</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span>  <span class=\"n\">51</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff998f12435</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_ast_passes</span><span class=\"p\">[</span><span class=\"n\">8672db41ecf6779a</span><span class=\"p\">]::</span><span class=\"n\">node_count</span><span class=\"p\">::</span><span class=\"n\">NodeCounter</span> <span class=\"n\">as</span> <span class=\"n\">rustc_ast</span><span class=\"p\">[</span><span class=\"n\">313453e987c93035</span><span class=\"p\">]::</span><span class=\"n\">visit</span><span class=\"p\">::</span><span class=\"n\">Visitor</span><span class=\"p\">&gt;::</span><span class=\"n\">visit_attribute</span>\n  <span class=\"n\">52</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff998f22001</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_middle</span><span class=\"p\">[</span><span class=\"n\">4db38f5bb30aa45a</span><span class=\"p\">]::</span><span class=\"n\">ty</span><span class=\"p\">::</span><span class=\"n\">SymbolName</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">5e9b1f0661f006a4</span><span class=\"p\">]::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Display</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span>  <span class=\"n\">53</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff998f1da93</span> <span class=\"p\">-</span> <span class=\"n\">rustc_driver</span><span class=\"no\">[a96692e377e9fbc1]</span><span class=\"p\">::</span><span class=\"n\">pretty</span><span class=\"p\">::</span><span class=\"n\">print_after_hir_lowering</span>\n  <span class=\"n\">54</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff998f978d8</span> <span class=\"p\">-</span> <span class=\"p\">&lt;</span><span class=\"n\">rustc_driver</span><span class=\"no\">[a96692e377e9fbc1]</span><span class=\"p\">::</span><span class=\"n\">args</span><span class=\"p\">::</span><span class=\"n\">Error</span> <span class=\"n\">as</span> <span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">5e9b1f0661f006a4</span><span class=\"p\">]::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"p\">&gt;::</span><span class=\"n\">fmt</span>\n  <span class=\"n\">55</span><span class=\"p\">:</span>     <span class=\"n\">0x7ff9a445ac6c</span> <span class=\"p\">-</span> <span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">sys</span><span class=\"p\">::</span><span class=\"n\">windows</span><span class=\"p\">::</span><span class=\"n\">thread</span><span class=\"p\">::</span><span class=\"n\">Thread</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">::</span><span class=\"n\">hfa213d96886b5f6f</span>\n  <span class=\"n\">56</span><span class=\"p\">:</span>     <span class=\"n\">0x7ffa296c7034</span> <span class=\"p\">-</span> <span class=\"n\">BaseThreadInitThunk</span>\n  <span class=\"n\">57</span><span class=\"p\">:</span>     <span class=\"n\">0x7ffa2a4c2651</span> <span class=\"p\">-</span> <span class=\"n\">RtlUserThreadStart</span>\n\n<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">internal</span> <span class=\"n\">compiler</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">unexpected</span> <span class=\"n\">panic</span>\n</code></pre></div>",
        "id": 264401440,
        "sender_full_name": "Jubilee",
        "timestamp": 1639109808
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/std.2C.20core.2C.20and.20Cargo.2Etoml.20features/near/264388806\">said</a>:</p>\n<blockquote>\n<p>so I've not been looking into that any further since</p>\n</blockquote>\n<p>gotcha. I've been interested in doing this at some pointâ„¢ too, but there's certainly far more important issues.</p>",
        "id": 264421585,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639128709
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> has marked this topic as unresolved.</p>",
        "id": 264787966,
        "sender_full_name": "Notification Bot",
        "timestamp": 1639439557
    },
    {
        "content": "<p>Getting a \"yes!\" is nice in a way... but this actually brings up a new question:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![crate_type = </span><span class=\"s\">\"rlib\"</span><span class=\"cp\">]</span><span class=\"w\"></span>\n<span class=\"cp\">#![no_std]</span><span class=\"w\"></span>\n<span class=\"cp\">#![feature(portable_simd)]</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">simd</span>::<span class=\"n\">f32x4</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"c1\">// For SIMD float ops, the LLIR version which is used to implement the portable</span>\n<span class=\"c1\">// forms of them may become calls to math.h AKA libm. So, we can't guarantee</span>\n<span class=\"c1\">// we can compile them for #![no_std] crates.</span>\n<span class=\"c1\">// Someday we may solve this.</span>\n<span class=\"c1\">// Until then, this test at least guarantees these functions require std.</span>\n<span class=\"k\">fn</span> <span class=\"nf\">guarantee_no_std_nolibm_calls</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f32x4</span>::<span class=\"n\">from_array</span><span class=\"p\">([</span><span class=\"mf\">0.1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_xc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">ceil</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR E0599</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_xf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">floor</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR E0599</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_xr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">round</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR E0599</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_xt</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">trunc</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR E0599</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_xfma</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">mul_add</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR E0599</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_xsqrt</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">sqrt</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR E0599</span>\n<span class=\"w\">    </span><span class=\"n\">x2</span><span class=\"p\">.</span><span class=\"n\">abs</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I have <strong>this</strong> test, and now when I do some related hackery here, it compiles. :D</p>",
        "id": 264788427,
        "sender_full_name": "Jubilee",
        "timestamp": 1639439888
    },
    {
        "content": "<p>I am not sure what to make of this, tbh, as it violates several intuitions I have for how features and conditional compilation and such work in Rust.</p>",
        "id": 264793355,
        "sender_full_name": "Jubilee",
        "timestamp": 1639443724
    },
    {
        "content": "<p>Can you say more? What is violating the assumption?</p>",
        "id": 264793454,
        "sender_full_name": "simulacrum",
        "timestamp": 1639443833
    },
    {
        "content": "<p>Hm, well,<br>\nI would expect <code>#![no_std]</code> to be equivalent to not including <code>std</code>, only <code>core</code>,<br>\nand all of these functions are adjusted to use conditional compilation.<br>\nSo I created another test that parallels this one, that uses <code>std::simd</code> instead and thereby checks these functions are available in <code>std</code>.<br>\nAnd I figured I might be able to get away with <code>cfg</code> and a feature to make the functions inaccessible in <code>core</code>, while making them accessible in <code>std</code>, but it turns out that using features that way doesn't pan out.</p>",
        "id": 264793853,
        "sender_full_name": "Jubilee",
        "timestamp": 1639444140
    },
    {
        "content": "<p>I was hoping to not have to resort to lang items or traits here. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 264794002,
        "sender_full_name": "Jubilee",
        "timestamp": 1639444264
    },
    {
        "content": "<p>I'm confused -- std::simd is a re-export of core::simd, it's not a C-like include</p>",
        "id": 264794144,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444367
    },
    {
        "content": "<p>so the cfg's have already resolved at that point</p>",
        "id": 264794151,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444376
    },
    {
        "content": "<p>hm.</p>",
        "id": 264794263,
        "sender_full_name": "Jubilee",
        "timestamp": 1639444446
    },
    {
        "content": "<p>(and this is necessary, otherwise std::simd::f32x4 would be a different type from core::simd::f32x4, in general)</p>",
        "id": 264794284,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444463
    },
    {
        "content": "<p>but it's probably also worth noting that my impression is that libm calls may or may not be an issue in practice to have from libcore?</p>",
        "id": 264794366,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444552
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/50145\">https://github.com/rust-lang/rust/issues/50145</a> has some discussion on this, and I think is not the only issue</p>",
        "id": 264794380,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444562
    },
    {
        "content": "<p>Well, they block <code>f32_runtime</code>, so I guess I am concerned about what is true in that regard?</p>",
        "id": 264794443,
        "sender_full_name": "Jubilee",
        "timestamp": 1639444606
    },
    {
        "content": "<p>can you say more about \"block\"?</p>",
        "id": 264794486,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444644
    },
    {
        "content": "<p>Err, I guess I don't know why the <code>f32_runtime</code> suite of functions is in std...</p>",
        "id": 264794519,
        "sender_full_name": "Jubilee",
        "timestamp": 1639444673
    },
    {
        "content": "<p>But so I have at least confirmed that at least some of them really <strong>do</strong> legalize to external library calls if the feature level isn't high enough.</p>",
        "id": 264794602,
        "sender_full_name": "Jubilee",
        "timestamp": 1639444717
    },
    {
        "content": "<p>there's a bunch of discussion on <a href=\"https://github.com/rust-lang/rust/pull/63455\">https://github.com/rust-lang/rust/pull/63455</a></p>",
        "id": 264794656,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444782
    },
    {
        "content": "<p>in any case, I suppose the \"answer\" here is that you likely need a similar lang item hack to override regular coherence rules if you need to implement them for a type defined by libcore</p>",
        "id": 264794741,
        "sender_full_name": "simulacrum",
        "timestamp": 1639444823
    },
    {
        "content": "<p>(it seems not implausible that we should generalize that with a rustc_augment_core attribute, rather than ad-hoc defining lang items, but <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>)</p>",
        "id": 264794933,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445014
    },
    {
        "content": "<p>...If you tell me how to impl that attribute I would be <strong>happy</strong> to.</p>",
        "id": 264795014,
        "sender_full_name": "Jubilee",
        "timestamp": 1639445085
    },
    {
        "content": "<p>hm, what type are you implementing for here?</p>",
        "id": 264795184,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445251
    },
    {
        "content": "<p>i.e., what is the impl on?</p>",
        "id": 264795187,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445256
    },
    {
        "content": "<p>I want to make impls available in std for <code>core::simd::Simd&lt;{f32, f64}, N&gt;</code></p>",
        "id": 264795195,
        "sender_full_name": "Jubilee",
        "timestamp": 1639445282
    },
    {
        "content": "<p>okay -- I think the attribute is probably hard/not worth it</p>",
        "id": 264795247,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445309
    },
    {
        "content": "<p>the lang item approach likely involves adding the lang_item to the impl in std, and then adjusting <a href=\"https://github.com/rust-lang/rust/blob/06a6674a7de1ef7af00b0fcdfa0d77e6c3023a27/compiler/rustc_typeck/src/coherence/inherent_impls.rs#L382\">https://github.com/rust-lang/rust/blob/06a6674a7de1ef7af00b0fcdfa0d77e6c3023a27/compiler/rustc_typeck/src/coherence/inherent_impls.rs#L382</a></p>",
        "id": 264795274,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445348
    },
    {
        "content": "<p>Hmm okay. It just seems like this issue keeps cropping up.</p>",
        "id": 264795303,
        "sender_full_name": "Jubilee",
        "timestamp": 1639445391
    },
    {
        "content": "<p>overriding coherence between core and std? yeah</p>",
        "id": 264795351,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445407
    },
    {
        "content": "<p>I mean, implementing the attribute as I suggest is basically an expansion of the change in that file</p>",
        "id": 264795376,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445434
    },
    {
        "content": "<p>Right, that's kind of why I am inclined to think putting in a little extra for this is worth it.</p>",
        "id": 264795414,
        "sender_full_name": "Jubilee",
        "timestamp": 1639445487
    },
    {
        "content": "<p>hm, well, I mean I would start with just the two(?) lang items you'd need for this particular change</p>",
        "id": 264795461,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445523
    },
    {
        "content": "<p>I suspect it may be rather painful -- it looks like ty::Adt has never done this before</p>",
        "id": 264795505,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445546
    },
    {
        "content": "<p>which I suspect is at least partially because the compiler isn't really ready for it</p>",
        "id": 264795560,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445623
    },
    {
        "content": "<p>oof.</p>",
        "id": 264795567,
        "sender_full_name": "Jubilee",
        "timestamp": 1639445630
    },
    {
        "content": "<p>you'd need to make inherent_impls(...) for a foreign defid also return types from the local crate, which is a bit of a pain looking at it</p>",
        "id": 264795615,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445650
    },
    {
        "content": "<p>considering bailing and writing an extension trait lol</p>",
        "id": 264795616,
        "sender_full_name": "Jubilee",
        "timestamp": 1639445651
    },
    {
        "content": "<p>yeah, that seems fine to start, probably sealing it and unstable (like all these APIs)</p>",
        "id": 264795631,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445670
    },
    {
        "content": "<p>yes.</p>",
        "id": 264795636,
        "sender_full_name": "Jubilee",
        "timestamp": 1639445677
    },
    {
        "content": "<p>it can be figured out closer to stabilization.</p>",
        "id": 264795637,
        "sender_full_name": "simulacrum",
        "timestamp": 1639445678
    },
    {
        "content": "<p>fwiw, in general, if you/someone wants to invest in figuring out what the appropriate strategy for moving these to libcore (i.e., figuring out the libm/performance issue) that seems like a worthwhile project in the long run</p>",
        "id": 264796410,
        "sender_full_name": "simulacrum",
        "timestamp": 1639446476
    },
    {
        "content": "<p>(at least to document if not actually make changes)</p>",
        "id": 264796450,
        "sender_full_name": "simulacrum",
        "timestamp": 1639446485
    },
    {
        "content": "<p>Yeah actually we have something of a plan for moving these functions into libcore, but it requires probably at least a little haggling with LLVM, and it definitely requires writing a bunch more code.</p>",
        "id": 264799760,
        "sender_full_name": "Jubilee",
        "timestamp": 1639449502
    },
    {
        "content": "<p>For the SIMD versions of libm functions... what's called \"libmvec\"... they generally get less attention. They have not had some hypothetical 30 years of tuning and integration. They have only existed for like 5 years.<br>\nSo our first hypothesis is that writing Rust to beat them, performance-wise? Is actually going to be a lot easier.</p>",
        "id": 264800172,
        "sender_full_name": "Jubilee",
        "timestamp": 1639449916
    }
]