[
    {
        "content": "<p>I've modified <code>DesugaringKind::Await</code> to take an <code>HirId</code>. This means that <code>rustc_span</code> must depend on <code>rustc_hir</code> to be able to use the <code>HirId</code>. This causes an error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: cyclic package dependency: package `rustc_ast v0.0.0 (/Users/henryboisdequin/Desktop/rust/compiler/rustc_ast)` depends on itself. Cycle:\npackage `rustc_ast v0.0.0 (/Users/henryboisdequin/Desktop/rust/compiler/rustc_ast)`\n    ... which is depended on by `rustc_hir v0.0.0 (/Users/henryboisdequin/Desktop/rust/compiler/rustc_hir)`\n    ... which is depended on by `rustc_span v0.0.0 (/Users/henryboisdequin/Desktop/rust/compiler/rustc_span)`\n    ... which is depended on by `rustc_ast v0.0.0 (/Users/henryboisdequin/Desktop/rust/compiler/rustc_ast)`\n    ... which is depended on by `rustc_codegen_ssa v0.0.0 (/Users/henryboisdequin/Desktop/rust/compiler/rustc_codegen_ssa)`\n    ... which is depended on by `rustc-main v0.0.0 (/Users/henryboisdequin/Desktop/rust/compiler/rustc)`\n</code></pre></div>\n<p>How should I fix this?</p>",
        "id": 232060958,
        "sender_full_name": "Henry Boisdequin",
        "timestamp": 1616817419
    },
    {
        "content": "<p>Why did you add a HirId to DesugaringKind? I don't think this can be made to work as-is.</p>",
        "id": 232064737,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616821703
    },
    {
        "content": "<p>Adding an <code>HirId</code> to <code>DesugaringKind</code> allows rustc to emit an error message like so (if a regular function is awaited) <code>boo().await</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">help</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">await</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">async</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">keyword</span>:\n<span class=\"mi\">3</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">boo</span><span class=\"w\"> </span><span class=\"p\">(){}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This address <a href=\"https://github.com/rust-lang/compiler-team/issues/413\">MCP #413</a>.</p>",
        "id": 232064944,
        "sender_full_name": "Henry Boisdequin",
        "timestamp": 1616821973
    },
    {
        "content": "<p>What if, instead of embedding the <code>HirId</code>, you embed just the <code>Span</code>? It sounds like that's all you need for this use case.</p>",
        "id": 232852362,
        "sender_full_name": "Noah Lev",
        "timestamp": 1617330720
    }
]