[
    {
        "content": "<p>does this error look familiar?</p>\n<blockquote>\n<p>= note: /nix/store/nfs9wf6ipffr9g9ylzb4i9c1i607nxvq-binutils-2.31.1/bin/ld: /home/joshua/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_driver-bcac88c1fda1187d.so: undefined reference to `llvm::DisableABIBreakingChecks@LLVM_12'</p>\n</blockquote>",
        "id": 236838740,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619791352
    },
    {
        "content": "<p>this is when linking <code>rustdoc_tool_binary</code></p>",
        "id": 236838839,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619791393
    },
    {
        "content": "<p>(i.e. src/tools/rustdoc)</p>",
        "id": 236838853,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619791400
    },
    {
        "content": "<p>clearing stage1-tools doesn't help</p>",
        "id": 236838913,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619791428
    },
    {
        "content": "<p>I do have download-ci-llvm on in case that matters</p>",
        "id": 236839008,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619791460
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/undefined.20reference.20to.20DisableABIBreakingChecks.40LLVM_12/near/236838913\">said</a>:</p>\n<blockquote>\n<p>clearing stage1-tools doesn't help</p>\n</blockquote>\n<p>nor does clearing ci-llvm</p>",
        "id": 236839077,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619791492
    },
    {
        "content": "<p>I guess I'll try rebuilding from scratch :/</p>",
        "id": 236839093,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619791498
    },
    {
        "content": "<p>wow this broke even with a completely clean build cache :/</p>",
        "id": 236843223,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> do either of you recognize this error?</p>",
        "id": 236843272,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793124
    },
    {
        "content": "<p>nope.</p>",
        "id": 236843420,
        "sender_full_name": "nagisa",
        "timestamp": 1619793188
    },
    {
        "content": "<p>me neither</p>",
        "id": 236843915,
        "sender_full_name": "cuviper",
        "timestamp": 1619793380
    },
    {
        "content": "<p>hmm ok</p>",
        "id": 236844021,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793428
    },
    {
        "content": "<p>this is probably related to download-rustc somehow then</p>",
        "id": 236844038,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793434
    },
    {
        "content": "<p>weird that it only broke now</p>",
        "id": 236844045,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1619793438
    },
    {
        "content": "<p>IIRC LLVM has two ABIs; which gets used depends on compile time options. Somehow your configuration has caused a mismatch</p>",
        "id": 236845682,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1619794108
    },
    {
        "content": "<p>glibc's cxx11 ABI isn't backwards compatible with pre-cxx11. That's the only C++ specific incompat I know of.</p>",
        "id": 236849279,
        "sender_full_name": "nagisa",
        "timestamp": 1619795199
    },
    {
        "content": "<p>and LLVM requires c++11 or later, so that shouldn't be a concern?</p>",
        "id": 236849341,
        "sender_full_name": "nagisa",
        "timestamp": 1619795218
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 236849349,
        "sender_full_name": "nagisa",
        "timestamp": 1619795221
    },
    {
        "content": "<p>it's not just c++ specific, llvm created this difference themselves</p>",
        "id": 236850360,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1619795471
    },
    {
        "content": "<p>LLVM has this: <a href=\"https://github.com/llvm/llvm-project/blob/d480f968ad8b56d3ee4a6b6df5532d485b0ad01e/llvm/include/llvm/Support/Error.h#L685-L687\">https://github.com/llvm/llvm-project/blob/d480f968ad8b56d3ee4a6b6df5532d485b0ad01e/llvm/include/llvm/Support/Error.h#L685-L687</a></p>",
        "id": 236850373,
        "sender_full_name": "hyd-dev",
        "timestamp": 1619795475
    },
    {
        "content": "<p>seems something like we'd want to disable regardless as we don't depend on LLVM having a stable ABI</p>",
        "id": 236850887,
        "sender_full_name": "nagisa",
        "timestamp": 1619795610
    },
    {
        "content": "<p>or at least try not to.</p>",
        "id": 236850955,
        "sender_full_name": "nagisa",
        "timestamp": 1619795629
    },
    {
        "content": "<p>There are assertions that when enabled change the LLVM ABI. As far as I can see the purpose of this symbol is to check that this matches between client of the API and the implementation.</p>",
        "id": 236851758,
        "sender_full_name": "tm",
        "timestamp": 1619795809
    }
]