[
    {
        "content": "<p>Is there a way to transform a <code>hir::ItemKind::Struct</code> into a <code>hir::TyKind</code>?</p>\n<p>I'm (trying to) implementing <a href=\"https://github.com/rust-lang/rust/issues/49804\">rust#49804</a>, so I passed <code>_</code> as a name and created <code>AnonymousStruct</code> and <code>AnonymousUnion</code> types in the ast, implemented the parsing, etc.<br>\nNow  I need to convert both to a <code>hir::TyKind</code> in <code>lower_ty_direct</code>. My reviewer said that I should use <code>hir::ItemKind::Struct</code> and <code>hir::ItemKind::Union</code> to avoid creating two new types on the hir, but after obtaining the corresponding <code>ItemKind</code>s now I'm stuck on how I should use those to obtain a <code>hir::TyKind</code>. I'd be very grateful if you could give me any clues on how to proceed. </p>\n<p>Draft PR:<br>\n<a href=\"https://github.com/rust-lang/rust/pull/84571\">https://github.com/rust-lang/rust/pull/84571</a></p>",
        "id": 238074050,
        "sender_full_name": "José Julián Espina Del Ángel",
        "timestamp": 1620607898
    }
]