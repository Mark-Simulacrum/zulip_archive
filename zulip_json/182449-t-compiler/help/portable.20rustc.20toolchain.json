[
    {
        "content": "<p>I want to have a rustc toolchain that is spinned to a version, with core+alloc crate compiled for a custom target to use in different project. How can i do it? Currently <code>cargo sysroot</code> require newest nightly toolchain and the sysroot it build can't be reused elsewhere.</p>",
        "id": 276425912,
        "sender_full_name": "yoru",
        "timestamp": 1648087943
    },
    {
        "content": "<p>I don't think you can. I believe rustc internally hashes the full path of the target spec for non-builtin target specs. Moving it would result in an error that the target could not be found.</p>",
        "id": 276437877,
        "sender_full_name": "bjorn3",
        "timestamp": 1648104612
    },
    {
        "content": "<p>I managed to make it work with xbuild, but i want to know how to do it properly.</p>",
        "id": 276439353,
        "sender_full_name": "yoru",
        "timestamp": 1648106293
    },
    {
        "content": "<p>rustc does hash the full path of non build in target, but if I omit the .json part, then rustc doesn't hash it anymore.</p>",
        "id": 276439432,
        "sender_full_name": "yoru",
        "timestamp": 1648106398
    }
]