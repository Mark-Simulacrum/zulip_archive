[
    {
        "content": "<p>I am working on static analysis by adding an MirPass. My MirPass could take a long time, so I want to turn off this pass when compiling stage1 compiler. How can I do it?</p>",
        "id": 240689535,
        "sender_full_name": "alicia",
        "timestamp": 1622274051
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384150\">@alicia</span> why do you need to build stage 2 in the first place? (I assume that's what you mean, stage1 is built using the beta compiler which doesn't have your pass)</p>",
        "id": 240699134,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622290433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Sorry I mean compiling into stage1 using beta compiler. The doc says it will also build std using the stage1 compiler .Since stage1 has my pass., it turns out it stuck on my pass when compiling library/core so I wonder how can I turn it off.</p>",
        "id": 240712106,
        "sender_full_name": "alicia",
        "timestamp": 1622309327
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384150\">@alicia</span> there's no easy way to do it - if it's that slow on core, maybe consider making it faster? or if you're still working on it, consider writing a <code>#![no_core]</code> test case so you don't have to build core in the first place</p>",
        "id": 240712549,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622309927
    },
    {
        "content": "<p>Thanks! I will try to optimize my code</p>",
        "id": 240712644,
        "sender_full_name": "alicia",
        "timestamp": 1622310098
    },
    {
        "content": "<p>Potential options:  1) enable it through a command line flag (e.g., <code>-Zmir-opt-level</code> if appropriate), 2) use <code>./x.py --keep-stage-std 1</code> to avoid rebuilding the standard library.</p>",
        "id": 240713255,
        "sender_full_name": "tm",
        "timestamp": 1622310927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> I used --keep-stage and that worked! Thank you</p>",
        "id": 240718167,
        "sender_full_name": "alicia",
        "timestamp": 1622317835
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> , <code>--keep-stage</code> and <code>--keep-stage-std</code> are life-savers.</p>",
        "id": 240720029,
        "sender_full_name": "scottmcm",
        "timestamp": 1622320854
    }
]