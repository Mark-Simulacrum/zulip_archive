[
    {
        "content": "<p>Hi all,</p>\n<p>After generating the LLVM IR for rust source, what are the LLVM commands which are running to generate the final executable? Is it opt and the llc or clang?</p>\n<p>Thank you,<br>\nKavindu</p>",
        "id": 252974183,
        "sender_full_name": "KavinduZoysa",
        "timestamp": 1631440019
    },
    {
        "content": "<p>None of them. Generation of machine code happens in process. We only spawn a linker to link separate object files for most targets.</p>",
        "id": 252974265,
        "sender_full_name": "nagisa",
        "timestamp": 1631440109
    },
    {
        "content": "<p>How does llvm optimizations happen for generated LLVM IR?<br>\nActually, I want to know what are optimizations run after adding debug info to LLVM IR. Can you please help me to figure this out?</p>",
        "id": 252975141,
        "sender_full_name": "KavinduZoysa",
        "timestamp": 1631441099
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/llvm.20commands.20used.20to.20generate.20final.20executable/near/252974265\">said</a>:</p>\n<blockquote>\n<p>None of them. Generation of machine code happens in process. We only spawn a linker to link separate object files for most targets.</p>\n</blockquote>\n<p>How does llvm optimizations happen for generated LLVM IR?<br>\nActually, I want to know what are optimizations run after adding debug info to LLVM IR. Can you please help me to figure this out?</p>",
        "id": 252976080,
        "sender_full_name": "KavinduZoysa",
        "timestamp": 1631442120
    },
    {
        "content": "<p>Try -Cllvm-args=-debug=Arguments perhaps?</p>",
        "id": 252992778,
        "sender_full_name": "nagisa",
        "timestamp": 1631459285
    },
    {
        "content": "<p>sorry <code>-Cllvm-args=-debug-pass=Arguments</code></p>",
        "id": 252993501,
        "sender_full_name": "nagisa",
        "timestamp": 1631460127
    },
    {
        "content": "<p>Yes that works.<br>\n<code>rustc test.rs -C llvm-args='-debug-pass=Arguments'</code></p>\n<p>The output of this command is a list of passes. As I understood these are the opt passes run, Am I correct?</p>",
        "id": 252993842,
        "sender_full_name": "KavinduZoysa",
        "timestamp": 1631460510
    },
    {
        "content": "<p>For each flag like -g, -g -O, -O the output is different</p>",
        "id": 252993874,
        "sender_full_name": "KavinduZoysa",
        "timestamp": 1631460575
    },
    {
        "content": "<p>these are pass arguments compatible with opt and llc, yes.</p>",
        "id": 252996608,
        "sender_full_name": "nagisa",
        "timestamp": 1631463586
    },
    {
        "content": "<p>all of these passes together won't necessarily work on either opt or llc, because some of them are LLVM-IR (opt) specific and some other are backend (llc) specific.</p>",
        "id": 252996680,
        "sender_full_name": "nagisa",
        "timestamp": 1631463653
    }
]