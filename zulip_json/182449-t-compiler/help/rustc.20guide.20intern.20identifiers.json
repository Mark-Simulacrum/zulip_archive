[
    {
        "content": "<p>Hi everyone, I'm reading the rustc guide, and came across the phrase \"interns identifiers\" (from <a href=\"https://rust-lang.github.io/rustc-guide/the-parser.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/the-parser.html\">https://rust-lang.github.io/rustc-guide/the-parser.html</a> , the last sentence on that page). What does it mean for something to be interned?</p>",
        "id": 172530656,
        "sender_full_name": "Paul Faria",
        "timestamp": 1565033194
    },
    {
        "content": "<p>It means that you are not creating a heap allocation for an identifier every time, but instead have a global table where they are stored and deduplicated. You then just need to store the index into the global table whenever you have an identifier</p>",
        "id": 172531020,
        "sender_full_name": "oli",
        "timestamp": 1565033480
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 172531426,
        "sender_full_name": "Paul Faria",
        "timestamp": 1565033811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116114\">@Paul Faria</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> if this is not entirely clear in the guides may it worth opening a PR and explaining it better? :)</p>",
        "id": 172532200,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1565034472
    },
    {
        "content": "<p>I'm collecting some notes on my first read through, I'll share them here and then we could create PR's based on that?</p>",
        "id": 172532343,
        "sender_full_name": "Paul Faria",
        "timestamp": 1565034569
    },
    {
        "content": "<p>definitely</p>",
        "id": 172532351,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1565034588
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 172532353,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1565034589
    }
]