[
    {
        "content": "<p>Hi, I am iterating on this PR here. <a href=\"https://github.com/rust-lang/rust/pull/95836#discussion_r847287370\">https://github.com/rust-lang/rust/pull/95836#discussion_r847287370</a> I am wondering if anyone has an example of the <code>--runtool</code> based workflow that bjorn3 mentioned? It might be nice to get something like that going as a run-make test (or maybe a simpler form if possible).</p>",
        "id": 278618226,
        "sender_full_name": "Jubilee",
        "timestamp": 1649711923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> I think there are already some tests for this in rustdoc-ui. If not, there's a comment by <span class=\"user-mention\" data-user-id=\"210267\">@Nemo157</span> somewhere about using --runtool clippy-driver, I'll try to dig that up.</p>",
        "id": 278620902,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649713246
    },
    {
        "content": "<p>Ah never mind, j was thinking of --test-builder. I don't know anything about --runtool. (I think it's still unstable? You may want to check with the rustdoc team whether they ever plan to stabilize it ...)</p>",
        "id": 278621245,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649713465
    },
    {
        "content": "<p>I rg'd for runtool but it didn't get any hits in <code>src/test/</code></p>",
        "id": 278621255,
        "sender_full_name": "Jubilee",
        "timestamp": 1649713471
    },
    {
        "content": "<p>yeah.</p>",
        "id": 278621259,
        "sender_full_name": "Jubilee",
        "timestamp": 1649713473
    },
    {
        "content": "<p>(imo runtool is a misfeature, and the original author has long since disappeared ... but I'm no longer on the team)</p>",
        "id": 278621359,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649713545
    },
    {
        "content": "<p>How would you suggest doing wasm doctests if not with <code>--runtool</code>?</p>",
        "id": 278622456,
        "sender_full_name": "bjorn3",
        "timestamp": 1649714230
    },
    {
        "content": "<p>It is quite reasonable, IMO, to want to separate the responsibilities of the test builder and the test runner. It is questionable whether rustdoc should be responsible for running tests at all.</p>",
        "id": 278623216,
        "sender_full_name": "Jubilee",
        "timestamp": 1649714644
    },
    {
        "content": "<p>I have no dog in this fight aside from that observation.</p>",
        "id": 278623342,
        "sender_full_name": "Jubilee",
        "timestamp": 1649714733
    },
    {
        "content": "<p>Different question, if either of you can answer this one:<br>\nwhat the hell is going on with \"<code>maybe_sysroot</code>\"?</p>",
        "id": 278623667,
        "sender_full_name": "Jubilee",
        "timestamp": 1649714921
    },
    {
        "content": "<p>Can I assume that will always be <code>Some</code> if we're bothering with doctests?</p>",
        "id": 278623686,
        "sender_full_name": "Jubilee",
        "timestamp": 1649714939
    },
    {
        "content": "<p><code>maybe_sysroot</code> is the <code>--sysroot</code> argument. It is None if you don't pass <code>--sysroot</code>.</p>",
        "id": 278624446,
        "sender_full_name": "bjorn3",
        "timestamp": 1649715449
    },
    {
        "content": "<p>ah I want the sysroot from<br>\nsession...</p>",
        "id": 278625288,
        "sender_full_name": "Jubilee",
        "timestamp": 1649715981
    },
    {
        "content": "<blockquote>\n<p>How would you suggest doing wasm doctests if not with <code>--runtool</code>?</p>\n</blockquote>\n<p>Running tests for non-native platforms seems inherently cursed and I don't see why it needs to be a doctest instead of an integration test</p>",
        "id": 278625710,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649716292
    },
    {
        "content": "<p>gggguh, this function isn't from the perspective of \"inside\" the compiler but rather constructing one to run, so I can't introspect on the compiler's sysroot.</p>",
        "id": 278626476,
        "sender_full_name": "Jubilee",
        "timestamp": 1649716820
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> why do you need to know the sysroot?</p>",
        "id": 278626752,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649717052
    },
    {
        "content": "<p>Because I wanted to use <code>Target::search</code> to construct a target.</p>",
        "id": 278626796,
        "sender_full_name": "Jubilee",
        "timestamp": 1649717089
    },
    {
        "content": "<p>I could cut straight to the target json path and load it and then create the target from JSON, I guess.</p>",
        "id": 278626848,
        "sender_full_name": "Jubilee",
        "timestamp": 1649717138
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 278626948,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1649717207
    },
    {
        "content": "<p>the secret is I am actually trying to figure out what code from the compiler rustdoc should be using.</p>",
        "id": 278627499,
        "sender_full_name": "Jubilee",
        "timestamp": 1649717634
    },
    {
        "content": "<p>so that there is in fact a unified interface.</p>",
        "id": 278627554,
        "sender_full_name": "Jubilee",
        "timestamp": 1649717648
    },
    {
        "content": "<p>Mmm, so this code spawns a compiler, but <code>rustc_session::output::out_filename</code> depends on having <code>&amp;Session</code>, which is incorrect if we reference our session and then spawn another one...</p>",
        "id": 278627963,
        "sender_full_name": "Jubilee",
        "timestamp": 1649717941
    },
    {
        "content": "<p>This code should probably not be spawning a compiler like this, am I correct?</p>",
        "id": 278628184,
        "sender_full_name": "Jubilee",
        "timestamp": 1649718041
    }
]