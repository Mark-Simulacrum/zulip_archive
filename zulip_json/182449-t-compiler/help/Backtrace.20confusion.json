[
    {
        "content": "<p>I'm currently trying to debug an assertion failure. The assertion is in <code>src/librustc_mir/interpret/place.rs:881:9</code> (as shown in the panic message), but the backtrace printed does not include that function (<code>copy_op_no_validate</code>). Any ideas how this is possible? I guess I can manually print the backtrace at the time of assertion failure (using the <code>std::backtrace</code>) but I wonder why the default backtrace doesn't have the actual failing function.</p>",
        "id": 182854305,
        "sender_full_name": "osa1",
        "timestamp": 1575740408
    },
    {
        "content": "<p>You need to turn on debug-assertions in config.toml. copy config.toml.example and edit it by uncommenting and changing the value of debug-assertions</p>",
        "id": 182855355,
        "sender_full_name": "oli",
        "timestamp": 1575742122
    },
    {
        "content": "<p>(I think, read the docs on that flag)</p>",
        "id": 182855358,
        "sender_full_name": "oli",
        "timestamp": 1575742136
    },
    {
        "content": "<p>Likely it happened because inlining removed the function in question ;)</p>",
        "id": 182901596,
        "sender_full_name": "nagisa",
        "timestamp": 1575826834
    },
    {
        "content": "<p>But I see the expected backtrace if I print <code>std::backtrace::Backtrace</code> in the panic message. So the backtrace shown in <code>assert!(..., \"{}\", std::backtrace::Backtrace::capture())</code> has <code>copy_op_no_validate</code>) but the backtrace shown by the panic handler does not.</p>",
        "id": 182929688,
        "sender_full_name": "osa1",
        "timestamp": 1575875796
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119169\">@osa1</span> It's likely what @oli said above.</p>\n<p>The default backtraces are not precise by default. </p>\n<p>I remember being confused by this when I first started out. As mentioned above, take a look at <code>debug</code> and <code>debuginfo-level</code> in <code>config.toml.example</code>.</p>\n<p>To have accurate traces I think you need <code>debuginfo-level</code> to be at least 1.</p>",
        "id": 183157692,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1576071988
    }
]