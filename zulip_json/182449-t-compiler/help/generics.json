[
    {
        "content": "<p>I have a rather elementary question about the compiler. If you've got crate A, and it instantiates Vec&lt;T&gt;, and then you have crate B, and it _also_ instantiates Vec&lt;T&gt; does the compiler emit Vec&lt;T&gt; in both A and B, or is it able to avoid re-instantiating it in B and just reusing A's?</p>",
        "id": 183223973,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1576118492
    },
    {
        "content": "<p>It does it in both unless one crate is a dependency of the other</p>",
        "id": 183235434,
        "sender_full_name": "oli",
        "timestamp": 1576137335
    },
    {
        "content": "<p>Does that also mean that you get two copies of the code in the end binary?</p>",
        "id": 183243140,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1576143587
    },
    {
        "content": "<p>link time opimizations usually kill it</p>",
        "id": 183244023,
        "sender_full_name": "oli",
        "timestamp": 1576144294
    },
    {
        "content": "<p>Got it, thanks.</p>",
        "id": 183254528,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1576154379
    }
]