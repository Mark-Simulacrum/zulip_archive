[
    {
        "content": "<p>I need to access layout information (primarily size and alignment, but see also below) for the parameters to an <code>extern \"stdcall\"</code> function during metadata creation for a crate.  What's the easiest/best way to access this information?  I'll use this information in methods of the <code>Collector</code> type defined in rustc_metadata/src/native_libs.rs.</p>\n<p>I need access to this info  in order to add support for stdcall functions to the work I recently did to implement <code>#[link(kind = \"raw-dylib\")]</code>.  On 32-bit x86 (Windows only), to add a stdcall function <code>f</code> to the generated import library, I need to synthesize the decorated form of the name, which is something like <code>_f@8</code>, where the number specifies the size of the argument list, in bytes, apparently including any arguments that might be passed in registers.  I know how to get the <code>Ty</code> information for the parameters, but working out the layout from that in all cases is labor-intensive, error-prone, and redundant: we've got this information somewhere in the compiler already.  I'm particularly concerned with cases like <code>Option&lt;&amp;T&gt;</code> and by-value struct arguments; detecting when the nullable pointer optimization applies is logic I'd really prefer not to duplicate.  Is this info readily available?</p>\n<p>Thanks!</p>",
        "id": 242791742,
        "sender_full_name": "Richard Cobbe",
        "timestamp": 1623787587
    },
    {
        "content": "<p>tcx.layout_of?</p>",
        "id": 242833265,
        "sender_full_name": "bjorn3",
        "timestamp": 1623823600
    }
]