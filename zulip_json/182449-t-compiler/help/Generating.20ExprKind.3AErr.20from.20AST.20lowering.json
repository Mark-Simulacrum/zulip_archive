[
    {
        "content": "<p>In librustc_ast_lowering I turn <code>ast::ExprKind::InlineAsm</code> to <code>hir::ExprKind::Err</code> if the current target doesn't support inline asm or if an invalid register is used for an operand. Unfortunately this seems to lead to crashes later on (<a href=\"https://github.com/rust-lang/rust/issues/72570\">#72570</a>) since the expressions used in the asm operands aren't lowered to HIR and are therefore missing <code>HirId</code>s.</p>",
        "id": 198732379,
        "sender_full_name": "Amanieu",
        "timestamp": 1590480958
    },
    {
        "content": "<p>Is it valid to lower something to <code>hir:ExprKind::Err</code>? If not then I guess I have to make up some semi-valid HIR to keep the compiler happy. Until what point do I need to keep this HIR valid?</p>",
        "id": 198732541,
        "sender_full_name": "Amanieu",
        "timestamp": 1590481059
    },
    {
        "content": "<p>I've encountered the same issue, let me find the PR</p>",
        "id": 198735678,
        "sender_full_name": "marmeladema",
        "timestamp": 1590483219
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/72275\">https://github.com/rust-lang/rust/pull/72275</a></p>",
        "id": 198735770,
        "sender_full_name": "marmeladema",
        "timestamp": 1590483284
    },
    {
        "content": "<p>So i did not properly fix the lowering per say, but i ended up to the same conclusion, being that generating <code>hir:ExprKind::Err</code> nodes make the HIR invalid and it breaks/crash later on</p>",
        "id": 198735925,
        "sender_full_name": "marmeladema",
        "timestamp": 1590483397
    },
    {
        "content": "<p>I think you need to eagerly lower all expressions even if you are throwing them away later</p>",
        "id": 198738649,
        "sender_full_name": "oli",
        "timestamp": 1590485387
    },
    {
        "content": "<p>but we may be able to come up with a better scheme</p>",
        "id": 198738674,
        "sender_full_name": "oli",
        "timestamp": 1590485400
    },
    {
        "content": "<p>where are the <code>HirId</code>s to the asm operands? Maybe we need to ensure these ids are never stored anywhere?</p>",
        "id": 198738751,
        "sender_full_name": "oli",
        "timestamp": 1590485441
    },
    {
        "content": "<p>I haven't managed to get a proper backtrace from the crash yet.</p>",
        "id": 198739454,
        "sender_full_name": "Amanieu",
        "timestamp": 1590486052
    },
    {
        "content": "<p>Building rustc with debuginfo takes forever :/</p>",
        "id": 198739464,
        "sender_full_name": "Amanieu",
        "timestamp": 1590486061
    },
    {
        "content": "<p>huh?</p>",
        "id": 198739810,
        "sender_full_name": "oli",
        "timestamp": 1590486317
    },
    {
        "content": "<p>I don't remember it taking any additional time</p>",
        "id": 198739949,
        "sender_full_name": "oli",
        "timestamp": 1590486444
    },
    {
        "content": "<p>did you leave optimizations enabled?</p>",
        "id": 198739953,
        "sender_full_name": "oli",
        "timestamp": 1590486450
    },
    {
        "content": "<p>Yes, the LTO at the end is the part that takes a while.</p>",
        "id": 198740109,
        "sender_full_name": "Amanieu",
        "timestamp": 1590486592
    },
    {
        "content": "<p>I'm currently trying to eagerly lower all sub-expressions as you suggest.</p>",
        "id": 198740287,
        "sender_full_name": "Amanieu",
        "timestamp": 1590486697
    },
    {
        "content": "<p>OK that seems to have solved the issue, thanks!</p>",
        "id": 198740528,
        "sender_full_name": "Amanieu",
        "timestamp": 1590486851
    },
    {
        "content": "<p>I had some early exit logic on error which I removed. I still emit <code>hir::ExprKind::Err</code> but I now call <code>lower_expr_mut</code> on all sub-expressions.</p>",
        "id": 198740603,
        "sender_full_name": "Amanieu",
        "timestamp": 1590486903
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> if you have the time please open an issue about this (with the ICE message about the missing <code>HirId</code>, so that people can find it when they hit the same problem). Mentioning the solution and asking for something allowing us to make it simpler to eagerly bail out early.</p>",
        "id": 198741987,
        "sender_full_name": "oli",
        "timestamp": 1590487798
    }
]