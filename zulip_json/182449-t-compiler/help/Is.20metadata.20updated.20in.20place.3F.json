[
    {
        "content": "<p>Say I have a tool that wants to add a new metadata field that's serialized across crates. Is it possible to update the .rmeta/.rlib file in place? or do I have to figure out what logic <code>--emit=metadata</code> uses and replicate that?</p>",
        "id": 230728026,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616000394
    },
    {
        "content": "<p>looks like existing logic is in <a href=\"https://github.com/rust-lang/rust/blob/04ae50179a802d1d18bb780baa85f55864f56616/compiler/rustc_interface/src/passes.rs#L979-L1002\">https://github.com/rust-lang/rust/blob/04ae50179a802d1d18bb780baa85f55864f56616/compiler/rustc_interface/src/passes.rs#L979-L1002</a></p>",
        "id": 230729751,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616000940
    },
    {
        "content": "<p>ok, actually emitting metadata happens in <a href=\"https://github.com/rust-lang/rust/blob/04ae50179a802d1d18bb780baa85f55864f56616/compiler/rustc_metadata/src/rmeta/encoder.rs#L2071\">https://github.com/rust-lang/rust/blob/04ae50179a802d1d18bb780baa85f55864f56616/compiler/rustc_metadata/src/rmeta/encoder.rs#L2071</a>, and it looks like it's not customizable at all</p>",
        "id": 230730205,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001119
    },
    {
        "content": "<p>that is unfortunate</p>",
        "id": 230730251,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001124
    },
    {
        "content": "<p>The rmeta files are written by rustc_metadata::rmeta::encode_metadata_impl. This is a serialisation of the metadata information with leb128 encoding.</p>",
        "id": 230730262,
        "sender_full_name": "cjgillot",
        "timestamp": 1616001130
    },
    {
        "content": "<p>At most you could use custom attributes.</p>",
        "id": 230730295,
        "sender_full_name": "bjorn3",
        "timestamp": 1616001144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Is.20metadata.20updated.20in.20place.3F/near/230730295\">said</a>:</p>\n<blockquote>\n<p>At most you could use custom attributes.</p>\n</blockquote>\n<p>there's non trivial work being done though, the tool needs access to MIR among other things</p>",
        "id": 230730351,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001165
    },
    {
        "content": "<p>so just \"this function is important\" isn't enough to store all the needed data</p>",
        "id": 230730410,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001189
    },
    {
        "content": "<p>the concrete use case is <a href=\"https://github.com/willcrichton/example-analyzer\">https://github.com/willcrichton/example-analyzer</a></p>",
        "id": 230730456,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001204
    },
    {
        "content": "<p>What does it do?</p>",
        "id": 230730601,
        "sender_full_name": "bjorn3",
        "timestamp": 1616001255
    },
    {
        "content": "<p>it stores a map of where functions are called (not defined)</p>",
        "id": 230730728,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001305
    },
    {
        "content": "<p><a href=\"https://github.com/willcrichton/example-analyzer/blob/265259af66fbd5b400f30ce7ea848a4ee7dffdac/src/main.rs#L42\">https://github.com/willcrichton/example-analyzer/blob/265259af66fbd5b400f30ce7ea848a4ee7dffdac/src/main.rs#L42</a></p>",
        "id": 230730750,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001312
    },
    {
        "content": "<p>and then uses that to highlight the documentation <a href=\"https://cdn.discordapp.com/attachments/786784478731305000/788098168067457024/Screen_Shot_2020-12-14_at_12.40.17_PM.png\">https://cdn.discordapp.com/attachments/786784478731305000/788098168067457024/Screen_Shot_2020-12-14_at_12.40.17_PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"https://cdn.discordapp.com/attachments/786784478731305000/788098168067457024/Screen_Shot_2020-12-14_at_12.40.17_PM.png\"><img src=\"https://cdn.discordapp.com/attachments/786784478731305000/788098168067457024/Screen_Shot_2020-12-14_at_12.40.17_PM.png\"></a></div>",
        "id": 230730874,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001352
    },
    {
        "content": "<p>Could it use <code>-Zalways-encode-mir</code> and then find all calls while documenting?</p>",
        "id": 230731009,
        "sender_full_name": "bjorn3",
        "timestamp": 1616001403
    },
    {
        "content": "<p>oh huh that's a much better idea</p>",
        "id": 230731037,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001417
    },
    {
        "content": "<p>it doesn't work for examples, only dependencies, but that's what I wanted metadata for in the first place</p>",
        "id": 230731153,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"265377\">@Will Crichton</span> I'll see if I have time this weekend to write up a demo</p>",
        "id": 230731229,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001502
    },
    {
        "content": "<p>wait no that breaks - the uses are in <em>downstream</em> crates</p>",
        "id": 230731297,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001543
    },
    {
        "content": "<p>when documenting <code>hyper</code>, <code>warp</code> hasn't yet been documented</p>",
        "id": 230731356,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001562
    },
    {
        "content": "<p>and there's no dependency from warp -&gt; hyper, only from hyper -&gt; warp</p>",
        "id": 230731418,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001587
    },
    {
        "content": "<p>hmm</p>",
        "id": 230731439,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001595
    },
    {
        "content": "<p>Oh, can it be stored in a separate metadata file?</p>",
        "id": 230731593,
        "sender_full_name": "bjorn3",
        "timestamp": 1616001638
    },
    {
        "content": "<p>yeah I think that would be necessary</p>",
        "id": 230731651,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001654
    },
    {
        "content": "<p>I think an alternate solution is to document crates in reverse order</p>",
        "id": 230732165,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001842
    },
    {
        "content": "<p>say you have <code>log -&gt; hyper -&gt; warp</code> - you document warp <em>first</em>, finding uses of the hyper API, store them in the out-of-band output file, then document <code>hyper</code>, then document <code>log</code> in the same way</p>",
        "id": 230732277,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001878
    },
    {
        "content": "<p>which works because <em>documenting</em> crates is independent (up until now), it's only the metadata from rustc that's a hard dependency</p>",
        "id": 230732335,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1616001908
    },
    {
        "content": "<p>Fwiw, I think the tool would be useful even if it only finds examples in the current crate (either crate source or examples directory). Finding examples in downstream crates is nice but not essential for an MVP.</p>",
        "id": 230732694,
        "sender_full_name": "Will Crichton",
        "timestamp": 1616002065
    }
]