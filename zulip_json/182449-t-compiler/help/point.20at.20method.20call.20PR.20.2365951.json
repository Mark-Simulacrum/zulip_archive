[
    {
        "content": "<p>Actually <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> let's discuss here =)</p>",
        "id": 183203764,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576099746
    },
    {
        "content": "<p>In particular, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span>, I think the data that is being stored in<code>node_method_def_id</code> table is also available from the <code>type_dependent_defs</code> table</p>",
        "id": 183204305,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100071
    },
    {
        "content": "<p>we currently call <a href=\"https://github.com/rust-lang/rust/blob/90b957a17c1abba979aa41234ce0993a61030e67/src/librustc_typeck/check/mod.rs#L2820\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/90b957a17c1abba979aa41234ce0993a61030e67/src/librustc_typeck/check/mod.rs#L2820\"><code>write_method_call</code></a></p>",
        "id": 183204323,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100102
    },
    {
        "content": "<p>which then invokes <a href=\"https://github.com/rust-lang/rust/blob/90b957a17c1abba979aa41234ce0993a61030e67/src/librustc_typeck/check/mod.rs#L2816\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/90b957a17c1abba979aa41234ce0993a61030e67/src/librustc_typeck/check/mod.rs#L2816\"><code>write_resolution</code></a> which stores <code>method.def_id</code>into that table</p>",
        "id": 183204347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100128
    },
    {
        "content": "<p>I'll leave comments on the PR, anyhow</p>",
        "id": 183204358,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100142
    },
    {
        "content": "<p>If that is the case, it should be easy to change</p>",
        "id": 183204565,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576100283
    },
    {
        "content": "<p>And it's great that then we won't have any extra perf/mem-use hit</p>",
        "id": 183204608,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576100316
    },
    {
        "content": "<p>What about the function <code>foo()</code> → <code>foo&lt;T&gt;()</code> case?</p>",
        "id": 183204629,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576100341
    },
    {
        "content": "<p>not sure what you mean by that, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ?</p>",
        "id": 183204656,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100361
    },
    {
        "content": "<p>That one is a bit hackier than I'd like, because at that point we no longer have the PathSegment anymore</p>",
        "id": 183204660,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576100365
    },
    {
        "content": "<p>one sec</p>",
        "id": 183204663,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576100369
    },
    {
        "content": "<p>you mean inspecting the snippet?</p>",
        "id": 183204666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100372
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/65951/files#diff-0e12890ad498e250783f40f88a8b8ec6R1997-R2042\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65951/files#diff-0e12890ad498e250783f40f88a8b8ec6R1997-R2042\">https://github.com/rust-lang/rust/pull/65951/files#diff-0e12890ad498e250783f40f88a8b8ec6R1997-R2042</a></p>",
        "id": 183204766,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576100425
    },
    {
        "content": "<p>yep</p>",
        "id": 183204768,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576100427
    },
    {
        "content": "<p>Yeah I'm not sure what's better there</p>",
        "id": 183204781,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100437
    },
    {
        "content": "<p>Rigth now I'm imagining this could still give false suggestions</p>",
        "id": 183204792,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100445
    },
    {
        "content": "<p>It looks like you are testing that there <em>are</em> generic parameters</p>",
        "id": 183204808,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100459
    },
    {
        "content": "<p>but I think that may not be enough</p>",
        "id": 183204847,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100483
    },
    {
        "content": "<p>well</p>",
        "id": 183205051,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100629
    },
    {
        "content": "<p>I guess that it's probably true that <em>one</em> of the parameters needs to be constrained</p>",
        "id": 183205066,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100641
    },
    {
        "content": "<p>even if the connection to the return type might not be <em>direct</em></p>",
        "id": 183205132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100661
    },
    {
        "content": "<p>so perhaps it <em>is</em> correct as is</p>",
        "id": 183205138,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1576100666
    },
    {
        "content": "<p>I believe the common case will be only one of the available type params needs to be constrained, as the rest are being properly inferred. There are three follow up things to do for that PR to be perfect: look at the current resolved type for all type params, do that even when the turbofish is being used already, and finally try to perform some global evaluation to try to infer what the appropriate type would be. I am not handling any of those cases yet under the assumption that 1) the common case will only involve a single type param (suspect assumption), 2) that this will have the most benefit for newcomers that do not yet know about the turbofish syntax, 3) that doing those things will be hard and 4) landing a smaller improvement sooner is better than a full solution later.</p>",
        "id": 183220548,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576113967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I feel that <a href=\"https://github.com/rust-lang/rust/pull/65951\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65951\">https://github.com/rust-lang/rust/pull/65951</a> is as ready as it will be in the short term for merging. The outstanding comments seem like something I should tackle but wouldn't want them to block the landing of the PR.</p>",
        "id": 183315385,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1576194839
    }
]