[
    {
        "content": "<p>What's a good workflow for hacking on a submodule? Ideally I would just make some changes to the submodule dir and just try a build without even having to commit anything, but x.py wants to do an implicit submodule update</p>",
        "id": 246013818,
        "sender_full_name": "bstrie",
        "timestamp": 1626293625
    },
    {
        "content": "<p>You can disable the submodule update in <code>config.toml</code>.  I always have it disabled since I do a lot of submodule work. It just means there is often an extra step after a git update, but I prefer the extra sense of safety that <code>x.py</code> won't irretrievably delete something.</p>",
        "id": 246014647,
        "sender_full_name": "Eric Huss",
        "timestamp": 1626294050
    },
    {
        "content": "<p>ah, I didn't realize there was a config option, thanks</p>",
        "id": 246014847,
        "sender_full_name": "bstrie",
        "timestamp": 1626294161
    },
    {
        "content": "<p>If you don't commit your changes in the submodule then x.py won't update it.</p>",
        "id": 246018962,
        "sender_full_name": "Amanieu",
        "timestamp": 1626296081
    },
    {
        "content": "<p>That's how I usually do it. Either that or create a temporary commit in the outer repo that updates the submodule so x.py sees that it is up-to-date.</p>",
        "id": 246019022,
        "sender_full_name": "Amanieu",
        "timestamp": 1626296115
    },
    {
        "content": "<p>Note there was about a week recently where x.py would ignore that option for llvm <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> so make sure you've rebased over  <a href=\"https://github.com/rust-lang/rust/pull/87049\">https://github.com/rust-lang/rust/pull/87049</a></p>",
        "id": 246021005,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626296748
    }
]