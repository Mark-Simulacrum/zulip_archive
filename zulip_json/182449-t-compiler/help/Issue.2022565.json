[
    {
        "content": "<p>Originally asked on discord, moved here by suggestion:<br>\nI was looking into <a href=\"https://github.com/rust-lang/rust/issues/22565\">https://github.com/rust-lang/rust/issues/22565</a><br>\nConfirmed it still occurs on latest nightly, made a UI test that should succeed later. Looked at traceback. The 'naive' solution of converting the bugs into errors 'works' in that it causes a compile error, but it doesn't solve the UI test. Playing around with it a bit, it seems to be because build or check don't ICE, because the ICE is in codegen, not any of the earlier steps. So the UI compiles successfully without error, but build-pass fails because it can't codegen.<br>\nSo, I'm not sure where to go from here. I feel that this should be checked earlier than codegen, to allow it to be checked, and fail early, etc. But I'm not familiar enough with the compiler to know where that would go, or how to add that.  Does anyone have advice / help?<br>\nFurther clarification:<br>\nWith nothing / just an ERROR annotation, the compilation succeeds (test failure)<br>\nWith build-pass codegen fails (test failure)<br>\nWith check-pass it succeeds (test success), but only because it doesn't trigger the issue, not doing codegen.</p>",
        "id": 215870647,
        "sender_full_name": "CraftSpider",
        "timestamp": 1604680554
    }
]