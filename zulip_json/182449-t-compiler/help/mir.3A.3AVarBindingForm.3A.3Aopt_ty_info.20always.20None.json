[
    {
        "content": "<p>I am trying to fix <a href=\"https://github.com/rust-lang/rust/issues/85765\">an issue</a> where borrowck suggests invalid code, here is the code snippet:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Vec</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rofl</span>: <span class=\"kp\">&amp;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// &lt;- originally suggested &amp;mut mut test</span>\n\n<span class=\"w\">    </span><span class=\"n\">rofl</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"nb\">Vec</span>::<span class=\"n\">new</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I believe I have fixed this issue, however, it highlights the local variable instead of specified type:</p>\n<div class=\"codehilite\"><pre><span></span><code>LL |     let rofl: &amp;Vec&lt;Vec&lt;i32&gt;&gt; = &amp;mut test;\n   |         ---- help: consider changing this to be a mutable reference: `&amp;mut Vec&lt;Vec&lt;i32&gt;&gt;`\n</code></pre></div>\n<p>The suggestion logic uses <code>opt_ty_info</code> of <code>mir::VarBindingForm</code>.</p>\n<p>It only highlights the declaration when <code>opt_ty_info</code> is <code>None</code>. Why is it <code>None</code> when user has an actual specified type? Should I fix this before I submit the PR? If not, I will have to add a UI test with an improperly highlighted suggestion.</p>",
        "id": 240685400,
        "sender_full_name": "fee1-dead",
        "timestamp": 1622267204
    }
]