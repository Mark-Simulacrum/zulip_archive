[
    {
        "content": "<p>I'm trying to add support for attributes on import items to Rust Analyzer. One use case is to ignore import directives with the <a href=\"https://github.com/dtolnay/rustversion\"><code>#[rustversion]</code></a> attribute, which works similarly to <code>#[cfg]</code>. Unfortunately only <code>cfg</code> attributes are processed right now (in <a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/582a202d6ead6d2b793923c8f63801d34c72a448/crates/hir_def/src/nameres/collector.rs#L1027\">https://github.com/rust-analyzer/rust-analyzer/blob/582a202d6ead6d2b793923c8f63801d34c72a448/crates/hir_def/src/nameres/collector.rs#L1027</a>). However there is some support for expanding proc-macros in this very file so I figured we can actually expand macros right there instead of only supporting <code>cfg</code>. The issue is that we would be processing macros earlier. Also we'd need to ignore some macros (eg. <code>cfg</code>, <code>stable</code>, <code>unstable</code>).</p>\n<p>First of all, is expanding item macros so early a good idea? As previously stated it already kinda happens, just not for proc-macro attributes. I'm thinking of expanding macros in all cases and visiting (<code>collect</code>) their result recursively.</p>",
        "id": 225363051,
        "sender_full_name": "Grégoire Geis",
        "timestamp": 1612562163
    },
    {
        "content": "<p>This requires <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7049\">https://github.com/rust-analyzer/rust-analyzer/pull/7049</a></p>",
        "id": 225363568,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612562472
    },
    {
        "content": "<p>...which in turn requires tracking derive helpers so that they can be resolved (as-is, that PR causes a lot of false positives when using <code>#[serde]</code> on the item)</p>",
        "id": 225363680,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612562524
    },
    {
        "content": "<p>Feel free to work on that actually!</p>",
        "id": 225363740,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612562553
    },
    {
        "content": "<p>Oh this should probably be moved to <a class=\"stream\" data-stream-id=\"185405\" href=\"/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0\">#t-compiler/wg-rls-2.0</a></p>",
        "id": 225363852,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612562612
    },
    {
        "content": "<p>I'll look into it but that sounds harder than anticipated... I'll look into it if I have time, but I highly doubt I will.</p>\n<p>Good point on the stream. I searched for \"Rust-analyzer\" and didn't realize that it was named wg-rls-2.0. Thanks for pointing out!</p>",
        "id": 225364271,
        "sender_full_name": "Grégoire Geis",
        "timestamp": 1612562811
    },
    {
        "content": "<p>yeah, this isn't very easy to implement</p>",
        "id": 225364435,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1612562885
    }
]