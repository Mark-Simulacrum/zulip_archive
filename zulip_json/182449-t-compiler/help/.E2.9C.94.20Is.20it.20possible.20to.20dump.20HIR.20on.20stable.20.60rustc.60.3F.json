[
    {
        "content": "<p>Ok, so not a good idea. Was not expecting this :). If you tell me that's a bad idea, I'll listen to you don't worry. But why is there no easy way to get this kind of info on stable versions ? Is this a side effect of having <code>-Z</code> disabled ? Or is there another good reason for hiding this ?</p>",
        "id": 263062872,
        "sender_full_name": "Marc",
        "timestamp": 1638217313
    },
    {
        "content": "<p>I guess because HIR is not a stable representation itself</p>",
        "id": 263062966,
        "sender_full_name": "The 8472",
        "timestamp": 1638217363
    },
    {
        "content": "<p>and also because the <em>existence</em> of the HIR flag isn't stable</p>",
        "id": 263063015,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638217396
    },
    {
        "content": "<p>someone could decide to rename or remove it, the way I removed <code>-Zpretty</code></p>",
        "id": 263063031,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638217406
    },
    {
        "content": "<p>also in general things are unstable by default until someone makes a case for stabilizing them</p>",
        "id": 263063079,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638217440
    },
    {
        "content": "<p>because they can't be removed once they're stable</p>",
        "id": 263063127,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638217446
    },
    {
        "content": "<p>And I highly doubt we are inclined to guarantee HIR remains the same.</p>",
        "id": 263063165,
        "sender_full_name": "Jubilee",
        "timestamp": 1638217471
    },
    {
        "content": "<p>that makes sense, thanks for the details :). So I'll only allow this on nightly.</p>",
        "id": 263063177,
        "sender_full_name": "Marc",
        "timestamp": 1638217479
    },
    {
        "content": "<p>I guess ppl asking to see some compiler debug IR are not relying on the dump to be stable. At least that's not how I understand it. But I see your point !</p>",
        "id": 263063374,
        "sender_full_name": "Marc",
        "timestamp": 1638217575
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"398207\">Marc</span> has marked this topic as resolved.</p>",
        "id": 263063699,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638217760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"398207\">Marc</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/.E2.9C.94.20Is.20it.20possible.20to.20dump.20HIR.20on.20stable.20.60rustc.60.3F/near/263063374\">said</a>:</p>\n<blockquote>\n<p>I guess ppl asking to see some compiler debug IR are not relying on the dump to be stable. At least that's not how I understand it. But I see your point !</p>\n</blockquote>\n<p>for context, a lot of my reluctance here comes from  <a href=\"https://github.com/rust-lang/rust/issues/63305\">https://github.com/rust-lang/rust/issues/63305</a> where people didn't even realize the feature they were using <em>was</em> unstable in the first place</p>",
        "id": 263064075,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638217946
    },
    {
        "content": "<p>and it meant that it wouldn't have been feasible to ever remove or break the feature, even though it was supposedly still unstable</p>",
        "id": 263064146,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638217985
    },
    {
        "content": "<blockquote>\n<p>and it meant that it wouldn't have been feasible to ever remove or break the feature</p>\n</blockquote>\n<p>Wasn't there a decision somewhere that accidental stabilizations can be unstabilized?</p>",
        "id": 263064531,
        "sender_full_name": "The 8472",
        "timestamp": 1638218183
    },
    {
        "content": "<p>I was not aware of that, that's good to know <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> but I still think it would have been infeasible for intra-doc links specifically because they broke silently (because markdown has no concept of errors, they would have just rendered as <code>[some_link]</code>)</p>",
        "id": 263064628,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1638218230
    },
    {
        "content": "<p>I phrased that as a question for a reason, I'm not saying that it definitely is the case, just that I vaguely recall something in that direction.</p>",
        "id": 263064748,
        "sender_full_name": "The 8472",
        "timestamp": 1638218286
    },
    {
        "content": "<p>It is generally the case that we reserve the right to take back unintentional stabilization, but it depends on the scale and kind of impact</p>",
        "id": 263064849,
        "sender_full_name": "simulacrum",
        "timestamp": 1638218349
    },
    {
        "content": "<p>Isn't MIR also an unstable representation? But there is <code>--emit=mir</code></p>",
        "id": 263073497,
        "sender_full_name": "nnethercote",
        "timestamp": 1638223302
    },
    {
        "content": "<p>For MIR we added a header that it is unstable when we added --emit=mir for the playground.</p>",
        "id": 263074670,
        "sender_full_name": "bjorn3",
        "timestamp": 1638223945
    },
    {
        "content": "<p>Won't push for this as I'm not a real user, but is there anything against doing something similar with HIR ?</p>",
        "id": 263105914,
        "sender_full_name": "Marc",
        "timestamp": 1638253339
    },
    {
        "content": "<p>ping <span class=\"user-mention\" data-user-id=\"382653\">@ojeda</span> :)</p>",
        "id": 263129646,
        "sender_full_name": "Marc",
        "timestamp": 1638270828
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"398207\">@Marc</span>!</p>",
        "id": 263131272,
        "sender_full_name": "ojeda",
        "timestamp": 1638271871
    },
    {
        "content": "<p>From what I read above, the concerns are the usual ones. However, for CE it doesn't apply -- one should be able to do anything and everything in CE with a given compiler. That's its main purpose, after all.</p>\n<p>If HIR itself or the flag dissappears or is renamed/stabilized, then that's fine. Ideally, CE would know how to ask for HIR for a given version so that users don't need to remember the precise option when going across versions.</p>\n<p>Now, of course, whether HIR is worth supporting in CE or not is another question and it is up to them. For instance, if HIR (as a concept) were known to be going away soon, then it would likely be a bad idea to start supporting it. But even then, CE should still allow to toggle <code>RUSTC_BOOTSTRAP=1</code>and pass the <code>-Z</code> flag manually. So it is a question of maintanance on CE's side, not really about whether it should be possible or not.</p>\n<p>As for the HIR contents themselves being unstable, it sounds to me like a good idea to have the banner (even if the option is unstable and thus it is implicit).</p>",
        "id": 263135017,
        "sender_full_name": "ojeda",
        "timestamp": 1638274238
    },
    {
        "content": "<p>I can only speak for the compiler-explorer side. We have no problem special casing compiler versions. We already have these kind of things everywhere. Using RUSTC_BOOTSTRAP for getting debug dump or other info is really not an issue. The idea is helping and making useful feature/info easily available.</p>",
        "id": 263205007,
        "sender_full_name": "Marc",
        "timestamp": 1638304693
    },
    {
        "content": "<blockquote>\n<p>As for the HIR contents themselves being unstable, it sounds to me like a good idea to have the banner (even if the option is unstable and thus it is implicit).</p>\n</blockquote>\n<p>I think allowing people to do this for a given version and basically having </p>\n<blockquote>\n<p><span aria-label=\"nuclear\" class=\"emoji emoji-2622\" role=\"img\" title=\"nuclear\">:nuclear:</span> UNSTABLE REPRESENTATION <span aria-label=\"nuclear\" class=\"emoji emoji-2622\" role=\"img\" title=\"nuclear\">:nuclear:</span> <br>\n<span aria-label=\"nuclear\" class=\"emoji emoji-2622\" role=\"img\" title=\"nuclear\">:nuclear:</span>  THIS IR MAY CHANGE BETWEEN VERSIONS ARBITRARILY OR DISAPPEAR ENTIRELY <span aria-label=\"nuclear\" class=\"emoji emoji-2622\" role=\"img\" title=\"nuclear\">:nuclear:</span></p>\n</blockquote>\n<p>everywhere, or, you know, something comparatively \"chill\", is probably fine.</p>",
        "id": 263205280,
        "sender_full_name": "Jubilee",
        "timestamp": 1638304850
    },
    {
        "content": "<p>We'll probably have something somewhere \"around the level\" of the HIR (and likely call it the \"HIR\"), but there have been various changes, and things like HAIR / THIR, historically, so what we call the HIR may look very different in, say, 2025.</p>",
        "id": 263205897,
        "sender_full_name": "Jubilee",
        "timestamp": 1638305137
    },
    {
        "content": "<p>As a first step (at least for now), I'll mimic what compiler-explorer is doing for macro expansion and only offer HIR for nightly. Adding this feature on other versions using RUSTC_BOOTSTRAP is easy, but I don't really know all the context around this...</p>",
        "id": 263476403,
        "sender_full_name": "Marc",
        "timestamp": 1638467857
    }
]