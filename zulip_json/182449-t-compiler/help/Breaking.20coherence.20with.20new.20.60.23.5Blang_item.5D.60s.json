[
    {
        "content": "<p>Hello! I define <code>Simd&lt;T, N&gt;</code> in the crate <code>core::simd::Simd</code>, but am looking into options for having impls for <code>std::simd::Simd</code> for the same reasons that <code>f32</code> and <code>f64</code> do... actually for exactly the same reasons, heh, it's for <code>Simd&lt;f32, N&gt;</code>... and am investigating my options.<br>\nI am seeing that the code in ./compiler/rustc_typeck/src/coherence/inherent_impls.rs seems to handle this, around</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">visit_item</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">item</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">hir</span>::<span class=\"n\">Item</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but <code>core::simd::Simd</code> is defined as a <code>ty::Adt</code> that contain a <code>ty::Array</code>, with a <code>#[repr_simd]</code> annotation...<br>\nIt looks like I am going to have to do most of the check in ./compiler/rustc_typeck/src/check/check.rs for</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">check_simd</span><span class=\"p\">(</span><span class=\"n\">tcx</span>: <span class=\"nc\">TyCtxt</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>: <span class=\"nc\">Span</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">def_id</span>: <span class=\"nc\">LocalDefId</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n</code></pre></div>\n<p>here to make sure I have the right <code>ty::Adt</code>? Or should I do something else tricky like check for a symbol? I am not sure where coherence checking comes in exactly.</p>",
        "id": 264595811,
        "sender_full_name": "Jubilee",
        "timestamp": 1639272015
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> ? ^^;</p>",
        "id": 264595960,
        "sender_full_name": "Jubilee",
        "timestamp": 1639272278
    },
    {
        "content": "<p>Using lang items?</p>",
        "id": 264598360,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1639276033
    },
    {
        "content": "<p>Do you have a PR of what you're describing?</p>",
        "id": 264598367,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1639276056
    },
    {
        "content": "<p>Not yet, was drafting things.</p>",
        "id": 264600074,
        "sender_full_name": "Jubilee",
        "timestamp": 1639279213
    },
    {
        "content": "<p>Here we go. <a href=\"https://github.com/rust-lang/rust/pull/91826\">https://github.com/rust-lang/rust/pull/91826</a></p>",
        "id": 264608269,
        "sender_full_name": "Jubilee",
        "timestamp": 1639292429
    },
    {
        "content": "<blockquote>\n<p>here to make sure I have the right ty::Adt?</p>\n</blockquote>\n<p>You will probably need to add a lang item for <code>Simd</code> too.</p>",
        "id": 264613651,
        "sender_full_name": "bjorn3",
        "timestamp": 1639301666
    },
    {
        "content": "<p>oh geez.</p>",
        "id": 264638942,
        "sender_full_name": "Jubilee",
        "timestamp": 1639336661
    },
    {
        "content": "<p>starting to think \"maybe I should just do an extension trait for now and write libmvec\".</p>",
        "id": 264639515,
        "sender_full_name": "Jubilee",
        "timestamp": 1639337502
    }
]