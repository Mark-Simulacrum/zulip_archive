[
    {
        "content": "<p>Wannabe contributor here. I'm trying to run tests on current master (<code>2bbfa02b1b15974d5772b520aa027bf79f8c248e</code>, <code>./x.py test --stage 1</code>) but I get 5 failures. Are these supposed to fail, or did I make a mistake in my setup (e.g. using my own llvm as described in the book)? <a href=\"/user_uploads/4715/AN1eJ5la5UZnAv29J5u8PFI7/Screenshot-from-2020-07-23-14-45-06.png\">The errors</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/AN1eJ5la5UZnAv29J5u8PFI7/Screenshot-from-2020-07-23-14-45-06.png\" title=\"The errors\"><img src=\"/user_uploads/4715/AN1eJ5la5UZnAv29J5u8PFI7/Screenshot-from-2020-07-23-14-45-06.png\"></a></div><p>If this is not the right place to ask, please let me know.</p>",
        "id": 204791463,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595508402
    },
    {
        "content": "<p>Should have the error message before this summary. Can you post them?</p>",
        "id": 204791624,
        "sender_full_name": "lzutao",
        "timestamp": 1595508485
    },
    {
        "content": "<p><a href=\"https://gist.github.com/vandenheuvel/543804266f1f1924f0b834c9b1dd963b\">https://gist.github.com/vandenheuvel/543804266f1f1924f0b834c9b1dd963b</a></p>",
        "id": 204791769,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595508570
    },
    {
        "content": "<p>trying to run the fail tests ...</p>",
        "id": 204792341,
        "sender_full_name": "lzutao",
        "timestamp": 1595508880
    },
    {
        "content": "<p>Thanks for taking a look. Updating all submodules didn't help.</p>",
        "id": 204792420,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595508923
    },
    {
        "content": "<p>Looks like they're all ui errors. It looks like someone forgot to <code>--bless</code>, but that couldn't get past CI, I assume?</p>",
        "id": 204792577,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595508980
    },
    {
        "content": "<p>All failing tests  passes on my machine.<br>\nDid you change Rust source somewhere?</p>",
        "id": 204793703,
        "sender_full_name": "lzutao",
        "timestamp": 1595509456
    },
    {
        "content": "<p>No, it's clean</p>",
        "id": 204793747,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595509475
    },
    {
        "content": "<p>I only edited the configuration file, following the book</p>",
        "id": 204793783,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595509490
    },
    {
        "content": "<p>Any other tips on how I could diagnose this?</p>",
        "id": 204793835,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595509510
    },
    {
        "content": "<p>do you by chance have parallel-compiler = true on?</p>",
        "id": 204794021,
        "sender_full_name": "simulacrum",
        "timestamp": 1595509582
    },
    {
        "content": "<p>Can you post a <code>diff config.toml.example config.toml</code>?</p>",
        "id": 204794174,
        "sender_full_name": "lzutao",
        "timestamp": 1595509662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I do, that's probably it then. If I don't write in this thread in a couple of minutes, consider this fixed.</p>",
        "id": 204794270,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595509696
    },
    {
        "content": "<p>yeah I would leave it off, it's not tested in CI beyond x.py check working and isn't likely to bring too many wins at this point if any</p>",
        "id": 204794327,
        "sender_full_name": "simulacrum",
        "timestamp": 1595509732
    },
    {
        "content": "<p>I hate to be cynical, but isn't rust supposed to make writing parallel code easier? Minimal gains I can understand, but different compilation results without any notification... Hm.</p>",
        "id": 204794506,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595509822
    },
    {
        "content": "<p>we haven't spent a lot of time on it</p>",
        "id": 204794558,
        "sender_full_name": "simulacrum",
        "timestamp": 1595509857
    },
    {
        "content": "<p>well, those tests are \"known to have different results\"</p>",
        "id": 204794579,
        "sender_full_name": "simulacrum",
        "timestamp": 1595509866
    },
    {
        "content": "<p>because all of them are cycle errors</p>",
        "id": 204794588,
        "sender_full_name": "simulacrum",
        "timestamp": 1595509874
    },
    {
        "content": "<p>so it's somewhat expected that parallel execution will lead to slightly different evaluation order and such</p>",
        "id": 204794615,
        "sender_full_name": "simulacrum",
        "timestamp": 1595509889
    },
    {
        "content": "<p>Okay, thanks for clarifying a bit what's at play!</p>",
        "id": 204794721,
        "sender_full_name": "Bram van den Heuvel",
        "timestamp": 1595509929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"323979\">@Bram van den Heuvel</span> what Rust (uniquely, in some sense) brings to the table in terms of paralell here is that the locks and such were introduced to the compiler with nearly zero coordination and, notably, we're currently in a position where a single flag can switch between both states and have fairly high confidence in the safety of such a move.</p>",
        "id": 204795107,
        "sender_full_name": "simulacrum",
        "timestamp": 1595510130
    },
    {
        "content": "<p>(you can see from the test failures that the compiler is still working just fine, just its output is now non-deterministic â€“ and non-determinism is inherent when using threads, there is nothing Rust can do to prevent that)</p>",
        "id": 204795512,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1595510320
    },
    {
        "content": "<p>It's possible to maintain deterministic output with threads, it's just harder.</p>",
        "id": 205042526,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1595752338
    }
]