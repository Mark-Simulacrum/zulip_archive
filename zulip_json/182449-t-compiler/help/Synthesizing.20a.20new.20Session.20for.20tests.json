[
    {
        "content": "<p>Hi all! I'm guessing this will end in \"you can't do that\", but, I figure I'll try asking anyway. So, in rust-gpu (a -Zcodegen-backend for spir-v), we made a \"linker\" for spir-v modules, and there's tests testing it. There are a surprising number of errors that can happen during linking (due to spir-v requiring a lot of whole-program-analysis passes due to the nature of GPUs), and so we pass in a rustc <code>Session</code> to the linker to report errors. However, for tests, it's rather difficult to synthesize up a dummy Session to pass in - so right now, we take a <code>Option&lt;&amp;Session&gt;</code>, and then <code>if let Some(sess) = sess { report error } else { panic for tests }</code>. That's really annoying, so, is there a way to synthesize a Session for tests so we don't have to do that dance?<br>\n<a href=\"https://github.com/EmbarkStudios/rust-gpu/blob/9c8cec36396a1f328c8582da488d469963982590/crates/rustc_codegen_spirv/src/linker/mod.rs#L89-L91\">https://github.com/EmbarkStudios/rust-gpu/blob/9c8cec36396a1f328c8582da488d469963982590/crates/rustc_codegen_spirv/src/linker/mod.rs#L89-L91</a></p>",
        "id": 216326565,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605089153
    },
    {
        "content": "<p>You can use <a href=\"https://github.com/rust-lang/rust/blob/38030ffb4e735b26260848b744c0910a5641e1db/compiler/rustc_interface/src/util.rs#L61\"><code>rustc_interface::utils::create_session</code></a>.</p>",
        "id": 216326786,
        "sender_full_name": "bjorn3",
        "timestamp": 1605089291
    },
    {
        "content": "<p>Ah neat! Although <code>config::Options</code> has quite a few things to fill out... I guess I should probably just go through the pain of writing the hundred lines of code or whatever to synthesize that, though.</p>",
        "id": 216326983,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605089426
    },
    {
        "content": "<p>This is how <code>rustc_driver</code> creates <code>config::Options</code>: <a href=\"https://github.com/rust-lang/rust/blob/38030ffb4e735b26260848b744c0910a5641e1db/compiler/rustc_driver/src/lib.rs#L202-L207\">https://github.com/rust-lang/rust/blob/38030ffb4e735b26260848b744c0910a5641e1db/compiler/rustc_driver/src/lib.rs#L202-L207</a></p>",
        "id": 216327155,
        "sender_full_name": "bjorn3",
        "timestamp": 1605089539
    },
    {
        "content": "<p><code>handle_options</code> is exported from <code>rustc_driver</code>.</p>",
        "id": 216327307,
        "sender_full_name": "bjorn3",
        "timestamp": 1605089657
    },
    {
        "content": "<p>aah, nice!</p>",
        "id": 216327367,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605089711
    },
    {
        "content": "<p>Hmm, getting a <code>panicked at 'cannot access a scoped thread local variable without calling </code>set<code> first', scoped-tls-1.0.0/src/lib.rs:168:9</code> at backtrace<br>\n   1: scoped_tls::ScopedKey&lt;T&gt;::with<br>\n   2: rustc_session::parse::ParseSess::with_span_handler<br>\n   3: rustc_session::session::build_session<br>\n   4: rustc_interface::util::create_session</p>",
        "id": 216329214,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605090999
    },
    {
        "content": "<p>You need to wrap it in <code>rustc_driver::catch_with_exit_code(|| { /* ... */ });</code>. You will probably want to check that the exit code is zero.</p>",
        "id": 216329975,
        "sender_full_name": "bjorn3",
        "timestamp": 1605091515
    },
    {
        "content": "<p><code>catch_with_exit_code</code> spawns a new thread in which it initializes several thread locals that are used by various parts of rustc.</p>",
        "id": 216330023,
        "sender_full_name": "bjorn3",
        "timestamp": 1605091558
    },
    {
        "content": "<p>Wait, it is <code>rustc_interface::interface::run_compiler</code> that does that.</p>",
        "id": 216330173,
        "sender_full_name": "bjorn3",
        "timestamp": 1605091636
    },
    {
        "content": "<p><code>rustc_interface::interface::run_compiler</code> also gives you a <code>Session</code> for free.</p>",
        "id": 216330231,
        "sender_full_name": "bjorn3",
        "timestamp": 1605091675
    },
    {
        "content": "<p>ah cool, thanks!</p>",
        "id": 216330314,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605091709
    },
    {
        "content": "<p>neat, looks like that works, thanks!</p>",
        "id": 216331018,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605092201
    }
]