[
    {
        "content": "<p>Hello, I believe Rust should use mold as its default linker and or support it in the future. Can I open an issue about that on &lt;<a href=\"https://github.com/rust-lang/rust/issues\">https://github.com/rust-lang/rust/issues</a>&gt;?</p>",
        "id": 265036534,
        "sender_full_name": "ruster",
        "timestamp": 1639586131
    },
    {
        "content": "<p>It is faster than LLVM lld: <a href=\"https://github.com/rui314/mold/tree/v1.0.0#mold-a-modern-linker\">https://github.com/rui314/mold/tree/v1.0.0#mold-a-modern-linker</a></p>",
        "id": 265036761,
        "sender_full_name": "ruster",
        "timestamp": 1639586218
    },
    {
        "content": "<p>For it to be the default one it would have to support all the use-cases that are currently supported. and afaik the default linker actually is platform specific because not all linkers work on all platforms.<br>\nThe hurdle for opt-in support may be lower.</p>",
        "id": 265037071,
        "sender_full_name": "The 8472",
        "timestamp": 1639586345
    },
    {
        "content": "<p>And all those benchmarks are C/C++ code, a rust-specific one would help making the argument for it.</p>",
        "id": 265037241,
        "sender_full_name": "The 8472",
        "timestamp": 1639586417
    },
    {
        "content": "<p>I'd love to see mold become more widely used as well, but the first step would be to add support for it at all.</p>",
        "id": 265049885,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639591394
    },
    {
        "content": "<p>I did <code>mold -run cargo build</code> and it seemed to have worked. I tested it on a pretty big Rust project. However I think I did something wrong when benchmarking so I refrained from opening that issue for now.</p>",
        "id": 265061920,
        "sender_full_name": "ruster",
        "timestamp": 1639596497
    },
    {
        "content": "<p>Mold works fine with Rust on Linux with both <code>mold -run cargo build</code> and <code>RUSTFLAGS=\"-Clink-arg=-fuse-ld=mold\" cargo build</code>. Is there any further support required on the Rust side? It's a main goal of mold to be fully compatible with gold and lld.</p>\n<p>It still needs a bit of time before it could become default IMHO even for Linux ELF. It just hit 1.0 and it notably <a href=\"https://github.com/rui314/mold/issues/88#issuecomment-960600648\">does not support LTO yet</a>.</p>",
        "id": 265061931,
        "sender_full_name": "Hans Kratz",
        "timestamp": 1639596503
    },
    {
        "content": "<p>If you are using LTO, most of the \"linking\" time will be spent inside LLVM anyway, so a fast linker missing LTO support is not a big deal. Just switch to a slower linker when enabling LTO.</p>",
        "id": 265064830,
        "sender_full_name": "bjorn3",
        "timestamp": 1639597639
    },
    {
        "content": "<p>Exactly.</p>\n<p>Well, if anyone wants to open an issue, please go ahead so we can track it.</p>",
        "id": 265069183,
        "sender_full_name": "ruster",
        "timestamp": 1639599338
    },
    {
        "content": "<p>what are we tracking, though?</p>",
        "id": 265069499,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639599480
    },
    {
        "content": "<p>it seems to work fine today</p>",
        "id": 265069571,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639599499
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>  I guess making it the default one maybe? Isn't the \"Linking with lld\" about making it the default as well? So I don't see why we wouldn't want to do the same with mold, considering that most statistics say that it's even faster than lld</p>",
        "id": 265307472,
        "sender_full_name": "ruster",
        "timestamp": 1639753650
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I think it's too early to plan making it the default</p>",
        "id": 265309951,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639754654
    },
    {
        "content": "<p>Well recently it's made its 1.0 release with the Linux platform now stable. I think it's never too early to open an issue just to not forget about it.</p>",
        "id": 265322137,
        "sender_full_name": "ruster",
        "timestamp": 1639758448
    },
    {
        "content": "<blockquote>\n<p>implying that issues aren't forgotten almost as soon as they're opened</p>\n</blockquote>",
        "id": 265322899,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639758761
    },
    {
        "content": "<p>imo no, they are not forgotten because they will be saved on that tracker and everyone can subscribe to the issue and get notifications on updates. this Zulip discussion is far more likely to be forgotten imo</p>",
        "id": 265324581,
        "sender_full_name": "ruster",
        "timestamp": 1639759477
    },
    {
        "content": "<p>please do not.</p>",
        "id": 265337765,
        "sender_full_name": "Jubilee",
        "timestamp": 1639764943
    },
    {
        "content": "<p>The issue tracker is cluttered with seven thousand issues.<br>\nYou have not even presented a compelling reason why we should switch to it as opposed to well-tested linkers like gold, lld, etc.</p>",
        "id": 265337954,
        "sender_full_name": "Jubilee",
        "timestamp": 1639765017
    },
    {
        "content": "<p>Really, we should only switch to mold instead of those if it also would fix every <code>A-linkage</code> issue and introduce no new ones. Which won't be the case.</p>",
        "id": 265338270,
        "sender_full_name": "Jubilee",
        "timestamp": 1639765147
    },
    {
        "content": "<p>A fair amount of <code>A-linkage</code> issues are in rustc itself and not the linker.</p>",
        "id": 265338508,
        "sender_full_name": "bjorn3",
        "timestamp": 1639765241
    },
    {
        "content": "<p>Yes.<br>\nBut at least some of them have to do with correctly passing on invocations to the linker, and introducing a new linker to transition to, when we have already been gradually transitioning towards using lld, means we would now have to teach rustc to correctly invoke <strong>yet another</strong> linker.</p>",
        "id": 265338866,
        "sender_full_name": "Jubilee",
        "timestamp": 1639765434
    },
    {
        "content": "<p>The same trick used to invoke lld should work for mold I think, so maybe a couple of lines extra?</p>",
        "id": 265338991,
        "sender_full_name": "bjorn3",
        "timestamp": 1639765482
    },
    {
        "content": "<p>And then we get to find all the bugs in mold that haven't been found and tested yet. :D</p>",
        "id": 265339084,
        "sender_full_name": "Jubilee",
        "timestamp": 1639765538
    },
    {
        "content": "<p>There were definitely references to “weird concurrency bugs” I've seen around mold's issue tracker, so I definitely would be quite wary of making the linker a default for a time being.</p>",
        "id": 265340363,
        "sender_full_name": "nagisa",
        "timestamp": 1639766111
    },
    {
        "content": "<p>And linking with LLD and gold was something people were interested in because it not only gave a speedup, but also those linkers had good, widely-tested support for many of our platforms of interest already, and at least in the gold case is already present on many hosts people are using.</p>",
        "id": 265342026,
        "sender_full_name": "Jubilee",
        "timestamp": 1639766902
    }
]