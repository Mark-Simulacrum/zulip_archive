[
    {
        "content": "<p>I'm currently building a local stage 1 compiler (on Windows MSVC) and would like to do some performance analysis which would be aided by having debug symbols. I have <code>debug=true</code> and <code>profile=compiler</code> set in my config.toml and nothing concerning debug-info overriden. However, I don't see any PDB files being generated in the build directory. Where can I find debug symbols?</p>",
        "id": 226643476,
        "sender_full_name": "rylev",
        "timestamp": 1613561291
    },
    {
        "content": "<p>That's curious. Is there really no pdb files anywhere in the $src/build directory?</p>",
        "id": 226648751,
        "sender_full_name": "nagisa",
        "timestamp": 1613564784
    },
    {
        "content": "<p>if <code>-g</code> is enabled pdbs get generated automatically and x.py/boostrap actually would need to go out of their way to get them removed.</p>",
        "id": 226648832,
        "sender_full_name": "nagisa",
        "timestamp": 1613564848
    },
    {
        "content": "<p>There are pdbs in bootstrap directory which I assume are for the stage 0 compiler.</p>",
        "id": 226650774,
        "sender_full_name": "rylev",
        "timestamp": 1613566001
    },
    {
        "content": "<p>The stage 1 std lib also has an associated pdb file.</p>",
        "id": 226650966,
        "sender_full_name": "rylev",
        "timestamp": 1613566140
    },
    {
        "content": "<p>My only guess would be that <code>debug=true</code> doesn't actually do what you'd expect <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> For profiling you don't want debug assertions anyway, so I'd probably go through the settings and set the more precise options as desired if I were you.</p>",
        "id": 226651051,
        "sender_full_name": "nagisa",
        "timestamp": 1613566201
    },
    {
        "content": "<p>The \"$src\\build\\x86_64-pc-windows-msvc\\stage1\" directory does not contain pdbs and is where I would expect them to be</p>",
        "id": 226651134,
        "sender_full_name": "rylev",
        "timestamp": 1613566237
    },
    {
        "content": "<p>I'll try turning on debug-info explicitly and see what happens</p>",
        "id": 226651152,
        "sender_full_name": "rylev",
        "timestamp": 1613566253
    },
    {
        "content": "<p>Ah, yeah, I believe that directory is populated by copying files around. I wouldn't be surprised if bootstrap failed to copy over the pdbs.</p>",
        "id": 226651164,
        "sender_full_name": "nagisa",
        "timestamp": 1613566264
    },
    {
        "content": "<p>You should look for them in the directory which was used as the output directory by the original cargo invocation.</p>",
        "id": 226651207,
        "sender_full_name": "nagisa",
        "timestamp": 1613566307
    },
    {
        "content": "<p>Do you know where that might be?</p>",
        "id": 226651406,
        "sender_full_name": "rylev",
        "timestamp": 1613566447
    },
    {
        "content": "<p>stage0-rustc most likely</p>",
        "id": 226652026,
        "sender_full_name": "simulacrum",
        "timestamp": 1613566828
    },
    {
        "content": "<p>It's quite possible we don't pick them up.</p>",
        "id": 226652055,
        "sender_full_name": "simulacrum",
        "timestamp": 1613566851
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> there is rustc_main.pdb. What is the relationship between rustc_main.exe and the stage1 rustc?</p>",
        "id": 226652604,
        "sender_full_name": "rylev",
        "timestamp": 1613567139
    },
    {
        "content": "<p>Hm, I'm not sure, but I would guess they are identical?</p>",
        "id": 226652674,
        "sender_full_name": "simulacrum",
        "timestamp": 1613567167
    },
    {
        "content": "<p>/me looks through bootstrap code</p>",
        "id": 226652693,
        "sender_full_name": "rylev",
        "timestamp": 1613567182
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc/Cargo.toml\">https://github.com/rust-lang/rust/blob/master/compiler/rustc/Cargo.toml</a></p>",
        "id": 226652720,
        "sender_full_name": "simulacrum",
        "timestamp": 1613567202
    },
    {
        "content": "<p>Ok cool Then I guess we just need to copy the pdb file over with the compiler</p>",
        "id": 226652793,
        "sender_full_name": "rylev",
        "timestamp": 1613567240
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/bootstrap/compile.rs#L1096\">https://github.com/rust-lang/rust/blob/master/src/bootstrap/compile.rs#L1096</a></p>",
        "id": 226652895,
        "sender_full_name": "simulacrum",
        "timestamp": 1613567300
    },
    {
        "content": "<p>Though I suspect we probably need to do so for std/test/core too? I'm a bit surprised there's not one per library</p>",
        "id": 226652966,
        "sender_full_name": "simulacrum",
        "timestamp": 1613567358
    },
    {
        "content": "<p>I wonder if we can hook into things here: <a href=\"https://github.com/rust-lang/rust/blob/d416093209d0dd77a4cdeb5a2f1b5de1316787ec/src/bootstrap/compile.rs#L136\">https://github.com/rust-lang/rust/blob/d416093209d0dd77a4cdeb5a2f1b5de1316787ec/src/bootstrap/compile.rs#L136</a></p>",
        "id": 226653197,
        "sender_full_name": "rylev",
        "timestamp": 1613567484
    },
    {
        "content": "<p>That doesn't seem like the right place</p>",
        "id": 226653300,
        "sender_full_name": "simulacrum",
        "timestamp": 1613567527
    },
    {
        "content": "<p>I would look for the places we copy dylibs</p>",
        "id": 226653319,
        "sender_full_name": "simulacrum",
        "timestamp": 1613567542
    },
    {
        "content": "<p>Looks like that's here: <a href=\"https://github.com/rust-lang/rust/blob/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1/src/bootstrap/compile.rs#L1052-L1054\">https://github.com/rust-lang/rust/blob/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1/src/bootstrap/compile.rs#L1052-L1054</a></p>",
        "id": 226653550,
        "sender_full_name": "rylev",
        "timestamp": 1613567660
    },
    {
        "content": "<p>Yep</p>",
        "id": 226654602,
        "sender_full_name": "simulacrum",
        "timestamp": 1613568203
    },
    {
        "content": "<p>Though I think the right solution is to just simply copy the pdbs right before we copy over rustc_main</p>",
        "id": 226654727,
        "sender_full_name": "rylev",
        "timestamp": 1613568263
    },
    {
        "content": "<p>Because the dylibs are not where the pdb is being generated. The pdb gets generated directly next to the final exe</p>",
        "id": 226654800,
        "sender_full_name": "rylev",
        "timestamp": 1613568305
    },
    {
        "content": "<p>Surely there's one per dylib (e.g. core / std) too? I don't know anything about pdb so maybe that's not right</p>",
        "id": 226655347,
        "sender_full_name": "simulacrum",
        "timestamp": 1613568603
    },
    {
        "content": "<p>Well there should be 1 per dll and per exe. The issue is that the rustc exe and the dlls for std/core/etc are generated in two places.</p>",
        "id": 226655645,
        "sender_full_name": "rylev",
        "timestamp": 1613568744
    },
    {
        "content": "<p>So I don't think it's one change that we can make</p>",
        "id": 226655657,
        "sender_full_name": "rylev",
        "timestamp": 1613568754
    },
    {
        "content": "<p>rustc_driver.dll should be created next to rustc_main.exe.</p>",
        "id": 226655694,
        "sender_full_name": "bjorn3",
        "timestamp": 1613568777
    },
    {
        "content": "<p>Yes that is and its pdb file should be copied over with rustc_main.pdb</p>",
        "id": 226655892,
        "sender_full_name": "rylev",
        "timestamp": 1613568867
    },
    {
        "content": "<p>Ah so I'm a bit confused. rustc_driver.dll is present in the stage0-sysroot rustlib/lib directory along with std.dll and core.dll. these get copied over to the final bin folder. But there are no pdbs present there</p>",
        "id": 226656394,
        "sender_full_name": "rylev",
        "timestamp": 1613569100
    },
    {
        "content": "<p>I'm pretty sure its going to be the same situation in that <code>rustlib/lib</code> is where the <code>dll</code> ends up after its copied once. AFAIK we copy things around multiple times into multiple locations.</p>",
        "id": 226656659,
        "sender_full_name": "nagisa",
        "timestamp": 1613569230
    },
    {
        "content": "<p>So adjusting the function that copies things to check for sibling <code>.pdb</code> file and copying that over as well should eventually just work out.</p>",
        "id": 226656713,
        "sender_full_name": "nagisa",
        "timestamp": 1613569265
    },
    {
        "content": "<p>It seems unfortunately that we don't have a separate function for \"copying dylib files to a new location\".</p>",
        "id": 226656873,
        "sender_full_name": "rylev",
        "timestamp": 1613569343
    },
    {
        "content": "<p>This is all happening inline</p>",
        "id": 226656884,
        "sender_full_name": "rylev",
        "timestamp": 1613569350
    },
    {
        "content": "<p>So we'll have to find the mutliple places where the dylibs are being copied</p>",
        "id": 226656914,
        "sender_full_name": "rylev",
        "timestamp": 1613569364
    },
    {
        "content": "<p>Yeah, that kind of duplication is unfortunately relatively common. Happy to receive PRs, but IIRC some of them are also subtly different.</p>",
        "id": 226657008,
        "sender_full_name": "simulacrum",
        "timestamp": 1613569421
    },
    {
        "content": "<p>Most or all should have the is_dylib call though.</p>",
        "id": 226657047,
        "sender_full_name": "simulacrum",
        "timestamp": 1613569440
    },
    {
        "content": "<p>K I think I got it working. PR incoming</p>",
        "id": 226658912,
        "sender_full_name": "rylev",
        "timestamp": 1613570266
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/82218\">https://github.com/rust-lang/rust/pull/82218</a></p>",
        "id": 226660559,
        "sender_full_name": "rylev",
        "timestamp": 1613570934
    }
]