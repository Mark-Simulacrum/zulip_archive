[
    {
        "content": "<p>it explicitly doesn't do that because the pathkinds are different</p>",
        "id": 208414675,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598671759
    },
    {
        "content": "<p>if it produces a different <code>CrateNum</code>, something is deeply broken</p>",
        "id": 208414676,
        "sender_full_name": "eddyb",
        "timestamp": 1598671760
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> doesn't matter</p>",
        "id": 208414682,
        "sender_full_name": "eddyb",
        "timestamp": 1598671777
    },
    {
        "content": "<p>yeah, it has both cratenum 2 and 18</p>",
        "id": 208414684,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598671780
    },
    {
        "content": "<p>if <code>std</code> depends on <code>alloc</code> and I go add <code>extern crate alloc;</code>, it doesn't duplicate <code>alloc</code></p>",
        "id": 208414690,
        "sender_full_name": "eddyb",
        "timestamp": 1598671797
    },
    {
        "content": "<p>none of the types would match with <code>std</code> reexports, for example</p>",
        "id": 208414736,
        "sender_full_name": "eddyb",
        "timestamp": 1598671821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> what are the <code>rlib</code> paths?</p>",
        "id": 208414739,
        "sender_full_name": "eddyb",
        "timestamp": 1598671827
    },
    {
        "content": "<p>makes sense</p>",
        "id": 208414740,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598671829
    },
    {
        "content": "<p>maybe it loads a different file</p>",
        "id": 208414742,
        "sender_full_name": "eddyb",
        "timestamp": 1598671834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Difference.20between.20.60PathKind.3A.3ADependency.60.20and.20.60Crate.60/near/208414739\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> what are the <code>rlib</code> paths?</p>\n</blockquote>\n<p>how would I find that out?</p>",
        "id": 208414745,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598671841
    },
    {
        "content": "<p>debug logging? wherever you could see the <code>CrateNum</code>s should be close enough</p>",
        "id": 208414748,
        "sender_full_name": "eddyb",
        "timestamp": 1598671860
    },
    {
        "content": "<p>in fact it might even be an <code>info!</code></p>",
        "id": 208414752,
        "sender_full_name": "eddyb",
        "timestamp": 1598671865
    },
    {
        "content": "<p>this is the bit that doesn't load the existing CrateNum: <a href=\"https://github.com/rust-lang/rust/blob/d77eff21b97886a0829b784100846daf59df2f39/src/librustc_metadata/creader.rs#L274\">https://github.com/rust-lang/rust/blob/d77eff21b97886a0829b784100846daf59df2f39/src/librustc_metadata/creader.rs#L274</a></p>",
        "id": 208414756,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598671884
    },
    {
        "content": "<p><code>echo 'fn main() {}' | env RUSTC_LOG=rustc_metadata=info rustc -</code> works for me</p>",
        "id": 208414761,
        "sender_full_name": "eddyb",
        "timestamp": 1598671905
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  name: core\n  cnum: 2\n  hash: 26a8010bdbcd676f\n  reqd: Explicit\n   rlib: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ceeab66e7ca607ac.rlib\n  name: rustc_std_workspace_core\n   rlib: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-b51f543946894ff4.rlib\n</code></pre></div>",
        "id": 208414802,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598671936
    },
    {
        "content": "<p>wait what that second one... isn't that second one a dummy dependency node?</p>",
        "id": 208414810,
        "sender_full_name": "eddyb",
        "timestamp": 1598671980
    },
    {
        "content": "<p>I just did <code>grep core</code>, not sure if it's relevant</p>",
        "id": 208414814,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598671993
    },
    {
        "content": "<p>find the cnum: 18</p>",
        "id": 208414819,
        "sender_full_name": "eddyb",
        "timestamp": 1598672013
    },
    {
        "content": "<p>I don't know how</p>",
        "id": 208414823,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672020
    },
    {
        "content": "<p>I can't replicate this outside of libproc_macro</p>",
        "id": 208414825,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672026
    },
    {
        "content": "<p>how did you find <code>cnum: 2</code>?</p>",
        "id": 208414826,
        "sender_full_name": "eddyb",
        "timestamp": 1598672028
    },
    {
        "content": "<p>the command you gave, but that only prints out cnum up to 5</p>",
        "id": 208414828,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672039
    },
    {
        "content": "<p>(which is <code>alloc</code>)</p>",
        "id": 208414867,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672048
    },
    {
        "content": "<p>the command I gave is proof that it works</p>",
        "id": 208414868,
        "sender_full_name": "eddyb",
        "timestamp": 1598672049
    },
    {
        "content": "<p>the <code>RUSTC_LOG=...</code> part is the relevant one</p>",
        "id": 208414872,
        "sender_full_name": "eddyb",
        "timestamp": 1598672067
    },
    {
        "content": "<p>let me try adding that when documenting</p>",
        "id": 208414878,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672077
    },
    {
        "content": "<p>I'm just giving it a minimal Rust program to test it</p>",
        "id": 208414880,
        "sender_full_name": "eddyb",
        "timestamp": 1598672085
    },
    {
        "content": "<p>oh lol I added an explicit panic just before it prints that</p>",
        "id": 208414895,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672135
    },
    {
        "content": "<p>one sec, need to rebuild</p>",
        "id": 208414896,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672138
    },
    {
        "content": "<p>hah <a href=\"https://github.com/rust-lang/rust/tree/master/library/rustc-std-workspace-core\">https://github.com/rust-lang/rust/tree/master/library/rustc-std-workspace-core</a></p>",
        "id": 208414940,
        "sender_full_name": "eddyb",
        "timestamp": 1598672170
    },
    {
        "content": "<p>I didn't realized it was a full reexport</p>",
        "id": 208414945,
        "sender_full_name": "eddyb",
        "timestamp": 1598672191
    },
    {
        "content": "<p>it doesn't print it O_o</p>",
        "id": 208414956,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672239
    },
    {
        "content": "<p>it goes exactly up to 17</p>",
        "id": 208414957,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672243
    },
    {
        "content": "<p>here this might be helpful though</p>\n<div class=\"codehilite\"><pre><span></span><code>2020-08-29T03:36:59.362904Z  INFO rustc_metadata::creader: resolving crate `core`\n2020-08-29T03:36:59.362940Z  INFO rustc_metadata::creader: falling back to a load\n2020-08-29T03:36:59.362951Z  INFO rustc_metadata::locator: lib candidate: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ceeab66e7ca607ac.rlib\n2020-08-29T03:36:59.363001Z  INFO rustc_metadata::locator: rlib reading metadata from: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ceeab66e7ca607ac.rlib\n2020-08-29T03:36:59.363135Z  INFO rustc_metadata::creader: register crate `core` (cnum = 18. private_dep = false)\n</code></pre></div>",
        "id": 208414963,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672260
    },
    {
        "content": "<p>same rlib as cnum 2</p>",
        "id": 208415001,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672283
    },
    {
        "content": "<p>that should be it</p>",
        "id": 208415003,
        "sender_full_name": "eddyb",
        "timestamp": 1598672283
    },
    {
        "content": "<p>\"falling back to a load\" is the problem, I guess</p>",
        "id": 208415006,
        "sender_full_name": "eddyb",
        "timestamp": 1598672297
    },
    {
        "content": "<p>yeah</p>",
        "id": 208415009,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672307
    },
    {
        "content": "<p>it's the exact same file path?</p>",
        "id": 208415011,
        "sender_full_name": "eddyb",
        "timestamp": 1598672323
    },
    {
        "content": "<p>I didn't realize we duplicated dependencies like that sometimes. it doesn't feel right</p>",
        "id": 208415018,
        "sender_full_name": "eddyb",
        "timestamp": 1598672341
    },
    {
        "content": "<p><code>/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ceeab66e7ca607ac.rlib</code> just now and<br>\n<code>/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ceeab66e7ca607ac.rlib</code> for your sample program before</p>",
        "id": 208415022,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672358
    },
    {
        "content": "<p>so yeah exactly the same</p>",
        "id": 208415024,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672365
    },
    {
        "content": "<p>use multiple lines so they line up</p>",
        "id": 208415026,
        "sender_full_name": "eddyb",
        "timestamp": 1598672373
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> wait no, ignore the sample program, it has nothing to do with this</p>",
        "id": 208415071,
        "sender_full_name": "eddyb",
        "timestamp": 1598672410
    },
    {
        "content": "<p>you need to compare <code>cnum = 2</code> <em>in your thing</em> with <code>cnum = 18</code></p>",
        "id": 208415073,
        "sender_full_name": "eddyb",
        "timestamp": 1598672422
    },
    {
        "content": "<p>oh you're right it's different<br>\n<code>/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libcore-622c4373f195cbb7.rmeta</code></p>",
        "id": 208415081,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672439
    },
    {
        "content": "<p>this is when documenting libproc_macro</p>\n<div class=\"codehilite\"><pre><span></span><code>  name: core\n  cnum: 2\n  hash: 335b86a5165f5805\n  reqd: Explicit\n   rmeta: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libcore-622c4373f195cbb7.rmeta\n</code></pre></div>",
        "id": 208415082,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672455
    },
    {
        "content": "<p>why are they different <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 208415086,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672473
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> anyway you probably need <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>, I just wanted to see how far I could get before I got beyond my limited knowledge of this area <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 208415087,
        "sender_full_name": "eddyb",
        "timestamp": 1598672474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> probably because you do have a sysroot heh</p>",
        "id": 208415089,
        "sender_full_name": "eddyb",
        "timestamp": 1598672486
    },
    {
        "content": "<p>wait <em>the hash is different</em>?!</p>",
        "id": 208415094,
        "sender_full_name": "eddyb",
        "timestamp": 1598672507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> can you <code>rm -rf build/*/stage1*</code> and try again the thing that fails?</p>",
        "id": 208415138,
        "sender_full_name": "eddyb",
        "timestamp": 1598672542
    },
    {
        "content": "<p>you shouldn't have the same crate with different hashes at the same time</p>",
        "id": 208415143,
        "sender_full_name": "eddyb",
        "timestamp": 1598672571
    },
    {
        "content": "<p>will take a while but sure</p>",
        "id": 208415145,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672571
    },
    {
        "content": "<p>no, it's stage1, should be almost instant</p>",
        "id": 208415147,
        "sender_full_name": "eddyb",
        "timestamp": 1598672579
    },
    {
        "content": "<p>ah ok it just rebuilds libstd</p>",
        "id": 208415152,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672595
    },
    {
        "content": "<p>maybe this is that x.py bug I keep seeing where it's not rebuilding things build by a compiler, even if said compiler changes</p>",
        "id": 208415160,
        "sender_full_name": "eddyb",
        "timestamp": 1598672628
    },
    {
        "content": "<p>but I wouldn't expect it to keep stale hashes around</p>",
        "id": 208415202,
        "sender_full_name": "eddyb",
        "timestamp": 1598672645
    },
    {
        "content": "<p>(this is a bad time to mention I've been using <code>--keep-stage 1</code> <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span> )</p>",
        "id": 208415204,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672651
    },
    {
        "content": "<p>but it was broken before that</p>",
        "id": 208415207,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672664
    },
    {
        "content": "<p>please do yourself a favor and don't introduce extreme failure modes into your setup like that</p>",
        "id": 208415210,
        "sender_full_name": "eddyb",
        "timestamp": 1598672678
    },
    {
        "content": "<p>it takes like a minute to build libstd</p>",
        "id": 208415212,
        "sender_full_name": "eddyb",
        "timestamp": 1598672686
    },
    {
        "content": "<p>not worth it</p>",
        "id": 208415220,
        "sender_full_name": "eddyb",
        "timestamp": 1598672707
    },
    {
        "content": "<p>ok I wiped stage1/ and this is the new output for cnum 18:</p>\n<div class=\"codehilite\"><pre><span></span><code>2020-08-29T03:44:33.049855Z  INFO rustc_metadata::creader: resolving crate `core`\n2020-08-29T03:44:33.049891Z  INFO rustc_metadata::creader: falling back to a load\n2020-08-29T03:44:33.049901Z  INFO rustc_metadata::locator: lib candidate: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ceeab66e7ca607ac.rlib\n2020-08-29T03:44:33.049963Z  INFO rustc_metadata::locator: rlib reading metadata from: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-ceeab66e7ca607ac.rlib\n</code></pre></div>\n\n\n<p>and this is for cnum 2:</p>\n<div class=\"codehilite\"><pre><span></span><code>  name: core\n  cnum: 2\n  hash: 335b86a5165f5805\n  reqd: Explicit\n   rmeta: /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libcore-622c4373f195cbb7.rmeta\n</code></pre></div>",
        "id": 208415222,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672728
    },
    {
        "content": "<p>so still different hashes</p>",
        "id": 208415226,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672750
    },
    {
        "content": "<p>okay gist the <code>ls -l</code> output for each of those directories they're in</p>",
        "id": 208415227,
        "sender_full_name": "eddyb",
        "timestamp": 1598672756
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> wait, <code>stage1</code> or <code>stage1*</code>?</p>",
        "id": 208415267,
        "sender_full_name": "eddyb",
        "timestamp": 1598672782
    },
    {
        "content": "<p>also, did you remove <code>--keep-stage</code>?</p>",
        "id": 208415270,
        "sender_full_name": "eddyb",
        "timestamp": 1598672791
    },
    {
        "content": "<p>there's no point looking without having done this cleanly first</p>",
        "id": 208415274,
        "sender_full_name": "eddyb",
        "timestamp": 1598672801
    },
    {
        "content": "<p>I did remove it</p>",
        "id": 208415275,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672802
    },
    {
        "content": "<p>umm I wiped <code>stage1*</code></p>",
        "id": 208415277,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672816
    },
    {
        "content": "<p>okay good</p>",
        "id": 208415279,
        "sender_full_name": "eddyb",
        "timestamp": 1598672820
    },
    {
        "content": "<p><code>ls -l</code> time then <em>sigh</em></p>",
        "id": 208415282,
        "sender_full_name": "eddyb",
        "timestamp": 1598672828
    },
    {
        "content": "<p>maybe we're doing some weird renaming when copying, but, ugh</p>",
        "id": 208415286,
        "sender_full_name": "eddyb",
        "timestamp": 1598672847
    },
    {
        "content": "<p>cnum 18 comes first in the gist: <a href=\"https://gist.github.com/jyn514/38d8ad6910af01cfe7e242ac9ce239d5\">https://gist.github.com/jyn514/38d8ad6910af01cfe7e242ac9ce239d5</a></p>",
        "id": 208415291,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672867
    },
    {
        "content": "<p>wait why are there 3 directories?</p>",
        "id": 208415335,
        "sender_full_name": "eddyb",
        "timestamp": 1598672905
    },
    {
        "content": "<p>(I'd also use separate files in the gist to make it easier to stare at)</p>",
        "id": 208415337,
        "sender_full_name": "eddyb",
        "timestamp": 1598672919
    },
    {
        "content": "<p>oh oops I copy pasted too much</p>",
        "id": 208415338,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672930
    },
    {
        "content": "<p>let me just redo it</p>",
        "id": 208415339,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598672933
    },
    {
        "content": "<p>(you can edit it fwiw)</p>",
        "id": 208415342,
        "sender_full_name": "eddyb",
        "timestamp": 1598672943
    },
    {
        "content": "<p>okay, <code>622c4373f195cbb7</code> looks like... a <code>cargo check</code> dependency??</p>",
        "id": 208415347,
        "sender_full_name": "eddyb",
        "timestamp": 1598672971
    },
    {
        "content": "<p>the other one seems to be the real one</p>",
        "id": 208415352,
        "sender_full_name": "eddyb",
        "timestamp": 1598672999
    },
    {
        "content": "<p>updated</p>",
        "id": 208415392,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673012
    },
    {
        "content": "<p>there's two copies of each crate, that's weird</p>",
        "id": 208415393,
        "sender_full_name": "eddyb",
        "timestamp": 1598673018
    },
    {
        "content": "<p>I can wipe it again if it helps</p>",
        "id": 208415397,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673043
    },
    {
        "content": "<p><a href=\"https://gist.github.com/jyn514/38d8ad6910af01cfe7e242ac9ce239d5#file-stage1-std-txt-L3-L19\">https://gist.github.com/jyn514/38d8ad6910af01cfe7e242ac9ce239d5#file-stage1-std-txt-L3-L19</a></p>\n<p><a href=\"https://gist.github.com/jyn514/38d8ad6910af01cfe7e242ac9ce239d5#file-stage1-std-txt-L88-L110\">https://gist.github.com/jyn514/38d8ad6910af01cfe7e242ac9ce239d5#file-stage1-std-txt-L88-L110</a></p>",
        "id": 208415398,
        "sender_full_name": "eddyb",
        "timestamp": 1598673047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> this might be <code>cargo doc</code> doing something weird?</p>",
        "id": 208415403,
        "sender_full_name": "eddyb",
        "timestamp": 1598673072
    },
    {
        "content": "<p>ugh</p>",
        "id": 208415404,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673084
    },
    {
        "content": "<p>well we are resolving all crates at startup</p>",
        "id": 208415405,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673099
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustdoc/core.rs#L436\">https://github.com/rust-lang/rust/blob/master/src/librustdoc/core.rs#L436</a></p>",
        "id": 208415407,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673112
    },
    {
        "content": "<p>note how some are <code>:44</code> and <code>:43</code> (the minute)</p>",
        "id": 208415408,
        "sender_full_name": "eddyb",
        "timestamp": 1598673113
    },
    {
        "content": "<p>ah interesting</p>",
        "id": 208415446,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673125
    },
    {
        "content": "<p>so the more <code>cargo check</code>-like ones are later</p>",
        "id": 208415449,
        "sender_full_name": "eddyb",
        "timestamp": 1598673141
    },
    {
        "content": "<p>:44 would be <code>doc</code> then maybe?</p>",
        "id": 208415450,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673142
    },
    {
        "content": "<p>yeah</p>",
        "id": 208415453,
        "sender_full_name": "eddyb",
        "timestamp": 1598673148
    },
    {
        "content": "<p>that means <code>622c4373f195cbb7</code> is the doc hash for core</p>",
        "id": 208415465,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673163
    },
    {
        "content": "<p>can you wipe again then do <code>./x.py build --stage 1</code>, take the <code>ls -l</code> of the <code>.../deps</code> dir, then do the doc thing, then take another <code>ls -l</code>?</p>",
        "id": 208415474,
        "sender_full_name": "eddyb",
        "timestamp": 1598673195
    },
    {
        "content": "<p>sure</p>",
        "id": 208415477,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673214
    },
    {
        "content": "<p>also, dump the <code>--extern</code> paths <code>rustdoc</code> receives, I bet it will have some of the <code>cargo check</code>-like crates in it</p>",
        "id": 208415481,
        "sender_full_name": "eddyb",
        "timestamp": 1598673234
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> on the bright side, I don't think anything outside libstd can hit this <code>cargo doc</code> situation</p>",
        "id": 208415551,
        "sender_full_name": "eddyb",
        "timestamp": 1598673333
    },
    {
        "content": "<p>except maybe with <code>-Z build-std</code> lol</p>",
        "id": 208415556,
        "sender_full_name": "eddyb",
        "timestamp": 1598673346
    },
    {
        "content": "<p>(you can play around with <code>cargo doc -Z build-std -v</code> if you want, on some empty Cargo package, and see what it's trying to do)</p>",
        "id": 208415600,
        "sender_full_name": "eddyb",
        "timestamp": 1598673385
    },
    {
        "content": "<p>it would be amazing to replicate on something smaller than 'all of the standard library' haha</p>",
        "id": 208415608,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673418
    },
    {
        "content": "<blockquote>\n<p>take another ls -l</p>\n</blockquote>\n<p>of <code>.../deps</code>?</p>",
        "id": 208415625,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673455
    },
    {
        "content": "<p>yeah</p>",
        "id": 208415626,
        "sender_full_name": "eddyb",
        "timestamp": 1598673459
    },
    {
        "content": "<p><a href=\"https://gist.github.com/jyn514/6773f462350fe0fbad004a7af1b3ffd7\">https://gist.github.com/jyn514/6773f462350fe0fbad004a7af1b3ffd7</a></p>",
        "id": 208415667,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673490
    },
    {
        "content": "<p>oh let me get htat --extern</p>",
        "id": 208415670,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673505
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Difference.20between.20.60PathKind.3A.3ADependency.60.20and.20.60Crate.60/near/208415608\">said</a>:</p>\n<blockquote>\n<p>it would be amazing to replicate on something smaller than 'all of the standard library' haha</p>\n</blockquote>\n<p>it's picking up the true libcore from the sysroot while <code>cargo doc</code> injects a different one, so I don't think it's possible. well, other than passing <code>--sysroot</code> explicitly in <code>RUSTDOCFLAGS</code> or w/e</p>",
        "id": 208415671,
        "sender_full_name": "eddyb",
        "timestamp": 1598673512
    },
    {
        "content": "<p>ok :/</p>",
        "id": 208415676,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673533
    },
    {
        "content": "<p>I guess you could have a <code>run-make</code> test that replicates it at a small scale</p>",
        "id": 208415684,
        "sender_full_name": "eddyb",
        "timestamp": 1598673559
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  process didn&#39;t exit successfully: `/home/joshua/rustc/build/bootstrap/debug/rustdoc --edition=2018 --crate-type lib --crate-name proc_macro library/proc_macro/src/lib.rs --target x86_64-unknown-linux-gnu -o /home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/doc --error-format=json --json=diagnostic-rendered-ansi --markdown-css rust.css --markdown-no-toc -Z unstable-options --resource-suffix 1.47.0 --index-page /home/joshua/rustc/src/doc/index.md -L dependency=/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps -L dependency=/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/release/deps --extern std=/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libstd-3fa6ff265549ac26.rmeta -Z treat-err-as-bug -Dwarnings -Winvalid_codeblock_attributes --crate-version 1.47.0-dev` (exit code: 1)\n</code></pre></div>",
        "id": 208415685,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673568
    },
    {
        "content": "<p>I think the relevant bits are</p>\n<div class=\"codehilite\"><pre><span></span><code>-L dependency=/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps\n-L dependency=/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/release/deps\n--extern std=/home/joshua/rustc/build/x86_64-unknown-linux-gnu/stage1-std/x86_64-unknown-linux-gnu/release/deps/libstd-3fa6ff265549ac26.rmeta\n</code></pre></div>",
        "id": 208415691,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673582
    },
    {
        "content": "<p>yeaaaaaaah</p>",
        "id": 208415693,
        "sender_full_name": "eddyb",
        "timestamp": 1598673598
    },
    {
        "content": "<p>it's <code>cargo check</code>-ing it up</p>",
        "id": 208415735,
        "sender_full_name": "eddyb",
        "timestamp": 1598673607
    },
    {
        "content": "<p>which is normally fine because that would still depend on the sysroot libstd</p>",
        "id": 208415752,
        "sender_full_name": "eddyb",
        "timestamp": 1598673625
    },
    {
        "content": "<p>but we're building libstd lol</p>",
        "id": 208415754,
        "sender_full_name": "eddyb",
        "timestamp": 1598673632
    },
    {
        "content": "<p>does rustdoc <em>need</em> those <code>cargo check</code> outputs?</p>",
        "id": 208415766,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673666
    },
    {
        "content": "<p>it's the only things it sees</p>",
        "id": 208415767,
        "sender_full_name": "eddyb",
        "timestamp": 1598673676
    },
    {
        "content": "<p>what triggers loading the sysroot <code>libcore-ceeab66e7ca607ac.rlib</code>?</p>",
        "id": 208415771,
        "sender_full_name": "eddyb",
        "timestamp": 1598673686
    },
    {
        "content": "<p>because that's what shouldn't happen</p>",
        "id": 208415779,
        "sender_full_name": "eddyb",
        "timestamp": 1598673708
    },
    {
        "content": "<p>is that cnum 18? resolving <code>crate::usize::MAX</code> from a re-export of <code>core</code> from within proc-macro</p>",
        "id": 208415780,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673719
    },
    {
        "content": "<p>are you replacing <code>crate</code> with <code>core</code>?</p>",
        "id": 208415822,
        "sender_full_name": "eddyb",
        "timestamp": 1598673759
    },
    {
        "content": "<p>hold on getting the debug logs</p>",
        "id": 208415823,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673760
    },
    {
        "content": "<p>inside <code>rustdoc</code>, I mean</p>",
        "id": 208415826,
        "sender_full_name": "eddyb",
        "timestamp": 1598673768
    },
    {
        "content": "<p>no, rustdoc leaves <code>crate</code> as is</p>",
        "id": 208415828,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673774
    },
    {
        "content": "<p>or are you passing the right contextual information for <code>rustc_resolve</code> to know where to look?</p>",
        "id": 208415831,
        "sender_full_name": "eddyb",
        "timestamp": 1598673785
    },
    {
        "content": "<p>because it's different depending on which crate it came from</p>",
        "id": 208415832,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673785
    },
    {
        "content": "<p>the second, we tell it where the original module was</p>",
        "id": 208415833,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673801
    },
    {
        "content": "<p>okay so that shouldn't try to load a crate named <code>core</code> again</p>",
        "id": 208415835,
        "sender_full_name": "eddyb",
        "timestamp": 1598673812
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>2020-08-29T04:03:12.556282Z DEBUG rustdoc::passes::collect_intra_doc_links: resolving crate::usize::MAX as a macro in the module DefId(2:5001 ~ core[8913]::iter[0]::traits[0]::iterator[0])\n2020-08-29T04:03:12.565204Z DEBUG rustc_resolve::diagnostics: looking up 2018 suggestions for usize#0 with span library/proc_macro/src/lib.rs:1:1: 1:1 (#0)\n</code></pre></div>",
        "id": 208415837,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673816
    },
    {
        "content": "<p>lmao</p>",
        "id": 208415838,
        "sender_full_name": "eddyb",
        "timestamp": 1598673826
    },
    {
        "content": "<p>suggestions strike again</p>",
        "id": 208415843,
        "sender_full_name": "eddyb",
        "timestamp": 1598673834
    },
    {
        "content": "<p>yeah it's insult to injury lol</p>",
        "id": 208415879,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673844
    },
    {
        "content": "<p>no</p>",
        "id": 208415881,
        "sender_full_name": "eddyb",
        "timestamp": 1598673847
    },
    {
        "content": "<p>we literally don't use the suggestions</p>",
        "id": 208415882,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673849
    },
    {
        "content": "<p>it's how the bad thing happens</p>",
        "id": 208415885,
        "sender_full_name": "eddyb",
        "timestamp": 1598673855
    },
    {
        "content": "<p>that's why it can load the sysroot core</p>",
        "id": 208415888,
        "sender_full_name": "eddyb",
        "timestamp": 1598673863
    },
    {
        "content": "<p>you need to turn it off or something</p>",
        "id": 208415894,
        "sender_full_name": "eddyb",
        "timestamp": 1598673883
    },
    {
        "content": "<p>also why is it resolving that as a macro?</p>",
        "id": 208415895,
        "sender_full_name": "eddyb",
        "timestamp": 1598673895
    },
    {
        "content": "<p>rustdoc tries all namespaces</p>",
        "id": 208415896,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673903
    },
    {
        "content": "<p>it doesn't have any context to know which to look in</p>",
        "id": 208415901,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673915
    },
    {
        "content": "<p>okay yeah disable suggestion logic, you'll be fine</p>",
        "id": 208415904,
        "sender_full_name": "eddyb",
        "timestamp": 1598673929
    },
    {
        "content": "<p>how do I do that haha</p>",
        "id": 208415907,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673939
    },
    {
        "content": "<p>special case rustdoc in resolve some more?</p>",
        "id": 208415909,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673946
    },
    {
        "content": "<p><em>shrug</em> I don't know more than you, look at the code? and/or wait for <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>  to see this thread</p>",
        "id": 208415951,
        "sender_full_name": "eddyb",
        "timestamp": 1598673964
    },
    {
        "content": "<p>there might already be a way to make it not load new crates</p>",
        "id": 208415957,
        "sender_full_name": "eddyb",
        "timestamp": 1598673977
    },
    {
        "content": "<p>the current code looks like it unconditionally loads suggestions</p>",
        "id": 208415967,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598673994
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/d77eff21b97886a0829b784100846daf59df2f39/src/librustc_resolve/lib.rs#L2389\">https://github.com/rust-lang/rust/blob/d77eff21b97886a0829b784100846daf59df2f39/src/librustc_resolve/lib.rs#L2389</a></p>",
        "id": 208415979,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674028
    },
    {
        "content": "<p>where is the <code>debug!</code>? I can't find it in the source</p>",
        "id": 208415987,
        "sender_full_name": "eddyb",
        "timestamp": 1598674072
    },
    {
        "content": "<p>I added it locally</p>",
        "id": 208416024,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674084
    },
    {
        "content": "<p>let me gist the diff</p>",
        "id": 208416027,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674089
    },
    {
        "content": "<p><a href=\"https://gist.github.com/jyn514/703ad7690c287a2680c71be1931c9276\">https://gist.github.com/jyn514/703ad7690c287a2680c71be1931c9276</a></p>",
        "id": 208416039,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674138
    },
    {
        "content": "<p>I think the reason this involves an <code>Option</code> is so it can fail gracefully <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_resolve/diagnostics.rs#L890\">https://github.com/rust-lang/rust/blob/master/src/librustc_resolve/diagnostics.rs#L890</a></p>",
        "id": 208416040,
        "sender_full_name": "eddyb",
        "timestamp": 1598674140
    },
    {
        "content": "<p><code>self.maybe_resolve_crate(name, CrateDepKind::Explicit, None).ok()</code></p>\n<p>this is what makes it load a different sysroot I think, the <code>None</code></p>",
        "id": 208416103,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674224
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/creader.rs#L468\">https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/creader.rs#L468</a></p>",
        "id": 208416112,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674285
    },
    {
        "content": "<p>that's fine, <code>dep</code> would indicate it's a dependency of a different crate</p>",
        "id": 208416118,
        "sender_full_name": "eddyb",
        "timestamp": 1598674310
    },
    {
        "content": "<p>hmm, so</p>",
        "id": 208416119,
        "sender_full_name": "eddyb",
        "timestamp": 1598674318
    },
    {
        "content": "<p>it does actually succeed, why does that break anything?</p>",
        "id": 208416156,
        "sender_full_name": "eddyb",
        "timestamp": 1598674329
    },
    {
        "content": "<p>because the resolver was cloned</p>",
        "id": 208416157,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> does this work if you put the macro namespace last?</p>",
        "id": 208416158,
        "sender_full_name": "eddyb",
        "timestamp": 1598674345
    },
    {
        "content": "<p>this might be some weirdness about macro name resolution</p>",
        "id": 208416162,
        "sender_full_name": "eddyb",
        "timestamp": 1598674370
    },
    {
        "content": "<p>trying now</p>",
        "id": 208416176,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674419
    },
    {
        "content": "<p>oh ugh borrow errors</p>",
        "id": 208416180,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674426
    },
    {
        "content": "<p>aaaah I didn't scroll around enough</p>",
        "id": 208416222,
        "sender_full_name": "eddyb",
        "timestamp": 1598674454
    },
    {
        "content": "<p>I missed the <code>#[rustc_builtin_macro]</code></p>",
        "id": 208416224,
        "sender_full_name": "eddyb",
        "timestamp": 1598674460
    },
    {
        "content": "<p>it's not that it was cloned or anything like that. this is like lang items</p>",
        "id": 208416227,
        "sender_full_name": "eddyb",
        "timestamp": 1598674469
    },
    {
        "content": "<p>you're loading two crates that each claim a builtin</p>",
        "id": 208416230,
        "sender_full_name": "eddyb",
        "timestamp": 1598674489
    },
    {
        "content": "<p>yes</p>",
        "id": 208416237,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674504
    },
    {
        "content": "<p>also <em>wow</em> <code>RUSTDOC_LOG=rustdoc::core</code> is spammy</p>",
        "id": 208416246,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674531
    },
    {
        "content": "<p>resolving macros last did not help</p>",
        "id": 208416252,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674553
    },
    {
        "content": "<p>okay I finally understand now, this is the sequence of events:</p>\n<ol start=\"0\">\n<li><code>x.py build --stage 1</code> builds the standard library and crates a sysroot</li>\n<li><code>cargo doc</code> does something like <code>cargo check</code> to create <code>rmeta</code>s for all the crates (unrelated to what was built above)</li>\n<li>the <code>cargo check</code>-like <code>libcore-*.rmeta</code> is loaded as a transitive dependency <em>and claims ownership</em> of builtin macros</li>\n<li><code>rustdoc</code> later tries to resolve some path in a doc link</li>\n<li>suggestion logic fires and loads extern prelude crates by name</li>\n<li>the sysroot <code>libcore-*.rlib</code> is loaded and <em>fails to claim ownership</em> of builtin macros</li>\n</ol>",
        "id": 208416365,
        "sender_full_name": "eddyb",
        "timestamp": 1598674736
    },
    {
        "content": "<p>IMO the problem is either 4 or 5</p>",
        "id": 208416399,
        "sender_full_name": "eddyb",
        "timestamp": 1598674800
    },
    {
        "content": "<p>not one or two, it's fine to use the <code>cargo check</code>-like rmetas?</p>",
        "id": 208416443,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674843
    },
    {
        "content": "<p>yes, it's just like when you run <code>x.py check</code></p>",
        "id": 208416448,
        "sender_full_name": "eddyb",
        "timestamp": 1598674867
    },
    {
        "content": "<blockquote>\n<p>loads extern prelude crates by name</p>\n</blockquote>\n<p>maybe this is the issue? it should use the DefId instead? since the link starts with <code>crate</code> it has to be getting the name from the def id in the first place</p>",
        "id": 208416461,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598674917
    },
    {
        "content": "<p>nah it's a suggestion</p>",
        "id": 208416498,
        "sender_full_name": "eddyb",
        "timestamp": 1598674934
    },
    {
        "content": "<p>it's just looking for stuff</p>",
        "id": 208416500,
        "sender_full_name": "eddyb",
        "timestamp": 1598674953
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> if you want you could make the error about <code>#[rustc_builtin_macro]</code> say which crate first took ownership of it, or at least use <code>Option</code> around the value, and <code>take</code>, instead of using <code>remove</code> around the whole entry, so you can have a different \"builtin macro registered twice\" error or something</p>",
        "id": 208416510,
        "sender_full_name": "eddyb",
        "timestamp": 1598675003
    },
    {
        "content": "<p>why does this only break rustdoc? why not <code>cargo check</code>?</p>",
        "id": 208416512,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675007
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Difference.20between.20.60PathKind.3A.3ADependency.60.20and.20.60Crate.60/near/208416510\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> if you want you could make the error about <code>#[rustc_builtin_macro]</code> say which crate first took ownership of it, or at least use <code>Option</code> around the value, and <code>take</code>, instead of using <code>remove</code> around the whole entry, so you can have a different \"builtin macro registered twice\" error or something</p>\n</blockquote>\n<p>yeah it would be very helpful to have a better error message</p>",
        "id": 208416515,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675034
    },
    {
        "content": "<p>or <em>would</em> this break cargo check if there were an unresolved import? let me try that</p>",
        "id": 208416556,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675066
    },
    {
        "content": "<p>nope, works fine</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0432]: unresolved import `std::u8::x`\n  --&gt; library/proc_macro/src/lib.rs:48:5\n   |\n48 | use std::u8::x;\n   |     ^^^^^^^^^^ no `x` in `u8`\n</code></pre></div>",
        "id": 208416563,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675128
    },
    {
        "content": "<p>is that with a dependency <code>libcore-*.rmeta</code> from the <code>cargo check</code>, and a sysroot in place?</p>",
        "id": 208416608,
        "sender_full_name": "eddyb",
        "timestamp": 1598675218
    },
    {
        "content": "<p>keep in mind <code>x.py check</code> runs at stage 0</p>",
        "id": 208416613,
        "sender_full_name": "eddyb",
        "timestamp": 1598675230
    },
    {
        "content": "<p>ahhh</p>",
        "id": 208416615,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675234
    },
    {
        "content": "<p>ok, it's not possible to replicate this with <code>build</code></p>",
        "id": 208416619,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675265
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> hopefully this helps <a href=\"https://github.com/rust-lang/rust/pull/75176#issuecomment-683234468\">https://github.com/rust-lang/rust/pull/75176#issuecomment-683234468</a></p>",
        "id": 208416624,
        "sender_full_name": "eddyb",
        "timestamp": 1598675275
    },
    {
        "content": "<p>it will build the stage 0 artifacts before it can build stage 1</p>",
        "id": 208416625,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675276
    },
    {
        "content": "<p>and give the error there</p>",
        "id": 208416626,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675280
    },
    {
        "content": "<p>not sure how you would run <code>x.py check --stage 1</code> anyway lol</p>",
        "id": 208416664,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675308
    },
    {
        "content": "<p>it might be possible to trigger this at stage 0</p>",
        "id": 208416666,
        "sender_full_name": "eddyb",
        "timestamp": 1598675319
    },
    {
        "content": "<p>but you have to have the right sysroot and idk if we set it</p>",
        "id": 208416668,
        "sender_full_name": "eddyb",
        "timestamp": 1598675328
    },
    {
        "content": "<p>anyway I found the thing that was broken for a while due to speculative crate loading for suggestions</p>",
        "id": 208416677,
        "sender_full_name": "eddyb",
        "timestamp": 1598675399
    },
    {
        "content": "<p>(i.e. I linked <a href=\"https://github.com/rust-lang/rust/issues/74071\">#74071</a> which fixed <a href=\"https://github.com/rust-lang/rust/issues/55103\">#55103</a> and <a href=\"https://github.com/rust-lang/rust/issues/56590\">#56590</a>)</p>",
        "id": 208416724,
        "sender_full_name": "eddyb",
        "timestamp": 1598675434
    },
    {
        "content": "<p>if you look at that PR, it made various sanity checks into <code>return Err(...)</code> instead of directly erroring</p>",
        "id": 208416739,
        "sender_full_name": "eddyb",
        "timestamp": 1598675489
    },
    {
        "content": "<p>that sounds like it could work</p>",
        "id": 208416779,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675533
    },
    {
        "content": "<p>rustdoc has no problem just skipping <code>Res::Err</code></p>",
        "id": 208416780,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675540
    },
    {
        "content": "<p>problem is the \"acquire builtin macro\" logic might not know if the crate is loaded only for suggestions</p>",
        "id": 208416784,
        "sender_full_name": "eddyb",
        "timestamp": 1598675572
    },
    {
        "content": "<p>anyway simplest thing is just avoid the <code>rust_2018</code>-specific suggestion path if you're in rustdoc</p>",
        "id": 208416795,
        "sender_full_name": "eddyb",
        "timestamp": 1598675612
    },
    {
        "content": "<p>like stick an <code>if</code> around it</p>",
        "id": 208416797,
        "sender_full_name": "eddyb",
        "timestamp": 1598675621
    },
    {
        "content": "<p>and see if that fixes things</p>",
        "id": 208416800,
        "sender_full_name": "eddyb",
        "timestamp": 1598675626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> hope you don't mind me renaming this thread <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 208416887,
        "sender_full_name": "eddyb",
        "timestamp": 1598675762
    },
    {
        "content": "<p>yeah that's fine :)</p>",
        "id": 208416899,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675772
    },
    {
        "content": "<p>also I should've waited to ping petrochenkov until we ran out of deductions because threads like this can waste other ppl's time with the back &amp; forth</p>",
        "id": 208416902,
        "sender_full_name": "eddyb",
        "timestamp": 1598675797
    },
    {
        "content": "<p>special casing rustdoc now and if that works I can clean it up into the more principled fix</p>",
        "id": 208416903,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598675802
    },
    {
        "content": "<p>it worked !!! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 208417036,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598676099
    },
    {
        "content": "<p>Too long, didn't read, but eagerly reporting errors from anything speculative is bad.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/75176#issuecomment-683264508\">https://github.com/rust-lang/rust/pull/75176#issuecomment-683264508</a></p>",
        "id": 208425928,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1598694021
    }
]