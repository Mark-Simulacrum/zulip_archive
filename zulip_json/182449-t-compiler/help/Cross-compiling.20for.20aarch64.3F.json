[
    {
        "content": "<p>I used <code>rustup target add --toolchain nightly aarch64-unknown-linux-gnu</code>, and since clang knows how to compile for many architectures, I tried building some crates with <code>CC=clang-11 cargo +nightly build --target aarch64-unknown-linux-gnu</code>. However, this gave me errors when crates tried to compile C code, because clang seems to use the system headers, which don't work for aarch64. What's the Right Way to make this work?</p>",
        "id": 216832371,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605501992
    },
    {
        "content": "<p>I think you need to tell clang to cross compile too</p>",
        "id": 216833861,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605504202
    },
    {
        "content": "<p>Or the build scripts need to be fixed to detect TARGET and pass the right flags to clang</p>",
        "id": 216833874,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605504225
    },
    {
        "content": "<p>FWIW this is the main reason builds fail when cross compiled on <a href=\"http://docs.rs\">docs.rs</a>: <a href=\"https://internals.rust-lang.org/t/pre-rfc-build-only-one-target-by-default-on-docs-rs/12804\">https://internals.rust-lang.org/t/pre-rfc-build-only-one-target-by-default-on-docs-rs/12804</a></p>",
        "id": 216833930,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605504280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Cross-compiling.20for.20aarch64.3F/near/216833861\">said</a>:</p>\n<blockquote>\n<p>I think you need to tell clang to cross compile too</p>\n</blockquote>\n<p>The build scripts are doing so; the error messages show <code>clang-11</code> being invoked with <code>--target=aarch64-unknown-linux-gnu</code>.</p>",
        "id": 216836872,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605508461
    },
    {
        "content": "<p>Do you have the glibc and/or the c++ standard library for aarch64 around?</p>",
        "id": 216894942,
        "sender_full_name": "nagisa",
        "timestamp": 1605543966
    },
    {
        "content": "<p>oh</p>",
        "id": 216894998,
        "sender_full_name": "simulacrum",
        "timestamp": 1605543985
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I believe <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> was saying that clang and rust have different target triples</p>",
        "id": 216895055,
        "sender_full_name": "simulacrum",
        "timestamp": 1605544009
    },
    {
        "content": "<p>They do with respect to macOS, but I'm not sure about other platforms.</p>",
        "id": 216895109,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605544043
    },
    {
        "content": "<p>I also remember having trouble getting clang to use those libraries, even if installed. I found gcc to work significantly better in cross-compilation contexts, personally.</p>",
        "id": 216895155,
        "sender_full_name": "nagisa",
        "timestamp": 1605544065
    },
    {
        "content": "<p>My gut would be it not linking to the correct libraries as well. Would have to see any of the errors to know.</p>",
        "id": 216895316,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605544116
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Cross-compiling.20for.20aarch64.3F/near/216895316\">said</a>:</p>\n<blockquote>\n<p>My gut would be it not linking to the correct libraries as well. Would have to see any of the errors to know.</p>\n</blockquote>\n<p>Not getting as far as linking; I'm hitting compilation errors. Specifically, the system headers don't know how to set <code>__WORDSIZE</code> to 64 for aarch64, and many other things follow from that, like <code>uintptr_t</code> having the wrong size.</p>",
        "id": 216906692,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605548996
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Cross-compiling.20for.20aarch64.3F/near/216895155\">said</a>:</p>\n<blockquote>\n<p>I also remember having trouble getting clang to use those libraries, even if installed. I found gcc to work significantly better in cross-compilation contexts, personally.</p>\n</blockquote>\n<p>Interesting. I would have expected clang to Just Work more here, since it has built-in multi-target support.</p>",
        "id": 216906772,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605549020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Cross-compiling.20for.20aarch64.3F/near/216894942\">said</a>:</p>\n<blockquote>\n<p>Do you have the glibc and/or the c++ standard library for aarch64 around?</p>\n</blockquote>\n<p>No. I was expecting linking issues, but I didn't expect compilation issues.</p>\n<p>I wish that glibc installed headers that worked on any architecture.</p>",
        "id": 216906865,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605549071
    },
    {
        "content": "<p>Yeah, I shouldn't have used \"linking\", poor choice on my part. I meant more like \"using\".</p>",
        "id": 216907077,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605549196
    }
]