[
    {
        "content": "<p>I'm wondering what build --target option does. <a href=\"https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html\">https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html</a> says</p>\n<blockquote>\n<p>target targets to build</p>\n</blockquote>\n<p>Is it is the output format of the build or which targets the built compiler will be able to build</p>",
        "id": 268194277,
        "sender_full_name": "Hamza",
        "timestamp": 1642351049
    },
    {
        "content": "<p><code>--build</code> — The system you are building on.<br>\n<code>--host</code> — The system you want the resulting <code>rustc</code> to run on.<br>\n<code>--target</code> — The system you want <code>std</code> built for (so that the resulting <code>rustc</code> can cross-compile to other targets).</p>",
        "id": 268194389,
        "sender_full_name": "Eric Huss",
        "timestamp": 1642351201
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> thanks, another question <br>\n<code>config.toml</code> example says</p>\n<blockquote>\n<p>Unless you're developing for a target where Rust CI doesn't build a compiler toolchain or changing LLVM locally, you probably want to set this to true.</p>\n</blockquote>\n<p>for <code>download-ci-llvm</code><br>\nwhat are the targets CI builds for? Is <code>wasm32-unknown-unknown</code> one of them?</p>",
        "id": 268194897,
        "sender_full_name": "Hamza",
        "timestamp": 1642351893
    },
    {
        "content": "<p>download-ci-llvm = \"if-available\" should be a reasonable default if you're not sure</p>",
        "id": 268194954,
        "sender_full_name": "simulacrum",
        "timestamp": 1642351943
    },
    {
        "content": "<p>wasm32-unknown-unknown will not have a prebuilt LLVM; we don't ship rustc for that target, only std.</p>",
        "id": 268194975,
        "sender_full_name": "simulacrum",
        "timestamp": 1642351968
    },
    {
        "content": "<p>Do you know if LLVM could be built for that target?</p>",
        "id": 268195060,
        "sender_full_name": "Hamza",
        "timestamp": 1642352049
    },
    {
        "content": "<p>Probably not without changes - llvm has filesystem and other os dependencies that would need to be adjusted on that target, since they don't have a native representation</p>",
        "id": 268196516,
        "sender_full_name": "simulacrum",
        "timestamp": 1642353792
    },
    {
        "content": "<p>Can you link to me to some guide on developing for LLVM and where I can go to ask questions</p>",
        "id": 268197036,
        "sender_full_name": "Hamza",
        "timestamp": 1642354349
    },
    {
        "content": "<p>I've seen clang built for wasm emscripten, like this:<br>\n<a href=\"https://github.com/tbfleming/cib\">https://github.com/tbfleming/cib</a></p>",
        "id": 268201497,
        "sender_full_name": "cuviper",
        "timestamp": 1642360150
    },
    {
        "content": "<p>Maybe WASI would be possible too</p>",
        "id": 268201559,
        "sender_full_name": "cuviper",
        "timestamp": 1642360208
    },
    {
        "content": "<p>Either way, then you could have <code>wasm32-unknown-unknown</code> as an available target from those wasm \"hosts\"</p>",
        "id": 268201578,
        "sender_full_name": "cuviper",
        "timestamp": 1642360261
    },
    {
        "content": "<p>Ah, now I see the other thread where you're working on that, cool.</p>",
        "id": 268201710,
        "sender_full_name": "cuviper",
        "timestamp": 1642360481
    },
    {
        "content": "<p>... and failing at it<br>\nin any case, if you have advice to fix my clang issue, that is very welcome</p>",
        "id": 268202217,
        "sender_full_name": "Hamza",
        "timestamp": 1642361284
    }
]