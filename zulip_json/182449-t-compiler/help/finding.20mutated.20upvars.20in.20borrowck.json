[
    {
        "content": "<p>I'm trying to work on <a href=\"https://github.com/rust-lang/rust/issues/80313\">#80313</a> and I need to find the span of the upvar that the closure is mutating. I thought I could use <code>self.used_mut_upvars</code> but that only has information when checking the closure itself, not when checking the <em>use</em> of the closure. Is there a simple way I can get this information?</p>",
        "id": 220843934,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608776497
    },
    {
        "content": "<p>Hey, I have a somewhat related question.<br>\nI have a HIR pass, as well as a MIR pass later. In the MIR pass I can find the upvar types in the <code>internal_substs</code> (<code>.as_closure()</code>), but this is just a list of types. How can I create a mapping of upvar idents to the index in the upvar tuple of the type?<br>\nI see various methods that seem related, but:</p>\n<ul>\n<li><code>TyCtxt::upvars_mentioned</code> - this returns a map, does not seem to have the indexes of substs</li>\n<li><code>MirBorrowckCtxt::used_mut_upvars</code> - only a subset of upvars?</li>\n<li><code>MirBorrowckCtxt::upvars</code> - this is a <code>Vec</code>, but it might contain upvars that don't end up in the MIR at all?<br>\n(I'm also not sure how to actually get access to a <code>MirBorrowckCtxt</code>)</li>\n</ul>",
        "id": 222846280,
        "sender_full_name": "Aurel Bílý",
        "timestamp": 1610710405
    }
]