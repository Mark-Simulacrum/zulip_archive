[
    {
        "content": "<p>If I have a DefId for a method expression, can I get a DefId that identifies the method implementation? I need to check if the method invocation will monomorphize to a particular implementation. Iâ€™ve not worked with monomorphization before so perhaps Iâ€™m thinking about things all wrong.</p>",
        "id": 221561671,
        "sender_full_name": "rylev",
        "timestamp": 1609785049
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.Instance.html#method.resolve\"><code>Instance::resolve</code></a> is what I'd try.</p>",
        "id": 221564686,
        "sender_full_name": "davidtwco",
        "timestamp": 1609786546
    },
    {
        "content": "<p>(<code>Instance::resolve</code> is what monomorphization collection invokes when it walks the call graph from non-generic roots and has all substitutions available)</p>",
        "id": 221564915,
        "sender_full_name": "davidtwco",
        "timestamp": 1609786635
    },
    {
        "content": "<p>Depending where you are in the compiler and what information you've got available, it might work for you <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 221565007,
        "sender_full_name": "davidtwco",
        "timestamp": 1609786674
    },
    {
        "content": "<p>Ok I tried that earlier and got an ICE, but Iâ€™ll try again ðŸ˜…</p>",
        "id": 221565150,
        "sender_full_name": "rylev",
        "timestamp": 1609786732
    }
]