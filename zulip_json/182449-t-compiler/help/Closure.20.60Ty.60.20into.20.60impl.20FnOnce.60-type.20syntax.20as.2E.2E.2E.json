[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"326843\">@James</span> You might want to rename your Zulip topic to <code>get closure return type</code> or something so that it's clearer to people what you're looking for.</p>",
        "id": 220635045,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608587637
    },
    {
        "content": "<p>This was resolved by using a different type of suggestion by suggesting to just use <code>Fn</code> trait bounds with further reading (in the rust by example book) as I feel that trying to hack up some type of pretty-printer for <code>Fn()</code> syntax sugar was out-of-scope for my abilitiesâ€”perhaps someone in a future PR could update that to make it better.<br>\ne.g.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">_</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>would output</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n --&gt; &lt;anon&gt;:1:11\n  |\n1 | fn f() -&gt; _ { || 0 }\n  |           ^ not allowed in type signatures\n  |\n  = help: consider using an `Fn`, `FnMut`, or `FnOnce` trait bound\n  = note: For more information on using `Fn` traits with function outputs, see https://doc.rust-lang.org/rust-by-example/fn/closures/output_parameters.html\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0121`.\n</code></pre></div>",
        "id": 220652864,
        "sender_full_name": "James",
        "timestamp": 1608603890
    },
    {
        "content": "<p>before it would just suggest</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n --&gt; &lt;anon&gt;:1:11\n  |\n1 | fn f() -&gt; _ { || 0 }\n  |           ^\n  |           |\n  |           not allowed in type signatures\n  |           help: replace with the correct return type: `[closure@&lt;anon&gt;:1:15: 1:19]`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0121`.\n</code></pre></div>\n<p>which is definitely a papercut because unique closure types are not valid syntax; you must use generics with <code>Fn()</code> trait bounds or <code>impl Fn()</code> syntax</p>",
        "id": 220652901,
        "sender_full_name": "James",
        "timestamp": 1608603960
    },
    {
        "content": "<p>By the way, the note should be lowercase:</p>\n<div class=\"codehilite\"><pre><span></span><code>  = note: for more information on using `Fn` traits with function outputs, see https://doc.rust-lang.org/rust-by-example/fn/closures/output_parameters.html\n</code></pre></div>\n<p>What does \"<code>Fn</code> traits with function outputs\" mean? I think you should just say \"for more information on the types of closures\" or something.</p>\n<p>And it probably is a good idea to link to the Book instead of Rust by Example, which is not usually linked to in rustc output.</p>",
        "id": 220653143,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608604270
    },
    {
        "content": "<p>Alright</p>",
        "id": 220653153,
        "sender_full_name": "James",
        "timestamp": 1608604289
    },
    {
        "content": "<p>How does</p>\n<div class=\"codehilite\"><pre><span></span><code>for more information on `Fn` traits and the types of closures, see https://doc.rust-lang.org/book/ch13-01-closures.html\n</code></pre></div>\n<p>sound?</p>",
        "id": 220653242,
        "sender_full_name": "James",
        "timestamp": 1608604382
    },
    {
        "content": "<p>Sounds good! I realize I'm the one who suggested \"the types of closures\" but \"closure types\" might be clearer. Thanks for contributing :)</p>",
        "id": 220653372,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608604537
    },
    {
        "content": "<p>Alright.</p>",
        "id": 220653381,
        "sender_full_name": "James",
        "timestamp": 1608604550
    }
]