[
    {
        "content": "<p>I managed to get a DefId for it but I'm not sure where to go from there.</p>",
        "id": 199982229,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591460105
    },
    {
        "content": "<p><code>tcx.parent(def_id)</code> using the <code>DefIdTree</code> trait will get the parent item of a def_id. For items this will be the parent module.<br>\nIf you may have an associated item or something that's not an item, you'll have to call <code>parent</code> in a loop until <code>tcx.def_kind(def_id)</code> is <code>DefKind::Mod</code>.<br>\nIf the item is guaranteed to be in the current crate, then <code>parent_module</code> on the <code>HirId</code> would be easiest.</p>",
        "id": 199982882,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1591461046
    },
    {
        "content": "<blockquote>\n<p>If the item is guaranteed to be in the current crate, then parent_module on the HirId would be easiest.</p>\n</blockquote>\n<p>This is actually <em>only</em> for cross-crate re-exports. <code>tcx.parent()</code> looks like what I need, thank you!</p>",
        "id": 199983259,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1591461697
    }
]