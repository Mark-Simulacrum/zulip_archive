[
    {
        "content": "<p>Compiling <a href=\"https://github.com/rust-lang/rust/issues/91840\">#91840</a> on <code>--stage 2</code>, making some trivial change, and then compiling again <a href=\"https://gist.github.com/JakobDegen/fbbab32604e9d760328c7136da001d27\">causes an unstable fingerprint ICE</a>. Stage 1 builds and completely clean stage 2 builds all compile fine. Is there something obvious that I broke here? I'm not really sure how to go about fixing this issue because I'm not sure how these things interact</p>",
        "id": 264841102,
        "sender_full_name": "Jake",
        "timestamp": 1639480073
    },
    {
        "content": "<p>What trivial change were you making?</p>",
        "id": 264841762,
        "sender_full_name": "cjgillot",
        "timestamp": 1639480440
    },
    {
        "content": "<p>Reordering two assignments I think?</p>",
        "id": 264842011,
        "sender_full_name": "Jake",
        "timestamp": 1639480580
    },
    {
        "content": "<p>If your change modified the optimized output, the ice is expected. If it did not, then this is a bug.</p>",
        "id": 264842283,
        "sender_full_name": "cjgillot",
        "timestamp": 1639480793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"248906\">cjgillot</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/MIR.20opt.20setting.20off.20inconsistent.20fingerprint.20check.20failures/near/264842283\">said</a>:</p>\n<blockquote>\n<p>If your change modified the optimized output, the ice is expected. If it did not, then this is a bug.</p>\n</blockquote>\n<p>It probably did (I can go test later). What is the intended workflow here then? I was doing local perf runs using a stage 2 build and needed to completely <code>./x.py clean</code> each time to get things to compile</p>",
        "id": 264842484,
        "sender_full_name": "Jake",
        "timestamp": 1639480921
    },
    {
        "content": "<p>The purpose of this ice is to ensure that the result of a query is deterministic. It implicitly assumes rustc does not change between two runs.</p>",
        "id": 264842717,
        "sender_full_name": "cjgillot",
        "timestamp": 1639481031
    },
    {
        "content": "<p>I see. So the stage 1 compiler does not detect that it has changed and the incremental cache needs to be wiped?</p>",
        "id": 264842871,
        "sender_full_name": "Jake",
        "timestamp": 1639481109
    },
    {
        "content": "<p>I suggest you wipe the incremental cache for test. Rm build/&lt;target&gt;/test should be enough, no need to clean everything.</p>",
        "id": 264842888,
        "sender_full_name": "cjgillot",
        "timestamp": 1639481116
    },
    {
        "content": "<p>Or stage2* instead of test if it happens while compiling stage2.</p>",
        "id": 264843061,
        "sender_full_name": "cjgillot",
        "timestamp": 1639481237
    }
]