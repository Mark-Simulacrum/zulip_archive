[
    {
        "content": "<p>What's the typical way to test tool-only suggestions? Inspecting the output of a suggestion (by making it not tool-only) only goes so far.</p>",
        "id": 245646481,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626067427
    },
    {
        "content": "<p>I guess you could check the json error messages.</p>",
        "id": 245648800,
        "sender_full_name": "bjorn3",
        "timestamp": 1626070394
    },
    {
        "content": "<p>Probably not an easy way to play around with it in rust-analyzer?</p>",
        "id": 245648899,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626070519
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"245610\">@Jacob Pratt</span> I think you want // run-rustfix in a UI test</p>",
        "id": 245676454,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626091440
    },
    {
        "content": "<p>That would only work for the \"always applicable\" suggestions, which these are not.</p>",
        "id": 245694744,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626100619
    },
    {
        "content": "<p>If it's not always applicable, why test it?</p>",
        "id": 245711493,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626107273
    },
    {
        "content": "<p>I want to make sure my implementation is actually valid and what I intended. When I say test I don't necessarily mean an automated test â€” I want to actually interact with it or something of the sort. Hence my reference to rust-analyzer.</p>",
        "id": 245717843,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1626110315
    }
]