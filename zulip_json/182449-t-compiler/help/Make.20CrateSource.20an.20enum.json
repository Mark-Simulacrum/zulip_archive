[
    {
        "content": "<p>While working on <a href=\"https://github.com/rust-lang/rust/issues/89587\">#89587</a>, I noticed that <code>CrateSource</code> is a struct where each field is an <code>Option</code>, and according to the docs, one (or at least one, I'm unsure which) has to be <code>Some</code>. That made me wonder if <code>CrateSource</code> could be made into an enum. To that end, I opened <a href=\"https://github.com/rust-lang/rust/issues/89613\">#89613</a> as an experiment, mostly because I'm curious if it could work.</p>\n<p>CI failed on that PR while building stage1 std with this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: crate `rustc_std_workspace_core` required to be available in rlib format, but was not found in this form\n\nerror: crate `cfg_if` required to be available in rlib format, but was not found in this form\n\nerror: crate `rustc_std_workspace_alloc` required to be available in rlib format, but was not found in this form\n\nerror: crate `gimli` required to be available in rlib format, but was not found in this form\n\nerror: crate `memchr` required to be available in rlib format, but was not found in this form\n\nerror: crate `adler` required to be available in rlib format, but was not found in this form\n\nerror: could not compile `std` due to 6 previous errors\n</code></pre></div>\n<p>I'm guessing this is because after my change the loader finds an rmeta and stops early instead of loading the rlib too. There's a comment in the loader saying:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// Order here matters, rmeta should come first. See comment in</span>\n<span class=\"c1\">// `extract_one` below.</span>\n</code></pre></div>\n<p>I looked at the comment it references, but it was a bit over my head. Why is it that rmeta files should be loaded first?</p>\n<p>And, would it be reasonable to make <code>CrateSource</code> an enum, or does it have to allow multiple sources (rlib, rmeta, and dylib)?</p>\n<p>Thanks! Mostly I'm experimenting with this just because I'm curious about metadata loading :)</p>",
        "id": 256503486,
        "sender_full_name": "Noah Lev",
        "timestamp": 1633565220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> it probably has something to do with pipelined compilation</p>",
        "id": 256505021,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633566247
    },
    {
        "content": "<p>Ah, interesting.</p>",
        "id": 256505034,
        "sender_full_name": "Noah Lev",
        "timestamp": 1633566260
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/issues/6660\">https://github.com/rust-lang/cargo/issues/6660</a></p>",
        "id": 256505035,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633566260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Make.20CrateSource.20an.20enum/near/256505021\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307537\">Noah Lev</span> it probably has something to do with pipelined compilation</p>\n</blockquote>\n<p>By \"it\", do you mean the comment I referenced?</p>",
        "id": 256505065,
        "sender_full_name": "Noah Lev",
        "timestamp": 1633566291
    },
    {
        "content": "<blockquote>\n<p>Why is it that rmeta files should be loaded first?</p>\n</blockquote>\n<p>^ this is what I meant by \"it\"</p>",
        "id": 256505410,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1633566544
    },
    {
        "content": "<p>Ok, that's what I thought. Thanks, pipelined compilation as the cause sounds reasonable.</p>",
        "id": 256505602,
        "sender_full_name": "Noah Lev",
        "timestamp": 1633566719
    },
    {
        "content": "<p>Looks like <a href=\"https://github.com/rust-lang/rust/commit/4bb68828de9c424c572a7ec11417660478ca7501\">4bb68828de9c424c572a7ec11417660478ca7501</a> added that comment (and behavior), so it seems like pipelined compilation is definitely related.</p>",
        "id": 256505756,
        "sender_full_name": "Noah Lev",
        "timestamp": 1633566811
    },
    {
        "content": "<p><code>CrateSource</code> is certainly not an enum.<br>\nYes, at least one of the fields must be <code>Some</code>, but two (or three) of them can also be <code>Some</code> if a library is found in both rlib and dylib (and rmeta) flavors.</p>",
        "id": 256544862,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1633597276
    },
    {
        "content": "<p>Well, at least it was an interesting experiment. Now I know more about metadata loading <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 256625902,
        "sender_full_name": "Noah Lev",
        "timestamp": 1633631180
    }
]