[
    {
        "content": "<p>Why is there a <code>Self: Sized</code> bound for <code>Iterator::find</code>? <a href=\"https://github.com/rust-lang/rust/blob/39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0/src/libcore/iter/traits/iterator.rs#L2198-L2200\" title=\"https://github.com/rust-lang/rust/blob/39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0/src/libcore/iter/traits/iterator.rs#L2198-L2200\">https://github.com/rust-lang/rust/blob/39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0/src/libcore/iter/traits/iterator.rs#L2198-L2200</a></p>",
        "id": 193206405,
        "sender_full_name": "lcnr",
        "timestamp": 1586273759
    },
    {
        "content": "<p>it's how you opt out of that method being in the vtable</p>",
        "id": 193206480,
        "sender_full_name": "eddyb",
        "timestamp": 1586273778
    },
    {
        "content": "<p>That's actually clever, wow <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 193206531,
        "sender_full_name": "lcnr",
        "timestamp": 1586273801
    },
    {
        "content": "<p>all methods that take <code>self</code> by value in traits like <code>Iterator</code> (which we want to allow people to use with <code>dyn Iterator</code>) have that</p>",
        "id": 193206551,
        "sender_full_name": "eddyb",
        "timestamp": 1586273808
    },
    {
        "content": "<p>but find doesn't take self by value</p>",
        "id": 193206648,
        "sender_full_name": "lcnr",
        "timestamp": 1586273855
    },
    {
        "content": "<p>oh maybe it's generic</p>",
        "id": 193206674,
        "sender_full_name": "eddyb",
        "timestamp": 1586273869
    },
    {
        "content": "<p>okay yeah that's another thing that virtual methods can't do</p>",
        "id": 193206694,
        "sender_full_name": "eddyb",
        "timestamp": 1586273880
    },
    {
        "content": "<p>so \"takes <code>self</code> by value or is more generic than the trait\"</p>",
        "id": 193206756,
        "sender_full_name": "eddyb",
        "timestamp": 1586273896
    }
]