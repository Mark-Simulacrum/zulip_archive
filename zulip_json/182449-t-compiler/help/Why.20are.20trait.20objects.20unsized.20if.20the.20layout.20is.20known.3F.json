[
    {
        "content": "<p>A trait object (as described by <code>core::raw::TraitObject</code>) is just two pointers, and pointers have known size. Why are trait objects not <code>Sized</code> then? For example, why can I not do (using current master branch)</p>\n<div class=\"codehilite\"><pre><span></span><code>let x: [u8; size_of::&lt;dyn Debug&gt;()];\n</code></pre></div>\n<p>which fails with <code>the size for values of type </code>dyn Debug<code> cannot be known at compilation time</code>? I think the size of this should be <code>2 * size_of&lt;*mut ()&gt;</code>.</p>",
        "id": 223085178,
        "sender_full_name": "osa1",
        "timestamp": 1610951836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119169\">@osa1</span> &amp;dyn Debug is two pointers (also known as a \"fat pointer\"), not dyn Debug itself</p>",
        "id": 223086149,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610952557
    },
    {
        "content": "<p>That makes sense, thanks <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> .</p>\n<p>Relatedly, I'm wondering how size of a reference type is computed in the compiler. Is there a function somewhere (maybe in miri?) where given a reference type (<code>&amp;X</code> where <code>X</code> is a struct, trait, or a slice like <code>[u8]</code>, or something else) it returns the size?</p>",
        "id": 223086361,
        "sender_full_name": "osa1",
        "timestamp": 1610952848
    },
    {
        "content": "<p>I think normal <code>std::mem::size_of</code> will tell you</p>",
        "id": 223086377,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610952894
    },
    {
        "content": "<p>Not sure how it's implemented, probably an intrinsic</p>",
        "id": 223086383,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610952903
    },
    {
        "content": "<p>Yeah it's an intrinsic. I'll find the definition of it. Thanks.</p>",
        "id": 223086397,
        "sender_full_name": "osa1",
        "timestamp": 1610952946
    },
    {
        "content": "<p><code>ty/layout.rs</code> probably contains the interesting bits</p>",
        "id": 223112773,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1610972415
    }
]