[
    {
        "content": "<p>It appears that all of the stuff needed to build rust on s390x-musl has landed and is basically working.</p>\n<p>However, there is one problem I have encountered still: rustc <em>really</em> wants to use llvm-libunwind on the musl targets.  Normally, this is fine, as llvm-libunwind supports almost all architectures that anyone could possibly want to support, <em>except</em> it does <em>not</em> support s390x.</p>\n<p>In the <code>unwind</code> library source, I note that there is a provision for building without llvm-libunwind support on musl: <a href=\"https://github.com/rust-lang/rust/blob/master/library/unwind/src/lib.rs#L53-L57\">https://github.com/rust-lang/rust/blob/master/library/unwind/src/lib.rs#L53-L57</a></p>\n<p>Accordingly, I have tried building with <code>--set=rust.llvm-libunwind=no</code> configure flag, but the build system seems to ignore this.  So, I am wondering how I can get past this last issue with s390x-musl</p>",
        "id": 268144566,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642277483
    },
    {
        "content": "<p>It seems that llvm-libunwind=no is already the default. <a href=\"https://github.com/rust-lang/rust/blob/7b13c628a214a03f4f45b80e26313df55654d254/src/bootstrap/config.rs#L207\">https://github.com/rust-lang/rust/blob/7b13c628a214a03f4f45b80e26313df55654d254/src/bootstrap/config.rs#L207</a></p>",
        "id": 268145435,
        "sender_full_name": "bjorn3",
        "timestamp": 1642278445
    },
    {
        "content": "<p>yeah something seems to flip it for musl, i'm not sure what :/</p>",
        "id": 268145490,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642278487
    },
    {
        "content": "<p>but on s390x, we definitely need GNU libunwind there, not llvm-libunwind</p>",
        "id": 268145502,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642278502
    },
    {
        "content": "<p>Can you run the build with <code>-vv</code> and then look at which <code>--cfg</code> arguments are passed to the rustc invocation with <code>--crate-name unwind</code>? And can you also look at which <code>--features</code> argument is passed to the cargo invocation a couple of lines above?</p>",
        "id": 268145565,
        "sender_full_name": "bjorn3",
        "timestamp": 1642278602
    },
    {
        "content": "<p>(just to confirm the build system indeed enables the <code>llvm-libunwind</code> feature)</p>",
        "id": 268145589,
        "sender_full_name": "bjorn3",
        "timestamp": 1642278651
    },
    {
        "content": "<p>cargo does not seem to be responsible for building it per se</p>",
        "id": 268145729,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642278861
    },
    {
        "content": "<p>right now i am building a cross-compiler for riscv64, so i can get that one done, i'll circle back to s390x as soon as its done</p>",
        "id": 268145742,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642278894
    },
    {
        "content": "<p>hmm, actually.  let me do that right quick</p>",
        "id": 268145802,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642278963
    },
    {
        "content": "<p>however</p>",
        "id": 268145839,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279048
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/MT8YH-nrj9l_jpmMeICNVU6O/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/MT8YH-nrj9l_jpmMeICNVU6O/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/MT8YH-nrj9l_jpmMeICNVU6O/image.png\"></a></div>",
        "id": 268145844,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279052
    },
    {
        "content": "<p>this seems to be the build system itself deciding it wants to build it</p>",
        "id": 268145852,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279066
    },
    {
        "content": "<p>Indeed. The message comes from <a href=\"https://github.com/rust-lang/rust/blob/ec4bcaac450279b029f3480b8b8f1b82ab36a5eb/src/bootstrap/native.rs#L998\">https://github.com/rust-lang/rust/blob/ec4bcaac450279b029f3480b8b8f1b82ab36a5eb/src/bootstrap/native.rs#L998</a></p>",
        "id": 268145911,
        "sender_full_name": "bjorn3",
        "timestamp": 1642279117
    },
    {
        "content": "<p>(past that it is just complaining that it fails to build, the issue of course is \"#error unsupported architecture\")</p>",
        "id": 268145934,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279169
    },
    {
        "content": "<p>i'm capturing a build log now, but it will take some time</p>",
        "id": 268145990,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279227
    },
    {
        "content": "<p>It is invoked from <a href=\"https://github.com/rust-lang/rust/blob/a77cc64af491a31db224109a76b9b81cd26cd07c/src/bootstrap/compile.rs#L184\">https://github.com/rust-lang/rust/blob/a77cc64af491a31db224109a76b9b81cd26cd07c/src/bootstrap/compile.rs#L184</a> and <a href=\"https://github.com/rust-lang/rust/blob/a77cc64af491a31db224109a76b9b81cd26cd07c/src/bootstrap/compile.rs#L230\">https://github.com/rust-lang/rust/blob/a77cc64af491a31db224109a76b9b81cd26cd07c/src/bootstrap/compile.rs#L230</a> The former has a conditional on llvm-libunwind being used, the later doesn't.</p>",
        "id": 268146014,
        "sender_full_name": "bjorn3",
        "timestamp": 1642279283
    },
    {
        "content": "<p>The later location tries to ensure that rustc ships with everything necessary to compile for musl (except for the linker if you don't use the lld shipped with rustc by default)</p>",
        "id": 268146088,
        "sender_full_name": "bjorn3",
        "timestamp": 1642279368
    },
    {
        "content": "<p>yes, which makes sense normally :)</p>",
        "id": 268146115,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279408
    },
    {
        "content": "<p>we do use <code>dist</code> to generate tarballs, and then repack those into APKs</p>",
        "id": 268146187,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279468
    },
    {
        "content": "<p>I think adding a check for s390x before that line would make sense.</p>",
        "id": 268146188,
        "sender_full_name": "bjorn3",
        "timestamp": 1642279470
    },
    {
        "content": "<p>which, 230?</p>",
        "id": 268146203,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279479
    },
    {
        "content": "<p>yes</p>",
        "id": 268146207,
        "sender_full_name": "bjorn3",
        "timestamp": 1642279484
    },
    {
        "content": "<p>alright, i'll try to patch it :)</p>",
        "id": 268146230,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279507
    },
    {
        "content": "<p>if llvm-libunwind doesn't support s390x there isn't much we can do to make musl fully self contained on s390x.</p>",
        "id": 268146260,
        "sender_full_name": "bjorn3",
        "timestamp": 1642279553
    },
    {
        "content": "<p>in alpine, it winds up being largely defeated anyway with the alpine-specific targets</p>",
        "id": 268146313,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279600
    },
    {
        "content": "<p>if target.contains(\"s390x\") {...} should get it done i guess</p>",
        "id": 268146444,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642279785
    },
    {
        "content": "<p>Pretty much. <code>target.starts_with(\"s390x\")</code> is a bit more specific, but either should be fine I think.</p>",
        "id": 268146676,
        "sender_full_name": "bjorn3",
        "timestamp": 1642280056
    },
    {
        "content": "<p>yep</p>",
        "id": 268146705,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642280097
    },
    {
        "content": "<p>i'll send this upstream once i make sure it works</p>",
        "id": 268146812,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642280267
    },
    {
        "content": "<p>alright, that was a success</p>",
        "id": 268147799,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642281702
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/92946\">https://github.com/rust-lang/rust/pull/92946</a></p>",
        "id": 268148344,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642282457
    },
    {
        "content": "<p>hmm, one other strange issue</p>",
        "id": 268148543,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642282772
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/locsiglV3p5o5mz53E7Dnw7H/Screen-Shot-2022-01-15-at-3.39.21-PM.png\">Screen-Shot-2022-01-15-at-3.39.21-PM.png</a> i suspect something is slightly off with libc crate</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/locsiglV3p5o5mz53E7Dnw7H/Screen-Shot-2022-01-15-at-3.39.21-PM.png\" title=\"Screen-Shot-2022-01-15-at-3.39.21-PM.png\"><img src=\"/user_uploads/4715/locsiglV3p5o5mz53E7Dnw7H/Screen-Shot-2022-01-15-at-3.39.21-PM.png\"></a></div>",
        "id": 268148546,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642282792
    },
    {
        "content": "<p>though i checked STDOUT_FILENO and ioctl definitions for s390x-musl and they are both <code>::c_int</code> type</p>",
        "id": 268148600,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642282839
    },
    {
        "content": "<p>I think the span isn't correct. <code>TIOCGWINSZ</code> is a <code>c_int</code>, but <code>ioctl</code> expects an <code>c_ulong</code> as argument. <a href=\"https://github.com/rust-lang/libc/blob/e470e3b6a1f940e0024d40d3b79fc73fe29c7f17/src/unix/linux_like/linux/musl/b64/s390x.rs#L320\">https://github.com/rust-lang/libc/blob/e470e3b6a1f940e0024d40d3b79fc73fe29c7f17/src/unix/linux_like/linux/musl/b64/s390x.rs#L320</a></p>",
        "id": 268149142,
        "sender_full_name": "bjorn3",
        "timestamp": 1642283724
    },
    {
        "content": "<p>For other platforms it seems like it does take <code>c_int</code> as argument.</p>",
        "id": 268149193,
        "sender_full_name": "bjorn3",
        "timestamp": 1642283782
    },
    {
        "content": "<p>Musl defines it as int for all platforms, so that must be a bug in the libc crate: <a href=\"https://git.musl-libc.org/cgit/musl/tree/include/sys/ioctl.h#n115\">https://git.musl-libc.org/cgit/musl/tree/include/sys/ioctl.h#n115</a></p>",
        "id": 268149262,
        "sender_full_name": "bjorn3",
        "timestamp": 1642283917
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"360752\">@Ariadne Conill</span></p>",
        "id": 268149266,
        "sender_full_name": "bjorn3",
        "timestamp": 1642283934
    },
    {
        "content": "<p>ah</p>",
        "id": 268158431,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642298188
    },
    {
        "content": "<p>i’ll patch the crate</p>",
        "id": 268158433,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642298193
    },
    {
        "content": "<p>thanks</p>",
        "id": 268158436,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642298196
    },
    {
        "content": "<p>hmmph, i patched the crate and its still complaining about argument 1</p>",
        "id": 268160060,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642300565
    },
    {
        "content": "<p>Compiling libc v0.2.106</p>",
        "id": 268160147,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642300748
    },
    {
        "content": "<p>hmm</p>",
        "id": 268160148,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642300751
    },
    {
        "content": "<p>let me check <em>that</em> crate</p>",
        "id": 268160150,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642300755
    },
    {
        "content": "<p>okay, i more forcefully patched that crate, all 3 copies of it</p>",
        "id": 268160380,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642301130
    },
    {
        "content": "<p>hmmph, i think libgcc isn't being linked correctly in all cases</p>",
        "id": 268163065,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642305566
    },
    {
        "content": "<p>error: Error relocating /home/kaniini/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage1-rustc/release/deps/libtracing_attributes-3303d50f7ffdcc56.so: __muloti4: symbol not found</p>",
        "id": 268163067,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642305575
    },
    {
        "content": "<p><a href=\"https://bugs.gentoo.org/622024\">https://bugs.gentoo.org/622024</a> hmm, LTO maybe?</p>",
        "id": 268163249,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642305747
    },
    {
        "content": "<p>though this seems to be a proc macro, weird :)</p>",
        "id": 268163360,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642305891
    },
    {
        "content": "<p><code>__muloti4</code> should be defined by compiler-builtins which is included in every invocation of the linker by rustc: <a href=\"https://github.com/rust-lang/compiler-builtins/blob/e6fd1b272ff4cc34810e20126ffe17888a708f39/src/int/mul.rs#L124\">https://github.com/rust-lang/compiler-builtins/blob/e6fd1b272ff4cc34810e20126ffe17888a708f39/src/int/mul.rs#L124</a></p>",
        "id": 268171453,
        "sender_full_name": "bjorn3",
        "timestamp": 1642319888
    },
    {
        "content": "<p>hmm, seems not to be in this case :(</p>",
        "id": 268181124,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642335227
    },
    {
        "content": "<p>i think we hit this before.  not sure how to debug it</p>",
        "id": 268181567,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642335864
    },
    {
        "content": "<p>GCC has something like specs files to determine what gets included, maybe we need to adjust something?</p>",
        "id": 268181574,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642335882
    },
    {
        "content": "<p>If you are using linker plugin LTO and BFD linker <a href=\"https://github.com/rust-lang/rust/issues/74657\">#74657</a> might be relevant.</p>",
        "id": 268181738,
        "sender_full_name": "tm",
        "timestamp": 1642336101
    },
    {
        "content": "<p>i dont think i am using LTO, but how can i check :D</p>",
        "id": 268181818,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642336206
    },
    {
        "content": "<p>Could you share the complete build log? Especially one that shows the linker invocation if possible.</p>",
        "id": 268182260,
        "sender_full_name": "tm",
        "timestamp": 1642336884
    },
    {
        "content": "<p>you mean <code>-vv</code>?</p>",
        "id": 268185390,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642341067
    },
    {
        "content": "<p>yes, i'll capture one in a bit.</p>",
        "id": 268185399,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642341093
    },
    {
        "content": "<p><code>-vv</code> build running, i'll upload the log when it finishes.  going to grab some lunch.</p>",
        "id": 268187274,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642342489
    },
    {
        "content": "<p><a href=\"https://distfiles.dereferenced.org/build.log.txt\">https://distfiles.dereferenced.org/build.log.txt</a></p>",
        "id": 268190015,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642345349
    },
    {
        "content": "<p>Building tracing_attributes happens using</p>\n<div class=\"codehilite\"><pre><span></span><code>rustc-1.58.0-src/build/bootstrap/debug/rustc --crate-name tracing_attributes --edition=2018 rustc-1.58.0-src/vendor/tracing-attributes-0.1.17/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C embed-bitcode=no -C debuginfo=0 -C debug-assertions=off -C metadata=043c6496b3b108b1 -C extra-filename=-043c6496b3b108b1 --out-dir rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage0-rustc/release/deps -C linker=gcc --extern proc_macro --cap-lints warn -Z binary-dep-depinfo\n</code></pre></div>\n<p>(skipping all <code>--extern</code> and <code>-L dependency=...</code>  and shortening paths for brevity.) LTO is not enabled.</p>",
        "id": 268192549,
        "sender_full_name": "bjorn3",
        "timestamp": 1642348808
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"360752\">@Ariadne Conill</span> Can you check all symbol imports of <code>/home/kaniini/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage0-rustc/release/deps/libtracing_attributes-043c6496b3b108b1.so</code> to see if <code>__muloti4</code> is the only missing symbol starting with <code>__</code> or if not which others are imported.</p>",
        "id": 268192715,
        "sender_full_name": "bjorn3",
        "timestamp": 1642348933
    },
    {
        "content": "<p>sure, give me a second</p>",
        "id": 268192812,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349059
    },
    {
        "content": "<p>0000000000545410 t __muloti4</p>",
        "id": 268193096,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349413
    },
    {
        "content": "<p>that one is defined there</p>",
        "id": 268193101,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349418
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/tEf8pML9UTcJyWc3okqwagzC/E2E81E31-6096-4990-B2F8-7BEAF77A7500.png\">E2E81E31-6096-4990-B2F8-7BEAF77A7500.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/tEf8pML9UTcJyWc3okqwagzC/E2E81E31-6096-4990-B2F8-7BEAF77A7500.png\" title=\"E2E81E31-6096-4990-B2F8-7BEAF77A7500.png\"><img src=\"/user_uploads/4715/tEf8pML9UTcJyWc3okqwagzC/E2E81E31-6096-4990-B2F8-7BEAF77A7500.png\"></a></div>",
        "id": 268193138,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349501
    },
    {
        "content": "<p>yeah definitely there</p>",
        "id": 268193141,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349507
    },
    {
        "content": "<p>all the .so in that dir have it</p>",
        "id": 268193209,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349595
    },
    {
        "content": "<p>hmm</p>",
        "id": 268193300,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349728
    },
    {
        "content": "<p>what if it’s trying to dlopen the s390 libs</p>",
        "id": 268193309,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349744
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>treefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage1-rustc/s390x-alpine-linux-musl/release/deps$ file libtracing_attributes-eff94e489e646919.so\nlibtracing_attributes-eff94e489e646919.so: ELF 64-bit MSB shared object, IBM S/390, version 1 (SYSV), dynamically linked, with debug_info, not stripped\ntreefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage1-rustc/s390x-alpine-linux-musl/release/deps$ nm libtracing_attributes-eff94e489e646919.so | grep &#39; __mul&#39;\n                 U __muloti4\ntreefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage1-rustc/s390x-alpine-linux-musl/release/deps$\n</code></pre></div>",
        "id": 268193411,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349881
    },
    {
        "content": "<p>hmmmmmmmmm</p>",
        "id": 268193449,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349885
    },
    {
        "content": "<p>could it be something this silly</p>",
        "id": 268193454,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349895
    },
    {
        "content": "<p>cause it’s undefined there</p>",
        "id": 268193464,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642349913
    },
    {
        "content": "<p>/me looks at musl dynlink sources</p>",
        "id": 268193602,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642350116
    },
    {
        "content": "<p>i… don’t see any architecture check</p>",
        "id": 268193767,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642350305
    },
    {
        "content": "<p>it might actually allow this wtf</p>",
        "id": 268193774,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642350312
    },
    {
        "content": "<p>i’m going to</p>",
        "id": 268193838,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642350420
    },
    {
        "content": "<p>see if i can dlopen this</p>",
        "id": 268193842,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642350428
    },
    {
        "content": "<p>ok ldd rejects it</p>",
        "id": 268193946,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642350593
    },
    {
        "content": "<p>Rustc checks the triple of a crate before loading it. This applies to normal crates, but also proc macros. It will only open proc macros compiled for the same triple as rustc itself. <a href=\"https://github.com/rust-lang/rust/blob/7be8693984d32d2f65ce9ded4f65b6b7340bddce/compiler/rustc_metadata/src/locator.rs#L647-L654\">https://github.com/rust-lang/rust/blob/7be8693984d32d2f65ce9ded4f65b6b7340bddce/compiler/rustc_metadata/src/locator.rs#L647-L654</a></p>",
        "id": 268194745,
        "sender_full_name": "bjorn3",
        "timestamp": 1642351679
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"360752\">Ariadne Conill</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/bypassing.20llvm-libunwind.20build.20on.20musl/near/268193464\">said</a>:</p>\n<blockquote>\n<p>cause it’s undefined there</p>\n</blockquote>\n<p>huh. compiler-builtins should unconditionally define <code>__muloti4</code>.</p>",
        "id": 268194860,
        "sender_full_name": "bjorn3",
        "timestamp": 1642351804
    },
    {
        "content": "<p>yeah i dunno, just noting that its not defined in that .so</p>",
        "id": 268195126,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642352161
    },
    {
        "content": "<p>Just to confirm building rustc 1.58.0 for the x86_64-alpine-linux-musl works fine?</p>",
        "id": 268195189,
        "sender_full_name": "bjorn3",
        "timestamp": 1642352230
    },
    {
        "content": "<p>yes, building in non-cross configuration works fine.  rustc 1.58 is in the archive :)</p>",
        "id": 268195251,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642352295
    },
    {
        "content": "<p>and, if you check the log, you can see it installing rustc 1.58</p>",
        "id": 268195263,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642352308
    },
    {
        "content": "<p>When you checked for <code>__muloti4</code> in <code>/home/kaniini/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage0-rustc/release/deps/libtracing_attributes-043c6496b3b108b1.so</code> did you pass <code>-D</code> to nm? I believe it defaults to reading <code>.symtab</code> rather than <code>.dynsym</code>.</p>",
        "id": 268195626,
        "sender_full_name": "bjorn3",
        "timestamp": 1642352693
    },
    {
        "content": "<p>i literally disassembled it</p>",
        "id": 268195641,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642352715
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>treefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage0-rustc/release/deps$ nm -D libtracing_attributes-043c6496b3b108b1.so | grep __mul\ntreefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage0-rustc/release/deps$\n</code></pre></div>",
        "id": 268195741,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642352832
    },
    {
        "content": "<p>nothin'</p>",
        "id": 268195743,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642352838
    },
    {
        "content": "<p>What relocations for <code>__muloti4</code> does <code>readelf --relocs</code> show?</p>",
        "id": 268195820,
        "sender_full_name": "bjorn3",
        "timestamp": 1642352909
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>treefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage0-rustc/release/deps$ readelf --relocs libtracing_attributes-043c6496b3b108b1.so  | grep __muloti4\ntreefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage0-rustc/release/deps$\n</code></pre></div>",
        "id": 268195846,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642352950
    },
    {
        "content": "<p>??? Why does it have any problems relocating when there are no relocations for the symbol it complains about?</p>",
        "id": 268195917,
        "sender_full_name": "bjorn3",
        "timestamp": 1642353012
    },
    {
        "content": "<p>i dunno :D</p>",
        "id": 268196017,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642353177
    },
    {
        "content": "<p>i wonder if i would be better off trying to cross compile from s390x-glibc</p>",
        "id": 268196027,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642353190
    },
    {
        "content": "<p>o</p>",
        "id": 268196208,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642353456
    },
    {
        "content": "<p>/home/kaniini/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage1-rustc/release/deps/libtracing_attributes-3303d50f7ffdcc56.so: __muloti4: symbol not found</p>",
        "id": 268196212,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642353461
    },
    {
        "content": "<p><em>stage1</em></p>",
        "id": 268196215,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642353467
    },
    {
        "content": "<p>in <em>stage1</em>, we have</p>\n<div class=\"codehilite\"><pre><span></span><code>treefort:~/aports/community/rust/src/rustc-1.58.0-src/build/x86_64-alpine-linux-musl/stage1-rustc/release/deps$ readelf --relocs libtracing_attributes-3303d50f7ffdcc56.so | grep __muloti4\n00000065d390  006d00000006 R_X86_64_GLOB_DAT 0000000000000000 __muloti4 + 0\n</code></pre></div>",
        "id": 268196301,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642353553
    },
    {
        "content": "<p>so this is happening between stage0 and stage1</p>",
        "id": 268196314,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642353574
    },
    {
        "content": "<p>Can you search through the disassembly with objdump and see where that function is getting used within the shared library?</p>",
        "id": 268196544,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1642353827
    },
    {
        "content": "<p>yes</p>",
        "id": 268196842,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354169
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>00000000005209c0 &lt;_ZN4core3num14from_str_radix17h0cfa90d2f56c97feE&gt;:\n   ...\n   520a7a:       ff 15 10 c9 13 00       call   *0x13c910(%rip)        # 65d390 &lt;__muloti4@Base&gt;\n</code></pre></div>",
        "id": 268196911,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354236
    },
    {
        "content": "<p>Unrelated to this issue, but I just saw that <code>-Ztls-model=initial-exec</code> is passed to proc macro builds. <code>initial-exec</code> is only allowed for executables and dynamic libraries that aren't dlopen'ed. Proc-macros _are_ dlopen'ed.</p>",
        "id": 268196922,
        "sender_full_name": "bjorn3",
        "timestamp": 1642354253
    },
    {
        "content": "<p>interesting.  i can check the x86_64 native build log</p>",
        "id": 268196963,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354298
    },
    {
        "content": "<p><a href=\"https://build.alpinelinux.org/buildlogs/build-edge-x86_64/community/rust/rust-1.58.0-r0.log\">https://build.alpinelinux.org/buildlogs/build-edge-x86_64/community/rust/rust-1.58.0-r0.log</a></p>",
        "id": 268197029,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354332
    },
    {
        "content": "<p>on the native build, it does not seem to be using -Ztls-model=initial-exec on the proc macro builds</p>",
        "id": 268197139,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354482
    },
    {
        "content": "<p>hmm!</p>",
        "id": 268197293,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354633
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/92976\">https://github.com/rust-lang/rust/issues/92976</a></p>",
        "id": 268197296,
        "sender_full_name": "bjorn3",
        "timestamp": 1642354639
    },
    {
        "content": "<p>the initial-exec seems to happen on stage1 x86_64 -&gt; s390x native</p>",
        "id": 268197305,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354654
    },
    {
        "content": "<p>Probably related to the fact that cargo ignores <code>RUSTFLAGS</code> when compiling for the host if <code>--target</code> is passed. <code>RUSTFLAGS</code> is used to pass <code>-Ztls-model=initial-exec</code> to rustc.</p>",
        "id": 268197372,
        "sender_full_name": "bjorn3",
        "timestamp": 1642354702
    },
    {
        "content": "<p>so, the stage1 intermediate (x86_64 before x86_64 -&gt; s390x phase) compiler is missing <code>__muloti4</code></p>",
        "id": 268197409,
        "sender_full_name": "Ariadne Conill",
        "timestamp": 1642354759
    }
]