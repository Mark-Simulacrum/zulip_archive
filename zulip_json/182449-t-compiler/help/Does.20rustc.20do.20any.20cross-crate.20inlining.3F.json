[
    {
        "content": "<p>I'm very new at rustc development -- I'm wondering if rustc does any cross-crate optimizations, and if it does where do I find the code that serializes/deserializes HIR/MIR for cross-crate inlining. Also, am I right that a crate is one compilation unit, and optimized/code generated as a whole? Thanks.</p>\n<p>(I've searched about this but the term \"cross\" mostly brings cross-compilation related stuff. There's one blog post, but it's published in 2012 so it's probably not too relevant these days)</p>",
        "id": 183232411,
        "sender_full_name": "osa1",
        "timestamp": 1576132693
    },
    {
        "content": "<p>Our optimizations do not care whether a function is from the same crate or from a different crate. I fact, except for lints the optimizations can't even tell the difference</p>",
        "id": 183235510,
        "sender_full_name": "oli",
        "timestamp": 1576137481
    },
    {
        "content": "<p>The (de-)serialization happens completely transparently in the query system</p>",
        "id": 183235566,
        "sender_full_name": "oli",
        "timestamp": 1576137509
    },
    {
        "content": "<p>You request the MIR of a function from another crate with the same query that you use for local crates</p>",
        "id": 183235580,
        "sender_full_name": "oli",
        "timestamp": 1576137560
    },
    {
        "content": "<p>That said, if you are still interested in metadata serialization and deserialization, the typr you want to look at is <code>CrateMetadata</code>. Although note that this is just a tiny cog in the metadata (de)serialization scheme.</p>",
        "id": 183235828,
        "sender_full_name": "oli",
        "timestamp": 1576137778
    },
    {
        "content": "<p>There may also be a rustc-guide topic about this, I'm not sure, search the guide for \"metadata\" I guess</p>",
        "id": 183235852,
        "sender_full_name": "oli",
        "timestamp": 1576137816
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> , that's very helpful. I'll check the code and the rustc-guide section.</p>",
        "id": 183252339,
        "sender_full_name": "osa1",
        "timestamp": 1576152385
    }
]