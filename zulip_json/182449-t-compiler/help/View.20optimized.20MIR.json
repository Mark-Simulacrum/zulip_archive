[
    {
        "content": "<p>This seems simple, but I can't figure out a way to view the optimized MIR on either <a href=\"http://play.rust-lang.org\">play.rust-lang.org</a> or godbolt. Any tips?</p>",
        "id": 265767093,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1640149952
    },
    {
        "content": "<p>Go to the ... by \"Run\" and click \"MIR\"</p>",
        "id": 265767166,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640150045
    },
    {
        "content": "<p>Is that post-opt though?</p>",
        "id": 265767484,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1640150499
    },
    {
        "content": "<p>Yes, just like the LLVM one is post-opt.</p>",
        "id": 265767655,
        "sender_full_name": "scottmcm",
        "timestamp": 1640150705
    },
    {
        "content": "<p>I probably am misunderstanding something then. Here's the source of my confusion:</p>\n<p>Take a peek at this playground (taken from <a href=\"https://github.com/rust-lang/rust/issues/92174\">https://github.com/rust-lang/rust/issues/92174</a>): <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2021&amp;gist=4ad0b34c54086f780aeed757ac3d411a\">https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2021&amp;gist=4ad0b34c54086f780aeed757ac3d411a</a></p>\n<p>Set it to <code>Release</code>, and look at the LLVM IR. For the function <code>good</code>, it's a single <code>ret</code>. For the function <code>bad</code>, it's not optimized at all. But if you look at the MIR for each function, they're basically identical.</p>\n<p>This made me think that I was seeing the MIR before optimization.</p>",
        "id": 265767776,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1640150863
    },
    {
        "content": "<p>This was my understanding:</p>\n<p>AST<br>\n&lt;ast lowering&gt;<br>\nHIR<br>\n&lt;middle&gt;<br>\nMIR<br>\n&lt;MIR opt&gt;<br>\nOptimized MIR<br>\n&lt;codegen&gt;<br>\nLLVM IR<br>\nMachine code</p>\n<p>Is there an LLVM IR optimization step in addition to that? That goes from LLVM IR to more optimized LLVM IR before going to machine code?</p>",
        "id": 265768021,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1640151133
    },
    {
        "content": "<p>Oh, maybe it's occurring during const evaluation. Is there any option on <code>rustc</code> to spit out the MIR after const evaluation?</p>",
        "id": 265771067,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1640155343
    },
    {
        "content": "<p><code>good</code> is optimized to <code>ret</code> in an LLVM optimization, see <a href=\"https://godbolt.org/z/KWh4da1TM\">https://godbolt.org/z/KWh4da1TM</a></p>",
        "id": 265774708,
        "sender_full_name": "Hans Kratz",
        "timestamp": 1640159293
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"435059\">Ben Reeves</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/View.20optimized.20MIR/near/265768021\">said</a>:</p>\n<blockquote>\n<p>Is there an LLVM IR optimization step in addition to that? That goes from LLVM IR to more optimized LLVM IR before going to machine code?</p>\n</blockquote>\n<p>Yes.  LLVM is multiple steps internally.  First it does LLVM-&gt;LLVM optimizations, and the LLVM you see from <code>--emit=llvm</code> is after those.  Then LLVM-to-machine-code is another step.</p>",
        "id": 265793886,
        "sender_full_name": "scottmcm",
        "timestamp": 1640172836
    },
    {
        "content": "<p>Here's a more direct demonstration of what happens without the LLVM-LLVM level optimizations, but with the MIR ones: <a href=\"https://godbolt.org/z/xTfa4oE83\">https://godbolt.org/z/xTfa4oE83</a></p>",
        "id": 265794070,
        "sender_full_name": "scottmcm",
        "timestamp": 1640172971
    },
    {
        "content": "<p>There are some bugs that come from which things happen in which step, too -- see &lt;<a href=\"https://github.com/llvm/llvm-project/issues/52701#issuecomment-994710278\">https://github.com/llvm/llvm-project/issues/52701#issuecomment-994710278</a>&gt; for example.</p>",
        "id": 265794318,
        "sender_full_name": "scottmcm",
        "timestamp": 1640173229
    }
]