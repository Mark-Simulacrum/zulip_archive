[
    {
        "content": "<p>Hello, I was trying to squash one of the commits of my PR, but not only did it not work, but I accidentally managed to merge the upstream, causing a disaster of untold proportions. How do I fix this? (Link to the PR: <a href=\"https://github.com/rust-lang/rust/issues/91881\">#91881</a>)</p>",
        "id": 264920154,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639513553
    },
    {
        "content": "<p>Is there a way I can like, reset my branch to the current master and make the modifications again?</p>",
        "id": 264920267,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639513600
    },
    {
        "content": "<p>There's a few different things you can do depending on the current state of your local repo.</p>",
        "id": 264920332,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513629
    },
    {
        "content": "<p>If you're in the middle of a rebase, you can <code>git rebase --abort</code> to go back to the point you were at before you started the rebase.</p>",
        "id": 264920358,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513649
    },
    {
        "content": "<p>Sadly, I managed to push it before I realized the scale of the disaster</p>",
        "id": 264920446,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639513686
    },
    {
        "content": "<p>If the rebase is already over but you still have terminal output from before the rebase, you might be able to pick the commit id you started the rebase from out of the terminal contents. You can then <code>git reset --hard {commit}</code> to go back to that point.</p>",
        "id": 264920467,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513700
    },
    {
        "content": "<p>You can try recovering the commit from the reflog (<code>git reflog</code>). (This is a decent resource <a href=\"https://github.blog/2015-06-08-how-to-undo-almost-anything-with-git/#redo-after-undo-local\">https://github.blog/2015-06-08-how-to-undo-almost-anything-with-git/#redo-after-undo-local</a>)</p>",
        "id": 264920571,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513752
    },
    {
        "content": "<p>It looks like you didn't force push on that branch?</p>",
        "id": 264920714,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513805
    },
    {
        "content": "<p>So your original commit should still be in the commit list somewhere.</p>",
        "id": 264920734,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513815
    },
    {
        "content": "<p>Maybe <code>fc5964b</code>?</p>",
        "id": 264920766,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513835
    },
    {
        "content": "<p>I have 21c73223645 also that looks ok, but fc is another one that looks good</p>",
        "id": 264920854,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639513883
    },
    {
        "content": "<p>What is the suggested worklist if you <code>git fetch origin</code> and then <code>git rebase -i origin/master</code>?</p>",
        "id": 264920990,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513955
    },
    {
        "content": "<p>(assuming you have <a href=\"https://github.com/rust-lang/rust\">https://github.com/rust-lang/rust</a> setup as <code>origin</code>)</p>",
        "id": 264921005,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639513968
    },
    {
        "content": "<p>I have a fork of that as my origin</p>",
        "id": 264921073,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514012
    },
    {
        "content": "<p>If you have rust-lang/rust set as <code>upstream</code> then <code>git fetch upstream</code> and <code>git rebase -i</code></p>",
        "id": 264921100,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514039
    },
    {
        "content": "<p>Or if you don't have it setup at all, you can do <code>git fetch https://github.com/rust-lang/rust</code> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 264921157,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514053
    },
    {
        "content": "<p>I think you'll have to do <code>git rebase -i FETCH_HEAD</code> then?</p>",
        "id": 264921186,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514075
    },
    {
        "content": "<p>let me see</p>",
        "id": 264921192,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514078
    },
    {
        "content": "<p>Yes, that has all the elements</p>",
        "id": 264921234,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514105
    },
    {
        "content": "<p>Yes, that should work. <code>git fetch https://github.com/rust-lang/rust</code> and then <code>git rebase -i FETCH_HEAD</code></p>",
        "id": 264921283,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514124
    },
    {
        "content": "<p>I assume you mean it has all your commits? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 264921358,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514143
    },
    {
        "content": "<p>ok I have a list. there's also a loop with my edits being there twice</p>",
        "id": 264921369,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514145
    },
    {
        "content": "<p>That's probably ok!</p>",
        "id": 264921393,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514156
    },
    {
        "content": "<p>Can you paste it?</p>",
        "id": 264921404,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514158
    },
    {
        "content": "<p>pick e11311439f7 Stabilize iter::zip.<br>\npick fc5964b5d35 Remove iter_zip feature gate from clippy<br>\npick 93b1f15d938 Add -webkit-appearance: none to search input<br>\npick 6fb51bd436e rustdoc: Coalesce some <code>run_test</code> args as one <code>LangString</code> arg<br>\npick 2bb63e3b992 Rename <code>TestOptions</code> to <code>GlobalTestOptions</code><br>\npick 7375a3eb771 doctest: Rename <code>options</code> to <code>rustdoc_options</code><br>\npick eba125f452c hurray for portable simd finding a nice test for this FIXME<br>\npick b41dbc0f258 extra test for bug i found<br>\npick a5ea9d2e927 Instead of checking for exact bounds, try to prove them<br>\npick 52f73baffe6 I wrote these functions, I should use them dang it<br>\npick f359ba3b146 Adjust wording for review<br>\npick ddce27762de Stabilize const_cstr_unchecked<br>\npick 3680ae30be9 manually implement <code>Hash</code> for <code>DefId</code><br>\npick b0ab8a13851 Use spare_capacity_mut instead of invalid unchecked indexing<br>\npick cef589c4741 Allow <code>memcmp</code> for more array comparisons<br>\npick 120d004f4d5 add BinaryHeap::try_reserve and BinaryHeap::try_reserve_exact<br>\npick 46e49c36c96 update feature gate<br>\npick eba1de1d7f0 Suggest to specify a target triple when eh_personality lang item is missing<br>\npick ecf564dcbbf Make <code>MaybeUninit::zeroed</code> <code>const</code><br>\npick 11adf39c7de use try_normalize_erasing_regions in RevealAllVisitor<br>\npick 76c5d8e743e Remove <code>in_band_lifetimes</code> from <code>rustc_const_eval</code><br>\npick bc55fbe4970 Fix HashStable implementation on InferTy<br>\npick 128d8800d01 Remove <code>in_band_lifetimes</code> from <code>rustc_hir</code><br>\npick b1516e466db Stabilize iter::zip.<br>\npick 11aac321744 Add the things so that I can make a commit where I remove them again<br>\npick 21c73223645 Remove iter_zip feature gate from clippy</p>",
        "id": 264921416,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514162
    },
    {
        "content": "<p>Ah, I was hoping it would see those commits are already in <code>FETCH_HEAD</code> and remove them from the list.</p>",
        "id": 264921550,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514206
    },
    {
        "content": "<p>The ones I made are the first two and the last 3.</p>",
        "id": 264921579,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514219
    },
    {
        "content": "<p>Ah ok. Just delete the other ones then.</p>",
        "id": 264921601,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514229
    },
    {
        "content": "<p>and then save and exit</p>",
        "id": 264921608,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514233
    },
    {
        "content": "<p>like delete?</p>",
        "id": 264921654,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514251
    },
    {
        "content": "<p>I have this :<br>\npick e11311439f7 Stabilize iter::zip.<br>\npick fc5964b5d35 Remove iter_zip feature gate from clippy<br>\npick b1516e466db Stabilize iter::zip.<br>\npick 11aac321744 Add the things so that I can make a commit where I remove them again<br>\npick 21c73223645 Remove iter_zip feature gate from clippy</p>",
        "id": 264921692,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514265
    },
    {
        "content": "<p>Yeah, remove the line</p>",
        "id": 264921698,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514266
    },
    {
        "content": "<p>Yeah, that looks good <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 264921717,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514274
    },
    {
        "content": "<p>That won't squash your commits yet but it will get you back to a clean branch state.</p>",
        "id": 264921786,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514287
    },
    {
        "content": "<p>can I remove the last 3</p>",
        "id": 264921796,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514291
    },
    {
        "content": "<p>I find it's easier to work once you've gotten there.</p>",
        "id": 264921806,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514296
    },
    {
        "content": "<p>I think the good ones is Stabilize iter::zip, which has the next one squashed into it, and then the remove iter_zip</p>",
        "id": 264921844,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514318
    },
    {
        "content": "<p>(This is what I was trying to do in the first place</p>",
        "id": 264921880,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514347
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451171\">Patrick Poitras</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Help!.20.28Rebasing.29/near/264921796\">said</a>:</p>\n<blockquote>\n<p>can I remove the last 3</p>\n</blockquote>\n<p>Maybe?</p>",
        "id": 264921886,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514350
    },
    {
        "content": "<p>I can't tell from the web ui why it exists. I'm guessing you merged with master which effectively undid your changes and then you redid them on top of the merge?</p>",
        "id": 264921927,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514377
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>pick Stabilize\nfixup Remove clippy\npick Add clippy\n</code></pre></div>",
        "id": 264921930,
        "sender_full_name": "cuviper",
        "timestamp": 1639514379
    },
    {
        "content": "<p>Ok it has now a merge conflict., which sounds about right the line right above one of the ones i removed was also removed</p>",
        "id": 264922115,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514444
    },
    {
        "content": "<p>er, I might have the sense of add/remove backwards</p>",
        "id": 264922152,
        "sender_full_name": "cuviper",
        "timestamp": 1639514464
    },
    {
        "content": "<p>Yeah, that usually triggers a merge conflict.</p>",
        "id": 264922226,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514511
    },
    {
        "content": "<p>When you've solved the merge conflict, make sure you <code>git rebase --continue</code> and not <code>git commit</code></p>",
        "id": 264922290,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514529
    },
    {
        "content": "<p>I think I did mix it -- so <code>fixup</code> the one that adds clippy back, then <code>pick</code> the one that removes from clippy</p>",
        "id": 264922330,
        "sender_full_name": "cuviper",
        "timestamp": 1639514552
    },
    {
        "content": "<p>Ok! It seems to have worked</p>",
        "id": 264922357,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514571
    },
    {
        "content": "<p>How do I put that on the github?</p>",
        "id": 264922368,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514578
    },
    {
        "content": "<p>git push -f?</p>",
        "id": 264922378,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514586
    },
    {
        "content": "<p>yes</p>",
        "id": 264922382,
        "sender_full_name": "cuviper",
        "timestamp": 1639514589
    },
    {
        "content": "<p>WOOHOO IT WORKED</p>",
        "id": 264922450,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639514631
    },
    {
        "content": "<p>That looks right! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 264922462,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639514642
    },
    {
        "content": "<p><a href=\"https://ohshitgit.com/\">https://ohshitgit.com/</a> is good for this stuff</p>",
        "id": 264928789,
        "sender_full_name": "nnethercote",
        "timestamp": 1639517676
    },
    {
        "content": "<p>Not sure if this was already mentioned, but even when you force-push, GitHub will show the hash of the commit that was overwritten.</p>",
        "id": 264930635,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639518353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451171\">@Patrick Poitras</span> Thanks for the update!  Looks like those first two commits are correct now.</p>\n<p>But somehow there's an empty merge commit too now?  Maybe it needs something like <code>git reset --keep HEAD^; git push --force</code>?</p>",
        "id": 264935226,
        "sender_full_name": "scottmcm",
        "timestamp": 1639520556
    },
    {
        "content": "<p>strange, normally a rebase would eliminate merge commits</p>",
        "id": 264935551,
        "sender_full_name": "The 8472",
        "timestamp": 1639520738
    },
    {
        "content": "<p>I'm completely lost, but it sounds about right for my luck today. Can I squash the empty commit into the previous one so that the new clippy commit is the  2nd one + random merge that does nothing?</p>",
        "id": 264935755,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639520843
    },
    {
        "content": "<p>That would probably work too.  My suggestion above is \"repoint my branch to the previous commit\", since you don't actually need anything from the merge commit.</p>",
        "id": 264935898,
        "sender_full_name": "scottmcm",
        "timestamp": 1639520921
    },
    {
        "content": "<p>Ok I did that, but now it's showing a merge conflict for the merge conflict that was fixed by nothing. lol</p>",
        "id": 264936048,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639521007
    },
    {
        "content": "<p>Wow, this is some of the worst git luck I've ever seen <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 264936098,
        "sender_full_name": "scottmcm",
        "timestamp": 1639521046
    },
    {
        "content": "<p><span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 264936110,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639521051
    },
    {
        "content": "<p>It's definitely a <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> kind of day</p>",
        "id": 264936144,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639521078
    },
    {
        "content": "<p>I think you want <code>git pull --rebase upstream master</code>.</p>",
        "id": 264936152,
        "sender_full_name": "scottmcm",
        "timestamp": 1639521086
    },
    {
        "content": "<p>which will probably ask you to resolve the conflict, add the file, then <code>git rebase --continue</code>.</p>",
        "id": 264936193,
        "sender_full_name": "scottmcm",
        "timestamp": 1639521114
    },
    {
        "content": "<p>I think that worked?</p>",
        "id": 264936466,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639521250
    },
    {
        "content": "<p>Nope, it looks like the conflict markers are in the commit: <a href=\"https://github.com/rust-lang/rust/pull/91881/commits/4121011b50720d136f94cfa377e42e41e8ba1d63#diff-e99396321e72fb89b484d78b42f29c5e9e60a1925430cc6e6ee0349eb4190495R14\">https://github.com/rust-lang/rust/pull/91881/commits/4121011b50720d136f94cfa377e42e41e8ba1d63#diff-e99396321e72fb89b484d78b42f29c5e9e60a1925430cc6e6ee0349eb4190495R14</a></p>",
        "id": 264936782,
        "sender_full_name": "scottmcm",
        "timestamp": 1639521453
    },
    {
        "content": "<p>How? What? Uhhhh</p>",
        "id": 264936928,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639521536
    },
    {
        "content": "<p>I think I must have forgotten to save the file after resolving the conflict? I can't see another scenario</p>",
        "id": 264937094,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639521631
    },
    {
        "content": "<p>Confirmed, the file is sitting unsaved in VSCode <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 264937168,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639521676
    },
    {
        "content": "<p>I have this in my .gitconfig:</p>\n<div class=\"codehilite\"><pre><span></span><code>[alias]\ngraph = log --graph --all --oneline --date=format:&#39;%Y-%m-%d %H:%M&#39; --format=format:&#39;%C(auto)%h %C(green)%cd%C(auto) %s%d&#39;\n</code></pre></div>\n<p>Then I do <code>git graph</code> to be sure the history looks like I expect it to.</p>",
        "id": 264937963,
        "sender_full_name": "The 8472",
        "timestamp": 1639522144
    },
    {
        "content": "<p>Ok I'm back to the merge conflict point.</p>",
        "id": 264938014,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639522187
    },
    {
        "content": "<p>I just need to redo it right this time</p>",
        "id": 264938151,
        "sender_full_name": "Patrick Poitras",
        "timestamp": 1639522260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451171\">Patrick Poitras</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Help!.20.28Rebasing.29/near/264937168\">said</a>:</p>\n<blockquote>\n<p>Confirmed, the file is sitting unsaved in VSCode <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>\n</blockquote>\n<p>I'm so good at this <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>  Or my other favourite, push my branch, get confused why I can't make a PR, then realize I never actually committed the changes.</p>",
        "id": 264938248,
        "sender_full_name": "scottmcm",
        "timestamp": 1639522317
    },
    {
        "content": "<p>I use intellij which autosaves a few milliseconds after you stop typing, never have to save. I think you can enable that in vscode too.</p>",
        "id": 264938379,
        "sender_full_name": "The 8472",
        "timestamp": 1639522396
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Help!.20.28Rebasing.29/near/264937963\">said</a>:</p>\n<blockquote>\n<p>I have this in my .gitconfig:</p>\n<div class=\"codehilite\"><pre><span></span><code>[alias]\ngraph = log --graph --all --oneline --date=format:&#39;%Y-%m-%d %H:%M&#39; --format=format:&#39;%C(auto)%h %C(green)%cd%C(auto) %s%d&#39;\n</code></pre></div>\n<p>Then I do <code>git graph</code> to be sure the history looks like I expect it to.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> Wow! That command is really useful. Thanks :)</p>",
        "id": 264940862,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639523370
    }
]