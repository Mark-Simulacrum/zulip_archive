[
    {
        "content": "<p>In the example below, I realized that <code>HirId</code> of <code>T</code> in <code>T: Copy</code> is different from the <code>HirId</code> of <code>T</code> in <code>where T: Clone</code>.<br>\nIs there a canonical way to map these <code>T</code>s with different <code>HirId</code>s to a same identifier? Thank you <span aria-label=\"crab\" class=\"emoji emoji-1f980\" role=\"img\" title=\"crab\">:crab:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">A</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nb\">Copy</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">T</span>: <span class=\"nb\">Clone</span>\n<span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 213063439,
        "sender_full_name": "JOE1994",
        "timestamp": 1602522272
    },
    {
        "content": "<p>I think I found a way: Using <code>HirId.owner</code> seems to do the job for me <span aria-label=\"crab\" class=\"emoji emoji-1f980\" role=\"img\" title=\"crab\">:crab:</span></p>",
        "id": 213064681,
        "sender_full_name": "JOE1994",
        "timestamp": 1602523082
    },
    {
        "content": "<p>Oh wait, using <code>HirId.owner</code> was not the solution at all..</p>",
        "id": 213066657,
        "sender_full_name": "JOE1994",
        "timestamp": 1602524330
    },
    {
        "content": "<p>not sure how to do this for HirIds, but for DefIds you can call <code>tcx.item_name</code> I think</p>",
        "id": 213067377,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602524766
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyCtxt.html#method.item_name\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyCtxt.html#method.item_name</a></p>",
        "id": 213067389,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602524771
    },
    {
        "content": "<p>I was able to solve my issue using <code>tcx.item_name</code>! Thank you :)</p>",
        "id": 213088953,
        "sender_full_name": "JOE1994",
        "timestamp": 1602538678
    },
    {
        "content": "<p>you're welcome!</p>",
        "id": 213089012,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602538698
    }
]