[
    {
        "content": "<p>I'm trying to use the rustc package in Debian to compile for the target aarch64-linux-android. The standard library for this target does unsurprisingly seem not to be packaged by Debian, so I've had to download it separately. Now, how do I make rustc use this package that I have downloaded? The package comes with <a href=\"http://install.sh\">install.sh</a>, which installs to an unknown location, that rustc doesn't seem to recognize.</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0463]: can&#39;t find crate for `std`\n  |\n  = note: the `aarch64-linux-android` target may not be installed\n</code></pre></div>",
        "id": 224506576,
        "sender_full_name": "Veverak",
        "timestamp": 1611941528
    },
    {
        "content": "<p>Can you run with <code>RUSTC_LOG=info</code>? It may be possible that rustc considers it a different version and as such forbids loading it.</p>",
        "id": 224506864,
        "sender_full_name": "bjorn3",
        "timestamp": 1611941667
    },
    {
        "content": "<p>Or rather I am pretty sure that the version different is. The official rustc distribution includes the git commit in the version string. I assume that the debian compiled version doesn't include it.</p>",
        "id": 224507217,
        "sender_full_name": "bjorn3",
        "timestamp": 1611941833
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ rustc --version\nrustc 1.43.0\n</code></pre></div>\n<p>I've downloaded <code>rust-std-1.43.0-aarch64-linux-android.tar.xz</code>.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ RUSTC_LOG=info rustc --target aarch64-linux-android src/main.rs\n[INFO  rustc_metadata::creader] resolving crate `std`\n[INFO  rustc_metadata::creader] falling back to a load\n[INFO  rustc_metadata::locator] lib candidate: /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b1b61f01951b016b.rlib\n[INFO  rustc_metadata::locator] lib candidate: /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b1b61f01951b016b.so\n[INFO  rustc_metadata::locator] rlib reading metadata from: /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b1b61f01951b016b.rlib\n[INFO  rustc_metadata::locator] reading &quot;libstd-b1b61f01951b016b.rlib&quot; =&gt; 78.42µs\n[INFO  rustc_metadata::locator] Rejecting via proc macro: expected true got false\n[INFO  rustc_metadata::locator] metadata mismatch\n[INFO  rustc_metadata::locator] dylib reading metadata from: /usr/lib/x86_64-linux-gnu/libstd-b1b61f01951b016b.so\n[INFO  rustc_metadata::locator] reading &quot;libstd-b1b61f01951b016b.so&quot; =&gt; 16.504163ms\n[INFO  rustc_metadata::locator] Rejecting via proc macro: expected true got false\n[INFO  rustc_metadata::locator] metadata mismatch\n</code></pre></div>",
        "id": 224507676,
        "sender_full_name": "Veverak",
        "timestamp": 1611942039
    },
    {
        "content": "<p>Is that everything?</p>",
        "id": 224507830,
        "sender_full_name": "bjorn3",
        "timestamp": 1611942106
    },
    {
        "content": "<p>yes. Is there anything more I can show?</p>",
        "id": 224507899,
        "sender_full_name": "Veverak",
        "timestamp": 1611942126
    },
    {
        "content": "<p>This is the kind of input I get when trying to use a target that isn't installed at all.</p>",
        "id": 224508371,
        "sender_full_name": "bjorn3",
        "timestamp": 1611942358
    },
    {
        "content": "<p>What is the exact link you downloaded it from?</p>",
        "id": 224508532,
        "sender_full_name": "bjorn3",
        "timestamp": 1611942414
    },
    {
        "content": "<p>I downloaded <code>https://static.rust-lang.org/dist/2020-04-23/rust-std-1.43.0-aarch64-linux-android.tar.xz</code>.</p>\n<p>I guess rustc doesn't find it any better than a target that's not installed at all. Is there a way to check where the target installed and where rustc is looking, or maybe an option to point rustc directly to the folder containing the rlibs?</p>\n<p>Even in case it's impossible to use official libstd with Debian rustc, it would be helpful to confirm that, so I know what to say in response to the people at F-Droid who prefer to use Debian things.</p>",
        "id": 224508650,
        "sender_full_name": "Veverak",
        "timestamp": 1611942467
    },
    {
        "content": "<p>The default prefix is <code>/usr/local</code> instead of <code>/usr</code> it seems. Try passing <code>--prefix /usr</code> when installing it. You will probably also want to uninstall it from <code>/usr/local</code>. I think there is an uninstall script in <code>/usr/local/lib/rustlib</code>.</p>",
        "id": 224509062,
        "sender_full_name": "bjorn3",
        "timestamp": 1611942606
    },
    {
        "content": "<p>That helps. Now it's obviously found, but incompatible.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ sudo ./install.sh --prefix=/usr\ninstall: creating uninstall script at /usr/lib/rustlib/uninstall.sh\ninstall: installing component &#39;rust-std-aarch64-linux-android&#39;\n\n    std is standing at the ready.\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>$ RUSTC_LOG=info rustc --target aarch64-linux-android src/main.rs\n[INFO  rustc_metadata::creader] resolving crate `std`\n[INFO  rustc_metadata::creader] falling back to a load\n[INFO  rustc_metadata::locator] lib candidate: /usr/lib/rustlib/aarch64-linux-android/lib/libstd-08abb398b8e84977.rlib\n[INFO  rustc_metadata::locator] lib candidate: /usr/lib/rustlib/aarch64-linux-android/lib/libstd-08abb398b8e84977.so\n[INFO  rustc_metadata::locator] rlib reading metadata from: /usr/lib/rustlib/aarch64-linux-android/lib/libstd-08abb398b8e84977.rlib\n[INFO  rustc_metadata::locator] reading &quot;libstd-08abb398b8e84977.rlib&quot; =&gt; 295.432µs\n[INFO  rustc_metadata::locator] Rejecting via version: expected rustc 1.43.0 got rustc 1.43.0 (4fb7144ed 2020-04-20)\n[INFO  rustc_metadata::locator] metadata mismatch\n[INFO  rustc_metadata::locator] dylib reading metadata from: /usr/lib/rustlib/aarch64-linux-android/lib/libstd-08abb398b8e84977.so\n[INFO  rustc_metadata::locator] reading &quot;libstd-08abb398b8e84977.so&quot; =&gt; 20.23335ms\n[INFO  rustc_metadata::locator] Rejecting via version: expected rustc 1.43.0 got rustc 1.43.0 (4fb7144ed 2020-04-20)\n[INFO  rustc_metadata::locator] metadata mismatch\n[INFO  rustc_metadata::locator] lib candidate: /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b1b61f01951b016b.rlib\n[INFO  rustc_metadata::locator] lib candidate: /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b1b61f01951b016b.so\n[INFO  rustc_metadata::locator] rlib reading metadata from: /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b1b61f01951b016b.rlib\n[INFO  rustc_metadata::locator] reading &quot;libstd-b1b61f01951b016b.rlib&quot; =&gt; 182.613µs\n[INFO  rustc_metadata::locator] Rejecting via proc macro: expected true got false\n[INFO  rustc_metadata::locator] metadata mismatch\n[INFO  rustc_metadata::locator] dylib reading metadata from: /usr/lib/x86_64-linux-gnu/libstd-b1b61f01951b016b.so\n[INFO  rustc_metadata::locator] reading &quot;libstd-b1b61f01951b016b.so&quot; =&gt; 25.602988ms\n[INFO  rustc_metadata::locator] Rejecting via proc macro: expected true got false\n[INFO  rustc_metadata::locator] metadata mismatch\nerror[E0514]: found crate `std` compiled by an incompatible version of rustc\n  |\n  = help: please recompile that crate using this compiler (rustc 1.43.0)\n  = note: the following crate versions were found:\n          crate `std` compiled by rustc 1.43.0 (4fb7144ed 2020-04-20): /usr/lib/rustlib/aarch64-linux-android/lib/libstd-08abb398b8e84977.rlib\n          crate `std` compiled by rustc 1.43.0 (4fb7144ed 2020-04-20): /usr/lib/rustlib/aarch64-linux-android/lib/libstd-08abb398b8e84977.so\n\nerror: aborting due to previous error\n</code></pre></div>",
        "id": 224509755,
        "sender_full_name": "Veverak",
        "timestamp": 1611942891
    },
    {
        "content": "<p>Yeah, that is a version incompatibility. There is no way to disable this check without recompiling rustc. It may be easier to just use rustup instead of the distro version.</p>",
        "id": 224509946,
        "sender_full_name": "bjorn3",
        "timestamp": 1611942966
    },
    {
        "content": "<p>The problem is that the people at F-Droid are very conservative about how they install software. I have one app <a href=\"https://gitlab.com/fdroid/rfp/-/issues/1611\">submission</a> in progress, and it's not getting anywhere, due to confusion about how to compile Rust code.</p>",
        "id": 224510663,
        "sender_full_name": "Veverak",
        "timestamp": 1611943251
    },
    {
        "content": "<p>if they're suspicious of the rustup toolchain, I don't see why they would accept using the rustup std target either</p>",
        "id": 224514787,
        "sender_full_name": "cuviper",
        "timestamp": 1611945104
    },
    {
        "content": "<p>if it's just a problem of rustup itself, but they would be fine with the upstream-compiled toolchain, you can download and install those files just as you did with the target files</p>",
        "id": 224515046,
        "sender_full_name": "cuviper",
        "timestamp": 1611945230
    },
    {
        "content": "<p>I don't know exactly what's their suspicion. A <a href=\"https://f-droid.org/en/2020/10/14/adding-react-native-app-to-f-droid.html\">blog post about building a React Native app</a> tells that Debian's version of Node is too old, and then downloads a new version and verifies the hash of the downloaded file to make it less suspicious, but then it goes on to install Yarn from the internet without pinning it to a particular hash, and then uses Yarn to install all dependencies without passing the option to use the frozen lockfile.</p>",
        "id": 224515510,
        "sender_full_name": "Veverak",
        "timestamp": 1611945481
    },
    {
        "content": "<p>These are now my instructions for installing everything Rust and the Android target without Rustup and verifying all hashes:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wget <span class=\"se\">\\</span>\n    https://static.rust-lang.org/dist/2020-12-31/rust-std-1.49.0-aarch64-linux-android.tar.xz <span class=\"se\">\\</span>\n    https://static.rust-lang.org/dist/rust-1.49.0-x86_64-unknown-linux-gnu.tar.gz\n<span class=\"nb\">echo</span> -e <span class=\"s2\">\"8b14446df82f3707d69cf58fed92f18e0bff91621c62baf89288ef70e3e92981 rust-1.49.0-x86_64-unknown-linux-gnu.tar.gz\\n188ea78946f8c4f8c0e9e551ced80f5dd03a14b38397dc25dc1bbea2250d9f6c rust-std-1.49.0-aarch64-linux-android.tar.xz\"</span> <span class=\"se\">\\</span>\n    <span class=\"p\">|</span> sha256sum -c\ntar xf rust-std-1.49.0-aarch64-linux-android.tar.xz\n<span class=\"nb\">cd</span> rust-1.49.0-x86_64-unknown-linux-gnu\nsudo ./install.sh\n<span class=\"nb\">cd</span> ..\ntar xf rust-1.49.0-x86_64-unknown-linux-gnu.tar.gz\n<span class=\"nb\">cd</span> rust-std-1.49.0-aarch64-linux-android\nsudo ./install.sh\n</code></pre></div>",
        "id": 224519264,
        "sender_full_name": "Veverak",
        "timestamp": 1611947395
    },
    {
        "content": "<p>Another option would be to ask Debian to provide the cross-compilation targets.</p>",
        "id": 224598871,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1612032479
    }
]