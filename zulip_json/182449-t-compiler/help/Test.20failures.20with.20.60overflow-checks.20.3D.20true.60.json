[
    {
        "content": "<p>I got some test failures (overflow check ICEs) with <code>x test src/test/ui</code> in a <em>clean</em> checkout of <a href=\"https://github.com/rust-lang/rust/commit/e43c2005f250b51e24d294da0b228e0a2dc4d9b2\">e43c2005f250b51e24d294da0b228e0a2dc4d9b2</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>failures:\n\n---- [ui] ui/parser/item-free-const-no-body-semantic-fail.rs stdout ----\n\nerror: Error: expected failure status (Some(1)) but received status Some(101).\nstatus: exit status: 101\ncommand: &quot;/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc&quot; &quot;/home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-const-no-body-semantic-fail.rs&quot; &quot;-Zthreads=1&quot; &quot;--target=x86_64-unknown-linux-gnu&quot; &quot;--error-format&quot; &quot;json&quot; &quot;-Zui-testing&quot; &quot;-Zdeduplicate-diagnostics=no&quot; &quot;-Zemit-future-incompat-report&quot; &quot;--emit&quot; &quot;metadata&quot; &quot;-C&quot; &quot;prefer-dynamic&quot; &quot;--out-dir&quot; &quot;/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/test/ui/parser/item-free-const-no-body-semantic-fail&quot; &quot;-A&quot; &quot;unused&quot; &quot;-Crpath&quot; &quot;-O&quot; &quot;-Cdebuginfo=0&quot; &quot;-Zunstable-options&quot; &quot;-Lnative=/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;-L&quot; &quot;/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/test/ui/parser/item-free-const-no-body-semantic-fail/auxiliary&quot;\nstdout:\n------------------------------------------\n\n------------------------------------------\nstderr:\n------------------------------------------\nerror: free constant item without body\n  --&gt; /home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-const-no-body-semantic-fail.rs:5:1\n   |\nLL | const A: u8; //~ ERROR free constant item without body\n   | ^^^^^^^^^^^-\n   |            |\n   |            help: provide a definition for the constant: `= &lt;expr&gt;;`\n\nerror: free constant item without body\n  --&gt; /home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-const-no-body-semantic-fail.rs:6:1\n   |\nLL | const B; //~ ERROR free constant item without body\n   | ^^^^^^^-\n   |        |\n   |        help: provide a definition for the constant: `= &lt;expr&gt;;`\n\nthread &#39;rustc&#39; panicked at &#39;attempt to subtract with overflow&#39;, /home/hyd-dev/Code/rust-lang/rust/compiler/rustc_session/src/session.rs:477:22\nstack backtrace:\n   0: rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: core::panicking::panic\n   3: rustc_session::session::Session::track_errors\n   4: rustc_typeck::check_crate\n   5: rustc_interface::passes::analysis\n   6: rustc_query_impl::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_query_impl::plumbing::QueryCtxt&gt; for rustc_query_impl::queries::analysis&gt;::compute\n   7: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task_impl\n   8: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_eval_always_task\n   9: rustc_data_structures::stack::ensure_sufficient_stack\n  10: rustc_query_system::query::plumbing::force_query_with_job\n  11: rustc_query_system::query::plumbing::get_query_impl\n  12: rustc_query_system::query::plumbing::get_query\n  13: rustc_interface::passes::QueryContext::enter\n  14: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n  15: rustc_span::with_source_map\n  16: rustc_interface::interface::create_compiler_and_run\n  17: scoped_tls::ScopedKey&lt;T&gt;::set\n  18: rustc_span::with_session_globals\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.53.0-dev running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z threads=1 -Z ui-testing -Z deduplicate-diagnostics=no -Z emit-future-incompat-report -Z unstable-options -C prefer-dynamic -C rpath -C debuginfo=0\n\nquery stack during panic:\n#0 [analysis] running analysis passes on this crate\nend of query stack\nerror: aborting due to 2 previous errors\n\n\n------------------------------------------\n\n\n---- [ui] ui/parser/item-free-static-no-body-semantic-fail.rs stdout ----\n\nerror: Error: expected failure status (Some(1)) but received status Some(101).\nstatus: exit status: 101\ncommand: &quot;/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/stage1/bin/rustc&quot; &quot;/home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-static-no-body-semantic-fail.rs&quot; &quot;-Zthreads=1&quot; &quot;--target=x86_64-unknown-linux-gnu&quot; &quot;--error-format&quot; &quot;json&quot; &quot;-Zui-testing&quot; &quot;-Zdeduplicate-diagnostics=no&quot; &quot;-Zemit-future-incompat-report&quot; &quot;--emit&quot; &quot;metadata&quot; &quot;-C&quot; &quot;prefer-dynamic&quot; &quot;--out-dir&quot; &quot;/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/test/ui/parser/item-free-static-no-body-semantic-fail&quot; &quot;-A&quot; &quot;unused&quot; &quot;-Crpath&quot; &quot;-O&quot; &quot;-Cdebuginfo=0&quot; &quot;-Zunstable-options&quot; &quot;-Lnative=/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;-L&quot; &quot;/home/hyd-dev/Code/rust-lang/rust/build/x86_64-unknown-linux-gnu/test/ui/parser/item-free-static-no-body-semantic-fail/auxiliary&quot;\nstdout:\n------------------------------------------\n\n------------------------------------------\nstderr:\n------------------------------------------\nerror: free static item without body\n  --&gt; /home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-static-no-body-semantic-fail.rs:5:1\n   |\nLL | static A: u8; //~ ERROR free static item without body\n   | ^^^^^^^^^^^^-\n   |             |\n   |             help: provide a definition for the static: `= &lt;expr&gt;;`\n\nerror: free static item without body\n  --&gt; /home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-static-no-body-semantic-fail.rs:6:1\n   |\nLL | static B; //~ ERROR free static item without body\n   | ^^^^^^^^-\n   |         |\n   |         help: provide a definition for the static: `= &lt;expr&gt;;`\n\nerror: free static item without body\n  --&gt; /home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-static-no-body-semantic-fail.rs:8:1\n   |\nLL | static mut C: u8; //~ ERROR free static item without body\n   | ^^^^^^^^^^^^^^^^-\n   |                 |\n   |                 help: provide a definition for the static: `= &lt;expr&gt;;`\n\nerror: free static item without body\n  --&gt; /home/hyd-dev/Code/rust-lang/rust/src/test/ui/parser/item-free-static-no-body-semantic-fail.rs:9:1\n   |\nLL | static mut D; //~ ERROR free static item without body\n   | ^^^^^^^^^^^^-\n   |             |\n   |             help: provide a definition for the static: `= &lt;expr&gt;;`\n\nthread &#39;rustc&#39; panicked at &#39;attempt to subtract with overflow&#39;, /home/hyd-dev/Code/rust-lang/rust/compiler/rustc_session/src/session.rs:477:22\nstack backtrace:\n   0: rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: core::panicking::panic\n   3: rustc_session::session::Session::track_errors\n   4: rustc_typeck::check_crate\n   5: rustc_interface::passes::analysis\n   6: rustc_query_impl::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_query_impl::plumbing::QueryCtxt&gt; for rustc_query_impl::queries::analysis&gt;::compute\n   7: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task_impl\n   8: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_eval_always_task\n   9: rustc_data_structures::stack::ensure_sufficient_stack\n  10: rustc_query_system::query::plumbing::force_query_with_job\n  11: rustc_query_system::query::plumbing::get_query_impl\n  12: rustc_query_system::query::plumbing::get_query\n  13: rustc_interface::passes::QueryContext::enter\n  14: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n  15: rustc_span::with_source_map\n  16: rustc_interface::interface::create_compiler_and_run\n  17: scoped_tls::ScopedKey&lt;T&gt;::set\n  18: rustc_span::with_session_globals\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.53.0-dev running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z threads=1 -Z ui-testing -Z deduplicate-diagnostics=no -Z emit-future-incompat-report -Z unstable-options -C prefer-dynamic -C rpath -C debuginfo=0\n\nquery stack during panic:\n#0 [analysis] running analysis passes on this crate\nend of query stack\nerror: aborting due to 4 previous errors\n\n\n------------------------------------------\n\n\n\nfailures:\n    [ui] ui/parser/item-free-const-no-body-semantic-fail.rs\n    [ui] ui/parser/item-free-static-no-body-semantic-fail.rs\n\ntest result: FAILED. 4 passed; 2 failed; 11741 ignored; 0 measured; 0 filtered out; finished in 0.69s\n\nSome tests failed in compiletest suite=ui mode=ui host=x86_64-unknown-linux-gnu target=x86_64-unknown-linux-gnu\n</code></pre></div>\n<p>Here is my <code>config.toml</code>:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"c1\"># Includes one of the default files in src/bootstrap/defaults</span>\n<span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"s\">\"compiler\"</span>\n<span class=\"n\">changelog-seen</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>This is my Cargo configuration:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[profile.release]</span>\n<span class=\"n\">incremental</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">debug-assertions</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">overflow-checks</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">opt-level</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">codegen-units</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span>\n<span class=\"n\">lto</span> <span class=\"o\">=</span> <span class=\"s\">\"off\"</span>\n<span class=\"n\">panic</span> <span class=\"o\">=</span> <span class=\"s\">\"unwind\"</span>\n</code></pre></div>\n<p>What's going wrong? Is this a <code>rustc</code> bug that was not caught by CI?</p>",
        "id": 233977266,
        "sender_full_name": "hyd-dev",
        "timestamp": 1618080113
    },
    {
        "content": "<p><code>overflow-checks</code> is never enabled on CI.  That <em>may</em> be an oversight, though I wonder if anyone has ever considered it.  I would maybe enable them if <code>debug-assertions</code> is set, though would need to check how much that slows down the gnu-debug job.</p>",
        "id": 233978227,
        "sender_full_name": "Eric Huss",
        "timestamp": 1618080903
    }
]