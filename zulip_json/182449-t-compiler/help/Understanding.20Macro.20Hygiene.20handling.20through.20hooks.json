[
    {
        "content": "<p>Hello,<br>\nI would like to perform source to source transformation in the macros. Is there a compiler hook to understand the macro contexts?  How does the <code>first_x</code> refer to <code>x=1</code>? Is it expanded like a closure?</p>\n<p>Following example is from <a href=\"https://github.com/dtolnay/cargo-expand\">https://github.com/dtolnay/cargo-expand</a> </p>\n<div class=\"codehilite\"><pre><span></span><code>For instance the following function returns 3 when compiled ordinarily by Rust but the expanded code compiles and returns 4.\nfn f() -&gt; i32 {\n    let x = 1;\n    macro_rules! first_x {\n        () =&gt; { x }\n    }\n    let x = 2;\n    x + first_x!()\n}\n</code></pre></div>",
        "id": 244958832,
        "sender_full_name": "BaSh",
        "timestamp": 1625505620
    },
    {
        "content": "<p>When identifiers are referenced inside a macro, they are resolved relative to the macro definition, not the macro invocation. So in this case <code>first_x!()</code> expands to an <code>x</code> that is resolved at the definition of <code>first_x!</code>, which means that it resolves to the first <code>x</code>.</p>",
        "id": 244960101,
        "sender_full_name": "bjorn3",
        "timestamp": 1625506767
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Understanding.20Macro.20Hygiene.20handling.20through.20hooks/near/244960101\">said</a>:</p>\n<blockquote>\n<p>When identifiers are referenced inside a macro, they are resolved relative to the macro definition, not the macro invocation. So in this case <code>first_x!()</code> expands to an <code>x</code> that is resolved at the definition of <code>first_x!</code>, which means that it resolves to the first <code>x</code>.</p>\n</blockquote>\n<p>Thank You! Is there a way to see this through compiler hooks?  I tried with compiler dumps <code>cargo rustc --  -Z unpretty=expanded,hygiene</code> but it was not very clear about the procedure.  </p>\n<div class=\"codehilite\"><pre><span></span><code>fn f /* 476#0 */() -&gt; i32 /* 563#0 */ {\n    let x /* 1309#0 */ = 1;\n\n    macro_rules! first_x /* 1310#0 */ { () =&gt; { x } }\n\n    let x /* 1309#0 */ = 2;\n\n    x /* 1309#0 */ + x /* 1309#23 */                                                  &lt;---------- Different x values.\n}\n</code></pre></div>",
        "id": 244961310,
        "sender_full_name": "BaSh",
        "timestamp": 1625507831
    }
]