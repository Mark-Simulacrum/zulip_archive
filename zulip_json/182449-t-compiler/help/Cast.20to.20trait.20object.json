[
    {
        "content": "<p>Could someone explain how the cast below is implemented?</p>\n<div class=\"codehilite\"><pre><span></span><code>let s: Arc&lt;Mutex&lt;dyn Subscriber&gt; = Arc::new(Mutex::new(DummySubscriber::new()));\n</code></pre></div>\n<p>Here DummySubscriber is a struct type that implements the trait Subscriber.</p>\n<p>The thing is that the value DummySubscriber that needs to be cast to a Subscriber is sitting on the heap behind pointers implementing Arc.  Does the cast allocate a new value on the heap to hold the DummySubscriber and the vtable for the object DummySubscriber cast as trait object Subscriber?</p>",
        "id": 230736898,
        "sender_full_name": "Mark R. Tuttle",
        "timestamp": 1616003511
    },
    {
        "content": "<p>I think the cast here happens after <code>Mutex::new</code> but before <code>Arc::new</code>.</p>",
        "id": 230737508,
        "sender_full_name": "bjorn3",
        "timestamp": 1616003726
    },
    {
        "content": "<p>I don't think so.  If I look at the mir with <code>rustc --emit mir</code>, I see</p>\n<div class=\"codehilite\"><pre><span></span><code>_4 = move _5 as std::sync::Arc&lt;std::sync::Mutex&lt;dyn Subscriber&gt;&gt; (Pointer(Unsize));\n</code></pre></div>\n<p>The value _5 is constructed as I would expect from the rhs of the assignment, and the cast happens in this line on the already-constructed object.</p>",
        "id": 230738179,
        "sender_full_name": "Mark R. Tuttle",
        "timestamp": 1616003892
    },
    {
        "content": "<p>Of course. Forgot that <code>Mutex</code> doesn't actually allocate any memory, so <code>Mutex&lt;dyn Subscriber&gt;</code> itself is a DST, which means that the vtable pointer is stored as part of the fat pointer inside <code>Arc</code>.</p>",
        "id": 230739109,
        "sender_full_name": "bjorn3",
        "timestamp": 1616004215
    },
    {
        "content": "<p>Er, <code>Mutex</code> does actually allocate some memory for the OS mutex to make it possible to move the <code>Mutex</code> without violating the api constraints of many OS mutexes. It just doesn't allocate memory for the wrapped value.</p>",
        "id": 230739386,
        "sender_full_name": "bjorn3",
        "timestamp": 1616004315
    }
]