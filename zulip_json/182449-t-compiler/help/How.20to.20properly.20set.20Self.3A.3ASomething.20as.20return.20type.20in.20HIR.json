[
    {
        "content": "<p>I'm currently creating an associated type on a trait, most of stuff a bit hardcoded in order to try things out</p>",
        "id": 260664113,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636381978
    },
    {
        "content": "<p>I want to use the created associated type <code>__Assoc</code> as the return type of a function on that trait</p>",
        "id": 260664178,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382011
    },
    {
        "content": "<p>I'm doing ...</p>",
        "id": 260664202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382023
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ret_ty_ref</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">hir</span>::<span class=\"n\">TyKind</span>::<span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">hir</span>::<span class=\"n\">QPath</span>::<span class=\"n\">Resolved</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">None</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">arena</span><span class=\"p\">.</span><span class=\"n\">alloc</span><span class=\"p\">(</span><span class=\"n\">hir</span>::<span class=\"n\">Path</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">span</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">lower_span</span><span class=\"p\">(</span><span class=\"n\">span</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">res</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">lower_res</span><span class=\"p\">(</span><span class=\"n\">Res</span>::<span class=\"n\">Def</span><span class=\"p\">(</span><span class=\"n\">DefKind</span>::<span class=\"n\">AssocTy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">return_def_id</span><span class=\"p\">.</span><span class=\"n\">to_def_id</span><span class=\"p\">())),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">segments</span>: <span class=\"nc\">arena_vec</span><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"bp\">self</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">hir</span>::<span class=\"n\">PathSegment</span>::<span class=\"n\">from_ident</span><span class=\"p\">(</span><span class=\"n\">Ident</span>::<span class=\"n\">from_str</span><span class=\"p\">(</span><span class=\"s\">\"Self\"</span><span class=\"p\">)),</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">hir</span>::<span class=\"n\">PathSegment</span>::<span class=\"n\">from_ident</span><span class=\"p\">(</span><span class=\"n\">Ident</span>::<span class=\"n\">from_str</span><span class=\"p\">(</span><span class=\"s\">\"__Assoc\"</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ret_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">ty</span><span class=\"p\">(</span><span class=\"n\">ty_span</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ret_ty_ref</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">hir</span>::<span class=\"n\">FnRetTy</span>::<span class=\"n\">Return</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">arena</span><span class=\"p\">.</span><span class=\"n\">alloc</span><span class=\"p\">(</span><span class=\"n\">ret_ty</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 260664259,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382042
    },
    {
        "content": "<p>note the <code>Self</code> in the <code>PathSegment</code></p>",
        "id": 260664296,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382055
    },
    {
        "content": "<p>that's clearly wrong</p>",
        "id": 260664305,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382060
    },
    {
        "content": "<p>when I try to compile my code I'm getting</p>",
        "id": 260664358,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382088
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error[E0223]: ambiguous associated type\n --&gt; src/test/ui/async-await/async-fns-in-triats/simple-trait-definition.rs:5:28\n  |\n5 |     async fn foo(&amp;self) -&gt; i32;\n  |                            ^^^ help: use fully-qualified syntax: `&lt;Self as MyTrait&gt;::__Assoc`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0223`.\n</code></pre></div>",
        "id": 260664365,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382092
    },
    {
        "content": "<p>how does one properly set up that Self?</p>",
        "id": 260664418,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382115
    },
    {
        "content": "<p>I was thinking about <code>SelfTy</code></p>",
        "id": 260664427,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382121
    },
    {
        "content": "<p>but the resolution of that path is not a <code>Self</code> thing</p>",
        "id": 260664585,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382190
    },
    {
        "content": "<p>ideas/tips/etc are more than welcome :)</p>",
        "id": 260664713,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636382263
    },
    {
        "content": "<p>Right, there's a different variant to use</p>",
        "id": 260669381,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636384142
    },
    {
        "content": "<p>What you're lowering is equivalent to <code>Self::__Assoc</code> and you want <code>&lt;Self as MyTrait&gt;::__Assoc</code></p>",
        "id": 260669429,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636384170
    },
    {
        "content": "<p>It's that <code>None</code> in <code>Resolved</code></p>",
        "id": 260669596,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636384243
    },
    {
        "content": "<p>I would maybe write what you expect to see the lowered ast to look like in the playground, and then view hir</p>",
        "id": 260670013,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636384429
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 260670136,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636384468
    },
    {
        "content": "<p>err, nevermind, that doesn't show what you want</p>",
        "id": 260670382,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636384564
    },
    {
        "content": "<p>But do look at <code>Resolved</code></p>",
        "id": 260670451,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636384596
    },
    {
        "content": "<p>the doc comment explains a bit</p>",
        "id": 260670468,
        "sender_full_name": "Jack Huey",
        "timestamp": 1636384602
    },
    {
        "content": "<p>gonna check this out in a bit, thanks</p>",
        "id": 260674578,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1636386313
    }
]