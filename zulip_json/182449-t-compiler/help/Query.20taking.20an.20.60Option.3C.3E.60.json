[
    {
        "content": "<p>Hey, I'm currently trying to add a new query to rustc. As a key, the query should accept <code>Option&lt;Symbol&gt;</code> as the input should be optional. However, when I try to compile this I get a bunch of errors. Everything works fine if the key only has the type <code>Symbol</code>. Does anyone know how I can use <code>Option&lt;Symbol&gt;</code> as a type?</p>\n<p>This is the query that doesn't compile</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">query</span><span class=\"w\"> </span><span class=\"n\">check_expectations</span><span class=\"p\">(</span><span class=\"n\">key</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Symbol</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">eval_always</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"checking lint expectations (RFC 2383)\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>The error output</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0599</span><span class=\"p\">]</span>: <span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">default_span</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_query_impl</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">plumbing</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">291</span>:<span class=\"mi\">30</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">254</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\">  </span><span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">define_queries</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">255</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">      </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"cp\">$tcx</span>:<span class=\"nc\">tt</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"mi\">256</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"cp\">$($(#[$attr:meta]</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"w\"></span>\n<span class=\"mi\">257</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">          </span><span class=\"p\">[</span><span class=\"cp\">$($modifiers</span>:<span class=\"nc\">tt</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"cp\">$name</span>:<span class=\"nc\">ident</span><span class=\"p\">(</span><span class=\"cp\">$($K</span>:<span class=\"nc\">tt</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"cp\">$V</span>:<span class=\"nc\">ty</span><span class=\"p\">,)</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">291</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                      </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">default_span</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">tcx</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                               </span><span class=\"o\">^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Symbol</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">468</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">      </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">469</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">__</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">define_queries</span><span class=\"o\">!</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span>::: <span class=\"nc\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_query_impl</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">55</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">55</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"n\">rustc_query_append</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">define_queries</span><span class=\"o\">!</span><span class=\"p\">][</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"o\">-------------------------------------------------</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span>::: <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">xfrednet</span><span class=\"o\">/</span><span class=\"n\">workspace</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_middle</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">query</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">18</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">rustc_queries</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">19</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">query</span><span class=\"w\"> </span><span class=\"n\">trigger_delay_span_bug</span><span class=\"p\">(</span><span class=\"n\">key</span>: <span class=\"nc\">DefId</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">20</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"trigger a delay span bug\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">21</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1982</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">1983</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"n\">_in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc_query_append</span><span class=\"o\">!</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0599</span><span class=\"p\">]</span>: <span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">key_as_def_id</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_query_impl</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">plumbing</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">295</span>:<span class=\"mi\">36</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">254</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\">  </span><span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">define_queries</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">255</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">      </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"cp\">$tcx</span>:<span class=\"nc\">tt</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"mi\">256</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"cp\">$($(#[$attr:meta]</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"w\"></span>\n<span class=\"mi\">257</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">          </span><span class=\"p\">[</span><span class=\"cp\">$($modifiers</span>:<span class=\"nc\">tt</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"cp\">$name</span>:<span class=\"nc\">ident</span><span class=\"p\">(</span><span class=\"cp\">$($K</span>:<span class=\"nc\">tt</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"cp\">$V</span>:<span class=\"nc\">ty</span><span class=\"p\">,)</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">295</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">def_kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">key_as_def_id</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                                     </span><span class=\"o\">^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Symbol</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">468</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">      </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">469</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">__</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">define_queries</span><span class=\"o\">!</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span>::: <span class=\"nc\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_query_impl</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">55</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">55</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"n\">rustc_query_append</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">define_queries</span><span class=\"o\">!</span><span class=\"p\">][</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"o\">-------------------------------------------------</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span>::: <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">xfrednet</span><span class=\"o\">/</span><span class=\"n\">workspace</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_middle</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">query</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">18</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">18</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">rustc_queries</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">19</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">query</span><span class=\"w\"> </span><span class=\"n\">trigger_delay_span_bug</span><span class=\"p\">(</span><span class=\"n\">key</span>: <span class=\"nc\">DefId</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">20</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"trigger a delay span bug\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">21</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1982</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">1983</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"n\">_in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">expansion</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc_query_append</span><span class=\"o\">!</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"w\"> </span><span class=\"p\">(</span>#<span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">Checking</span><span class=\"w\"> </span><span class=\"n\">rustc_trait_selection</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">xfrednet</span><span class=\"o\">/</span><span class=\"n\">workspace</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_trait_selection</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n</div></div>\n<p>The same query without Option, that compiles fine:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">query</span><span class=\"w\"> </span><span class=\"n\">check_expectations</span><span class=\"p\">(</span><span class=\"n\">key</span>: <span class=\"nc\">Symbol</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">eval_always</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"checking lint expectations (RFC 2383)\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277316860,
        "sender_full_name": "xFrednet",
        "timestamp": 1648748951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"369415\">@xFrednet</span> looks like you need to implement <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_query_impl/keys/trait.Key.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_query_impl/keys/trait.Key.html</a> for Option&lt;Symbol&gt;</p>",
        "id": 277317069,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648749037
    }
]