[
    {
        "content": "<p>In <a href=\"https://github.com/rust-lang/rust/issues/71519\">https://github.com/rust-lang/rust/issues/71519</a>, Gankra suggests to place rust-lld on the path as \"ld\", and they suggest getting the path of rust-lld using <code>$(rustc --print sysroot)/lib/rustlib/$HOST_TARGET_TRIPLE/bin/rust-lld</code>. Am I supposed to execute rustc to get the sysroot and what sets the env var HOST_TARGET_TRIPLE? Also, is placing rust-lld on the PATH as ld already done? I see in <code>rustc_codegen_ssa::back::linker::GccLinker</code> has a field <code>is_ld</code> which is set to true in some branches of <code>rustc_codegen_ssa::back::linker::LinkerInfo::to_linker</code>.</p>",
        "id": 240490887,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622131466
    },
    {
        "content": "<p>There are several functions inside rustc that get the sysroot path. For example <a href=\"https://github.com/rust-lang/rust/blob/ea78d1edf364dd3a4b5ff430f76e2bdd3a713a45/compiler/rustc_interface/src/util.rs#L300-L391\">https://github.com/rust-lang/rust/blob/ea78d1edf364dd3a4b5ff430f76e2bdd3a713a45/compiler/rustc_interface/src/util.rs#L300-L391</a>. <code>filesearch::get_or_default_sysroot</code> would also be an option, but I think the former is the best option. You will likely need to move it to like <code>rustc_session</code> though to be able to access it from the linker code. And you shouldn't read the <code>HOST_TARGET_TRIPLE</code> env var. That is just meant as a stand in for the actual host target triple which you can get using <code>rustc_session::config::host_triple()</code>.</p>",
        "id": 240501288,
        "sender_full_name": "bjorn3",
        "timestamp": 1622135904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"351526\">@Kevin Tran</span></p>",
        "id": 240501303,
        "sender_full_name": "bjorn3",
        "timestamp": 1622135912
    },
    {
        "content": "<p>I see that the first option calls <code>filesearch::get_or_default_sysroot</code> as the first option in the list of candidates, and might extend the list of candidates. Since I must choose only one anyway, wouldn't it be better to just call <code>filesearch::get_or_default_sysroot</code>? Why might the extra candidates be better in getting the path of rust-lld?</p>",
        "id": 240505543,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622137689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span></p>",
        "id": 240505578,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622137704
    },
    {
        "content": "<p>The first function also allows finding rust-lld in the default sysroot when <code>--sysroot</code> is passed by for example <code>xargo</code> and the passed in sysroot doesn't have <code>rust-lld</code>. Basically try all paths in order until you find <code>rust-lld</code>.</p>",
        "id": 240505987,
        "sender_full_name": "bjorn3",
        "timestamp": 1622137908
    },
    {
        "content": "<p>Also, why move the sysroot path code to <code>rustc_session</code> instead of <code>rustc_codegen_ssa</code> where I need to use it? Or why not make <code>sysroot_candidates</code> a pub fn?</p>",
        "id": 240507237,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622138506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span></p>",
        "id": 240507627,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622138660
    },
    {
        "content": "<p>just making it pub won't work as rustc_interface depends on rustc_codegen_ssa and not the other way around. moving it to rustc_session makes more sense than rustc_codegen_ssa as rustc_session has most of the rest of the sysroot handling code.</p>",
        "id": 240507844,
        "sender_full_name": "bjorn3",
        "timestamp": 1622138781
    },
    {
        "content": "<p>When I move the code to rustc_session, libc cannot be found. Any ideas why? <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span></p>",
        "id": 240508942,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622139292
    },
    {
        "content": "<p>oops, all i need to do is just add libc as a dependency</p>",
        "id": 240509228,
        "sender_full_name": "Kevin Tran",
        "timestamp": 1622139451
    }
]