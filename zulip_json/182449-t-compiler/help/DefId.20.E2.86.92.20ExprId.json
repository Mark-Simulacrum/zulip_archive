[
    {
        "content": "<p>If I have a <code>rustc_span::def_id::DefId</code>, how can I obtain a <code>rustc_middle::thir::ExprId</code>? I am obtaining the <code>DefId</code> from a lang item. I'm trying to construct an <code>ExprKind::Call</code>, where the method being called is the lang item.</p>",
        "id": 277207394,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648676313
    },
    {
        "content": "<p>I see <code>thir::Cx::mirror_expr</code> which goes from a <code>hir::Expr</code> to an <code>ExprId</code></p>",
        "id": 277207618,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648676503
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir_build/thir/cx/struct.Cx.html#method.mirror_expr\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_mir_build/thir/cx/struct.Cx.html#method.mirror_expr</a></p>",
        "id": 277207628,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648676514
    },
    {
        "content": "<p>don't know if there's a way to synthesize a <code>hir::Expr</code> from whole cloth that late in compilation</p>",
        "id": 277207686,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648676538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/DefId.20.E2.86.92.20ExprId/near/277207394\">said</a>:</p>\n<blockquote>\n<p>If I have a <code>rustc_span::def_id::DefId</code>, how can I obtain a <code>rustc_middle::thir::ExprId</code>? I am obtaining the <code>DefId</code> from a lang item. I'm trying to construct an <code>ExprKind::Call</code>, where the method being called is the lang item.</p>\n</blockquote>\n<p>Where are you in the compiler, specifically?</p>",
        "id": 277207735,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648676596
    },
    {
        "content": "<p>Yeah, ultimately this is in the \"adjustment\" part of <code>rustc_mir_build</code>. I've no idea what's possible there.</p>",
        "id": 277207740,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648676600
    },
    {
        "content": "<p>ah you answered my question as soon as I sent it, hehe</p>",
        "id": 277207752,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648676615
    },
    {
        "content": "<p><code>rustc_mir_build/src/thir/cx/expr.rs</code> is the file I'm in.</p>",
        "id": 277207755,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648676621
    },
    {
        "content": "<p>Oh you're in thir? I think you can just build a call expr</p>",
        "id": 277207818,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648676645
    },
    {
        "content": "<p>That's what I'm trying to do, actually. It's the <code>fun</code> field that I can't get.</p>",
        "id": 277207848,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648676675
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ExprKind</span>::<span class=\"n\">Call</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">ty</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">type_of</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">require_lang_item</span><span class=\"p\">(</span><span class=\"n\">hir</span>::<span class=\"n\">LangItem</span>::<span class=\"n\">NonZeroU8New</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">span</span><span class=\"p\">)),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fun</span>: <span class=\"nc\">todo</span><span class=\"o\">!</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">args</span>: <span class=\"nb\">Box</span>::<span class=\"n\">new</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">thir</span><span class=\"p\">.</span><span class=\"n\">exprs</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">)]),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">from_hir_call</span>: <span class=\"nc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn_span</span>: <span class=\"o\">*</span><span class=\"n\">span</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277207866,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648676697
    },
    {
        "content": "<p>(ignore the <code>ty</code> â€” I know it'll need to change eventually)</p>",
        "id": 277207893,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648676724
    },
    {
        "content": "<p>I think that's the type of the thing you're calling? I think you need to construct that too..</p>",
        "id": 277207999,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648676793
    },
    {
        "content": "<p><code>fun</code> is <code>ExprId</code></p>",
        "id": 277208031,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648676818
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/thir/enum.ExprKind.html#variant.VarRef\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/thir/enum.ExprKind.html#variant.VarRef</a> maybe</p>",
        "id": 277208086,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648676869
    },
    {
        "content": "<p>I think you need to do something like what <a href=\"https://doc.rust-lang.org/stable/nightly-rustc/rustc_mir_build/thir/cx/struct.Cx.html#method.method_callee\"><code>method_callee</code></a> is doing</p>",
        "id": 277208385,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648677055
    },
    {
        "content": "<p>that is, turn the DefId into a callable expression</p>",
        "id": 277208404,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648677068
    },
    {
        "content": "<p>specifically the overloaded_callee = Some branch</p>",
        "id": 277208446,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648677101
    },
    {
        "content": "<p>then take that ExprKind::Literal (well, the expr that you build from it) and pass it into the <code>fun</code> field of the call.</p>",
        "id": 277208522,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1648677140
    },
    {
        "content": "<p>I'll take a look into that. Not entirely sure what I'm doing, but we'll see <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 277208859,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1648677374
    }
]