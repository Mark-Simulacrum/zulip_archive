[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I am from the <a href=\"https://github.com/rust-lang/rust/issues/78315\">https://github.com/rust-lang/rust/issues/78315</a> . Why <code>Mutability</code> is not taking a <code>Span</code>? I am working on <a href=\"https://github.com/rust-lang/rustfmt/pull/4482\">https://github.com/rust-lang/rustfmt/pull/4482</a> and I want to check comments between <code>mut</code> keyword.</p>",
        "id": 214773127,
        "sender_full_name": "WhizSid",
        "timestamp": 1603837968
    },
    {
        "content": "<p>I'm not the person to ask - maybe <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> or <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> have ideas for adding spans to keywords? (or just an existing way to do this)</p>",
        "id": 214773295,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603838072
    },
    {
        "content": "<p>this is <code>rustc_ast::Mutability</code></p>",
        "id": 214773315,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603838094
    },
    {
        "content": "<p>Spans are not free and are not assigned random AST nodes without a good reason.<br>\n(Different reviewers may disagree on what a \"good reason\" is, though.)</p>\n<p>So far the compiler got away without keeping the mutability span.<br>\nIt would be an optimal solution if rustfmt could extract the necessary span from codemap instead of adding it to rustc, which doesn't need it.<br>\nI'm pretty sure rustfmt already extracts some spans this way, so there should be examples to follow.</p>",
        "id": 214773941,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1603838535
    },
    {
        "content": "<p>Yes there are some methods exist in rustfmt. And currently I am using a one of these.  But I felt like it is a non-idiomatic way. So I asked. Never mind.</p>",
        "id": 214775020,
        "sender_full_name": "WhizSid",
        "timestamp": 1603839368
    }
]