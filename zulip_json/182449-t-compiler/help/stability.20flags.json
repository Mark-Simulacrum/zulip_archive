[
    {
        "content": "<p>Hi there. I'm currently working on issue <a href=\"https://github.com/rust-lang/rust/issues/60302\">#60302</a>, cleaning up some of the longer files in the compiler code. </p>\n<p>I think I'm making some okay progress (albeit slowly - sorry). I've come across a build error about stability flags. I had a quick read about the stability process and I had a few questions. I'm currently just extracting various structs and impl blocks that I think  (I am not sure if anything I'm doing is correct, I guess I'll find out during the pull request phase?) can be kept in their own modules while still trying to keep them related to their original file. Some of these structs that I'm putting into their own modules are throwing errors like this: <code>error: field has missing stability attribute</code>.</p>\n<p>How should I proceed with these errors. Is there a flag I can add to ignore this (would I even want to ignore this) or do I need to go through the process of adding the stability attribute? After all these aren't really new features. I've just copied and pasted some code into new files.</p>",
        "id": 204987336,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595650694
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"324997\">@Alex Griffiths</span> it would help if you could give an example of the errors. Maybe some of these fields are being  explicitly whitelisted elsewhere?</p>",
        "id": 204997831,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595671638
    },
    {
        "content": "<p>Sure thing. Give me a sec.</p>",
        "id": 204998004,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595671971
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error: field has missing stability attribute\n --&gt; src/libcore/str/utf8.rs:6:5\n  |\n6 |     pub valid_up_to: usize,\n  |     ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: field has missing stability attribute\n --&gt; src/libcore/str/utf8.rs:7:5\n  |\n7 |     pub error_len: Option&lt;u8&gt;,\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre></div>\n\n\n<p>Then the struct in <a href=\"http://utf8.rs\">utf8.rs</a></p>\n<div class=\"codehilite\"><pre><span></span><code>pub struct Utf8Error {\n    pub valid_up_to: usize,\n    pub error_len: Option&lt;u8&gt;,\n}\n</code></pre></div>\n\n\n<p>The Utf8Error struct is included in the libcore/str/mod.rs</p>",
        "id": 204998123,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595672229
    },
    {
        "content": "<p>Oh also, sorry, since I directly cut this struct out of the <a href=\"http://mod.rs\">mod.rs</a> file as well,</p>",
        "id": 204998167,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595672287
    },
    {
        "content": "<p>Above it is the flag <code>#[stable(feature = \"rust1\", since=\"1.0.0\")]</code></p>",
        "id": 204998171,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595672317
    },
    {
        "content": "<p>can you push your commits to github?</p>",
        "id": 204998228,
        "sender_full_name": "lcnr",
        "timestamp": 1595672423
    },
    {
        "content": "<p>even if they are failing rn, I think I know the problem here but am not completely sure yet</p>",
        "id": 204998231,
        "sender_full_name": "lcnr",
        "timestamp": 1595672444
    },
    {
        "content": "<p>Sure thing. One moment. Takes my computer a while to handle this repo apparently.</p>",
        "id": 204998238,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595672477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> <a href=\"https://github.com/alex-griffiths/rust/commit/bdbfb4b6de73567ff0b57da9959dfafb4d2c51de\">https://github.com/alex-griffiths/rust/commit/bdbfb4b6de73567ff0b57da9959dfafb4d2c51de</a></p>",
        "id": 204998475,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595672938
    },
    {
        "content": "<p>yeha, so you now export the fields of drain here</p>",
        "id": 204998483,
        "sender_full_name": "lcnr",
        "timestamp": 1595672977
    },
    {
        "content": "<p>by adding <code>pub</code> to the fields</p>",
        "id": 204998487,
        "sender_full_name": "lcnr",
        "timestamp": 1595672990
    },
    {
        "content": "<p>You probably can fix this by either using <code>pub(super)</code></p>",
        "id": 204998529,
        "sender_full_name": "lcnr",
        "timestamp": 1595673007
    },
    {
        "content": "<p>or adding a <code>pub(super)</code> constructor to <code>Drain</code> and keep the fields private, which is probably the best solution imo</p>",
        "id": 204998535,
        "sender_full_name": "lcnr",
        "timestamp": 1595673034
    },
    {
        "content": "<p>And so I should do that in <code>Utf8Error</code> and <code>CharIndices</code> right?</p>",
        "id": 204998545,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595673082
    },
    {
        "content": "<p>yeah, the same there</p>",
        "id": 204998547,
        "sender_full_name": "lcnr",
        "timestamp": 1595673094
    },
    {
        "content": "<p>I don't know if you've looked at the issue I'm working on at the moment, but would you be able to give me a quick yes or no to let me know if I'm heading in the right direction with what I'm doing right now?</p>",
        "id": 204998597,
        "sender_full_name": "Alex Griffiths",
        "timestamp": 1595673192
    },
    {
        "content": "<p>This is pretty much what you've done here:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">mod</span> <span class=\"nn\">outer</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">field</span>: <span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">mod</span> <span class=\"nn\">new_outer</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">mod</span> <span class=\"nn\">inner</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">field</span>: <span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">inner</span>::<span class=\"n\">Foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// outer::Foo { field: 7 };</span>\n<span class=\"w\">    </span><span class=\"c1\">// ^ this fails</span>\n<span class=\"w\">    </span><span class=\"n\">new_outer</span>::<span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">field</span>: <span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 204998599,
        "sender_full_name": "lcnr",
        "timestamp": 1595673200
    },
    {
        "content": "<p>Yeah, I think moving the iterators and stuff into a separate module/file is a good idea.</p>\n<p>Somewhat ambivalent about <code>str/utf8</code> as it's a fairly small module, but I think that's also not a bad change.</p>",
        "id": 204998655,
        "sender_full_name": "lcnr",
        "timestamp": 1595673350
    },
    {
        "content": "<p>So what you are doing looks right to me <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 204998695,
        "sender_full_name": "lcnr",
        "timestamp": 1595673379
    }
]