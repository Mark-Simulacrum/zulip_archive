[
    {
        "content": "<p>Is there anything out there about using gdb or another debugger on rustc? It's a tough topic to search for.</p>",
        "id": 273304664,
        "sender_full_name": "enterprisey",
        "timestamp": 1645836045
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"362597\">@enterprisey</span> I can't think of any docs offhand.  Can you say what kind of trouble you're running into?  You should be able to just build with debugging and use gdb like you normally would.  rustc can't practically be built without optimizations, so it may be difficult to follow as lots of things will get optimized away, but otherwise it should be usable.</p>",
        "id": 273305412,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645836816
    },
    {
        "content": "<p>I was able to debug rustc using the IntelliJ Rust plugin. It's a bit problematic since the compiler is optimized, but it did work.</p>",
        "id": 273326418,
        "sender_full_name": "Jakub Ber√°nek",
        "timestamp": 1645862981
    },
    {
        "content": "<p>Thanks Eric. I got gdb to work, but I can't view any locals (<code>info locals</code> prints \"No locals\".). Any ideas?</p>",
        "id": 273327802,
        "sender_full_name": "enterprisey",
        "timestamp": 1645864899
    },
    {
        "content": "<p>Did you set debuginfo-level to 2? If not debuginfo for locals is not generated. Only debuginfo for source views.</p>",
        "id": 273328036,
        "sender_full_name": "bjorn3",
        "timestamp": 1645865187
    },
    {
        "content": "<p>You said that just as I reached that option while reading config.toml.example. My bad :)</p>",
        "id": 273328104,
        "sender_full_name": "enterprisey",
        "timestamp": 1645865314
    },
    {
        "content": "<p>it did indeed use a lot of ram while linking (I was down to 0.8% of my ram available), but the real problem is now that gdb (rust-gdb) aborts when I try to print certain locals</p>",
        "id": 273388344,
        "sender_full_name": "enterprisey",
        "timestamp": 1645946913
    },
    {
        "content": "<p>(other locals, it works fine)</p>",
        "id": 273388346,
        "sender_full_name": "enterprisey",
        "timestamp": 1645946918
    },
    {
        "content": "<p>...is the recommended workflow just to <code>trace!</code> a lot and not use a debugger, or am I missing something</p>",
        "id": 273388348,
        "sender_full_name": "enterprisey",
        "timestamp": 1645946926
    },
    {
        "content": "<p>(if anyone else wanted to give it a shot, the crashing command was <code>print id</code> at the top of the for loop in <code>resolve_path_with_ribs</code> in <code>rustc_resolve</code>)</p>",
        "id": 273389094,
        "sender_full_name": "enterprisey",
        "timestamp": 1645948127
    },
    {
        "content": "<p>I've used gdb frequently on rustc without any crashes. I turned on debug mode for rustc in config.toml (but still kept optimizations on). Not just debuginfo, but <code>debug = true</code>. Maybe there is some additional info that is missing otherwise?</p>\n<p>Either way, I can strongly recommend using <code>rr</code> when you debug rustc, as it allows you to step backwards.</p>\n<p>That said, I mostly use tracing for debugging things, as I get a larger picture from that and can grep around.</p>",
        "id": 273389440,
        "sender_full_name": "oli",
        "timestamp": 1645948752
    }
]