[
    {
        "content": "<p>Hey everyone! I wanted to start contributing to Rust more and thought I'd love to try and solve an ICE. Can anyone help mentor me?</p>",
        "id": 274597398,
        "sender_full_name": "Milo123459",
        "timestamp": 1646769404
    },
    {
        "content": "<p>Ah, maybe, but it depends on the ICE. Pick one that interests you!</p>",
        "id": 274597680,
        "sender_full_name": "Jubilee",
        "timestamp": 1646769531
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/94710\">https://github.com/rust-lang/rust/issues/94710</a> this one looks cool! I think I'll try to tackle this</p>",
        "id": 274598014,
        "sender_full_name": "Milo123459",
        "timestamp": 1646769638
    },
    {
        "content": "<p>There is no MCVE and the issue here looks like it's related to incremental compilation. I would recommend starting with something easier.</p>",
        "id": 274598764,
        "sender_full_name": "Urgau",
        "timestamp": 1646769915
    },
    {
        "content": "<p>Hmm, opening this, we see the last call before panic was this:</p>\n<blockquote>\n<p><code>3: &lt;rustc_metadata::creader::CStore as rustc_session::cstore::CrateStore&gt;::def_path_hash_to_def_id</code></p>\n</blockquote>\n<p>So I searched the repo for that function: <a href=\"https://github.com/rust-lang/rust/search?q=def_path_hash_to_def_id\">https://github.com/rust-lang/rust/search?q=def_path_hash_to_def_id</a><br>\nAnd found the implementation here: <a href=\"https://github.com/rust-lang/rust/blob/7ccfe2ff1d59666dc0188dfd5847304fec257565/compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs\">https://github.com/rust-lang/rust/blob/7ccfe2ff1d59666dc0188dfd5847304fec257565/compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">def_path_hash_to_def_id</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cnum</span>: <span class=\"nc\">CrateNum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">hash</span>: <span class=\"nc\">DefPathHash</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">DefId</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">def_index</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">get_crate_data</span><span class=\"p\">(</span><span class=\"n\">cnum</span><span class=\"p\">).</span><span class=\"n\">def_path_hash_to_def_index</span><span class=\"p\">(</span><span class=\"n\">hash</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">DefId</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">krate</span>: <span class=\"nc\">cnum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">index</span>: <span class=\"nc\">def_index</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>There's no panic in that function, so it must be one of the functions called internally panicking, and indeed I recheck the panic message because I was a fool not to check it first:</p>\n<blockquote>\n<p>thread 'rustc' panicked at 'called <code>Option::unwrap()</code> on a <code>None</code> value', compiler/rustc_metadata/src/rmeta/def_path_hash_map.rs:18:85<br>\nAnd yes, it's <code>def_path_hash_to_def_index</code> which will be at that path.</p>\n</blockquote>\n<p>So yep.<br>\nIt's almost certainly incr comp.</p>",
        "id": 274600280,
        "sender_full_name": "Jubilee",
        "timestamp": 1646770581
    },
    {
        "content": "<p>Yeah, I should find something easier.</p>",
        "id": 274600403,
        "sender_full_name": "Milo123459",
        "timestamp": 1646770654
    },
    {
        "content": "<p>tbh, it's almost not because of \"finding something easier\", as it is very hard to tell when incr comp issues can be <strong>closed</strong>.</p>",
        "id": 274600528,
        "sender_full_name": "Jubilee",
        "timestamp": 1646770704
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/94654\">https://github.com/rust-lang/rust/issues/94654</a> This looks good?</p>",
        "id": 274600543,
        "sender_full_name": "Milo123459",
        "timestamp": 1646770711
    },
    {
        "content": "<p>Also, what does MCVE stand for?</p>",
        "id": 274600627,
        "sender_full_name": "Milo123459",
        "timestamp": 1646770750
    },
    {
        "content": "<p>yes.<br>\nMinimum Complete Verifiable Example</p>",
        "id": 274600663,
        "sender_full_name": "Jubilee",
        "timestamp": 1646770770
    },
    {
        "content": "<p>Ah, fantastic</p>",
        "id": 274600733,
        "sender_full_name": "Milo123459",
        "timestamp": 1646770795
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">https://stackoverflow.com/help/minimal-reproducible-example</a></p>",
        "id": 274600823,
        "sender_full_name": "Urgau",
        "timestamp": 1646770814
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo-bisect-rustc\">https://github.com/rust-lang/cargo-bisect-rustc</a> I found this tool, was wondering if this should be used for solving ICEs?</p>",
        "id": 274600829,
        "sender_full_name": "Milo123459",
        "timestamp": 1646770816
    },
    {
        "content": "<p>Possibly.<br>\nFor this one, it might not be as helpful, because it looks like this is a parallel-compiler-only version, one of the many tiny issues blocking enabling a parallel compiler.</p>",
        "id": 274600969,
        "sender_full_name": "Jubilee",
        "timestamp": 1646770894
    },
    {
        "content": "<blockquote>\n<p>NOTE this is the alt master rustc, installed via rustup-toolchain-install-master -f -n master -c rustc-dev llvm-tools rust-src clippy rust-analyzer --alt</p>\n</blockquote>",
        "id": 274601003,
        "sender_full_name": "Jubilee",
        "timestamp": 1646770916
    },
    {
        "content": "<p>Oh yeah, good point.<br>\nAnd a parallel compiler? Dreams coming true!</p>",
        "id": 274601086,
        "sender_full_name": "Milo123459",
        "timestamp": 1646770947
    },
    {
        "content": "<p>Unfortunately it's been stuck for a while now due to many tiny little problems.</p>",
        "id": 274601224,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771010
    },
    {
        "content": "<p>Well, solving this is a step in the right direction I suppose!<br>\nAnyway, how should I go about fixing this? Is there a specific place you look for this kind of error?</p>",
        "id": 274601460,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771122
    },
    {
        "content": "<p>Ah, well, first we would visit the traceback:</p>\n<blockquote>\n<p>thread '&lt;unnamed&gt;' panicked at 'WorkerLocal can only be used on the thread pool it was created on', /cargo/registry/src/github.com-1ecc6299db9ec823/rustc-rayon-core-0.3.2/src/worker_local.rs:49:17</p>\n</blockquote>",
        "id": 274601529,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771162
    },
    {
        "content": "<p>Yeah, looked there, noticed that rustc-rayon-core was well.. not in rustc?</p>",
        "id": 274601667,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771209
    },
    {
        "content": "<p>Because of that, I'm not exactly sure where to look? Surely this shouldn't require making a crate change their code.</p>",
        "id": 274601795,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771277
    },
    {
        "content": "<p>Yep!<br>\nrustc is actually mostly built using cargo!</p>",
        "id": 274601800,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771280
    },
    {
        "content": "<p>Ah, I see. So I presume that rustc-rayon-core is being used somewhere in rustc?</p>",
        "id": 274601890,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771311
    },
    {
        "content": "<p>Yep!</p>",
        "id": 274601904,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771318
    },
    {
        "content": "<p>rustc has a somewhat esoteric bootstrap system so that it can do a run-around the normal stability path for cargo and rustc and std features.</p>",
        "id": 274601946,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771343
    },
    {
        "content": "<p>Yeah, the repo and bootstrap stuff is honestly amazing</p>\n<p>So, where is rustc-rayon-core \"being defined\"? Where is the code for the crate in the repo?<br>\nI just ran a quick search and didn't find anything.</p>",
        "id": 274602089,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771411
    },
    {
        "content": "<p>But that bootstrap process essentially amounts to \"pulling in and building a few things and then getting cargo up and running and driving it through the rest of the build with custom commands.\"</p>\n<p>Hmm.</p>",
        "id": 274602242,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771495
    },
    {
        "content": "<p>These are the crates which depend on rustc-rayon:<br>\n<a href=\"https://github.com/rust-lang/rust/search?q=rustc-rayon\">https://github.com/rust-lang/rust/search?q=rustc-rayon</a></p>",
        "id": 274602352,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771533
    },
    {
        "content": "<p>Yeah, saw them depending on it but couldn't actually find where the crate was being defined. Like, where the file is?</p>",
        "id": 274602420,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771574
    },
    {
        "content": "<p>oh.</p>",
        "id": 274602441,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771582
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-rayon/blob/rustc/rayon-core/src/worker_local.rs#L43-L54\">https://github.com/rust-lang/rustc-rayon/blob/rustc/rayon-core/src/worker_local.rs#L43-L54</a></p>",
        "id": 274602454,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771592
    },
    {
        "content": "<p>Thanks!<br>\nSo the ICE is coming from that panic. Does that mean that the more or less usage of rustc-rayon is at fault? Or that function?</p>",
        "id": 274602629,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771655
    },
    {
        "content": "<p>That's a philosophical question I cannot answer.</p>",
        "id": 274603024,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771844
    },
    {
        "content": "<p>Ah, alright.<br>\nIf you don't mind me asking, how am I supposed to fix this? Like, the code.</p>",
        "id": 274603182,
        "sender_full_name": "Milo123459",
        "timestamp": 1646771900
    },
    {
        "content": "<p>The ICE will stop when the caller of the function no longer calls the function in a way that leads to the ICE.</p>",
        "id": 274603352,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771975
    },
    {
        "content": "<p><em>nods sagely</em></p>",
        "id": 274603358,
        "sender_full_name": "Jubilee",
        "timestamp": 1646771978
    },
    {
        "content": "<p>Either because the function is not called, or the function no longer causes a panic when it is called... which happens does not matter.</p>",
        "id": 274603528,
        "sender_full_name": "Jubilee",
        "timestamp": 1646772054
    },
    {
        "content": "<p>Ah</p>",
        "id": 274603568,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772074
    },
    {
        "content": "<p>So, now I need to find where the function is being called</p>",
        "id": 274603717,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772144
    },
    {
        "content": "<p>Specifically the invocation causing this ICE</p>",
        "id": 274603763,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772178
    },
    {
        "content": "<p>Indeed.<br>\nThe backtrace in that issue may continue to be informative (it is behind a click-to-expand widget)</p>",
        "id": 274603864,
        "sender_full_name": "Jubilee",
        "timestamp": 1646772240
    },
    {
        "content": "<p>Found it!</p>",
        "id": 274604022,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772307
    },
    {
        "content": "<p>Seems to be libunwind.rs:95</p>",
        "id": 274604217,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772400
    },
    {
        "content": "<p>Oh. I think that might be the backtrace stuff..</p>",
        "id": 274604290,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772440
    },
    {
        "content": "<p>/std/src/sys/unix/thread.rs:108:17 seems more like it.</p>",
        "id": 274604415,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772483
    },
    {
        "content": "<p>yeah at the end it says:</p>\n<blockquote>\n<p>deadlock handler panicked, aborting process<br>\n[1]    859470 IOT instruction (core dumped)  ~/.rustup/toolchains/master/bin/rustc ./72554.rs</p>\n</blockquote>",
        "id": 274604625,
        "sender_full_name": "Jubilee",
        "timestamp": 1646772595
    },
    {
        "content": "<p>So something is deadlocking?<br>\n<a href=\"https://github.com/Milo123459/rust/blob/64187b837486be90b897c7014572aa3537dc9b27/library/std/src/sys/unix/thread.rs#L102-L111\">https://github.com/Milo123459/rust/blob/64187b837486be90b897c7014572aa3537dc9b27/library/std/src/sys/unix/thread.rs#L102-L111</a> This is the relevant code (I think)</p>",
        "id": 274604746,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772635
    },
    {
        "content": "<p>and we can see here where <code>begin_panic</code> is called, and the call right before it:</p>\n<blockquote>\n<p>14:     0x7f84683d2fe9 - std[54a224735ab911a]::panicking::begin_panic::&lt;&amp;str&gt;<br>\n 15:     0x7f84694a43d0 - rustc_query_system[1506d2c0f1ca8e4e]::query::plumbing::get_query::&lt;rustc_query_impl[5f52c835d70aa024]::queries::generics_of, rustc_query_impl[5f52c835d70aa024]::plumbing::QueryCtxt&gt;</p>\n</blockquote>",
        "id": 274604811,
        "sender_full_name": "Jubilee",
        "timestamp": 1646772673
    },
    {
        "content": "<p>Oh, so it's not in the file I sent?</p>",
        "id": 274604868,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772710
    },
    {
        "content": "<p>That seems to make me think that it's coming from query::plumbing::get_query?</p>",
        "id": 274605107,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772804
    },
    {
        "content": "<p>ooh, and then there's this... Hmmm... tricky.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"mi\">28</span>:     <span class=\"mh\">0x7f84683f5a78</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"n\">f52c835d70aa024</span><span class=\"p\">]</span>::<span class=\"n\">Queries</span><span class=\"o\">&gt;</span>::<span class=\"n\">try_collect_active_jobs</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">29</span>:     <span class=\"mh\">0x7f84683d33a3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">rustc_query_system</span><span class=\"p\">[</span><span class=\"mi\">1506</span><span class=\"n\">d2c0f1ca8e4e</span><span class=\"p\">]</span>::<span class=\"n\">query</span>::<span class=\"n\">job</span>::<span class=\"n\">deadlock</span>::<span class=\"o\">&lt;</span><span class=\"n\">rustc_query_impl</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"n\">f52c835d70aa024</span><span class=\"p\">]</span>::<span class=\"n\">plumbing</span>::<span class=\"n\">QueryCtxt</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">30</span>:     <span class=\"mh\">0x7f8467b81f76</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">scoped_tls</span><span class=\"p\">[</span><span class=\"n\">a76d38c46f15ed9e</span><span class=\"p\">]</span>::<span class=\"n\">ScopedKey</span><span class=\"o\">&lt;</span><span class=\"n\">rustc_span</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"n\">b916fa4cb305af0</span><span class=\"p\">]</span>::<span class=\"n\">SessionGlobals</span><span class=\"o\">&gt;&gt;</span>::<span class=\"n\">set</span>::<span class=\"o\">&lt;</span><span class=\"n\">rustc_interface</span><span class=\"p\">[</span><span class=\"n\">ee304f5e577cf6b9</span><span class=\"p\">]</span>::<span class=\"n\">util</span>::<span class=\"n\">handle_deadlock</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">1</span><span class=\"p\">}</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">0</span><span class=\"p\">}</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">0</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">31</span>:     <span class=\"mh\">0x7f8467bcded6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">rustc_rayon_core</span><span class=\"p\">[</span><span class=\"n\">dda15808133c3082</span><span class=\"p\">]</span>::<span class=\"n\">tlv</span>::<span class=\"n\">with</span>::<span class=\"o\">&lt;</span><span class=\"n\">rustc_middle</span><span class=\"p\">[</span><span class=\"mi\">101</span><span class=\"n\">c9dc362f50b21</span><span class=\"p\">]</span>::<span class=\"n\">ty</span>::<span class=\"n\">context</span>::<span class=\"n\">tls</span>::<span class=\"n\">enter_context</span><span class=\"o\">&lt;</span><span class=\"n\">rustc_interface</span><span class=\"p\">[</span><span class=\"n\">ee304f5e577cf6b9</span><span class=\"p\">]</span>::<span class=\"n\">util</span>::<span class=\"n\">handle_deadlock</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">1</span><span class=\"p\">}</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">0</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">0</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">32</span>:     <span class=\"mh\">0x7f8467b8401d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">[</span><span class=\"mi\">54</span><span class=\"n\">a224735ab911a</span><span class=\"p\">]</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"o\">&lt;</span><span class=\"n\">rustc_interface</span><span class=\"p\">[</span><span class=\"n\">ee304f5e577cf6b9</span><span class=\"p\">]</span>::<span class=\"n\">util</span>::<span class=\"n\">handle_deadlock</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">1</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">33</span>:     <span class=\"mh\">0x7f8467b7bc5a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">[</span><span class=\"mi\">54</span><span class=\"n\">a224735ab911a</span><span class=\"p\">]</span>::<span class=\"n\">panicking</span>::<span class=\"kr\">try</span>::<span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">f66f8263def5172a</span><span class=\"p\">]</span>::<span class=\"n\">panic</span>::<span class=\"n\">unwind_safe</span>::<span class=\"n\">AssertUnwindSafe</span><span class=\"o\">&lt;&lt;</span><span class=\"n\">std</span><span class=\"p\">[</span><span class=\"mi\">54</span><span class=\"n\">a224735ab911a</span><span class=\"p\">]</span>::<span class=\"n\">thread</span>::<span class=\"n\">Builder</span><span class=\"o\">&gt;</span>::<span class=\"n\">spawn_unchecked_</span><span class=\"o\">&lt;</span><span class=\"n\">rustc_interface</span><span class=\"p\">[</span><span class=\"n\">ee304f5e577cf6b9</span><span class=\"p\">]</span>::<span class=\"n\">util</span>::<span class=\"n\">handle_deadlock</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">1</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">1</span><span class=\"p\">}</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">34</span>:     <span class=\"mh\">0x7f8467b77dec</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"n\">std</span><span class=\"p\">[</span><span class=\"mi\">54</span><span class=\"n\">a224735ab911a</span><span class=\"p\">]</span>::<span class=\"n\">thread</span>::<span class=\"n\">Builder</span><span class=\"o\">&gt;</span>::<span class=\"n\">spawn_unchecked_</span><span class=\"o\">&lt;</span><span class=\"n\">rustc_interface</span><span class=\"p\">[</span><span class=\"n\">ee304f5e577cf6b9</span><span class=\"p\">]</span>::<span class=\"n\">util</span>::<span class=\"n\">handle_deadlock</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">1</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span>::<span class=\"p\">{</span><span class=\"n\">closure</span>#<span class=\"mi\">1</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">[</span><span class=\"n\">f66f8263def5172a</span><span class=\"p\">]</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;&gt;</span>::<span class=\"n\">call_once</span>::<span class=\"p\">{</span><span class=\"n\">shim</span>:<span class=\"nc\">vtable</span>#<span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">35</span>:     <span class=\"mh\">0x7f84672ab8c3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">alloc</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">F</span><span class=\"p\">,</span><span class=\"n\">A</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span><span class=\"o\">&lt;</span><span class=\"n\">Args</span><span class=\"o\">&gt;&gt;</span>::<span class=\"n\">call_once</span>::<span class=\"n\">hb7ce1f9a74daab59</span><span class=\"w\"></span>\n<span class=\"w\">                               </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"n\">c274e4969f058b1c644243181ece9f829efa7594</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">boxed</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1854</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">36</span>:     <span class=\"mh\">0x7f84672ab8c3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">alloc</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">F</span><span class=\"p\">,</span><span class=\"n\">A</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span><span class=\"o\">&lt;</span><span class=\"n\">Args</span><span class=\"o\">&gt;&gt;</span>::<span class=\"n\">call_once</span>::<span class=\"n\">hc28d1f774d95b80d</span><span class=\"w\"></span>\n<span class=\"w\">                               </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"n\">c274e4969f058b1c644243181ece9f829efa7594</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">boxed</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1854</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n</code></pre></div>\n</div></div>",
        "id": 274605147,
        "sender_full_name": "Jubilee",
        "timestamp": 1646772824
    },
    {
        "content": "<p>This backtrace stuff is crazy confusing</p>",
        "id": 274605291,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772878
    },
    {
        "content": "<p>Yeah I'm completely lost</p>",
        "id": 274605526,
        "sender_full_name": "Milo123459",
        "timestamp": 1646772987
    },
    {
        "content": "<p>Well this is the full backtrace, so it has some mostly-irrelevant noise to sift.<br>\nIf memory serves, 39 is where the thread begins life, and 0 is where the backtrace finishes.</p>",
        "id": 274605564,
        "sender_full_name": "Jubilee",
        "timestamp": 1646773008
    },
    {
        "content": "<p>Right..</p>",
        "id": 274605704,
        "sender_full_name": "Milo123459",
        "timestamp": 1646773079
    },
    {
        "content": "<p>God, I'm lost completely again. Closest thing I found was the link I sent earlier and this backtrace  is only confusing me more lol</p>",
        "id": 274605876,
        "sender_full_name": "Milo123459",
        "timestamp": 1646773149
    },
    {
        "content": "<p>Alright, if memory serves, 35 and 36 are the Rust runtime starting up which happens to flow through a couple closures.<br>\nWhat really matters is that we then enter the compiler via <code>handle_deadlock</code> here:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/8fa5d74a7cb01ceaf1a07aa6fcaf42137d8bda58/compiler/rustc_interface/src/util.rs#L148-L169\">https://github.com/rust-lang/rust/blob/8fa5d74a7cb01ceaf1a07aa6fcaf42137d8bda58/compiler/rustc_interface/src/util.rs#L148-L169</a></p>",
        "id": 274606434,
        "sender_full_name": "Jubilee",
        "timestamp": 1646773336
    },
    {
        "content": "<p>And then we get all the way up to the query call at 15, and then inside call <code>WorkerLocal::current</code> in a way that causes us to panic.</p>",
        "id": 274606601,
        "sender_full_name": "Jubilee",
        "timestamp": 1646773407
    },
    {
        "content": "<p>So the problem is in <code>backtrace[15..=34]</code></p>",
        "id": 274606770,
        "sender_full_name": "Jubilee",
        "timestamp": 1646773461
    },
    {
        "content": "<p>Right! Thanks for the information. I'll take another look at the backtrace and see what I can find</p>",
        "id": 274607029,
        "sender_full_name": "Milo123459",
        "timestamp": 1646773576
    },
    {
        "content": "<p>I think it's coming from a spawn_unchecked function</p>",
        "id": 274607377,
        "sender_full_name": "Milo123459",
        "timestamp": 1646773749
    },
    {
        "content": "<p>plubming::get_query I guess</p>",
        "id": 274607829,
        "sender_full_name": "Milo123459",
        "timestamp": 1646773987
    },
    {
        "content": "<p>This may not be a good ICE to work on, in that the parallel compiler is not being actively maintained and the fix here is likely to be pretty difficult, I suspect, to identify and work out some patch for</p>",
        "id": 274608334,
        "sender_full_name": "simulacrum",
        "timestamp": 1646774229
    },
    {
        "content": "<p>(particularly for a first-ish issue, it's likely biting off a lot :)</p>",
        "id": 274608368,
        "sender_full_name": "simulacrum",
        "timestamp": 1646774246
    },
    {
        "content": "<p>Ah, let me find another issue.</p>",
        "id": 274608474,
        "sender_full_name": "Milo123459",
        "timestamp": 1646774294
    },
    {
        "content": "<p>Hey, we've made some progress.<br>\nWe now know what a difficult-to-solve problem looks like. :^)</p>",
        "id": 274608502,
        "sender_full_name": "Jubilee",
        "timestamp": 1646774317
    },
    {
        "content": "<p>I also learnt that backtraces are a living hell hole to read!</p>",
        "id": 274608537,
        "sender_full_name": "Milo123459",
        "timestamp": 1646774342
    },
    {
        "content": "<p>haha.</p>",
        "id": 274608595,
        "sender_full_name": "Jubilee",
        "timestamp": 1646774375
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/94680\">https://github.com/rust-lang/rust/issues/94680</a> this looks like a good one</p>",
        "id": 274608620,
        "sender_full_name": "Milo123459",
        "timestamp": 1646774395
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Getting.20into.20solving.20ICEs/near/274608334\">said</a>:</p>\n<blockquote>\n<p>This may not be a good ICE to work on, in that the parallel compiler is not being actively maintained and the fix here is likely to be pretty difficult, I suspect, to identify and work out some patch for</p>\n</blockquote>\n<p>Should there be something like a label for the parallel compiler?</p>",
        "id": 274608716,
        "sender_full_name": "Milo123459",
        "timestamp": 1646774423
    },
    {
        "content": "<p>I just applied some labels.</p>",
        "id": 274608836,
        "sender_full_name": "Jubilee",
        "timestamp": 1646774489
    },
    {
        "content": "<p>Hold on, this issue <a href=\"https://github.com/rust-lang/rust/issues/94680\">https://github.com/rust-lang/rust/issues/94680</a> don't have a backtrace? It seems to be compressed into the error output?</p>",
        "id": 274609090,
        "sender_full_name": "Milo123459",
        "timestamp": 1646774634
    },
    {
        "content": "<p>yeah. Sometimes people report bugs in a different way!</p>",
        "id": 274609762,
        "sender_full_name": "Jubilee",
        "timestamp": 1646774927
    },
    {
        "content": "<p>Ok, so after looking at the backtrace, I think that it is coming from here:<br>\n<code>  13:     0x7fce64e2dea6 - std[54a224735ab911a]::sys_common::backtrace::__rust_end_short_backtrace::&lt;std[54a224735ab911a]::panicking::begin_panic&lt;rustc_errors[e9d593471e7e5a86]::ExplicitBug&gt;::{closure#0}, !&gt;</code> (backtrace line 13)</p>",
        "id": 274652044,
        "sender_full_name": "Milo123459",
        "timestamp": 1646811467
    },
    {
        "content": "<p>Though, I'm not sure</p>",
        "id": 274652047,
        "sender_full_name": "Milo123459",
        "timestamp": 1646811475
    },
    {
        "content": "<p>IIRC, this ICE comes from attempting to allocate on an arena while being in the deadlock handler.  The arena is in a WorkerLocal object, and the deadlock is in a separate thread unknown to the WorkerLocal.  Getting rid of it requires to drop a call to store_nocache somewhere in the query system.</p>",
        "id": 274654383,
        "sender_full_name": "cjgillot",
        "timestamp": 1646813425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"248906\">cjgillot</span>, is this in reference to issue <a href=\"https://github.com/rust-lang/rust/issues/94654\">#94654</a>? I believe <span class=\"user-mention silent\" data-user-id=\"448200\">Milo123459</span> is working on a different issue now, though this seems like good info to comment in <a href=\"https://github.com/rust-lang/rust/issues/94654\">#94654</a></p>",
        "id": 274745406,
        "sender_full_name": "eignnx",
        "timestamp": 1646856679
    },
    {
        "content": "<p>Indeed.</p>",
        "id": 274745997,
        "sender_full_name": "cjgillot",
        "timestamp": 1646856948
    },
    {
        "content": "<p>I am working on a different issue: <a href=\"https://github.com/rust-lang/rust/issues/94680\">https://github.com/rust-lang/rust/issues/94680</a></p>",
        "id": 274747208,
        "sender_full_name": "Milo123459",
        "timestamp": 1646857388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"448200\">@Milo123459</span> I’m not sure if <a href=\"https://github.com/rust-lang/rust/issues/94680\">#94680</a> is a particularly good first ICE to fix. It’s a class of issues I’ve been brainstorming the best way to fix for a while now, and I don’t think it has a particularly good fix without making some changes to how we verify trivially known-false bounds in codegen.</p>",
        "id": 274755568,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646861681
    },
    {
        "content": "<p>Haha, of course. I'll find another one.</p>",
        "id": 274756277,
        "sender_full_name": "Milo123459",
        "timestamp": 1646862029
    },
    {
        "content": "<p>if you’re not looking for ICEs in particular, Mara put up <a href=\"https://github.com/rust-lang/rust/issues/94770\">#94770</a> today. It looks like a pretty cool issue.</p>",
        "id": 274756843,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1646862362
    },
    {
        "content": "<p>I do want to do an ice</p>",
        "id": 274758863,
        "sender_full_name": "Milo123459",
        "timestamp": 1646863409
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/92004\">https://github.com/rust-lang/rust/issues/92004</a> This a good issue?</p>",
        "id": 274879137,
        "sender_full_name": "Milo123459",
        "timestamp": 1646938443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> any thoughts?</p>",
        "id": 275047501,
        "sender_full_name": "Milo123459",
        "timestamp": 1647040568
    },
    {
        "content": "<p>Hello!</p>",
        "id": 275047553,
        "sender_full_name": "Jubilee",
        "timestamp": 1647040609
    },
    {
        "content": "<p>Hey!</p>",
        "id": 275047568,
        "sender_full_name": "Milo123459",
        "timestamp": 1647040622
    },
    {
        "content": "<p>Yeah it seems to have mentorship instructions which at least makes it a decent candidate for taking a look at. <a href=\"https://github.com/rust-lang/rust/issues/92004#issuecomment-996117829\">https://github.com/rust-lang/rust/issues/92004#issuecomment-996117829</a></p>",
        "id": 275047635,
        "sender_full_name": "Jubilee",
        "timestamp": 1647040663
    },
    {
        "content": "<p>Might be good to try to work on minimizing the solution further.</p>",
        "id": 275047742,
        "sender_full_name": "Jubilee",
        "timestamp": 1647040713
    },
    {
        "content": "<p>Alright, cool! Thanks for the info</p>",
        "id": 275047778,
        "sender_full_name": "Milo123459",
        "timestamp": 1647040739
    },
    {
        "content": "<p>This is a very minimal one that sshhhhhould be easy to fix. <a href=\"https://github.com/rust-lang/rust/issues/94822\">https://github.com/rust-lang/rust/issues/94822</a></p>",
        "id": 275047929,
        "sender_full_name": "Jubilee",
        "timestamp": 1647040818
    },
    {
        "content": "<p>because as you may have noticed, this has a fairly straight line into the error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">16</span>:     <span class=\"mh\">0x7fb1f1ac39d2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">panicking</span>::<span class=\"n\">panic_bounds_check</span>::<span class=\"n\">h3395e3e30f1cf171</span><span class=\"w\"></span>\n<span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mi\">1</span><span class=\"n\">eb72580d076935a3e590deb6e5813a5aef3eca4</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">84</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"mi\">17</span>:     <span class=\"mh\">0x7fb1f306383a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">rustc_infer</span><span class=\"p\">[</span><span class=\"mi\">51</span><span class=\"n\">c380136aeb3624</span><span class=\"p\">]</span>::<span class=\"n\">infer</span>::<span class=\"n\">InferCtxt</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">rustc_trait_selection</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"n\">f3069b2459f8e16</span><span class=\"p\">]</span>::<span class=\"n\">traits</span>::<span class=\"n\">error_reporting</span>::<span class=\"n\">suggestions</span>::<span class=\"n\">InferCtxtExt</span><span class=\"o\">&gt;</span>::<span class=\"n\">suggest_floating_point_literal</span><span class=\"w\"></span>\n<span class=\"mi\">18</span>:     <span class=\"mh\">0x7fb1f30678d3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">rustc_infer</span><span class=\"p\">[</span><span class=\"mi\">51</span><span class=\"n\">c380136aeb3624</span><span class=\"p\">]</span>::<span class=\"n\">infer</span>::<span class=\"n\">InferCtxt</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">rustc_trait_selection</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"n\">f3069b2459f8e16</span><span class=\"p\">]</span>::<span class=\"n\">traits</span>::<span class=\"n\">error_reporting</span>::<span class=\"n\">InferCtxtExt</span><span class=\"o\">&gt;</span>::<span class=\"n\">report_selection_error</span><span class=\"w\"></span>\n<span class=\"mi\">19</span>:     <span class=\"mh\">0x7fb1f306e99b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">rustc_infer</span><span class=\"p\">[</span><span class=\"mi\">51</span><span class=\"n\">c380136aeb3624</span><span class=\"p\">]</span>::<span class=\"n\">infer</span>::<span class=\"n\">InferCtxt</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">rustc_trait_selection</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"n\">f3069b2459f8e16</span><span class=\"p\">]</span>::<span class=\"n\">traits</span>::<span class=\"n\">error_reporting</span>::<span class=\"n\">InferCtxtPrivExt</span><span class=\"o\">&gt;</span>::<span class=\"n\">report_fulfillment_error</span><span class=\"w\"></span>\n<span class=\"mi\">20</span>:     <span class=\"mh\">0x7fb1f3063fed</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">rustc_infer</span><span class=\"p\">[</span><span class=\"mi\">51</span><span class=\"n\">c380136aeb3624</span><span class=\"p\">]</span>::<span class=\"n\">infer</span>::<span class=\"n\">InferCtxt</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">rustc_trait_selection</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"n\">f3069b2459f8e16</span><span class=\"p\">]</span>::<span class=\"n\">traits</span>::<span class=\"n\">error_reporting</span>::<span class=\"n\">InferCtxtExt</span><span class=\"o\">&gt;</span>::<span class=\"n\">report_fulfillment_errors</span><span class=\"w\"></span>\n<span class=\"mi\">21</span>:     <span class=\"mh\">0x7fb1f3631109</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">db10f2c3c7942d60</span><span class=\"p\">]</span>::<span class=\"n\">check</span>::<span class=\"n\">fn_ctxt</span>::<span class=\"n\">FnCtxt</span><span class=\"o\">&gt;</span>::<span class=\"n\">check_overloaded_binop</span><span class=\"w\"></span>\n<span class=\"mi\">22</span>:     <span class=\"mh\">0x7fb1f3630573</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">rustc_typeck</span><span class=\"p\">[</span><span class=\"n\">db10f2c3c7942d60</span><span class=\"p\">]</span>::<span class=\"n\">check</span>::<span class=\"n\">fn_ctxt</span>::<span class=\"n\">FnCtxt</span><span class=\"o\">&gt;</span>::<span class=\"n\">check_binop</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275048169,
        "sender_full_name": "Jubilee",
        "timestamp": 1647040973
    },
    {
        "content": "<p>Yeah, making it good to start with.</p>",
        "id": 275048498,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041258
    },
    {
        "content": "<p>Yeah I'm doing that one lmao</p>",
        "id": 275048505,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041268
    },
    {
        "content": "<p>It requires a redefinition of a lang item to happen but tbh I am not sure it isn't showing a more fundamental problem:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/335ffbfa547df94ac236f5c56130cecf99c8d82b/compiler/rustc_middle/src/ty/subst.rs#L362-L369\">https://github.com/rust-lang/rust/blob/335ffbfa547df94ac236f5c56130cecf99c8d82b/compiler/rustc_middle/src/ty/subst.rs#L362-L369</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"cp\">#[inline]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">type_at</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span>: <span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Ty</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">GenericArgKind</span>::<span class=\"n\">Type</span><span class=\"p\">(</span><span class=\"n\">ty</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">unpack</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">ty</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">bug</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"expected type for param #{} in {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275062292,
        "sender_full_name": "Jubilee",
        "timestamp": 1647041596
    },
    {
        "content": "<p>Yeah, found that.</p>",
        "id": 275062371,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041648
    },
    {
        "content": "<p>I hate to ask, but genuinely: how do I fix this? I don't want to write some shitty half-arsed implementation that'll just get me laughed at lol</p>",
        "id": 275062395,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041668
    },
    {
        "content": "<p>Well, when we invoke <code>type_at</code>, we do so with a usize, and then we just index right into the array.</p>",
        "id": 275062466,
        "sender_full_name": "Jubilee",
        "timestamp": 1647041758
    },
    {
        "content": "<p>Yup.</p>",
        "id": 275062513,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041768
    },
    {
        "content": "<p>So are you suggesting if len = 1 and index =1 make index 0?</p>",
        "id": 275062537,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041803
    },
    {
        "content": "<p>Nah.</p>",
        "id": 275062546,
        "sender_full_name": "Jubilee",
        "timestamp": 1647041815
    },
    {
        "content": "<p>This has a failure condition already written for it, right? We're just managing to <strong>not</strong> hit the failure condition.</p>",
        "id": 275062561,
        "sender_full_name": "Jubilee",
        "timestamp": 1647041835
    },
    {
        "content": "<p>Yeah it's in glacier</p>",
        "id": 275062568,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041845
    },
    {
        "content": "<p>Ah I mean the function.</p>",
        "id": 275062574,
        "sender_full_name": "Jubilee",
        "timestamp": 1647041853
    },
    {
        "content": "<p>Oh</p>",
        "id": 275062674,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041910
    },
    {
        "content": "<p>I mean the function is really simple. I just have no idea what the correct implementation is to fix the ICE</p>",
        "id": 275062700,
        "sender_full_name": "Milo123459",
        "timestamp": 1647041929
    },
    {
        "content": "<p>I think <code>bug!</code> actually does throw an ICE, if memory serves, if we hit it.<br>\nThe problem is we aren't hitting the right iCE, we're hitting a boring \"index OoB\" error, making it harder to diagnose.</p>",
        "id": 275062786,
        "sender_full_name": "Jubilee",
        "timestamp": 1647041997
    },
    {
        "content": "<p>So this one is slightly meta.</p>",
        "id": 275062849,
        "sender_full_name": "Jubilee",
        "timestamp": 1647042013
    },
    {
        "content": "<p>Yeah, that would make sense.</p>",
        "id": 275062885,
        "sender_full_name": "Milo123459",
        "timestamp": 1647042059
    },
    {
        "content": "<p>So I presume where that function is being called (more specifically the parameter being passed) is the issue</p>",
        "id": 275062900,
        "sender_full_name": "Milo123459",
        "timestamp": 1647042074
    },
    {
        "content": "<p>Yeah, probably.</p>",
        "id": 275062933,
        "sender_full_name": "Jubilee",
        "timestamp": 1647042110
    },
    {
        "content": "<p>Let me take a look at where it is being called</p>",
        "id": 275063012,
        "sender_full_name": "Milo123459",
        "timestamp": 1647042165
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  21:     0x7f264fa614d9 - &lt;rustc_typeck[7ae584030a131cc9]::check::fn_ctxt::FnCtxt&gt;::check_overloaded_binop\n</code></pre></div>\n<p>I think that's it</p>",
        "id": 275063053,
        "sender_full_name": "Milo123459",
        "timestamp": 1647042221
    },
    {
        "content": "<p>God I still don't understand these bloody backtraces</p>",
        "id": 275063416,
        "sender_full_name": "Milo123459",
        "timestamp": 1647042489
    },
    {
        "content": "<p>I personally would try starting with</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"w\"> </span>   #[inline]<span class=\"w\"></span>\n<span class=\"w\"> </span>   pub fn type_at(&amp;self, i: usize) -&gt; Ty&lt;'tcx&gt; {<span class=\"w\"></span>\n<span class=\"gd\">-       if let GenericArgKind::Type(ty) = self[i].unpack() {</span><span class=\"w\"></span>\n<span class=\"gi\">+       if let Some(GenericArgKind::Type(ty)) = self.get(i).map(|ty| ty.unpack()) {</span><span class=\"w\"></span>\n<span class=\"w\"> </span>           ty<span class=\"w\"></span>\n<span class=\"w\"> </span>       } else {<span class=\"w\"></span>\n<span class=\"w\"> </span>           bug!(\"expected type for param #{} in {:?}\", i, self);<span class=\"w\"></span>\n<span class=\"w\"> </span>       }<span class=\"w\"></span>\n<span class=\"w\"> </span>   }<span class=\"w\"></span>\n</code></pre></div>\n<p>to push the indexing error back into the normal failure path and then run the compiler with that rebuilt function on the code in question.</p>",
        "id": 275063572,
        "sender_full_name": "Jubilee",
        "timestamp": 1647042617
    },
    {
        "content": "<p>Oh yeah, that's pretty smart.</p>",
        "id": 275063602,
        "sender_full_name": "Milo123459",
        "timestamp": 1647042643
    },
    {
        "content": "<p>Well, how should I run a test on this?<br>\nI need to test the MCVE but how?</p>",
        "id": 275063650,
        "sender_full_name": "Milo123459",
        "timestamp": 1647042695
    },
    {
        "content": "<p>You rebuild the compiler per <a href=\"https://rustc-dev-guide.rust-lang.org/getting-started.html\">https://rustc-dev-guide.rust-lang.org/getting-started.html</a><br>\nand then you invoke <code>${dev_rustc} mcve.rs</code></p>",
        "id": 275063753,
        "sender_full_name": "Jubilee",
        "timestamp": 1647042777
    },
    {
        "content": "<p>with <code>${dev_rustc}</code> probably being the direct path to the local compiler you just built.</p>",
        "id": 275063891,
        "sender_full_name": "Jubilee",
        "timestamp": 1647042880
    },
    {
        "content": "<p>I should note that I don't necessarily expect this to make it no longer ICE, I just think it should be driven back onto the normal error path.</p>",
        "id": 275064660,
        "sender_full_name": "Jubilee",
        "timestamp": 1647043552
    }
]