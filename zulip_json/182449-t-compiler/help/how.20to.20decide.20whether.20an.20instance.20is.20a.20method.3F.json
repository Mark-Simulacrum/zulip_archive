[
    {
        "content": "<p>Hi,</p>\n<p>given an instance (mono item if that matters), how do I decide whether it is a method call, and if so, how do I get the type of <code>self</code> and the type the impl block is for?</p>",
        "id": 207174331,
        "sender_full_name": "Jason Hu",
        "timestamp": 1597686252
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"320010\">@Jason Hu</span> What do you need it for?</p>",
        "id": 207181338,
        "sender_full_name": "bjorn3",
        "timestamp": 1597689842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> that is what I want to do. in the project I am working on I want to do some inspection and distinguish normal functions from methods.</p>",
        "id": 207268020,
        "sender_full_name": "Jason Hu",
        "timestamp": 1597761850
    },
    {
        "content": "<p>You could look at the <code>DefPath</code> associated with the <code>DefId</code> of the instance (<code>tcx.def_path</code>) The second to last item in <code>DefPath.data</code> will be <code>DisambiguatedDefPathData { data: DefPathData::Impl, disambiguator: _ }</code> if it is a method. You can probably get the <code>DefId</code> of the impl block using <code>tcx.definitions.def_key</code>. I don't really know how to then get to the impl type. For the self type you can use <code>tcx.generics_of</code> on the instance <code>DefId</code>. Through this you should be able to get the index of the <code>Self</code> param. You can then get that param from <code>instance.substs</code>.</p>",
        "id": 207280107,
        "sender_full_name": "bjorn3",
        "timestamp": 1597767238
    },
    {
        "content": "<p>what if I just consider the current crate? would that be better? in the <code>Impl</code> case of HIR, there is a <code>self_ty</code> field. If I have a HIR type, can I convert that to a <code>ty::Ty</code>? since I have reached MIR, can I assume this conversion must succeed?</p>",
        "id": 207281791,
        "sender_full_name": "Jason Hu",
        "timestamp": 1597768071
    }
]