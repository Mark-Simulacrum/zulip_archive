[
    {
        "content": "<p>How can I resolve substs of an impl method back to their trait version? Example:</p>\n<div class=\"codehilite\"><pre><span></span><code>trait Foo&lt;X, Y&gt; {\n    fn foo(&amp;self);\n}\n\nstruct Dummy;\nimpl Foo&lt;i32, u32&gt; for Dummy {\n    fn foo(&amp;self) { /* ... */ }\n}\n</code></pre></div>\n<p>Now say I have the <code>DefId</code> of <code>Dummy::foo</code>, with <code>substs = []</code>. How do I transform the <code>DefId</code> + its (identity) <code>substs</code> to the substs suitable for the trait method? In this example, I would like to get <code>[Dummy, i32, u32]</code>.</p>\n<p>I have found how to do the opposite mapping (from trait + callsite substs to impl substs) using <code>resolve_instance</code>. However, I can't find how to do the opposite. <code>rustc_trait_selection::traits::translate_substs</code> looks promising, but I cannot make it work, esp. because of the last parameter. I tried something based on code in <code>rustc_ty_utils::instance::resolve_associated_item</code>, but I get a variety of errors like <code>expected item, found method foo in &lt;Dummy as Foo&lt;i32, u32&gt;&gt;::foo</code>.</p>",
        "id": 275044521,
        "sender_full_name": "Aurel Bílý",
        "timestamp": 1647038549
    },
    {
        "content": "<p>You need to fetch the impl's DefId,  you get that via <code>tcx.parent_of(method_def_id)</code>. I'm not sure where to go from here, but potentially <code>SubstsRef::identity_subst</code> or something similarly named could get you what you're looking for</p>",
        "id": 275109676,
        "sender_full_name": "oli",
        "timestamp": 1647108830
    },
    {
        "content": "<p>I don't know, I've looked a lot. The best I can think of is, for an example like:</p>\n<div class=\"codehilite\"><pre><span></span><code>trait Foo&lt;X, Y, ...&gt; { fn method&lt;P, Q, ...&gt;(&amp;self); }\nimpl&lt;A, B, ...&gt; Foo&lt;A, B, ...&gt; for Something { fn method&lt;P, Q, ...&gt;(&amp;self) {} }\n</code></pre></div>\n<p>I can ignore the generics on the method itself, as the type parameters of the impl method and the trait method must match, or at least there must be the same number of them. So, focusing on the trait and the impl block itself, I need some way to get the substs <code>[Foo&lt;A, B, ...&gt;, A, B, ...]</code> (where the trait's identity is <code>[Self, X, Y, ...]</code>).</p>",
        "id": 275228929,
        "sender_full_name": "Aurel Bílý",
        "timestamp": 1647261318
    },
    {
        "content": "<p>Oh, and this might be something I can get with <code>TyCtxt::impl_trait_ref</code>!</p>",
        "id": 275229092,
        "sender_full_name": "Aurel Bílý",
        "timestamp": 1647261431
    },
    {
        "content": "<p>Are you just attempting to get the substs relevant to the trait itself?</p>",
        "id": 275230285,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1647262112
    },
    {
        "content": "<p><code>impl_trait_ref</code> gives you a trait + substs that match the impl</p>",
        "id": 275230358,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1647262157
    },
    {
        "content": "<p>but if your method has other generics on top, those wouldn't be included</p>",
        "id": 275230369,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1647262170
    }
]