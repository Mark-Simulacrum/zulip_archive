[
    {
        "content": "<p>I'm new to the Polonius repo and had some difficulties using the tool. I tried to run an example as specified in the README for generating nll facts on <a href=\"http://issue-47680.rs\">issue-47680.rs</a>: $ rustc -Znll-facts inputs/issue-47680/issue-47680.rs. I switched to nighly by changing the rust-toolchain file and it gave me an error saying \"<code>*temp</code> was mutably borrowed here in the previous iteration of the loop\" I also tried to generate nll facts on a simple test program and it seem to be lacking all the loan fact files comparing to the fact files contained in the polonius example. Am I missing something here? Also is this the write place to ask these kind of questions? Plz let me know. Thank you!</p>",
        "id": 245435340,
        "sender_full_name": "Haochen Zhang",
        "timestamp": 1625833275
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/e3_dF9igEPdZHgIbBNj7Rf5J/Screen-Shot-2021-07-09-at-8.21.55-PM.png\">Screen-Shot-2021-07-09-at-8.21.55-PM.png</a> here are the fact files I generated from my test program</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/e3_dF9igEPdZHgIbBNj7Rf5J/Screen-Shot-2021-07-09-at-8.21.55-PM.png\" title=\"Screen-Shot-2021-07-09-at-8.21.55-PM.png\"><img src=\"/user_uploads/4715/e3_dF9igEPdZHgIbBNj7Rf5J/Screen-Shot-2021-07-09-at-8.21.55-PM.png\"></a></div>",
        "id": 245435466,
        "sender_full_name": "Haochen Zhang",
        "timestamp": 1625833364
    },
    {
        "content": "<p>You might get better feedback in <a class=\"stream\" data-stream-id=\"186049\" href=\"/#narrow/stream/186049-t-compiler.2Fwg-polonius\">#t-compiler/wg-polonius</a></p>",
        "id": 245466352,
        "sender_full_name": "Jack Huey",
        "timestamp": 1625848744
    },
    {
        "content": "<p>so, the polonius-engine version used in rustc is from <a href=\"http://crates.io\">crates.io</a>, and the data format in the repo is not necessarily the same</p>",
        "id": 245467451,
        "sender_full_name": "lqd",
        "timestamp": 1625849335
    },
    {
        "content": "<p>(we have been renaming relations, changing the ordering, etc)</p>",
        "id": 245467691,
        "sender_full_name": "lqd",
        "timestamp": 1625849440
    },
    {
        "content": "<p>if you need the format to match, even though I believe the repo contains up-to-date facts and <code>issue-47680</code> should work if you run polonius on it (but as you mention will not have the same facts as rustc would currently produce), you'd need to use the same version as used in rustc</p>",
        "id": 245467913,
        "sender_full_name": "lqd",
        "timestamp": 1625849543
    },
    {
        "content": "<p>that is, until we make some more progress on ongoing work, release a new version, and update rustc to use that new version</p>",
        "id": 245467984,
        "sender_full_name": "lqd",
        "timestamp": 1625849586
    },
    {
        "content": "<p>I see. <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> Do you happen to know how the fact dumps given in the polonius example (ex. issue-47680) are produced? Or it's in some way manually generated?</p>",
        "id": 246190559,
        "sender_full_name": "Haochen Zhang",
        "timestamp": 1626418754
    },
    {
        "content": "<p>they are usually generated by rustc, but if there were some simple renaming of relations since then that could be done manually. </p>\n<p>the facts are updated whenever the version used in rustc is updated: since the two repos must be updated in lockstep, usually it can happen that the facts are updated by a local rustc, using the most recent revision of polonius-engine. That way the tests of both repos can be run before a polonius release is done, and before the PR using it lands on nightly. </p>\n<p>(But as long as both repos are updated around the same time, it usually doesn’t matter whether the facts are actually updated by a local rustc or a nightly with the version bump. The facts will be the same. If one needs to generate the facts to be able to update the repos then it’s like I describe above)</p>",
        "id": 246193050,
        "sender_full_name": "lqd",
        "timestamp": 1626420712
    },
    {
        "content": "<p>Thanks a lot for the info!</p>",
        "id": 246203367,
        "sender_full_name": "Haochen Zhang",
        "timestamp": 1626428667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421546\">Haochen Zhang</span> has marked this topic as resolved.</p>",
        "id": 246203375,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626428673
    }
]