[
    {
        "content": "<p>What is a <code>ty::GeneratorWitness</code>? To what extent are variables of this type accessible from surface rust? I'm not really sure where to read more about the encoding of generators.</p>",
        "id": 238861336,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621046805
    },
    {
        "content": "<p>it contains all types that may be stored in the interior, as far as type check is concerned</p>",
        "id": 238861505,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621046986
    },
    {
        "content": "<p>the type itself is only used by <code>ty::Generator</code> and is not available in surface Rust AFAIK</p>",
        "id": 238861562,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621047010
    },
    {
        "content": "<p>as for why this list of types isn't stored in the <code>ty::Generator</code> itself, I'm not sure</p>",
        "id": 238861585,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621047038
    },
    {
        "content": "<p>how is this different from closure types, which don't need such a thing?</p>",
        "id": 238861590,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621047058
    },
    {
        "content": "<p>maybe this has to do with values live across an await point</p>",
        "id": 238861611,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621047098
    },
    {
        "content": "<p>yes, that's the \"interior\"</p>",
        "id": 238861625,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621047123
    },
    {
        "content": "<p>Symbol mangling a <code>GeneratorWitness</code> throws a <code>bug!</code> so I guess they are desugared somewhere before codegen?</p>",
        "id": 238862782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1621048179
    },
    {
        "content": "<p>A <code>GeneratorWitness</code> should never show up outside of a <code>Generator</code></p>",
        "id": 238866170,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621051649
    },
    {
        "content": "<p>I'm not sure exactly how symbol mangling for a generator works, but it takes care of any logic needed for the witness types</p>",
        "id": 238866216,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1621051686
    }
]