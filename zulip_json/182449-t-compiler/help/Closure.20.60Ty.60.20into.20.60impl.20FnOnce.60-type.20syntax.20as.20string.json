[
    {
        "content": "<p>Hey there! I'm working on <a href=\"https://github.com/rust-lang/rust/issues/80179\">#80179</a> and was able to convert a function definition (e.g. <code>fn() -&gt; i32 { f }</code>) into a function pointer (the correct way, using <code>Ty::fn_sig</code>) but I'm wondering how I convert a unique closure type (as a <code>rustc_midle::ty::Ty</code>) into the <code>impl Trait</code> return type syntax for a closure, e.g. unique closure type notated as <code>[closure@&lt;anon&gt;:1:15: 1:19]</code> into <code>impl FnOnce() -&gt; i32</code>-type syntax as a <code>String</code>.</p>\n<p>Does anyone know how this can be done?</p>",
        "id": 220551922,
        "sender_full_name": "James",
        "timestamp": 1608523914
    },
    {
        "content": "<p>Alternatively, if there's a way to generically turn a <code>Ty</code> containing a function definition or a closure into valid syntax for a type, then I should probably use that.</p>",
        "id": 220551984,
        "sender_full_name": "James",
        "timestamp": 1608524012
    },
    {
        "content": "<p>rustc_middle::mir::Body?</p>",
        "id": 220553059,
        "sender_full_name": "oliver",
        "timestamp": 1608525762
    },
    {
        "content": "<p>I don't see how that can help me, or if I even have access to MIR at this point.</p>",
        "id": 220553131,
        "sender_full_name": "James",
        "timestamp": 1608525894
    },
    {
        "content": "<p>I thought you were looking in <code>rustc_middle</code></p>",
        "id": 220553208,
        "sender_full_name": "oliver",
        "timestamp": 1608526036
    },
    {
        "content": "<p>might the <code>impl Trait</code> be in the lowered representation I wonder?</p>",
        "id": 220553254,
        "sender_full_name": "oliver",
        "timestamp": 1608526104
    },
    {
        "content": "<p>I'm in typeck</p>",
        "id": 220553260,
        "sender_full_name": "James",
        "timestamp": 1608526149
    },
    {
        "content": "<p>I'm looking to turn a unique closure type into a string representation for a diagnostic that can be used as a valid return type for a function</p>",
        "id": 220553262,
        "sender_full_name": "James",
        "timestamp": 1608526168
    },
    {
        "content": "<p>e.g. in <code>fn f() -&gt; _ { || 5u8 }</code>; you can't have <code>_</code> as a return type so it <em>should</em> suggest to use something like <code>impl Fn() -&gt; 5u8</code> but it currently suggests <code>[closure@&lt;anon&gt;:1:15: 1:21]</code> due to a bug</p>",
        "id": 220553322,
        "sender_full_name": "James",
        "timestamp": 1608526262
    },
    {
        "content": "<p>Unfortunately I can't just take the signature as that's <code>extern \"rust-call\" fn(()) -&gt; u8</code></p>",
        "id": 220553379,
        "sender_full_name": "James",
        "timestamp": 1608526411
    },
    {
        "content": "<p>huh, it looks like <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span>'s post was split off into a separate thread, I'll just link my comments <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Closure.20.60Ty.60.20into.20.60impl.20FnOnce.60-type.20syntax.20as.2E.2E.2E/near/220652864\">here</a></p>",
        "id": 220652966,
        "sender_full_name": "James",
        "timestamp": 1608604054
    },
    {
        "content": "<p>It could be your topic was too long and Zulip glitched. <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 220653040,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608604140
    }
]