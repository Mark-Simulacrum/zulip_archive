[
    {
        "content": "<p>I see <code>visit_expr</code> and <code>visit_block</code>, but no <code>visit_stmt</code>: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/mut_visit/trait.MutVisitor.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/mut_visit/trait.MutVisitor.html</a></p>\n<p>It's there for <code>Visitor</code> so I'm not sure why it's not here: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/visit/trait.Visitor.html#method.visit_stmt\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/visit/trait.Visitor.html#method.visit_stmt</a></p>",
        "id": 201457378,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592619436
    },
    {
        "content": "<p>really this whole thing would be much simpler if there were a <code>filter_stmt</code> on <code>MutVisitor</code></p>",
        "id": 201457986,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592620638
    },
    {
        "content": "<p>Ok it turns out <code>filter_stmt</code> isn't <em>quite</em> what I want - I want to flatten all statements and keep only those which are items.</p>",
        "id": 201460337,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592625480
    },
    {
        "content": "<p>I'm not sure what <code>.flatten()</code> would look like for an <code>ast::Stmt</code> because any expression can itself contain a nested statement, and items can have other nested items</p>",
        "id": 201460467,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592625680
    },
    {
        "content": "<p>I'm going to try going about this a different way that doesn't extensive changes to <code>MutVisitor</code></p>",
        "id": 201460649,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592626031
    },
    {
        "content": "<p>might have gotten it, running <code>xpy test --stage 1 src/test/rustdoc*</code> now</p>",
        "id": 201461207,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1592627155
    }
]