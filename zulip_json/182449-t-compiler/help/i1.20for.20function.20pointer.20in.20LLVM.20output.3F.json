[
    {
        "content": "<p>I see this line in LLVM output of a crate: (context: <a href=\"https://github.com/rust-lang/rust/issues/75089\">https://github.com/rust-lang/rust/issues/75089</a>)</p>\n<div class=\"codehilite\"><pre><span></span><code>; core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt\n; Function Attrs: nounwind\ndeclare zeroext i1 @&quot;_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h9ba9fea9cadf7bd5E&quot;(i32* noalias readonly align 4 dereferenceable(4), %&quot;core::fmt::Formatter&quot;* align 4 dereferenceable(36)) unnamed_addr #1\n</code></pre></div>\n\n\n<p>I'm confused about the <code>i1</code> part here. I don't understand LLVM syntax in details, but I think this is declaring address of a function, but the type is <code>i1</code> which is just one bit? This can't be right. Am I missing anything? What exactly does this line declare?</p>",
        "id": 205885427,
        "sender_full_name": "osa1",
        "timestamp": 1596531646
    },
    {
        "content": "<p>that's the return type.</p>",
        "id": 205915572,
        "sender_full_name": "nagisa",
        "timestamp": 1596552255
    },
    {
        "content": "<p>Interesting.. how can it return a single bit value for <code>Result&lt;(), Error&gt;</code>? It takes two arguments so I think it's not taking an argument for the return value <code>Error</code>either.</p>",
        "id": 205916985,
        "sender_full_name": "osa1",
        "timestamp": 1596552877
    },
    {
        "content": "<p><code>Error</code> is a ZST, so you only need 1 bit to represent the result</p>",
        "id": 205917242,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1596552995
    },
    {
        "content": "<p>Makes sense, thanks.</p>",
        "id": 205917753,
        "sender_full_name": "osa1",
        "timestamp": 1596553221
    }
]