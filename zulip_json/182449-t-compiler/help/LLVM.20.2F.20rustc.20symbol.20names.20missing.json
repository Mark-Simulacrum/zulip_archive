[
    {
        "content": "<p>I'm trying to debug an LLVM assertion, but I don't have symbol names. This is my <code>config.toml</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">[llvm]</span>\n<span class=\"n\">optimize</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">release-debuginfo</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">assertions</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n\n<span class=\"k\">[rust]</span>\n<span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">incremental</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n</code></pre></div>",
        "id": 201473428,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592651588
    },
    {
        "content": "<p>I deleted my <code>build</code> directory and rebuilt overnight, so there shouldn't be any strange leftovers</p>",
        "id": 201473437,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592651629
    },
    {
        "content": "<p>Any other settings I might have missed?</p>",
        "id": 201473605,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592651948
    },
    {
        "content": "<p>It seems like I have symbols once I look at <code>libstd</code>, but not in <code>librustc_driver</code> â€” is there special debug flags for that?</p>",
        "id": 201479112,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592662220
    },
    {
        "content": "<p>I have a <code>build/x86_64-apple-darwin/stage1-rustc/x86_64-apple-darwin/release/deps/librustc_driver-4db96b6858843117.dylib.dSYM</code> which seems like it should be applicable</p>",
        "id": 201479202,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592662433
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>(lldb) script lldb.target.module[&#39;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage2/bin/rustc&#39;].GetNumCompileUnits()\n2\n\n(lldb) script lldb.target.module[&#39;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage2/lib/libstd-4bf044f23608a072.dylib&#39;].GetNumCompileUnits()\n351\n\n(lldb) script lldb.target.module[&#39;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage2/lib/librustc_driver-4db96b6858843117.dylib&#39;].GetNumCompileUnits()\n0\n</code></pre></div>",
        "id": 201479572,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592663050
    },
    {
        "content": "<p>Hm, I think this might be fixed on latest beta but we haven't bumped yet..</p>",
        "id": 201480000,
        "sender_full_name": "simulacrum",
        "timestamp": 1592663889
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/pull/8329\">https://github.com/rust-lang/cargo/pull/8329</a></p>",
        "id": 201480014,
        "sender_full_name": "simulacrum",
        "timestamp": 1592663946
    },
    {
        "content": "<p>But that might not be it since this is presumably not an executable</p>",
        "id": 201480017,
        "sender_full_name": "simulacrum",
        "timestamp": 1592663964
    },
    {
        "content": "<p>Ok; is there a way I can do the bump locally, test it (and then push the bump?)</p>",
        "id": 201480018,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592663964
    },
    {
        "content": "<p>Ah yeah, easiest is probably to rustup update beta and then edit config.toml to point cargo at ~/.rustup/toolchains/beta.../bin/cargo</p>",
        "id": 201480070,
        "sender_full_name": "simulacrum",
        "timestamp": 1592664026
    },
    {
        "content": "<p>(with tilde expanded)</p>",
        "id": 201480073,
        "sender_full_name": "simulacrum",
        "timestamp": 1592664039
    },
    {
        "content": "<p>We have a PR up for the bump to be clear</p>",
        "id": 201480076,
        "sender_full_name": "simulacrum",
        "timestamp": 1592664053
    },
    {
        "content": "<p>Worth a shot; I'll report back in 1.5 hours after the rebuild</p>",
        "id": 201480128,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592664128
    },
    {
        "content": "<p>But if that doesn't help, and I think it might not, I would try and see if there's dsym files in the build/host/stage2/lib directory - if not, you may be able to copy them in manually from stage2-rustc</p>",
        "id": 201480130,
        "sender_full_name": "simulacrum",
        "timestamp": 1592664139
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> you shouldn't need to rebuild llvm</p>",
        "id": 201480134,
        "sender_full_name": "simulacrum",
        "timestamp": 1592664152
    },
    {
        "content": "<p>So x.py clean should delete everything else</p>",
        "id": 201480138,
        "sender_full_name": "simulacrum",
        "timestamp": 1592664166
    },
    {
        "content": "<blockquote>\n<p>copy them in manually from stage2-rustc</p>\n</blockquote>\n<p>Copy them to ... ?</p>",
        "id": 201480153,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592664195
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>running: &quot;/Users/shep/.rustup/toolchains/beta-x86_64-apple-darwin/bin/cargo&quot; &quot;build&quot; &quot;--target&quot; &quot;x86_64-apple-darwin&quot; &quot;-Zbinary-dep-depinfo&quot; &quot;-j&quot; &quot;12&quot; &quot;--release&quot; &quot;--features&quot; &quot;panic-unwind backtrace compiler-builtins-c&quot; &quot;--manifest-path&quot; &quot;/Users/shep/Projects/rust/src/libtest/Cargo.toml&quot; &quot;--message-format&quot; &quot;json-render-diagnostics&quot;\n</code></pre></div>\n\n\n<p>Should I worry that there's no obvious debug symbol arguments in this execution?</p>",
        "id": 201480289,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592664437
    },
    {
        "content": "<p>well cargo itself doesn't really have command line debug flags, so no that should be fine</p>",
        "id": 201482119,
        "sender_full_name": "simulacrum",
        "timestamp": 1592666676
    },
    {
        "content": "<p>(we set an env variable IIRC?)</p>",
        "id": 201482123,
        "sender_full_name": "simulacrum",
        "timestamp": 1592666682
    },
    {
        "content": "<p>I imagine if you're getting std backtraces you can do the same with rustc dsym as std dsym already happened(?)</p>",
        "id": 201482137,
        "sender_full_name": "simulacrum",
        "timestamp": 1592666710
    },
    {
        "content": "<p>I'm not really familiar with the particulars of how dsym/debuginfo on macos works</p>",
        "id": 201482146,
        "sender_full_name": "simulacrum",
        "timestamp": 1592666727
    },
    {
        "content": "<p>Using the newer beta doesn't seem to help</p>",
        "id": 201482549,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592667329
    },
    {
        "content": "<p>What's strange is that LLDB _knows_ there is a debugging file:</p>\n<div class=\"codehilite\"><pre><span></span><code>[  0] 77A76DF3-8E0F-371C-866F-D263997580C1 0x0000000100000000 /Users/shep/Projects/rust/build/x86_64-apple-darwin/stage1/bin/rustc\n      /System/Volumes/Data/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/rustc_binary-d9ae79f3133c58cb.dSYM/Contents/Resources/DWARF/rustc_binary-d9ae79f3133c58cb\n[  1] E4698FBD-806A-3396-B279-E685BA37430B 0x0000000100004000 /usr/lib/dyld\n[  2] 44B06C71-9E27-35C7-8392-93847F85DF07 0x0000000100109000 /Users/shep/Projects/rust/build/x86_64-apple-darwin/stage1/lib/librustc_driver-ac37c53b8f5deab0.dylib\n      /System/Volumes/Data/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_driver-ac37c53b8f5deab0.dylib.dSYM/Contents/Resources/DWARF/librustc_driver-ac37c53b8f5deab0.dylib\n[  3] F90C4365-BAA1-331B-A7A6-562F049C47E1 0x000000010ee17000 /Users/shep/Projects/rust/build/x86_64-apple-darwin/stage1/lib/libstd-bde4c9f9be2d6057.dylib\n      /System/Volumes/Data/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-std/x86_64-apple-darwin/release/deps/libstd-bde4c9f9be2d6057.dylib.dSYM/Contents/Resources/DWARF/libstd-bde4c9f9be2d6057.dylib\n</code></pre></div>",
        "id": 201482593,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592667377
    },
    {
        "content": "<p>And <code>file</code> states </p>\n<div class=\"codehilite\"><pre><span></span><code>/System/Volumes/Data/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_driver-ac37c53b8f5deab0.dylib.dSYM/Contents/Resources/DWARF/librustc_driver-ac37c53b8f5deab0.dylib: Mach-O 64-bit dSYM companion file x86_64\n</code></pre></div>",
        "id": 201482611,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592667448
    },
    {
        "content": "<p>hm</p>",
        "id": 201482925,
        "sender_full_name": "simulacrum",
        "timestamp": 1592667907
    },
    {
        "content": "<p>maybe we're not able to find LLVM debuginfo though?</p>",
        "id": 201482926,
        "sender_full_name": "simulacrum",
        "timestamp": 1592667915
    },
    {
        "content": "<p>I have no idea how static linking and debuginfo play together</p>",
        "id": 201482931,
        "sender_full_name": "simulacrum",
        "timestamp": 1592667928
    },
    {
        "content": "<p>(IIRC we are static linking llvm?)</p>",
        "id": 201482933,
        "sender_full_name": "simulacrum",
        "timestamp": 1592667933
    },
    {
        "content": "<p>That was my understanding as well (... statically linking LLVM into the dynamic library so we can have multiple LLVM backends concurrently, last I remember)</p>",
        "id": 201482979,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592667986
    },
    {
        "content": "<p>that was to support \"new\" LLVM and \"old\" Emscripten LLVM; so that info is a few years old</p>",
        "id": 201482991,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592668015
    },
    {
        "content": "<p>But I feel that the problem has to be one step higher, as the Rust code in <code>librustc_driver</code> also doesn't have symbols</p>",
        "id": 201483016,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592668061
    },
    {
        "content": "<p>e.g. </p>\n<div class=\"codehilite\"><pre><span></span><code>frame #23: 0x000000010010bdaf librustc_driver-ac37c53b8f5deab0.dylib`rustc_interface::interface::run_compiler_in_existing_thread_pool::hb87d26f888e882b2 + 751\nlibrustc_driver-ac37c53b8f5deab0.dylib`rustc_interface::interface::run_compiler_in_existing_thread_pool::hb87d26f888e882b2:\n-&gt;  0x10010bdaf &lt;+751&gt;: movl   %eax, %r15d\n    0x10010bdb2 &lt;+754&gt;: movq   0x638(%rbx), %rax\n    0x10010bdb9 &lt;+761&gt;: testq  %rax, %rax\n    0x10010bdbc &lt;+764&gt;: je     0x10010bdd3               ; &lt;+787&gt;\n</code></pre></div>",
        "id": 201483069,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592668086
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>   Compiling rustc_driver v0.0.0 (/Users/shep/Projects/rust/src/librustc_driver)\n</code></pre></div>\n\n\n<p>How can I get that to be a <code>cargo --verbose</code> output instead? Maybe seeing how that crate is compiled would help</p>",
        "id": 201483392,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592668531
    },
    {
        "content": "<p>And LLVM has <em>some</em> amount of symbols, as running <code>llc</code> inside of <code>lldb</code> shows some source code.</p>",
        "id": 201483572,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592668710
    },
    {
        "content": "<p>I guess I could also try to create a parallel reproduction â€” a C library with debug symbols, linked into a Rust dylib, loaded into a Rust program (ugh that sounds like a lot of work)</p>",
        "id": 201483610,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592668768
    },
    {
        "content": "<p>I'm just a bit surprised that I'm the first to run into this; it's not like macOS is a never-used platform, and I know people use debuggers.</p>",
        "id": 201483688,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592668816
    },
    {
        "content": "<p>-vvvv to x.py should work</p>",
        "id": 201483707,
        "sender_full_name": "simulacrum",
        "timestamp": 1592668845
    },
    {
        "content": "<p>there should be no dynamic linking in the llvm / codegen backends these days by default</p>",
        "id": 201483726,
        "sender_full_name": "simulacrum",
        "timestamp": 1592668869
    },
    {
        "content": "<p>(rustc_driver is still a dylib iirc though)</p>",
        "id": 201483734,
        "sender_full_name": "simulacrum",
        "timestamp": 1592668887
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/LLVM.20.2F.20rustc.20symbol.20names.20missing/near/201482991\">said</a>:</p>\n<blockquote>\n<p>that was to support \"new\" LLVM and \"old\" Emscripten LLVM; so that info is a few years old</p>\n</blockquote>\n<p><code>rustc_codegen_llvm</code> has since been turned into a regular dependency of <code>rustc_driver</code>, so it is no longer possible to have multiple LLVM backends.</p>",
        "id": 201484093,
        "sender_full_name": "bjorn3",
        "timestamp": 1592669258
    },
    {
        "content": "<p>it is, I think, just not easily -- we still have the codegen loading code</p>",
        "id": 201484223,
        "sender_full_name": "simulacrum",
        "timestamp": 1592669394
    },
    {
        "content": "<p>The codegen loading code doesn't support loading from the sysroot anymore. It only supports absolute paths. And yes it is technically still possible to compile <code>rustc_codegen_llvm</code> separately. You do have to add <code>crate-type = [\"dylib\"]</code> and <code>extern crate rustc_driver;</code> though.</p>",
        "id": 201484333,
        "sender_full_name": "bjorn3",
        "timestamp": 1592669506
    },
    {
        "content": "<p>oh sure</p>",
        "id": 201484396,
        "sender_full_name": "simulacrum",
        "timestamp": 1592669552
    },
    {
        "content": "<p>but that all seems like \"support mostly still there\"</p>",
        "id": 201484401,
        "sender_full_name": "simulacrum",
        "timestamp": 1592669563
    },
    {
        "content": "<p>Rebuilding with <code>-vvvv</code>; we'll see if anything pops out</p>",
        "id": 201484898,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592670175
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>rustc command: \\\n&quot;DYLD_LIBRARY_PATH&quot;=&quot;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0/lib&quot; \\\n&quot;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0/bin/rustc&quot; \\\n&quot;--crate-name&quot; &quot;build_script_build&quot; \\\n&quot;--edition=2018&quot; \\\n&quot;src/librustc_driver/build.rs&quot; \\\n&quot;--error-format=json&quot; \\\n&quot;--json=diagnostic-rendered-ansi&quot; \\\n&quot;--crate-type&quot; &quot;bin&quot; \\\n&quot;--emit=dep-info,link&quot; \\\n&quot;-C&quot; &quot;opt-level=3&quot; \\\n&quot;-Cembed-bitcode=no&quot; \\\n&quot;-C&quot; &quot;debuginfo=2&quot; \\\n&quot;--cfg&quot; &quot;feature=\\&quot;llvm\\&quot;&quot; \\\n&quot;-C&quot; &quot;metadata=f21e2d1fd9668325&quot; \\\n&quot;-C&quot; &quot;extra-filename=-f21e2d1fd9668325&quot; \\\n&quot;--out-dir&quot; &quot;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/release/build/rustc_driver-f21e2d1fd9668325&quot; \\\n&quot;-C&quot; &quot;incremental=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/release/incremental&quot; \\\n&quot;-L&quot; &quot;dependency=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/release/deps&quot; \\\n&quot;-Zbinary-dep-depinfo&quot;\n</code></pre></div>",
        "id": 201484991,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592670294
    },
    {
        "content": "<p>so the build script has debugging <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 201485004,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592670315
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>rustc command: \\\n&quot;DYLD_LIBRARY_PATH&quot;=&quot;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0/lib&quot; \\\n&quot;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0/bin/rustc&quot; \\\n&quot;--crate-name&quot; &quot;rustc_driver&quot; \\\n&quot;--edition=2018&quot; \\\n&quot;src/librustc_driver/lib.rs&quot; \\\n&quot;--error-format=json&quot; \\\n&quot;--json=diagnostic-rendered-ansi&quot; \\\n&quot;--crate-type&quot; &quot;dylib&quot; \\\n&quot;--emit=dep-info,link&quot; \\\n&quot;-C&quot; &quot;prefer-dynamic&quot; \\\n&quot;-C&quot; &quot;opt-level=3&quot; \\\n&quot;-Cembed-bitcode=no&quot; \\\n&quot;-C&quot; &quot;debuginfo=2&quot; \\\n&quot;--cfg&quot; &quot;feature=\\&quot;llvm\\&quot;&quot; \\\n&quot;-C&quot; &quot;metadata=ac37c53b8f5deab0&quot; \\\n&quot;-C&quot; &quot;extra-filename=-ac37c53b8f5deab0&quot; \\\n&quot;--out-dir&quot; &quot;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps&quot; \\\n&quot;--target&quot; &quot;x86_64-apple-darwin&quot; \\\n&quot;-C&quot; &quot;incremental=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/incremental&quot; \\\n&quot;-L&quot; &quot;dependency=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps&quot; \\\n&quot;-L&quot; &quot;dependency=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/release/deps&quot; \\\n&quot;--extern&quot; &quot;env_logger=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/libenv_logger-279167b967f1d3a9.rlib&quot; \\\n&quot;--extern&quot; &quot;lazy_static=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/liblazy_static-73707428c7faebec.rlib&quot; \\\n&quot;--extern&quot; &quot;libc=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/liblibc-2ddc9b87cd47ca28.rlib&quot; \\\n&quot;--extern&quot; &quot;log=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/liblog-c9b296a3791658e0.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_ast=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_ast-3a4eed4c61ca1aee.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_ast_pretty=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_ast_pretty-8a5210dab4898efc.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_codegen_ssa=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_codegen_ssa-755bea4b5a82ffe2.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_data_structures=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_data_structures-fefcef1c6b450e7a.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_error_codes=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_error_codes-a6d97085eea602f0.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_errors=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_errors-c64bcc90664ca3de.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_feature=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_feature-30106191771ae53b.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_hir=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_hir-d07084e5ca85481f.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_hir_pretty=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_hir_pretty-1b8165c2917acfaa.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_interface=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_interface-654bb2110d58d634.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_lint=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_lint-a39907fd6d163331.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_metadata=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_metadata-2e15c00629886ae0.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_middle=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_middle-2c2e0c8acf8e51b9.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_mir=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_mir-5c4efa7c7d494816.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_parse=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_parse-54e3fda7a722ed84.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_plugin_impl=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_plugin_impl-041835cd58d884fe.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_save_analysis=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_save_analysis-554311788e63e557.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_serialize=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_serialize-9aa7982af7ecc463.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_session=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_session-570425574f2048ad.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_span=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_span-4c530e026d8b3a4c.rlib&quot; \\\n&quot;--extern&quot; &quot;rustc_target=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/deps/librustc_target-0454220c81561b05.rlib&quot; \\\n&quot;--cfg=bootstrap&quot; \\\n&quot;-Zmacro-backtrace&quot; \\\n&quot;-Zosx-rpath-install-name&quot; \\\n&quot;-Clink-args=-Wl,-rpath,@loader_path/../lib&quot; \\\n&quot;-Wrust_2018_idioms&quot; \\\n&quot;-Wunused_lifetimes&quot; \\\n&quot;-Dwarnings&quot; \\\n&quot;-Zunstable-options&quot; \\\n&quot;-Wrustc::internal&quot; \\\n&quot;-Cprefer-dynamic&quot; \\\n&quot;-Cllvm-args=-import-instr-limit=10&quot; \\\n&quot;-Zbinary-dep-depinfo&quot; \\\n&quot;-L&quot; &quot;native=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/build/psm-a38ad44340af03da/out&quot; \\\n&quot;-L&quot; &quot;native=/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-rustc/x86_64-apple-darwin/release/build/rustc_llvm-fcb13369a7b1386b/out&quot; \\\n&quot;-L&quot; &quot;native=/Users/shep/Projects/rust/build/x86_64-apple-darwin/llvm/build/lib&quot; \\\n&quot;--sysroot&quot; &quot;/Users/shep/Projects/rust/build/x86_64-apple-darwin/stage0-sysroot&quot; \\\n&quot;-C&quot; &quot;debug-assertions=y&quot; \\\n&quot;-Z&quot; &quot;force-unstable-if-unmarked&quot;\n</code></pre></div>",
        "id": 201488222,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592674437
    },
    {
        "content": "<p>so, debuginfo is 2, which is what I'd expect...</p>",
        "id": 201488282,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592674508
    },
    {
        "content": "<p>It's also frustrating because libstd is dynamically linked as well</p>",
        "id": 201489697,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592676498
    },
    {
        "content": "<p>And trying to reproduce doesn't exhibit the same problem. I directly added the dylib project as a dependency and used libloading, but both ways has symbols in the library</p>",
        "id": 201490781,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592677959
    },
    {
        "content": "<p><code>readelf</code> of a solib/binary should answer if the debug info does in fact remain in the final outputs.</p>",
        "id": 201512315,
        "sender_full_name": "nagisa",
        "timestamp": 1592707594
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>readelf --debug-dump=info dsoname | grep -A 2 &#39;Compilation Unit @\n</code></pre></div>\n\n\n<p>is something I had in my scrollback.</p>",
        "id": 201512380,
        "sender_full_name": "nagisa",
        "timestamp": 1592707694
    }
]