[
    {
        "content": "<p>I'm looking for the code in rustc that strips <code>#[derive]</code> attributes from items before they're fed into custom derives. I've found <a href=\"https://github.com/rust-lang/rust/blob/69e1d22ddbc67b25141a735a22a8895a678b32ca/compiler/rustc_expand/src/expand.rs#L1029\">the code</a> that does this for attribute macros already, but <code>#[derive]</code> seems to go through another code path. Any pointers?</p>",
        "id": 233684493,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1617899410
    },
    {
        "content": "<p><code>#[derive]</code> is a regular macro attribute after <a href=\"https://github.com/rust-lang/rust/pull/79078\">https://github.com/rust-lang/rust/pull/79078</a>, so it's the same linked code as for other attributes.</p>",
        "id": 233693325,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1617902514
    },
    {
        "content": "<p>Ah, okay</p>",
        "id": 233693990,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1617902733
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 233693995,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1617902735
    },
    {
        "content": "<p>It seems that custom derives are unable to see later <code>#[derive]</code> attributes, but the code I linked shouldn't be removing those. Are they aggregated somewhere first, or how does this work?</p>",
        "id": 233748290,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1617926287
    },
    {
        "content": "<p>I just tested it locally - it looks like derives are getting expanded in the wrong order</p>",
        "id": 233750658,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1617927973
    },
    {
        "content": "<p>they're getting expanded bottom-to-top (right to left), instead of left-to-right</p>",
        "id": 233750757,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1617928048
    },
    {
        "content": "<p>but each derive gets invoked with the proper input (e.g. the leftmost derive sees the other derives in the input, but it just invoked after them)</p>",
        "id": 233750781,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1617928078
    },
    {
        "content": "<p>derives can't modify the item, so this has probably gone unnoticed for a while</p>",
        "id": 233750842,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1617928103
    },
    {
        "content": "<p>Here's the problem: <a href=\"https://github.com/rust-lang/rust/blob/2e495d2e845cf27740e3665f718acfd3aa17253e/compiler/rustc_expand/src/expand.rs#L516-L542\">https://github.com/rust-lang/rust/blob/2e495d2e845cf27740e3665f718acfd3aa17253e/compiler/rustc_expand/src/expand.rs#L516-L542</a></p>",
        "id": 233750931,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1617928201
    },
    {
        "content": "<p>we push derives in-order, but we then pop off invocations in reverse order</p>",
        "id": 233750993,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1617928219
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/pull/84023\">https://github.com/rust-lang/rust/pull/84023</a></p>",
        "id": 233756369,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1617932858
    }
]