[
    {
        "content": "<p>I'm trying to build the compiler, and I'm repeatedly finding that I run out of memory compiling <code>rustc_middle</code>.</p>",
        "id": 200791898,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592093415
    },
    {
        "content": "<p>I initially thought it might be because my <code>config.toml</code> set <code>parallel-compiler = true</code> and <code>codegen-units = 0</code>, but I've since reverted both of those settings, and I still haven't managed to successfully build <code>rustc_middle</code> without having <code>rustc</code> killed by the OOM killer.</p>",
        "id": 200791911,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592093471
    },
    {
        "content": "<p>(I have 8GB of RAM.)</p>",
        "id": 200791946,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592093522
    },
    {
        "content": "<p>I would appreciate some help trying to figure out if I've done something wrong here.</p>",
        "id": 200791963,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592093537
    },
    {
        "content": "<p>I recall having had trouble building rustc with 8G of memory at about the time 2018 edition was being cooked. Given that the compiler only ever gets more complex (and LLVM ever so slightly more quadratic), I can see it just genuinely not fitting.</p>",
        "id": 200792268,
        "sender_full_name": "nagisa",
        "timestamp": 1592094215
    },
    {
        "content": "<p>Though there are a couple of things you can try: a clean checkout and just <code>x.py build</code> without even creating a config.toml (so the defaults are used) is one.</p>",
        "id": 200792311,
        "sender_full_name": "nagisa",
        "timestamp": 1592094254
    },
    {
        "content": "<p>I'll give that a try, just to make sure.</p>",
        "id": 200792325,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592094332
    },
    {
        "content": "<p>I've been using <code>./x.py build -i --stage 1 src/libstd</code>. Is that likely to be a problem?</p>",
        "id": 200792371,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592094393
    },
    {
        "content": "<p>I would try without <code>-i</code>, given that it is a scratch build anyway.</p>",
        "id": 200792386,
        "sender_full_name": "nagisa",
        "timestamp": 1592094432
    },
    {
        "content": "<p>Already kicked off a build with <code>-i</code> and no <code>config.toml</code>, but if that fails too then I'll try without.</p>",
        "id": 200792472,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592094591
    },
    {
        "content": "<p>Related question: is there any option in the compiler to report a \"high water mark\" of total memory usage, from the allocator?</p>",
        "id": 200792825,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592095134
    },
    {
        "content": "<p>Would be useful for memory usage profiling and optimization.</p>",
        "id": 200792833,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592095149
    },
    {
        "content": "<p>Well, it's making it further, but still coming <em>very</em> close to OOM.</p>",
        "id": 200793002,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592095543
    },
    {
        "content": "<p>...and there it went. Killed after 13 minutes of CPU time.</p>",
        "id": 200793096,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592095734
    },
    {
        "content": "<p>Trying again with <code>./x.py clean</code> and then just <code>./x.py build</code>.</p>",
        "id": 200793104,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592095759
    },
    {
        "content": "<p>Too early to tell, but compiling <code>rustc_middle</code> seems to be using <em>drastically</em> less memory without <code>-i</code>.</p>",
        "id": 200793563,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592096604
    },
    {
        "content": "<p>I donâ€™t believe rustc or x.py has an option for high watermark, but running code under a memory profiler such as massif would give that information.</p>",
        "id": 200793616,
        "sender_full_name": "nagisa",
        "timestamp": 1592096667
    },
    {
        "content": "<p>(genuinely not sure if its even feasible to get x.py use massif, <span class=\"user-mention\" data-user-id=\"120989\">@Nicholas Nethercote</span> would know better)</p>",
        "id": 200793641,
        "sender_full_name": "nagisa",
        "timestamp": 1592096757
    },
    {
        "content": "<p>Looks like that did it. Incremental compilation <em>massively</em> increases memory usage.</p>",
        "id": 200793809,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592097031
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/73337\">https://github.com/rust-lang/rust/issues/73337</a></p>",
        "id": 200794196,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592097836
    },
    {
        "content": "<p>I just verified and locally building rustc can take up to 10GB</p>",
        "id": 200812827,
        "sender_full_name": "marmeladema",
        "timestamp": 1592134883
    },
    {
        "content": "<p>Even more in fact</p>",
        "id": 200812904,
        "sender_full_name": "marmeladema",
        "timestamp": 1592135013
    },
    {
        "content": "<p>I can say it works on my laptop with 32 GB :-)</p>",
        "id": 200819154,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592145456
    },
    {
        "content": "<p>I've been able to successfully build it with 8GB, but it takes some care, and that's unfortunate.</p>",
        "id": 200831989,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592166114
    },
    {
        "content": "<p>Once I finish the project I'm working on, I may try doing some memory profiling and see if I can reduce peak memory consumption enough to make it fit more comfortably, and support incremental builds.</p>",
        "id": 200832033,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592166147
    },
    {
        "content": "<p>(Also, I managed to get incremental builds working by freeing up a little more memory, doing the build once, and now as long as I don't touch anything that goes into <code>rustc_middle</code> I can keep doing incremental builds. But that's not ideal either.)</p>",
        "id": 200832045,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592166189
    },
    {
        "content": "<p>Maybe splitting up <code>rustc_middle</code> into separate crates would solve the problem? Obviously a huge undertaking though</p>",
        "id": 200832753,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592167415
    },
    {
        "content": "<p>What's the difference between <code>rustc_hir</code> and <code>rustc_middle::hir</code>?</p>",
        "id": 200832804,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592167462
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> As I understand it, that's been a desirable goal for a long time, but that's separate from incremental compilation taking up an excessive amount of memory.</p>",
        "id": 200832831,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1592167530
    },
    {
        "content": "<p>I guess it would just fix the symptom of the problem rather than the problem itself</p>",
        "id": 200832839,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592167556
    },
    {
        "content": "<p>I usually add some swap space so I don't oom, but yeah this regularly happens to me... it's one of the reasons I try to use CI to test</p>",
        "id": 200958465,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592264140
    },
    {
        "content": "<p>The other thing is that if there are multiple jobs running it's worse</p>",
        "id": 200958530,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592264169
    },
    {
        "content": "<p>I've never done it myself. I'm sure it's possible in some fashion, but it might require modifying <code>x.py</code>.</p>",
        "id": 200959472,
        "sender_full_name": "njn",
        "timestamp": 1592265084
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> the reason <code>rustc_hir</code> even exists is part of the start of that process</p>",
        "id": 204078637,
        "sender_full_name": "eddyb",
        "timestamp": 1594904169
    },
    {
        "content": "<p><code>rustc_middle</code> is still where everything came from but I'm not sure who is still working on trying to break it up</p>",
        "id": 204078681,
        "sender_full_name": "eddyb",
        "timestamp": 1594904195
    },
    {
        "content": "<p>some of the approaches are less great than others, there are nice ways and there are hacks that involve redirecting stuff through e.g. <code>fn</code> pointers in global variables etc.</p>",
        "id": 204078749,
        "sender_full_name": "eddyb",
        "timestamp": 1594904237
    },
    {
        "content": "<p>Yeah, breaking this stuff up looks really hard!</p>",
        "id": 204108633,
        "sender_full_name": "Noah Lev",
        "timestamp": 1594917021
    },
    {
        "content": "<p>Thanks for the background information by the way :)</p>",
        "id": 204108798,
        "sender_full_name": "Noah Lev",
        "timestamp": 1594917116
    }
]