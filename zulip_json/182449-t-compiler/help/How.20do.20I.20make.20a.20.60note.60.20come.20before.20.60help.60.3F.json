[
    {
        "content": "<p>Right now I call <code>note()</code> then <code>span_suggestion()</code>. But the suggestion still comes first. Is there a way to re-order them?<br>\n<a href=\"https://github.com/rust-lang/rust/pull/75079#discussion_r465453234\">https://github.com/rust-lang/rust/pull/75079#discussion_r465453234</a></p>",
        "id": 206193795,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596746281
    },
    {
        "content": "<p>I think you can use <code>span_note</code> and <code>help</code> instead</p>",
        "id": 206194236,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1596746536
    },
    {
        "content": "<p>let me try that, thanks :)</p>",
        "id": 206194295,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596746564
    },
    {
        "content": "<p>hmm, then it's not a suggestion anymore, so you can't use <code>cargo fix</code></p>",
        "id": 206195850,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596747412
    },
    {
        "content": "<p>let me try <code>help</code> and <code>span_suggestion</code></p>",
        "id": 206195931,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596747453
    },
    {
        "content": "<p>nope</p>\n<div class=\"codehilite\"><pre><span></span><code>error: incompatible link kind for `f`\n  --&gt; src/test/rustdoc-ui/intra-links-disambiguator-mismatch.rs:64:14\n   |\n64 | /// Link to [const@f]\n   |              ^^^^^^^ help: to link to the function, use its disambiguator: `f()`\n   |\n   = help: this link resolved to a function, which is not a constant\n</code></pre></div>",
        "id": 206196097,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596747543
    },
    {
        "content": "<p>ah, you're using <code>span_suggestion</code>, I missed that sorry!<br>\nso I think <code>span_suggestion</code> is still useful here? suggestions without span are unclear a bit</p>",
        "id": 206196644,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1596747856
    },
    {
        "content": "<p>right, but then it's the wrong order :(</p>",
        "id": 206196722,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596747906
    },
    {
        "content": "<p>hmm, current message is fine for me, why do you want to re-order?</p>",
        "id": 206196734,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1596747910
    },
    {
        "content": "<p>because it doesn't say that it's a constant before changing it</p>",
        "id": 206196751,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596747922
    },
    {
        "content": "<p>I guess it's not a big deal</p>",
        "id": 206196794,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596747962
    },
    {
        "content": "<p>so adding <code>span_note</code> then <code>span_suggestion</code> works here?</p>",
        "id": 206196855,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1596747974
    },
    {
        "content": "<p>(rebuilding, one sec)</p>",
        "id": 206197049,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596748094
    },
    {
        "content": "<p>nope</p>\n<div class=\"codehilite\"><pre><span></span><code>error: incompatible link kind for `f`\n  --&gt; src/test/rustdoc-ui/intra-links-disambiguator-mismatch.rs:64:14\n   |\n64 | /// Link to [const@f]\n   |              ^^^^^^^ help: to link to the function, use its disambiguator: `f()`\n   |\nnote: this link resolved to a function, which is not a constant\n  --&gt; src/test/rustdoc-ui/intra-links-disambiguator-mismatch.rs:64:14\n   |\n64 | /// Link to [const@f]\n   |              ^^^^^^^\n</code></pre></div>",
        "id": 206197115,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596748146
    },
    {
        "content": "<p>and it also prints the span twice which is slightly less clear</p>",
        "id": 206197132,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596748157
    },
    {
        "content": "<p>I'll just keep it as-is</p>",
        "id": 206197153,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596748178
    },
    {
        "content": "<p>ugh, sorry I couldn't help you :(</p>",
        "id": 206197422,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1596748303
    },
    {
        "content": "<p>it's ok, it still looks decent :)</p>",
        "id": 206197524,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596748340
    },
    {
        "content": "<p>I spent a long time on it last night haha <a href=\"https://github.com/rust-lang/rust/pull/75079#discussion_r465452985\">https://github.com/rust-lang/rust/pull/75079#discussion_r465452985</a></p>",
        "id": 206197541,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1596748353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Could you extend the actual error message to say something like <code>incompatible link kind for `f` (function, not const)</code>?</p>",
        "id": 206636840,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597183549
    },
    {
        "content": "<p>Probably, I was just going to let it go though haha</p>",
        "id": 206639028,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597185157
    },
    {
        "content": "<p>I really like the amount of effort that Rust goes to to make clear error messages, and I appreciated the effort you were going to, so I figured I'd try to find a solution. ;)</p>",
        "id": 206657465,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597204147
    }
]