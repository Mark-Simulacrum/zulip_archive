[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"218608\">@yodal</span> =)</p>",
        "id": 167305993,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662550
    },
    {
        "content": "<p>Howdy</p>",
        "id": 167306086,
        "sender_full_name": "yodal",
        "timestamp": 1559662588
    },
    {
        "content": "<p>So indeed relating bound regions is a sign that you are doing something wrong</p>",
        "id": 167306133,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662619
    },
    {
        "content": "<p>but I'm not sure where the problem is :)</p>",
        "id": 167306141,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662624
    },
    {
        "content": "<p>I guess the first question is where the bound regions are coming from</p>",
        "id": 167306158,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662636
    },
    {
        "content": "<p>looking over <a href=\"https://github.com/rust-lang/rust/compare/master...yodaldevoid:issue-60813\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/compare/master...yodaldevoid:issue-60813\">your branch</a> they are clearly not introduced in the commits there</p>",
        "id": 167306192,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662680
    },
    {
        "content": "<p>I'm not 100% sure on what's going on with the const generics setup atm</p>",
        "id": 167306256,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662695
    },
    {
        "content": "<p>it's been on my to-do list to try and sync up and in particular work out the canonicalization plan etc but...</p>",
        "id": 167306289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662724
    },
    {
        "content": "<p>do you have some debug printouts or something related to this error? i.e., showing a bit of context? what types are being related?</p>",
        "id": 167306330,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559662753
    },
    {
        "content": "<p><a href=\"https://pastebin.com/dfY3NT16\" target=\"_blank\" title=\"https://pastebin.com/dfY3NT16\">https://pastebin.com/dfY3NT16</a></p>",
        "id": 167311184,
        "sender_full_name": "yodal",
        "timestamp": 1559665382
    },
    {
        "content": "<p>That is a log of the more pertinent debug messages.</p>",
        "id": 167311216,
        "sender_full_name": "yodal",
        "timestamp": 1559665409
    },
    {
        "content": "<p>The types being related are a const generic that is supposed to be a <code>&amp;'static str</code> and a string literal passed as a const param</p>",
        "id": 167311330,
        "sender_full_name": "yodal",
        "timestamp": 1559665482
    },
    {
        "content": "<p>the string literal in the const param position is the one with the bound region as far as I can tell</p>",
        "id": 167311391,
        "sender_full_name": "yodal",
        "timestamp": 1559665527
    },
    {
        "content": "<p>My gut tells me that <code>check_user_type_annotations</code>, and by connection the <code>AscribeUserType</code> query, is not made to expect bound regions as before const generics the only regions that would be in user annotations would be early bounds, but I could easily be wrong about this</p>",
        "id": 167311710,
        "sender_full_name": "yodal",
        "timestamp": 1559665779
    },
    {
        "content": "<p>What do they looks like with <code>-Zverbose</code>?</p>",
        "id": 167313153,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1559666772
    },
    {
        "content": "<p><a href=\"https://pastebin.com/ypC3txgE\" target=\"_blank\" title=\"https://pastebin.com/ypC3txgE\">https://pastebin.com/ypC3txgE</a></p>",
        "id": 167313791,
        "sender_full_name": "yodal",
        "timestamp": 1559667216
    },
    {
        "content": "<blockquote>\n<p>My gut tells me that <code>check_user_type_annotations</code>, and by connection the <code>AscribeUserType</code> query, is not made to expect bound regions as before const generics the only regions that would be in user annotations would be early bounds, but I could easily be wrong about this</p>\n</blockquote>\n<p>I think that is correct <span class=\"user-mention\" data-user-id=\"218608\">@yodal</span> -- but I think in general there shouldn't be any bound regions there, at least not without a <code>Binder</code> somewhere</p>",
        "id": 167321835,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559672255
    },
    {
        "content": "<p>After looking into it further, that region is not made within a <code>Binder</code>. It is made as part of the canonicalization leading into the <code>AscribeUserType</code> type_op/query. The relation that fails is then made within that type_op/query. The <code>ReLateBound</code> is created to replace a <code>ReVar</code> and is made at the base innermost binder index.</p>",
        "id": 167369684,
        "sender_full_name": "yodal",
        "timestamp": 1559724996
    },
    {
        "content": "<p>It's late and so I can't dig any further right now. I might dig at this more tomorrow.</p>",
        "id": 167369932,
        "sender_full_name": "yodal",
        "timestamp": 1559725237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"218608\">@yodal</span> I see -- yes, we do create binders there, but they should be instantiated -- it seems like the bug might be that this instantiation is not occurring</p>",
        "id": 167392619,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559744179
    },
    {
        "content": "<p>I can help point you at the plces to add debug logs</p>",
        "id": 167392623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559744183
    },
    {
        "content": "<p>alright, that would be very helpful</p>",
        "id": 167396461,
        "sender_full_name": "yodal",
        "timestamp": 1559746280
    }
]