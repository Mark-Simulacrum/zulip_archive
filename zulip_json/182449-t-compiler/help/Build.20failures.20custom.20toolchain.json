[
    {
        "content": "<p>Hello, I am trying to work on <a href=\"https://github.com/rust-lang/rust/issues/70579\">https://github.com/rust-lang/rust/issues/70579</a> . I am specifically interested in measuring the size impact of implicit caller location on embedded devices, so I am using Tock as an example application which I want to profile with/without my changes to the compiler. Unfortunately I am finding I am unable to compile Tock using a local build of the current Rust master branch, even though using the latest nightly works fine. I built the rust compiler using  <code>$ ./x.py build library/std</code>. My config.toml looks as follows:</p>\n<div class=\"codehilite\"><pre><span></span><code>profile = &quot;codegen&quot;\nchangelog-seen = 2\n[llvm]\ndownload-ci-llvm = false\n[rust]\nlld = true\n</code></pre></div>\n<p>I then ran <code>$ rustup toolchain link stage1 build/x86_64-unknown-linux-gnu/stage1</code></p>\n<p>I then modified the top-level rust-toolchain file for Tock to contain only <code>stage1</code></p>\n<p>Finally, I attempted to build the Imix board by running </p>\n<div class=\"codehilite\"><pre><span></span><code>~/tock/boards/imix$ cargo build -Z build-std=core,compiler_builtins --target=thumb7em-none-eabi --release\n</code></pre></div>\n<p>Which resulted in the following output:</p>\n<div class=\"codehilite\"><pre><span></span><code>   Compiling imix v0.1.0 (/home/hudson/tock/boards/imix)\nrustc: /home/hudson/rust/src/llvm-project/llvm/lib/MC/MCStreamer.cpp:1216: virtual void llvm::MCStreamer::SwitchSection(llvm::MCSection*, const llvm::MCExpr*): Assertion `!Section-&gt;hasEnded() &amp;&amp; &quot;Section already ended&quot;&#39; failed.\nerror: could not compile `imix`\n\nCaused by:\n  process didn&#39;t exit successfully: `rustc --crate-name imix --edition=2021 boards/imix/src/main.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C opt-level=z -C panic=abort -C lto -C codegen-units=1 -C debuginfo=2 -C metadata=a60892fa540b861c -C extra-filename=-a60892fa540b861c --out-dir /home/hudson/tock/target/thumbv7em-none-eabi/release/deps --target thumbv7em-none-eabi -L dependency=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps -L dependency=/home/hudson/tock/target/release/deps --extern capsules=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps/libcapsules-abdae21b93eb95a2.rlib --extern &#39;noprelude:compiler_builtins=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps/libcompiler_builtins-4c91ccfbbd617e01.rlib&#39; --extern components=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps/libcomponents-24cd32845ffaa22b.rlib --extern &#39;noprelude:core=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps/libcore-4ad4f239c6ff3e95.rlib&#39; --extern cortexm4=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps/libcortexm4-3052ba132d692bbd.rlib --extern kernel=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps/libkernel-7a37aabeccd96c4a.rlib --extern sam4l=/home/hudson/tock/target/thumbv7em-none-eabi/release/deps/libsam4l-19b359ab02edf7fb.rlib -Z unstable-options` (signal: 6, SIGABRT: process abort signal)\n</code></pre></div>\n<p>Any advice is appreciated :) I suspect the possible culprits are:<br>\na) something went wrong building LLVM locally, but x.py did not report it to me<br>\nb) something to do with building lld is causing issues. Unfortunately Tock requires using lld<br>\nc) Something to do with -Z build-std is causing issues. Unfortunately if I do not use -Z build-std I get an error \"can't find crate for core\". Also, I would like to profile my changes with a rebuilt std library using opt-level=s<br>\nd) something has changed between latest nightly and current master that broke something (unlikely)</p>",
        "id": 257258230,
        "sender_full_name": "Hudson Ayers",
        "timestamp": 1634066731
    },
    {
        "content": "<p>it's also possible that no one's built llvm with assertions in a while, and this fails for everyone</p>",
        "id": 257268610,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634071179
    },
    {
        "content": "<p>consider setting <code>[llvm] assertions = false</code></p>",
        "id": 257268629,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634071186
    },
    {
        "content": "<blockquote>\n<p>Unfortunately if I do not use -Z build-std I get an error \"can't find crate for core\".</p>\n</blockquote>\n<p>I think you need to enable other targets for the standard library in config.toml.</p>",
        "id": 257268863,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634071273
    },
    {
        "content": "<p>The config.toml example seems to suggest that assertions = false is the default for llvm, so I am a little surprised that leaving it unspecified would turn them on. I am trying a fresh build w/ assertions = false and w/ the appropriate target enabled to build the standard library. Thanks for the tips!</p>",
        "id": 257269607,
        "sender_full_name": "Hudson Ayers",
        "timestamp": 1634071588
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"301759\">@Hudson Ayers</span> you set <code>profile = \"codegen\"</code> which enables them by default</p>",
        "id": 257269674,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634071620
    },
    {
        "content": "<p>ah, that makes sense, thanks. I only used \"codegen\" because it was unclear to me if I needed to do so in order to for lld to be compiled and made available in the sysroot</p>",
        "id": 257269899,
        "sender_full_name": "Hudson Ayers",
        "timestamp": 1634071716
    },
    {
        "content": "<p>Building with assertions disabled got things working. Thanks for the help!</p>",
        "id": 257277589,
        "sender_full_name": "Hudson Ayers",
        "timestamp": 1634075563
    }
]