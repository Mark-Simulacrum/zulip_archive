[
    {
        "content": "<p>I was looking into fixing <a href=\"https://github.com/rust-lang/rust/issues/89577\">#89577</a> without limiting everything to a certain architecture. Is that possible?</p>\n<p>For background, the output of the compiler is highly dependent on ABI and architecture in these tests.</p>",
        "id": 256936479,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1633853895
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 256936596,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1633854008
    },
    {
        "content": "<p>we already have the ability to generate multiple outputs, one per bitsize, this works, but is annoying to update. With endianess this updateability is even more annoying I presume. If we can find a way to make it less painful, I'm all for it</p>",
        "id": 256937064,
        "sender_full_name": "oli",
        "timestamp": 1633854484
    },
    {
        "content": "<p>I had an idea to simply ignore outputs for non-CI architectures, and possibly using CI to generate stuff for others.</p>\n<p>I don't know if this is feasible or supported. I'd be willing to put in the work on weekends. Something like a rustbot bless subdir command.</p>",
        "id": 256937838,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1633855219
    },
    {
        "content": "<p>You could also use bit-patterns that are endian independent like XXXXXXXX where X is a single byte like 0x6c</p>",
        "id": 257613660,
        "sender_full_name": "Ximin Luo",
        "timestamp": 1634249267
    }
]