[
    {
        "content": "<p>I'm working on a change in rustdoc, but I'm running into a weird case of the \"elided lifetime in path\" lint. I have this code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">fmt</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">comma_sep</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">fmt</span>::<span class=\"n\">Display</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">items</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">Iterator</span><span class=\"o\">&lt;</span><span class=\"n\">Item</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"n\">fmt</span>::<span class=\"n\">Display</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">CommaSep</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">fmt</span>::<span class=\"n\">Display</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">fmt</span>::<span class=\"n\">Display</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fmt</span>::<span class=\"n\">Display</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">CommaSep</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">fn</span> <span class=\"nf\">fmt</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">fmt</span>::<span class=\"n\">Formatter</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">fmt</span>::<span class=\"nb\">Result</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"mf\">0.</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">enumerate</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"fm\">write!</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\", \"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">fmt</span>::<span class=\"n\">Display</span>::<span class=\"n\">fmt</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">item</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">CommaSep</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">.</span><span class=\"n\">collect</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which produces this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: hidden lifetime parameters in types are deprecated\n   --&gt; src/librustdoc/html/format.rs:146:31\n    |\n146 |         fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n    |                               ^^^^^^^^^^^^^^- help: indicate the anonymous lifetime: `&lt;&#39;_&gt;`\n    |\n    = note: `-D elided-lifetimes-in-paths` implied by `-D warnings`\n\nerror: aborting due to previous error\n\nerror: could not compile `rustdoc`\n</code></pre></div>\n<p>yet if I copy-paste this code into a playground, it compiles fine!</p>\n<p>So I'm quite confused about what's wrong.</p>",
        "id": 224424590,
        "sender_full_name": "Noah Lev",
        "timestamp": 1611887772
    },
    {
        "content": "<p>Any help much appreciated! :)</p>",
        "id": 224424597,
        "sender_full_name": "Noah Lev",
        "timestamp": 1611887796
    },
    {
        "content": "<p>Steps to reproduce:</p>\n<ol>\n<li>\n<p>Checkout commit <code>bf193d69fe48f4ec3cac57ab7abb4e9f2a291661</code> (the current tip of <code>master</code>)</p>\n</li>\n<li>\n<p>Apply this patch:</p>\n</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/src/librustdoc/html/format.rs b/src/librustdoc/html/format.rs</span>\n<span class=\"gh\">index 01915c33a07..1ee30c18a4e 100644</span>\n<span class=\"gd\">--- a/src/librustdoc/html/format.rs</span>\n<span class=\"gi\">+++ b/src/librustdoc/html/format.rs</span>\n<span class=\"gu\">@@ -141,15 +141,20 @@ impl Buffer {</span>\n}\n\nfn comma_sep&lt;T: fmt::Display&gt;(items: impl Iterator&lt;Item = T&gt;) -&gt; impl fmt::Display {\n<span class=\"gd\">-    display_fn(move |f| {</span>\n<span class=\"gd\">-        for (i, item) in items.enumerate() {</span>\n<span class=\"gd\">-            if i != 0 {</span>\n<span class=\"gd\">-                write!(f, \", \")?;</span>\n<span class=\"gi\">+    struct CommaSep&lt;T: fmt::Display&gt;(Vec&lt;T&gt;);</span>\n<span class=\"gi\">+    impl&lt;T: fmt::Display&gt; fmt::Display for CommaSep&lt;T&gt; {</span>\n<span class=\"gi\">+        fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {</span>\n<span class=\"gi\">+            for (i, item) in self.0.iter().enumerate() {</span>\n<span class=\"gi\">+                if i != 0 {</span>\n<span class=\"gi\">+                    write!(f, \", \")?;</span>\n<span class=\"gi\">+                }</span>\n<span class=\"gi\">+                fmt::Display::fmt(&amp;item, f)?;</span>\n            }\n<span class=\"gd\">-            fmt::Display::fmt(&amp;item, f)?;</span>\n<span class=\"gi\">+            Ok(())</span>\n        }\n<span class=\"gd\">-        Ok(())</span>\n<span class=\"gd\">-    })</span>\n<span class=\"gi\">+    }</span>\n<span class=\"gi\">+</span>\n<span class=\"gi\">+    CommaSep(items.collect())</span>\n}\n\ncrate fn print_generic_bounds&lt;'a&gt;(\n</code></pre></div>\n<ol start=\"3\">\n<li>Run <code>./x.py check</code></li>\n</ol>",
        "id": 224425099,
        "sender_full_name": "Noah Lev",
        "timestamp": 1611888414
    },
    {
        "content": "<p>Seems to come from <code>-Wrust_2018_idioms</code> (and <code>-D warnings</code>) being passed to rustc.</p>",
        "id": 224425546,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1611889025
    },
    {
        "content": "<p>Perhaps this will help -- <a href=\"https://users.rust-lang.org/t/what-is-the-elided-lifetimes-in-paths-lint-for/28005\">https://users.rust-lang.org/t/what-is-the-elided-lifetimes-in-paths-lint-for/28005</a></p>",
        "id": 224425625,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1611889178
    },
    {
        "content": "<p>Huh, I thought that lint was warn-by-default. I guess not. Thanks!</p>",
        "id": 224427109,
        "sender_full_name": "Noah Lev",
        "timestamp": 1611891014
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/confused.20about.20elided.20lifetime.20in.20path.20error/near/224427109\">said</a>:</p>\n<blockquote>\n<p>Huh, I thought that lint was warn-by-default. I guess not. Thanks!</p>\n</blockquote>\n<p>you can set <code>deny-warnings = false</code> in config.toml</p>",
        "id": 224679144,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612145801
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/77492\">https://github.com/rust-lang/rust/pull/77492</a></p>",
        "id": 224679153,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612145808
    },
    {
        "content": "<p>Well, I could, but then CI would fail. The issue was I didn't realize this lint was enabled by x.py and didn't understand why I was getting in rustdoc but not in the Playground.</p>",
        "id": 224684129,
        "sender_full_name": "Noah Lev",
        "timestamp": 1612152734
    }
]