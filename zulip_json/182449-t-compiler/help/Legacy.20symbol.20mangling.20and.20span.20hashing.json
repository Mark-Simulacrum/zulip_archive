[
    {
        "content": "<p>I'm running into some very strange results while working on <a href=\"https://github.com/rust-lang/rust/pull/92204.We\">https://github.com/rust-lang/rust/pull/92204.We</a> currently skip hashing some <code>Span</code>s in certain <code>Ident</code>s, which is causing problems for incremental compilation. I'm trying to enable hashing of all of the <code>Span</code>s that we currently skip.</p>\n<p>It looks like the legacy mangling scheme relies on us hashing some (but not all) spans related to an <code>Instance</code>. Depending on what hashing I move in and out of the <code>hcx.while_hashing_spans(false, { ... }</code> closure (<a href=\"https://github.com/rust-lang/rust/blob/e100ec5bc7cd768ec17d75448b29c9ab4a39272b/compiler/rustc_symbol_mangling/src/legacy.rs#L113-L117\">https://github.com/rust-lang/rust/blob/e100ec5bc7cd768ec17d75448b29c9ab4a39272b/compiler/rustc_symbol_mangling/src/legacy.rs#L113-L117</a>), I get different linker errors (<a href=\"https://github.com/rust-lang/rust/pull/92204#issuecomment-999845963\">https://github.com/rust-lang/rust/pull/92204#issuecomment-999845963</a>):</p>\n<div class=\"codehilite\"><pre><span></span><code>  = note: &quot;clang&quot; &quot;-m64&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.0.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.1.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.10.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.11.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.12.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.13.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.14.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.15.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.2.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.3.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.4.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.5.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.6.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.7.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.8.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.build_script_build.8b1791be-cgu.9.rcgu.o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce.2x8sq0ip2cwnp86x.rcgu.o&quot; &quot;-Wl,--as-needed&quot; &quot;-L&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/deps&quot; &quot;-L&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib&quot; &quot;-Wl,--start-group&quot; &quot;-Wl,-Bstatic&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-c46e4336da0ba77b.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-9cb5ef8235cf10de.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libminiz_oxide-c94e3d0069d19330.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libadler-5a532766d1e80b5b.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libobject-d08f0c83526179dc.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libmemchr-d995c6cafdb3d253.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libaddr2line-02ebc04a72bd9433.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgimli-5cbc32ae14534ca9.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_detect-969ebc8623abfcc9.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_demangle-7f98f837d3579544.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libhashbrown-b96a8aea2dd7bf12.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-c7b2792f3bc0d0eb.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-7558dde8464d46ce.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcfg_if-b3d84848ab790cf7.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-f48e57d6d73020ee.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-ffaac76756e3f83b.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-2a6a2797f7a73818.rlib&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-0e3656b1fda5fd7b.rlib&quot; &quot;-Wl,--end-group&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-f98cce041f593917.rlib&quot; &quot;-Wl,-Bdynamic&quot; &quot;-lgcc_s&quot; &quot;-lutil&quot; &quot;-lrt&quot; &quot;-lpthread&quot; &quot;-lm&quot; &quot;-ldl&quot; &quot;-lc&quot; &quot;-Wl,--eh-frame-hdr&quot; &quot;-Wl,-znoexecstack&quot; &quot;-L&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib&quot; &quot;-o&quot; &quot;/checkout/obj/build/x86_64-unknown-linux-gnu/stage1-rustc/release/build/log-d0b86ba3a4fe8bce/build_script_build-d0b86ba3a4fe8bce&quot; &quot;-Wl,--gc-sections&quot; &quot;-pie&quot; &quot;-Wl,-zrelro,-znow&quot; &quot;-nodefaultlibs&quot;\n  = note: /checkout/obj/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-c46e4336da0ba77b.rlib(std-c46e4336da0ba77b.std.616de55a-cgu.0.rcgu.o): In function `core::fmt::num::_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$::fmt::hca4bf337204cea24&#39;:\n          /rustc/6ab07dabd4dd50e695e1a20f09fb4efb077af4d9/library/core/src/fmt/num.rs:186: undefined reference to `core::fmt::Formatter::debug_lower_hex::h905941bdf8494aeb&#39;\n          /rustc/6ab07dabd4dd50e695e1a20f09fb4efb077af4d9/library/core/src/fmt/num.rs:187: undefined reference to `core::fmt::num::_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$::fmt::hee37268b5549f2aa&#39;\n</code></pre></div>\n<p>I don't really understand why legacy mangling depends on <code>Span</code>s at all. cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span></p>",
        "id": 265855130,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640208529
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/pull/92210\">https://github.com/rust-lang/rust/pull/92210</a> for just the hashing changes, without the other unrelated changes I was experimenting with</p>",
        "id": 265855589,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640208794
    },
    {
        "content": "<p>and the linker errors from that run: <a href=\"https://github.com/rust-lang/rust/pull/92210#issuecomment-999896843\">https://github.com/rust-lang/rust/pull/92210#issuecomment-999896843</a></p>",
        "id": 265856472,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640209272
    },
    {
        "content": "<p>The legacy mangling scheme hashes the function type as a safety guard against replacing a rust dylib without recompilation. A <code>Ty</code> contains a <code>TyKind</code> which in the <code>Adt</code> variant contains an <code>AdtDef</code>. This type contains a <code>variants</code> map whose value type contains an <code>Ident</code>, which itself contains a span.</p>",
        "id": 265858432,
        "sender_full_name": "bjorn3",
        "timestamp": 1640210519
    },
    {
        "content": "<p>That's what I thought - however, I think I got a different set of missing symbols after trying to skip span hashing for the <code>FnDef</code></p>",
        "id": 265859945,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640211267
    },
    {
        "content": "<p>let me see if I can reproduce that with the new PR</p>",
        "id": 265859999,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640211282
    },
    {
        "content": "<p>If I try to move everything inside the <code>with_node_id_hashing_mode</code> closure, then it looks like <code>TypeId</code> computation gest messed up. The downcast at <code>src/test/ui/fmt/format-args-capture.rs:62</code> starts failing</p>",
        "id": 265862065,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1640212478
    }
]