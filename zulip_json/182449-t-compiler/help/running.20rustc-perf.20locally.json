[
    {
        "content": "<p>I followed the instructions in the rustc-perf/collector readme and am getting these errors when it invokes rustc:</p>\n<div class=\"codehilite\"><pre><span></span>error: couldn&#39;t load codegen backend &quot;.../rust-bench1/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/codegen-backends/librustc_codegen_llvm-llvm.so&quot;: &quot;librustc_codegen_ssa-0282cbda462baeb6.so: cannot open shared object file: No such file or directory&quot;\n</pre></div>",
        "id": 164036165,
        "sender_full_name": "tmandry",
        "timestamp": 1556059204
    },
    {
        "content": "<p>(I also get errors like this when trying to invoke the <code>rustc</code> binary directly)</p>",
        "id": 164036181,
        "sender_full_name": "tmandry",
        "timestamp": 1556059221
    },
    {
        "content": "<p>any advice for fixing this? I tried setting <code>LD_LIBRARY_PATH</code> to a dir that contains the librustc_codegen_ssa so file, but for some reason this doesn't seem to work with the perf collector</p>",
        "id": 164036210,
        "sender_full_name": "tmandry",
        "timestamp": 1556059276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> How did you build rustc? <code>x.py build src/librustc_codegen_llvm</code> should be enough to fix that, I think</p>",
        "id": 164038670,
        "sender_full_name": "simulacrum",
        "timestamp": 1556061809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ah perfect, thanks</p>",
        "id": 164038737,
        "sender_full_name": "tmandry",
        "timestamp": 1556061859
    },
    {
        "content": "<p>I built it using <code>src/libstd</code> at first</p>",
        "id": 164038742,
        "sender_full_name": "tmandry",
        "timestamp": 1556061867
    },
    {
        "content": "<p>If not then ping me and I can try and help more</p>",
        "id": 164038744,
        "sender_full_name": "simulacrum",
        "timestamp": 1556061869
    },
    {
        "content": "<p>then I did <code>dist</code> and found that that works, but seems a little unnecessary :)</p>",
        "id": 164038753,
        "sender_full_name": "tmandry",
        "timestamp": 1556061887
    },
    {
        "content": "<p><code>x.py build</code> without any stage arguments should always be with src/librustc_codegen_llvm (we copy stage 1 anyway, so you're not really saving time by doing <code>x.py build src/libstd</code> in stage 2</p>",
        "id": 164038770,
        "sender_full_name": "simulacrum",
        "timestamp": 1556061906
    },
    {
        "content": "<p>oh, ok</p>",
        "id": 164038778,
        "sender_full_name": "tmandry",
        "timestamp": 1556061920
    },
    {
        "content": "<p>I was never sure what that did</p>",
        "id": 164038786,
        "sender_full_name": "tmandry",
        "timestamp": 1556061932
    },
    {
        "content": "<p>er, I was building with <code>--stage 2</code></p>",
        "id": 164038822,
        "sender_full_name": "tmandry",
        "timestamp": 1556061962
    },
    {
        "content": "<p>Yeah, that's equivalent to not saying anything</p>",
        "id": 164038850,
        "sender_full_name": "simulacrum",
        "timestamp": 1556061971
    },
    {
        "content": "<p>rustlib is the directory that crates rustc builds link against (e.g. std, core, etc.) so you need it to be able to run things</p>",
        "id": 164038860,
        "sender_full_name": "simulacrum",
        "timestamp": 1556061995
    },
    {
        "content": "<p>it also happens to -- somewhat confusingly -- include the codegen-backends dir which rustc links against</p>",
        "id": 164038868,
        "sender_full_name": "simulacrum",
        "timestamp": 1556062013
    },
    {
        "content": "<p>this is mostly for distro reasons IIRC</p>",
        "id": 164038872,
        "sender_full_name": "simulacrum",
        "timestamp": 1556062020
    },
    {
        "content": "<p>okay, makes sense, sort of :) I'll use that from now on, thanks!</p>",
        "id": 164039056,
        "sender_full_name": "tmandry",
        "timestamp": 1556062208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116883\">@tmandry</span> fwiw you probably want a --keep-stage 0 on that after you rebuild once post-rebase (or bootstrap compiler change, etc.)</p>",
        "id": 164039323,
        "sender_full_name": "simulacrum",
        "timestamp": 1556062553
    }
]