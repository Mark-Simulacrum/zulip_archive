[
    {
        "content": "<p>Hello, <br>\n<a class=\"stream\" data-stream-id=\"257204\" href=\"/#narrow/stream/257204-project-error-handling\">#project-error-handling</a> is currently exposing <code>Backtrace</code> in <code>core</code>. <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby</span> did most of the implementation and I am trying to bring it to a conclusion. The lang items are defined and then exposed in the <code>std</code> with the <code>#[export_name]</code> tag, however the compiler is still unable to find them when linking.  Relevant <a href=\"https://github.com/rust-lang/rust/pull/77384\">PR</a></p>",
        "id": 231807014,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616681514
    },
    {
        "content": "<p>the errors are like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: language item required, but not found: `backtrace_create`\n</code></pre></div>",
        "id": 231811168,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616682750
    },
    {
        "content": "<p>that means the <code>#[lang_item]</code> is missing, it's not a linkage problem</p>",
        "id": 231811899,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1616682970
    },
    {
        "content": "<p>There must be something else missing as they are exported from <code>core</code> and the special mangled names are present for them in <code>std</code></p>",
        "id": 231813478,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616683495
    },
    {
        "content": "<p>I'm not sure we ever had external items be lang items</p>",
        "id": 231813779,
        "sender_full_name": "oli",
        "timestamp": 1616683578
    },
    {
        "content": "<p>The lang item logic may simply skip over them and thus not pick them up</p>",
        "id": 231813854,
        "sender_full_name": "oli",
        "timestamp": 1616683607
    },
    {
        "content": "<p>it is  resolved <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_middle/src/middle/lang_items.rs\">here</a> right?</p>",
        "id": 231814752,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616683907
    },
    {
        "content": "<p>That's the access part. The lang items are collected in <a href=\"https://github.com/rust-lang/rust/blob/dff1edf919198aa4dea106e63b7d1899f1061fe0/compiler/rustc_passes/src/lang_items.rs#L210\">https://github.com/rust-lang/rust/blob/dff1edf919198aa4dea106e63b7d1899f1061fe0/compiler/rustc_passes/src/lang_items.rs#L210</a></p>",
        "id": 231815219,
        "sender_full_name": "oli",
        "timestamp": 1616684044
    },
    {
        "content": "<p>And <a href=\"https://github.com/rust-lang/rust/blob/dff1edf919198aa4dea106e63b7d1899f1061fe0/compiler/rustc_passes/src/lang_items.rs#L49\">https://github.com/rust-lang/rust/blob/dff1edf919198aa4dea106e63b7d1899f1061fe0/compiler/rustc_passes/src/lang_items.rs#L49</a> explicitly skips over extern items</p>",
        "id": 231815294,
        "sender_full_name": "oli",
        "timestamp": 1616684069
    },
    {
        "content": "<p>My knowledge of compiler is superficial <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span> Does that mean all <code>extern \"Rust\"</code> items are skipped and the <code>panic</code> ones are served in a special compiler mechanism that is why they are not ignored?</p>",
        "id": 231816894,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616684516
    },
    {
        "content": "<p>I think <a href=\"https://github.com/rust-lang/rust/pull/77384/files#r601577631\">this</a> is the issue.</p>",
        "id": 231818706,
        "sender_full_name": "bjorn3",
        "timestamp": 1616685021
    },
    {
        "content": "<p>Yes! This did help. I am guessing that because <code>panic</code> works in a different way it also looks for the underscores in the resolution of the symbol?</p>",
        "id": 231819639,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616685324
    },
    {
        "content": "<p>Or it did not...</p>",
        "id": 231819974,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616685430
    },
    {
        "content": "<p>stage0 passed and stage1 failed</p>",
        "id": 231820056,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616685448
    },
    {
        "content": "<p>again with the same symptoms</p>",
        "id": 231820103,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616685458
    },
    {
        "content": "<p>It seems like this does not change anything <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span> I only trigger rebuilds (that is what made me suspicious)</p>",
        "id": 231835559,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616690742
    },
    {
        "content": "<p>where should I dig around to understand how the compiler implements this, so that I may <em>try</em> understanding what is the issue on my own? The <code>rustc_passes/src/lang_items</code> I presume?</p>",
        "id": 231926089,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1616745038
    }
]