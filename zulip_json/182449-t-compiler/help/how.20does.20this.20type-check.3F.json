[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">c</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">a</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"kt\">i32</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sub</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">42</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">sub</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the closures have to be being coerced to function pointers, right? but why / where does rustc decide to do that? as far as I can see, <code>try_find_coercion_lub</code> only has a special case for <code>FnDef</code> which shouldn't get hit, and then I'd expect it to just try to coerce the one closure type to the other and vice versa and fail.</p>",
        "id": 238668988,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1620934443
    },
    {
        "content": "<p>I would expect that this happens somewhere around here: <a href=\"https://github.com/rust-lang/rust/blob/952c5732c2d25a875f90e5cd5dd29a1a21c1d4a2/compiler/rustc_typeck/src/check/coercion.rs#L993\">https://github.com/rust-lang/rust/blob/952c5732c2d25a875f90e5cd5dd29a1a21c1d4a2/compiler/rustc_typeck/src/check/coercion.rs#L993</a></p>",
        "id": 238669526,
        "sender_full_name": "tm",
        "timestamp": 1620934674
    },
    {
        "content": "<p>ah wait, is my rustc source too old <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 238669759,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1620934759
    },
    {
        "content": "<p>I didn't expect this to be a new(ish) thing</p>",
        "id": 238669868,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1620934805
    },
    {
        "content": "<p>ok thanks, on the bright side, it actually was exactly where I expected it to be</p>",
        "id": 238670547,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1620935156
    }
]