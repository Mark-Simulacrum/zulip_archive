[
    {
        "content": "<p>when rebasing my branches (including local master) onto upstream, i usually do:<br>\ngit fetch upstream/master<br>\ngit reset --hard upstream/master (when on local master)<br>\nor I do<br>\ngit rebase upstream/master when on another branch<br>\nrecently I also learned that <br>\ngit switch -C master upstream/master does the same thing as the reset (i think?)</p>\n<p>also, the dev guide says to do git pull upstream/master, which seems to git fetch then git MERGE<br>\ndoes this often correctly fast-forward so its like the rebase? or am i misunderstanding git?</p>\n<p>and which one should I use? I am thinking that we should probably recommend git pull --rebase (is that what others use), and then also have the guide mention \"git rebase upstream/master\" for when you want to rebase other branches (i think git pull only does the current branch)</p>",
        "id": 223310747,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1611098366
    },
    {
        "content": "<p>the difference between <code>pull</code> and <code>pull --rebase</code> only matters when you've made commits to your master branch instead of a feature branch</p>",
        "id": 223310969,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611098521
    },
    {
        "content": "<p>which I think we should not recommend</p>",
        "id": 223311015,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611098526
    },
    {
        "content": "<p>FWIW, I have these two aliases:</p>\n<div class=\"codehilite\"><pre><span></span><code>[alias]\n    purr = pull --rebase=true --autostash -Xignore-space-change --no-stat\n    prum = purr upstream master\n</code></pre></div>\n<p>and thus just do <code>git prum</code> in my PR branches when needed.</p>",
        "id": 223311279,
        "sender_full_name": "scottmcm",
        "timestamp": 1611098759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> ah those are nice! Thanks!<br>\n<span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> so merge will correctly fast forward in master if I don't mess with it (I don't). For feature branches, this is also true, if you haven't messed with master?</p>",
        "id": 223383259,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1611154696
    },
    {
        "content": "<p>I find git <em>extremely confusing</em>, even for experienced devs, I think it would be nice if we explained this in the guide, as well as give a suggestion for what to do to rebase other feature branches after your git pull'd on one (update your local master to upstream with a reset --hard and got rebase the other branches onto it, and git push --force them)</p>",
        "id": 223383718,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1611154845
    },
    {
        "content": "<p>Coming from working primarily with mecurial, it would be great to have these recommendations right there in the guide, as googling and stack overflow give many different answers</p>",
        "id": 223384226,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1611154948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257428\">@Gus Wynn</span> does <a href=\"https://rustc-dev-guide.rust-lang.org/git.html\">https://rustc-dev-guide.rust-lang.org/git.html</a> answer some of your questions?</p>",
        "id": 223384813,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611155099
    },
    {
        "content": "<p>And how can we make that page easier to find?</p>",
        "id": 223385131,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611155173
    },
    {
        "content": "<p>Ah the rebase section and no-merge policy section are good <br>\n. I'll try to look closer today and add any info I think is missing. From a glance I think it's just resetting local master to upstream/master (if you git pull in a feature branch, do you have to do this?)</p>",
        "id": 223386611,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1611155725
    },
    {
        "content": "<p>git pull in a feature branch doesn't really do anything</p>",
        "id": 223387206,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611155990
    },
    {
        "content": "<p>unless you have multiple people working on the same branch, which is hard to manage and I don't usually recommend</p>",
        "id": 223387255,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611156004
    },
    {
        "content": "<p>Oh so git pull upstream master merge (with ff) local master, that was what was confuseing to me. I think I can make a few things more clear in the git page, hopefullyill have a or today</p>",
        "id": 223387730,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1611156204
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1031\">https://github.com/rust-lang/rustc-dev-guide/pull/1031</a> probably needs some close eyes but this is what I was thinking (now I have to go to work lolol)</p>",
        "id": 223397076,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1611159832
    },
    {
        "content": "<p>thank you! I'll take a look</p>",
        "id": 223397179,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611159866
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/what.20should.20i.20actually.20use.20to.20rebase.20onto.20upstream.3F/near/223311279\">said</a>:</p>\n<blockquote>\n<p>FWIW, I have these two aliases:</p>\n<div class=\"codehilite\"><pre><span></span><code>[alias]\n    purr = pull --rebase=true --autostash -Xignore-space-change --no-stat\n    prum = purr upstream master\n</code></pre></div>\n<p>and thus just do <code>git prum</code> in my PR branches when needed.</p>\n</blockquote>\n<p>I use the fish shell, which has the notion of 'abbreviations', so I've found it useful to use <code>gup='git pull upstream'</code> so that <code>gup master</code> expands to <code>git pull upstream master</code>.</p>",
        "id": 223447113,
        "sender_full_name": "Noah Lev",
        "timestamp": 1611182279
    }
]