[
    {
        "content": "<p>Hi! I have been trying to understand and slightly <a href=\"https://github.com/rust-lang/rust/pull/89213\">improve</a> the generator layout and one of my attempts have led me to an <code>abi::Layout</code> that looks like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Layout {\n   fields: Arbitrary { offsets: [0, 4], ...},\n   variants: Variants {\n         Multiple {\n                variants: [Layout { fields: Arbitrary { offsets: [0, 4] }}, ...]\n         }\n   }\n}\n</code></pre></div>\n<p>basically, I want to have a layout that has some fixed fields (here there are two of them, at offsets 0 and 4), but it should also have a variant that references the same fields/offsets.</p>\n<p>Is something like this even allowed? Does it break any invariants?</p>",
        "id": 255482722,
        "sender_full_name": "Jakub Beránek",
        "timestamp": 1632952975
    },
    {
        "content": "<p>Related question: if such variant is <code>Prefixed</code> by 8 bytes, and it has a field offset 0, does it \"point\" to the beginning of the variant (offset 8) or to the beginning of the containing struct (offset 0)? Thanks.</p>",
        "id": 255525498,
        "sender_full_name": "Jakub Beránek",
        "timestamp": 1632984242
    }
]