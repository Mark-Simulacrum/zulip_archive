[
    {
        "content": "<p>I switched over from using <code>span_suggestion</code> to <code>span_help</code>, but now the message appears on a separate line:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: the `att_syntax` option was already provided\n  --&gt; rust-issue-73193.rs:10:21\n   |\n10 |             options(att_syntax),\n   |                     ^^^^^^^^^^\n   |\nhelp: remove this option\n  --&gt; rust-issue-73193.rs:10:21\n   |\n10 |             options(att_syntax),\n   |                     ^^^^^^^^^^\n</code></pre></div>\n\n\n<p>Previously (with <code>span_suggestion</code>) it looked like:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: the `att_syntax` option was already provided\n  --&gt; rust-issue-73193.rs:10:21\n   |\n10 |             options(att_syntax),\n   |                     ^^^^^^^^^^ help: remove this option\n</code></pre></div>",
        "id": 200831388,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592165110
    },
    {
        "content": "<p>Why is that happening and is there a way to get it to appear in one message like how it was with <code>span_suggestion</code>?</p>",
        "id": 200831738,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592165716
    },
    {
        "content": "<p><code>@Amanieu</code> suggested using <code>span_label</code> instead, which has almost the same output as before</p>",
        "id": 200931936,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592248195
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> ^^?</p>",
        "id": 200958190,
        "sender_full_name": "mark-i-m",
        "timestamp": 1592263871
    },
    {
        "content": "<p>Yes, you seem to be wanting span_label. Why is it no longer a structured suggestion? Inaccurate span?</p>",
        "id": 200958403,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1592264075
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> Because I thought it was machine-applicable, but it's actually not because it would change <code>options(att_syntax,  att_syntax, nomem)</code> into <code>options(att_syntax, , nomem)</code> :(</p>",
        "id": 200968490,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592276272
    },
    {
        "content": "<p>If you can get access to the span of the comma you can do <code>span.to(comma.span)</code></p>",
        "id": 201056110,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1592332277
    },
    {
        "content": "<p>And make it a verbose or tool only suggestion</p>",
        "id": 201056162,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1592332311
    },
    {
        "content": "<p>Otherwise a span label can be enough</p>",
        "id": 201056227,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1592332324
    },
    {
        "content": "<p>If you have access to the spa. Of nomem you can instead use .until(sp)</p>",
        "id": 201056292,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1592332362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> ^</p>",
        "id": 201056334,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1592332389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span> I'm actually going back to using <code>span_suggestion</code> with <code>Applicability::Unspecified</code>. Unfortunately, I think it would be hard to get access to the span of the comma, and I think it might be too complicated for an error that probably won't occur too often.</p>",
        "id": 201057168,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592332807
    },
    {
        "content": "<p>What did you mean by \"Of nomem you can instead use .until(sp)\"?</p>",
        "id": 201057235,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592332846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> Maybe try using the <code>look_ahead</code> method on the parser to see if the next token is a comma and then include that in the span?</p>",
        "id": 201058805,
        "sender_full_name": "Amanieu",
        "timestamp": 1592333689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> Okay, I'll look into that</p>",
        "id": 201059119,
        "sender_full_name": "Noah Lev",
        "timestamp": 1592333856
    }
]