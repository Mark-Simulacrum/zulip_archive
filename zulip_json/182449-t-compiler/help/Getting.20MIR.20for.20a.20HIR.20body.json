[
    {
        "content": "<p>Hi there, I am a bit overwhelmed by the rust compiler so sorry if this is a dumb question. </p>\n<p>I am working on a visitor to extract certain information from MIR, so I need to get the MIR for a <code>hir::Body</code>. The code I am using (<a href=\"https://github.com/rust-corpus/qrates/blob/main/extractor/src/hir_visitor.rs#L421\">https://github.com/rust-corpus/qrates/blob/main/extractor/src/hir_visitor.rs#L421</a>) looks like this</p>\n<div class=\"codehilite\"><pre><span></span><code>fn visit_body(&amp;mut self, body: &amp;&#39;tcx hir::Body) {\n    intravisit::walk_body(self, body);\n    let id = body.id();\n    let owner = self.hir_map.body_owner_def_id(id);\n\n    let mir_body = if self.tcx.is_ctfe_mir_available(owner) {\n        self.tcx.mir_for_ctfe(owner)\n    } else {\n        self.tcx.optimized_mir(owner)\n    };\n\n    self.visit_mir(owner, mir_body);\n}\n</code></pre></div>\n<p>But this crashes with</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;mir_for_ctfe should not be used for runtime functions&#39;, compiler/rustc_mir/src/transform/mod.rs:365:10\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/2f391da2e6ac73faa3570b79de239fd8c0edf1a9/library/std/src/panicking.rs:515:5\n   1: core::panicking::panic_fmt\n             at /rustc/2f391da2e6ac73faa3570b79de239fd8c0edf1a9/library/core/src/panicking.rs:92:14\n   2: core::option::expect_failed\n             at /rustc/2f391da2e6ac73faa3570b79de239fd8c0edf1a9/library/core/src/option.rs:1577:5\n   3: rustc_mir::transform::inner_mir_for_ctfe\n   4: rustc_mir::transform::mir_for_ctfe\n   5: rustc_query_system::query::plumbing::get_query_impl\n   6: &lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::mir_for_ctfe\n   7: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_body\n   8: rustc_hir::intravisit::walk_fn\n   9: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_fn\n  10: rustc_hir::intravisit::walk_impl_item\n  11: rustc_hir::intravisit::walk_item\n  12: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_item\n  13: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_item\n  14: rustc_hir::intravisit::walk_crate\n  15: corpus_extractor::analyse_with_tcx\n  16: corpus_extractor::analyse\n  17: &lt;rustc::CorpusCallbacks as rustc_driver::Callbacks&gt;::after_analysis\n  18: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n  19: rustc_span::with_source_map\n  20: rustc_interface::interface::create_compiler_and_run\n  21: scoped_tls::ScopedKey&lt;T&gt;::set\n</code></pre></div>\n<p>If I just do</p>\n<div class=\"codehilite\"><pre><span></span><code>let mir_body = self.tcx.optimized_mir(owner);\n</code></pre></div>\n<p>I will get </p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;do not use `optimized_mir` for constants: Const&#39;, compiler/rustc_mir/src/transform/mod.rs:585:24\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/2f391da2e6ac73faa3570b79de239fd8c0edf1a9/library/std/src/panicking.rs:515:5\n   1: std::panicking::begin_panic_fmt\n             at /rustc/2f391da2e6ac73faa3570b79de239fd8c0edf1a9/library/std/src/panicking.rs:457:5\n   2: rustc_mir::transform::optimized_mir\n   3: rustc_query_system::query::plumbing::get_query_impl\n   4: &lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::optimized_mir\n   5: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_body\n   6: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_item\n   7: rustc_hir::intravisit::walk_stmt\n   8: rustc_hir::intravisit::walk_expr\n   9: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_body\n  10: rustc_hir::intravisit::walk_fn\n  11: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_fn\n  12: rustc_hir::intravisit::walk_expr\n  13: rustc_hir::intravisit::walk_expr\n  14: rustc_hir::intravisit::walk_expr\n  15: rustc_hir::intravisit::walk_expr\n  16: rustc_hir::intravisit::walk_stmt\n  17: rustc_hir::intravisit::walk_expr\n  18: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_body\n  19: rustc_hir::intravisit::walk_fn\n  20: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_fn\n  21: rustc_hir::intravisit::walk_impl_item\n  22: rustc_hir::intravisit::walk_item\n  23: &lt;corpus_extractor::hir_visitor::HirVisitor as rustc_hir::intravisit::Visitor&gt;::visit_item\n  24: rustc_hir::intravisit::walk_crate\n  25: corpus_extractor::analyse_with_tcx\n  26: corpus_extractor::analyse\n  27: &lt;rustc::CorpusCallbacks as rustc_driver::Callbacks&gt;::after_analysis\n  28: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter\n  29: rustc_span::with_source_map\n  30: rustc_interface::interface::create_compiler_and_run\n  31: scoped_tls::ScopedKey&lt;T&gt;::set\n</code></pre></div>\n<p>So, I am looking for a correct way to get the MIR right. Any help will be greatly appreciated. Thanks a lot in advance!</p>",
        "id": 253525880,
        "sender_full_name": "Jichun Wu",
        "timestamp": 1631765095
    },
    {
        "content": "<p>Being overwhelmed is fairly common. It's not a dumb question.</p>",
        "id": 253633652,
        "sender_full_name": "Jubilee",
        "timestamp": 1631819072
    },
    {
        "content": "<p>That said, it <strong>is</strong> one which leaves me with other questions:</p>\n<blockquote>\n<p>I am working on a visitor to extract certain information from MIR, so I need to get the MIR for a hir::Body. The code I am using (<a href=\"https://github.com/rust-corpus/qrates/blob/main/extractor/src/hir_visitor.rs#L421\">https://github.com/rust-corpus/qrates/blob/main/extractor/src/hir_visitor.rs#L421</a>) looks like this</p>\n</blockquote>\n<p>extracting \"certain information\"? Why do you need to go from hir::Body to MIR? What information is missing in the HIR that requires you to access the MIR? How do you know the MIR exists at this point? Why not literally just running rustc with <code>--emit=mir</code>?</p>\n<p>These functions aren't really friendly for out-of-compiler usage, as you have guessed, since they are more... purpose-driven. If it's just \"any question\", why not nudge the compiler along to drive compilation forward a few steps in creating the MIR? <a href=\"https://rustc-dev-guide.rust-lang.org/mir/construction.html\">https://rustc-dev-guide.rust-lang.org/mir/construction.html</a></p>",
        "id": 253635886,
        "sender_full_name": "Jubilee",
        "timestamp": 1631819970
    },
    {
        "content": "<p>You don't actually have to answer all of those questions: they are just the sort of noise in my brain that is ultimately asking \"is this the correct approach for your problem?\"<br>\nAlso possibly useful for you:<br>\nA MIR visitor: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/visit/index.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/visit/index.html</a><br>\nA way to find where in the HIR some MIR came from: <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/struct.MirSource.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/struct.MirSource.html</a></p>",
        "id": 253637608,
        "sender_full_name": "Jubilee",
        "timestamp": 1631820695
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/86299\">https://github.com/rust-lang/rust/issues/86299</a> also there are... kinda multiple MIRs.</p>",
        "id": 253674301,
        "sender_full_name": "Jubilee",
        "timestamp": 1631840781
    },
    {
        "content": "<p>I would locate the part of code that is responsible for throwing error you encountered and replicating its logic to decide between <code>mir_for_ctfe</code> and <code>optimized_mir</code>. (For the local crate <code>is_ctfe_mir_available</code> is the same as <code>is_mir_available</code>, so that cannot be used to make distinction).</p>",
        "id": 253930535,
        "sender_full_name": "tm",
        "timestamp": 1632042160
    }
]