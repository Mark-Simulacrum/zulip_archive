[
    {
        "content": "<p>I'm rebasing <a href=\"https://github.com/rust-lang/rust/pull/60913\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/60913\">https://github.com/rust-lang/rust/pull/60913</a> and hitting a lot of conflicts in the way</p>",
        "id": 166705876,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042422
    },
    {
        "content": "<p>I'm wondering about good strategies to do so and avoid hitting all the conflicts at once</p>",
        "id": 166705896,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042444
    },
    {
        "content": "<p>I was thinking that would be better to make the rebase in a tinier fashion but unsure if what I want is the best thing or if it's even possible</p>",
        "id": 166705927,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042485
    },
    {
        "content": "<p>let's say that master is <code>1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5</code> and Place 2.0 is <code>1 -&gt; 6</code></p>",
        "id": 166705946,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042519
    },
    {
        "content": "<p>if I do git rebase I just get <code>1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6</code> with all the conflicts at once</p>",
        "id": 166706030,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042561
    },
    {
        "content": "<p>I was wondering if it's possible to make git rebase try, first <code>1 -&gt; 2 -&gt; 6</code> and if that works go to the next step</p>",
        "id": 166706052,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042589
    },
    {
        "content": "<p>then do <code>1 -&gt; 2 -&gt; 3 -&gt; 6</code> and if it works continue and so on until I get a conflict</p>",
        "id": 166706062,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042611
    },
    {
        "content": "<p>is something like that possible? what do you people use as a way strategy to rebase things that are giving a LOT of conflicts</p>",
        "id": 166706131,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042644
    },
    {
        "content": "<p>I'm getting small conflicts that are easy to fix inline but also there are sections that were moved to new files that are killing me in the process</p>",
        "id": 166706154,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559042686
    },
    {
        "content": "<p>how about throwing away the conflicting large changes and just doing them again?</p>",
        "id": 166708939,
        "sender_full_name": "oli",
        "timestamp": 1559044997
    },
    {
        "content": "<p>or are there many?</p>",
        "id": 166708943,
        "sender_full_name": "oli",
        "timestamp": 1559045002
    },
    {
        "content": "<p>yeah, my approach was going to be that one</p>",
        "id": 166711034,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559046716
    },
    {
        "content": "<p>but seems like if a git rebase step-by-step thing exists it’s better</p>",
        "id": 166711119,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559046756
    },
    {
        "content": "<p>unsure if a procedure like the one I’ve described exist</p>",
        "id": 166711143,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559046776
    },
    {
        "content": "<p>I\"m not aware of any such procedure. If things get hard enough, I usually flatten to 1 commit and rebase that, and then go back and try to reconstruct intermediate steps.</p>",
        "id": 166717797,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1559050851
    },
    {
        "content": "<blockquote>\n<p>but seems like if a git rebase step-by-step thing exists it’s better</p>\n</blockquote>\n<p>There is actually! It's called <a href=\"https://github.com/mhagger/git-imerge\" target=\"_blank\" title=\"https://github.com/mhagger/git-imerge\"><code>git-imerge</code></a>. I've used it before and for complex rebases, it helps a lot</p>",
        "id": 166719224,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559051645
    },
    {
        "content": "<p>It largely works the way you describe <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span></p>",
        "id": 166719311,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1559051717
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> cool, I was already thinking on writing such a tool :)</p>",
        "id": 166720072,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559052246
    },
    {
        "content": "<p>glad that it exists</p>",
        "id": 166720077,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1559052253
    }
]