[
    {
        "content": "<p>Is there a way to, given a function body, see all the functions that it calls? Having the original HIR/expression span would be ideal but I can live with just the name of the caller and callee function.</p>\n<p>Presumably this is somewhere in <code>rustc_codegen_ssa</code>, but I'm not sure where to look.</p>",
        "id": 207441669,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597860348
    },
    {
        "content": "<p>note that this is not _in general_ possible, e.g., virtual dispatch would break it</p>",
        "id": 207442017,
        "sender_full_name": "simulacrum",
        "timestamp": 1597860514
    },
    {
        "content": "<p>so maybe say more about the use case?</p>",
        "id": 207442030,
        "sender_full_name": "simulacrum",
        "timestamp": 1597860522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span>'s inlining cycle detection might be relevant?</p>",
        "id": 207442054,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597860543
    },
    {
        "content": "<p>the use case is partly for a research-ish project but the eventual goal is for rustdoc to be able to show callgraphs</p>",
        "id": 207442293,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597860707
    },
    {
        "content": "<p>so you see <code>fn f()</code> in the docs, but you can also search for callers and callees</p>",
        "id": 207442342,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597860723
    },
    {
        "content": "<p>and maybe have a graph view of what your control flow looks like</p>",
        "id": 207442351,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597860732
    },
    {
        "content": "<blockquote>\n<p>virtual dispatch</p>\n</blockquote>\n<p>gotcha, having a call to <code>&lt;dyn T&gt;::func_name</code> would be good enough though I think</p>",
        "id": 207442397,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597860771
    },
    {
        "content": "<p>that sounds like a bit of a overextension of rustdoc to me but okay :)</p>",
        "id": 207442413,
        "sender_full_name": "simulacrum",
        "timestamp": 1597860781
    },
    {
        "content": "<p>yeah I might put it in a separate tool</p>",
        "id": 207442428,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597860794
    },
    {
        "content": "<p>but I think it would be really cool :)</p>",
        "id": 207442491,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597860837
    },
    {
        "content": "<p>rust-analyzer does something like this I think</p>",
        "id": 207442760,
        "sender_full_name": "simulacrum",
        "timestamp": 1597860969
    },
    {
        "content": "<p>there's some sort of \"get references\" invocation</p>",
        "id": 207442778,
        "sender_full_name": "simulacrum",
        "timestamp": 1597860981
    },
    {
        "content": "<p>not sure how that's powered</p>",
        "id": 207442788,
        "sender_full_name": "simulacrum",
        "timestamp": 1597860985
    },
    {
        "content": "<p>ok neat, let me go look :)</p>",
        "id": 207442937,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597861072
    },
    {
        "content": "<p>hmm I don't see a <code>get_references</code> function ... <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> does this sound familiar to you?</p>",
        "id": 207443129,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597861163
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/9051d6bc366804fde7c69074950363fc2956a2e1/crates/ide/src/call_hierarchy.rs\">https://github.com/rust-analyzer/rust-analyzer/blob/9051d6bc366804fde7c69074950363fc2956a2e1/crates/ide/src/call_hierarchy.rs</a></p>",
        "id": 207443290,
        "sender_full_name": "matklad",
        "timestamp": 1597861241
    },
    {
        "content": "<p><code>fn call_hierarchy</code> looks like exactly what I'm imagining <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> rust-analyzer works on positions and not IDs but otherwise this is perfect :)</p>",
        "id": 207443662,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597861463
    },
    {
        "content": "<p>related follow-up question: is there a guide somewhere for using rustc as a library? preferably I'd be able to use the nightly release without compiling from source, but I'm willing to compile if I have to. I just don't know how to do this without <code>x.py</code> on hand.</p>",
        "id": 207448225,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597863743
    },
    {
        "content": "<blockquote>\n<p>preferably I'd be able to use the nightly release without compiling from source</p>\n</blockquote>\n<p>(I think I heard something about custom drivers or plugins?)</p>",
        "id": 207448265,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597863767
    },
    {
        "content": "<p>If you install the <code>rustc-dev</code> component you can directly link to the compiler crates</p>",
        "id": 207448285,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597863778
    },
    {
        "content": "<p>perfect, thanks :)</p>",
        "id": 207448298,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597863789
    },
    {
        "content": "<p>with <code>feature(rustc_private)</code>, ok yeah I do remember hearing about this</p>",
        "id": 207448339,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597863810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Find.20reachable.20function.20calls.3F/near/207448285\">said</a>:</p>\n<blockquote>\n<p>If you install the <code>rustc-dev</code> component you can directly link to the compiler crates</p>\n</blockquote>\n<p>You also need <code>llvm-tools-preview</code> for <code>libLLVM-*.so</code>, which <code>librustc_driver-*.so</code> links against.</p>",
        "id": 207449327,
        "sender_full_name": "bjorn3",
        "timestamp": 1597864297
    },
    {
        "content": "<p>Ah, right</p>",
        "id": 207449477,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597864381
    }
]