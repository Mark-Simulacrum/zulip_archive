[
    {
        "content": "<p>I want to deprecate <code>#![feature(external_doc)]</code> (so people have some warning before it's removed). Is there a way to deprecate an entire feature gate?</p>",
        "id": 227722595,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614233268
    },
    {
        "content": "<p>found it, it goes in <code>rustc_feature::removed</code>. Unfortunately that gives a hard error instead of a warning. I think I'll just add warnings at each use site, that will allow me to give a structured suggestion as well.</p>",
        "id": 227722819,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614233443
    },
    {
        "content": "<p>what's the purpose of deprecation?</p>",
        "id": 227769268,
        "sender_full_name": "nagisa",
        "timestamp": 1614261030
    },
    {
        "content": "<p>if you're gutting the functionality, Its probably best  to remove the functionality itself, without removing the gate. This will start throwing out unused attribute warnings</p>",
        "id": 227769434,
        "sender_full_name": "nagisa",
        "timestamp": 1614261122
    },
    {
        "content": "<p>That seems like a bad user experience though - I want people to switch to <code>doc = include_str!</code>, not stop using this altogether. If they just get \"unused attribute\" they won't know how to switch.</p>",
        "id": 227770285,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614261502
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> on one hand its nice that we're looking to make transition smoother, on the other hand we never in the past did anything of the sort even when making larger incompatible breaking changes to unstable features.</p>",
        "id": 227770628,
        "sender_full_name": "nagisa",
        "timestamp": 1614261645
    },
    {
        "content": "<p>There's always the unstable book if folks want to know who moved their cheese</p>",
        "id": 227770706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1614261682
    },
    {
        "content": "<p>So it'd be a fair game to just remove the entire feature. Removing the feature also gives you an opportunity to tell people how to fix code, AFAIR.</p>",
        "id": 227770743,
        "sender_full_name": "nagisa",
        "timestamp": 1614261701
    },
    {
        "content": "<p>My primary concern is the tradeoff between changes necessary to compiler vs. the value (how many people are using this feature?)</p>",
        "id": 227770885,
        "sender_full_name": "nagisa",
        "timestamp": 1614261761
    },
    {
        "content": "<p>if its just 1 or 2 places in the compiler that need adjusting to print out a warning, that seems fine.</p>",
        "id": 227770963,
        "sender_full_name": "nagisa",
        "timestamp": 1614261791
    },
    {
        "content": "<p>yeah, this is just one spot in rustdoc</p>",
        "id": 227772124,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614262234
    },
    {
        "content": "<p>and the feature is used a lot because <a href=\"http://docs.rs\">docs.rs</a> uses nightly</p>",
        "id": 227772142,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614262243
    },
    {
        "content": "<p>(and rustdoc is bad at stabilizing things)</p>",
        "id": 227772149,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614262248
    },
    {
        "content": "<p>I remember discussion somewhere else that people don't generally run rustdoc locally.</p>",
        "id": 227772399,
        "sender_full_name": "nagisa",
        "timestamp": 1614262354
    },
    {
        "content": "<p>and <a href=\"http://docs.rs\">docs.rs</a> doesn't present any build logs? So in practice I have a suspicion that majority of users of the feature will not see the warnings.</p>",
        "id": 227772445,
        "sender_full_name": "nagisa",
        "timestamp": 1614262381
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20deprecate.20a.20feature.20gate.3F/near/227772445\">said</a>:</p>\n<blockquote>\n<p>and <a href=\"http://docs.rs\">docs.rs</a> doesn't present any build logs? So in practice I have a suspicion that majority of users of the feature will not see the warnings.</p>\n</blockquote>\n<p>it does: <a href=\"https://docs.rs/crate/spirq/0.4.12/builds/354506\">https://docs.rs/crate/spirq/0.4.12/builds/354506</a></p>",
        "id": 227772541,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614262423
    },
    {
        "content": "<p>but yeah that's always a drawback :/ better than not having it at all though</p>",
        "id": 227772563,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614262437
    },
    {
        "content": "<p>looks pretty good :)</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: doc(include) is deprecated\n --&gt; /home/joshua/test-rustdoc/include.rs:5:1\n  |\n5 | #[doc(include = &quot;docs.md&quot;)]\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: use `#![feature(extended_key_value_attributes)]` instead\n  |\n5 | #![doc = include_str!(&quot;docs.md&quot;)]\n</code></pre></div>",
        "id": 227777147,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614264099
    },
    {
        "content": "<p>can a HirId that has no corresponding DefId have attributes?</p>",
        "id": 227777935,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614264401
    },
    {
        "content": "<p>I guess statements, but rustdoc doesn't look at function bodies</p>",
        "id": 227777973,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614264413
    },
    {
        "content": "<p>is there a way to tell if a span is local to the current crate?</p>",
        "id": 227778636,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614264684
    },
    {
        "content": "<p>crate_id == LOCAL_CRATE?</p>",
        "id": 227787714,
        "sender_full_name": "nagisa",
        "timestamp": 1614267972
    },
    {
        "content": "<p>where do I get the crate_id from?</p>",
        "id": 227788311,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614268171
    },
    {
        "content": "<p>A def id contains the crate id.</p>",
        "id": 227788462,
        "sender_full_name": "bjorn3",
        "timestamp": 1614268211
    },
    {
        "content": "<p>I'm asking about the span, not the DefId.</p>",
        "id": 227788530,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614268232
    },
    {
        "content": "<p>in the meantime I restructured the code so that it passes in <code>def_id.is_local()</code> but I'm not sure I did it correctly everywhere <a href=\"https://github.com/rust-lang/rust/commit/f550f0d8cf4b2cbcbf7e7feb70cbc8955fd285fd\">https://github.com/rust-lang/rust/commit/f550f0d8cf4b2cbcbf7e7feb70cbc8955fd285fd</a></p>",
        "id": 227788716,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614268298
    },
    {
        "content": "<p>in particular it's less granular than I'd like for merged attributes</p>",
        "id": 227788980,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614268373
    },
    {
        "content": "<p>I'd prefer to treat documentation on the re-export differently than documentation on the original</p>",
        "id": 227789014,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614268386
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> What are the plans for stabilizing <code>doc=include_str!</code>?</p>",
        "id": 227797974,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1614271549
    },
    {
        "content": "<p>I would love to use it, often.</p>",
        "id": 227798003,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1614271558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I'm not sure, you'd have to ask <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span></p>",
        "id": 227798057,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614271565
    },
    {
        "content": "<p>I haven't heard any concerns about it so far, it was added in november: <a href=\"https://github.com/rust-lang/rust/issues/78835\">https://github.com/rust-lang/rust/issues/78835</a></p>",
        "id": 227798104,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614271587
    },
    {
        "content": "<p>fyi: <a href=\"https://github.com/rust-lang/rust/pull/82539\">https://github.com/rust-lang/rust/pull/82539</a></p>",
        "id": 227868076,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614302678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20deprecate.20a.20feature.20gate.3F/near/227797974\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> What are the plans for stabilizing <code>doc=include_str!</code>?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> if you want to stabilize it you can start an FCP on <a href=\"https://github.com/rust-lang/rust/pull/83366\">https://github.com/rust-lang/rust/pull/83366</a></p>",
        "id": 234989224,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1618666726
    }
]