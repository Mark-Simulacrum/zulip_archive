[
    {
        "content": "<p>I am implementing the new asm! syntax for the Xtensa arch, and I am at the point where I will be filtering out registers based on target features. In my testing, it seems the filtering done in <code>def_regs!</code> macro doesn't seem to do anything. The asm is always passed down to llvm where it then errors. See this example in x86: <a href=\"https://godbolt.org/z/arxon3qzq\">https://godbolt.org/z/arxon3qzq</a> - it should print <code>\"register is only available on x86_64\"</code> but it instead prints the llvm message instead.</p>\n<p>My question is if this does nothing, then should I bother implementing the filters? Is this a bug?</p>\n<p>cc <strong>Amanieu</strong> the asm! expert :)</p>",
        "id": 248462999,
        "sender_full_name": "Scott Mabin",
        "timestamp": 1628161681
    },
    {
        "content": "<p>We don't process the asm text at all. We only handle registers specified in input/output operands.</p>",
        "id": 248466515,
        "sender_full_name": "Amanieu",
        "timestamp": 1628164338
    },
    {
        "content": "<p>ah, that makes a lot more sense - still getting used to the new syntax! Specifying the correct registers I now get the Rust error. Thanks!</p>",
        "id": 248467105,
        "sender_full_name": "Scott Mabin",
        "timestamp": 1628164751
    }
]