[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"426609\">@Michael Goulet (compiler-errors)</span> <br>\nThank you for the review! That really helps me.</p>\n<p>But I'm getting a bit confusing. Can you let me know about the <code>substs</code> part of your comment? (<a href=\"https://github.com/rust-lang/rust/pull/95525#discussion_r841285530\">https://github.com/rust-lang/rust/pull/95525#discussion_r841285530</a>)</p>\n<hr>\n<p>What I understand for now is that I have to create a new TraitRef with substs like <code>[String, String]</code> (not <code>[String, Foo]</code>) for PartialEq and PartialOrd.</p>\n<p>So, do you mean like the following code?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">field_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">.</span><span class=\"n\">ty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">substs</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// This `substs` is from `ty::Adt(_, substs)`.</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">substs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">diagnostic_name</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sym</span>::<span class=\"nb\">PartialEq</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">sym</span>::<span class=\"nb\">PartialOrd</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">mk_substs_trait</span><span class=\"p\">(</span><span class=\"n\">field_ty</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">field_ty</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">mk_substs_trait</span><span class=\"p\">(</span><span class=\"n\">field_ty</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[]),</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">new_trait</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ty</span>::<span class=\"n\">TraitRef</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">substs</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"n\">trait_pred</span><span class=\"p\">.</span><span class=\"n\">skip_binder</span><span class=\"p\">().</span><span class=\"n\">trait_ref</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// Create a new child obligation from the new_trait.</span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277703749,
        "sender_full_name": "Yutaro Ohno",
        "timestamp": 1649063866
    },
    {
        "content": "<p>Yeah, I think thatâ€™s correct. Does that code work?</p>",
        "id": 277708659,
        "sender_full_name": "Michael Goulet (compiler-errors)",
        "timestamp": 1649066658
    },
    {
        "content": "<p>Yes, this is working for now. I'll change my PR this way.<br>\nThanks!</p>",
        "id": 277715257,
        "sender_full_name": "Yutaro Ohno",
        "timestamp": 1649070836
    }
]