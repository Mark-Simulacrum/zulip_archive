[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> in <a href=\"https://github.com/rust-lang/rust/pull/82743#issuecomment-791969494\">https://github.com/rust-lang/rust/pull/82743#issuecomment-791969494</a>, you mention lifetime resolution should be done on the AST. What would we gain from this? Should this migration still be considered?</p>",
        "id": 260533758,
        "sender_full_name": "cjgillot",
        "timestamp": 1636229537
    },
    {
        "content": "<p>Resolution of named lifetimes is exactly the same as resolution of e.g. generic type parameters, so it can all be done in the same pass, using the same scope mechanisms, etc.<br>\nThen it will ensure that the rules for both of them will be the same, and unintended differences like <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=7ebd1c513fd17d900c40c684f6e0cf94\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=7ebd1c513fd17d900c40c684f6e0cf94</a> won't occur.</p>",
        "id": 260557364,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1636266253
    },
    {
        "content": "<p>I think that migration should still be considered.</p>",
        "id": 260557378,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1636266306
    },
    {
        "content": "<p>(I'm not sure about unnamed lifetimes, where we fill \"holes\" in which lifetimes would be if we were writing everything fully explicitly, it's an entirely separate logic and I don't know at which point it's better to run it.)</p>",
        "id": 260557449,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1636266463
    },
    {
        "content": "<p>Thanks. I think I'll take a shot at it. In the worst case, I will have learnt how late name resolution works.</p>",
        "id": 260563269,
        "sender_full_name": "cjgillot",
        "timestamp": 1636276144
    }
]