[
    {
        "content": "<p>I'm using another build system like gnumake, which only know output is ready if process terminated. So I cannot rely on <code>--emit metadata,link</code> with artifact notifications to launch dependent built once rmeta is ready, like cargo. How can I make two rustc invocation to first build rmeta for dependent crates, and then build rlib without re-compile rmeta again?<br>\nI tried only <code>--emit=metadata</code>, and the output rmeta is smaller than which is produced by <code>--emit=metadata,link</code>, which makes me confused.<br>\nAlso I cannot found way to build rlib and benefit from pre-built rmeta. Simply <code>--emit=link</code> takes the same time as <code>--emit=metadata,link</code> although rmeta is already there.</p>",
        "id": 242255305,
        "sender_full_name": "oxalica",
        "timestamp": 1623352056
    },
    {
        "content": "<p>jsgf is working on adding support for this, you may want to look at <a href=\"https://github.com/rust-lang/rust/pull/85793\">https://github.com/rust-lang/rust/pull/85793</a> and <a href=\"https://github.com/rust-lang/rust/pull/86045\">https://github.com/rust-lang/rust/pull/86045</a>.</p>",
        "id": 242258835,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623353680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> Thanks. That's about metadata generation. But is it able to use previous rmeta to speed up rlib compilation? Currently emitting rlib cost exact the same time as emitting both rmeta and rlib.</p>",
        "id": 242259331,
        "sender_full_name": "oxalica",
        "timestamp": 1623353934
    },
    {
        "content": "<p>Not with just <code>--emit=metadata</code>, the rmeta file is incomplete.  I don't know the full details, but it looks like from the PR he is going to pursue using <code>--emit link -Zno-codegen</code> instead, but there are issues that it looks like he is working to resolve on that front.</p>",
        "id": 242259678,
        "sender_full_name": "Eric Huss",
        "timestamp": 1623354117
    }
]