[
    {
        "content": "<p>Hi, I am working on this pull request: <a href=\"https://github.com/rust-lang/rust/pull/80182\">https://github.com/rust-lang/rust/pull/80182</a>. I found that in llvm, to print the symbolized backtraces, it uses a binary called <code>llvm-symbolizer</code>. My question, is this binary available for rustc? Also, in general, does rustc invoke llvm through binaries or directly calls the C++ code e.g. for code generation?</p>\n<p>I found, the build produces some llvm binaries in <code>x86_64-unknown-linux-gnu/ci-llvm/bin</code> like <code>llvm-ar</code> but no <code>llvm-symbolizer</code>.</p>",
        "id": 229167975,
        "sender_full_name": "Vikram Pal",
        "timestamp": 1615104630
    },
    {
        "content": "<p>Rustc never invokes any LLVM binaries. It always uses the C api.</p>",
        "id": 229178098,
        "sender_full_name": "bjorn3",
        "timestamp": 1615114528
    },
    {
        "content": "<p>The backtrace crate uses the addr2line crate for backtrace symbolication. For this the backtrace crate does need to read the files containing the debuginfo, so it is not exactly easy to use addr2line without backtrace.</p>",
        "id": 229178240,
        "sender_full_name": "bjorn3",
        "timestamp": 1615114684
    },
    {
        "content": "<p>will the backtrace crate be allowed to be used in rustc?</p>",
        "id": 229187336,
        "sender_full_name": "Vikram Pal",
        "timestamp": 1615123447
    },
    {
        "content": "<p>The backtrace crate is already used by libstd to provide backtraces for <code>RUST_BACKTRACE=1</code>.</p>",
        "id": 229189086,
        "sender_full_name": "bjorn3",
        "timestamp": 1615125073
    },
    {
        "content": "<p>ok, also I found llvm symbolizer does not seem to have a C api.</p>",
        "id": 229190445,
        "sender_full_name": "Vikram Pal",
        "timestamp": 1615126261
    },
    {
        "content": "<p>rustc also makes C++ calls -- see <code>compiler/rustc_llvm/llvm-wrapper</code></p>",
        "id": 229196976,
        "sender_full_name": "cuviper",
        "timestamp": 1615132018
    }
]