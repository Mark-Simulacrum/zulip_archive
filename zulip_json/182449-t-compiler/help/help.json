[
    {
        "content": "<p>Hi! Now I'm porting Rust to a platform that has support of LLC(LLVM target) and a C++ compiler. I am not quite sure how I can create the original compiler</p>",
        "id": 222747716,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610643829
    },
    {
        "content": "<p>are you asking how to build rust from source?</p>",
        "id": 222748021,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610643941
    },
    {
        "content": "<p>there are instruction in the README</p>",
        "id": 222748043,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610643949
    },
    {
        "content": "<p>Yes I tried instructions in README however my target triple is not supported. I want to add a new target triple...</p>",
        "id": 222748437,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610644087
    },
    {
        "content": "<p>hmm, I think <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> wrote up instructions for this at one point</p>",
        "id": 222748519,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610644117
    },
    {
        "content": "<p>not sure where</p>",
        "id": 222748527,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610644119
    },
    {
        "content": "<p>What I had is <a href=\"https://github.com/shepmaster/rust/blob/silicon/silicon/README-cross-compilation.md\">https://github.com/shepmaster/rust/blob/silicon/silicon/README-cross-compilation.md</a></p>",
        "id": 222748779,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610644212
    },
    {
        "content": "<p>Those instructions were modified over time, and started from where some other people started.</p>",
        "id": 222749120,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610644340
    },
    {
        "content": "<p>You’ll need to start by adding a target in rustc_target</p>",
        "id": 222749241,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610644387
    },
    {
        "content": "<p>Or defining a JSON target file￼</p>",
        "id": 222749269,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610644403
    },
    {
        "content": "<p>The target file should be faster to iterate on but the X.PY build script sometimes doesn’t work great with target files.</p>",
        "id": 222749330,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610644430
    },
    {
        "content": "<p>I made contributions to X.PY that should make it work OK with target files but I haven’t needed to use that in a while￼</p>",
        "id": 222749464,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610644486
    },
    {
        "content": "<p>There are several issues:<br>\nHost LLVM does not support target triple<br>\nTarget LLVM cannot be linked on host machine<br>\nI modified config.toml and tried to call configure however it already started to call to <code>rustc --triple $MYTRIPLE</code>.</p>\n<p>So I am a little bit stuck</p>",
        "id": 222749676,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610644565
    },
    {
        "content": "<p>To tell the truth the target is VLIW with a modified LLVM so I am provided with a <a href=\"http://llvm.so\">llvm.so</a> only which can be linked on the target machine only with a proprietary linker</p>",
        "id": 222749867,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610644648
    },
    {
        "content": "<p>that's gonna be difficult, then</p>",
        "id": 222749928,
        "sender_full_name": "nagisa",
        "timestamp": 1610644671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"380211\">@Nikita Patsakula</span> there are two things going on:</p>\n<ol>\n<li>you need to add support for your target to rustc</li>\n<li>you need to build a compiler cross-compiled to your target</li>\n</ol>\n<p>you can't do 2 before you do 1</p>",
        "id": 222749988,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610644685
    },
    {
        "content": "<p>it is necessary to bootstrap which means that you either need to be able to cross-compile to the target architecture or run an some existing compiler on your build machine (possibly via emulation)</p>",
        "id": 222750158,
        "sender_full_name": "nagisa",
        "timestamp": 1610644745
    },
    {
        "content": "<p>I am willing to do that. I met an article <a href=\"https://old.reddit.com/r/rust/comments/5ag60z/how_do_i_bootstrap_rust_to_crosscompile_for_a_new/d9gdjwf/\">https://old.reddit.com/r/rust/comments/5ag60z/how_do_i_bootstrap_rust_to_crosscompile_for_a_new/d9gdjwf/</a> and I tried to bootstrap the compiler however the article is 4 years old</p>",
        "id": 222750243,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610644781
    },
    {
        "content": "<p>Seems like you cannot do the former, so you'll need to somehow do the latter. But yeah, you still need to do the preparatory work of adding the target to rustc and possibly making changes to the standard library to adapt it for your target before you attempt this.</p>",
        "id": 222750364,
        "sender_full_name": "nagisa",
        "timestamp": 1610644819
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> how can I perform the first step?</p>",
        "id": 222750404,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610644833
    },
    {
        "content": "<p>Use contents of <a href=\"https://github.com/rust-lang/rust/tree/master/compiler/rustc_target\">https://github.com/rust-lang/rust/tree/master/compiler/rustc_target</a> as your reference.</p>",
        "id": 222750499,
        "sender_full_name": "nagisa",
        "timestamp": 1610644873
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"380211\">@Nikita Patsakula</span> did you try the instructions in <a href=\"https://github.com/shepmaster/rust/blob/silicon/silicon/README-cross-compilation.md\">https://github.com/shepmaster/rust/blob/silicon/silicon/README-cross-compilation.md</a> ?</p>",
        "id": 222750510,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610644878
    },
    {
        "content": "<p>Should be fairly straightforward.</p>",
        "id": 222750513,
        "sender_full_name": "nagisa",
        "timestamp": 1610644879
    },
    {
        "content": "<p>Smth like writing specs <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs</a>?<br>\nBut how do I compile \"pre\"-stage0?</p>",
        "id": 222750534,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610644894
    },
    {
        "content": "<p>stage0 is downloaded for your <code>build</code> machine.</p>",
        "id": 222750688,
        "sender_full_name": "nagisa",
        "timestamp": 1610644948
    },
    {
        "content": "<p>Of course it won't exist for <code>build</code> target that hasn't existed before, that's why you either cross-compile or emulate. (You can also just try bootstrapping through the entire chain of compilers all the way from when rustc was written in ocaml or alternatively try for a less long chain with mrustc)</p>",
        "id": 222750838,
        "sender_full_name": "nagisa",
        "timestamp": 1610645010
    },
    {
        "content": "<p>i'am not sure there is OCaml compiler for my target machine</p>",
        "id": 222751080,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610645093
    },
    {
        "content": "<p>I think you want to cross-compile, not build 20 different compilers <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 222751148,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610645123
    },
    {
        "content": "<p>They said they cannot cross though – the linker only runs on the target machine and is proprietary?</p>",
        "id": 222751191,
        "sender_full_name": "nagisa",
        "timestamp": 1610645144
    },
    {
        "content": "<p>yes</p>",
        "id": 222751308,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610645173
    },
    {
        "content": "<p>that is going to be very painful then</p>",
        "id": 222751327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610645181
    },
    {
        "content": "<p>the linker can't cross-compile? (I don't know what that really means tbh)</p>",
        "id": 222751351,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610645192
    },
    {
        "content": "<p>the linker cannot run on any of the <code>build</code> targets we currently have support for, not that it cannot cross-compile.</p>",
        "id": 222751425,
        "sender_full_name": "nagisa",
        "timestamp": 1610645224
    },
    {
        "content": "<p>do you have an emulator that could run the VLIW target's code on some more conventional architecture?</p>",
        "id": 222751638,
        "sender_full_name": "nagisa",
        "timestamp": 1610645290
    },
    {
        "content": "<p>With <code>-Clinker</code> any custom script can be used as a linker in theory.<br>\nThat script can send files to a different device or run emulator or whatever.</p>",
        "id": 222751763,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1610645350
    },
    {
        "content": "<p>I got an x86 emulator on the target machine</p>",
        "id": 222751970,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610645414
    },
    {
        "content": "<p>In that case path of least resistance (expensive in compute time, but cheap in developer time) is to just emulate stage0 via binfmt or somesuch.</p>",
        "id": 222752052,
        "sender_full_name": "nagisa",
        "timestamp": 1610645459
    },
    {
        "content": "<p><code>-Clinker</code> is an interesting option, though having to use a vendor-provided <code>llvm.so</code> that is _also_ only available for target architecture(?) prohibits this approach I think.</p>",
        "id": 222752154,
        "sender_full_name": "nagisa",
        "timestamp": 1610645507
    },
    {
        "content": "<p>but this emulator works only for statically linked binaries:(</p>",
        "id": 222752162,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610645511
    },
    {
        "content": "<p>I think <code>x86_64-unknown-linux-musl</code> toolchain might be statically linked.</p>",
        "id": 222752289,
        "sender_full_name": "nagisa",
        "timestamp": 1610645544
    },
    {
        "content": "<p>Also there is a great C compiler on the target machine... Do you think I should bootstrap from mrustc?</p>",
        "id": 222752343,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610645567
    },
    {
        "content": "<p>it is an option you can try, yeah.</p>",
        "id": 222752410,
        "sender_full_name": "nagisa",
        "timestamp": 1610645589
    },
    {
        "content": "<p>Thanks a lot! I am continue my work on it tomorrow</p>",
        "id": 222752681,
        "sender_full_name": "Nikita Patsakula",
        "timestamp": 1610645685
    },
    {
        "content": "<p>19.5</p>\n<p>Formula</p>\n<p>Description</p>\n<p>Result</p>\n<p>=INT(8.9)</p>\n<p>Rounds 8.9 down</p>\n<p>8</p>\n<p>=INT(-8.9)</p>\n<p>Rounds -8.9 down. Rounding a negative number down rounds it away from 0.</p>\n<p>-9</p>\n<p>=A2-INT(A2)</p>\n<p>Returns the decimal part of a positive real number in cell A2</p>\n<p>0.5</p>",
        "id": 222828585,
        "sender_full_name": "Steven Bridges",
        "timestamp": 1610697379
    }
]