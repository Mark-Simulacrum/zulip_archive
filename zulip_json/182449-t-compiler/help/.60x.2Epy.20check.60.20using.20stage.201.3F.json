[
    {
        "content": "<p>I added a new internal lint and I want to see its output without having to codegen rustc_middle. <code>x.py check --stage 1</code> says</p>\n<div class=\"codehilite\"><pre><span></span><code>--stage not supported for x.py check, always treated as stage 0\n</code></pre></div>\n\n\n<p>Is there any way to do this? checking with beta isn't sufficient because it doesn't have the new lint.</p>",
        "id": 212157938,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601709387
    },
    {
        "content": "<p>maybe <code>RUSTFLAGS_NOT_BOOTSTRAP=--profile=check</code></p>",
        "id": 212158707,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601710667
    },
    {
        "content": "<p>nope: <code>error: Conflicting usage of --profile and --release</code></p>",
        "id": 212158886,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601710926
    },
    {
        "content": "<p>This is not supported. It is an extremely rare use case, and supporting it wouldn't be the easiest thing.</p>",
        "id": 212172044,
        "sender_full_name": "simulacrum",
        "timestamp": 1601732425
    },
    {
        "content": "<p>is there a way to say 'optimize = true' when building with stage 0 and 'optimize = false' for building with stage 1 then?</p>",
        "id": 212172220,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601732649
    },
    {
        "content": "<p>that would let me hack it with cargo I think</p>",
        "id": 212172223,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601732657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> what you <em>can</em> do is in a separate checkout (or the same one, separate is easier though) set [build] rustc to point at the stage1 compiler</p>",
        "id": 212173252,
        "sender_full_name": "simulacrum",
        "timestamp": 1601732831
    },
    {
        "content": "<p>that should then just work for x.py check</p>",
        "id": 212173255,
        "sender_full_name": "simulacrum",
        "timestamp": 1601732839
    },
    {
        "content": "<p>oh that's so hacky, I love it <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 212173263,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601732848
    },
    {
        "content": "<p>thanks!</p>",
        "id": 212173265,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601732854
    },
    {
        "content": "<p>this didn't work:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0463]: can&#39;t find crate for `std`\n</code></pre></div>\n\n\n<p>I have this in config.toml</p>\n<div class=\"codehilite\"><pre><span></span><code># Instead of downloading the src/stage0.txt version of the compiler\n# specified, use this rustc binary instead as the stage0 snapshot compiler.\nrustc = &quot;~/pub-reexport-ban/bin/rustc&quot;\n</code></pre></div>",
        "id": 212174903,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601735381
    },
    {
        "content": "<p>oh because I forgot to build the standard library lol</p>",
        "id": 212174955,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601735458
    },
    {
        "content": "<p>I don't think ~ works</p>",
        "id": 212174974,
        "sender_full_name": "simulacrum",
        "timestamp": 1601735519
    },
    {
        "content": "<p>but I could be wrong, we expand with Python so who knows</p>",
        "id": 212175014,
        "sender_full_name": "simulacrum",
        "timestamp": 1601735529
    },
    {
        "content": "<p>it ran the binary fine :) so that's not the issue</p>",
        "id": 212175044,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601735599
    },
    {
        "content": "<p>fyi for other people trying to do this in the future: <code>cp -r build/x86_64-unknown-linux-gnu/stage1 ~/pub-reexport-ban</code> works fine if you want to keep a local build long-term</p>",
        "id": 212175051,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601735629
    },
    {
        "content": "<p>ok nice, <code>x.py build library/std</code> fixed it</p>",
        "id": 212175110,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601735681
    }
]