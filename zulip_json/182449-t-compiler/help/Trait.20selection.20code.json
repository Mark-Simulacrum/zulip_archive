[
    {
        "content": "<p>I'm looking at the (vanilla) trait solving code, and trying to grok the general structure. One thing puzzles me: there are two <code>select</code> functions:</p>\n<ul>\n<li>one in <a href=\"https://github.com/rust-lang/rust/blob/c4fe25d8613a32dcd71e5258c22ff5685f12d4c3/compiler/rustc_trait_selection/src/traits/select/mod.rs#L311-L314\"><code>compiler/rustc_trait_selection/src/traits/select/mod.rs</code></a></li>\n<li>one in <a href=\"https://github.com/rust-lang/rust/blob/c4fe25d8613a32dcd71e5258c22ff5685f12d4c3/compiler/rustc_trait_selection/src/traits/fulfill.rs#L119-L122\"><code>compiler/rustc_trait_selection/src/traits/fulfill.rs</code></a></li>\n</ul>\n<p>I'm inclined to think the first one calls the second, but at first glance it doesn't seem to be the case. What's the deal there?</p>",
        "id": 218211494,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1606654237
    },
    {
        "content": "<p>Wait, never mind, I found it. The dependency goes the other way.</p>",
        "id": 218211635,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1606654490
    },
    {
        "content": "<p>It's:</p>\n<ul>\n<li><code>FulfillmentContext::select</code> (in traits/fulfill.rs)</li>\n<li><code>FulfillProcessor::process_obligation</code></li>\n<li><code>FulfillProcessor::progress_changed_obligations</code></li>\n<li><code>FulfillProcessor::process_trait_obligation</code></li>\n<li><code>SelectionContext::select</code> (in traits/select/mod.rs)</li>\n</ul>",
        "id": 218211709,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1606654667
    },
    {
        "content": "<p>if it helps, I have a lot of muddling about the trait system in <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20normalize.20projection.20types.20to.20a.20single.20type.3F\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20do.20I.20normalize.20projection.20types.20to.20a.20single.20type.3F</a></p>",
        "id": 218213289,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606657181
    },
    {
        "content": "<p>didn't make any <em>progress</em>, but my findings may be helpful</p>",
        "id": 218213296,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606657191
    },
    {
        "content": "<p>It doesn't really help me. Sounds like you're working on a very specific use case, whereas right now I'm just trying to understand the trait system. =/</p>",
        "id": 218213856,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1606658071
    },
    {
        "content": "<p>there's some info in <a href=\"https://rustc-dev-guide.rust-lang.org/traits/resolution.html\">https://rustc-dev-guide.rust-lang.org/traits/resolution.html</a> too</p>",
        "id": 218213877,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606658120
    },
    {
        "content": "<p>Yeah. It's a little helpful, but not that much.</p>",
        "id": 218215348,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1606660647
    },
    {
        "content": "<p>Like, I'm pretty sure the section on traits is the one with the most <strong>TODOs</strong> in the entire dev book.</p>",
        "id": 218215406,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1606660714
    },
    {
        "content": "<p>Whatever. I think I'm just going to get back to poking at the code and write down questions as I go</p>",
        "id": 218215610,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1606661055
    }
]