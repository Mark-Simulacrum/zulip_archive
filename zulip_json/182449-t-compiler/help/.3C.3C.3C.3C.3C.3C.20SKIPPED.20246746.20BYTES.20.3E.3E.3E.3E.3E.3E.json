[
    {
        "content": "<p>Does anyone know why <code>src/test/ui/suggestions/missing-lifetime-specifier.rs</code> in <a href=\"https://github.com/rust-lang/rust/issues/92123\">#92123</a> produces more than half a megabyte of json output from rustc? It gets truncated because it's so much, breaking the test runner when it tries to parse the json later. We can fix that or raise the limits, but it seems wrong for it to produce so much output.</p>",
        "id": 273101092,
        "sender_full_name": "Mara",
        "timestamp": 1645715246
    },
    {
        "content": "<p>I'm looking into it</p>",
        "id": 273105330,
        "sender_full_name": "simulacrum",
        "timestamp": 1645717108
    },
    {
        "content": "<p>It seems like there's not actually more output -- we didn't decide to generate 1000 errors or something</p>",
        "id": 273106113,
        "sender_full_name": "simulacrum",
        "timestamp": 1645717408
    },
    {
        "content": "<p>The JSON structure is very verbose.  In this case, it is showing the macro expansion.</p>",
        "id": 273106318,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645717473
    },
    {
        "content": "<p>Oh, wow, we embed the full --explain output into each error emitted?</p>",
        "id": 273106356,
        "sender_full_name": "simulacrum",
        "timestamp": 1645717493
    },
    {
        "content": "<p>And due to -Zdeduplicate-diagnostics=no it is showing like 4x the normal amount.</p>",
        "id": 273106360,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645717496
    },
    {
        "content": "<p>essentially, yea, the full expansion is included.</p>",
        "id": 273106443,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645717543
    },
    {
        "content": "<p>The expansion also includes a bunch of comments within the macro, which seems kinda odd.</p>",
        "id": 273106607,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645717592
    },
    {
        "content": "<p>I think it's just the full macro body?</p>",
        "id": 273106790,
        "sender_full_name": "simulacrum",
        "timestamp": 1645717677
    },
    {
        "content": "<p>The number of times each macro is included:</p>\n<div class=\"codehilite\"><pre><span></span><code>      7                     &quot;macro_decl_name&quot;: &quot;thread_local!&quot;,\n      7                 &quot;macro_decl_name&quot;: &quot;$crate::__thread_local_inner!&quot;,\n      7                 &quot;macro_decl_name&quot;: &quot;thread_local!&quot;,\n     14             &quot;macro_decl_name&quot;: &quot;$crate::__thread_local_inner!&quot;,\n      7         &quot;macro_decl_name&quot;: &quot;$crate::__thread_local_inner!&quot;,\n</code></pre></div>",
        "id": 273106810,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645717682
    },
    {
        "content": "<p>Yea</p>",
        "id": 273106838,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645717683
    },
    {
        "content": "<p>I think probably for this PR I would say we should just bump the limit, but in the long run it seems like it's a good idea to cut down on the output we give here -- especially for UI tests I imagine we're actually spending a good chunk of time copying bytes around for all this JSON</p>",
        "id": 273107028,
        "sender_full_name": "simulacrum",
        "timestamp": 1645717780
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/3d127e2040b57157936f5f24e114a8b4c9a505ef/compiler/rustc_errors/src/json.rs#L458\">https://github.com/rust-lang/rust/blob/3d127e2040b57157936f5f24e114a8b4c9a505ef/compiler/rustc_errors/src/json.rs#L458</a> probably should be trimming the def_site span there to just the first line or so</p>",
        "id": 273107697,
        "sender_full_name": "simulacrum",
        "timestamp": 1645718034
    },
    {
        "content": "<p>or, at least, cutting the text: ... we emit there</p>",
        "id": 273107776,
        "sender_full_name": "simulacrum",
        "timestamp": 1645718046
    },
    {
        "content": "<p>I'm not sure there's any value in emitting a full copy of a macro</p>",
        "id": 273107833,
        "sender_full_name": "simulacrum",
        "timestamp": 1645718073
    },
    {
        "content": "<p>I'll go ahead and file a PR with that change, which seems like a reasonable thing to me, but I'm not sure if we need the full macro body in the output for some reason</p>",
        "id": 273108192,
        "sender_full_name": "simulacrum",
        "timestamp": 1645718230
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/rust-lang/rust/pull/94327\">https://github.com/rust-lang/rust/pull/94327</a></p>",
        "id": 273113411,
        "sender_full_name": "simulacrum",
        "timestamp": 1645720296
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> that PR should let yours go forward, at least, though it's not a complete fix for the issue</p>",
        "id": 273113450,
        "sender_full_name": "simulacrum",
        "timestamp": 1645720319
    },
    {
        "content": "<p>if not that then I'd bump limits up, it seems like we're more verbose than we maybe should be but not really the fault of your PR</p>",
        "id": 273113546,
        "sender_full_name": "simulacrum",
        "timestamp": 1645720346
    },
    {
        "content": "<p>thank you!</p>",
        "id": 273113669,
        "sender_full_name": "Mara",
        "timestamp": 1645720395
    },
    {
        "content": "<p>I think we should just remove the 'SKIPPED' logic entirely, tbh</p>",
        "id": 273156001,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1645740436
    },
    {
        "content": "<p>If we think that the output of a test is too large, we should trim it a way that's specific to the type of output produced</p>",
        "id": 273156142,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1645740517
    },
    {
        "content": "<p>removing some arbitrary sequence of bytes in the middle of the stream could easily cause us to remove something important, and fail to detect meaningful changes to the output in the future</p>",
        "id": 273156228,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1645740572
    },
    {
        "content": "<p>The SKIPPED thing shouldn't ever show up in a valid test.  It is only there to prevent an OOM failure (when trying to load too much data) and to avoid spewing megabytes of data to the console or CI logs.</p>",
        "id": 273157692,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645741291
    },
    {
        "content": "<p>In that case, should we just fail the test (and print the output so far) when we would otherwise start with the 'skipped' logic?</p>",
        "id": 273157884,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1645741405
    },
    {
        "content": "<p>I think that sounds reasonable for normal JSON-based tests, but the reason it was added was for <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/rustc-rust-log.rs\"><code>rustc-rust-log.rs</code></a> which does legitimately output a lot of content.</p>",
        "id": 273159024,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645742086
    },
    {
        "content": "<p>I also think it was kind of a good thing that it failed here.  The JSON output can be very verbose, and I think Mark's fix could be helpful for editor integration performance.</p>",
        "id": 273159177,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645742189
    },
    {
        "content": "<p>Have we actually run into test OOMs in practice?</p>",
        "id": 273272088,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1645816296
    },
    {
        "content": "<p>Yea, here is an example: <a href=\"https://ci.appveyor.com/project/rust-lang/rust/build/1.0.5218/job/cpkwflt80mu8jhx4\">https://ci.appveyor.com/project/rust-lang/rust/build/1.0.5218/job/cpkwflt80mu8jhx4</a></p>",
        "id": 273289062,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645825763
    },
    {
        "content": "<p>(more context at <a href=\"https://github.com/rust-lang/rust/pull/45409#issuecomment-340791235\">https://github.com/rust-lang/rust/pull/45409#issuecomment-340791235</a>)</p>",
        "id": 273289482,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645826008
    }
]