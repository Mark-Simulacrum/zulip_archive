[
    {
        "content": "<p>This function seems really hacky and it's not documented. What does it do and when should I use it?</p>",
        "id": 223193849,
        "sender_full_name": "osa1",
        "timestamp": 1611040912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119169\">@osa1</span> it means \"ICE if no error is reported\". It's meant to ensure the compiler doesn't try to keep going when the code is broken past repair</p>",
        "id": 223193904,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611040958
    },
    {
        "content": "<p>this is the reason I had to add <code>EmitIgnoredResolutionErrors</code> in rustdoc: <a href=\"https://github.com/rust-lang/rust/blob/94e6ea9fc97845b336067bffb3d103780474f6f5/src/librustdoc/core.rs#L637-L641\">https://github.com/rust-lang/rust/blob/94e6ea9fc97845b336067bffb3d103780474f6f5/src/librustdoc/core.rs#L637-L641</a></p>",
        "id": 223193932,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611041009
    },
    {
        "content": "<p>Hmm, so the compiler tries to make progress as much as possible, even in the presence of errors, so we collect the errors but still make progress. When progress is not possible instead of panicking we do <code>delay_span_bug</code> which stops compilation and reports existing errors?</p>",
        "id": 223193945,
        "sender_full_name": "osa1",
        "timestamp": 1611041028
    },
    {
        "content": "<p>delay_span_bug does not stop compilation. It panics when the TyCtxt is dropped I think.</p>",
        "id": 223194009,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611041089
    },
    {
        "content": "<p>Why does this function take a span argument? It seems like the message passed to this function is not used (at least in some cases). I used it in <a href=\"https://github.com/rust-lang/rust/issues/81185\">#81185</a> and my error message is not used.</p>",
        "id": 223194022,
        "sender_full_name": "osa1",
        "timestamp": 1611041107
    },
    {
        "content": "<p>the idea is that there is not context at the current point to give a useful error, so it depends on other parts of the compiler to give errors</p>",
        "id": 223194025,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611041111
    },
    {
        "content": "<p>the error message is not used because other errors were reported</p>",
        "id": 223194109,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611041210
    },
    {
        "content": "<p>delay_span_bug only emits the error if no other errors are reported</p>",
        "id": 223194119,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611041218
    },
    {
        "content": "<p>Interesting.. That makes sense, thanks <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></p>",
        "id": 223194132,
        "sender_full_name": "osa1",
        "timestamp": 1611041236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20is.20delay_span_bug.20for.3F/near/223194009\">said</a>:</p>\n<blockquote>\n<p>delay_span_bug does not stop compilation. It panics when the TyCtxt is dropped I think.</p>\n</blockquote>\n<p>Wait, but <code>TyCtxt</code> is Copy so I don't think it can have a Drop impl...</p>",
        "id": 223447446,
        "sender_full_name": "Noah Lev",
        "timestamp": 1611182490
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> sorry, I meant GlobalCtxt</p>",
        "id": 223448956,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611183413
    },
    {
        "content": "<p>TyCtxt is a pointer to GlobalCtxt</p>",
        "id": 223448984,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611183435
    }
]