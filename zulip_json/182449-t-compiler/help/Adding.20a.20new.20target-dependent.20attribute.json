[
    {
        "content": "<p>Hi all <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> !</p>\n<p>I am working on adding support in Rust for a new LLVM attribute <code>cmse_nonsecure_entry</code> that will be available on LLVM 11.</p>\n<p>This attribute is made to support <em>entry functions</em>  as part of the TrustZone-M feature of Armv8-M processors. You can find more information about this attribute and TrustZone-M <a href=\"https://developer.arm.com/documentation/ecm0359818/latest/\">here</a>.</p>\n<p>I started locally hacking the compiler to implement it. Since this is another LLVM attribute, I took example from other attributes like <code>cold</code> or <code>no_mangle</code> and replicated the implementation in Rust:</p>\n<ul>\n<li>added a new symbol for it in so it can be referred with <code>sym::cmse_nonsecure_entry</code></li>\n<li>added a new <code>CodegenFnAttrFlags::CMSE_NONSECURE_ENTRY</code></li>\n<li>setting the previous flag in <code>src/librustc_typeck/collect.rs</code> when it is seen and throwing an error if the compialtion is done for a target that does not support this attribute</li>\n<li>in <code>src/librustc_codegen_llvm/attributes.rs</code>, calling the LLVM API to add the function attribute string</li>\n</ul>\n<p>In a small example locally that works: I can see the results of the <code>cmse_nonsecure_entry</code> attribute being applied.</p>\n<p>So that's all good for me and I would be very happy to upstream this (once the <a href=\"https://github.com/rust-lang/rust/pull/73526\">LLVM 11 upgrade</a> is on <code>master</code>) but I wanted to check here:</p>\n<ol>\n<li>am I doing things right? Is it OK to add a target-dependent attribute next to the target-independent ones?</li>\n<li>is it ok just just make a PR for this or do I need to follow a RFC (or other) process?</li>\n</ol>",
        "id": 207728241,
        "sender_full_name": "Hugues de Valon",
        "timestamp": 1598108739
    },
    {
        "content": "<p>If it's unstable only it seems fine to make a PR</p>",
        "id": 207728298,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598108794
    },
    {
        "content": "<p>I can't help with your first question, sorry, don't know this part of the compiler</p>",
        "id": 207728302,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598108815
    },
    {
        "content": "<blockquote>\n<p>If it's unstable only it seems fine to make a PR</p>\n</blockquote>\n<p>Thanks for the answer! Shall I do anything special to \"make it\" unstable?</p>",
        "id": 207728830,
        "sender_full_name": "Hugues de Valon",
        "timestamp": 1598109613
    },
    {
        "content": "<p>not sure, but the reviewer will know</p>",
        "id": 207729220,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598110265
    },
    {
        "content": "<p>cool, thanks :)</p>",
        "id": 207729304,
        "sender_full_name": "Hugues de Valon",
        "timestamp": 1598110421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"332250\">Hugues de Valon</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Adding.20a.20new.20target-dependent.20attribute/near/207728830\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>If it's unstable only it seems fine to make a PR</p>\n</blockquote>\n<p>Thanks for the answer! Shall I do anything special to \"make it\" unstable?</p>\n</blockquote>\n<p>Normally, to make an attribute unstable, you want to add a \"feature gate\".</p>",
        "id": 207737892,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598123205
    },
    {
        "content": "<p>That will include a tracking issue for future stabilization.</p>",
        "id": 207737898,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598123225
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> <br>\nIt's what <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> told me to do in the <a href=\"https://github.com/rust-lang/rust/pull/75810\">PR</a> <span aria-label=\"happy\" class=\"emoji emoji-1f600\" role=\"img\" title=\"happy\">:happy:</span> !</p>",
        "id": 207766377,
        "sender_full_name": "Hugues de Valon",
        "timestamp": 1598178300
    }
]