[
    {
        "content": "<p>Running <code>./x.py doc --stage 1</code> causes an ICE:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, ~/rust/src/librustc_serialize/leb128.rs:32:28\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.47.0-dev running on x86_64-apple-darwin\n\nnote: compiler flags: -Z macro-backtrace -Z osx-rpath-install-name -Z unstable-options -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C embed-bitcode=no -C codegen-units=4 -C debuginfo=0 -C link-args=-Wl,-rpath,@loader_path/../lib -C prefer-dynamic -C llvm-args=-import-instr-limit=10 --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: could not compile `chalk-engine`.\n\nTo learn more, run the command again with --verbose.\n</code></pre></div>\n\n\n<p>I tried running plain <code>./x.py build --stage 1</code>, as per <a href=\"https://rustc-dev-guide.rust-lang.org/building/suggested.html\">https://rustc-dev-guide.rust-lang.org/building/suggested.html</a>:</p>\n<blockquote>\n<p>The TL;DR is that you might get weird behavior from a compile when using --keep-stage 1 -- for example, strange ICEs or other panics. In that case, you should simply remove the --keep-stage 1 from the command and rebuild. That ought to fix the problem.</p>\n</blockquote>\n<p>But it doesn't recompile anything and I get the same error. I don't want to run <code>./x.py clean</code> if I can avoid it because I suspect it may remove the LLVM build which takes a long time to build. What should I do?</p>\n<p>Cc <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span></p>",
        "id": 207786219,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598208770
    },
    {
        "content": "<p>wait, this happens while <em>compiling</em> and not documenting?</p>",
        "id": 207786277,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598208844
    },
    {
        "content": "<p><code>x.py clean</code> doesn't remove llvm btw</p>",
        "id": 207786279,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598208855
    },
    {
        "content": "<p>what's the exact command you're running?</p>",
        "id": 207786285,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598208873
    },
    {
        "content": "<p>Sorry, I meant while documenting :)</p>",
        "id": 207786313,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598208950
    },
    {
        "content": "<p>if you can show the output from x.py and also the backtrace that would be helpful</p>",
        "id": 207786353,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598208968
    },
    {
        "content": "<p>(the last 20 or so lines from x.py is fine, but I'd like the whole backtrace)</p>",
        "id": 207786355,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598208982
    },
    {
        "content": "<p>I just ran <code>./x.py doc --stage 1</code> which built the compiler (including LLVM), but once it finished building it ICE'd.</p>",
        "id": 207786363,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209003
    },
    {
        "content": "<p><code>x.py</code> output:</p>\n<div class=\"codehilite\"><pre><span></span><code>Updating only changed submodules\nSubmodules updated in 0.05 seconds\n    Finished dev [unoptimized + debuginfo] target(s) in 0.15s\nGenerating unstable book md files (x86_64-apple-darwin)\nBuilding stage0 tool unstable-book-gen (x86_64-apple-darwin)\n    Finished release [optimized] target(s) in 0.14s\nBuilding stage0 tool rustbook (x86_64-apple-darwin)\n    Finished release [optimized] target(s) in 0.19s\nRustbook (x86_64-apple-darwin) - unstable-book\nBuilding stage0 std artifacts (x86_64-apple-darwin -&gt; x86_64-apple-darwin)\n    Finished release [optimized] target(s) in 0.15s\nCopying stage0 std from stage0 (x86_64-apple-darwin -&gt; x86_64-apple-darwin / x86_64-apple-darwin)\nBuilding stage0 compiler artifacts (x86_64-apple-darwin -&gt; x86_64-apple-darwin)\n    Finished release [optimized] target(s) in 0.23s\nCopying stage0 rustc from stage0 (x86_64-apple-darwin -&gt; x86_64-apple-darwin / x86_64-apple-darwin)\nAssembling stage1 compiler (x86_64-apple-darwin)\nDocumenting standalone (x86_64-apple-darwin)\nBuilding rustdoc for stage1 (x86_64-apple-darwin)\n    Finished release [optimized] target(s) in 0.16s\nDocumenting book redirect pages (x86_64-apple-darwin)\nDocumenting stage1 std (x86_64-apple-darwin)\nBuilding stage1 std artifacts (x86_64-apple-darwin -&gt; x86_64-apple-darwin)\n    Finished release [optimized] target(s) in 0.14s\nCopying stage1 std from stage1 (x86_64-apple-darwin -&gt; x86_64-apple-darwin / x86_64-apple-darwin)\n    Finished release [optimized] target(s) in 0.28s\n    Finished release [optimized] target(s) in 0.30s\n    Finished release [optimized] target(s) in 0.29s\n    Finished release [optimized] target(s) in 0.30s\n    Finished release [optimized] target(s) in 0.29s\nDocumenting stage1 compiler (x86_64-apple-darwin)\n    skipping - compiler/librustdoc docs disabled\nDocumenting stage1 rustdoc (x86_64-apple-darwin)\n    skipping - compiler/librustdoc docs disabled\nDocumenting error index (x86_64-apple-darwin)\nBuilding stage1 compiler artifacts (x86_64-apple-darwin -&gt; x86_64-apple-darwin)\n   Compiling chalk-engine v0.14.0\n   Compiling rustc_data_structures v0.0.0 (/Users/me/rust/src/librustc_data_structures)\nthread &#39;rustc&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, /Users/me/rust/src/librustc_serialize/leb128.rs:32:28\n</code></pre></div>",
        "id": 207786457,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209177
    },
    {
        "content": "<p>Backtrace 1:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, /Users/me/rust/src/librustc_serialize/leb128.rs:32:28\nstack backtrace:\n   0:        0x10fb6823b - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h5d9fce4605f1220a\n   1:        0x10fbfe1ad - core::fmt::write::h1614c288cde380c5\n   2:        0x10fb65857 - std::io::Write::write_fmt::hba663827d5a82a0e\n   3:        0x10fb680b5 - std::sys_common::backtrace::print::ha90a372fac35c0e6\n   4:        0x10fb77e0d - std::panicking::default_hook::{{closure}}::hf04912344987f09f\n   5:        0x10fb77c39 - std::panicking::default_hook::h62aeca00ea500a69\nthread &#39;rustc&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, /Users/me/rust/src/librustc_serialize/leb128.rs:32:28\nstack backtrace:\n   0:        0x109d3423b - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h5d9fce4605f1220a\n   1:        0x109dca1ad - core::fmt::write::h1614c288cde380c5\n   2:        0x109d31857 - std::io::Write::write_fmt::hba663827d5a82a0e\n   3:        0x109d340b5 - std::sys_common::backtrace::print::ha90a372fac35c0e6\n   4:        0x109d43e0d - std::panicking::default_hook::{{closure}}::hf04912344987f09f\n   5:        0x109d43c39 - std::panicking::default_hook::h62aeca00ea500a69\n   6:        0x115a4f1d8 - rustc_driver::report_ice::h88a83a06b2619061\n   7:        0x10fb7823f - std::panicking::rust_panic_with_hook::he86b9c4b0afa00f3\n   8:        0x10fb9396b - std::panicking::begin_panic_handler::{{closure}}::h29a4cbc939d3fbd6\n   9:        0x10fb928a8 - std::sys_common::backtrace::__rust_end_short_backtrace::h0873e5b8d114902b\n  10:        0x10fb77e73 - _rust_begin_unwind\n  11:        0x10fc0ca3f - core::panicking::panic_fmt::h6b07cf186aa0be5e\n  12:        0x10fc0ca06 - core::panicking::panic_bounds_check::he4e6b532cf9a6d7d\n  13:        0x11b41c445 - rustc_session::config::_DERIVE_rustc_serialize_Decodable_D_FOR_SymbolManglingVersion::&lt;impl rustc_serialize::serialize::Decodable&lt;__D&gt; for rustc_session::config::SymbolManglingVersion&gt;::decode::h370fa8bfe9d9a1f4\n  14:        0x11b3fec30 - rustc_metadata::rmeta::_DERIVE_rustc_serialize_Decodable_DecodeContext_a_tcx_FOR_CrateRoot::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_metadata::rmeta::CrateRoot&gt;::decode::h7500125777da5e2d\n  15:        0x11b5431ad - rustc_metadata::rmeta::decoder::MetadataBlob::get_root::h9468e91298d49d80\n  16:        0x11b4aa9eb - rustc_metadata::locator::CrateLocator::extract_one::h63f2539ec27a38c0\n  17:        0x11b4a9d90 - rustc_metadata::locator::CrateLocator::extract_lib::h65180c494ff1506f\n  18:        0x11b4a9723 - rustc_metadata::locator::CrateLocator::find_library_crate::hfc477ffefb8bb9f6\n  19:        0x11b4a8f35 - rustc_metadata::locator::CrateLocator::maybe_load_library_crate::h72cf8d2ba396a6ef\n  20:        0x11b4a56fc - rustc_metadata::creader::CrateLoader::load::h964f14bc88033ac9\n  21:        0x11b4a2ee3 - rustc_metadata::creader::CrateLoader::maybe_resolve_crate::h1119379d42ec2199\n  22:        0x11b4a489c - rustc_metadata::creader::CrateLoader::maybe_resolve_crate::h1119379d42ec2199\n  23:        0x11b4a80b5 - rustc_metadata::creader::CrateLoader::maybe_process_path_extern::hc9b0cc5b2fa8688a\n  24:        0x11aa0bd2b - rustc_resolve::Resolver::extern_prelude_get::h8e656f04f647feb1\n  25:        0x11aa9ced8 - rustc_resolve::Resolver::visit_scopes::hcf9b9caddd8ddce5\n  26:        0x11a9f75f1 - rustc_resolve::macros::&lt;impl rustc_resolve::Resolver&gt;::early_resolve_ident_in_lexical_scope::h2c9961f0e1abe22d\n  27:        0x11aa09264 - rustc_resolve::Resolver::resolve_path_with_ribs::{{closure}}::hf7570ad6dc6538b7\n  28:        0x11aa07936 - rustc_resolve::Resolver::resolve_path_with_ribs::haf35e44f4f415595\n  29:        0x11aa3bb93 - rustc_resolve::imports::ImportResolver::resolve_imports::h53ff7ef17c6eb20b\n  30:        0x11a9f4575 - rustc_resolve::macros::&lt;impl rustc_expand::base::ResolverExpand for rustc_resolve::Resolver&gt;::resolve_imports::h529bbc1feff023a7\n  31:        0x11b5b3b2a - rustc_expand::expand::MacroExpander::fully_expand_fragment::h5c4d0c08e69f247d\n  32:        0x11b5b31d7 - rustc_expand::expand::MacroExpander::expand_crate::h292d8ad144df4e4a\n  33:        0x115c2c911 - rustc_interface::passes::configure_and_expand::{{closure}}::hbad6c082d8c5d4aa\n  34:        0x115c2bd06 - rustc_interface::passes::configure_and_expand::heefd90d0d9bd8a11\n  35:        0x115c8a0e0 - rustc_interface::queries::Query&lt;T&gt;::compute::haf20861da3d69d30\n  36:        0x115c37f5c - rustc_interface::queries::Queries::expansion::he279e28ded63537b\n  37:        0x11591870e - rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter::h1baa7929c6cddd37\n  38:        0x115a2a108 - rustc_span::with_source_map::h33d9f36691856c24\n  39:        0x11590b155 - scoped_tls::ScopedKey&lt;T&gt;::set::h9d71e89a014f949d\n  40:        0x115a39fff - std::sys_common::backtrace::__rust_begin_short_backtrace::ha9f939f41a7a0c05\n  41:        0x115925e2c - core::ops::function::FnOnce::call_once{{vtable.shim}}::h86f12f1eb12a4328\n  42:        0x10fb5ca0b - &lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hefab0d145698036d\n  43:        0x10fba7d9a - std::sys::unix::thread::Thread::new::thread_start::h116849e28bc8893d\n  44:     0x7fff68ab5109 - __pthread_start\n</code></pre></div>",
        "id": 207786525,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209255
    },
    {
        "content": "<p>Backtrace 2:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&amp;template=ice.md\n\nnote: rustc 1.47.0-dev running on x86_64-apple-darwin\n\nnote: compiler flags: -Z macro-backtrace -Z osx-rpath-install-name -Z unstable-options -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C embed-bitcode=no -C codegen-units=4 -C debuginfo=0 -C link-args=-Wl,-rpath,@loader_path/../lib -C prefer-dynamic -C llvm-args=-import-instr-limit=10 --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\nerror: could not compile `chalk-engine`.\n\nTo learn more, run the command again with --verbose.\nwarning: build failed, waiting for other jobs to finish...\n   6:        0x1184f11d8 - rustc_driver::report_ice::h88a83a06b2619061\n   7:        0x109d4423f - std::panicking::rust_panic_with_hook::he86b9c4b0afa00f3\n   8:        0x109d5f96b - std::panicking::begin_panic_handler::{{closure}}::h29a4cbc939d3fbd6\n   9:        0x109d5e8a8 - std::sys_common::backtrace::__rust_end_short_backtrace::h0873e5b8d114902b\n  10:        0x109d43e73 - _rust_begin_unwind\n  11:        0x109dd8a3f - core::panicking::panic_fmt::h6b07cf186aa0be5e\n  12:        0x109dd8a06 - core::panicking::panic_bounds_check::he4e6b532cf9a6d7d\n  13:        0x11debe445 - rustc_session::config::_DERIVE_rustc_serialize_Decodable_D_FOR_SymbolManglingVersion::&lt;impl rustc_serialize::serialize::Decodable&lt;__D&gt; for rustc_session::config::SymbolManglingVersion&gt;::decode::h370fa8bfe9d9a1f4\n  14:        0x11dea0c30 - rustc_metadata::rmeta::_DERIVE_rustc_serialize_Decodable_DecodeContext_a_tcx_FOR_CrateRoot::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_metadata::rmeta::CrateRoot&gt;::decode::h7500125777da5e2d\n  15:        0x11dfe51ad - rustc_metadata::rmeta::decoder::MetadataBlob::get_root::h9468e91298d49d80\n  16:        0x11df4c9eb - rustc_metadata::locator::CrateLocator::extract_one::h63f2539ec27a38c0\n  17:        0x11df4bd90 - rustc_metadata::locator::CrateLocator::extract_lib::h65180c494ff1506f\n  18:        0x11df4b723 - rustc_metadata::locator::CrateLocator::find_library_crate::hfc477ffefb8bb9f6\n  19:        0x11df4af35 - rustc_metadata::locator::CrateLocator::maybe_load_library_crate::h72cf8d2ba396a6ef\n  20:        0x11df476fc - rustc_metadata::creader::CrateLoader::load::h964f14bc88033ac9\n  21:        0x11df44ee3 - rustc_metadata::creader::CrateLoader::maybe_resolve_crate::h1119379d42ec2199\n  22:        0x11df4689c - rustc_metadata::creader::CrateLoader::maybe_resolve_crate::h1119379d42ec2199\n  23:        0x11df49eb2 - rustc_metadata::creader::CrateLoader::process_extern_crate::h63254ae023715d1e\n  24:        0x11d48995d - &lt;rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor as rustc_ast::visit::Visitor&gt;::visit_item::heba5c11532cb4377\n  25:        0x11d4d939f - rustc_ast::visit::walk_item::h7e86378542d3501a\n  26:        0x11d48ab2a - &lt;rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor as rustc_ast::visit::Visitor&gt;::visit_item::heba5c11532cb4377\n  27:        0x11d495b7c - rustc_resolve::macros::&lt;impl rustc_expand::base::ResolverExpand for rustc_resolve::Resolver&gt;::visit_ast_fragment_with_placeholders::h39a6003b726de152\n  28:        0x11e05c68d - rustc_expand::expand::MacroExpander::collect_invocations::hb11ba70c1006b7ca\n  29:        0x11e055ace - rustc_expand::expand::MacroExpander::fully_expand_fragment::h5c4d0c08e69f247d\n  30:        0x11e0551d7 - rustc_expand::expand::MacroExpander::expand_crate::h292d8ad144df4e4a\n  31:        0x1186ce911 - rustc_interface::passes::configure_and_expand::{{closure}}::hbad6c082d8c5d4aa\n  32:        0x1186cdd06 - rustc_interface::passes::configure_and_expand::heefd90d0d9bd8a11\n  33:        0x11872c0e0 - rustc_interface::queries::Query&lt;T&gt;::compute::haf20861da3d69d30\n  34:        0x1186d9f5c - rustc_interface::queries::Queries::expansion::he279e28ded63537b\n  35:        0x1183ba70e - rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter::h1baa7929c6cddd37\n  36:        0x1184cc108 - rustc_span::with_source_map::h33d9f36691856c24\n  37:        0x1183ad155 - scoped_tls::ScopedKey&lt;T&gt;::set::h9d71e89a014f949d\n  38:        0x1184dbfff - std::sys_common::backtrace::__rust_begin_short_backtrace::ha9f939f41a7a0c05\n  39:        0x1183c7e2c - core::ops::function::FnOnce::call_once{{vtable.shim}}::h86f12f1eb12a4328\n  40:        0x109d28a0b - &lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hefab0d145698036d\n  41:        0x109d73d9a - std::sys::unix::thread::Thread::new::thread_start::h116849e28bc8893d\n  42:     0x7fff68ab5109 - __pthread_start\n</code></pre></div>",
        "id": 207786600,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209328
    },
    {
        "content": "<p>there's no main function in that backtrace</p>",
        "id": 207786605,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209339
    },
    {
        "content": "<p>do you perchance have <code>parallel-compiler = true</code>?</p>",
        "id": 207786612,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209346
    },
    {
        "content": "<p>this sounds like the parallel compiler might not play well with the awful cloning hack rustdoc does with the resolver</p>",
        "id": 207786632,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209398
    },
    {
        "content": "<p>I have:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">#parallel-compiler = false</span>\n</code></pre></div>",
        "id": 207786633,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209401
    },
    {
        "content": "<p>So I assume it's the default</p>",
        "id": 207786639,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209427
    },
    {
        "content": "<p>this is really weird then, why is rustc starting threads?</p>",
        "id": 207786642,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209428
    },
    {
        "content": "<p>anyway this is out of my knowledge of the compiler, I'd open an issue</p>",
        "id": 207786686,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209460
    },
    {
        "content": "<p>I just remembered that I have <code>incremental = true</code>. Do you think that could be causing weird issues?</p>",
        "id": 207786710,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209519
    },
    {
        "content": "<p>nah I use incremental = true locally</p>",
        "id": 207786764,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209571
    },
    {
        "content": "<p>I don't have chalk enabled though, let me see if I can replicate that way</p>",
        "id": 207786773,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209583
    },
    {
        "content": "<p>I don't think I ever enabled chalk though...</p>",
        "id": 207786781,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209598
    },
    {
        "content": "<p>Maybe I should update my <code>config.toml</code></p>",
        "id": 207786795,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209626
    },
    {
        "content": "<p>try that, yeah</p>",
        "id": 207786797,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598209631
    },
    {
        "content": "<p>I think it's 2 months out of date</p>",
        "id": 207786807,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598209652
    },
    {
        "content": "<p>Still got it with <code>incremental = false</code> and with <code>config.toml.example</code>. Filed an issue: <a href=\"https://github.com/rust-lang/rust/issues/75849\">#75849</a></p>",
        "id": 207791589,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598217104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> if you run <code>build --stage 1</code> what happens?</p>",
        "id": 207793392,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598220198
    }
]