[
    {
        "content": "<p>Hi! I'm trying to understand this code - <a href=\"https://github.com/rust-lang/rust/blob/da897dfb6daa268a965d2d73620316ba56020a19/compiler/rustc_codegen_llvm/src/callee.rs#L47\">https://github.com/rust-lang/rust/blob/da897dfb6daa268a965d2d73620316ba56020a19/compiler/rustc_codegen_llvm/src/callee.rs#L47</a> - and it appears as though the true branch of this if statement returns a <em>pointer</em> to a function, and the false branch returns the function <em>itself</em>, no pointer. This doesn't make sense, what am I missing? Or are types just inconsistent here?</p>",
        "id": 208802990,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1599041652
    },
    {
        "content": "<p><code>cx.get_declared_value(&amp;sym)</code> always returns a function pointer. It just sometimes doesn't match the expected function pointer type, so a <code>const_ptrcast</code> is sometimes necessary.</p>",
        "id": 208803193,
        "sender_full_name": "bjorn3",
        "timestamp": 1599041836
    },
    {
        "content": "<p>Yeah, it looks like the true branch does return a function pointer, but the false branch (that does not involve <code>get_declared_value</code>, where it returns <code>None</code>), appears to return the function itself.</p>",
        "id": 208803282,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1599041897
    },
    {
        "content": "<p>I thought you were talking about the <code>if cx.val_ty(llfn) != llptrty {</code>.</p>",
        "id": 208803304,
        "sender_full_name": "bjorn3",
        "timestamp": 1599041924
    },
    {
        "content": "<p>ah no, the if statement that I linked - in other words, it looks like <code>cx.declare_fn(&amp;sym, &amp;fn_abi)</code> returns the function itself.</p>",
        "id": 208803329,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1599041947
    },
    {
        "content": "<p>In LLVM the function is always referred to by a <code>Value</code> that can also act as function pointer I think.</p>",
        "id": 208803445,
        "sender_full_name": "bjorn3",
        "timestamp": 1599042028
    },
    {
        "content": "<p>my only thought right now is that <code>LLVMRustGetOrInsertFunction</code> (which is what <code>declare_fn</code> boils down to) does something unexpected, and returns a pointer to the function, instead of the function itself? - aaah right. &gt;:(</p>",
        "id": 208803454,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1599042038
    }
]