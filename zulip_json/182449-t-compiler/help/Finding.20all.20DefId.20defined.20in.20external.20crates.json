[
    {
        "content": "<p>Hi everyone ! I've been using the Rust compiler API with <code>#![feature(rustc_private)]</code> for a typechecker I'm writing on a Rust embedded DSL : <a href=\"https://github.com/hacspec/hacspec\">https://github.com/hacspec/hacspec</a>. I'm redoing all the typechecking myself and don't rely on Rustc's typechecking queries, except for one thing : I need to know the signatures of the functions defined outside of the current crate. So far, I had been relying on <code>rustc_metadata::CrateStore::all_def_path_hashes_and_def_ids</code> to retrieve all the items defined in external crates to populate my typechecking context. However, this particular function was dead code to the rest of the compiler and deleted last week : <a href=\"https://github.com/rust-lang/rust/commit/908bf5a310b7265a3e7c1d1fa021e3b10aa67293\">https://github.com/rust-lang/rust/commit/908bf5a310b7265a3e7c1d1fa021e3b10aa67293</a>. I understand completely the need for compiler APIs to change in order to get cleaner and cleaner, and me hooking up on unstable functions is part of the game :) </p>\n<p>Does anybody here have a pointer to another compiler query I could use to provide the same functionality of \"getting all def ids in external crates\" ? Maybe <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> since you're the author of the commit that removed the original function as dead code ? </p>\n<p>FYI here was my previous setup to retrieve external functions signatures <a href=\"https://github.com/hacspec/hacspec/blob/master/language/src/hir_to_rustspec.rs#L388\">https://github.com/hacspec/hacspec/blob/master/language/src/hir_to_rustspec.rs#L388</a></p>",
        "id": 219088122,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607352389
    },
    {
        "content": "<p>Can you do this lazily when functions are called rather than eagerly for all functions in a crate?</p>",
        "id": 219089498,
        "sender_full_name": "bjorn3",
        "timestamp": 1607353039
    },
    {
        "content": "<p>I could try and do that, yes. But I also need to import all the traits and constructors defined in external crates</p>",
        "id": 219089709,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607353127
    },
    {
        "content": "<p>Would <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyCtxt.html#method.body_owners\"><code>body_owners</code></a> be what you need?</p>",
        "id": 219089964,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607353247
    },
    {
        "content": "<p>Oh wait that's only for the local crate, nevermind</p>",
        "id": 219090007,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607353265
    },
    {
        "content": "<p>For implementations of a specific trait you can use <code>tcx.all_impls</code>.</p>",
        "id": 219090061,
        "sender_full_name": "bjorn3",
        "timestamp": 1607353303
    },
    {
        "content": "<p>What about <code>tcx.hir_crate(krate)</code>?</p>",
        "id": 219090519,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607353517
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_hir/hir/struct.Crate.html\"><code>rustc_hir::Crate</code></a> seems to contain a lot of interesting things :)</p>",
        "id": 219090597,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1607353554
    },
    {
        "content": "<p><code>hir_crate</code> only gives you the local crate. Actually there is no query in <code>TyCtxt</code> that lets you query external crates for a general list of what's inside. I know because I went trough the big list of queries a number of times :)</p>",
        "id": 219090721,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607353593
    },
    {
        "content": "<p><code>tcx.hir_crate</code> only works for <code>LOCAL_CRATE</code>. The HIR is not encoded in the metadata.</p>",
        "id": 219090734,
        "sender_full_name": "bjorn3",
        "timestamp": 1607353598
    },
    {
        "content": "<p>Maybe <code>cstore.item_children_untracked</code> could be useful? To get <code>cstore</code> you need to call <code>tcx.to_cstore_as_any</code> and then downcast to <code>CStore</code>.</p>",
        "id": 219091158,
        "sender_full_name": "bjorn3",
        "timestamp": 1607353788
    },
    {
        "content": "<p>Thanks for the <code>cstore</code> downcast tip, it took me a while to figure it out but I already had it a while back. <code>item_children_untracked</code> seems promising but which <code>DefId</code> does it expect as an argument ? I have <code>CrateNum</code> for external crates, not <code>DefId</code>.</p>",
        "id": 219091567,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607353966
    },
    {
        "content": "<p>I think you can make a <code>DefId</code> with the <code>CrateNum</code> you have as <code>krate</code> and <code>CRATE_DEF_INDEX</code> as <code>index</code>.</p>",
        "id": 219091895,
        "sender_full_name": "bjorn3",
        "timestamp": 1607354092
    },
    {
        "content": "<p><code>CrateStore::num_def_ids</code> gives me exactly what I want except it only returns a <code>size()</code> and not the list <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_metadata/rmeta/decoder.rs.html#1924\">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_metadata/rmeta/decoder.rs.html#1924</a> :)</p>",
        "id": 219091974,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607354120
    },
    {
        "content": "<p>Do you think a PR with a <code>CStore::def_ids</code> that mimics <code>CStore::num_def_ids</code> would have a chance to fly ?</p>",
        "id": 219092123,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607354189
    },
    {
        "content": "<p>Note that <code>num_def_ids</code> is private.</p>",
        "id": 219092178,
        "sender_full_name": "bjorn3",
        "timestamp": 1607354214
    },
    {
        "content": "<p>Apparently is it public for <code>CStore</code> : <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_metadata/creader/struct.CStore.html#method.num_def_ids\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_metadata/creader/struct.CStore.html#method.num_def_ids</a></p>",
        "id": 219092260,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607354254
    },
    {
        "content": "<p>That function seems to be unused in the rest of rustc. I guess it used to be used by rustdoc. <code>The name should end with </code>_untracked` as it isn't tracked by incremental compilation by the way.</p>",
        "id": 219092576,
        "sender_full_name": "bjorn3",
        "timestamp": 1607354398
    },
    {
        "content": "<p>Ok, I'll test what <code>cstore.item_children_untracked</code> returns then and keep you posted. Thanks for the useful tips!</p>",
        "id": 219092984,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607354593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> it's still used by rustdoc: <a href=\"https://github.com/rust-lang/rust/blob/2b76c483282f5eae595766fc79ec20818650017e/src/librustdoc/core.rs#L133\">https://github.com/rust-lang/rust/blob/2b76c483282f5eae595766fc79ec20818650017e/src/librustdoc/core.rs#L133</a></p>",
        "id": 219101436,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607358145
    },
    {
        "content": "<p>Looks like you should be able to reimplement the logic in <code>all_def_path_hashes_and_def_ids</code> by yourself.<br>\nLoop through <code>0 .. cstore.num_def_ids()</code>, then use <code>cstore.def_path_hash(def_id)</code> for each <code>def_id</code>.<br>\nIt may be a bit slower, but it should be functionally identical.</p>",
        "id": 219129862,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1607370869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> I implemented your solution in 10 min and everything works like a charm like before. So now my solution relies on the implicit invariant that the <code>DefIndex</code> in external crates are packed between 0 and <code>cstore.num_def_ids()</code>, but I guess that should rather be stable. If this invariant breaks in the future, I'll use things like <code>cstore.item_children_untracked</code>. Thanks again to all who contributed to this thread which proves again how wonderful this community is :)</p>",
        "id": 219203964,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1607432823
    },
    {
        "content": "<p>Update on this issue : <a href=\"https://github.com/camelid/rust/commit/b6120bfb354c1c1c9fdfe7ff03daa5550a8706fc\">this commit</a> removed the <code>num_def_ids</code> function that I was relying on the find all the <code>DefIds</code> defined in external crates. Since then, I've tried to use <code>cstore.item_children_untracked</code> to retrieve these <code>DefId</code> by traversing the children from <code>CRATE_DEF_INDEX</code> but this does not work, as not all symbols are accessible from a chain of <code>item_children_untracked</code> calls.</p>",
        "id": 240932462,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1622549998
    },
    {
        "content": "<p>So it seems we're in the situation where there is no compiler-API-accessible way to iterate on all <code>DefId</code>s for a given <code>CrateNum</code>, which seems to be a useful feature for people plugging tools on Rustc. For instance, I am dependent on it for my <a href=\"https://github.com/hacspec/hacspec\">https://github.com/hacspec/hacspec</a> tool which populates its typing context by filtering on all the symbols defined in non-local imported crates.</p>",
        "id": 240932887,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1622550233
    },
    {
        "content": "<p>I created the <a href=\"https://github.com/rust-lang/rust/pull/85889\">https://github.com/rust-lang/rust/pull/85889</a> PR to restore <code>num_def_ids</code></p>",
        "id": 240934889,
        "sender_full_name": "Denis Merigoux",
        "timestamp": 1622551262
    }
]