[
    {
        "content": "<p>I'm trying to create an inference variable (ty::TyVid) from a projection predicate. I'm putting the code inside the predicate registration in rustc_trait_selection::traits::fulfill (this is for never type fallback tracking, FWIW). I tried adding a call to normalize_projection_type, but this seems to be causing unsizing to stop working -- I'm getting an error when compiling libcore. My guess is that the \"extra\" inference variable is somehow causing problems? But it seems a little surprising...</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0271]: type mismatch resolving `&lt;[closure@library/core/src/fmt/builders.rs:26:22: 29:10] as FnOnce&lt;(&amp;mut dyn Write,)&gt;&gt;::Output == &amp;mut dyn Write`\n  --&gt; library/core/src/fmt/builders.rs:26:13\n   |\n26 |         fmt.wrap_buf(move |buf| {\n   |             ^^^^^^^^ expected struct `PadAdapter`, found trait object `dyn Write`\n   |\n   = note: expected mutable reference `&amp;mut PadAdapter&lt;&#39;buf, &#39;state&gt;`\n              found mutable reference `&amp;mut dyn Write`\n</code></pre></div>",
        "id": 244882570,
        "sender_full_name": "simulacrum",
        "timestamp": 1625441455
    }
]