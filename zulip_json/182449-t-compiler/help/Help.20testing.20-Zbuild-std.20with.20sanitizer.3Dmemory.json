[
    {
        "content": "<p>Hello!<br>\nI went down a rabbit hole which is traced here:<br>\n<a href=\"https://github.com/rust-fuzz/cargo-fuzz/issues/243\">https://github.com/rust-fuzz/cargo-fuzz/issues/243</a><br>\nAs far as I can tell, stdarch has a broken function prototype (in avx512f, which is not relevant to my computer but needs to build anyway).  Compiling the core library with msan makes any such broken prototype show up.<br>\nI'd like to boil it down to a test.<br>\nI've written a test that runs cargo -Zbuild-std=core, with some specific RUSTFLAGS. I put it in run-make-fulldeps, which seems to work (I'm waiting for the second run to finish and my machine is slow).<br>\nIs this kind of test, that runs cargo from stage1, acceptable? I found very few such tests, but I don't think there's a simpler way to check for the entire class of problems.</p>",
        "id": 217764932,
        "sender_full_name": "G2P",
        "timestamp": 1606230061
    },
    {
        "content": "<p>you just need to check whether it compiles, not whether it runs, right? could you add a test in stdarch itself that sets RUSTFLGAS? then you don't need to mess with bootstrapping</p>",
        "id": 217765188,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1606230167
    },
    {
        "content": "<p>I just need it to compile, yes<br>\nI'm not sure I can test in stdarch directly, though, I've only been able to trigger the error through rustc and llvm</p>",
        "id": 217765504,
        "sender_full_name": "G2P",
        "timestamp": 1606230316
    },
    {
        "content": "<p>It appears in one of two forms:</p>\n<div class=\"codehilite\"><pre><span></span><code>LLVM ERROR: Cannot select: 0x7f96e9336bf0: v64i8 = X86ISD::PALIGNR 0x7f96e93296b0, 0x7f96e9381fe8, TargetConstant:i8&lt;8&gt;\n  0x7f96e93296b0: v64i8,ch = load&lt;(load 64 from %ir.2245)&gt; 0x7f96f547cba8, 0x7f96e9337270, undef:i64\n    0x7f96e9337270: i64 = xor 0x7f96e93298b8, 0x7f96e9279c58\n      0x7f96e93298b8: i64,ch = CopyFromReg 0x7f96f547cba8, Register:i64 %1119\n        0x7f96e93424a0: i64 = Register %1119\n      0x7f96e9279c58: i64 = AssertZext 0x7f96e9272c00, ValueType:ch:i47\n        0x7f96e9272c00: i64,ch = CopyFromReg 0x7f96f547cba8, Register:i64 %6\n          0x7f96e927fad0: i64 = Register %6\n    0x7f96e931fb58: i64 = undef\n  0x7f96e9381fe8: v64i8 = bitcast 0x7f96e9344420\n    0x7f96e9344420: v16i32,ch = CopyFromReg 0x7f96f547cba8, Register:v16i32 %782\n   Compiling rustc-std-workspace-core v1.99.0 (/home/g2p/src/github.com/rust-lang/rust/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/src/rust/library/rustc-std-workspace-core)\n      0x7f96e927a410: v16i32 = Register %782\n  0x7f96e93820b8: i8 = TargetConstant&lt;8&gt;\nIn function: _ZN4core9core_arch3x867avx512f17_mm512_shuffle_ps17h2adad9c5dc64a280E\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>PHI node operands are not the same type as the result!\n  %_msphi_s = phi i32 [ %42, %38 ], [ %35, %31 ], [ %28, %24 ], [ %21, %17 ], [ %14, %10 ]\nin function _ZN4core9core_arch3x867avx512f19_mm_cvt_roundss_u3217h42028e7a281c0c10E\nLLVM ERROR: Broken function found, compilation aborted!\n</code></pre></div>",
        "id": 217765725,
        "sender_full_name": "G2P",
        "timestamp": 1606230410
    },
    {
        "content": "<p>The test seems to work and highlight the regression well, I'll send a PR and link it here</p>",
        "id": 217766570,
        "sender_full_name": "G2P",
        "timestamp": 1606230807
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/79382\">https://github.com/rust-lang/rust/pull/79382</a></p>",
        "id": 217768572,
        "sender_full_name": "G2P",
        "timestamp": 1606231667
    },
    {
        "content": "<p>Fixing stdarch is an open question though, I'll put an issue there as well</p>",
        "id": 217768668,
        "sender_full_name": "G2P",
        "timestamp": 1606231694
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/stdarch/issues/957\">https://github.com/rust-lang/stdarch/issues/957</a></p>",
        "id": 217771211,
        "sender_full_name": "G2P",
        "timestamp": 1606232744
    }
]