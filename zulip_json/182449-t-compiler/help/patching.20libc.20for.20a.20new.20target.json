[
    {
        "content": "<p>I'm trying to build libstd for hexagon-unknown-linux-musl.  There's some pieces of what I need for this upstream so far.</p>\n<p>I am not sure what's the best way to start, so for now I'm just building libstd via bootstrap.  First I ran into build issues for libunwind -- the build flags specified in <code>build.rs</code> cause errors w/clang (there's no modern gnu toolchain for my target os, only llvm+clang).   I can workaround that for now by omitting the \"-std=c99\" and \"-std=c++11\" flags.  Now I see errors when libstd tries to build the dependent <code>panic_unwind</code> crate.   panic_unwind specifies a version of the libc crate old enough that it didn't have hexagon-unknown-linux-musl support.  I tried patching the libc crate by: (1) specifying a newer version of libc in src/panic_unwind/Cargo.toml or (2) adding a <code>[patch.crates-io]</code> to specify a newer libc to any/all of src/tools/rustc-std-workspace-*/Cargo.toml or src/libstd/Cargo.toml.  Those all seem ineffective - as if they are not in scope for this crate's build.  Has anyone got a good suggestion as how to make progress?</p>\n<p>I've also tried <code>cargo xbuild</code> of libstd but ran into issues using the unpatched source for libunwind.  I can probably workaround this issue by hacking up the rust-src component.</p>",
        "id": 204328949,
        "sender_full_name": "Brian Cain",
        "timestamp": 1595126549
    },
    {
        "content": "<p>I happen to be doing the exact same thing for <code>aarch64-apple-darwin</code>. You need to <a href=\"https://github.com/shepmaster/rust/commit/2bd261bfb21768e5192a5115ec33585782de2fae#diff-80398c5faae3c069e4e6aa2ed11b28c0R71\">add the <code>patch</code> section in the workspace's Cargo.toml</a> then run <code>cargo update -p libc</code>.</p>",
        "id": 204347232,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595161687
    },
    {
        "content": "<p>Maybe it would be good to document this somewhere? Rustc-dev-guide seems like a good place</p>",
        "id": 204347599,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595162293
    },
    {
        "content": "<p>Maybe a \"so you want to target a new platform\" section.</p>",
        "id": 204347816,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595162685
    },
    {
        "content": "<p>Yeah, thanks!  That seems to help get me further.</p>",
        "id": 204354442,
        "sender_full_name": "Brian Cain",
        "timestamp": 1595170707
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/patching.20libc.20for.20a.20new.20target/near/204347599\">said</a>:</p>\n<blockquote>\n<p>Maybe it would be good to document this somewhere? Rustc-dev-guide seems like a good place</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/805\">https://github.com/rust-lang/rustc-dev-guide/pull/805</a></p>",
        "id": 204361887,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595180360
    },
    {
        "content": "<p>I appreciate this doc update -- this is really useful.</p>\n<p>Along these lines -- are there any companies/teams who vendor their own rust toolchain?  I'd be pretty curious about that process too.</p>",
        "id": 204362223,
        "sender_full_name": "Brian Cain",
        "timestamp": 1595180806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"322951\">Brian Cain</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/patching.20libc.20for.20a.20new.20target/near/204362223\">said</a>:</p>\n<blockquote>\n<p>are there any companies/teams who vendor their own rust toolchain</p>\n</blockquote>\n<p>Like <a href=\"#narrow/stream/122651-general/topic/building.20rustc.20and.20missing.20CXXFLAGS/near/203996115\">this person</a>?</p>",
        "id": 204362318,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595180938
    },
    {
        "content": "<p>hmm.  maybe, sounds like it.  So that's on behalf of google?</p>",
        "id": 204363075,
        "sender_full_name": "Brian Cain",
        "timestamp": 1595181694
    },
    {
        "content": "<p>Interesting -- I never considered updating the <code>cc</code> crate.  But I see now that it's a dependency of <code>src/libunwind/</code>.  Maybe that would be a way to address the compilation failures that I worked around by editing  the <code>build.rs</code>?</p>",
        "id": 204363338,
        "sender_full_name": "Brian Cain",
        "timestamp": 1595181930
    },
    {
        "content": "<p>In my case, I needed to update it to add <code>-arch whatever</code> to the C compiler options. IIRC, backtrace and compiler-builtins were the two primary crates that had C code in them.</p>",
        "id": 204364140,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595182694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/patching.20libc.20for.20a.20new.20target/near/204361887\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/805\">https://github.com/rust-lang/rustc-dev-guide/pull/805</a></p>\n</blockquote>\n<p>left a review, thanks for the PR :)</p>",
        "id": 204365065,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595184199
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"https://i.imgflip.com/48rnxw.jpg\"><img src=\"https://i.imgflip.com/48rnxw.jpg\"></a></div>",
        "id": 204365341,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595184700
    }
]