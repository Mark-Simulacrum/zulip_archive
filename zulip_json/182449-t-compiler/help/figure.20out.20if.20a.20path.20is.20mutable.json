[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\">  </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Point</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span>: <span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span>: <span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">mp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"p\">(</span><span class=\"n\">mp</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Where/How does the compiler figure out that the <code>Place</code> associated with <code>mp.x</code> (<code>Place(mp, projections: [Deref, Field])</code>  is mutable?</p>",
        "id": 218187429,
        "sender_full_name": "Aman Arora",
        "timestamp": 1606608470
    },
    {
        "content": "<p>I guess you need to access the associated <code>LocalDecl</code>?</p>",
        "id": 218200950,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606635529
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">body</span><span class=\"p\">.</span><span class=\"n\">local_decls</span><span class=\"p\">[</span><span class=\"n\">place</span><span class=\"p\">.</span><span class=\"n\">local</span><span class=\"p\">].</span><span class=\"n\">mutability</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 218201011,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606635623
    },
    {
        "content": "<p>I think that wouldn't work with something like where <code>t1</code> itself isn't mutable or a mut-ref but rather contains a mut ref</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">t1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"p\">(</span><span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 218202193,
        "sender_full_name": "Aman Arora",
        "timestamp": 1606637960
    },
    {
        "content": "<p>You could maybe get the <code>LocalDecl</code> for <code>t.0</code> through the <code>Place::projection</code>?</p>",
        "id": 218203325,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606640251
    },
    {
        "content": "<p>Wait I can? <span aria-label=\"open mouth\" class=\"emoji emoji-1f62e\" role=\"img\" title=\"open mouth\">:open_mouth:</span></p>",
        "id": 218203368,
        "sender_full_name": "Aman Arora",
        "timestamp": 1606640292
    },
    {
        "content": "<p>You have a <code>ProjectionElem::Field</code> which itself contains a <code>Local</code></p>",
        "id": 218203381,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606640367
    },
    {
        "content": "<blockquote>\n<p><code>Place(mp, projections: [Deref, Field])</code></p>\n</blockquote>\n<p>This is what you have, right?</p>",
        "id": 218203385,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606640389
    },
    {
        "content": "<p>Yeah I have that</p>",
        "id": 218203432,
        "sender_full_name": "Aman Arora",
        "timestamp": 1606640448
    },
    {
        "content": "<p>Wait nevermind <code>Field</code> doesn't contain a <code>Local</code></p>",
        "id": 218203441,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606640484
    },
    {
        "content": "<p>It contains a <code>Ty</code></p>",
        "id": 218203442,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606640496
    },
    {
        "content": "<p>Yeah index and type</p>",
        "id": 218203482,
        "sender_full_name": "Aman Arora",
        "timestamp": 1606640536
    },
    {
        "content": "<p>The mutability checks seem to be done in <a href=\"https://github.com/rust-lang/rust/blob/c4fe25d8613a32dcd71e5258c22ff5685f12d4c3/compiler/rustc_mir/src/borrow_check/mod.rs#L973-L1027\">https://github.com/rust-lang/rust/blob/c4fe25d8613a32dcd71e5258c22ff5685f12d4c3/compiler/rustc_mir/src/borrow_check/mod.rs#L973-L1027</a></p>",
        "id": 218203616,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606640881
    },
    {
        "content": "<p>Which has this whole <code>is_mutable</code> mess <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <a href=\"https://github.com/rust-lang/rust/blob/c4fe25d8613a32dcd71e5258c22ff5685f12d4c3/compiler/rustc_mir/src/borrow_check/mod.rs#L2156-L2306\">https://github.com/rust-lang/rust/blob/c4fe25d8613a32dcd71e5258c22ff5685f12d4c3/compiler/rustc_mir/src/borrow_check/mod.rs#L2156-L2306</a></p>",
        "id": 218203664,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1606640975
    },
    {
        "content": "<p>I'll read through what's happening here. thank you <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 218204134,
        "sender_full_name": "Aman Arora",
        "timestamp": 1606641900
    }
]