[
    {
        "content": "<p><code>incremental/spike-neg1.rs</code> and <code>incremental/spike-neg2.rs</code> both fail with cg_clif. They are missing <code>// compile-flags: -Z query-dep-graph</code> which results in <code>error: found CGU-reuse attribute but </code>-Zquery-dep-graph<code> was not specified</code> with cg_clif. They are marked as <code>should-fail</code> so this should be fine, but compiletest doesn't accept them. A comment however indicates that one of the <code>#![rustc_partition_reused]</code> attributes should instead fail. If I add <code>-Zquery-dep-graph</code> this doesn't happen. What exactly are those tests meant to test and why do they fail with cg_clif?</p>",
        "id": 275913766,
        "sender_full_name": "bjorn3",
        "timestamp": 1647701184
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> as you introduced this test.</p>",
        "id": 275926207,
        "sender_full_name": "bjorn3",
        "timestamp": 1647719199
    },
    {
        "content": "<p>uh :)</p>",
        "id": 276104110,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647891987
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> the absence of -Zquery-dep-graph is probably an oversight. The point of these tests is to ensure that the <code>rustc_partition_reused</code>/<code>rustc_partition_codegened</code> attributes work as designed. How does cg_clif plug itself into the incremental CGU recompilation?</p>",
        "id": 276725253,
        "sender_full_name": "cjgillot",
        "timestamp": 1648299971
    },
    {
        "content": "<blockquote>\n<p>How does cg_clif plug itself into the incremental CGU recompilation?</p>\n</blockquote>\n<p>AFAIK the exact same way as cg_ssa does. It may have diverged a bit though. This specific error originates from inside rustc_interface though which does the check.</p>",
        "id": 276725431,
        "sender_full_name": "bjorn3",
        "timestamp": 1648300232
    }
]