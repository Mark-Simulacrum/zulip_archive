[
    {
        "content": "<p>I am working on fixing <a href=\"https://github.com/rust-lang/rust/issues/74262\">https://github.com/rust-lang/rust/issues/74262</a> and I have an implementation working, however I would like some help figuring out where to put my test.  The test used is nearly identical to the snippet posted in that issue.  The test simply needs to compile (though it could run as well if that's easier) and I don't know where to place it for best organization.  The <code>assembly</code> tests seem to be more related to making sure that Rust code emits specific assembly.  <code>codegen</code> might work, but I'm not sure that I need to inspect the assembly, or make sure about optimizations, I simply need to confirm that the code compiles.<br>\nIf it matters for the purposes of test changes, the changes are all in <code>rustc_codegen_llvm/asm.rs</code></p>",
        "id": 224270247,
        "sender_full_name": "asquared31415",
        "timestamp": 1611794473
    },
    {
        "content": "<p>I was just looking through this recently: <a href=\"https://rustc-dev-guide.rust-lang.org/tests/intro.html\">https://rustc-dev-guide.rust-lang.org/tests/intro.html</a></p>",
        "id": 224270576,
        "sender_full_name": "oliver",
        "timestamp": 1611794730
    },
    {
        "content": "<p>seems like <code>src/test/codegen/</code>might be the right place</p>",
        "id": 224270702,
        "sender_full_name": "oliver",
        "timestamp": 1611794828
    },
    {
        "content": "<p>or maybe <code>/assembly/auxilary</code></p>",
        "id": 224270836,
        "sender_full_name": "oliver",
        "timestamp": 1611794929
    },
    {
        "content": "<p>depends what the test looks like I guess</p>",
        "id": 224270989,
        "sender_full_name": "oliver",
        "timestamp": 1611795030
    },
    {
        "content": "<p>I think src/test/ui/asm with a build-pass annotation is likely the right place. You probably don't need to check <em>what</em> is emitted, so codegen/assembly tests shouldn't be necessary</p>",
        "id": 224271407,
        "sender_full_name": "simulacrum",
        "timestamp": 1611795352
    },
    {
        "content": "<p>The test is this, nearly identical to the example code provided in that issue:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#![feature(asm)]</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[inline(always)]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">asm</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"fm\">asm!</span><span class=\"p\">(</span><span class=\"s\">\"duplabel: nop\"</span><span class=\"p\">,);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">asm</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">asm</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I think auxilary is more for additional files, common utilities, etc, so I do not think this test is a good idea to go there.</p>",
        "id": 224271426,
        "sender_full_name": "asquared31415",
        "timestamp": 1611795362
    },
    {
        "content": "<p>from the docs: 'ui â€“ tests that check the exact stdout/stderr from compilation and/or running the test'</p>",
        "id": 224271618,
        "sender_full_name": "oliver",
        "timestamp": 1611795504
    },
    {
        "content": "<p>I guess this kinda checks that the compilation succeeds rather than prints some error and crashes, which is what it was previously doing.  I think I like <code>ui/asm</code> since it's next to other tests that use <code>asm!</code>, but I really don't have strong feelings for any location in particular.</p>",
        "id": 224271788,
        "sender_full_name": "asquared31415",
        "timestamp": 1611795638
    },
    {
        "content": "<p>yeah that seems like the best answer to me as well based on what you've described</p>",
        "id": 224271846,
        "sender_full_name": "oliver",
        "timestamp": 1611795693
    },
    {
        "content": "<p>UI tests are the right place, I can say with high confidence.</p>",
        "id": 224271861,
        "sender_full_name": "simulacrum",
        "timestamp": 1611795715
    },
    {
        "content": "<p>what does UI stand for <code>user interface</code>?</p>",
        "id": 224271935,
        "sender_full_name": "oliver",
        "timestamp": 1611795761
    },
    {
        "content": "<p><code>ui/asm</code> sounds good, thanks for the help!</p>",
        "id": 224272098,
        "sender_full_name": "asquared31415",
        "timestamp": 1611795884
    },
    {
        "content": "<p>We used to have categories like compile-pass and run-pass etc. They've been merged into and replaced by the ui test suite, so yeah that's the right place</p>",
        "id": 224318554,
        "sender_full_name": "nagisa",
        "timestamp": 1611836757
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281739\">oliver</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Compiler.20Test.20Placement/near/224271935\">said</a>:</p>\n<blockquote>\n<p>what does UI stand for <code>user interface</code>?</p>\n</blockquote>\n<p>yes, \"user interface\", because historically the tests under <code>test/ui</code> were especially focused on the diagnostic output. The tests in (most of) the other directories didn't have support for checking the diagnostic output.</p>",
        "id": 225998715,
        "sender_full_name": "pnkfelix",
        "timestamp": 1613053979
    }
]