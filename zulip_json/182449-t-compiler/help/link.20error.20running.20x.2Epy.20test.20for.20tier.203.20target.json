[
    {
        "content": "<p>Hi all, I'm trying to get <code>std</code> tests building for a tier 3 target (armv6k-nintendo-3ds), which involves adding some additional crate dependencies to <code>std</code>/<code>test</code>. I was able to figure out how to add <code>rustc-dep-of-std</code> to those crates to get it to compile, but now I am having trouble on the link step (paths snipped for brevity):</p>\n<div class=\"codehilite\"><pre><span></span><code>   = note: [snip]/arm-none-eabi/bin/ld: error: [snip]/build/x86_64-apple-darwin/stage2-std/armv6k-nintendo-3ds/release/deps/env-9bce6c50da19af1c.elf uses VFP register arguments, [snip]/build/x86_64-apple-darwin/stage2/lib/rustlib/armv6k-nintendo-3ds/lib/libcompiler_builtins-26cfa4366ea7e49c.rlib(aeabi_div0.o) does not\n          [snip]/arm-none-eabi/bin/ld: failed to merge target specific data of file [snip]/build/x86_64-apple-darwin/stage2/lib/rustlib/armv6k-nintendo-3ds/lib/libcompiler_builtins-26cfa4366ea7e49c.rlib(aeabi_div0.o)\n          [snip]/arm-none-eabi/bin/ld: [snip]/build/x86_64-apple-darwin/stage2/lib/rustlib/armv6k-nintendo-3ds/lib/libtest-f10af7a1a033fdd2.rlib(test-f10af7a1a033fdd2.2sf7fgsggypk7nze.rcgu.o): in function `test::stats::Summary::new&#39;:\n          2sf7fgsggypk7nze:(.text._ZN4test5stats7Summary3new17hff54412dc9ac41b3E+0x54): undefined reference to `fmin&#39;\n          [snip]/arm-none-eabi/bin/ld: 2sf7fgsggypk7nze:(.text._ZN4test5stats7Summary3new17hff54412dc9ac41b3E+0x74): undefined reference to `fmax&#39;\n          [snip]/arm-none-eabi/bin/ld: 2sf7fgsggypk7nze:(.text._ZN4test5stats7Summary3new17hff54412dc9ac41b3E+0x110): undefined reference to `floor&#39;\n\n... lots more undefined references...\n</code></pre></div>\n<p>The only tips so far I have found online are <a href=\"https://github.com/rust-embedded/book/issues/255\">this rust-embedded issue</a>, which seems to be intended for normal (possibly <code>no_std</code>) crates, and I don't need to do any of that stuff when building a normal crate.</p>\n<p>For reference I am trying to use <code>./x.py test -v library/std  --stage 1 --no-doc --run never --target armv6k-nintendo-3ds</code> (also tried stage 2 just for fun), and I've tried various incantations using <code>--rustc-args \"-C link-arg=...\"</code> but have seen no difference in behavior with any of those. </p>\n<p>Is there some way I can tell rustbuild to force build <code>compiler_builtins</code> with <code>-mfloat-abi=hard</code> (and probably also other <code>pre_link_args</code> for the target)? I would have thought it would normally just use the defaults for the target like all the other crates, but inspecting files like <code>build/x86_64-apple-darwin/stage2/lib/rustlib/armv6k-nintendo-3ds/lib/libcompiler_builtins-26cfa4366ea7e49c.rlib</code> with <code>arm-none-eabi-readelf -A</code> does not show <code>Tag_ABI_VFP_args: VFP registers</code> like I would expect (and does show <code>VFP Registers</code> for <code>libstd-$HASH.rlib</code>, <code>libtest</code>, etc.)</p>\n<p>Thanks in advance if you are able to help me!</p>",
        "id": 275325917,
        "sender_full_name": "Ian Chamberlain",
        "timestamp": 1647315277
    }
]