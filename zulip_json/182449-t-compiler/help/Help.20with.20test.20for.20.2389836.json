[
    {
        "content": "<p>Maybe this has something to do with the stages involved here? <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> If you have a chance, could you look at this attempt to build and run a dylib in a test? (Your post <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1239#discussion_r735162039\">here</a> made me think of this..)</p>",
        "id": 260013414,
        "sender_full_name": "pierwill",
        "timestamp": 1635867533
    },
    {
        "content": "<p>RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER is going to affect upstream crates as well, I'd expect, which means they likely can't be found -- probably the code around that isn't expecting stable crate IDs to be shifting from what's on disk? I think it will be difficult to write this test such that it works as you want it to, and I don't personally have the bandwidth to help with that in a direct way.</p>",
        "id": 260014194,
        "sender_full_name": "simulacrum",
        "timestamp": 1635867828
    },
    {
        "content": "<p>No problem! Thanks for looking. <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 260015860,
        "sender_full_name": "pierwill",
        "timestamp": 1635868400
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Help.20with.20test.20for.20.2389836/near/260014194\">said</a>:</p>\n<blockquote>\n<p>RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER is going to affect upstream crates as well, I'd expect, which means they likely can't be found -- probably the code around that isn't expecting stable crate IDs to be shifting from what's on disk? I think it will be difficult to write this test such that it works as you want it to, and I don't personally have the bandwidth to help with that in a direct way.</p>\n</blockquote>\n<p>@bjorn3 Have any thoughts on how to proceed here?</p>",
        "id": 260161850,
        "sender_full_name": "pierwill",
        "timestamp": 1635957761
    },
    {
        "content": "<p>I don't think <code>RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER</code> affects upstream crates. As of your PR it will only affect the incremental compilation cache (not used in this case) and the <code>StableCrateId</code> calculation of the current crate. The <code>StableCrateId</code> of upstream crates is stored in the metadata and we don't store all information necessary to recalculate it anyway. (<code>-Cmetadata</code> arguments are not stored in the metadata)</p>",
        "id": 260162130,
        "sender_full_name": "bjorn3",
        "timestamp": 1635957882
    },
    {
        "content": "<p>The error seems to happen for the <code>$(RUSTC) b.rs --extern a --crate-type=bin # b.rs is bin</code> call before <code>RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER</code> is used.</p>",
        "id": 260162273,
        "sender_full_name": "bjorn3",
        "timestamp": 1635957959
    },
    {
        "content": "<p>Can you try</p>\n<div class=\"codehilite\" data-code-language=\"Makefile\"><pre><span></span><code><span class=\"cp\">-include ../../run-make-fulldeps/tools.mk</span>\n\n<span class=\"nf\">all</span><span class=\"o\">:</span>\n    <span class=\"k\">$(</span>RUSTC<span class=\"k\">)</span> a.rs --crate-type<span class=\"o\">=</span>dylib -o <span class=\"k\">$(</span>TMPDIR<span class=\"k\">)</span>/liba.dylib <span class=\"c1\"># a.rs is a dylib</span>\n    <span class=\"k\">$(</span>RUSTC<span class=\"k\">)</span> b.rs --extern <span class=\"nv\">a</span><span class=\"o\">=</span><span class=\"k\">$(</span>TMPDIR<span class=\"k\">)</span>/liba.dylib --crate-type<span class=\"o\">=</span>bin -Crpath <span class=\"c1\"># b.rs is bin</span>\n    <span class=\"k\">$(</span>call RUN, b<span class=\"k\">)</span>\n<span class=\"c\">    # Now re-compile a with another rustc version</span>\n    <span class=\"nv\">RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER</span><span class=\"o\">=</span>bar <span class=\"k\">$(</span>RUSTC<span class=\"k\">)</span> a.rs --crate-type<span class=\"o\">=</span>dylib -o <span class=\"k\">$(</span>TMPDIR<span class=\"k\">)</span>/liba.dylib\n<span class=\"c\">    # Verify that this fails to find symbols</span>\n    <span class=\"k\">$(</span>call RUN, b<span class=\"k\">)</span>\n</code></pre></div>",
        "id": 260162748,
        "sender_full_name": "bjorn3",
        "timestamp": 1635958149
    },
    {
        "content": "<p>Trying now <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 260174457,
        "sender_full_name": "pierwill",
        "timestamp": 1635963049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span>: With the Makefile as above, I'm getting:</p>\n<div class=\"codehilite\"><pre><span></span><code>---- [run-make] run-make/crate-hash-rustc-version stdout ----\n\nerror: make failed\nstatus: exit status: 2\ncommand: &quot;make&quot;\nstdout:\n------------------------------------------\nDYLD_LIBRARY_PATH=&quot;/Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/wpierce/repos/rust/build/x86_64-apple-darwin/stage1/lib:&quot; &#39;/Users/wpierce/repos/rust/build/x86_64-apple-darwin/stage1/bin/rustc&#39; --out-dir /Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version -L /Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version  a.rs --crate-type=dylib -o /Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib # a.rs is a dylib\nDYLD_LIBRARY_PATH=&quot;/Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/wpierce/repos/rust/build/x86_64-apple-darwin/stage1/lib:&quot; &#39;/Users/wpierce/repos/rust/build/x86_64-apple-darwin/stage1/bin/rustc&#39; --out-dir /Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version -L /Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version  b.rs --extern a=/Users/wpierce/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib --crate-type=bin -Crpath # b.rs is bin\n\n------------------------------------------\nstderr:\n------------------------------------------\nwarning: ignoring --out-dir flag due to -o flag\n\nwarning: 1 warning emitted\n\nerror: cannot satisfy dependencies so `std` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `core` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `compiler_builtins` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `rustc_std_workspace_core` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `alloc` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `libc` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `unwind` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `cfg_if` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `hashbrown` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `rustc_std_workspace_alloc` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `rustc_demangle` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `std_detect` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `addr2line` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `gimli` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `object` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `memchr` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: cannot satisfy dependencies so `panic_unwind` only shows up once\n  |\n  = help: having upstream crates all available in one format will likely make this go away\n\nerror: aborting due to 17 previous errors\n\nmake: *** [all] Error 1\n\n------------------------------------------\n\n\n\nfailures:\n    [run-make] run-make/crate-hash-rustc-version\n\ntest result: FAILED. 0 passed; 1 failed; 43 ignored; 0 measured; 0 filtered out; finished in 1.81s\n</code></pre></div>",
        "id": 260176444,
        "sender_full_name": "pierwill",
        "timestamp": 1635963906
    },
    {
        "content": "<p>Is it possible we need to specify -Z v0 mangling somewhere?</p>",
        "id": 260177170,
        "sender_full_name": "pierwill",
        "timestamp": 1635964208
    },
    {
        "content": "<p>This has nothing to do with the symbol mangling. Somehow the metadata loader thinks it needs multiple versions of the sysroot crate.</p>",
        "id": 260177272,
        "sender_full_name": "bjorn3",
        "timestamp": 1635964264
    },
    {
        "content": "<p>This got me really confused.</p>",
        "id": 260177572,
        "sender_full_name": "bjorn3",
        "timestamp": 1635964395
    },
    {
        "content": "<p>I can locally reproduce it.</p>",
        "id": 260177758,
        "sender_full_name": "bjorn3",
        "timestamp": 1635964498
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code> INFO rustc_metadata::dependency_format adding dylib: std\n INFO rustc_metadata::dependency_format adding RequireStatic: core\n INFO rustc_metadata::dependency_format adding RequireStatic: compiler_builtins\n INFO rustc_metadata::dependency_format adding RequireStatic: rustc_std_workspace_core\n INFO rustc_metadata::dependency_format adding RequireStatic: alloc\n INFO rustc_metadata::dependency_format adding RequireStatic: libc\n INFO rustc_metadata::dependency_format adding RequireStatic: unwind\n INFO rustc_metadata::dependency_format adding RequireStatic: cfg_if\n INFO rustc_metadata::dependency_format adding RequireStatic: hashbrown\n INFO rustc_metadata::dependency_format adding RequireStatic: rustc_std_workspace_alloc\n INFO rustc_metadata::dependency_format adding RequireStatic: rustc_demangle\n INFO rustc_metadata::dependency_format adding RequireStatic: std_detect\n INFO rustc_metadata::dependency_format adding RequireStatic: addr2line\n INFO rustc_metadata::dependency_format adding RequireStatic: gimli\n INFO rustc_metadata::dependency_format adding RequireStatic: object\n INFO rustc_metadata::dependency_format adding RequireStatic: memchr\n INFO rustc_metadata::dependency_format adding RequireStatic: miniz_oxide\n INFO rustc_metadata::dependency_format adding RequireStatic: adler\n INFO rustc_metadata::dependency_format adding RequireStatic: panic_unwind\n INFO rustc_metadata::dependency_format adding dylib: a\n INFO rustc_metadata::dependency_format adding RequireStatic: std\n</code></pre></div>\n<p>Why does it add all sysroot crates ad <code>RequireStatic</code>?</p>",
        "id": 260177885,
        "sender_full_name": "bjorn3",
        "timestamp": 1635964555
    },
    {
        "content": "<p>Passing <code>-Cprefer-dynamic</code> to all rustc invocations seems to fix it though.</p>",
        "id": 260178041,
        "sender_full_name": "bjorn3",
        "timestamp": 1635964607
    },
    {
        "content": "<p>Trying with -Cprefer-dynamic now...</p>",
        "id": 260178278,
        "sender_full_name": "pierwill",
        "timestamp": 1635964693
    },
    {
        "content": "<p>I get this on my machine:</p>\n<div class=\"codehilite\"><pre><span></span><code>rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/: Permission denied\n</code></pre></div>",
        "id": 260179350,
        "sender_full_name": "pierwill",
        "timestamp": 1635965178
    },
    {
        "content": "<p>maybe a chmod will fix?</p>",
        "id": 260179375,
        "sender_full_name": "pierwill",
        "timestamp": 1635965191
    },
    {
        "content": "<p>What is the content of that directory?</p>",
        "id": 260179680,
        "sender_full_name": "bjorn3",
        "timestamp": 1635965314
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>b*\nliba.dylib*\n</code></pre></div>",
        "id": 260179740,
        "sender_full_name": "pierwill",
        "timestamp": 1635965352
    },
    {
        "content": "<p>What is the full <code>Makefile</code> you have right now?</p>",
        "id": 260179825,
        "sender_full_name": "bjorn3",
        "timestamp": 1635965402
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>-include ../../run-make-fulldeps/tools.mk\n\nall:\n    # a.rs is a dylib\n    $(RUSTC) a.rs --crate-type=dylib -o $(TMPDIR)/liba.dylib -Cprefer-dynamic\n    # b.rs is bin\n    $(RUSTC) b.rs --extern a=$(TMPDIR)/liba.dylib --crate-type=bin -Crpath -Cprefer-dynamic\n    $(call RUN, b)\n    # Now re-compile a with another rustc version\n    RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER=bar $(RUSTC) a.rs --crate-type=dylib -o $(TMPDIR)/liba.dylib -Cprefer-dynamic\n    # Verify that this fails to find symbols\n    $(call RUN, b)\n</code></pre></div>",
        "id": 260179883,
        "sender_full_name": "pierwill",
        "timestamp": 1635965412
    },
    {
        "content": "<p>What does it say before the error line?</p>",
        "id": 260180048,
        "sender_full_name": "bjorn3",
        "timestamp": 1635965485
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>---- [run-make] run-make/crate-hash-rustc-version stdout ----\n\nerror: make failed\nstatus: exit status: 2\ncommand: &quot;make&quot;\nstdout:\n------------------------------------------\n# a.rs is a dylib\nDYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib:&quot; &#39;/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/bin/rustc&#39; --out-dir /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version -L /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version  a.rs --crate-type=dylib -o /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib -Cprefer-dynamic\n# b.rs is bin\nDYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib:&quot; &#39;/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/bin/rustc&#39; --out-dir /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version -L /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version  b.rs --extern a=/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib --crate-type=bin -Crpath -Cprefer-dynamic\nDYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib/rustlib/x86_64-apple-darwin/lib:&quot; /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/ b\n\n------------------------------------------\nstderr:\n------------------------------------------\nwarning: ignoring --out-dir flag due to -o flag\n\nwarning: 1 warning emitted\n\n/bin/dash: 1: /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/: Permission denied\nmake: *** [all] Error 126\n\n------------------------------------------\n\n\n\nfailures:\n    [run-make] run-make/crate-hash-rustc-version\n</code></pre></div>",
        "id": 260180171,
        "sender_full_name": "pierwill",
        "timestamp": 1635965528
    },
    {
        "content": "<p>Try <code>$(call RUN,b)</code> without space after the comma.</p>",
        "id": 260180279,
        "sender_full_name": "bjorn3",
        "timestamp": 1635965582
    },
    {
        "content": "<p>okay</p>",
        "id": 260180343,
        "sender_full_name": "pierwill",
        "timestamp": 1635965611
    },
    {
        "content": "<p>okay it worked. it <em>passed</em></p>",
        "id": 260180378,
        "sender_full_name": "pierwill",
        "timestamp": 1635965631
    },
    {
        "content": "<p>For the second <code>$(call RUN,b)</code> you can do <code>$(call FAIL,b)</code> I think to test that it fails.</p>",
        "id": 260180497,
        "sender_full_name": "bjorn3",
        "timestamp": 1635965674
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>---- [run-make] run-make/crate-hash-rustc-version stdout ----\n\nerror: make failed\nstatus: exit status: 2\ncommand: &quot;make&quot;\nstdout:\n------------------------------------------\n# a.rs is a dylib\nDYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib:&quot; &#39;/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/bin/rustc&#39; --out-dir /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version -L /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version  a.rs --crate-type=dylib -o /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib -Cprefer-dynamic\n# b.rs is bin\nDYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib:&quot; &#39;/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/bin/rustc&#39; --out-dir /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version -L /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version  b.rs --extern a=/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib --crate-type=bin -Crpath -Cprefer-dynamic\nDYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib/rustlib/x86_64-apple-darwin/lib:&quot; /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/b\nHello\n# Now re-compile a with another rustc version\nRUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER=bar DYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib:&quot; &#39;/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/bin/rustc&#39; --out-dir /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version -L /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version  a.rs --crate-type=dylib -o /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib -Cprefer-dynamic\n# Verify that this fails to find symbols\nDYLD_LIBRARY_PATH=&quot;/Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version:/Users/user/repos/rust/build/x86_64-apple-darwin/stage1/lib/rustlib/x86_64-apple-darwin/lib:&quot; /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/b &amp;&amp; exit 1 || exit 0\nHello\n\n------------------------------------------\nstderr:\n------------------------------------------\nwarning: ignoring --out-dir flag due to -o flag\n\nwarning: 1 warning emitted\n\nwarning: ignoring --out-dir flag due to -o flag\n\nwarning: 1 warning emitted\n\nmake: *** [all] Error 1\n\n------------------------------------------\n\n\n\nfailures:\n    [run-make] run-make/crate-hash-rustc-version\n\ntest result: FAILED. 0 passed; 1 failed; 43 ignored; 0 measured; 0 filtered out; finished in 1.75s\n\nSome tests failed in compiletest suite=run-make mode=run-make host=x86_64-apple-darwin target=x86_64-apple-darwin\n</code></pre></div>",
        "id": 260180649,
        "sender_full_name": "pierwill",
        "timestamp": 1635965741
    },
    {
        "content": "<p>That output is with <code>($call FAIL,b)</code></p>",
        "id": 260180796,
        "sender_full_name": "pierwill",
        "timestamp": 1635965794
    },
    {
        "content": "<p>I will be afk for a bit. You can try using <code>nm -D /Users/user/repos/rust/build/x86_64-apple-darwin/test/run-make/crate-hash-rustc-version/crate-hash-rustc-version/liba.dylib</code> before and after the recompilation of liba to see if the symbol name changes.</p>",
        "id": 260180917,
        "sender_full_name": "bjorn3",
        "timestamp": 1635965851
    },
    {
        "content": "<p>Okay. Thank you!</p>",
        "id": 260180938,
        "sender_full_name": "pierwill",
        "timestamp": 1635965863
    },
    {
        "content": "<p>I think I got it... <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span>  <a href=\"https://github.com/rust-lang/rust/blob/b3659cfbcfe3cc2e0380f84e591fb2bff2c01ebc/src/test/run-make/crate-hash-rustc-version/Makefile\">https://github.com/rust-lang/rust/blob/b3659cfbcfe3cc2e0380f84e591fb2bff2c01ebc/src/test/run-make/crate-hash-rustc-version/Makefile</a></p>",
        "id": 260194616,
        "sender_full_name": "pierwill",
        "timestamp": 1635972030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> I think it got it working :)</p>",
        "id": 260212932,
        "sender_full_name": "pierwill",
        "timestamp": 1635983254
    },
    {
        "content": "<p>We're almost there....</p>",
        "id": 260305396,
        "sender_full_name": "pierwill",
        "timestamp": 1636046612
    }
]