[
    {
        "content": "<p>I am eagerly trying to fix this bug for clippy <a href=\"https://github.com/rust-lang/rust-clippy/issues/4002\">https://github.com/rust-lang/rust-clippy/issues/4002</a> using queries. What I've done so far:</p>\n<ol>\n<li>Get <code>predicates_of</code> for the method accepting the closure</li>\n<li>Create a new <code>Substs</code>, replacing the closure type with the type of the method inside the closure</li>\n<li>Create new predicates from the above</li>\n<li>Run <code>FulfillCtxt::register_predicate_obligation</code> with those predicates, then <code>select_all_or_error</code></li>\n<li>Run <code>infcx.process_registered_region_obligations</code></li>\n<li>Observe interesting data in <code>take_and_reset_region_constraints</code></li>\n</ol>\n<p>I think the next step is to create and run a canonical query - from the region constraints? Can anyone help with that?</p>",
        "id": 249200642,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1628748191
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span> perhaps you'd be interested in helping since you reported the bug :)</p>",
        "id": 249200881,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1628748560
    },
    {
        "content": "<p>Okay I am really close now - I can call <code>resolve_regions_and_report_errors</code> and it gives me the result I'm looking for. But of course I don't want to report errors. In order to not report error, it looks like I need <code>lexical_region_resolve::resolve</code> which is private. Can this be made public for Clippy?</p>",
        "id": 249250081,
        "sender_full_name": "Cameron Steffen",
        "timestamp": 1628782032
    }
]