[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span> <span class=\"user-mention\" data-user-id=\"257758\">@Connor Horman</span> <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span></p>\n<p>Today's another regularly-scheduled bi-weekly meeting. I've read what I missed from the previous conversation, and I have to say that I don't really know where we stand. Do any of you feel comfortable summarizing the state of the discussion around current blockers?</p>\n<p>Does the PR <a href=\"https://github.com/rust-lang/rust/pull/92911\">\"[WIP] Guard against unwinding in cleanup code\"</a> solve the same issue that Amanieu mentioned would be solved by making <code>-Z panic-in-drop=abort</code> the default?</p>\n<p>(Sorry that progress on this project is only proceeding in small bursts. Please let me know if I can better assist in facilitating these discussions move along.)</p>",
        "id": 269608252,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1643304902
    },
    {
        "content": "<p>It's at 13:00 EST, right? I'm going to be unavailable, so I'll read the backlog afterwards and add anything I have.</p>",
        "id": 269608381,
        "sender_full_name": "Connor Horman",
        "timestamp": 1643304959
    },
    {
        "content": "<p>Yes, <code>-Z panic-in-drop=abort</code> would resolve this issue, but we still need that PR if we want to support <code>-Z panic-in-drop=unwind</code> (the current default).</p>",
        "id": 269608535,
        "sender_full_name": "Amanieu",
        "timestamp": 1643305019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"257758\">Connor Horman</span> <a href=\"#narrow/stream/210922-project-ffi-unwind/topic/meeting.202022-1-27/near/269608381\">said</a>:</p>\n<blockquote>\n<p>It's at 13:00 EST, right? I'm going to be unavailable, so I'll read the backlog afterwards and add anything I have.</p>\n</blockquote>\n<p>13:30, but yes</p>",
        "id": 269610836,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1643305923
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"143274\">Amanieu</span> <a href=\"#narrow/stream/210922-project-ffi-unwind/topic/meeting.202022-1-27/near/269608535\">said</a>:</p>\n<blockquote>\n<p>Yes, <code>-Z panic-in-drop=abort</code> would resolve this issue, but we still need that PR if we want to support <code>-Z panic-in-drop=unwind</code> (the current default).</p>\n</blockquote>\n<p>So if that PR were completed and merged, it would obviate the <code>-Z panic-in-drop=abort</code> discussion?</p>",
        "id": 269610925,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1643305961
    },
    {
        "content": "<p>No, <code>-Z panic-in-drop=abort</code> is still useful on its own and I would argue that it is a better default in general.  See the discussion in <a href=\"https://github.com/rust-lang/lang-team/issues/97\">https://github.com/rust-lang/lang-team/issues/97</a>.</p>",
        "id": 269615498,
        "sender_full_name": "Amanieu",
        "timestamp": 1643307646
    },
    {
        "content": "<p>Oh, sorry, I meant obviate it for the purpose of this group and stabilizing <code>\"C-unwind\"</code>.</p>",
        "id": 269617404,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1643308434
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1866\">@WG-ffi-unwind</span> </p>\n<p>Bi-weekly check-in!</p>\n<p>Unfortunately I am a bit lost on where we're actually still blocked.</p>\n<ul>\n<li>It appears that we have a proposed solution for the double-unwind issue in the form of <span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span>'s PR <a href=\"https://github.com/rust-lang/rust/pull/92911\">#92911</a>.</li>\n<li>I don't know if we fully resolved the issue around mixed <code>panic=abort</code> and <code>panic=unwind</code> builds. <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> proposed \"if a crate uses both <code>extern \"C-unwind\"</code> and <code>-C panic=unwind</code> then it cannot be included in the same crate graph as a crate compiled with <code>-C panic=abort</code>\" (with an exception for <code>std</code> and panic runtimes). Since <code>\"C-unwind\"</code> isn't stable yet, I expect this is a non-breaking change, and it sounded like there was general agreement. I'm not sure who would need to sign off on it.</li>\n</ul>\n<p>Are there other remaining issues?</p>",
        "id": 269618387,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1643308879
    },
    {
        "content": "<p>(Jeeze, these initial comments always take me something like 10 minutes to type. I guess I need to draft them in advance of the scheduled meeting time.)</p>",
        "id": 269618428,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1643308910
    },
    {
        "content": "<p>I think that's all there is. I'm planning on working on the second one but haven't started yet. Once this is fixed then we have no more blockers to stabilizing C-unwind.</p>",
        "id": 269619894,
        "sender_full_name": "Amanieu",
        "timestamp": 1643309549
    },
    {
        "content": "<p>Okay, thanks for confirming!</p>",
        "id": 269620394,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1643309775
    }
]