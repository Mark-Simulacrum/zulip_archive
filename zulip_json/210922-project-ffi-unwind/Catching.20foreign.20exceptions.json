[
    {
        "content": "<p>After thinking about it for a bit, there's a huge issue with catching foreign exceptions.</p>",
        "id": 179248202,
        "sender_full_name": "Amanieu",
        "timestamp": 1572280273
    },
    {
        "content": "<p>The exception object is only live inside the <code>catch</code> block. In Rust, this <code>catch</code> block is located entirely within <code>intrinsics::try</code>.</p>",
        "id": 179248308,
        "sender_full_name": "Amanieu",
        "timestamp": 1572280315
    },
    {
        "content": "<p>Basically if you want to be able to rethrow the foreign exception, this has to be done inside the <code>catch</code> block.</p>",
        "id": 179248507,
        "sender_full_name": "Amanieu",
        "timestamp": 1572280408
    },
    {
        "content": "<p>Otherwise the only thing you can do is return a \"some foreign exception happened\" error that you can't rethrow.</p>",
        "id": 179248569,
        "sender_full_name": "Amanieu",
        "timestamp": 1572280439
    },
    {
        "content": "<p>Sounds like either a new library function or a new syntax construct would be required for useful interaction with foreign exceptions, then.</p>",
        "id": 179249539,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1572280856
    },
    {
        "content": "<p>In any case, catching foreign exceptions is currently outside the scope of the project group: <a href=\"#narrow/stream/210922-wg-ffi-unwind/topic/meeting.20time/near/178413258\" title=\"#narrow/stream/210922-wg-ffi-unwind/topic/meeting.20time/near/178413258\">https://rust-lang.zulipchat.com/#narrow/stream/210922-wg-ffi-unwind/topic/meeting.20time/near/178413258</a></p>",
        "id": 179249664,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1572280922
    },
    {
        "content": "<p>Well there are some implications: since foreign exceptions allow you to unwind through <code>catch_unwind</code> silently, unsafe code needs to ensure that they do not use <code>catch_unwind</code> to maintain safety and instead use drop guards.</p>",
        "id": 179249858,
        "sender_full_name": "Amanieu",
        "timestamp": 1572281025
    },
    {
        "content": "<p>That's true. Though since foreign exception behavior in Rust isn't yet defined, <code>catch_unwind</code> should really be thought of as <code>catch_panic</code> (and in my opinion it was misnamed).</p>",
        "id": 179250713,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1572281460
    },
    {
        "content": "<p>These are some of the reasons for why I thought that maybe it would be more conservatibe for <code>catch_unwind</code> to abort on foreign exceptions at best</p>",
        "id": 179258874,
        "sender_full_name": "gnzlbg",
        "timestamp": 1572286355
    },
    {
        "content": "<p>This is a really interesting question</p>",
        "id": 179271203,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572293862
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"120076\">@Kyle Strand</span> that it'd be great to collect notes on <em>this</em> into the repo</p>",
        "id": 179271229,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572293880
    },
    {
        "content": "<p>I am imagining that we should basically have \"in progress summaries\" on key questions</p>",
        "id": 179271388,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1572293982
    },
    {
        "content": "<blockquote>\n<p>I am imagining that we should basically have \"in progress summaries\" on key questions</p>\n</blockquote>\n<p>That seems good as a way of organizing the \"discussion summaries\" section.</p>",
        "id": 179271488,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1572294032
    }
]