[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> -- for libstd, we compile a dylib in panic=unwind, right? But when you <em>actually</em> panic, the code does an abort? Is that correct? If so, is there an <code>if panicabort { abort() }</code> in the code that starts a panic? Where is that code?</p>",
        "id": 251761477,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630606720
    },
    {
        "content": "<p>we do complie a <a href=\"http://libstd.so\">libstd.so</a> dylib which is panic=unwind</p>",
        "id": 251762454,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607077
    },
    {
        "content": "<p>there's not actually a conditional, though, rather the behavior of a panic is defined by whether the <code>panic_abort</code> or <code>panic_unwind</code> crates are linked in</p>",
        "id": 251762501,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607098
    },
    {
        "content": "<p>and you can only link one of those, so if you link to <a href=\"http://libstd.so\">libstd.so</a> you're forced into unwinding (because it links to <code>panic_abort</code>)</p>",
        "id": 251762568,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607123
    },
    {
        "content": "<p>Similarly, we only link one personality function in a given binary, correct?</p>",
        "id": 251762699,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1630607165
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/210922-project-ffi-unwind/topic/panic.3Dabort.20and.20libstd/near/251762501\">said</a>:</p>\n<blockquote>\n<p>there's not actually a conditional, though, rather the behavior of a panic is defined by whether the <code>panic_abort</code> or <code>panic_unwind</code> crates are linked in</p>\n</blockquote>\n<p>ok</p>",
        "id": 251762753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630607185
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/210922-project-ffi-unwind/topic/panic.3Dabort.20and.20libstd/near/251762568\">said</a>:</p>\n<blockquote>\n<p>and you can only link one of those, so if you link to <a href=\"http://libstd.so\">libstd.so</a> you're forced into unwinding (because it links to <code>panic_abort</code>)</p>\n</blockquote>\n<p>wat</p>",
        "id": 251762839,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630607220
    },
    {
        "content": "<p>am I very confused or is this sentence full of errors :)</p>",
        "id": 251762954,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630607270
    },
    {
        "content": "<p>er sorry, <a href=\"http://libstd.so\">libstd.so</a> links to <code>panic_unwind</code></p>",
        "id": 251763099,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607323
    },
    {
        "content": "<p>which forces <a href=\"http://libstd.so\">libstd.so</a> to always be unwinding</p>",
        "id": 251763132,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607334
    },
    {
        "content": "<p>which means you can't compile with <code>-Cpanic=abort</code> and link to <code>libstd.so</code></p>",
        "id": 251763152,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607342
    },
    {
        "content": "<p>ok. that is surprising to me too, because I thought all Rust code linked to <a href=\"http://libstd.so\">libstd.so</a> (apart from no-std, of course)</p>",
        "id": 251763291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630607391
    },
    {
        "content": "<p>I thought that was something the error-handling group addressed?</p>",
        "id": 251763302,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1630607394
    },
    {
        "content": "<p>but with panic=abort we link to something else?</p>",
        "id": 251763306,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1630607396
    },
    {
        "content": "<p>Does that mean that <code>panic=abort</code> needs to be <code>no-std</code>?</p>",
        "id": 251763345,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1630607404
    },
    {
        "content": "<p>oh there's a difference between <code>libstd.rlib</code> and <code>libstd.so</code>, code linking to <code>libstd.rlib</code> has a choice of panic runtime, code by default doesn't link to <code>libstd.so</code></p>",
        "id": 251763622,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607502
    },
    {
        "content": "<p>with <code>panic=abort</code> it instructs the final link to link against <code>panic-abort.rlib</code> instead of <code>panic-unwind.rlib</code></p>",
        "id": 251763738,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1630607536
    }
]