[
    {
        "content": "<p>I've prepared a <a href=\"https://github.com/nikomatsakis/project-ffi-unwind/pull/10\" target=\"_blank\" title=\"https://github.com/nikomatsakis/project-ffi-unwind/pull/10\">pull request</a> that refines the terminology along the lines we discussed yesterday. In particular, it separates</p>\n<ul>\n<li><strong>Undefined Behavior</strong> -- true UB</li>\n<li><strong>Unspecified Behavior</strong> -- like Rust layout, which seems to match the <a href=\"https://en.wikipedia.org/wiki/Unspecified_behavior\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Unspecified_behavior\">wikipedia definition</a></li>\n<li><strong>To Be Determined Behavior</strong> -- a subset of the above, that which we <em>intend</em> to specify in this group</li>\n</ul>",
        "id": 178274846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571220331
    },
    {
        "content": "<p>Comments welcome.</p>",
        "id": 178274851,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571220338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span>, does that address your confusion?</p>",
        "id": 178274942,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571220377
    },
    {
        "content": "<p>Yes. I think that matches how I worded my thoughts in the other PR, where UB is mostly only used for \"there is no reasonable way in which we could define the behavior here or no useful guarantees that we could provide\"</p>",
        "id": 178281082,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571226916
    },
    {
        "content": "<p>Thanks very much for doing this. I have been thinking that introducing some terminology as a standard for the Rust project overall would be worth its own RFC, but in the mean time this WG can adopt it for our own purposes, as long as we're explicit about it</p>",
        "id": 178306180,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1571243927
    },
    {
        "content": "<p>only gave a cursory look to the PR so far but I think it seems good</p>",
        "id": 178306190,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1571243938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> regarding our discussion on <a href=\"https://github.com/nikomatsakis/project-ffi-unwind/pull/10\" target=\"_blank\" title=\"https://github.com/nikomatsakis/project-ffi-unwind/pull/10\">https://github.com/nikomatsakis/project-ffi-unwind/pull/10</a>, I tried to summarize the situation and all relevant facts in a <a href=\"https://hackmd.io/7ZcKCaRiRO2_I_yK8yeauQ\" target=\"_blank\" title=\"https://hackmd.io/7ZcKCaRiRO2_I_yK8yeauQ\">hackmd document</a> -- I'm curious if you feel there are points missing or points that you disagree with in there.</p>",
        "id": 178396791,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571329161
    },
    {
        "content": "<p>So I think that captures most of it</p>",
        "id": 178397996,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571329941
    },
    {
        "content": "<p>In the section about whether TBD should hit stable, I'd word it a bit differently</p>",
        "id": 178398026,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571329965
    },
    {
        "content": "<p>All unspecified behavior hits stable, that's normal</p>",
        "id": 178398033,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571329974
    },
    {
        "content": "<p>I don't think it is worth it to introduce a definition for TBD in the rust language reference</p>",
        "id": 178398068,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330012
    },
    {
        "content": "<p>I think it would suffice to say \"unspecified behavior\" and maybe have a note saying \"we are trying to specify this here (link)\"</p>",
        "id": 178398096,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330034
    },
    {
        "content": "<p>When it comes to unspecified behavior, we have all sorts of notes everywhere anyways documenting how certain platforms work</p>",
        "id": 178398165,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330063
    },
    {
        "content": "<p>For me personally, it would be useful to be able to tell when reading a document that should turn into an RFC at some point, which parts of the document are unspecified because we intend the feature to hit stable in that way, and which parts are unspecified because we haven't looked at it yet</p>",
        "id": 178398253,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330122
    },
    {
        "content": "<blockquote>\n<p>I don't think it is worth it to introduce a definition for TBD in the rust language reference</p>\n</blockquote>\n<p>(I didn't intend to either)</p>",
        "id": 178398397,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571330224
    },
    {
        "content": "<blockquote>\n<p>I think it would suffice to say \"unspecified behavior\" and maybe have a note saying \"we are trying to specify this here (link)\"</p>\n</blockquote>\n<p>exactly what I had in mind</p>",
        "id": 178398411,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571330236
    },
    {
        "content": "<p>For users on stable Rust that have to use such unspecified behavior, it is obviously useful as well to know which unspecified behavior is intended to be unspecified long term, and which is being worked on, so it would be nice to have a way to hint at this as well</p>",
        "id": 178398529,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330289
    },
    {
        "content": "<blockquote>\n<p>exactly what I had in mind</p>\n</blockquote>\n<p>So I think we agree. The document looks fine to me.</p>",
        "id": 178398565,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330327
    },
    {
        "content": "<p>great.</p>",
        "id": 178398739,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571330445
    },
    {
        "content": "<p>I updated it a bit to clarify the points you raised</p>",
        "id": 178398754,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571330459
    },
    {
        "content": "<p>I've added an answer to the question about stable Rust code using this already</p>",
        "id": 178398929,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330595
    },
    {
        "content": "<p>We have had nightly features to avoid UB for a while, and for different reasons, users have not been able to use them</p>",
        "id": 178398951,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571330615
    },
    {
        "content": "<blockquote>\n<p>I've added an answer to the question about stable Rust code using this already</p>\n</blockquote>\n<p>good point!</p>",
        "id": 178400746,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571331787
    },
    {
        "content": "<p>BTW, <span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span>, I can't entirely tell if <a href=\"https://github.com/nikomatsakis/project-ffi-unwind/pull/10#discussion_r335498162\" target=\"_blank\" title=\"https://github.com/nikomatsakis/project-ffi-unwind/pull/10#discussion_r335498162\">this concern</a> is still relevant</p>",
        "id": 178400766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571331799
    },
    {
        "content": "<p>No it isn't, has been resolved</p>",
        "id": 178400874,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571331864
    },
    {
        "content": "<p>For some reason I cannot resolve it :/</p>",
        "id": 178400888,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571331882
    },
    {
        "content": "<p>The button does not show</p>",
        "id": 178400894,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571331887
    },
    {
        "content": "<p>oh probably because you don't have write access or something to the repo</p>",
        "id": 178400905,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571331900
    },
    {
        "content": "<p>I should transfer this to rust-lang</p>",
        "id": 178400917,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571331910
    },
    {
        "content": "<p>Ah ok, that makes sense, please resolve it for me</p>",
        "id": 178400922,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571331915
    },
    {
        "content": "<p>I was kind of waiting but .. that's sort of silly</p>",
        "id": 178400924,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571331917
    },
    {
        "content": "<p>OK, I revised some of the text and added that hackmd to the repo as our first \"resolved concern\" and I pushed some other improvements. Going to merg.</p>",
        "id": 178401550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1571332386
    },
    {
        "content": "<p>Once again I submitted a review post-merge...not sure how inconvenient that is as a form of communication.</p>",
        "id": 178405877,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1571335479
    },
    {
        "content": "<p>How is \"unsoundness\" defined? Is it potentially a better term than \"LLVM-UB\" for things that are known to be unsafe?</p>",
        "id": 179036140,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1571997067
    },
    {
        "content": "<p>The UCG reference has a definition for that</p>",
        "id": 179036605,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571997596
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/unsafe-code-guidelines/blob/master/reference/src/glossary.md#soundness-of-code--of-a-library\" target=\"_blank\" title=\"https://github.com/rust-lang/unsafe-code-guidelines/blob/master/reference/src/glossary.md#soundness-of-code--of-a-library\">https://github.com/rust-lang/unsafe-code-guidelines/blob/master/reference/src/glossary.md#soundness-of-code--of-a-library</a></p>",
        "id": 179036684,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571997635
    },
    {
        "content": "<p>\"sound == well-typed programs cannot cause Undefined Behavior\"</p>",
        "id": 179036717,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571997670
    },
    {
        "content": "<p>A safe function is unsound if for some inputs or program states it can lead to a trace that has UB.</p>",
        "id": 179036722,
        "sender_full_name": "centril",
        "timestamp": 1571997673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120076\">@Kyle Strand</span> since sound is defined in terms of UB, i don't think you can replace \"LLVM-UB\" with it (EDIT: unless I'm misunderstanding which use of LLVM-UB you are talking about)</p>",
        "id": 179036816,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571997776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120076\">@Kyle Strand</span>  <a href=\"https://blog.sigplan.org/2019/10/17/what-type-soundness-theorem-do-you-really-want-to-prove/\" target=\"_blank\" title=\"https://blog.sigplan.org/2019/10/17/what-type-soundness-theorem-do-you-really-want-to-prove/\">https://blog.sigplan.org/2019/10/17/what-type-soundness-theorem-do-you-really-want-to-prove/</a> is a good read</p>",
        "id": 179036819,
        "sender_full_name": "centril",
        "timestamp": 1571997777
    },
    {
        "content": "<p>Probably not the best introduction if you haven't used the term before</p>",
        "id": 179036915,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571997879
    }
]