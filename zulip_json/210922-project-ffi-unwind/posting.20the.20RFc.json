[
    {
        "content": "<p>So, <span class=\"user-mention\" data-user-id=\"120076\">@BatmanAoD (Kyle Strand)</span> -- is anything hold us back from posting this rfc?</p>",
        "id": 197342861,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589319278
    },
    {
        "content": "<p>Sorry, I didn't realize I had Zulip closed yesterday! There are still two <code>TODO</code> items in the doc, and I did also want to add some kind of new user-friendly term for \"drop glue\".</p>",
        "id": 197449210,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589391569
    },
    {
        "content": "<p>Or rather, for the property of a frame having drop glue that will execute if an unwind happens</p>",
        "id": 197449241,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589391597
    },
    {
        "content": "<p>The two <code>TODO</code>s are for adding more background info on discussions prior to the formation of the project group, and explaining why we're not just stabilizing <code>#[unwind(allowed)]</code>.</p>",
        "id": 197457759,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589395291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120076\">BatmanAoD (Kyle Strand)</span> <a href=\"#narrow/stream/210922-project-ffi-unwind/topic/posting.20the.20RFc/near/197449241\">said</a>:</p>\n<blockquote>\n<p>Or rather, for the property of a frame having drop glue that will execute if an unwind happens</p>\n</blockquote>\n<p>maybe we should call it a \"pending\" frame or something?</p>",
        "id": 197461120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589396798
    },
    {
        "content": "<p>I guess though we want in particular a name for frames that have <em>no</em> work to do</p>",
        "id": 197461137,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589396807
    },
    {
        "content": "<p>\"passive\"?</p>",
        "id": 197461140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589396810
    },
    {
        "content": "<p>I still don't hate <code>inert</code>, I have to admit</p>",
        "id": 197461146,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589396815
    },
    {
        "content": "<p>I don't know of any existing terminology for this, so it seems like we have to create some</p>",
        "id": 197461178,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589396833
    },
    {
        "content": "<p>I don't \"hate\" inert either, but I think it's.... a good analogy that could probably fit a different concept better in the future. When I hear \"inert\" I think of chemicals that don't react with other chemicals. In our context, these frames don't \"react with\" an unwinding operation, so it's not a terrible analogy. But somehow it doesn't strike me as immediately self-explanatory.</p>",
        "id": 197462287,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589397342
    },
    {
        "content": "<p>Maybe if it's qualified: \"unwind-inert.\"</p>",
        "id": 197462301,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589397349
    },
    {
        "content": "<p>Yeah, I guess that would resolve my main concern, which is that \"inert\" doesn't sound specifically related to unwinding, cleanup, stack frames, etc.</p>",
        "id": 197462406,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589397384
    },
    {
        "content": "<p>(As a totally hand-wavy hypothetical example, \"inert\" could be used some day to refer to some property of threads that prevents them from interacting with other threads in an observable way.)</p>",
        "id": 197462531,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589397440
    },
    {
        "content": "<p>(Here, \"threads\" are analogous to \"chemicals\", and some are \"inert\" while others are not)</p>",
        "id": 197462554,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589397459
    },
    {
        "content": "<p>What do you think of my suggestion of \"disposable\"? Or some other word for ready-to-be-disposed-of?</p>",
        "id": 197462657,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589397495
    },
    {
        "content": "<p>\"trivial-drop\"</p>",
        "id": 197463562,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589397881
    },
    {
        "content": "<p>\"unwind-oblivious\"?</p>",
        "id": 197481325,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589406022
    },
    {
        "content": "<p>\"disposable\" doesn't feel very clear to me, I can't tell whether it means that there is or is not drop code to run</p>",
        "id": 197481369,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589406058
    },
    {
        "content": "<p>\"trivial\" is not a bad word for this</p>",
        "id": 197481410,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589406083
    },
    {
        "content": "<p>certainly saying that a POD struct has trivial drop is pretty reasonable</p>",
        "id": 197481424,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589406100
    },
    {
        "content": "<p>\"drop-pure\", because obviously introducing the concept of function purity will clear everything up <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 197573873,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589470765
    },
    {
        "content": "<p>I kind of like \"unwind-oblivious.\"</p>",
        "id": 197573942,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589470796
    },
    {
        "content": "<p>\"POSF\" -- plain old stack frame :)</p>",
        "id": 197582543,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589474267
    },
    {
        "content": "<p>I kind of love that, actually</p>",
        "id": 197582622,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589474296
    },
    {
        "content": "<p>Though \"POS\" always makes me think \"piece of --\"</p>",
        "id": 197582646,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589474310
    },
    {
        "content": "<p>and then \"point-of-sale\"</p>",
        "id": 197582655,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589474315
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120076\">BatmanAoD (Kyle Strand)</span> <a href=\"#narrow/stream/210922-project-ffi-unwind/topic/posting.20the.20RFc/near/197582646\">said</a>:</p>\n<blockquote>\n<p>Though \"POS\" always makes me think \"piece of --\"</p>\n</blockquote>\n<p>I was aware of this connotation :P</p>",
        "id": 197582699,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589474333
    },
    {
        "content": "<p>Maybe just make the connection to PODs explicit? PODF</p>",
        "id": 197582704,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589474335
    },
    {
        "content": "<p>\"Data frame\"?</p>",
        "id": 197582751,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589474359
    },
    {
        "content": "<p>I do have to say that \"plain old data\" is one of my favorite C++ \"technical terms\"</p>",
        "id": 197582774,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589474372
    },
    {
        "content": "<p>at least to me it was <em>immediately clear</em> what it meant when I first heard it :)</p>",
        "id": 197582812,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589474386
    },
    {
        "content": "<p>I suppose the acronym goes a long way to making it obscure again though</p>",
        "id": 197582896,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589474411
    },
    {
        "content": "<p>It's the only good one!</p>",
        "id": 197583279,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589474550
    },
    {
        "content": "<p>Arguably</p>",
        "id": 197583299,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589474556
    },
    {
        "content": "<p>I'd be in favor of either \"POD Frame\" or \"POF (plain old frame)\".</p>",
        "id": 197592400,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1589478565
    },
    {
        "content": "<p>I think let's go with POF. It's a distinct enough concept that using the word \"POD\" might lead to a false sense of confidence that the term can be understood without an explanation. But \"POF\" looks similar enough to \"POD\" that it'll probably work as a mnemonic.</p>",
        "id": 197592631,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589478662
    },
    {
        "content": "<p>.. I kinda liked inert.. (but don't mind me, this is devolving into a bikeshed)</p>",
        "id": 197592808,
        "sender_full_name": "Amanieu",
        "timestamp": 1589478746
    },
    {
        "content": "<p>I don't think \"plain old\" is very descriptive at all. It works in C++ because \"old\" clearly refers to C, but we don't have that in Rust.</p>",
        "id": 197592913,
        "sender_full_name": "Amanieu",
        "timestamp": 1589478800
    },
    {
        "content": "<p>Hmmmmmm</p>",
        "id": 197594103,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589479265
    },
    {
        "content": "<p>\"plain old\" is really more of an idiom, I'd say, just meaning \"basic\" or \"well-understood\". The point is that there's a difference in C++ between objects that are \"just\" data and objects that are... not. Sure, POD structs are just C structs, but  I don't think the \"old\" in POD actually refers to C.</p>",
        "id": 197594376,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589479373
    },
    {
        "content": "<p>I think bikeshedding is useful in this case, because C++ has _so many_ bad names/acronyms, and we risk introducing yet another bad name/acronym to the systems programming domain if this terminology catches on more broadly.</p>",
        "id": 197594527,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589479439
    },
    {
        "content": "<p>(I.e. I want to avoid another RAII/PIMPL/\"zero-cost\")</p>",
        "id": 197594656,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589479476
    },
    {
        "content": "<p>I think POF is good</p>",
        "id": 197600002,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589481791
    },
    {
        "content": "<p>I agree that I never thought of \"old\"  as referring to C</p>",
        "id": 197600019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589481801
    },
    {
        "content": "<p>but more the \"it's just a plain old something\" idiom, but I guess that is .. well .. idiomatic :)</p>",
        "id": 197600053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1589481816
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197642666,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1589510637
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> <span class=\"user-mention\" data-user-id=\"237472\">@acfoltzer</span> </p>\n<p>Even though I don't think the RFC is ready yet for a PR on the RFC repo (sorry, I haven't worked on it since our last discussion), would any of you object to merging it in its current state into the <code>master</code> branch of the project repo?</p>",
        "id": 198940304,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1590607701
    },
    {
        "content": "<p>no objections here</p>",
        "id": 198940376,
        "sender_full_name": "acfoltzer",
        "timestamp": 1590607732
    },
    {
        "content": "<p>Also, Amanieu, did the discussion on \"plain old\" resolve your concern? At this point I am leaning toward POF</p>",
        "id": 198940496,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1590607798
    },
    {
        "content": "<p>no objections <span class=\"user-mention\" data-user-id=\"120076\">@BatmanAoD (Kyle Strand)</span></p>",
        "id": 198944284,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1590609334
    },
    {
        "content": "<p><em>shrug</em> I still don't like it... but meh, I don't care enough to argue.</p>",
        "id": 198955234,
        "sender_full_name": "Amanieu",
        "timestamp": 1590614543
    },
    {
        "content": "<p>Wrapping up the RFC draft: here's my attempt to summarize a few years of argument into a couple of paragraphs, with links should people want to read more. Do we believe this is sufficient? <a href=\"https://github.com/BatmanAoD/project-ffi-unwind/blob/Rfc-POF-terminology/rfcs/0000-c-unwind-abi.md#older-discussions-about-unwinding-through-extern-c-boundaries\">https://github.com/BatmanAoD/project-ffi-unwind/blob/Rfc-POF-terminology/rfcs/0000-c-unwind-abi.md#older-discussions-about-unwinding-through-extern-c-boundaries</a></p>",
        "id": 199274455,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1590870193
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/project-ffi-unwind/pull/29\">https://github.com/rust-lang/project-ffi-unwind/pull/29</a></p>",
        "id": 199274520,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1590870325
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1866\">@WG-ffi-unwind</span> Not sure who saw my message above, but I think the RFC is about ready to go.</p>",
        "id": 199687167,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1591224844
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120076\">@BatmanAoD (Kyle Strand)</span> nice! I missed that, will take a look at the PR</p>",
        "id": 199751187,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591279429
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120076\">@BatmanAoD (Kyle Strand)</span> ugh I forgot about this <em>again</em> -- looking now</p>",
        "id": 200200775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591695415
    },
    {
        "content": "<p>Looks great, left a comment</p>",
        "id": 200201440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591695843
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 200262035,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1591723018
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> I feel like I must have asked this before, but web searches aren't helping me refresh my memory: what is an asynchronous exception, and why is it called that?</p>",
        "id": 200285300,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1591734380
    },
    {
        "content": "<p>Basically a signal caused by an external event, such as a timer or sent by another thread. And then throwing an exception from the signal handler. Basically it means an exception could occur at any point in your program.</p>",
        "id": 200285789,
        "sender_full_name": "Amanieu",
        "timestamp": 1591734612
    },
    {
        "content": "<p>Needless to say, we don't support that.</p>",
        "id": 200285817,
        "sender_full_name": "Amanieu",
        "timestamp": 1591734631
    },
    {
        "content": "<p>In the <code>nounwind</code> LangRef entry you quoted, wasn't the bit about async exceptions the reason you said <code>longjmp</code> on Windows would have \"implementation defined semantics\"?</p>",
        "id": 200286605,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1591734967
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Do you have any reservations about merging my PR as-is? We can discuss during the meeting today whether we want to reconsider forced-unwinds before submitting an actual RFC.</p>",
        "id": 200572305,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1591894470
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120076\">@BatmanAoD (Kyle Strand)</span> feel free to merge</p>",
        "id": 200575207,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591895658
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 200576594,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1591896051
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I've addressed your PR comments, though I didn't adhere very closely to your suggested phrasings. Please let me know if you'd like additional changes. (Or feel free to edit it directly.)</p>",
        "id": 200753014,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1592031802
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Saw your PR comments; do you think we're set to open the actual RFC PR?</p>",
        "id": 200942152,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1592253341
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120076\">@BatmanAoD (Kyle Strand)</span> I think so, yes</p>",
        "id": 201027835,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1592319587
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1866\">@WG-ffi-unwind</span> <a href=\"https://github.com/rust-lang/rfcs/pull/2945\">https://github.com/rust-lang/rfcs/pull/2945</a></p>",
        "id": 201034289,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1592322192
    }
]