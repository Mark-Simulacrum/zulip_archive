[
    {
        "content": "<p>Is there a way to add REX.W prefix for some x64 instructions (except for <code>.byte 0x48</code>)?<br>\nContext: I was surprised that <code>retf</code> instruction on x64 target doesn't have it by default</p>",
        "id": 236666731,
        "sender_full_name": "Soveu",
        "timestamp": 1619700502
    },
    {
        "content": "<p>That's up to the assembler, not rustc.</p>",
        "id": 236667032,
        "sender_full_name": "Amanieu",
        "timestamp": 1619700651
    },
    {
        "content": "<p><a href=\"https://sourceware.org/binutils/docs/as/i386_002dPrefixes.html\">https://sourceware.org/binutils/docs/as/i386_002dPrefixes.html</a></p>",
        "id": 236667115,
        "sender_full_name": "Amanieu",
        "timestamp": 1619700722
    },
    {
        "content": "<p>Apparently you can generate <code>rex</code> prefixes manually.</p>",
        "id": 236667159,
        "sender_full_name": "Amanieu",
        "timestamp": 1619700732
    },
    {
        "content": "<p>Not sure if LLVM's internal assembler supports it though.</p>",
        "id": 236667184,
        "sender_full_name": "Amanieu",
        "timestamp": 1619700742
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"143274\">Amanieu</span> <a href=\"#narrow/stream/216763-project-inline-asm/topic/REX.2EW.20prefix/near/236667032\">said</a>:</p>\n<blockquote>\n<p>That's up to the assembler, not rustc.</p>\n</blockquote>\n<p>I'm talking about inline asm in rust</p>",
        "id": 236668516,
        "sender_full_name": "Soveu",
        "timestamp": 1619701384
    },
    {
        "content": "<p><code>rex retf</code> just errors with <code>invalid instruction mnemonic</code></p>",
        "id": 236668788,
        "sender_full_name": "Soveu",
        "timestamp": 1619701458
    },
    {
        "content": "<p>but it doesn't have anything against <code>lock retf</code> :D</p>",
        "id": 236669036,
        "sender_full_name": "Soveu",
        "timestamp": 1619701571
    },
    {
        "content": "<p>maybe write <code>retfq</code>?</p>",
        "id": 236704961,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1619713986
    },
    {
        "content": "<p>oh, that works, thanks</p>",
        "id": 236737672,
        "sender_full_name": "Soveu",
        "timestamp": 1619727197
    }
]