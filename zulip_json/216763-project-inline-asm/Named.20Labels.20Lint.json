[
    {
        "content": "<p>I'm having issues implementing the lint to detect and warn against the usage of named labels, specifically with regards to getting the right span for error reporting.  The ability to use <code>\\n</code> in a string or raw strings complicates things a lot since I need to work with the parsed string to look for characters (particularly newlines), but the error reporting needs to use a span from the source string.</p>\n<p>The approach taken by the lints for the syntax directives won't work because I need to search for a pattern of characters, not a specific string, and also for the aformentioned escape characters reason.</p>\n<p>If anyone has any tips as to how to implement this, please help.</p>",
        "id": 246413610,
        "sender_full_name": "asquared31415",
        "timestamp": 1626666584
    },
    {
        "content": "<p>My recommendation would be: don't bother. Accurately translating spans for string literals is just too difficult.</p>",
        "id": 246423075,
        "sender_full_name": "Amanieu",
        "timestamp": 1626678969
    },
    {
        "content": "<p>Just naming the label in the lint message should be enough.</p>",
        "id": 246423134,
        "sender_full_name": "Amanieu",
        "timestamp": 1626678998
    },
    {
        "content": "<p>Alternatively you could try to do the same as the syntax directives and just use <code>find_span</code> after you find a specific instance of a named label.</p>",
        "id": 246423290,
        "sender_full_name": "Amanieu",
        "timestamp": 1626679114
    },
    {
        "content": "<p>So basically:</p>\n<ol>\n<li>Search for labels in the asm template string.</li>\n<li>Eliminate duplicates, only match each label once.</li>\n<li>Call <code>find_span</code> for each unique label found.</li>\n<li>If find_span fails for one label, ignore it. If find_span fails for all labels, return the span of the entire template string.</li>\n</ol>",
        "id": 246424201,
        "sender_full_name": "Amanieu",
        "timestamp": 1626679855
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span>  You left some feedback about changing the wording on the lint.  However I think that we have different expectations about what this lint should do.  In my opinion that changed wording of \"avoid using\" and \"should\" is a lot weaker of a suggestion, what is the reasoning behind that?  In my opinion, there is no way to use named labels correctly, as the RFC says, and so the wording should reflect that.  I would like to hear why you think it should be changed though.</p>",
        "id": 247259047,
        "sender_full_name": "asquared31415",
        "timestamp": 1627332197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384759\">@asquared31415</span> Sorry, I missed your message. The main reason why I suggested changing the wording is to be consistent with other lints. A lint is still fundamentally a suggestion which can be ignored, otherwise we would have made this a hard error instead of a lint.</p>",
        "id": 247644723,
        "sender_full_name": "Amanieu",
        "timestamp": 1627594633
    },
    {
        "content": "<p>I can think of some edge cases where it may be useful to have named labels, such as naked functions. In the end if the user chooses to ignore the warning then it is their fault if things break.</p>",
        "id": 247644896,
        "sender_full_name": "Amanieu",
        "timestamp": 1627594743
    },
    {
        "content": "<p>That makes sense I suppose.  Thanks.</p>",
        "id": 247651350,
        "sender_full_name": "asquared31415",
        "timestamp": 1627599217
    }
]