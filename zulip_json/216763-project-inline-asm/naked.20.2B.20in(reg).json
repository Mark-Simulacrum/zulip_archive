[
    {
        "content": "<p>Can I use: in(\"x1\") &amp;some_addr, in a #[naked] function?</p>",
        "id": 228232833,
        "sender_full_name": "joey",
        "timestamp": 1614606801
    },
    {
        "content": "<p>That would force the compiler to generate code to put the some_addr into a register, wouldn't it?</p>",
        "id": 228234982,
        "sender_full_name": "nagisa",
        "timestamp": 1614607598
    },
    {
        "content": "<p>yes, and then I guess it wouldnt be allowed, if a naked fn's body has to only contain what the asm() contains</p>",
        "id": 228235118,
        "sender_full_name": "joey",
        "timestamp": 1614607664
    },
    {
        "content": "<p>Right. That said <code>naked</code> is pretty bad at enforcing that condition.</p>",
        "id": 228235365,
        "sender_full_name": "nagisa",
        "timestamp": 1614607740
    },
    {
        "content": "<p>(by pretty bad I mean it doesn't do that at all and many different things can tickle LLVM just enough to have it to fail uphold that requirement)</p>",
        "id": 228235469,
        "sender_full_name": "nagisa",
        "timestamp": 1614607784
    },
    {
        "content": "<p>you're making me nervous at converting my external assembly files to naked functions :P</p>",
        "id": 228235778,
        "sender_full_name": "joey",
        "timestamp": 1614607885
    },
    {
        "content": "<p>I would recommend <code>global_asm!</code> if its an option.</p>",
        "id": 228236302,
        "sender_full_name": "nagisa",
        "timestamp": 1614608084
    },
    {
        "content": "<p>that's what Im currently doing</p>",
        "id": 228237413,
        "sender_full_name": "joey",
        "timestamp": 1614608444
    },
    {
        "content": "<p>but I want support for stuff like <a href=\"https://github.com/rust-lang/rust/issues/81838#issuecomment-774538298\">https://github.com/rust-lang/rust/issues/81838#issuecomment-774538298</a></p>",
        "id": 228237608,
        "sender_full_name": "joey",
        "timestamp": 1614608503
    },
    {
        "content": "<p>so for now I have to duplicate constants or add some complex <a href=\"http://build.rs\">build.rs</a> or used naked+asm!()</p>",
        "id": 228237719,
        "sender_full_name": "joey",
        "timestamp": 1614608534
    },
    {
        "content": "<p><code>naked</code> restrictions are actually enforced now.</p>",
        "id": 228265451,
        "sender_full_name": "Amanieu",
        "timestamp": 1614617843
    },
    {
        "content": "<p>You can use <code>const</code>/<code>sym</code> in naked functions, but not <code>in</code>/<code>out</code>.</p>",
        "id": 228265769,
        "sender_full_name": "Amanieu",
        "timestamp": 1614617893
    },
    {
        "content": "<p>You're supposed to get argument directly from their corresponding location in the function ABI.</p>",
        "id": 228265874,
        "sender_full_name": "Amanieu",
        "timestamp": 1614617910
    }
]