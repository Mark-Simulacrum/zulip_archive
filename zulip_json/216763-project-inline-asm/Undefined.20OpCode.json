[
    {
        "content": "<p>Sorry if this is the wrong place for this question. I'm looking to add __fastfail support in Rust for the ARM Windows targets (32/64). I need to emit a special opcode (Opcode 0xDEFB). How would I do this using llvm_asm!?</p>",
        "id": 208111108,
        "sender_full_name": "rylev",
        "timestamp": 1598457477
    },
    {
        "content": "<p><code>.inst 0xdefb</code></p>",
        "id": 208111758,
        "sender_full_name": "Amanieu",
        "timestamp": 1598457762
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 208112030,
        "sender_full_name": "rylev",
        "timestamp": 1598457891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> Would the usual .byte also work?</p>",
        "id": 208112054,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598457900
    },
    {
        "content": "<p>Sure but that doesn't mark those bytes as instruction in the debuginfo, so they disassemble as data instead of an instruction.</p>",
        "id": 208112281,
        "sender_full_name": "Amanieu",
        "timestamp": 1598458010
    },
    {
        "content": "<p>Ah, interesting!</p>",
        "id": 208112463,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598458086
    },
    {
        "content": "<p>Today I learned.</p>",
        "id": 208112489,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598458104
    },
    {
        "content": "<p><a href=\"https://developer.arm.com/documentation/dui0803/j/accessing-and-managing-symbols-with-armlink/about-mapping-symbols\">https://developer.arm.com/documentation/dui0803/j/accessing-and-managing-symbols-with-armlink/about-mapping-symbols</a></p>",
        "id": 208112579,
        "sender_full_name": "Amanieu",
        "timestamp": 1598458157
    }
]