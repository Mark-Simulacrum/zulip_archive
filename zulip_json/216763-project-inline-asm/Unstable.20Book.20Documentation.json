[
    {
        "content": "<p>Related to my <code>named_asm_labels</code> lint, should the <a href=\"https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels\">linked section</a> of the unstable book be edited to more specifically say that any duplication, compiler caused or otherwise, of named labels, including non-numeric local labels, can be problematic, including within and across crates, even in unrelated code?</p>",
        "id": 250191350,
        "sender_full_name": "asquared31415",
        "timestamp": 1629512998
    },
    {
        "content": "<p>Sure, that sounds like a good idea.</p>",
        "id": 250221138,
        "sender_full_name": "Amanieu",
        "timestamp": 1629557393
    },
    {
        "content": "<p>Initial draft, any major feedback on this?<br>\n<a href=\"/user_uploads/4715/QfDC9YnPH4fY59sC-q5Fxphs/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/QfDC9YnPH4fY59sC-q5Fxphs/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/QfDC9YnPH4fY59sC-q5Fxphs/image.png\"></a></div>",
        "id": 250250188,
        "sender_full_name": "asquared31415",
        "timestamp": 1629599891
    },
    {
        "content": "<p>I considered italicizing <code>any</code> at the start of the sentence for emphasis</p>",
        "id": 250250197,
        "sender_full_name": "asquared31415",
        "timestamp": 1629599914
    },
    {
        "content": "<p>Wow, that's a hell of a gotcha. Is there any possibility of catching these issues and issuing warnings?</p>",
        "id": 250254496,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1629607220
    },
    {
        "content": "<p>There are already lints against named labels</p>",
        "id": 250256917,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629611286
    },
    {
        "content": "<p>But not for 0b and 1b. That only applies when you use LLVM assembler and use Intel syntax on x86/64. For AT&amp;T syntax, other architectures or other non-LLVM backends it'll be fine.</p>",
        "id": 250256927,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629611349
    },
    {
        "content": "<p>0b and 1b issue is really just LLVM trying to support MASM-style literals (0b, 0Ah, etc). It could be very easily disabled (just flip a bool) from LLVM but it doesn't expose the way to get it disabled if Intel syntax is used.</p>",
        "id": 250256993,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629611476
    },
    {
        "content": "<p>i almost wonder if this issue is bad enough to switch the default to att syntax...</p>",
        "id": 250257966,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1629613148
    },
    {
        "content": "<p>Actually I searched through LLVM/clang codebase and it seems that the intel dialect attribute that rustc used is only used by clang for MS-style assemblies (for MSVC compat)</p>",
        "id": 250260164,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629616794
    },
    {
        "content": "<p>We should actually use <code>.intel_syntax</code> instead <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 250260212,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629616821
    },
    {
        "content": "<p>drafting a PR now</p>",
        "id": 250260214,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629616825
    },
    {
        "content": "<p>Oh no that doesn't work because LLVM will insert AT&amp;T style register names <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 250261322,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629618572
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209168\">Thom Chiovoloni</span> <a href=\"#narrow/stream/216763-project-inline-asm/topic/Unstable.20Book.20Documentation/near/250257966\">said</a>:</p>\n<blockquote>\n<p>i almost wonder if this issue is bad enough to switch the default to att syntax...</p>\n</blockquote>\n<p>I am thinking about the same now</p>",
        "id": 250261456,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629618823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384759\">@asquared31415</span> I'd specify that the binary literal thing only applies to x86 and that it can be worked around by using AT&amp;T syntax.</p>",
        "id": 250267718,
        "sender_full_name": "Amanieu",
        "timestamp": 1629628885
    },
    {
        "content": "<p>Okay, I didn't write that part, just kept it in the screenshot for context, but I will do a pass through the whole page and try to update things.</p>",
        "id": 250279429,
        "sender_full_name": "asquared31415",
        "timestamp": 1629645934
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/ADgSW7A3sf-c39L2YeNan2ml/image.png\">image.png</a> <br>\nIs this example of a migration from llvm_asm to asm still necessary?  In my opinion it only serves to add confusion to someone who didn't previously use it and I would assume very few people are still migrating from llvm_asm to asm.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ADgSW7A3sf-c39L2YeNan2ml/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/ADgSW7A3sf-c39L2YeNan2ml/image.png\"></a></div>",
        "id": 250282512,
        "sender_full_name": "asquared31415",
        "timestamp": 1629650280
    },
    {
        "content": "<p>Yea it's fine to remove it at this point: llvm_asm now triggers a deprecation warning and will be removed from the compiler soon.</p>",
        "id": 250287309,
        "sender_full_name": "Amanieu",
        "timestamp": 1629657525
    },
    {
        "content": "<p>Maybe it should actually be kept for a bit as the last people will now have to start migrating away from <code>llvm_asm!</code>?</p>",
        "id": 250289257,
        "sender_full_name": "bjorn3",
        "timestamp": 1629660393
    },
    {
        "content": "<p>Ah that's fair, shortly after that feature is removed this can be removed</p>",
        "id": 250292625,
        "sender_full_name": "asquared31415",
        "timestamp": 1629665572
    }
]