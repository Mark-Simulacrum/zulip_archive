[
    {
        "content": "<p>would it be a good idea to stabilize a min-powerpc-asm feature gate that's essentially the stuff that's currently implemented? we're still missing vmx registers and standard calling conventions iirc but scalar code should work</p>",
        "id": 269061397,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1643001760
    },
    {
        "content": "<p>I'm somewhat concerned with powerpc about the missing ability to mark some state as clobbered. In particular <code>lr</code> <code>ctr</code> and other such special registers.</p>",
        "id": 269185460,
        "sender_full_name": "Amanieu",
        "timestamp": 1643065425
    },
    {
        "content": "<p>iirc llvm just doesn't properly support lr and ctr clobbers at all...</p>",
        "id": 269186353,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1643066027
    },
    {
        "content": "<p>imho that's mostly fine -- just like you can't mark sp as clobbered on x86</p>",
        "id": 269186646,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1643066196
    },
    {
        "content": "<p>most the other special registers are more like cr0 on x86 -- the compiler won't touch it and assumes if you modify it you know what your doing and it won't change it back</p>",
        "id": 269186996,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1643066417
    },
    {
        "content": "<p>The difference is that these register need to be marked as clobbered if you call a function from inline assembly.</p>",
        "id": 269187838,
        "sender_full_name": "Amanieu",
        "timestamp": 1643067068
    }
]