[
    {
        "content": "<p>I'm trying to use inline asm to expose to a function that takes <code>r0</code> as a <code>u32</code> input, and then returns with <code>r0</code> as a <code>u16</code> output. However, the <code>inout</code> register constraint doesn't let me change the type. Same seems to be the case for <code>inlateout</code></p>\n<p>Any chance this restriction could be loosened?</p>",
        "id": 277553764,
        "sender_full_name": "Lokathor",
        "timestamp": 1648936429
    },
    {
        "content": "<p>No ability to just do the cast after the asm block?</p>",
        "id": 277554934,
        "sender_full_name": "Jubilee",
        "timestamp": 1648937875
    },
    {
        "content": "<p>I could. Doesn't casting a u32 to a u16 add an overhead though? Like masking off the high bits?</p>",
        "id": 277580518,
        "sender_full_name": "Lokathor",
        "timestamp": 1648965714
    },
    {
        "content": "<p>uuuugh you could do a really ugly</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">is_u16</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">u16</span>::<span class=\"n\">try_from</span><span class=\"p\">(</span><span class=\"n\">a_u32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">is_u16</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">core</span>::<span class=\"n\">hint</span>::<span class=\"n\">unreachable_unchecked</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277590779,
        "sender_full_name": "Jubilee",
        "timestamp": 1648971511
    },
    {
        "content": "<p>Casting u32 to u16 just makes LLVM ignore the high bits I believe. At least it works that way in Cranelift.</p>",
        "id": 277593928,
        "sender_full_name": "bjorn3",
        "timestamp": 1648973268
    },
    {
        "content": "<p>The type restriction is due to llvm limitations, nothing we can do about it.</p>",
        "id": 277601047,
        "sender_full_name": "Amanieu",
        "timestamp": 1648977158
    }
]