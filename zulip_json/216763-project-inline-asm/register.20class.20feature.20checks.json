[
    {
        "content": "<p>Is my understanding correct that <code>asm!(\"\", out(\"ymm0\") _)</code> should error out if <code>avx</code> feature is not enabled?</p>",
        "id": 254717857,
        "sender_full_name": "nagisa",
        "timestamp": 1632495541
    },
    {
        "content": "<p>The reason I ask is because in <a href=\"https://github.com/rust-lang/rust/pull/87402\">https://github.com/rust-lang/rust/pull/87402</a> I ended up seeing a diagnostics change after changing unrelated code in rustc... in particular see the <code>bad-reg.rs</code> test</p>",
        "id": 254719503,
        "sender_full_name": "nagisa",
        "timestamp": 1632496108
    },
    {
        "content": "<p>I thnk I know why...</p>",
        "id": 254723433,
        "sender_full_name": "nagisa",
        "timestamp": 1632497663
    },
    {
        "content": "<p>It shouldn't error. Clobbering a register is allowed even if target feature is not enabled.</p>",
        "id": 254729661,
        "sender_full_name": "Gary Guo",
        "timestamp": 1632499951
    },
    {
        "content": "<p>This is documented in the <a href=\"https://doc.rust-lang.org/stable/unstable-book/library-features/asm.html\">stable unstable book</a>, under \"symbol operands\". But appearantly the latest unstable book update the code uses clobber_abi this comment it's gone...</p>",
        "id": 254729891,
        "sender_full_name": "Gary Guo",
        "timestamp": 1632500037
    },
    {
        "content": "<p>Yes this is intentional, it makes it easier to write portable clobber lists that work no matter what target features are enabled.</p>",
        "id": 254740310,
        "sender_full_name": "Amanieu",
        "timestamp": 1632504002
    }
]