[
    {
        "content": "<p>(In the \"WebAssembly\" topic I mentioned offhand that  the sqrt intrinsic has problems with becoming stabilized, and <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> wanted to know more, but I didn't want to have a tangent in that thread, so I'm pre-emptively forking it to a new thread.)</p>\n<p>Basically we <em>could</em> just stabilize the intrinsic, but people are \"supposed\" to call it via the <code>f32</code> method, but we can't put that method into <code>core</code> because we can't ensure that the <code>compiler-builtins</code> crate provides a <code>sqrt</code> function implementation exactly when needed because <a href=\"https://github.com/rust-lang/rust/issues/64514\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/64514\">we don't have LLVM's hard-float/soft-float concepts as target_features</a> within Rust.</p>",
        "id": 183598368,
        "sender_full_name": "Lokathor",
        "timestamp": 1576535645
    },
    {
        "content": "<p>Is there any fundamental reason we can't just stabilize the intrinsic anyway? Doesn't have to be the \"preferred\" interface.</p>",
        "id": 183604801,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1576541776
    },
    {
        "content": "<p>Not that I know of.</p>",
        "id": 183608045,
        "sender_full_name": "Lokathor",
        "timestamp": 1576544789
    },
    {
        "content": "<p>Would be a simple RFC</p>",
        "id": 183608071,
        "sender_full_name": "Lokathor",
        "timestamp": 1576544823
    }
]