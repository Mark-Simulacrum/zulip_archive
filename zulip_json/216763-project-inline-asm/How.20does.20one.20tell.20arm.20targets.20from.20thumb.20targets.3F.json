[
    {
        "content": "<p>I'm not clear on how code is supposed to be able to tell that it is being compiled for arm targets or thumb targets. Since this affects nearly nothing in normal rust that's understandable. However, this affects the inline asm you write, so there should be some way to detect.</p>",
        "id": 249898360,
        "sender_full_name": "Lokathor",
        "timestamp": 1629313928
    },
    {
        "content": "<p>I think <code>cfg(target_feature = \"thumb\")</code> works, but I'm not 100% sure.</p>",
        "id": 249930828,
        "sender_full_name": "Amanieu",
        "timestamp": 1629335842
    },
    {
        "content": "<p>I'll check that next time i sit down for rust</p>",
        "id": 249947622,
        "sender_full_name": "Lokathor",
        "timestamp": 1629355716
    },
    {
        "content": "<p>--print cfg can help</p>",
        "id": 249958663,
        "sender_full_name": "nagisa",
        "timestamp": 1629363010
    },
    {
        "content": "<p><code>#[cfg(target_feature = \"thumb\")]</code> apparently does not work</p>\n<p>Also, <code>cargo --print cfg</code> wasn't recognized, is there another command I'm supposed to use --print with?</p>",
        "id": 250315563,
        "sender_full_name": "Lokathor",
        "timestamp": 1629700591
    },
    {
        "content": "<p>rustc --print cfg</p>",
        "id": 250316295,
        "sender_full_name": "bjorn3",
        "timestamp": 1629701551
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>D:\\dev\\gba-from-scratch&gt;rustc --print cfg --target thumbv4t-none-eabi\ndebug_assertions\npanic=&quot;abort&quot;\ntarget_abi=&quot;eabi&quot;\ntarget_arch=&quot;arm&quot;\ntarget_endian=&quot;little&quot;\ntarget_env=&quot;&quot;\ntarget_feature=&quot;thumb-mode&quot;\ntarget_has_atomic_equal_alignment=&quot;16&quot;\ntarget_has_atomic_equal_alignment=&quot;32&quot;\ntarget_has_atomic_equal_alignment=&quot;8&quot;\ntarget_has_atomic_equal_alignment=&quot;ptr&quot;\ntarget_has_atomic_load_store=&quot;16&quot;\ntarget_has_atomic_load_store=&quot;32&quot;\ntarget_has_atomic_load_store=&quot;8&quot;\ntarget_has_atomic_load_store=&quot;ptr&quot;\ntarget_os=&quot;none&quot;\ntarget_pointer_width=&quot;32&quot;\ntarget_vendor=&quot;unknown&quot;\n</code></pre></div>\n<p>Seems that <code>thumb-mode</code> is the rustc name</p>",
        "id": 250319376,
        "sender_full_name": "Lokathor",
        "timestamp": 1629704115
    },
    {
        "content": "<p>but all that atomic info is very wrong I think so dunno about that</p>",
        "id": 250319407,
        "sender_full_name": "Lokathor",
        "timestamp": 1629704151
    },
    {
        "content": "<p>you should file a bug about that?</p>",
        "id": 250320691,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1629705232
    },
    {
        "content": "<p>ARM7 has atomic load/store though?</p>",
        "id": 250338903,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1629718582
    },
    {
        "content": "<p>but this is v4T</p>",
        "id": 250366265,
        "sender_full_name": "Lokathor",
        "timestamp": 1629731799
    },
    {
        "content": "<p>does atomic_load_store just mean that a load or store of that size happens in one cycle? Because that much is true</p>",
        "id": 250366399,
        "sender_full_name": "Lokathor",
        "timestamp": 1629731865
    },
    {
        "content": "<p>rather, i should say it happens uninterruptably, regardless of cycles taken</p>",
        "id": 250366513,
        "sender_full_name": "Lokathor",
        "timestamp": 1629731904
    },
    {
        "content": "<p>It means that can never observe (e.g. through another CPU or an interrupt handler) a split write.</p>",
        "id": 250366644,
        "sender_full_name": "Amanieu",
        "timestamp": 1629731969
    },
    {
        "content": "<p>Split write means only some of the bytes were updated by the store, but not all.</p>",
        "id": 250366697,
        "sender_full_name": "Amanieu",
        "timestamp": 1629731997
    },
    {
        "content": "<p>(This all assuming full alignment)</p>",
        "id": 250366762,
        "sender_full_name": "Amanieu",
        "timestamp": 1629732011
    },
    {
        "content": "<p>ah, well that's accurate then</p>",
        "id": 250366915,
        "sender_full_name": "Lokathor",
        "timestamp": 1629732085
    }
]