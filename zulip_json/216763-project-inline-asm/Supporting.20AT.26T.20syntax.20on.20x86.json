[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> I remembered one other reason I'd really like optional support for AT&amp;T syntax on x86: with such support available, it wouldn't be <em>that</em> hard to automatically translate <code>llvm_asm!</code> to the new <code>asm!</code>.</p>",
        "id": 189933012,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1583528019
    },
    {
        "content": "<p>Having an <code>asm_att!</code> available or similar (or alternatively an <code>asm_intel!</code> for Intel syntax) would make it relatively easy to port. (And, for that matter, easier to port C code as well.)</p>",
        "id": 189933166,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1583528099
    },
    {
        "content": "<p>(I'm also increasingly debating if the default syntax on x86 should be AT&amp;T for consistency with other targets and then we can have an <code>asm_intel!</code>, or if the default syntax on x86 should be Intel and we can have an <code>asm_att!</code>.)</p>",
        "id": 189933295,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1583528186
    },
    {
        "content": "<p>Would it be <em>excessively</em> painful to plumb through an option for intelsyntax?</p>",
        "id": 189933359,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1583528236
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I've actually addressed that in the RFC: you can implement AT&amp;T syntax on top <code>asm!</code> by using <code>.att_syntax</code> and adding <code>%</code> before register template placeholders.</p>",
        "id": 189938970,
        "sender_full_name": "Amanieu",
        "timestamp": 1583532122
    },
    {
        "content": "<p><code>.intel_syntax noprefix</code> still allows prefixes. Would you consider just unconditionally using the prefixes in substitution?</p>",
        "id": 189939824,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1583532806
    },
    {
        "content": "<p>No, <code>.intel_syntax noprefix</code> does not actually allow prefixes. I tested this.</p>",
        "id": 189940676,
        "sender_full_name": "Amanieu",
        "timestamp": 1583533401
    },
    {
        "content": "<p>I've written code relying on that in assembly. Perhaps LLVM's assembler just doesn't support it?</p>",
        "id": 189955758,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1583554130
    },
    {
        "content": "<p><a href=\"https://godbolt.org/z/DML3HV\" target=\"_blank\" title=\"https://godbolt.org/z/DML3HV\">https://godbolt.org/z/DML3HV</a></p>",
        "id": 189984487,
        "sender_full_name": "Amanieu",
        "timestamp": 1583612231
    },
    {
        "content": "<p>Maybe you only used <code>.intel_syntax</code> instead of <code>.intel_syntax noprefix</code></p>",
        "id": 189984491,
        "sender_full_name": "Amanieu",
        "timestamp": 1583612244
    }
]