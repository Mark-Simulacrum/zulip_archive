[
    {
        "content": "<p>Do we have inline-asm tests in tree that check we don't leak any of the unintended features the LLVM's assembler supports but we don't want to?</p>",
        "id": 224857367,
        "sender_full_name": "nagisa",
        "timestamp": 1612264503
    },
    {
        "content": "<p>Are you talking about things like <code>{:uid}</code>? Or differences in the actually assembler (LLVM vs GAS)?</p>",
        "id": 224857520,
        "sender_full_name": "Amanieu",
        "timestamp": 1612264609
    },
    {
        "content": "<p>We automatically escape <code>{</code> to <code>{{</code> so it should be impossible to use LLVM's internal template specifiers.</p>",
        "id": 224857543,
        "sender_full_name": "Amanieu",
        "timestamp": 1612264629
    },
    {
        "content": "<p>Yeah, I noticed that we escape <code>$</code> to <code>$$</code>, but I don't think we have a test for this. I think there's value in having one.</p>",
        "id": 224860070,
        "sender_full_name": "nagisa",
        "timestamp": 1612266341
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> I'd be happy to review a PR adding such tests, if you have any interest in writing one.</p>",
        "id": 224935059,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1612299302
    },
    {
        "content": "<p>Yeah, I will keep this thread as a todo item for myself.</p>",
        "id": 224937740,
        "sender_full_name": "nagisa",
        "timestamp": 1612300570
    },
    {
        "content": "<p>Huh, it turns out that a literal <code>$$</code> ends up filtered out entirely from the asm. So something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>banana$: nop\nb$a$n$a$n$a: nop\n</code></pre></div>\n<p>will make labels collide as they both end up as plain <code>banana</code>.</p>",
        "id": 225369669,
        "sender_full_name": "nagisa",
        "timestamp": 1612566148
    },
    {
        "content": "<p>Seems to work correctly in the playground:</p>\n<div class=\"codehilite\"><pre><span></span><code>tail call void asm sideeffect alignstack inteldialect &quot;banana$$: nop\\0Ab$$a$$n$$a$$n$$a: nop&quot;, &quot;~{dirflag},~{fpsr},~{flags},~{memory}&quot;() #1, !srcloc !2\n</code></pre></div>",
        "id": 225378174,
        "sender_full_name": "Amanieu",
        "timestamp": 1612573910
    },
    {
        "content": "<p>Oh it's the assembler that eliminates the <code>$</code>. Well at that point it's not our problem any more.</p>",
        "id": 225378226,
        "sender_full_name": "Amanieu",
        "timestamp": 1612573952
    },
    {
        "content": "<p>I think it disappears in llvm-&gt;asm but yeah probably ain't our problem. Pretty weird still tho.</p>",
        "id": 225406257,
        "sender_full_name": "nagisa",
        "timestamp": 1612611705
    }
]