[
    {
        "content": "<p>I can't promise any concrete time availability, but once this gets further along, I'd love to help with this for AVR.</p>",
        "id": 183087699,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1576002733
    },
    {
        "content": "<p>Ideally once you've hammered out all the hard abstractions and there's just a simple template for me to fill in ;-)</p>",
        "id": 183087742,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1576002766
    },
    {
        "content": "<p>Yeah, if we've done it right, it should be just \"what are your registers\".</p>",
        "id": 183114418,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1576021167
    },
    {
        "content": "<p>I would expect it to take 2 hours max to add a new architecture. As Josh said, all you need to do is define registers and register classes.</p>",
        "id": 183117522,
        "sender_full_name": "Amanieu",
        "timestamp": 1576024734
    },
    {
        "content": "<p>Well, Josh just said registers. You've doubled the work with also adding specific classes ;-)</p>",
        "id": 183121837,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1576030659
    },
    {
        "content": "<p>At this doubling rate <span aria-label=\"upwards trend\" class=\"emoji emoji-1f4c8\" role=\"img\" title=\"upwards trend\">:upwards_trend:</span> , there's only a few more \"and also\" before it gets out of hand <span aria-label=\"explosion\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"explosion\">:explosion:</span></p>",
        "id": 183121880,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1576030685
    },
    {
        "content": "<p>O(2^n)? <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 183139149,
        "sender_full_name": "bjorn3",
        "timestamp": 1576055845
    },
    {
        "content": "<p>I had intended the concept of defining registers to include classifying them. ;)</p>",
        "id": 183274019,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1576166992
    },
    {
        "content": "<p>I expect that the AVR fork will get merged into rust-lang/rust in the next few weeks. Is this implemented enough to dump in some AVR-specific things after that happens?</p>",
        "id": 200230113,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1591710753
    },
    {
        "content": "<p>Sure!</p>",
        "id": 200232600,
        "sender_full_name": "Amanieu",
        "timestamp": 1591711639
    },
    {
        "content": "<p>Cool. I'm guessing there's not _tons_ of documentation, so do you have any pointers for me to start looking at?</p>",
        "id": 200242206,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1591715070
    },
    {
        "content": "<p>It's actually very easy, someone has already added NVPTX inline asm support. There's only 2 places you need to modify: src/librustc_target/asm to define the target registers and src/librustc_codegen_llvm/asm.rs to lower to LLVM constraint codes and modifiers.</p>",
        "id": 200255162,
        "sender_full_name": "Amanieu",
        "timestamp": 1591719895
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"143274\">Amanieu</span> <a href=\"#narrow/stream/216763-project-inline-asm/topic/AVR/near/200255162\">said</a>:</p>\n<blockquote>\n<p>It's actually very easy, someone has already added NVPTX inline asm support. There's only 2 places you need to modify: src/librustc_target/asm to define the target registers and src/librustc_codegen_llvm/asm.rs to lower to LLVM constraint codes and modifiers.</p>\n</blockquote>\n<p>I think it helps to look through the PR that added initial inline assembly support. I feel like just a skim should be enough to figure out where architecture-specific stuff needs to go. (And what is really necessary)</p>",
        "id": 200304615,
        "sender_full_name": "nagisa",
        "timestamp": 1591745783
    }
]