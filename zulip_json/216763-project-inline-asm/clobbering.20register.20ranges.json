[
    {
        "content": "<p>Sometimes you need to have a whole huge range of registers clobbered, what do you think of expressing that using syntax like: <code>out(\"f5\"..=\"f25\") _</code>?</p>",
        "id": 251298980,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1630359403
    },
    {
        "content": "<p>I don't think there is a pressing need for this right now. Ideally most clobbers should be handled via <code>clobber_abi</code>.</p>",
        "id": 251299909,
        "sender_full_name": "Amanieu",
        "timestamp": 1630359906
    },
    {
        "content": "<p>ok, though later we'll probably want this for supporting Libre-SOC's WIP SimpleV extension for OpenPower, since it supports long vectors by using ranges of integer/fp registers, e.g. a <code>f32x28</code> could be stored in <code>\"f100\"..=\"f113\"</code>; if we have to clobber registers individually, that's a <em>lot</em> of clobbers</p>",
        "id": 251300246,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1630360103
    },
    {
        "content": "<p>It's nice to have, but really most <code>asm!</code> is the sort of code you write once and then never touch again. It's a bit of a hassle to have to write out all the clobbers but it's not the sort of thing you have to do very often.</p>",
        "id": 251300451,
        "sender_full_name": "Amanieu",
        "timestamp": 1630360215
    },
    {
        "content": "<p>i'd say that's fine for more traditional architectures, but for SimpleV, one asm instruction could need 128(!) separate clobbers...a little much for even write-once code...</p>",
        "id": 251300669,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1630360338
    },
    {
        "content": "<p>Seems like a perfect place for preprocessing with <a href=\"http://build.rs\">build.rs</a> or similar as a proof of concept and need.</p>",
        "id": 251377077,
        "sender_full_name": "nagisa",
        "timestamp": 1630413495
    },
    {
        "content": "<p>Or perhaps a wrapper macro around <code>asm!</code>.</p>",
        "id": 251387765,
        "sender_full_name": "Amanieu",
        "timestamp": 1630417798
    }
]