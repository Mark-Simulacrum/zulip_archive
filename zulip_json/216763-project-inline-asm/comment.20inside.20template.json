[
    {
        "content": "<p>Hello <span aria-label=\"crab\" class=\"emoji emoji-1f980\" role=\"img\" title=\"crab\">:crab:</span> , is it possible for the <code>asm!</code> template string to contain comments? I'm trying to port the following the following to <code>asm!</code> and the <code>llvm_asm!</code> macro contains a comment. I'm not sure whether I should remove the comment block in the new <code>asm!</code> template string or not.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">            </span><span class=\"n\">llvm_asm</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">&quot;</span>\n<span class=\"s\">            mov sp, r0   /* Set the stack pointer to _estack */&quot;</span><span class=\"w\"></span>\n<span class=\"w\">            </span>:\n            : <span class=\"s\">&quot;{r0}&quot;</span><span class=\"p\">((</span><span class=\"n\">_estack</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span>:\n            : <span class=\"s\">&quot;volatile&quot;</span><span class=\"w\"> </span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 209848045,
        "sender_full_name": "JOE1994",
        "timestamp": 1599868022
    },
    {
        "content": "<p>The generally preferred way is to split the template string across multiple lines and put the comments outside.</p>",
        "id": 209848677,
        "sender_full_name": "Amanieu",
        "timestamp": 1599868803
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">asm</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">&quot;mov {0}, {1}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// comment</span>\n<span class=\"w\">        </span><span class=\"s\">&quot;add {0}, {number}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// comment</span>\n<span class=\"w\">        </span><span class=\"n\">out</span><span class=\"p\">(</span><span class=\"n\">reg</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">in</span><span class=\"p\">(</span><span class=\"n\">reg</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 209848720,
        "sender_full_name": "Amanieu",
        "timestamp": 1599868838
    },
    {
        "content": "<p>You can also use <code>/* */</code> comments inside the string, that's handled by the assembler</p>",
        "id": 209848732,
        "sender_full_name": "Amanieu",
        "timestamp": 1599868857
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 209850226,
        "sender_full_name": "JOE1994",
        "timestamp": 1599870716
    }
]