[
    {
        "content": "<p>Hello,</p>\n<p>Is this how you're meant to handle fixed register instructions? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=e6e14f105b70fbf6eb38f879d9cc4338\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=e6e14f105b70fbf6eb38f879d9cc4338</a><br>\nThe commented out version doesn't use the correct register (cl), so fails to assemble.</p>",
        "id": 273278143,
        "sender_full_name": "joey",
        "timestamp": 1645819475
    },
    {
        "content": "<p>Yes</p>",
        "id": 273278198,
        "sender_full_name": "Amanieu",
        "timestamp": 1645819508
    },
    {
        "content": "<p>Oh turns out the person I was talking to just opened a GH issue too, can you give a quick comment there <a href=\"https://github.com/rust-lang/rust/issues/94370\">https://github.com/rust-lang/rust/issues/94370</a> ?</p>",
        "id": 273278435,
        "sender_full_name": "joey",
        "timestamp": 1645819639
    },
    {
        "content": "<p>I was also surprised that you couldn't give names to explicit registers, like foo = in(\"cl\") _, would help with readability I think</p>",
        "id": 273278664,
        "sender_full_name": "joey",
        "timestamp": 1645819793
    },
    {
        "content": "<p>That's an intentional design decision. People would find it surprising that the register name isn't being rendered exactly how you wrote it in the operand.</p>",
        "id": 273279144,
        "sender_full_name": "Amanieu",
        "timestamp": 1645820086
    },
    {
        "content": "<p>For example <code>asm!(\"mov {}, {}\", inout(\"ax\") foo);</code> would actually expand to <code>mov rax, rax</code>.</p>",
        "id": 273279228,
        "sender_full_name": "Amanieu",
        "timestamp": 1645820128
    },
    {
        "content": "<p>To avoid surprises the behavior was changed to disallow substitution for explicit register operands so you have to write the register name manually.</p>",
        "id": 273279325,
        "sender_full_name": "Amanieu",
        "timestamp": 1645820168
    },
    {
        "content": "<p>Hm ok. I guess you can still use the <code>.req</code> syntax</p>",
        "id": 273280577,
        "sender_full_name": "joey",
        "timestamp": 1645820903
    }
]