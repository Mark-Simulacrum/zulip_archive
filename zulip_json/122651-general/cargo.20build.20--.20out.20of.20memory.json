[
    {
        "content": "<p>Hey all, I am attempting to build a rust application (not my code) using <code>cargo build --release</code>. The build machine is 8 cores, 16gb. The behavior I am seeing is that all RAM is slowly chewed up over the course of about an hour before it dies with exit code 137 (out of memory). What changes can I make to improve/prevent this behavior?</p>",
        "id": 253102997,
        "sender_full_name": "Nick Speare",
        "timestamp": 1631544801
    },
    {
        "content": "<p>You can pass <code>-j 4</code> to cargo to limit the number of parallel jobs</p>",
        "id": 253103161,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1631544849
    },
    {
        "content": "<p>Thanks Jonas. That is actually related to another question I have, which is that it only ever seems to be running on one of the 8 cores.</p>",
        "id": 253104154,
        "sender_full_name": "Nick Speare",
        "timestamp": 1631545202
    },
    {
        "content": "<p>Ah, then the issue might be with how a single crate is structured</p>",
        "id": 253104396,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1631545264
    },
    {
        "content": "<p>What version of rust are you using? <span class=\"user-mention\" data-user-id=\"439929\">@Nick Speare</span> </p>\n<p><code>cargo -Vv</code></p>",
        "id": 253105123,
        "sender_full_name": "Emil Gardstr√∂m",
        "timestamp": 1631545506
    },
    {
        "content": "<p>rust:1.41</p>",
        "id": 253105202,
        "sender_full_name": "Nick Speare",
        "timestamp": 1631545535
    },
    {
        "content": "<p>i'll test with rust:latest and see if the behavior improves</p>",
        "id": 253106730,
        "sender_full_name": "Nick Speare",
        "timestamp": 1631546118
    },
    {
        "content": "<p>No change in behavior with rust 1.55. <code>cargo build --release -j4</code> still only utilizes one core at a time, and still slowly consumes all memory until SIGKILL</p>",
        "id": 253109478,
        "sender_full_name": "Nick Speare",
        "timestamp": 1631547063
    },
    {
        "content": "<p>If it only uses a single core it is likely still running in the frontend. Codegen and optimizations happen on multiple threads, the frontend is currently limited to a single thread.</p>",
        "id": 253111835,
        "sender_full_name": "bjorn3",
        "timestamp": 1631547834
    },
    {
        "content": "<p>does it compile for other people?</p>",
        "id": 253123359,
        "sender_full_name": "The 8472",
        "timestamp": 1631552129
    },
    {
        "content": "<p>Well, the bigger issue than the cpu utilization is the devouring of memory. We increased the build server from 16 to 32 gb, but that seems very excessive to me.</p>",
        "id": 253125260,
        "sender_full_name": "Nick Speare",
        "timestamp": 1631552887
    },
    {
        "content": "<p>Is the code available? Generally speaking, this is almost certainly a performance bug at least.</p>",
        "id": 253125845,
        "sender_full_name": "simulacrum",
        "timestamp": 1631553127
    },
    {
        "content": "<p>Not sure if this is relevant or helpful, but the query system <em>is</em> parallel in the nightly compiler. You have to turn it on by enabling it in the config.toml. That might be why it's only running on one thread.</p>\n<p>also; according to the rustc-dev-guide, performance degrades if there are more than 4 threads.</p>",
        "id": 253126159,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1631553257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> not publicly available, unfortunately</p>",
        "id": 253126608,
        "sender_full_name": "Nick Speare",
        "timestamp": 1631553456
    },
    {
        "content": "<p>The query system isn't parallel in rustup distributed builds</p>",
        "id": 253127251,
        "sender_full_name": "simulacrum",
        "timestamp": 1631553697
    },
    {
        "content": "<p>If the devguide says otherwise, it's wrong</p>",
        "id": 253127378,
        "sender_full_name": "simulacrum",
        "timestamp": 1631553729
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/cargo.20build.20--.20out.20of.20memory/near/253127378\">said</a>:</p>\n<blockquote>\n<p>If the devguide says otherwise, it's wrong</p>\n</blockquote>\n<p>I don't think it does. This was an incorrect assumption on my part.</p>",
        "id": 253128299,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1631554056
    },
    {
        "content": "<p>Wasn't there some script or compiler flag that monitors RSS?</p>",
        "id": 253131957,
        "sender_full_name": "The 8472",
        "timestamp": 1631555617
    },
    {
        "content": "<p>something like <code>-Z time-passes</code> you mean ?</p>",
        "id": 253132593,
        "sender_full_name": "lqd",
        "timestamp": 1631555868
    },
    {
        "content": "<p>that's the one</p>",
        "id": 253132873,
        "sender_full_name": "The 8472",
        "timestamp": 1631555987
    },
    {
        "content": "<p>i'm getting this too on the most recent nightly. does not happen on an older version</p>",
        "id": 253255379,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631627887
    },
    {
        "content": "<p>is there a way to get more debug information? memory keeps going up and then cargo gets SIGKILL'd</p>",
        "id": 253255822,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631628021
    },
    {
        "content": "<p>i'm in the process of adding extra codegen options, just to see, but the project is quite large and takes a long time to build so it's taking up a ton of time</p>",
        "id": 253255970,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631628066
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/122651-general/topic/cargo.20build.20--.20out.20of.20memory/near/253132593\">said</a>:</p>\n<blockquote>\n<p>something like <code>-Z time-passes</code> you mean ?</p>\n</blockquote>\n<p><span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 253277891,
        "sender_full_name": "The 8472",
        "timestamp": 1631635951
    },
    {
        "content": "<p>yeah, i figured that one out actually. it doesn't really help me since i can't figure out where the endless loop it. the times seems pretty reasonable in time-passes</p>",
        "id": 253284774,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631638645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439914\">@Trevor Arjeski</span> this is silly, but it sometimes works - try running it under gdb, then hit control+c after like 10-15 seconds, and wherever it stops must be part of the loop</p>",
        "id": 253286000,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631639077
    },
    {
        "content": "<p>in that case attaching gdb and getting a stack trace may help</p>",
        "id": 253286014,
        "sender_full_name": "The 8472",
        "timestamp": 1631639082
    },
    {
        "content": "<p>lol ok i will try it</p>",
        "id": 253286662,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631639306
    },
    {
        "content": "<p>need to figure out how first :D</p>",
        "id": 253286849,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631639398
    },
    {
        "content": "<p><code>gdb $(rustup which rustc)</code> and then <code>run src/lib.rs</code> (or whatever cargo passes)</p>",
        "id": 253286944,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631639420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> thanks but i can't even see what <code>cargo b --release</code> evaluates to</p>",
        "id": 253287620,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631639664
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439914\">Trevor Arjeski</span> <a href=\"#narrow/stream/122651-general/topic/cargo.20build.20--.20out.20of.20memory/near/253287620\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> thanks but i can't even see what <code>cargo b --release</code> evaluates to</p>\n</blockquote>\n<p>add <code>-v</code></p>",
        "id": 253287658,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631639676
    },
    {
        "content": "<p>ah ok. i guess i need to wait 15 minutes till it gets to the crate that freezes <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 253287957,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631639777
    },
    {
        "content": "<p>my god this is tough when you have a <a href=\"http://build.rs\">build.rs</a></p>",
        "id": 253292106,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631641300
    },
    {
        "content": "<p>attaching to an already running process also is an option. check which process is eating memory and then <code>gdb attach &lt;pid&gt;</code></p>",
        "id": 253292532,
        "sender_full_name": "The 8472",
        "timestamp": 1631641464
    },
    {
        "content": "<p>do i just leave it until it gets SIGKILL'd?</p>",
        "id": 253296215,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631642885
    },
    {
        "content": "<p>ok nice at least i got a backtrace now...not that i have any clue how to proceed <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>",
        "id": 253299427,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631644064
    },
    {
        "content": "<p>Can you post the backtrace?</p>",
        "id": 253305182,
        "sender_full_name": "bjorn3",
        "timestamp": 1631646236
    },
    {
        "content": "<p>By the way I think you need to do <code>thread apply all bt</code> to get a backtrace for all threads including the main rustc thread (which is not the main thread of the rustc process)</p>",
        "id": 253305358,
        "sender_full_name": "bjorn3",
        "timestamp": 1631646281
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> sure, let me try that and get the backtrace</p>",
        "id": 253307280,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631647046
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> not sure if this is very helpful, but i got a random backtrace where it's hanging (on linkage): <a href=\"https://paste.ee/p/yWP87\">https://paste.ee/p/yWP87</a></p>",
        "id": 253316581,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631650460
    },
    {
        "content": "<p>It seems to be hanging during the monomorphization collector or trait selection. Could you select frame 33 and then step and see if it pauses execution again within reasonable time. If not, the hang is within trait selection, if it does the hang is within the monomorphization collector.</p>",
        "id": 253317305,
        "sender_full_name": "bjorn3",
        "timestamp": 1631650770
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>(gdb) frame 33\n(gdb) step\n</code></pre></div>\n<p>I think</p>",
        "id": 253317334,
        "sender_full_name": "bjorn3",
        "timestamp": 1631650788
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> , it did not hang (went instantly to next frame after <code>step</code>)</p>",
        "id": 253373968,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631691172
    },
    {
        "content": "<p>do i need to download the rustc source and compile it myself with debug info on so that i can see what's going on more?</p>",
        "id": 253376109,
        "sender_full_name": "Trevor Arjeski",
        "timestamp": 1631692655
    }
]