[
    {
        "content": "<ol>\n<li>Where is the place that people get help with using <code>cargo afl</code> or <code>cargo fuzz</code>? I can't tell from their book or repos. </li>\n<li>I have a strange crash when fuzzing only. I want to debug it by seeing the <code>stdout</code> / <code>stderr</code> of my program. Setting <code>AFL_DEBUG_CHILD=1</code> doesn't seem to do anything. What's the trick to enabling this?</li>\n</ol>",
        "id": 269028141,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1642957778
    },
    {
        "content": "<p>Hmm. Is it possible that <code>panic!</code> don’t flush?  Or maybe <code>cargo afl</code> does <code>panic=abort</code> and that doesn’t print out messages before aborting?</p>",
        "id": 269032886,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1642963707
    },
    {
        "content": "<p>panic=abort should still print the message before aborting</p>",
        "id": 269033577,
        "sender_full_name": "The 8472",
        "timestamp": 1642964588
    },
    {
        "content": "<p>That’s certainly what I would have hoped; haven’t tested yet.</p>\n<p>I did change my <code>panic!(…)</code> to a <code>eprintln!(…); panic!()</code> and see the output now, which is why I came up with that hypothesis.</p>",
        "id": 269035009,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1642966402
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;foo&#39;, src/main.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nAborted (core dumped)\n</code></pre></div>",
        "id": 269035150,
        "sender_full_name": "The 8472",
        "timestamp": 1642966588
    },
    {
        "content": "<p>maybe it depends on on what stderr is? line vs. block buffering</p>",
        "id": 269035178,
        "sender_full_name": "The 8472",
        "timestamp": 1642966656
    }
]