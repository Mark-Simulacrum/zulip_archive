[
    {
        "content": "<p>i keep getting tripped up by the term \"higher-ranked trait bounds\". like what is being ranked higher than what? some of the text in the reference makes it sound like it's a universal quantifier over lifetimes. is that a correct interpretation?</p>",
        "id": 239760014,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1621607442
    },
    {
        "content": "<p>yes</p>",
        "id": 239760070,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621607465
    },
    {
        "content": "<p>it's a trait bound of the form <code>T: for&lt;'a&gt; Trait&lt;'a&gt;</code></p>",
        "id": 239760115,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621607482
    },
    {
        "content": "<p>the <code>for&lt;'a&gt;</code> is a universal quantifier</p>",
        "id": 239760140,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621607492
    },
    {
        "content": "<p>thanks. the opening sentence of the section is \"Type bounds may be higher ranked over lifetimes.\", so i'm not sure exactly what they mean by \"type bounds\" (trait bounds? lifetime bounds?), or whether \"over\" means \"ranging over\" or \"above\", etc.</p>",
        "id": 239760476,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1621607605
    },
    {
        "content": "<p>You can also write <code>for&lt;'b&gt; T: 'b</code></p>",
        "id": 239761003,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621607785
    },
    {
        "content": "<p>I think by \"type bounds\" it means any bound (trait or lifetime) where the bound thing is a type</p>",
        "id": 239761071,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621607807
    },
    {
        "content": "<p>oh, <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\">https://doc.rust-lang.org/nomicon/hrtb.html</a> makes it sound like higher-ranked trait bounds are to bind a lifetime in a function signature to a universal quantifier so the surrounding item doesn't have to have a named lifetime parameter. is that right?</p>",
        "id": 239761451,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1621607947
    },
    {
        "content": "<p>yeah, that would be using them like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">callback</span>: <span class=\"nc\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 239761745,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621608050
    },
    {
        "content": "<p>but that's not really a trait bound</p>",
        "id": 239761764,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621608062
    },
    {
        "content": "<p>we might be missing good terminology for this</p>",
        "id": 239761784,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1621608072
    }
]