[
    {
        "content": "<p>Hey everyone! I’m looking at what kinds of CI and how often the Rust developers use. Anyone who has Rust projects on GitHub, could you tell me whether you use any code checkers (rustfmt, clippy, anything else maybe?), how you use them (hand-run, IDE, git hooks, actions, integrations) and why you’re doing it this way and not the other way?</p>",
        "id": 211032346,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600880612
    },
    {
        "content": "<p>sounds like a lot of effort from contributors.</p>",
        "id": 211033825,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600881264
    },
    {
        "content": "<p>rustfmt, clippy, proptest; ide, CI</p>",
        "id": 211033919,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600881306
    },
    {
        "content": "<p>rustfmt, sometimes clippy; hand-run, CI</p>",
        "id": 211042375,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600885161
    },
    {
        "content": "<p>For CI, I have <code>cargo fmt -- --check</code>. I've thought of running clippy with <code>-D all</code> in CI,  but I run it locally from time to time. And I have VS Code run rustfmt on save</p>",
        "id": 211074928,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600904328
    },
    {
        "content": "<p>I use miri in some projects.<br>\nI used to use rustfmt but then realized one day that it's dumb to have in CI because if the writer and reviewer both don't care about a newline out of place, why should the CI care?</p>",
        "id": 211083656,
        "sender_full_name": "Lokathor",
        "timestamp": 1600914099
    },
    {
        "content": "<blockquote>\n<p>I used to use rustfmt but then realized one day that it's dumb to have in CI because if the writer and reviewer both don't care about a newline out of place, why should the CI care?</p>\n</blockquote>\n<p>Though then when someone works on the file later and uses rustfmt they'll have diff noise.</p>",
        "id": 211083755,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600914212
    },
    {
        "content": "<p>don't use rustfmt then <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 211083770,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600914235
    },
    {
        "content": "<p>running rustfmt as a first PR is really rude IMO</p>",
        "id": 211083810,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600914245
    },
    {
        "content": "<p>if the maintainer wanted to use rustfmt, they would</p>",
        "id": 211083814,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600914258
    },
    {
        "content": "<p>(I'm biased by having a strong hate for rustfmt's style)</p>",
        "id": 211083820,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600914275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211083820\">said</a>:</p>\n<blockquote>\n<p>(I'm biased by having a strong hate for rustfmt's style)</p>\n</blockquote>\n<p>Hmm, really? That's funny, I mostly like it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 211083847,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600914317
    },
    {
        "content": "<p>well, I don't think this is the thread for me to rant about rustfmt's style</p>",
        "id": 211083859,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600914345
    },
    {
        "content": "<p>The only thing that bothers me is this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">bar</span>: <span class=\"s\">\"hello\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">.</span><span class=\"n\">some_function</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 211083906,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600914369
    },
    {
        "content": "<p>that could literally be one line</p>",
        "id": 211083916,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600914383
    },
    {
        "content": "<p><code>let foo = Foo { bar: \"hello\" }.some_function();</code></p>",
        "id": 211083923,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600914398
    },
    {
        "content": "<p>Rustfmt formats that as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">bar</span>: <span class=\"s\">\"hello\"</span><span class=\"w\"> </span><span class=\"p\">}.</span><span class=\"n\">some_function</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>I meant if there were more fields.</p>",
        "id": 211083960,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600914475
    },
    {
        "content": "<p>Like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">bar</span>: <span class=\"s\">\"hello\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">jdsd</span>: <span class=\"mi\">123</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">sjad</span>: <span class=\"mi\">238</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">some_function</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 211084006,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600914497
    },
    {
        "content": "<p>Anyway, off-topic</p>",
        "id": 211084009,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600914500
    },
    {
        "content": "<p>All my projects use a custom rustfmt config. I still don't care about exactly following that format or about a noisy diff. None of those things matter. What matters is the code being correct, the API being easy to use, and the API being well documented.</p>",
        "id": 211084109,
        "sender_full_name": "Lokathor",
        "timestamp": 1600914661
    },
    {
        "content": "<p>Of course, yes the correctness and docs etc. are most important. Noisy diffs just put more work on the reviewer.</p>",
        "id": 211084225,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600914793
    },
    {
        "content": "<p>It's annoying to send drive-by PRs to projects that don't use <code>rustfmt</code>. \"Oh, crap, the file got auto-formatted, I should undo that [or revert my changes if there's no undo]. But there were only 5 changed lines -- is it my nightly <code>rustfmt</code>? Or does the project author not use it? Maybe I just include them in the PR. Let me check the rest of the code. Okay, it's not formatted automatically, and there are at least 5 indentation styles used in the code, I guess I should use whatever is in the nearby code.\"</p>",
        "id": 211103370,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600937024
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211083656\">said</a>:</p>\n<blockquote>\n<p>I use miri in some projects.<br>\nI used to use rustfmt but then realized one day that it's dumb to have in CI because if the writer and reviewer both don't care about a newline out of place, why should the CI care?</p>\n</blockquote>\n<p>Thank you! I didn't know about miri before. As I understand, it can be used only when code is covered by tests. Is it correct or untested code also will go?</p>",
        "id": 211114398,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600944429
    },
    {
        "content": "<p>It's a kind of emulator for the Rust IR, it will only find bugs in code that runs, either in tests, or directly in the application. But it's somewhat limited wrt. OS integration and not exactly fast.</p>",
        "id": 211114544,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600944507
    },
    {
        "content": "<p>Interesting, I thought rustfmt is a kind of a standard and is used by literally all rust developers :D</p>",
        "id": 211114619,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600944570
    },
    {
        "content": "<p>It's a standard because it's the only choice, but some people don't like its defaults or don't use it all</p>",
        "id": 211114704,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600944625
    },
    {
        "content": "<p>Not super familiar on rustfmt (I just use it haha) but is the idea if used widely enough it keeps all rust repos universally look stylistically identical? As opposed to the prettier approach in JS where the idea is to configure it to suit your team's general consensus for a repos code style.</p>",
        "id": 211115259,
        "sender_full_name": "James Gill",
        "timestamp": 1600945025
    },
    {
        "content": "<p>Btw, you mentioned that you use clippy sometimes. Don't you use it as a part of your CI pipeline with github actions or smth?</p>",
        "id": 211115268,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600945033
    },
    {
        "content": "<p>I also get that JS has a little more <em>freedom</em> when it comes to how far you can push the style <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> .</p>",
        "id": 211115399,
        "sender_full_name": "James Gill",
        "timestamp": 1600945114
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343418\">James Gill</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211115259\">said</a>:</p>\n<blockquote>\n<p>Not super familiar on rustfmt (I just use it haha) but is the idea if used widely enough it keeps all rust repos universally look stylistically identical? As opposed to the prettier approach in JS where the idea is to configure it to suit your team's general consensus for a repos code style.</p>\n</blockquote>\n<p>I appreciate the defaults and the idea of having a consistent style, but some people just don't like it. At least it's always there, unlike what I've seen in my (few) encounters with JS where there are a lot of linters and they change their defaults all the time, so maybe a project's CI will fail because I'm using a newer version of <code>prettier</code>.</p>",
        "id": 211116050,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600945558
    },
    {
        "content": "<p><code>rustfmt</code> is pretty customizable, though: <a href=\"https://rust-lang.github.io/rustfmt/\">https://rust-lang.github.io/rustfmt/</a></p>",
        "id": 211116147,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600945616
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"345562\">Pavel Ignatovich</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211115268\">said</a>:</p>\n<blockquote>\n<p>Btw, you mentioned that you use clippy sometimes. Don't you use it as a part of your CI pipeline with github actions or smth?</p>\n</blockquote>\n<p>No, I just run it every once in a while, if even. I guess I'm more often working on other people's projects and <code>clippy</code> is even more controversial than <code>rustfmt</code>.</p>",
        "id": 211116297,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600945736
    },
    {
        "content": "<p>And it can be annoying for contributors: in the nightly toolchain there's often no <code>clippy</code> (also no <code>rustfmt</code>, but maybe less often) and I sometimes uninstall it to upgrade the compiler. So a nightly user might not even be able to install it.</p>",
        "id": 211116355,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600945791
    },
    {
        "content": "<p>Yeah definetely, personally I'm a big fan of customisation when it comes to linters. Mainly asking to get more info about the ethos for it, I just see it as \"Here's a nice tool to use if you'd like\".</p>",
        "id": 211116414,
        "sender_full_name": "James Gill",
        "timestamp": 1600945831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211116297\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"345562\">Pavel Ignatovich</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211115268\">said</a>:</p>\n<blockquote>\n<p>Btw, you mentioned that you use clippy sometimes. Don't you use it as a part of your CI pipeline with github actions or smth?</p>\n</blockquote>\n<p>No, I just run it every once in a while, if even. I guess I'm more often working on other people's projects and <code>clippy</code> is even more controversial than <code>rustfmt</code>.</p>\n</blockquote>\n<p>why do you consider it controversial? Is it because of almost every project has it's own configs?</p>",
        "id": 211116579,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600945973
    },
    {
        "content": "<p>Because I've seen people have strong feelings about some of its lints, even those enabled by default. It's not a general truth, I guess, just my impression. And yes, if a project has a <code>clippy</code> config, someone isn't happy with the defaults.</p>",
        "id": 211116636,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600946025
    },
    {
        "content": "<p>If clippy lints are uncontroversial then surely they should be in rustc?</p>",
        "id": 211116761,
        "sender_full_name": "Chris Denton",
        "timestamp": 1600946122
    },
    {
        "content": "<p>I think some of them have been migrated there, but what's even an uncontroversial lint?</p>",
        "id": 211116836,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600946170
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211116836\">said</a>:</p>\n<blockquote>\n<p>I think some of them have been migrated there, but what's even an uncontroversial lint?</p>\n</blockquote>\n<p>One that detects something dangerous and scary with acceptably low false-pos? :D</p>",
        "id": 211117018,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600946329
    },
    {
        "content": "<p>It might be an interesting (but still pointless?) exercise to crawl GitHub, looking for <code>clippy.toml</code> and <code>rustfmt.toml</code> files in valid Rust repositories, filter out the defaults, and see which settings people are changing most often.</p>",
        "id": 211117170,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600946451
    },
    {
        "content": "<p>You can also change the clippy settings using <code>#[allow(clippy::lint_name)]</code> and <code>#[deny(clippy::lint_name)]</code>.</p>",
        "id": 211117306,
        "sender_full_name": "bjorn3",
        "timestamp": 1600946560
    },
    {
        "content": "<p>Oh, right</p>",
        "id": 211117334,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600946584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211074928\">said</a>:</p>\n<blockquote>\n<p>For CI, I have <code>cargo fmt -- --check</code>. I've thought of running clippy with <code>-D all</code> in CI,  but I run it locally from time to time. And I have VS Code run rustfmt on save</p>\n</blockquote>\n<p>Do you develop in a team? It is hard to ensure everybody checks their contributions with Clippy or smth without  using as a part of CI pipeline.</p>",
        "id": 211118986,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600947756
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211033919\">said</a>:</p>\n<blockquote>\n<p>rustfmt, clippy, proptest; ide, CI</p>\n</blockquote>\n<p>It seems like opinions on Clippy were kinda divided :D Do you trust it enough to run automatically on a CI server?)</p>",
        "id": 211119221,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600947943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211083770\">said</a>:</p>\n<blockquote>\n<p>don't use rustfmt then <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>\n</blockquote>\n<p>So you don't use formatting at all?</p>",
        "id": 211119750,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600948287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343418\">James Gill</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211115259\">said</a>:</p>\n<blockquote>\n<p>Not super familiar on rustfmt (I just use it haha) but is the idea if used widely enough it keeps all rust repos universally look stylistically identical? As opposed to the prettier approach in JS where the idea is to configure it to suit your team's general consensus for a repos code style.</p>\n</blockquote>\n<p>What are tou using then if not rustfmt?)</p>",
        "id": 211120165,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600948485
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260325\">Chris Denton</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211116761\">said</a>:</p>\n<blockquote>\n<p>If clippy lints are uncontroversial then surely they should be in rustc?</p>\n</blockquote>\n<p>So you think that rustc lints should be enough for most cases?</p>",
        "id": 211120559,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600948699
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211117306\">said</a>:</p>\n<blockquote>\n<p>You can also change the clippy settings using <code>#[allow(clippy::lint_name)]</code> and <code>#[deny(clippy::lint_name)]</code>.</p>\n</blockquote>\n<p>Wow I see you've got a plenty of projects using clippy in CI on GH :D Do you find it really helpful in bug preventing?</p>",
        "id": 211121233,
        "sender_full_name": "Pavel Ignatovich",
        "timestamp": 1600949083
    },
    {
        "content": "<blockquote>\n<p>And it can be annoying for contributors: in the nightly toolchain there's often no <code>clippy</code> (also no <code>rustfmt</code>, but maybe less often) and I sometimes uninstall it to upgrade the compiler. So a nightly user might not even be able to install it.</p>\n</blockquote>\n<p>Clippy should not break anymore as it's fixed in-tree (since not a long ago,  a couple months)</p>",
        "id": 211121406,
        "sender_full_name": "Eduardo Broto",
        "timestamp": 1600949178
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"279272\">Eduardo Broto</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211121406\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>And it can be annoying for contributors: in the nightly toolchain there's often no <code>clippy</code> (also no <code>rustfmt</code>, but maybe less often) and I sometimes uninstall it to upgrade the compiler. So a nightly user might not even be able to install it.</p>\n</blockquote>\n<p>Clippy should not break anymore as it's fixed in-tree (since not a long ago,  a couple months)</p>\n</blockquote>\n<p>Ah, I forgot about that</p>",
        "id": 211121463,
        "sender_full_name": "Laurențiu",
        "timestamp": 1600949212
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"345562\">Pavel Ignatovich</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211120559\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260325\">Chris Denton</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211116761\">said</a>:</p>\n<blockquote>\n<p>If clippy lints are uncontroversial then surely they should be in rustc?</p>\n</blockquote>\n<p>So you think that rustc lints should be enough for most cases?</p>\n</blockquote>\n<p>Well I think they <em>should</em> be but whether or not they are in practice is a different question, if you see what I mean. Also clippy could include more domain specific lints whereas rustc tends to prefer lints be as widely applicable as possible (i.e. turning off rustc lints should be very rare whereas customizing clippy can be more common).</p>",
        "id": 211122493,
        "sender_full_name": "Chris Denton",
        "timestamp": 1600949859
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"345562\">Pavel Ignatovich</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211120165\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"343418\">James Gill</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211115259\">said</a>:</p>\n<blockquote>\n<p>Not super familiar on rustfmt (I just use it haha) but is the idea if used widely enough it keeps all rust repos universally look stylistically identical? As opposed to the prettier approach in JS where the idea is to configure it to suit your team's general consensus for a repos code style.</p>\n</blockquote>\n<p>What are tou using then if not rustfmt?)</p>\n</blockquote>\n<p>Hi sorry if I was unclear, if I am linting rustfmt is my choice. I am just not super familiar with the work and ecosystem around it.</p>",
        "id": 211123497,
        "sender_full_name": "James Gill",
        "timestamp": 1600950423
    },
    {
        "content": "<blockquote>\n<p>So you don't use rustfmt at all?</p>\n</blockquote>\n<p>Oh no I use rustfmt, I just resent it lmao</p>",
        "id": 211125206,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951417
    },
    {
        "content": "<p>I agree with <span class=\"user-mention silent\" data-user-id=\"256759\">boats</span>  in <a href=\"https://internals.rust-lang.org/t/experience-report-contributing-to-rust-lang-rust/12012\">https://internals.rust-lang.org/t/experience-report-contributing-to-rust-lang-rust/12012</a> that the benefits it brings are not really worth the contributing roadblocks</p>",
        "id": 211125430,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951539
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211103370\">said</a>:</p>\n<blockquote>\n<p>It's annoying to send drive-by PRs to projects that don't use <code>rustfmt</code>. \"Oh, crap, the file got auto-formatted, I should undo that [or revert my changes if there's no undo].</p>\n</blockquote>\n<p>I'd <em>hate</em> to have format-on-save, there's your first problem :P the lines are constantly moving around because rustfmt adds so much whitespace and you don't get to look at the diff to try and make it a little less awful</p>",
        "id": 211125713,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951682
    },
    {
        "content": "<blockquote>\n<p>Well I think they should be but whether or not they are in practice is a different question, if you see what I mean. Also clippy could include more domain specific lints whereas rustc tends to prefer lints be as widely applicable as possible (i.e. turning off rustc lints should be very rare whereas customizing clippy can be more common).</p>\n</blockquote>\n<p>there's work in progress uplifting several clippy lints to rustc, most notably <a href=\"https://github.com/rust-lang/rust/pull/75671\">https://github.com/rust-lang/rust/pull/75671</a></p>",
        "id": 211125996,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951831
    },
    {
        "content": "<p>I would love to have more clippy lints on by default :)</p>",
        "id": 211126006,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951843
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"345562\">Pavel Ignatovich</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211118986\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211074928\">said</a>:</p>\n<blockquote>\n<p>For CI, I have <code>cargo fmt -- --check</code>. I've thought of running clippy with <code>-D all</code> in CI,  but I run it locally from time to time. And I have VS Code run rustfmt on save</p>\n</blockquote>\n<p>Do you develop in a team? It is hard to ensure everybody checks their contributions with Clippy or smth without  using as a part of CI pipeline.</p>\n</blockquote>\n<p>I'd argue this isn't something you <em>need</em> to run in a CI pipeline</p>",
        "id": 211126053,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951869
    },
    {
        "content": "<p>the point of CI is to make sure you don't break something: 'contributions should leave the codebase better than it was': <a href=\"https://github.com/tokio-rs/tokio/blob/master/CONTRIBUTING.md#reviewing-pull-requests\">https://github.com/tokio-rs/tokio/blob/master/CONTRIBUTING.md#reviewing-pull-requests</a></p>",
        "id": 211126154,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951925
    },
    {
        "content": "<p>if it's something like 'use <code>.is_empty()</code> instead of <code>len() == 0</code>' is that really worth delaying a PR over?</p>",
        "id": 211126179,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951943
    },
    {
        "content": "<p>you can always fix it yourself in a follow-up, you know the codebase best</p>",
        "id": 211126205,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600951960
    },
    {
        "content": "<p>although maybe <code>clippy::correctness</code> should be on by default, but I'd argue those should just be rustc lints in the first place</p>",
        "id": 211126350,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600952044
    },
    {
        "content": "<p>I force push those kinds of fixes to the PR.</p>",
        "id": 211126354,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600952045
    },
    {
        "content": "<p>ah nice, that's not a bad idea</p>",
        "id": 211126388,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600952069
    },
    {
        "content": "<p>I've been hesitant to force-push in the past to avoid people being surprised</p>",
        "id": 211126405,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600952085
    },
    {
        "content": "<p>I also strive for things like “every commit (not just PR) passes CI”</p>",
        "id": 211126423,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600952098
    },
    {
        "content": "<p>So I usually have to fix something.</p>",
        "id": 211126452,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600952113
    },
    {
        "content": "<p>I find that most of my contributors are one-offs and they don’t care about me or my projects all that much.</p>",
        "id": 211126509,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600952153
    },
    {
        "content": "<p>I also use <code>clippy</code> on a \"when the mood strikes me\" schedule.</p>",
        "id": 211147454,
        "sender_full_name": "Lokathor",
        "timestamp": 1600961100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211116147\">said</a>:</p>\n<blockquote>\n<p><code>rustfmt</code> is pretty customizable, though: <a href=\"https://rust-lang.github.io/rustfmt/\">https://rust-lang.github.io/rustfmt/</a></p>\n</blockquote>\n<p>It is called \"clippy\" after all ;)</p>",
        "id": 211171746,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600972326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu Nicola</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211116297\">said</a>:</p>\n<blockquote>\n<p>and <code>clippy</code> is even more controversial than <code>rustfmt</code>.</p>\n</blockquote>\n<p>Yeah, last time I tried it enough of the suggestions were \"no thanks\" that I just never ran it again.</p>\n<p>I have heard that things are better lately, and there are certainly a bunch of great lints in it, though.</p>",
        "id": 211179430,
        "sender_full_name": "scottmcm",
        "timestamp": 1600976042
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/Rust.20code.20analysis/near/211126179\">said</a>:</p>\n<blockquote>\n<p>if it's something like 'use <code>.is_empty()</code> instead of <code>len() == 0</code>' is that really worth delaying a PR over?</p>\n</blockquote>\n<p>hmm, maybe there should be a <code>Len</code> trait that provides <code>is_empty()</code></p>",
        "id": 211179543,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600976093
    },
    {
        "content": "<p>clippy suggests adding <code>is_empty()</code> if you have <code>len()</code> IIRC</p>",
        "id": 211179565,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600976106
    },
    {
        "content": "<p>Some conversation about the right place for <code>.is_empty()</code>: <a href=\"https://github.com/rust-lang/rust/issues/35428#issuecomment-303639055\">https://github.com/rust-lang/rust/issues/35428#issuecomment-303639055</a></p>",
        "id": 211180630,
        "sender_full_name": "scottmcm",
        "timestamp": 1600976676
    }
]