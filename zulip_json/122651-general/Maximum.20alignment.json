[
    {
        "content": "<p>What's the maximum alignment of a Rust type? I don't know of any type with an alignment of greater than 8...</p>",
        "id": 263106936,
        "sender_full_name": "nnethercote",
        "timestamp": 1638254695
    },
    {
        "content": "<p>(I'm not planning to assume anything based on this, just curious)</p>",
        "id": 263106939,
        "sender_full_name": "nnethercote",
        "timestamp": 1638254703
    },
    {
        "content": "<p>Are there some SIMD types with alignment of 16 or higher?</p>",
        "id": 263106957,
        "sender_full_name": "nnethercote",
        "timestamp": 1638254726
    },
    {
        "content": "<p>Maximum allowed alignment, or maximum default alignment if you <em>don't</em> change it with an align attribute?</p>",
        "id": 263106962,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638254738
    },
    {
        "content": "<p>For the former, I think the answer is 4096; I think I remember us defining that as the maximum allowed alignment a while back.</p>",
        "id": 263107123,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638254938
    },
    {
        "content": "<p>well this builds</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[repr(align(8192))]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>i think llvm allows up to <code>1 &lt;&lt; 32</code>, but i think that rust doesn't want to try and provide this because it's not very portable and if you go over the alignment limit that a platform supports then sometimes the value can just not actually be aligned and it becomes UB.</p>",
        "id": 263107920,
        "sender_full_name": "Lokathor",
        "timestamp": 1638255981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> <a href=\"#narrow/stream/122651-general/topic/Maximum.20alignment/near/263106957\">said</a>:</p>\n<blockquote>\n<p>Are there some SIMD types with alignment of 16 or higher?</p>\n</blockquote>\n<p>I believe that the 256-bit and 512-bit types are aligned to an equivalent number of bits.</p>",
        "id": 263108204,
        "sender_full_name": "Lokathor",
        "timestamp": 1638256344
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> I think you may be right, we might not have actually restricted repr(align).</p>",
        "id": 263110009,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638258378
    },
    {
        "content": "<p>The release notes mention us restricting it to 2^29 a few years ago.</p>",
        "id": 263110016,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638258394
    },
    {
        "content": "<p>I thought we did more, but perhaps we didn't.</p>",
        "id": 263110019,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638258399
    },
    {
        "content": "<p>There's also this <a href=\"https://github.com/rust-lang/rust/issues/70022\">https://github.com/rust-lang/rust/issues/70022</a> and a few similar issues around big alignments. Seems problematic on windows</p>",
        "id": 263116332,
        "sender_full_name": "panstromek",
        "timestamp": 1638263153
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/Maximum.20alignment/near/263110016\">said</a>:</p>\n<blockquote>\n<p>The release notes mention us restricting it to 2^29 a few years ago.</p>\n</blockquote>\n<p><a href=\"https://llvm.org/docs/LangRef.html#global-variables\">https://llvm.org/docs/LangRef.html#global-variables</a> confirms their restriction is <code>1 &lt;&lt; 32</code> now.  But I also remember there being a limit -- which I thought was also in LLVM -- of <code>1 &lt;&lt; 27</code> at one point.</p>\n<p>But +1 that it's probably best to avoid anything over 512, and definitely avoid anything over 4096.</p>",
        "id": 263117048,
        "sender_full_name": "scottmcm",
        "timestamp": 1638263595
    },
    {
        "content": "<p>Ah, <code>repr(align)</code> will be useful, thanks!</p>",
        "id": 263210220,
        "sender_full_name": "nnethercote",
        "timestamp": 1638307113
    },
    {
        "content": "<p>I'm asking because I'm thinking again about redoing <code>ThinVec</code> to be a single word to a heap allocation of the form <code>[len, cap, elem1, elem2, ...]</code> and this is relevant to the positioning of <code>elem1</code>.</p>",
        "id": 263210300,
        "sender_full_name": "nnethercote",
        "timestamp": 1638307157
    },
    {
        "content": "<p>You can have <code>cap</code> and <code>len</code> at a negative offset from the pointer.</p>",
        "id": 263224468,
        "sender_full_name": "Amanieu",
        "timestamp": 1638315386
    },
    {
        "content": "<p>The only tricky part is reconstructing the original pointer for deallocation.</p>",
        "id": 263224484,
        "sender_full_name": "Amanieu",
        "timestamp": 1638315407
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> <a href=\"#narrow/stream/122651-general/topic/Maximum.20alignment/near/263106957\">said</a>:</p>\n<blockquote>\n<p>Are there some SIMD types with alignment of 16 or higher?</p>\n</blockquote>\n<p>Verifying what Lokathor said: yes. <code>__mm256</code> and <code>__mm512</code> are in fact aligned to 32 and 64 bytes.</p>\n<p>Other architectures, including ones with even bigger vectors(!), align their vectors to ~16 bytes or <em>less</em>, oddly, so I am not aware of any data types with more.</p>",
        "id": 263235444,
        "sender_full_name": "Jubilee",
        "timestamp": 1638323859
    },
    {
        "content": "<p>I've heard of some people using 4096 bytes on some types to help ensure that they line up with OS pages, but that's kinda out there.</p>",
        "id": 263240032,
        "sender_full_name": "Lokathor",
        "timestamp": 1638329047
    },
    {
        "content": "<p>Ah yeah, you can force that. Implicit qualif \"natural datatype\" to the ABI.</p>",
        "id": 263242397,
        "sender_full_name": "Jubilee",
        "timestamp": 1638331831
    }
]