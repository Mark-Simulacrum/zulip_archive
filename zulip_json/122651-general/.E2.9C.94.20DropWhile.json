[
    {
        "content": "<p>skip_while?</p>",
        "id": 262197339,
        "sender_full_name": "kennytm",
        "timestamp": 1637432655
    },
    {
        "content": "<p>exactly what I need. Was hard to google :) thanks</p>",
        "id": 262197369,
        "sender_full_name": "Scorpil",
        "timestamp": 1637432717
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125254\">kennytm</span> has marked this topic as resolved.</p>",
        "id": 262197434,
        "sender_full_name": "Notification Bot",
        "timestamp": 1637432785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"457214\">@Scorpil</span> I would be happy to approve a PR adding a doc alias, since this is a reasonable alternate name people might expect.</p>",
        "id": 262203352,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637440670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> : I have sent a pull-request over for this.https://github.com/rust-lang/rust/pull/91383 <br>\nThis is my first pull request in a while - I contributed a couple of patches pre-Rust 1.0 and early cargo. I tried to follow the rustc-dev guide as closely as possible. Hope it looks ok.</p>",
        "id": 263102565,
        "sender_full_name": "Ashok Gautham Jadatharan",
        "timestamp": 1638248935
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"322390\">@Ashok Gautham Jadatharan</span> Looks great, thank you!</p>",
        "id": 263102923,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638249363
    },
    {
        "content": "<p>Just approved it.</p>",
        "id": 263102952,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638249368
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Is there a reason why you didn't mark it as rollup=always?</p>",
        "id": 263106550,
        "sender_full_name": "fee1-dead",
        "timestamp": 1638254190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361356\">@fee1-dead</span> I don't have a strong sense for how much effect <code>rollup=always</code> is a signal, in part because it seems like everything I approve generally gets rolled up whether I mark it as such or not, and only <code>rollup=never</code> has an effect.</p>",
        "id": 263106811,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638254541
    },
    {
        "content": "<p>I think it's certainly appropriate to roll up.</p>",
        "id": 263106822,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638254572
    },
    {
        "content": "<p>I think I just don't have a good model for \"how much effort should I put into thinking about whether any given change is <code>rollup=always</code> material\".</p>",
        "id": 263106853,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638254635
    },
    {
        "content": "<p><code>rollup=always</code> are always lower priority than the default in the queue. If we don't make rollup PRs then PRs with the default settings will be tested individually first. bors isn't always trying rollup PRs since we don't instantly create another rollup PR after a rollup PR has been tested.</p>",
        "id": 263107917,
        "sender_full_name": "fee1-dead",
        "timestamp": 1638255974
    },
    {
        "content": "<p>Just marked it as <code>rollup=always</code>.</p>",
        "id": 263107940,
        "sender_full_name": "fee1-dead",
        "timestamp": 1638256029
    },
    {
        "content": "<p>Ah, I see. So, less \"hint to the people doing rollups\" and more \"tell bors not to eagerly take this one when there are other things to do\"?</p>",
        "id": 263108021,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638256105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/.E2.9C.94.20DropWhile/near/263106811\">said</a>:</p>\n<blockquote>\n<p>in part because it seems like everything I approve generally gets rolled up whether I mark it as such or not</p>\n</blockquote>\n<p>The default is <code>rollup=maybe</code>, which will most likely be included in a rollup should someone make one.  There's <code>rollup=iffy</code> if you want something less jump-the-queue than <code>rollup=never</code> is, but still want to have rollup-makers be less likely to include it.</p>\n<p>As for a model, maybe \"The only things this changes are things that the PR build covers fine, so the odds of failing the rollup are essentially zero\" -- which generally means things like comments and docs that have no platform-specific behaviour.</p>\n<p>(In the other direction, I've taken to putting <code>rollup=iffy</code> on anything I write that has a codegen test, since I've had those fail on weird platforms so many times even when they pass reliably locally and in the PR build.)</p>",
        "id": 263116819,
        "sender_full_name": "scottmcm",
        "timestamp": 1638263428
    }
]