[
    {
        "content": "<p>Is there a reason that <a href=\"https://doc.rust-lang.org/std/panic/struct.Location.html#method.caller\"><code>Location::caller()</code></a> isn't a <code>const fn</code>? Ideally I'd like to be able to do something like this if at all possible</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[track_caller]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">NAME</span>: <span class=\"kp\">&amp;</span><span class=\"kt\">str</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">caller</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Location</span>::<span class=\"n\">caller</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">const_format</span>::<span class=\"n\">formatcp</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"s\">\"Called `foo()` @ {}:{}:{}\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">caller</span><span class=\"p\">.</span><span class=\"n\">file</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">caller</span><span class=\"p\">.</span><span class=\"n\">line</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">caller</span><span class=\"p\">.</span><span class=\"n\">column</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 241658397,
        "sender_full_name": "Chase Wilson",
        "timestamp": 1622930848
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/76156\">#76156</a> may or may not be helpful.</p>\n<p>-Me, a Random Nonexpert Person</p>",
        "id": 241658512,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1622931008
    },
    {
        "content": "<p>I don't think that would work even if it was</p>",
        "id": 241659015,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1622931916
    },
    {
        "content": "<p>since the <code>const</code> initializer is called by the compiler, not by <code>foo</code></p>",
        "id": 241659081,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1622932016
    },
    {
        "content": "<p>Putting aside the named constant too then, it could be used within a <code>const fn</code> or an inline <code>const { }</code> block without dealing with problems of depending on the surrounding function</p>",
        "id": 241659583,
        "sender_full_name": "Chase Wilson",
        "timestamp": 1622932976
    }
]