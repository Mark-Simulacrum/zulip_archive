[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> WDYT of this wording</p>\n<blockquote>\n<p>Please help the Rust team gauge how we're doing, what can be improved, and how we can best engage with all of you as we move forward by taking the 2018 Rust Survey!</p>\n</blockquote>",
        "id": 132655244,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535051147
    },
    {
        "content": "<p>feels a bit stilted to me</p>",
        "id": 132655246,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535051157
    },
    {
        "content": "<p>Current aesthetics  </p>\n<p><a href=\"/user_uploads/4715/M30fq-Y4VxQ1immxwELsPSfQ/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/M30fq-Y4VxQ1immxwELsPSfQ/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/M30fq-Y4VxQ1immxwELsPSfQ/pasted_image.png\"></a></div>",
        "id": 132655467,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535051483
    },
    {
        "content": "<p>maybe the wording from the <a href=\"https://blog.rust-lang.org/2018/08/08/survey.html\" target=\"_blank\" title=\"https://blog.rust-lang.org/2018/08/08/survey.html\">blog post</a> could work ? \"Time for us to take a look at how the Rust project is doing, and what we should plan for the future\"</p>",
        "id": 132655773,
        "sender_full_name": "lqd",
        "timestamp": 1535051982
    },
    {
        "content": "<p>\"We want to know your opinions! Your responses to the 2018 State of Rust Survey will help the project understand its strengths and weaknesses and establish development priorities for the future\" maybe too \"stilted\" here as well ?</p>",
        "id": 132656021,
        "sender_full_name": "lqd",
        "timestamp": 1535052342
    },
    {
        "content": "<p>Definitely want a call-to-action phrasing, your second seems reasonable</p>",
        "id": 132657247,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535054079
    },
    {
        "content": "<p>A little tinge of blue helps...</p>\n<p><a href=\"/user_uploads/4715/6yji9wF-PpzZihbsIEaija8I/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/6yji9wF-PpzZihbsIEaija8I/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/6yji9wF-PpzZihbsIEaija8I/pasted_image.png\"></a></div>",
        "id": 132660738,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535058302
    },
    {
        "content": "<p>a bit more padding inside the box maybe ? it looks a bit tight esp on the left side :)</p>",
        "id": 132675537,
        "sender_full_name": "lqd",
        "timestamp": 1535083968
    },
    {
        "content": "<p>oh but it's online already, then nothing to worry about</p>",
        "id": 132675706,
        "sender_full_name": "lqd",
        "timestamp": 1535084298
    },
    {
        "content": "<p>(maybe a <code>target=\"_blank\"</code> so that the survey opens in a new tab ?)</p>",
        "id": 132684138,
        "sender_full_name": "lqd",
        "timestamp": 1535099682
    },
    {
        "content": "<p>Here's a wide-open call â€” anyone know of any good (free) metrics services?</p>",
        "id": 132884736,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535409707
    },
    {
        "content": "<p>I'd love to track some things like the requests to the playground and be able to break them down by parameter (\"how many people are using stable / beta / nightly\") and some performance stats (\"building code has been trending slower\")</p>",
        "id": 132884810,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535409809
    },
    {
        "content": "<p>Might be easiest to just have a JSON file with counters for that sort of thing</p>",
        "id": 132889896,
        "sender_full_name": "simulacrum",
        "timestamp": 1535419358
    },
    {
        "content": "<p>That's perf.r-l.o's 'simple DB' approach because I wanted to be able to edit it</p>",
        "id": 132889901,
        "sender_full_name": "simulacrum",
        "timestamp": 1535419375
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I was actually thinking that I'd do that anyway since most services have a cap on retention for the free plan</p>",
        "id": 132890899,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535421342
    },
    {
        "content": "<p>but then I have the problem of a bunch of JSON files lying about; what's a good way to visualize them?</p>",
        "id": 132890944,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535421380
    },
    {
        "content": "<p>hm, I'd imagine you'd just have the single one based on what you've talked about so far, but maybe I misinterpreted?</p>",
        "id": 132890952,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421408
    },
    {
        "content": "<p>that is essentially ~3 counters and maybe an array or something</p>",
        "id": 132890958,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421433
    },
    {
        "content": "<p>\"bunch\" ~= over time</p>",
        "id": 132891005,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535421496
    },
    {
        "content": "<p>but in general I mean \"data in a JSON file\"</p>",
        "id": 132891015,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535421542
    },
    {
        "content": "<p>well, there's two ways of representing that; perf.rlo went with the approach of having all the files loaded into memory and then we draw graphs etc -- you could probably use a lot of the same infrastructure if you wanted to</p>",
        "id": 132891017,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421543
    },
    {
        "content": "<p>graphs are drawn via Rust backend processing data and JS frontend with a charts library</p>",
        "id": 132891024,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421570
    },
    {
        "content": "<p>Was that sort of what you wanted to ask about?</p>",
        "id": 132891099,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421704
    },
    {
        "content": "<p>Would you expect very free-form schema like <code>{path: '/api/execute', channel:'stable', mode:'debug', duration: 1.24}</code> and then maybe <code>{path: '/api/clippy', duration: 0.99}</code> and <code>{path:'/api/assemble', flavor:'intel'}</code></p>",
        "id": 132891142,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535421778
    },
    {
        "content": "<p>and all just one-data-point per line</p>",
        "id": 132891149,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535421819
    },
    {
        "content": "<p>Generally I would try and start off with asking questions -- that is, what are you interested in knowing?</p>\n<p>I think for playground at least for me I would be interested in:<br>\n - What is the percentage of users for stable/beta/nightly?<br>\n - How many uses of compile debug vs. release?<br>\n - How many uses of the non-standard LLVM/MIR/etc?<br>\n - What crates are most used?</p>\n<p>Maybe some more</p>",
        "id": 132891153,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421832
    },
    {
        "content": "<blockquote>\n<p>start off with asking questions</p>\n</blockquote>\n<p>I know this to be the right thing, but I'm also in fear of not having data at hand when some decision needs to be made</p>",
        "id": 132891213,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535421919
    },
    {
        "content": "<p>That's a similar format to what perf uses, yeah -- if you <code>python -m json.tool</code> one of the data files in rustc-timing/times then you'll quickly see the exact format. However, I'd maybe go with a different one for your purposes</p>",
        "id": 132891215,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421924
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>start off with asking questions</p>\n</blockquote>\n<p>I know this to be the right thing, but I'm also in fear of not having data at hand when some decision needs to be made</p>\n</blockquote>\n<p>If you think that my proposed questions are good then I use them to figure out what data I want to collect</p>",
        "id": 132891264,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421969
    },
    {
        "content": "<p>(Right now I get the impression that might not be entirely clear)</p>",
        "id": 132891265,
        "sender_full_name": "simulacrum",
        "timestamp": 1535421978
    },
    {
        "content": "<p>Anyway -- I need to run for a bit but will be back later; I'd probably get a solid idea of what data you want to collect and maybe just start with collecting it (the format you proposed seems pretty good, can be relatively easily put into some other format if necessary).</p>",
        "id": 132891285,
        "sender_full_name": "simulacrum",
        "timestamp": 1535422071
    },
    {
        "content": "<p>For example, an unnamed compiler developer (let's call them \"e. b.\") said the playground should switch the default assembly output format \"because everyone changes that setting\".</p>\n<p>because I haven't already been collecting that usage data, I can't make any decisions now. at best I can start logging that and then wait until \"enough\" data has been collected</p>",
        "id": 132891387,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535422211
    },
    {
        "content": "<p>I don't know how long is \"enough\" because I also don't have that level of insight ;-) I can barely state that I know the playground is used</p>",
        "id": 132891391,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535422252
    },
    {
        "content": "<p><a href=\"https://github.com/integer32llc/rust-playground/issues/288\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/issues/288\">https://github.com/integer32llc/rust-playground/issues/288</a></p>",
        "id": 132891516,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535422520
    },
    {
        "content": "<p>We also had the question of \"how often was the run/LLVM/ASM/MIR button\" clicked when we redid the UI and everyone was like \"but muh dedicated LLVM IR button\"</p>",
        "id": 132891559,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535422579
    },
    {
        "content": "<p>was that before the button persisted on the last output used?</p>",
        "id": 132891881,
        "sender_full_name": "memoryruins",
        "timestamp": 1535423221
    },
    {
        "content": "<p>either way, love that it does it now</p>",
        "id": 132891889,
        "sender_full_name": "memoryruins",
        "timestamp": 1535423229
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125246\">@memoryruins</span> that question was raised when we moved from distinct top-level buttons to the menu one now. There was a vocal component of people who were aghast because now they'd have to click twice to get their MIR <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 132893084,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535425627
    },
    {
        "content": "<p>but I agree that the sticky mode is better. It was always part of the plan when we created the menu, but it took months for anyone to actaully file an issue requesting it</p>",
        "id": 132893090,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535425672
    },
    {
        "content": "<p>but it would have been nice to be able to say \"98% of the clicks were for run, and 0.1% for for LLVM IR, they don't both get to be top-level buttons\"</p>",
        "id": 132893134,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535425724
    },
    {
        "content": "<p>the little details like \"show\" mir and handling when there is no main() is also appreciated :)</p>",
        "id": 132934997,
        "sender_full_name": "memoryruins",
        "timestamp": 1535482031
    },
    {
        "content": "<blockquote>\n<p>Here's a wide-open call â€” anyone know of any good (free) metrics services?</p>\n</blockquote>\n<p>coming late to the discussion, but you mean metrics as in google analytics-like or just metrics, like prometheus metrics?</p>",
        "id": 132948572,
        "sender_full_name": "qmx",
        "timestamp": 1535486040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> no such thing as \"too late\" here</p>",
        "id": 132950578,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535488399
    },
    {
        "content": "<p>And I think part of the problem (echoing <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>'s points about what questions do I want to answer) is that I'm not sure what I want</p>",
        "id": 132950593,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535488436
    },
    {
        "content": "<p>We've had two concrete questions that I can point to (<a href=\"https://github.com/integer32llc/rust-playground/issues/288\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/issues/288\">https://github.com/integer32llc/rust-playground/issues/288</a>)</p>",
        "id": 132950643,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535488459
    },
    {
        "content": "<p>1. what's the relative breakdown of run / build / test / llvm / asm / mir / rustfmt / ...<br>\n2. what options do people use (e.g. assembly flavor, channel, mode)</p>",
        "id": 132950709,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535488560
    },
    {
        "content": "<p>There's been back-back-burner ideas for things like \"what features do people use\" and \"what errors arise most frequently\", but that requires even deeper introspection so I'm not worried about it for now</p>",
        "id": 132950770,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535488614
    },
    {
        "content": "<p>for the backend, prometheus metrics  are super easy to add and bring a ton of value</p>",
        "id": 132951562,
        "sender_full_name": "qmx",
        "timestamp": 1535489523
    },
    {
        "content": "<p>you can technically have those pushed from your frontend to your backend via side channels</p>",
        "id": 132951585,
        "sender_full_name": "qmx",
        "timestamp": 1535489546
    },
    {
        "content": "<p>the nice thing is being able not only to expose those as grafana dashboards, but potentially warehouse this data as you please</p>",
        "id": 132951604,
        "sender_full_name": "qmx",
        "timestamp": 1535489581
    },
    {
        "content": "<p>(that's literally what I'm doing at my dayjob, warehousing metrics and sprinkling data-sciency stuff on top)</p>",
        "id": 132951625,
        "sender_full_name": "qmx",
        "timestamp": 1535489607
    },
    {
        "content": "<p>Yeah, I'd probably start with just backend metrics. Easier to add and not as obtrusive. Doesn't help with the always relevant question \"do I really need to support X browser still\"</p>",
        "id": 132952250,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535490296
    },
    {
        "content": "<p>I'd probably want to \"warehouse\" to local files and periodically copy those somewhere, just to avoid setting up more servers</p>",
        "id": 132952288,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535490354
    },
    {
        "content": "<p>Then dump those into something local for visualization</p>",
        "id": 132952375,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535490435
    },
    {
        "content": "<p>the rust prometheus client is pretty decent, although I still dream of finding time to make it easier to use by providing some procedural macros</p>",
        "id": 132953200,
        "sender_full_name": "qmx",
        "timestamp": 1535491438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> is it within the Prometheus conceptual model to log stats to a local file and then later (maybe weeks/months later) on actually ingest them?</p>",
        "id": 132955101,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535493643
    },
    {
        "content": "<p>not really, your backend app exposes counters and prometheus scrapes them</p>",
        "id": 132955425,
        "sender_full_name": "qmx",
        "timestamp": 1535494034
    },
    {
        "content": "<p>and you get a timeseries of all this data with a fancy querying mechanism</p>",
        "id": 132955441,
        "sender_full_name": "qmx",
        "timestamp": 1535494062
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> for better or worse, the playground service restarts every so often (hour? 15 min?) because Im too lazy to do better. what happens to metrics when the server restarts? it seems like all of this would be in memory until its scraped</p>",
        "id": 132955676,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535494280
    },
    {
        "content": "<p>theoretically you just scrape it more often so it doesn't lose that much data</p>",
        "id": 132955745,
        "sender_full_name": "qmx",
        "timestamp": 1535494332
    },
    {
        "content": "<p>like, every 15s prometheus makes a request to the <code>/metrics</code> endpoint of your app</p>",
        "id": 132955757,
        "sender_full_name": "qmx",
        "timestamp": 1535494354
    },
    {
        "content": "<p>what happens when the scraper doesnt scrape? infinite memory usage?</p>",
        "id": 132955797,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535494425
    },
    {
        "content": "<p>nope</p>",
        "id": 132955845,
        "sender_full_name": "qmx",
        "timestamp": 1535494462
    },
    {
        "content": "<p>we're talking about metrics, so you end up having just a few counters in memory</p>",
        "id": 132955848,
        "sender_full_name": "qmx",
        "timestamp": 1535494481
    },
    {
        "content": "<p>like \"MIR dump requests\"=3</p>",
        "id": 132955854,
        "sender_full_name": "qmx",
        "timestamp": 1535494497
    },
    {
        "content": "<p>it detect counter resets</p>",
        "id": 132955931,
        "sender_full_name": "qmx",
        "timestamp": 1535494583
    },
    {
        "content": "<p>im missing how things like \"request duration\" work. is aggregation done in my app?</p>",
        "id": 132955951,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535494625
    },
    {
        "content": "<p>it can do, yes</p>",
        "id": 132956048,
        "sender_full_name": "qmx",
        "timestamp": 1535494746
    },
    {
        "content": "<p>histograms, percentiles, etc</p>",
        "id": 132956055,
        "sender_full_name": "qmx",
        "timestamp": 1535494756
    },
    {
        "content": "<p><a href=\"https://prometheus.io/docs/practices/histograms/#count-and-sum-of-observations\" target=\"_blank\" title=\"https://prometheus.io/docs/practices/histograms/#count-and-sum-of-observations\">https://prometheus.io/docs/practices/histograms/#count-and-sum-of-observations</a></p>",
        "id": 132956063,
        "sender_full_name": "qmx",
        "timestamp": 1535494784
    },
    {
        "content": "<p>there's a lot of useful stuff there, but if you never played with it it can look kinda overwhelming</p>",
        "id": 132956141,
        "sender_full_name": "qmx",
        "timestamp": 1535494843
    },
    {
        "content": "<p>I've been skimming</p>",
        "id": 132956169,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535494893
    },
    {
        "content": "<p>part of the problem is that I'm used to newrelic and loggly</p>",
        "id": 132956175,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535494913
    },
    {
        "content": "<p>which both are very powerful and I can retroactively go back and dig into things</p>",
        "id": 132956238,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535494969
    },
    {
        "content": "<p>For example, we wanted to see if an endpoint was still in use. I could show all requests by controller / action over the last month easily with loggly</p>",
        "id": 132956345,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535495110
    },
    {
        "content": "<p>yea, it's just a different approach</p>",
        "id": 132956406,
        "sender_full_name": "qmx",
        "timestamp": 1535495166
    },
    {
        "content": "<p>It's possible something like greylog is more my speed</p>",
        "id": 132957081,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535495983
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/dNtw-amZHjmEcu2APqvTKMg1/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/dNtw-amZHjmEcu2APqvTKMg1/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/dNtw-amZHjmEcu2APqvTKMg1/pasted_image.png\"></a></div><p>Some data out of graylog for the last ~100 MB of access log.</p>",
        "id": 133033320,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535593992
    },
    {
        "content": "<p>Now I just need to start recording more fine-grained detail...</p>",
        "id": 133033322,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1535594025
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/UR09e9bfErQxvQPYfGR2UopY/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/UR09e9bfErQxvQPYfGR2UopY/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/UR09e9bfErQxvQPYfGR2UopY/pasted_image.png\"></a></div><p>Seeking design feedback /cc <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 133952396,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536932102
    },
    {
        "content": "<p>I'm not in love with putting the versions above the description</p>",
        "id": 133952421,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536932123
    },
    {
        "content": "<p>I'd mute the version with a dark grey so they don't stand out the same.</p>",
        "id": 133952433,
        "sender_full_name": "davidtwco",
        "timestamp": 1536932132
    },
    {
        "content": "<p>Comparison with existing stuff with versions: </p>\n<p><a href=\"/user_uploads/4715/ps-QDKESx9ewM_sJyyiRgL4R/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ps-QDKESx9ewM_sJyyiRgL4R/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/ps-QDKESx9ewM_sJyyiRgL4R/pasted_image.png\"></a></div>",
        "id": 133952493,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536932164
    },
    {
        "content": "<p>It's a bit different with the Rust versions because the description is essentially the version. Whereas the tools have a description that's more separate than the version.</p>",
        "id": 133952527,
        "sender_full_name": "davidtwco",
        "timestamp": 1536932211
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> you'd keep the version between the name and description though?</p>",
        "id": 133952556,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536932250
    },
    {
        "content": "<p>maybe move the version after the description ?</p>",
        "id": 133952621,
        "sender_full_name": "lqd",
        "timestamp": 1536932299
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/9_nZ3LMzVko5kGSQheacuoL8/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/9_nZ3LMzVko5kGSQheacuoL8/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/9_nZ3LMzVko5kGSQheacuoL8/pasted_image.png\"></a></div>",
        "id": 133952637,
        "sender_full_name": "davidtwco",
        "timestamp": 1536932341
    },
    {
        "content": "<p>Like that, looks the same with the Rust versions so it is consistent.</p>",
        "id": 133952651,
        "sender_full_name": "davidtwco",
        "timestamp": 1536932360
    },
    {
        "content": "<p>placing it to the right of the names with a muted grey</p>",
        "id": 133952654,
        "sender_full_name": "memoryruins",
        "timestamp": 1536932365
    },
    {
        "content": "<p>might look good</p>",
        "id": 133952659,
        "sender_full_name": "memoryruins",
        "timestamp": 1536932371
    },
    {
        "content": "<p>the grey helps</p>",
        "id": 133952664,
        "sender_full_name": "memoryruins",
        "timestamp": 1536932385
    },
    {
        "content": "<p>to the right is probably not going to fly since keyboard shortcuts can go there</p>",
        "id": 133952665,
        "sender_full_name": "lqd",
        "timestamp": 1536932385
    },
    {
        "content": "<p>Right aligning on the same level as the title isn't a bad idea, yeah.</p>",
        "id": 133952666,
        "sender_full_name": "davidtwco",
        "timestamp": 1536932385
    },
    {
        "content": "<p>That's a good point too.</p>",
        "id": 133952729,
        "sender_full_name": "davidtwco",
        "timestamp": 1536932406
    },
    {
        "content": "<p>my guess is: grey + on the last line</p>",
        "id": 133952757,
        "sender_full_name": "lqd",
        "timestamp": 1536932439
    },
    {
        "content": "<p>doesnt have to be all the way to the right, even a distance of one or two spaces from the name</p>",
        "id": 133952771,
        "sender_full_name": "memoryruins",
        "timestamp": 1536932454
    },
    {
        "content": "<p>(i would mock up example if i wasnt on mobile)</p>",
        "id": 133952827,
        "sender_full_name": "memoryruins",
        "timestamp": 1536932520
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/n9pNAt64K6s33flj-yN4RNJe/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/n9pNAt64K6s33flj-yN4RNJe/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/n9pNAt64K6s33flj-yN4RNJe/pasted_image.png\"></a></div>",
        "id": 133952912,
        "sender_full_name": "lqd",
        "timestamp": 1536932578
    },
    {
        "content": "<p>looks good ^^</p>",
        "id": 133953194,
        "sender_full_name": "memoryruins",
        "timestamp": 1536932852
    },
    {
        "content": "<p>I was also thinking about right of the name, but there's not much room for SHA + date there. Splitting it seemed silly.</p>",
        "id": 133953196,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536932854
    },
    {
        "content": "<p>an older example with shortcuts, and the long version strings might not fit to the right</p>",
        "id": 133953197,
        "sender_full_name": "lqd",
        "timestamp": 1536932856
    },
    {
        "content": "<p>stays out of the way</p>",
        "id": 133953200,
        "sender_full_name": "memoryruins",
        "timestamp": 1536932862
    },
    {
        "content": "<p>Lemme move that around</p>",
        "id": 133953211,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536932874
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/7548tygStz48VrKEwLrJ2eXE/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/7548tygStz48VrKEwLrJ2eXE/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/7548tygStz48VrKEwLrJ2eXE/pasted_image.png\"></a></div>",
        "id": 133953217,
        "sender_full_name": "lqd",
        "timestamp": 1536932880
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/TR4vWQqKTTWCW9wqri9srhlW/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/TR4vWQqKTTWCW9wqri9srhlW/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/TR4vWQqKTTWCW9wqri9srhlW/pasted_image.png\"></a></div>",
        "id": 133953442,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536933024
    },
    {
        "content": "<p>Can you detect the platform to work out what shortcut should be shown?</p>",
        "id": 133953512,
        "sender_full_name": "davidtwco",
        "timestamp": 1536933098
    },
    {
        "content": "<p>Everything is possible with <del>zombo.com</del> JavaScript</p>",
        "id": 133953747,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536933266
    },
    {
        "content": "<p>also <a href=\"https://pbs.twimg.com/media/Dmyoex5XgAA0M3t.jpg\" target=\"_blank\" title=\"https://pbs.twimg.com/media/Dmyoex5XgAA0M3t.jpg\">with UB</a></p>\n<div class=\"message_inline_image\"><a href=\"https://pbs.twimg.com/media/Dmyoex5XgAA0M3t.jpg\" target=\"_blank\" title=\"with UB\"><img src=\"https://pbs.twimg.com/media/Dmyoex5XgAA0M3t.jpg\"></a></div>",
        "id": 133953807,
        "sender_full_name": "lqd",
        "timestamp": 1536933347
    },
    {
        "content": "<p>(we can also prefix the string they return with \"version \" for extra clarity if need be)</p>",
        "id": 133953904,
        "sender_full_name": "lqd",
        "timestamp": 1536933419
    },
    {
        "content": "<p>I was wondering if that was on purpose in your mock. What kind of confusion do you think leaving it off might cause?</p>",
        "id": 133954051,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1536933531
    },
    {
        "content": "<p>I don't think there <em>will be</em> confusion in real life; just unsure if those could be seen as random numbers, or if people don't know that those are external tools, with their own lifecycle, version, release, etc</p>",
        "id": 133954391,
        "sender_full_name": "lqd",
        "timestamp": 1536933782
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> I wonder if there's an easy way I can find all the \"unimportant\" stuff in a crate directory to delete it</p>",
        "id": 134012030,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017522
    },
    {
        "content": "<p>Like, the playground doesn't need tests / examples from crates</p>",
        "id": 134012038,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017563
    },
    {
        "content": "<p>interesting</p>",
        "id": 134012082,
        "sender_full_name": "lqd",
        "timestamp": 1537017606
    },
    {
        "content": "<p>just to save space you mean ?</p>",
        "id": 134012100,
        "sender_full_name": "lqd",
        "timestamp": 1537017644
    },
    {
        "content": "<p>Yeah. For example, I learned that the docs for a single toolchain take up 300MB</p>",
        "id": 134012106,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017676
    },
    {
        "content": "<p>Completely unneeded</p>",
        "id": 134012107,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017683
    },
    {
        "content": "<p>it's going to be tough to know for the ones with a <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a></p>",
        "id": 134012109,
        "sender_full_name": "lqd",
        "timestamp": 1537017709
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>337MB cargo build --release\n693MB cargo build\n337MB cargo fetch\n</pre></div>",
        "id": 134012147,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017725
    },
    {
        "content": "<p>(amount of space taken by each step)</p>",
        "id": 134012152,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017738
    },
    {
        "content": "<p>It's true that <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> makes things complicated, but I wonder if there's easy high-level checks</p>",
        "id": 134012224,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017954
    },
    {
        "content": "<p>Maybe \"keep any directory that contains a <code>.rs</code> except <code>/examples</code> and <code>/tests</code>\"</p>",
        "id": 134012265,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537017985
    },
    {
        "content": "<p>we might need to look around at what cargo offers API-wise, for what it looks for when it compiles a crate ?</p>",
        "id": 134012273,
        "sender_full_name": "lqd",
        "timestamp": 1537018030
    },
    {
        "content": "<p>course, anything like this would only affect the \"cargo fetch\" step, as thats the source. the build steps would be unchanged</p>",
        "id": 134012302,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537018082
    },
    {
        "content": "<p>cargo.toml can contain a list of examples (as we've learned with hyper) (and benchmarks)</p>",
        "id": 134012315,
        "sender_full_name": "lqd",
        "timestamp": 1537018095
    },
    {
        "content": "<p>so, question about playground UX - I've spent a pretty good chunk of time trying to find a \"new\" button to clear the editor buffer, until I got fed up, selected the text and deleted it</p>",
        "id": 134099352,
        "sender_full_name": "qmx",
        "timestamp": 1537189801
    },
    {
        "content": "<p>shouldn't we have a button like this?</p>",
        "id": 134099403,
        "sender_full_name": "qmx",
        "timestamp": 1537189817
    },
    {
        "content": "<p>I dunno, I guess I too just resort to \"Select All and Clear\", since Ctrl-A (or Command-A on mac) seems to work quickly enough for selecting all.</p>",
        "id": 134100266,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537190837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116013\">@qmx</span> <a href=\"https://github.com/integer32llc/rust-playground/issues/323\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/issues/323\">https://github.com/integer32llc/rust-playground/issues/323</a></p>",
        "id": 134106007,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537196314
    },
    {
        "content": "<p>My own opinion is that select-all delete is more intuitive</p>",
        "id": 134106119,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537196404
    },
    {
        "content": "<p>for me it's usually select-all paste or select-all start typing</p>",
        "id": 134106147,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537196432
    },
    {
        "content": "<p>but then you have to re-type the main fn</p>",
        "id": 134106148,
        "sender_full_name": "qmx",
        "timestamp": 1537196433
    },
    {
        "content": "<p>which is fine for me, but for a newcomer might be a hassle</p>",
        "id": 134106159,
        "sender_full_name": "qmx",
        "timestamp": 1537196444
    },
    {
        "content": "<p>So you don't actually want to <em>clear</em> the buffer then?</p>",
        "id": 134106170,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537196460
    },
    {
        "content": "<p>well, I came back to the playground after two weeks and was not expecting to see the wall of text I've left there</p>",
        "id": 134106196,
        "sender_full_name": "qmx",
        "timestamp": 1537196488
    },
    {
        "content": "<p>so a \"reset\" would return it to the hello world, yes</p>",
        "id": 134106212,
        "sender_full_name": "qmx",
        "timestamp": 1537196516
    },
    {
        "content": "<p>or the reverse, the hello world by default, + a link \"Oh, you were here before, click here to keep editing that example from July 14\"</p>",
        "id": 134107502,
        "sender_full_name": "lqd",
        "timestamp": 1537197830
    },
    {
        "content": "<p>i wanted a clear button a while back for mobile since im unable to highlight or hold backspace on the playground with my device haha</p>\n<p>but the workaround was trivial. shared the default template i wanted, then set that as the bookmark to the playground</p>",
        "id": 134111860,
        "sender_full_name": "memoryruins",
        "timestamp": 1537201878
    },
    {
        "content": "<p>How can I convince people it's the play<em>ground</em> not the play<em>pen</em>? <span class=\"emoji emoji-1f914\" title=\"thinking\">:thinking:</span></p>",
        "id": 134434813,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1537616959
    },
    {
        "content": "<p>im convinced, who isnt :thinking_face:</p>",
        "id": 134439084,
        "sender_full_name": "memoryruins",
        "timestamp": 1537625449
    },
    {
        "content": "<p>why didnâ€™t zulip emoji that <span class=\"emoji emoji-1f914\" title=\"thinking\">:thinking:</span></p>",
        "id": 134439094,
        "sender_full_name": "memoryruins",
        "timestamp": 1537625488
    },
    {
        "content": "<p>because it is thinking not thinking_face :P</p>",
        "id": 134439198,
        "sender_full_name": "DPC",
        "timestamp": 1537625663
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/7CpmJ5MZ7nULpA_GYY55SAcK/IMG_1039.PNG\" target=\"_blank\" title=\"IMG_1039.PNG\">IMG_1039.PNG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/7CpmJ5MZ7nULpA_GYY55SAcK/IMG_1039.PNG\" target=\"_blank\" title=\"IMG_1039.PNG\"><img src=\"/user_uploads/4715/7CpmJ5MZ7nULpA_GYY55SAcK/IMG_1039.PNG\"></a></div>",
        "id": 134439270,
        "sender_full_name": "memoryruins",
        "timestamp": 1537625780
    },
    {
        "content": "<p>i clicked on zulipâ€™s suggestion lol</p>",
        "id": 134439274,
        "sender_full_name": "memoryruins",
        "timestamp": 1537625783
    },
    {
        "content": "<p>odd bug <span class=\"emoji emoji-1f602\" title=\"joy\">:joy:</span></p>",
        "id": 134440205,
        "sender_full_name": "DPC",
        "timestamp": 1537627529
    },
    {
        "content": "<p>Maybe it's _way_ too late for this, but I wonder if playground (or playpen) are the best names given Rust-the-game vs Rust-the-language..</p>",
        "id": 134658244,
        "sender_full_name": "Dale Wijnand",
        "timestamp": 1537953442
    },
    {
        "content": "<p>I don't think they are injecting any additional noise in the current context</p>",
        "id": 134658512,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537953677
    },
    {
        "content": "<p>... i was about to add \"to my knowledge, the only people who are confused are the Rust Game players, who come to our channel to complain or seeking assistance\"; but then I realized that I have <em>no</em> knowledge of the corresponding channels for the Rust Game.</p>",
        "id": 134658596,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537953741
    },
    {
        "content": "<p>Who knows how many potential Rust programmers are logging into the Rust Game itself to seek help with borrowck errors, and then are getting sniped while their avatar looks for clothing!</p>",
        "id": 134658626,
        "sender_full_name": "pnkfelix",
        "timestamp": 1537953777
    },
    {
        "content": "<p>Now you got me wondering if the \"Rust Game players\" have a collective name.. <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
        "id": 134659092,
        "sender_full_name": "Dale Wijnand",
        "timestamp": 1537954161
    },
    {
        "content": "<p>quite a few rust (the game) players don't seem to notice when they walk into the community discord (or the subreddit, although easier to mistake if you're posting a thread from reddit's homepage)</p>",
        "id": 134682666,
        "sender_full_name": "memoryruins",
        "timestamp": 1537975129
    },
    {
        "content": "<p>since it's only occassional, i've grown to enjoy the mistakes haha, and the similarity of r/playrust and <a href=\"http://play.rust-lang.org\" target=\"_blank\" title=\"http://play.rust-lang.org\">play.rust-lang.org</a> is the cherry on top</p>",
        "id": 134682675,
        "sender_full_name": "memoryruins",
        "timestamp": 1537975137
    },
    {
        "content": "<p>half a year ago it finally happened the other way around <a href=\"https://www.reddit.com/r/playrust/comments/880mya/some_questions_regarding_rust/\" target=\"_blank\" title=\"https://www.reddit.com/r/playrust/comments/880mya/some_questions_regarding_rust/\">https://www.reddit.com/r/playrust/comments/880mya/some_questions_regarding_rust/</a></p>",
        "id": 134682710,
        "sender_full_name": "memoryruins",
        "timestamp": 1537975169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> looks like someone is <a href=\"https://github.com/integer32llc/rust-playground/pull/417\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/pull/417\">starting to work on adding stdin support to the playground</a></p>",
        "id": 135780918,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539529166
    },
    {
        "content": "<p>I'd appreciate you chiming in with any suggestions, especially on how the frontend aspect might look.</p>",
        "id": 135780962,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539529207
    },
    {
        "content": "<p>interesting</p>",
        "id": 135783994,
        "sender_full_name": "lqd",
        "timestamp": 1539534393
    },
    {
        "content": "<p>Iâ€™ll take a look at it, no problem</p>",
        "id": 135783999,
        "sender_full_name": "lqd",
        "timestamp": 1539534424
    },
    {
        "content": "<p>(on my phone rn so as soon as Iâ€™m back home :)</p>",
        "id": 135784005,
        "sender_full_name": "lqd",
        "timestamp": 1539534461
    },
    {
        "content": "<p>oh, they haven't even started a frontend, so I don't think there's any rush</p>",
        "id": 135785749,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539537258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> done</p>",
        "id": 135994165,
        "sender_full_name": "lqd",
        "timestamp": 1539803578
    },
    {
        "content": "<p>as I don't have a lot of experience in that use case myself (read: none) I added a couple thoughts and questions; in addition to an immediate suggestion I had, but maybe is crap</p>",
        "id": 135994247,
        "sender_full_name": "lqd",
        "timestamp": 1539803658
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 135996632,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1539806065
    },
    {
        "content": "<p>I wonder how ostentatious I should make the notification that the Playground is switching the default to Edition 2018</p>",
        "id": 147986642,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654609
    },
    {
        "content": "<p>Maybe some <code>&lt;blink&gt;</code> and <code>&lt;marquee&gt;</code></p>",
        "id": 147986654,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654627
    },
    {
        "content": "<p>Animated mouse cursors</p>",
        "id": 147986665,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654641
    },
    {
        "content": "<p>fireworks</p>",
        "id": 147986672,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654646
    },
    {
        "content": "<p>TBH I already found that notification you had recently... what was it for again?... <del>quite</del> somewhat annoying^^</p>",
        "id": 147986700,
        "sender_full_name": "RalfJ",
        "timestamp": 1542654678
    },
    {
        "content": "<p>the one one had to click an X to remove it</p>",
        "id": 147986705,
        "sender_full_name": "RalfJ",
        "timestamp": 1542654685
    },
    {
        "content": "<p>That's probably because you clear all the cookies</p>",
        "id": 147986875,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654837
    },
    {
        "content": "<p>Like everything else, the fact that you've seen that was stored in localstorage</p>",
        "id": 147986923,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654855
    },
    {
        "content": "<p>Everyone else saw it once per browser instance.</p>",
        "id": 147986941,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654881
    },
    {
        "content": "<p>And it was for the Rust survey.</p>",
        "id": 147986972,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542654909
    },
    {
        "content": "<p>Ah it was the survey right.</p>",
        "id": 147986991,
        "sender_full_name": "RalfJ",
        "timestamp": 1542654940
    },
    {
        "content": "<p>Yeah I have that on godbolt as well, I get these annoying two (!) popups (well, a popup and a banner) informing me that they use cookies each time.</p>",
        "id": 147987073,
        "sender_full_name": "RalfJ",
        "timestamp": 1542654999
    },
    {
        "content": "<p>I find it particularily ironic when sites use cookies to store that you opted out of tracking, and ask you to enable cookies to remember that choice :P Google did that for some time</p>",
        "id": 147987099,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655033
    },
    {
        "content": "<p>Ugh, I'm waiting with dread for someone to tell me that the playground needs to have a GDPR notice.</p>",
        "id": 147987109,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542655047
    },
    {
        "content": "<p>What other option is there to store that information?</p>",
        "id": 147987119,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542655065
    },
    {
        "content": "<p>Just don't store anything, then you are fine wrt GDPR^^</p>",
        "id": 147987126,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655073
    },
    {
        "content": "<p>well if there was any other option it'd be used for tracking as well. in a stateless scenario inherently you cannot tell that I am a repeat customer, and once it's not stateless you can use it for tracking...</p>",
        "id": 147987204,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655112
    },
    {
        "content": "<p>for the google cookies I think there were extensions that set these cookies each time you start, so you'd always have exactly these cookies and no other, making it \"stateless but with non-tracking cookies\".</p>",
        "id": 147987225,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655149
    },
    {
        "content": "<p>but for banners, there's not really a way I think</p>",
        "id": 147987230,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655156
    },
    {
        "content": "<p>To double-check, you do realize that you are somewhat unique in your desire to have the playground remember <em>nothing</em>?</p>",
        "id": 147987275,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542655196
    },
    {
        "content": "<p>my desire is to not be tracked</p>",
        "id": 147987328,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655206
    },
    {
        "content": "<p>or be tracked as little as possible</p>",
        "id": 147987334,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655212
    },
    {
        "content": "<p>I know I sadly am a minority with this desire, or with the extend to which I am willing to go to achieve this desire.</p>",
        "id": 147987358,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655236
    },
    {
        "content": "<p>can you quantify \"track\"?</p>",
        "id": 147987373,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542655253
    },
    {
        "content": "<p>For example, there's information about people that I want to know and I don't collect. Knowing what browser and screen size people use helps me optimize.</p>",
        "id": 147987404,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542655291
    },
    {
        "content": "<p>hm, not sure if I have a precise definition, but certainly anything that could tell that two distinct interactions came from the same person is tracking for me</p>",
        "id": 147987411,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655306
    },
    {
        "content": "<p>Knowing what people do (\"build\" / \"miri\" / \"etc\") also helps focus the limited development time</p>",
        "id": 147987465,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542655326
    },
    {
        "content": "<p>for practical reasons, I allow cookies for within a browser session (that's a compromise as otherwise everything is broken), so practically speaking anything that can recognize me after a browser restart is tracking</p>",
        "id": 147987477,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655344
    },
    {
        "content": "<p>counting how many people click \"miri\" is not tracking</p>",
        "id": 147987491,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655354
    },
    {
        "content": "<p>counting how many people click \"miri\" per-country is not tracking, at least not for countries with significant user bases. doing it per-IP is. somewhere in the middle is a large gray area.^^</p>",
        "id": 147987537,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655409
    },
    {
        "content": "<p>(these are my personal judgements, I have no idea what GDPR has to say here^^)</p>",
        "id": 147987609,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655452
    },
    {
        "content": "<p>basically, if the log entries can be assigned to a person -- not in the sense of \"I know their name\", but in the sense of \"I know (or can statistically assume) these X things were done by the same person\" -- that's tracking for me</p>",
        "id": 147987698,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655527
    },
    {
        "content": "<p>not sure if that helps? I know there are legitimate needs or at least desires of web devs that are in conflict with this.</p>",
        "id": 147987795,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655596
    },
    {
        "content": "<p>for the banner, storing \"the banner was already shown\" is not tracking, but there is no way I can distinguish \"good\" cookies from \"bad\" cookies so I clear them all when restarting the browser. and anyway playground is on a whitelist now so that restoring content after a restart works, and because I trust you :D</p>",
        "id": 147987942,
        "sender_full_name": "RalfJ",
        "timestamp": 1542655724
    },
    {
        "content": "<p>I wonder if I could use the do-not-track settings and then disable anything like the banner</p>",
        "id": 147989038,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542656538
    },
    {
        "content": "<p>well that'd certainly work for me^^</p>",
        "id": 147989194,
        "sender_full_name": "RalfJ",
        "timestamp": 1542656645
    },
    {
        "content": "<p>or maybe just make the banner go away after a second or two?</p>",
        "id": 147989199,
        "sender_full_name": "RalfJ",
        "timestamp": 1542656652
    },
    {
        "content": "<p>IIRC those will stop being sent soonish?</p>",
        "id": 147989202,
        "sender_full_name": "nagisa",
        "timestamp": 1542656653
    },
    {
        "content": "<p>I donâ€™t believe that header is there to stay</p>",
        "id": 147989209,
        "sender_full_name": "nagisa",
        "timestamp": 1542656664
    },
    {
        "content": "<p>Yeah, I had an inkling of that. Basically some browser-provided sign that I could use to disable functionality</p>\n<p>And wait for people to complain about lacking functionality...</p>",
        "id": 147994566,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1542660951
    },
    {
        "content": "<p>;)</p>",
        "id": 147994768,
        "sender_full_name": "RalfJ",
        "timestamp": 1542661129
    },
    {
        "content": "<p>I think that if we had a checkbox that said \"Track me\" and it is unticked by default, and when it is unticked, the playground doesn't track anything at all, then that would be ok and GDPR compliant.</p>",
        "id": 148024094,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542702060
    },
    {
        "content": "<p>Don't know if a banner / pop-up for this is necessary, I don't think so as long as tracking is disabled by default, and is opt-in. <br>\nIn the check box one can have some info bubble explaining what's tracked and what isn't.</p>",
        "id": 148024177,
        "sender_full_name": "gnzlbg",
        "timestamp": 1542702139
    },
    {
        "content": "<p>wonder what happened to rustfmt, the playground can't parse its version anymore, <a href=\"https://play.rust-lang.org/meta/version/rustfmt\" target=\"_blank\" title=\"https://play.rust-lang.org/meta/version/rustfmt\">all the meta information is empty</a> <span class=\"emoji emoji-1f914\" title=\"thinking\">:thinking:</span></p>",
        "id": 148727584,
        "sender_full_name": "lqd",
        "timestamp": 1543425365
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span></p>",
        "id": 148868398,
        "sender_full_name": "lqd",
        "timestamp": 1543592011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> maybe report a bug at <a href=\"https://github.com/integer32llc/rust-playground/\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/\">https://github.com/integer32llc/rust-playground/</a> ?</p>",
        "id": 148868673,
        "sender_full_name": "RalfJ",
        "timestamp": 1543592222
    },
    {
        "content": "<p>sure but I was too lazy :p</p>",
        "id": 148868731,
        "sender_full_name": "lqd",
        "timestamp": 1543592276
    },
    {
        "content": "<p>(and it's the sort of thing I can't easily test or fix myself)</p>",
        "id": 148868804,
        "sender_full_name": "lqd",
        "timestamp": 1543592315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> you have made me more reasonable and I did open an <a href=\"https://github.com/integer32llc/rust-playground/issues/437\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/issues/437\">issue</a> ;)</p>",
        "id": 148869064,
        "sender_full_name": "lqd",
        "timestamp": 1543592582
    },
    {
        "content": "<p>For those following along at home, rustfmt itself no longer reports a version via <code>cargo fmt --version</code></p>",
        "id": 150688732,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1543681394
    },
    {
        "content": "<p>A suggestion has been made to allow loading code from an arbitrary URL in the playground (<a href=\"https://github.com/integer32llc/rust-playground/issues/439\" target=\"_blank\" title=\"https://github.com/integer32llc/rust-playground/issues/439\">https://github.com/integer32llc/rust-playground/issues/439</a>). Can anyone think of a reason to not implement such a thing?</p>",
        "id": 150792449,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1543864155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116113\">@lqd</span> ^</p>",
        "id": 150792456,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1543864162
    },
    {
        "content": "<p>I'm <em>far</em> from being an expert on security tbh â€” but we're effectively already in the worst case scenario of executing random code :) so I'm not immediately seeing how this makes things obviously worse. I don't know if it may be interesting to ensure the playground server can blacklist some servers if need be ? And that targets can disallow being loaded (maybe this can happen if a site changes owners) but I assume <code>fetch</code> would by default do so in the browser if CORS is disallowed by the remote server (that would require making the requests to get the code client-side, whereas I think the GH support today is done by the server) â€” similarly maybe if some day the target server disallows requests, we can automatically add it the blacklist so that we don't bother it anymore.  (that was very ramby sorry)</p>",
        "id": 150794059,
        "sender_full_name": "lqd",
        "timestamp": 1543865474
    },
    {
        "content": "<p>I assume the actual request happens from the server? so this would effectively be some form of open proxy, albeit one where the reply does not get rendered by the browser. hm.</p>",
        "id": 150794804,
        "sender_full_name": "RalfJ",
        "timestamp": 1543866226
    },
    {
        "content": "<p>IIRC it's server-side for gists, to use the github api, but this new one could arguably be done client-side in order not to have the open proxy yeah</p>",
        "id": 150795503,
        "sender_full_name": "lqd",
        "timestamp": 1543866844
    },
    {
        "content": "<p>but then don't we run against the same-origin policy?</p>",
        "id": 150795970,
        "sender_full_name": "RalfJ",
        "timestamp": 1543867210
    },
    {
        "content": "<p>(I know nothing about webdev so maybe that question makes so sense^^)</p>",
        "id": 150795993,
        "sender_full_name": "RalfJ",
        "timestamp": 1543867223
    },
    {
        "content": "<p>I assume same-origin refers to <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\" target=\"_blank\" title=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\">https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy</a> ?</p>",
        "id": 150796051,
        "sender_full_name": "centril",
        "timestamp": 1543867279
    },
    {
        "content": "<p>yeah, we might indeed, unless there are some CORS header allowing us</p>",
        "id": 150797290,
        "sender_full_name": "lqd",
        "timestamp": 1543868384
    },
    {
        "content": "<p>it's an interesting proposition to require the website where you host the file to enable embedding the resource, but maybe prohibitive for the vast majority of sites where one doesn't have control over this kind of things</p>",
        "id": 150797426,
        "sender_full_name": "lqd",
        "timestamp": 1543868484
    },
    {
        "content": "<p>(but yeah my original comment made it look like cross origin would be allowed by default which is indeed surely not the case and was wrong to frame it this way)</p>",
        "id": 150797516,
        "sender_full_name": "lqd",
        "timestamp": 1543868542
    },
    {
        "content": "<p>The playground currently is both client-side and server-side for gists. The Gist API requires authentication, which is done server side. The client makes a request to the backend. Yes, this means that the playground can be used to circumvent GitHubs API and once someone abuses that, it's basically over.</p>",
        "id": 150798129,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1543869203
    },
    {
        "content": "<p>And I'd expect that new thing to be only client side.</p>",
        "id": 150798145,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1543869230
    },
    {
        "content": "<p>CORS &amp; friends is an interesting question though.</p>",
        "id": 150798325,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1543869377
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> The playground is using <code>clippy-preview</code>; I assume that's no longer being updated and I should switch to just <code>clippy</code>?</p>",
        "id": 151280341,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1544456016
    },
    {
        "content": "<p>Sure. And I do think it is still updated. I thought they are just renames of each other?</p>",
        "id": 151280360,
        "sender_full_name": "oli",
        "timestamp": 1544456040
    },
    {
        "content": "<p>we had a few days of clippy outages, maybe that's what you're seeing?</p>",
        "id": 151280410,
        "sender_full_name": "oli",
        "timestamp": 1544456054
    },
    {
        "content": "<p>Oh, I didn't see anything specifically, just was passing through that section of code.</p>",
        "id": 151280698,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1544456299
    },
    {
        "content": "<p>Also, the blog post says</p>\n<blockquote>\n<p>Clippy is now considered 1.0,</p>\n</blockquote>\n<p>but the version on the playground is like 0.1xx or something</p>",
        "id": 151280731,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1544456341
    },
    {
        "content": "<p>so I figured it was different</p>",
        "id": 151280744,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1544456354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@Oli</span> clippy doesn't tag anything, I guess? Hard to tell when a commit should appear in a release</p>",
        "id": 151280909,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1544456527
    },
    {
        "content": "<p>yea we're working on that</p>",
        "id": 151280932,
        "sender_full_name": "oli",
        "timestamp": 1544456557
    }
]