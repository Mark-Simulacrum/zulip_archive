[
    {
        "content": "<p>If you were defining guidelines for a new project, which of <code>foo/{mod.rs,bar.rs}</code> or <code>foo.rs,foo/bar.rs</code> would you select and why?<br>\nI see that rustc still heavily uses <code>mod.rs</code>, but that might be legacy rather than preference.</p>",
        "id": 202147149,
        "sender_full_name": "Matthew Maurer",
        "timestamp": 1593208558
    },
    {
        "content": "<p>One benefit of <code>foo.rs,foo/bar.rs</code> is that you won't ever have multiple <code>mod.rs</code> files open, which can make editor navigation easier</p>",
        "id": 202147439,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593208722
    },
    {
        "content": "<p>I still use <code>mod.rs</code> though, since it's what I'm used to and rustc doesn't yell at me (hard to defeat muscle memory)</p>",
        "id": 202147486,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593208759
    },
    {
        "content": "<p>(OTOH, it means that auto-completion is a pain, at least I always feel like I'm hitting tab and typing way too many times)</p>",
        "id": 202147489,
        "sender_full_name": "simulacrum",
        "timestamp": 1593208760
    },
    {
        "content": "<p>I think some of that is \"insufficiently smart\" autocomplete.</p>",
        "id": 202147528,
        "sender_full_name": "simulacrum",
        "timestamp": 1593208786
    },
    {
        "content": "<p>rust-analyzer has a \"create module\" assist when writing <code>mod foo;</code> and there's no matching file; I think it will always use the <code>foo.rs; foo/bar.rs</code> pattern.</p>",
        "id": 202147608,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593208816
    },
    {
        "content": "<p>Hm, that last one is a bit compelling, since we're planning on having rust-analyzer be the IDE support for devs. It'd be kind of awkward to have the tooling we give them violate their style guide.</p>",
        "id": 202147733,
        "sender_full_name": "Matthew Maurer",
        "timestamp": 1593208893
    },
    {
        "content": "<p>I have been using <a href=\"http://foo.rs\">foo.rs</a> foo/bar.rs for the last couple years and it's not been terrible</p>",
        "id": 202147879,
        "sender_full_name": "simulacrum",
        "timestamp": 1593208970
    },
    {
        "content": "<p>realistically you're pretty rarely typing these paths anyway, hopefully, but rather using things like goto definition and fuzzy matching the path</p>",
        "id": 202147945,
        "sender_full_name": "simulacrum",
        "timestamp": 1593209006
    },
    {
        "content": "<p>Yeah, it's not super important, but the codebase in question is large so if use becomes extensive I'd like everything to be done the same way so it's predictable across the codebase.</p>\n<p>I'm going to recommend <code>foo.rs,foo/bar.rs</code> for now; thanks for the feedback.</p>",
        "id": 202148851,
        "sender_full_name": "Matthew Maurer",
        "timestamp": 1593209497
    },
    {
        "content": "<blockquote>\n<p>you won't ever have multiple <a href=\"http://mod.rs\">mod.rs</a> files </p>\n</blockquote>\n<p>And then you get bigger and have multiple crates and then you are back to the same problem with <code>lib.rs</code> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 202160380,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1593220450
    },
    {
        "content": "<p>The \"obvious\" fix is to declare all folders as inline modules and avoid both <code>foo.rs</code> and <code>foo/mod.rs</code> entirely</p>",
        "id": 202168776,
        "sender_full_name": "Lokathor",
        "timestamp": 1593234931
    },
    {
        "content": "<p><code>lib.rs</code></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">bar</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">zap</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>foo/bar.rs</code> and <code>foo/zap.rs</code> then hold whatever you want</p>",
        "id": 202168847,
        "sender_full_name": "Lokathor",
        "timestamp": 1593235065
    },
    {
        "content": "<p>The issue with having multiple <code>mod.rs</code> is definitely making me consider the alternative. I might switch to <code>um.rs,um/winuser.rs</code> in winapi 0.4.</p>",
        "id": 202170290,
        "sender_full_name": "Peter Rabbit",
        "timestamp": 1593237769
    },
    {
        "content": "<p>If you don't use <code>mod.rs</code>, then be careful if you're also using <code>#[path]</code>, <a href=\"https://github.com/rust-lang/rust/issues/59345\">https://github.com/rust-lang/rust/issues/59345</a> . IMO it's a little annoying behavior...</p>",
        "id": 202174358,
        "sender_full_name": "Charles Lew",
        "timestamp": 1593245496
    },
    {
        "content": "<p>I prefer <code>mod.rs</code> as it means that the module and it's submodules are close to each other in the file tree. Having multiple <code>mod.rs</code> is not an issue in vscode at least, as it shows dir names as necessary to disambiguate between files with identical names.</p>",
        "id": 202176032,
        "sender_full_name": "bjorn3",
        "timestamp": 1593248305
    },
    {
        "content": "<p>I use vscode too and still prefer the <a href=\"http://foo.rs\">foo.rs</a> and foo/bar.rs version, though I tend to write some modules as <span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> showed, with a mod statement in <a href=\"http://lib.rs\">lib.rs</a>, especially when it’s just used to separate concerns without introducing code other than « pub use » in <a href=\"http://foo.rs\">foo.rs</a></p>",
        "id": 202176116,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1593248516
    },
    {
        "content": "<p>Ugh, Typing code blocks on mobile is a pain</p>",
        "id": 202176157,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1593248535
    },
    {
        "content": "<p>I prefer not using <code>mod.rs</code>, because I like my module paths to match my file paths.</p>",
        "id": 202394056,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1593490467
    },
    {
        "content": "<p>Especially when I see <code>foo::bar::thing</code> and wonder where that is.</p>",
        "id": 202394071,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1593490506
    },
    {
        "content": "<p>i end up with <code>mod.rs</code>because pre-2018 habits :P Most people don't like <code>mod.rs</code> because they don't like 100 <code>mod.rs</code> tabs in their editor and have to remember which is which</p>",
        "id": 202411716,
        "sender_full_name": "DPC",
        "timestamp": 1593508640
    },
    {
        "content": "<p>I feel like rustc should really warn about the <code>mod.rs</code> syntax to nudge people away from it. This would have made me instantly switch with no complaints.</p>",
        "id": 202416546,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1593511957
    },
    {
        "content": "<p>I think the biggest issue with <code>mod.rs</code> is that you need to rename/move files when you want to add a submodule</p>",
        "id": 202418597,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1593513496
    }
]