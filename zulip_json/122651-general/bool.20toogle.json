[
    {
        "content": "<p>(dunno if I'm in the right place for this)<br>\nI'm used to toggle booleans with</p>\n<div class=\"codehilite\"><pre><span></span><code> des.drawer.settings.hide_values ^= true;\n</code></pre></div>\n<p>wouldn't it be clearer with a change in <code>BitXorAssign</code> allowing</p>\n<div class=\"codehilite\"><pre><span></span><code>des.drawer.settings.hide_values.toggle();\n</code></pre></div>\n<p>?</p>",
        "id": 250368417,
        "sender_full_name": "Denys Séguret",
        "timestamp": 1629732735
    },
    {
        "content": "<p>That's a generic trait. How would the implementation get the value to XOR with for all T, not just for bool?</p>",
        "id": 250385243,
        "sender_full_name": "The 8472",
        "timestamp": 1629740243
    },
    {
        "content": "<p>So either it would have to live on bool (and other integers?) directly or require a new trait for bit-flipping.</p>",
        "id": 250385366,
        "sender_full_name": "The 8472",
        "timestamp": 1629740298
    },
    {
        "content": "<p>Why does this need a trait? You could add a new inherent toggle() method to &amp;mut bool</p>",
        "id": 250386438,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629740834
    },
    {
        "content": "<p>(although I would bikeshed that it should be invert() or not() instead)</p>",
        "id": 250386484,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629740867
    },
    {
        "content": "<p>(I wouldn't expect <code>x.not()</code> to change <code>x</code>)</p>",
        "id": 250386607,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629740910
    },
    {
        "content": "<p>Hmm maybe not not() since that's already a function in one of the traits - yeah</p>",
        "id": 250386615,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629740918
    },
    {
        "content": "<p>You can also make it as an extension trait and use it in your code</p>",
        "id": 250386620,
        "sender_full_name": "Laurențiu",
        "timestamp": 1629740920
    },
    {
        "content": "<blockquote>\n<p>Why does this need a trait? </p>\n</blockquote>\n<p>It doesn't have to be, but logically it's a bit flip operation, so it could be applicable to more than a bool.</p>",
        "id": 250386870,
        "sender_full_name": "The 8472",
        "timestamp": 1629741048
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/122651-general/topic/bool.20toogle/near/250385366\">said</a>:</p>\n<blockquote>\n<p>So either it would have to live on bool (and other integers?) directly or require a new trait for bit-flipping.</p>\n</blockquote>\n<p>You're right, it should be on <code>&amp;mut bool</code> (and probably other types).</p>",
        "id": 250387963,
        "sender_full_name": "Denys Séguret",
        "timestamp": 1629741613
    },
    {
        "content": "<p>Oh, but there's already the NotAssign trait (<a href=\"https://docs.rs/rug/1.13.0/rug/ops/trait.NotAssign.html\">https://docs.rs/rug/1.13.0/rug/ops/trait.NotAssign.html</a>). It's just... a kindof hard to remember name...</p>",
        "id": 250389205,
        "sender_full_name": "Denys Séguret",
        "timestamp": 1629742228
    },
    {
        "content": "<p>heh</p>",
        "id": 250389494,
        "sender_full_name": "The 8472",
        "timestamp": 1629742394
    }
]