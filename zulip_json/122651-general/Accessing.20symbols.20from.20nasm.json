[
    {
        "content": "<p>in rav1e we tried to define tables in rust and then use them from nasm, when not using cdylibs on linux everything seems fine, on linux+cdylib we got this:</p>\n<div class=\"codehilite\"><pre><span></span>  = note: /usr/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: /home/lu_zero/Sources/rust/rav1e/target/debug/build/rav1e-646b21e8f2fef3cb/out/librav1easm.a(ipred.o): warning: relocation against `rav1e_filter_intra_taps&#39; in readonly section `.text&#39;\n          /usr/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: /home/lu_zero/Sources/rust/rav1e/target/debug/build/rav1e-646b21e8f2fef3cb/out/librav1easm.a(ipred.o): relocation R_X86_64_PC32 against symbol `rav1e_dr_intra_derivative&#39; can not be used when making a shared object; recompile with -fPIC\n</pre></div>\n\n\n<p>anybody has ideas on how to fix it?</p>",
        "id": 179410023,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572423001
    },
    {
        "content": "<p>setting <code>relocation-model=pic</code> does doesn't change anything</p>",
        "id": 179411037,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572424181
    },
    {
        "content": "<p>Try using <code>symbol@plt</code> instead of <code>symbol</code> in your asm code.</p>",
        "id": 179412610,
        "sender_full_name": "Amanieu",
        "timestamp": 1572426104
    },
    {
        "content": "<p>Oh wait, that's a data table, not a function.</p>",
        "id": 179412917,
        "sender_full_name": "Amanieu",
        "timestamp": 1572426347
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131070\">@Luca Barbato</span> Apparently the correct syntax for obtaining the address of a PC-relative symbol is <code>lea rax, [rip + symbol]</code>. Can you try that to see if it works?</p>",
        "id": 179413139,
        "sender_full_name": "Amanieu",
        "timestamp": 1572426579
    },
    {
        "content": "<p>the code using it uses <code>    lea                  r7, [dr_intra_derivative]</code> and I'd rather not change it since it is shared with another project ^^</p>",
        "id": 179413754,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572427082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131070\">@Luca Barbato</span> Actually, can you double-check that the symbols that are referenced are from the same shared library?</p>",
        "id": 179414434,
        "sender_full_name": "Amanieu",
        "timestamp": 1572427667
    },
    {
        "content": "<p>let me explain the whole scenario</p>",
        "id": 179414495,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572427694
    },
    {
        "content": "<p>From the error message, the linker seems to think that rav1e_filter_intra_taps is a symbol defined outside the library.</p>",
        "id": 179414498,
        "sender_full_name": "Amanieu",
        "timestamp": 1572427695
    },
    {
        "content": "<p>we have a crate that uses a <code>.a</code> produced by nasm</p>",
        "id": 179414540,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572427737
    },
    {
        "content": "<p>and it references symbols that are actually defined in the rust code</p>",
        "id": 179414576,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572427773
    },
    {
        "content": "<p>Can you try adding <code>#[used]</code> to <code>rav1e_dr_intra_derivative</code> in <code>tables.rs</code>? It might have been optimized out as an unreachable private symbol.</p>",
        "id": 179414728,
        "sender_full_name": "Amanieu",
        "timestamp": 1572427918
    },
    {
        "content": "<p>when building non <code>cdylib</code> everything works</p>",
        "id": 179415008,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572428116
    },
    {
        "content": "<p>so seems unlikely</p>",
        "id": 179415015,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572428123
    },
    {
        "content": "<p>I should check the zulip mobile app =/</p>",
        "id": 179415047,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572428144
    },
    {
        "content": "<p>I must run</p>",
        "id": 179415053,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1572428148
    },
    {
        "content": "<p>I'll follow up for Luca</p>",
        "id": 179415179,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572428236
    },
    {
        "content": "<p>So, <code>#[used]</code> gave the same error.<br>\nI did manage to work around by first building the static lib and then replacing the static nasm archive link argument with that.</p>",
        "id": 179417102,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572430014
    },
    {
        "content": "<p>The linker on macOS does not fail in this way. Testing must be done on Linux.</p>",
        "id": 179419058,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572431893
    },
    {
        "content": "<p>The underlying issue is that 2 static libs are mutually dependent.</p>",
        "id": 179419083,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572431924
    },
    {
        "content": "<p>Some linkers might require <code>-lA -lB -lA</code></p>",
        "id": 179425755,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572438219
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247214\">@David Michael Barr</span> do you have a self contained example that shows the issue? (a github repo or so?)</p>",
        "id": 179429223,
        "sender_full_name": "gnzlbg",
        "timestamp": 1572441010
    },
    {
        "content": "<p>I've used nasm on macosx and linux and called into it from Rust code, and I think I ran into similar issues</p>",
        "id": 179429258,
        "sender_full_name": "gnzlbg",
        "timestamp": 1572441046
    },
    {
        "content": "<p>I don't remember exactly how I solved them, just that I had to play tetris with linker and nasm options</p>",
        "id": 179429304,
        "sender_full_name": "gnzlbg",
        "timestamp": 1572441085
    },
    {
        "content": "<p>but I do recall that -fPIC error and using -fPIC not solving my problem <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 179429324,
        "sender_full_name": "gnzlbg",
        "timestamp": 1572441105
    },
    {
        "content": "<p>I think the fPIC error is actually a secondary effect. The symbol is not being resolved as intended, causing a mismatch with respect to PIC.</p>",
        "id": 179429511,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572441228
    },
    {
        "content": "<p>Non-trivial reproduction, assuming nasm installed:</p>\n<div class=\"codehilite\"><pre><span></span>git clone https://github.com/xiph/rav1e\ncd rav1e\ncargo install cargo-c\ncargo cbuild --release\n</pre></div>",
        "id": 179429885,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572441436
    },
    {
        "content": "<p>Non-trivial reproduction, assuming nasm installed:</p>\n<div class=\"codehilite\"><pre><span></span>git clone https://github.com/xiph/rav1e\ncd rav1e\ncargo install cargo-c\ncargo cbuild --release\n</pre></div>",
        "id": 179430097,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572441579
    },
    {
        "content": "<p><a href=\"https://github.com/barrbrain/cargo-c-nasm-repro\" target=\"_blank\" title=\"https://github.com/barrbrain/cargo-c-nasm-repro\">https://github.com/barrbrain/cargo-c-nasm-repro</a></p>",
        "id": 179437771,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572446037
    },
    {
        "content": "<p>I have reduced the problem to its essence.</p>",
        "id": 179438126,
        "sender_full_name": "David Michael Barr",
        "timestamp": 1572446226
    }
]