[
    {
        "content": "<p>I just realized something, couldn't thread locals be codegenned on the GPU (CUDA) just fine by making a static in the local addrspace? Local memory is per-thread cache (well, in reality its global memory with interleaved addressing but...) which every thread has access to.  When storing/loading to it, cuda will manage the \"giving each thread the correct spot\" part. I cannot think of any major soundness concerns but i have also like never used thread locals before so i wanted other people's opinions <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 267360289,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1641737991
    },
    {
        "content": "<p>Can one thread pass a pointer to it's local memory to another thread? Thread locals allow this.</p>",
        "id": 267360688,
        "sender_full_name": "bjorn3",
        "timestamp": 1641738571
    },
    {
        "content": "<p>I am honestly not sure, threads can pass stuff to eachother using shared mem but idk if trying getting the address of a thread local static will yield different or same pointers in cuda</p>",
        "id": 267360941,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1641738945
    },
    {
        "content": "<p>local memory is kind of weird, because CUDA C++ has no way of declaring a local global AFAIK, the local addrspace is kind of a thing that isn't really used. But in theory because NVVM IR accepts the local addrspace for globals, it should work fine</p>",
        "id": 267361173,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1641739299
    },
    {
        "content": "<p>I can actually try it right now, let's see</p>",
        "id": 267361176,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1641739308
    },
    {
        "content": "<p>haha ok no libnvvm does not like this </p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;Malformed NVVM IR program rejected by libnvvm, dumping verifier log:\n\n  Error: : Global Variable `_ZN7add_gpu3FOO17h35bdd6f189b7dcd8E&#39;:\n    context: @_ZN7add_gpu3FOO17h35bdd6f189b7dcd8E = internal addrspace(5) global &lt;{ [4 x i8] }&gt; &lt;{ [4 x i8] c&quot;\\05\\00\\00\\00&quot; }&gt;, align 4\n    Invalid address space for global variable\n</code></pre></div>",
        "id": 267361324,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1641739516
    }
]