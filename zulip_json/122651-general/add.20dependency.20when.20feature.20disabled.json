[
    {
        "content": "<p>Is there a way to make an optional dependency non-optional if a cargo feature is disabled ?</p>",
        "id": 150924243,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544013155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> cargo features are expected to be additive, not negative</p>",
        "id": 150924623,
        "sender_full_name": "nagisa",
        "timestamp": 1544013701
    },
    {
        "content": "<p>a lot of stuff breaks if they are negative</p>",
        "id": 150924626,
        "sender_full_name": "nagisa",
        "timestamp": 1544013707
    },
    {
        "content": "<p>so that's the problem, say a crate wants to support <code>no_std</code>, and it adds a <code>use_std</code> feature enabled by default</p>",
        "id": 150924714,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544013800
    },
    {
        "content": "<p>when it is disabled, the crate should be <code>no_std</code>, but for that it would like to use a <code>no_std</code> dependency that is not needed when <code>std</code> is available</p>",
        "id": 150924737,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544013839
    },
    {
        "content": "<p>that is, \"if <code>use_std</code> is not enabled, then add a dependency\"</p>",
        "id": 150924793,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544013879
    },
    {
        "content": "<p>if we need an additive feature to add the <code>no_std</code> dependency, we might just call that feature <code>no_std</code>, and we have added a negative feature</p>",
        "id": 150924805,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544013900
    },
    {
        "content": "<p>teechnically you can do <code>[dependencies.'anycfghere'.foo]</code> IIRC</p>",
        "id": 150924930,
        "sender_full_name": "nagisa",
        "timestamp": 1544014068
    },
    {
        "content": "<p><a href=\"https://github.com/nagisa/rust_libloading/blob/master/Cargo.toml#L15\" target=\"_blank\" title=\"https://github.com/nagisa/rust_libloading/blob/master/Cargo.toml#L15\"><code>[target.'cfg(not(use_std))'.dependencies.dep]</code></a> for example...</p>",
        "id": 150924985,
        "sender_full_name": "nagisa",
        "timestamp": 1544014101
    },
    {
        "content": "<p>third try’s the charm ^)</p>",
        "id": 150925020,
        "sender_full_name": "nagisa",
        "timestamp": 1544014169
    },
    {
        "content": "<p><code>[target.</code>cfg(not(feature = \"use_std\"))<code>.dependencies.dep]</code> should work indeed</p>",
        "id": 150925113,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544014289
    },
    {
        "content": "<p>Somehow I have a sinking feeling that I’ve recommended a similar thing before but it turned out that cargo has a white/blacklist of supported cfgs and only allows very limited subset of cfgs :D</p>",
        "id": 150925179,
        "sender_full_name": "nagisa",
        "timestamp": 1544014382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> <a href=\"https://github.com/rust-lang/cargo/issues/1839\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo/issues/1839\">https://github.com/rust-lang/cargo/issues/1839</a></p>",
        "id": 150925675,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544014900
    },
    {
        "content": "<p>yep, that doesn't work</p>",
        "id": 150925679,
        "sender_full_name": "gnzlbg",
        "timestamp": 1544014909
    }
]