[
    {
        "content": "<p>If I try, I get &lt;<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=c7d82b089b685e819dde48c86f4809d8\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=c7d82b089b685e819dde48c86f4809d8</a>&gt;</p>\n<div class=\"codehilite\"><pre><span></span><code>error: cannot specialize on trait `Clone`\n</code></pre></div>\n<p>But it works if the default impl has an additional <code>Clone</code> bound &lt;<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=a4c2ac42f6c7c6fc2c001888efdd4860\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2021&amp;gist=a4c2ac42f6c7c6fc2c001888efdd4860</a>&gt;</p>\n<p>What's special about the <code>Copy</code> case that makes it work?</p>\n<p>(Context, to hopefully avoid XY: I'm trying to specialize in the standard library for Copy types to avoid some extra work.  And it works great for <code>repeat</code>-type scenarios (<a href=\"https://github.com/rust-lang/rust/issues/91506\">#91506</a>), but without the <code>T: Clone</code> it doesn't work any more, which seemed weird.)</p>",
        "id": 263691103,
        "sender_full_name": "scottmcm",
        "timestamp": 1638604131
    },
    {
        "content": "<p>because</p>\n<div class=\"codehilite\"><pre><span></span><code>// FIXME(matthewjasper) This allows copying a type that doesn&#39;t implement\n// `Copy` because of unsatisfied lifetime bounds (copying `A&lt;&#39;_&gt;` when only\n// `A&lt;&#39;static&gt;: Copy` and `A&lt;&#39;_&gt;: Clone`).\n// We have this attribute here for now only because there are quite a few\n// existing specializations on `Copy` that already exist in the standard\n// library, and there&#39;s no way to safely have this behavior right now.\n#[rustc_unsafe_specialization_marker]\n#[rustc_diagnostic_item = &quot;Copy&quot;]\npub trait Copy: Clone {\n    // Empty.\n}\n</code></pre></div>\n<p>And this has caused some safety holes but as the comment says it's grandfathered in because we'd lose some juicy optimizations without it.</p>",
        "id": 263701814,
        "sender_full_name": "The 8472",
        "timestamp": 1638619319
    }
]