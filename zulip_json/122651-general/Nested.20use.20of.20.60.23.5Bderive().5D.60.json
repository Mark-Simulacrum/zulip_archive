[
    {
        "content": "<p>Is it possible to derive another proc-macro within the implementation of a <code>proc-macro</code>? This seems like it'd be easy if the implementaiton of the proc-macro were public but alas, I don't think that's possible? So I'm wondering if I can somehow add the additinoal <code>#[derive()]</code> annotation.</p>",
        "id": 244889100,
        "sender_full_name": "UebelAndre",
        "timestamp": 1625453047
    },
    {
        "content": "<p>Have you tried returning a TokenStream that prepends your new derive? I _think_ it should Just Work</p>",
        "id": 244925785,
        "sender_full_name": "Daniel Wagner-Hall",
        "timestamp": 1625485510
    },
    {
        "content": "<p>Derive macros can't change the original input, the return value is inserted after the original type definition.</p>",
        "id": 244926832,
        "sender_full_name": "bjorn3",
        "timestamp": 1625486223
    },
    {
        "content": "<p>You can use a attribute proc macro instead, they can change everything about the item that follows.</p>",
        "id": 244963392,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1625509642
    },
    {
        "content": "<p>Does anyone have an example handy?</p>",
        "id": 244966867,
        "sender_full_name": "UebelAndre",
        "timestamp": 1625512697
    }
]