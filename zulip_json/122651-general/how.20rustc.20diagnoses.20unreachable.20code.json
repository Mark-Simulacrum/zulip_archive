[
    {
        "content": "<p>Hi! I want to learn how rust diagnoses unreachable code, I found <a href=\"https://github.com/rust-lang/rust/blob/e1e9319d93aea755c444c8f8ff863b0936d7a4b6/compiler/rustc_lint_defs/src/builtin.rs#L592\">https://github.com/rust-lang/rust/blob/e1e9319d93aea755c444c8f8ff863b0936d7a4b6/compiler/rustc_lint_defs/src/builtin.rs#L592</a> and <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/builtin/static.UNREACHABLE_CODE.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/builtin/static.UNREACHABLE_CODE.html</a>, but I can't find where the rustc implements the macro <code>unreachable!</code> and the lint <code>unreachable_code</code>. Where should I go?</p>",
        "id": 257643011,
        "sender_full_name": "VitalyR",
        "timestamp": 1634270751
    },
    {
        "content": "<p>The macro <code>unreachable!</code> does nothing in regards to diagnosing unreachable code, it expands to a <code>panic!</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"cp\">$crate</span>::<span class=\"fm\">panic!</span><span class=\"p\">(</span><span class=\"s\">\"internal error: entered unreachable code\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"cp\">$msg</span>:<span class=\"nc\">expr</span><span class=\"w\"> </span><span class=\"cp\">$(,</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"cp\">$crate</span>::<span class=\"fm\">unreachable!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$msg</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"cp\">$fmt</span>:<span class=\"nc\">expr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$($arg</span>:<span class=\"nc\">tt</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"cp\">$crate</span>::<span class=\"fm\">panic!</span><span class=\"p\">(</span><span class=\"cp\">$crate</span>::<span class=\"fm\">concat!</span><span class=\"p\">(</span><span class=\"s\">\"internal error: entered unreachable code: \"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$fmt</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"cp\">$($arg</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>You can find the implementation of the macro <a href=\"https://doc.rust-lang.org/std/macro.unreachable.html\">here</a>, by pressing the button <code>[src]</code> (the same applies to any function/macro, on any rustdoc)</p>",
        "id": 257651432,
        "sender_full_name": "AlexApps99",
        "timestamp": 1634278771
    },
    {
        "content": "<p>When you know the name of the lint, you can search for it (in all uppercase) to find where it is implemented.  In this particular case, there are two places <a href=\"https://github.com/rust-lang/rust/blob/1dafe6d1c328d2f0580763e8438a227e490deb10/compiler/rustc_passes/src/liveness.rs#L1284-L1323\">here</a> (and the top of that module contains a description of liveness analysis) and <a href=\"https://github.com/rust-lang/rust/blob/1dafe6d1c328d2f0580763e8438a227e490deb10/compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs#L50-L80\">here</a>.  You can then work backwards to see who calls those functions.</p>",
        "id": 257712424,
        "sender_full_name": "Eric Huss",
        "timestamp": 1634310290
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 257784388,
        "sender_full_name": "VitalyR",
        "timestamp": 1634343356
    }
]