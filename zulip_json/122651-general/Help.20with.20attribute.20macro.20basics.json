[
    {
        "content": "<p>I'm trying to write a simple attribute-like macro for the first time and am having trouble. Would anyone be willing to walk through some bits with me?</p>\n<p>For instance, the macro is defined in <code>src/lib.rs</code>, and I'm trying to write a test in <code>tests/main.rs</code>, and it seems the macro must be imported using the name of the crate rather than the <code>crate</code> keyword. I seem to be running in to a lot of confusing problems like this.</p>",
        "id": 182195597,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1575050904
    },
    {
        "content": "<p>If anyone would like to take a look, the code is here: <a href=\"https://github.com/BatmanAoD/flexible_bin_heap\" target=\"_blank\" title=\"https://github.com/BatmanAoD/flexible_bin_heap\">https://github.com/BatmanAoD/flexible_bin_heap</a></p>",
        "id": 182195830,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1575051159
    },
    {
        "content": "<p>The error I'm currently seeing that I don't understand is:</p>\n<div class=\"codehilite\"><pre><span></span>error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n  --&gt; tests/main.rs:26:1\n   |\n26 | #[with_comparator(data2)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n   | |\n   | only `Fn` traits may use parentheses\n   | help: use angle brackets instead: `#[with_comparator&lt;data2)&gt;`\n</pre></div>\n\n\n<p>The unmatched parenthesis in the <code>help</code> message is interesting but not enlightening. Comparing my macro against those in some other crates that use parentheses, I don't see the difference.</p>",
        "id": 182196548,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1575052086
    },
    {
        "content": "<p><a href=\"https://github.com/BatmanAoD/flexible_bin_heap/blob/cf1bfe68ea8d31b2ee9d548f0b83f181fa0ad142/src/lib.rs#L53\" target=\"_blank\" title=\"https://github.com/BatmanAoD/flexible_bin_heap/blob/cf1bfe68ea8d31b2ee9d548f0b83f181fa0ad142/src/lib.rs#L53\">https://github.com/BatmanAoD/flexible_bin_heap/blob/cf1bfe68ea8d31b2ee9d548f0b83f181fa0ad142/src/lib.rs#L53</a></p>\n<p>That is true for derive macros, but not for attribute macros</p>",
        "id": 182197644,
        "sender_full_name": "bjorn3",
        "timestamp": 1575053503
    },
    {
        "content": "<p><a href=\"https://github.com/BatmanAoD/flexible_bin_heap/blob/cf1bfe68ea8d31b2ee9d548f0b83f181fa0ad142/src/lib.rs#L56\" target=\"_blank\" title=\"https://github.com/BatmanAoD/flexible_bin_heap/blob/cf1bfe68ea8d31b2ee9d548f0b83f181fa0ad142/src/lib.rs#L56\">https://github.com/BatmanAoD/flexible_bin_heap/blob/cf1bfe68ea8d31b2ee9d548f0b83f181fa0ad142/src/lib.rs#L56</a></p>\n<p>You accidentially used <code>Option()</code> instead of <code>Option&lt;&gt;</code>.</p>",
        "id": 182197708,
        "sender_full_name": "bjorn3",
        "timestamp": 1575053578
    },
    {
        "content": "<blockquote>\n<p>That is true for derive macros, but not for attribute macros</p>\n</blockquote>\n<p>Thanks! I see the bit I missed in the reference now -- \"The returned <code>TokenStream</code> <em>replaces</em> the item...\"</p>",
        "id": 182204131,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1575061516
    },
    {
        "content": "<blockquote>\n<p>You accidentially used <code>Option()</code> instead of <code>Option&lt;&gt;</code>.</p>\n</blockquote>\n<p>Ahh, okay, that fiexes the \"parenthesized type parameters\" error; thank you! I thought that was referring to the parentheses around <code>data2</code>.</p>",
        "id": 182208381,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1575067004
    },
    {
        "content": "<p>These suggestions are just heuristics which often go wrong with macros</p>",
        "id": 182208713,
        "sender_full_name": "bjorn3",
        "timestamp": 1575067559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> That also gave me enough of an understanding of what it \"looks like\" when things go wrong to get it working entirely. Thanks again!</p>",
        "id": 182209662,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1575068797
    },
    {
        "content": "<p>I'm still a bit surprised that <code>use flexible_bin_heap::with_comparator</code> works, while <code>use crate::with_comparator</code> doesn't, though.</p>",
        "id": 182209696,
        "sender_full_name": "BatmanAoD (Kyle Strand)",
        "timestamp": 1575068830
    },
    {
        "content": "<p>It normally uses def site hygiene, which means that it is like if you pasted the macro output in the file yourself, so names get resolved relative to the place you use the macro.</p>",
        "id": 182209999,
        "sender_full_name": "bjorn3",
        "timestamp": 1575069194
    }
]