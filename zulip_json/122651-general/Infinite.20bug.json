[
    {
        "content": "<p>Theoretical question. How do you fix a bug in a bootstrapping compiler if to compile the fix to the compiler you needed the fix itself to already be in the compiler. Is such a bug even possible? Can one, say, binary edit the output or something of the sort?</p>",
        "id": 213433415,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1602771918
    },
    {
        "content": "<p>if you have unsoundness in the compiler, you're in trouble, yes</p>",
        "id": 213433598,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602771979
    },
    {
        "content": "<p>but normally the bugs are just errors, and you can implement the feature without actually using the feature</p>",
        "id": 213433644,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602771994
    },
    {
        "content": "<p>If there is a bug in a bootstrapping compiler that prevents you from compiling the fixed compiler, you will have to change the fixed compiler to workaround the bug.</p>",
        "id": 213433670,
        "sender_full_name": "bjorn3",
        "timestamp": 1602772004
    },
    {
        "content": "<p>Ah... That makes sense. Thanks.</p>",
        "id": 213433863,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1602772078
    },
    {
        "content": "<p>This sort of thing is my nightmare <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 213471498,
        "sender_full_name": "Noah Lev",
        "timestamp": 1602788151
    },
    {
        "content": "<p>see also <a href=\"https://www.win.tue.nl/~aeb/linux/hh/thompson/trust.html\">https://www.win.tue.nl/~aeb/linux/hh/thompson/trust.html</a> and <a href=\"https://github.com/rust-lang/rust/issues/48707\">https://github.com/rust-lang/rust/issues/48707</a></p>",
        "id": 213477483,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602790845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256313\">@Hameer Abbasi</span> worst come to worst you can always start a new bootstrap branch from the oldest compiler that could compile a fixed version of the compiler.  But I don't see a realistic scenario where it'd be impossible to workaround the bug.</p>",
        "id": 213497327,
        "sender_full_name": "scottmcm",
        "timestamp": 1602802004
    },
    {
        "content": "<p>I think there are multiple organizations that have bootstrapped their own rustc by now through mrustc.  Dunno if they have redistributed or even just published hashes from that, though...</p>",
        "id": 213497407,
        "sender_full_name": "scottmcm",
        "timestamp": 1602802075
    },
    {
        "content": "<p>That doesn't help if the bug is more than single release back though</p>",
        "id": 213497968,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602802475
    },
    {
        "content": "<p>Especially because of rustc's \"only builds with beta and master\" policy</p>",
        "id": 213497993,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602802493
    },
    {
        "content": "<p>It's just be like a <code>git rebase</code>.  You throw away the last N bootstrap compilers and make new versions of them.</p>",
        "id": 213498286,
        "sender_full_name": "scottmcm",
        "timestamp": 1602802702
    },
    {
        "content": "<p>the new versions would also have the bug. remember for there to be a miscompilation there needs to be a bug in the compiler. The scenario is 1.42 has a miscompile, which changes something in 1.43, which snowballs to the latest release in 1.47. Recompiling doesn't help because 1.42 will still miscompile 1.43.</p>",
        "id": 213500244,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602804203
    },
    {
        "content": "<p>you need to change the source code at some point, which I guess is technically possible but backporting a fix &gt;2 releases sounds extremely painful</p>",
        "id": 213500282,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602804237
    },
    {
        "content": "<p>note that this doesn't matter whether you compiled 1.42 with mrustc or with 1.41; either way it will miscompile 1.43</p>",
        "id": 213500346,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602804269
    },
    {
        "content": "<p>or you find a codegen option that avoids the bad aspect of the broken version</p>",
        "id": 213500373,
        "sender_full_name": "cuviper",
        "timestamp": 1602804301
    },
    {
        "content": "<p>sure, in practice this is pretty unlikely to happen</p>",
        "id": 213500412,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602804330
    },
    {
        "content": "<p>or if the codegen problem is arch-specific, do a new cross-compile from a good host</p>",
        "id": 213500497,
        "sender_full_name": "cuviper",
        "timestamp": 1602804396
    },
    {
        "content": "<p>this discussion also smells a bit like Reflections on Trusting Trust</p>",
        "id": 213500763,
        "sender_full_name": "cuviper",
        "timestamp": 1602804633
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/122651-general/topic/Infinite.20bug/near/213500763\">said</a>:</p>\n<blockquote>\n<p>this discussion also smells a bit like Reflections on Trusting Trust</p>\n</blockquote>\n<p><a href=\"#narrow/stream/122651-general/topic/Infinite.20bug/near/213477483\">https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Infinite.20bug/near/213477483</a> ;)</p>",
        "id": 213500820,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602804682
    },
    {
        "content": "<p>ha, I skimmed too fast</p>",
        "id": 213501830,
        "sender_full_name": "cuviper",
        "timestamp": 1602805584
    },
    {
        "content": "<p>Someone needs to write a blog post entitled \"Reflections on Trusting Rust\" :D</p>",
        "id": 213526873,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602833508
    },
    {
        "content": "<p>Will you accept \"Reflections on Rusting Trust\"?<br>\n<a href=\"https://manishearth.github.io/blog/2016/12/02/reflections-on-rusting-trust/\">https://manishearth.github.io/blog/2016/12/02/reflections-on-rusting-trust/</a></p>",
        "id": 213572564,
        "sender_full_name": "cuviper",
        "timestamp": 1602860827
    }
]