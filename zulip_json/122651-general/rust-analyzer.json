[
    {
        "content": "<p>I have been routed here from the <code>rust-analyzer</code> 's README ... but I find myself confused as of where specifically to ask a question about it. I am having difficulties compiling it (had none 3 weeks ago, but git-pull-ed today and it no longer compiles). Where would be the best channel/stream to ask about it ?</p>",
        "id": 184227727,
        "sender_full_name": "Adeynack",
        "timestamp": 1577300197
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"185405\" href=\"/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0\">#t-compiler/wg-rls-2.0</a> might be a good start</p>",
        "id": 184227740,
        "sender_full_name": "davidtwco",
        "timestamp": 1577300265
    },
    {
        "content": "<p>I assumed they were 2 different projects.</p>",
        "id": 184227838,
        "sender_full_name": "Adeynack",
        "timestamp": 1577300411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"255464\">@Adeynack</span> not really, well, kind of</p>",
        "id": 184228079,
        "sender_full_name": "simulacrum",
        "timestamp": 1577300977
    },
    {
        "content": "<p>rls-2.0 is an umbrella for the future of RLS</p>",
        "id": 184228081,
        "sender_full_name": "simulacrum",
        "timestamp": 1577300984
    },
    {
        "content": "<p>right now rust-analyzer is a proving ground for the new technologies involved in that</p>",
        "id": 184228082,
        "sender_full_name": "simulacrum",
        "timestamp": 1577300998
    },
    {
        "content": "<p>Hi. I'm new to Zulip. I got redirected here from <a href=\"https://github.com/rust-analyzer/rust-analyzer\" title=\"https://github.com/rust-analyzer/rust-analyzer\">https://github.com/rust-analyzer/rust-analyzer</a> . Can someone point me to the right \"get rust-analyzer + vs code to work\" channel?</p>\n<p>I currently have<br>\n  rustup 1.21.1<br>\n  rustc: 1.43.0 stable<br>\n  components rust-src, rust-analysis installed<br>\n  vs code version 1.41.1</p>\n<p>I have a rust/workspace with ~ 30k LOC rust that works okay (but sometimes laggy) in IntelliJ.</p>\n<p>I'm trying to use this same work space in VS Code + RLS + Rust Analyer, but am getting error:</p>\n<p>Error: ProtocolError(\"unexpected message during shutdown: Ok(Response(Response { id: RequestId(U64(1)), result: None, error: Some(ResponseError { code: -32603, message: \\\"Request window/workDoneProgress/create failed with message: Language client is not ready yet\\\"thread ', data: None }) }))\")&lt;unnamed&gt;<br>\n' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: \"SendError(..)\"',</p>",
        "id": 196740308,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588840118
    },
    {
        "content": "<p>The rust-analyzer channel is <a class=\"stream\" data-stream-id=\"185405\" href=\"/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0\">#t-compiler/wg-rls-2.0</a>.</p>",
        "id": 196742077,
        "sender_full_name": "bjorn3",
        "timestamp": 1588841181
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"299970\">@zeroexcuses</span> ^</p>",
        "id": 196742116,
        "sender_full_name": "bjorn3",
        "timestamp": 1588841211
    },
    {
        "content": "<p>First of all, I wouldn't use both RLS and rust-analyzer at the same time</p>",
        "id": 196742198,
        "sender_full_name": "Laurențiu",
        "timestamp": 1588841263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span>  : I thought (incorrectly) that rust-analyzer depended on RLS. <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> : Thanks!</p>",
        "id": 196743869,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588842292
    },
    {
        "content": "<p>And you should upgrade to a newer version of Code. rust-analyzer requires the latest one (1.44). Since you're on 1.41, the Code Marketplace sends you an older version of the extension.</p>",
        "id": 196743915,
        "sender_full_name": "Laurențiu",
        "timestamp": 1588842327
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span>  I'm running code-1.44.2 now. I _think_ this fixed it (atleast it's trying to index my workspace now). Is there some trivial action I can try to verify if indeed rust-analyzer is working inside of code ?</p>",
        "id": 196744423,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588842655
    },
    {
        "content": "<p>Try typing something like <code>Vec::</code> inside a function. It should show multiple functions in the suggestion.</p>",
        "id": 196744584,
        "sender_full_name": "bjorn3",
        "timestamp": 1588842738
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/whrfo6P__7iXXm_QHetVbao0/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/whrfo6P__7iXXm_QHetVbao0/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/whrfo6P__7iXXm_QHetVbao0/image.png\"></a></div>",
        "id": 196744664,
        "sender_full_name": "bjorn3",
        "timestamp": 1588842818
    },
    {
        "content": "<p>If I type in </p>\n<div class=\"codehilite\"><pre><span></span><code>let x = vec![20]\n</code></pre></div>\n\n\n<p>it fills in the type signature, then if type \"x.\" it gives me auto completion -- this implies it's working? (only active plugins are neo-vim and rust-analyzer)</p>",
        "id": 196744678,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588842832
    },
    {
        "content": "<p>Yes</p>",
        "id": 196744753,
        "sender_full_name": "bjorn3",
        "timestamp": 1588842871
    },
    {
        "content": "<p>I'm using feature track_caller, which requires nightly. Is there a way to tell rust-analyzer/vscode to use the nightly tool chain rather than the stable tool chain ?</p>",
        "id": 196745212,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588843167
    },
    {
        "content": "<p>stable/nightly issue resolved</p>",
        "id": 196745592,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588843426
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"299970\">zeroexcuses</span> <a href=\"#narrow/stream/122651-general/topic/rust-analyzer/near/196745592\" title=\"#narrow/stream/122651-general/topic/rust-analyzer/near/196745592\">said</a>:</p>\n<blockquote>\n<p>stable/nightly issue resolved</p>\n</blockquote>\n<p>care to share how for future readers having the same problem? :D</p>",
        "id": 196746485,
        "sender_full_name": "RalfJ",
        "timestamp": 1588843998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span>  : The problem is that I did</p>\n<div class=\"codehilite\"><pre><span></span><code>rustup toolchain install nightly\nrustup toolchain uninstall stable\n</code></pre></div>\n\n\n<p>and I did not do a </p>\n<div class=\"codehilite\"><pre><span></span><code>rustup default nightly\n</code></pre></div>\n\n\n<p>After \"rustup default nightly\" and restarting vs code, it appears to be working</p>",
        "id": 196747036,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588844333
    },
    {
        "content": "<p>You can also use <code>rustup override set nightly</code> to use nightly only for the current directory.</p>",
        "id": 196747079,
        "sender_full_name": "bjorn3",
        "timestamp": 1588844363
    },
    {
        "content": "<p>I have more than one physical monitor. I'm also using xmonad to layout windows in particular places (like terminal / compile output immediately to the right of the editor).</p>\n<p>In vs code, is it possible to pop out the terminal/compile-output window as a separate window? So far, it seems as if all of code is a single window.</p>",
        "id": 196748105,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588844971
    },
    {
        "content": "<p>I don't think Code supports external windows, but you can run a separate terminal anyway. I never got used to the one built-in in Code.</p>",
        "id": 196748244,
        "sender_full_name": "Laurențiu",
        "timestamp": 1588845055
    },
    {
        "content": "<p>It's more that I want the unit tests / compile output on a separate vertical window, so that I can scan it, click on errors, and have the editor window jump to the right file / line number.</p>",
        "id": 196748324,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588845105
    },
    {
        "content": "<p><a href=\"https://github.com/Microsoft/vscode/issues/10121\" title=\"https://github.com/Microsoft/vscode/issues/10121\">https://github.com/Microsoft/vscode/issues/10121</a></p>\n<p>2900 upvotes and open for ~4 years</p>",
        "id": 196748450,
        "sender_full_name": "bjorn3",
        "timestamp": 1588845168
    },
    {
        "content": "<p>It's the first one if you sort by <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 196748476,
        "sender_full_name": "Laurențiu",
        "timestamp": 1588845190
    },
    {
        "content": "<p>I guess I could use xmonad to say: This is not two 3840x2160 monitors. This is one 7680x2160 monitor. Trust me.</p>",
        "id": 196748850,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588845459
    },
    {
        "content": "<p>This kinda works. When you click \"run test\" in vs code, does it end up running _all tests_ in the workspace instead of just the test you click on?</p>",
        "id": 196749818,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588846046
    },
    {
        "content": "<p>It appears to run all tests in all crates in the workspace that have the same name. (Instead of just the test in the current crate that has the same name).</p>",
        "id": 196749945,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588846113
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/features.md\" title=\"https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/features.md\">https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/features.md</a> claims there are features for goto def and goto impl; how do I find the hot keys for these ?</p>",
        "id": 196750494,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588846498
    },
    {
        "content": "<p>goto def is F12</p>",
        "id": 196750577,
        "sender_full_name": "bjorn3",
        "timestamp": 1588846562
    },
    {
        "content": "<p>goto impl is ctrl + F12</p>",
        "id": 196750639,
        "sender_full_name": "bjorn3",
        "timestamp": 1588846585
    },
    {
        "content": "<p>goto references is shift + F12</p>",
        "id": 196750666,
        "sender_full_name": "bjorn3",
        "timestamp": 1588846608
    },
    {
        "content": "<p>Thanks, I see my problem now. According to xev , 'f12' right now is triggering  XF86Eject</p>",
        "id": 196750721,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588846649
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/XcqzW3rmzLSWNaBnMk8ahhPc/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/XcqzW3rmzLSWNaBnMk8ahhPc/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/XcqzW3rmzLSWNaBnMk8ahhPc/image.png\"></a></div>",
        "id": 196750725,
        "sender_full_name": "bjorn3",
        "timestamp": 1588846652
    },
    {
        "content": "<p>Got that sorted out. F12 / goto def works now.</p>",
        "id": 196751444,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588847161
    },
    {
        "content": "<p>You can also press F1 and type the command you're looking for</p>",
        "id": 196753486,
        "sender_full_name": "Laurențiu",
        "timestamp": 1588848434
    },
    {
        "content": "<p>Is there a way to \"run last unit test\" (and only last unit test). I see the command for \"cargo test\", but it runs all tests. I like to write a test then continuously run it / edit code / rerun test until it gets fixed.</p>",
        "id": 196755710,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588849934
    },
    {
        "content": "<p>I don't want to re-run all tests every time, as that can be time expensive.</p>",
        "id": 196755734,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588849951
    },
    {
        "content": "<p>If you have cargo-watch installed, you can do <code>cargo watch -s \"cargo test -- test_name\"</code>.</p>",
        "id": 196755949,
        "sender_full_name": "bjorn3",
        "timestamp": 1588850063
    },
    {
        "content": "<p>I have used cargo-watch before, but it's not quite what I want. In IntelliJ + Rust + vim plugin, I have bound &lt;esc&gt; ;rr = rerun last unit test</p>\n<p>so it's edit -&gt; ;rr -&gt; click on compile error / runtime error -&gt; loop</p>",
        "id": 196759840,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1588852705
    }
]