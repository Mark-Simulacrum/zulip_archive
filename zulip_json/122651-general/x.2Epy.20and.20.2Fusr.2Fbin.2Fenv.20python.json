[
    {
        "content": "<p>x.py defines <code>#/usr/bin/env python</code> in its first line. Conventionally, <code>python</code> points to Python 2, and some systems define it as pointing to Python 3. However, some systems don't define <code>python</code> at all to opt out of the ambiguity - including my own. Considering Python 2 is 2 years deprecated, is there any reason to not just switch it to saying python3 explicitly?</p>",
        "id": 270774496,
        "sender_full_name": "Alyssa Haroldsen [she]",
        "timestamp": 1644009775
    },
    {
        "content": "<p>CI runs on some ancient distros to ensure backwards compatibility</p>",
        "id": 270777791,
        "sender_full_name": "The 8472",
        "timestamp": 1644011481
    },
    {
        "content": "<p>I'm pretty sure we're using py3 on those CIs though</p>",
        "id": 270777817,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1644011509
    },
    {
        "content": "<p>Hrm, ok</p>",
        "id": 270777891,
        "sender_full_name": "The 8472",
        "timestamp": 1644011539
    },
    {
        "content": "<p>At least the llvm 12 builder does</p>\n<div class=\"codehilite\"><pre><span></span><code>ENV SCRIPT python2.7 ../x.py --stage 2 test --exclude src/tools/tidy &amp;&amp; \\\n</code></pre></div>",
        "id": 270777966,
        "sender_full_name": "The 8472",
        "timestamp": 1644011584
    },
    {
        "content": "<p>python3 is not available on Windows, IIRC, or vice-versa</p>",
        "id": 270777998,
        "sender_full_name": "simulacrum",
        "timestamp": 1644011613
    },
    {
        "content": "<p>My recollection is that there is no executable name that is actually available across (macOS, Linux, Windows) even that corresponds to Python 3.x or 2.x</p>",
        "id": 270778100,
        "sender_full_name": "simulacrum",
        "timestamp": 1644011651
    },
    {
        "content": "<p>If you're on a debian flavor you can install <code>python-is-python3</code></p>",
        "id": 270778110,
        "sender_full_name": "The 8472",
        "timestamp": 1644011660
    },
    {
        "content": "<p>If that's changed, then I'd be happy to accept a PR updating the file, but otherwise I'm inclined to leave it as-is and recommend e.g. python-is-python3 as <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> mentions.</p>",
        "id": 270778145,
        "sender_full_name": "simulacrum",
        "timestamp": 1644011688
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/71226d717a1fb57122e47e63b97295e703319cb0/src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile\">https://github.com/rust-lang/rust/blob/71226d717a1fb57122e47e63b97295e703319cb0/src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile</a></p>",
        "id": 270778146,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1644011688
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/270777998\">said</a>:</p>\n<blockquote>\n<p>python3 is not available on Windows, IIRC, or vice-versa</p>\n</blockquote>\n<p>It depends how you install Python. The official installer uses a weird \"py -3\" for running python3 (idk why, legacy maybe). If you install via the Windows store then there is a \"python3\".</p>",
        "id": 270779085,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644012210
    },
    {
        "content": "<p>Yeah, sure. Basically I think the current situation is bad, and if someone has data (e.g., that across common platforms a majority have a python3) then switching seems OK, I guess. Otherwise it doesn't seem worth it to me.</p>",
        "id": 270779594,
        "sender_full_name": "simulacrum",
        "timestamp": 1644012480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/270778110\">said</a>:</p>\n<blockquote>\n<p>If you're on a debian flavor you can install <code>python-is-python3</code></p>\n</blockquote>\n<p>I would very much recommend not doing that, though, because <em>many</em> scripts use <code>#!/usr/bin/python</code> or <code>#!/usr/bin/env python</code> and assume Python 2.</p>",
        "id": 270786161,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644016739
    },
    {
        "content": "<p>Could we make the script use <code>#!/bin/sh</code> and then go find the right version of Python and run ourselves?</p>",
        "id": 270786186,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644016776
    },
    {
        "content": "<p>I thought I remembered seeing a PR that tried to do that.</p>",
        "id": 270786209,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644016801
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"ch\">#!/bin/sh</span>\n<span class=\"nv\">python_ignores_this</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\"># shell script to find Python 3 and exec that with </span><span class=\"nv\">$0</span><span class=\"s2\"> goes here</span>\n<span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"c1\"># Python script goes here</span>\n</code></pre></div>",
        "id": 270786383,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644016913
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> If we asked the Python installer folks, they might be willing to add a <code>python3</code> for consistency.</p>",
        "id": 270786529,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644017000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/270778110\">said</a>:</p>\n<blockquote>\n<p>If you're on a debian flavor you can install <code>python-is-python3</code></p>\n</blockquote>\n<p>Ah, thank you! I'm not running any Python 2 code to my knowledge, so this is a good mitigation for my case.</p>",
        "id": 270787935,
        "sender_full_name": "Alyssa Haroldsen [she]",
        "timestamp": 1644018117
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/270786186\">said</a>:</p>\n<blockquote>\n<p>Could we make the script use <code>#!/bin/sh</code> and then go find the right version of Python and run ourselves?</p>\n</blockquote>\n<p>IIRC, we didn't do that because on Windows that sort of thing doesn't work? (Maybe /bin/sh is not typically present)?</p>",
        "id": 270789319,
        "sender_full_name": "simulacrum",
        "timestamp": 1644019094
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> We could add an x.bat for Windows. :)</p>",
        "id": 270789577,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644019240
    },
    {
        "content": "<p>I'm not sure that's worth it. Not sure.</p>",
        "id": 270789619,
        "sender_full_name": "simulacrum",
        "timestamp": 1644019266
    },
    {
        "content": "<p>Feels annoying, particularly for docs/copy-pasting etc</p>",
        "id": 270789637,
        "sender_full_name": "simulacrum",
        "timestamp": 1644019280
    },
    {
        "content": "<p>Not going to argue with that. :)</p>",
        "id": 270789646,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644019287
    },
    {
        "content": "<p>I'm not sure either. But I'd love to stop running <code>python3 x.py</code>, and have <code>./x.py</code> just work on systems that don't have a <code>/usr/bin/python</code>.</p>",
        "id": 270789677,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644019314
    },
    {
        "content": "<p>If we got the official Python installer to install a python3 binary, I wonder if that'd tip the balance in favor of being able to use <code>#!/usr/bin/env python3</code>.</p>",
        "id": 270789750,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644019351
    },
    {
        "content": "<p>Well, if we can bug the Python installer on Windows(?) to give us a python3 binary, then we can do that, I think</p>",
        "id": 270789751,
        "sender_full_name": "simulacrum",
        "timestamp": 1644019351
    },
    {
        "content": "<p>/me is somewhat sad that this isn't already the case, but what can you do.</p>",
        "id": 270789794,
        "sender_full_name": "simulacrum",
        "timestamp": 1644019377
    },
    {
        "content": "<p>I think both (most) Linux and macOS systems already have python3 (at least relatively recent ones), so there we should be good - it's windows that causes the problem, typically.</p>",
        "id": 270789857,
        "sender_full_name": "simulacrum",
        "timestamp": 1644019430
    },
    {
        "content": "<p>I'm looking on the Python issue tracker to see if they have any existing issue about this.</p>",
        "id": 270792447,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644021767
    },
    {
        "content": "<p>Hmmm. Do you have a Windows system handy?</p>",
        "id": 270792472,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644021806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> Do you have a Windows system handy with Python installed via the official Python installer, not the Microsoft store?</p>",
        "id": 270792530,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644021844
    },
    {
        "content": "<p>I can spin up a VM easily enough.</p>",
        "id": 270792687,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644021988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> It looks like there's at least one person on the Python team who is violently opposed to shipping <code>python3.exe</code>, and it sounds like that'd take some convincing. Still worth trying, though, and in particular, it seems like they don't really care much about compatibility with Linux, and it'd be worth trying to convince them that we have a cross-platform issue here.</p>",
        "id": 270792739,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644022047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> Could you confirm that the official Python installer for Windows doesn't install a <code>python3.exe</code> anywhere in the installation?</p>",
        "id": 270792751,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644022068
    },
    {
        "content": "<p>Only <code>python.exe</code>?</p>",
        "id": 270792759,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644022076
    },
    {
        "content": "<p>Yep. It installs to <code>C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python310</code>. The only executables are <code>python.exe</code>, <code>pythonw.exe</code>. It also adds <code>C:\\Windows\\py.exe</code> which can by used to select a version.</p>",
        "id": 270792960,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644022258
    },
    {
        "content": "<p>Thanks for confirming.</p>",
        "id": 270793316,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644022630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Does current macOS ship /usr/bin/python pointing to python3, or does it not ship /usr/bin/python at all?</p>",
        "id": 270793331,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644022647
    },
    {
        "content": "<p>Er, rephrasing...</p>",
        "id": 270793337,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644022653
    },
    {
        "content": "<p>How do <code>#!/usr/bin/env python</code> and <code>#!/usr/bin/env python3</code> work on macOS?</p>",
        "id": 270793352,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644022672
    },
    {
        "content": "<p>I'll need to check when I'm back at my desk, but python's docs at least say The Apple-provided build of Python is installed in /System/Library/Frameworks/Python.framework and /usr/bin/python, respectively.</p>",
        "id": 270793447,
        "sender_full_name": "simulacrum",
        "timestamp": 1644022734
    },
    {
        "content": "<p>And homebrew installs python3 at least - <a href=\"https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/python@3.10.rb#L267\">https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/python@3.10.rb#L267</a></p>",
        "id": 270793885,
        "sender_full_name": "simulacrum",
        "timestamp": 1644023099
    },
    {
        "content": "<p>So I suspect both work out of the box</p>",
        "id": 270793898,
        "sender_full_name": "simulacrum",
        "timestamp": 1644023111
    },
    {
        "content": "<p>I was reading <a href=\"https://macmule.com/2022/01/29/macos-monterey-12-3-will-remove-python-2-7-usr-bin-python/\">https://macmule.com/2022/01/29/macos-monterey-12-3-will-remove-python-2-7-usr-bin-python/</a> and wondering how that related.</p>",
        "id": 270794058,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644023273
    },
    {
        "content": "<p>Hm, well, maybe it's a short term happiness :(</p>",
        "id": 270794146,
        "sender_full_name": "simulacrum",
        "timestamp": 1644023348
    },
    {
        "content": "<p><code>/usr/bin/python</code> is python 2.  There's all sorts of warnings if you try to use it.  I use homebrew and set up my path so that <code>python</code> is python3.  I'm stubborn with my habits.</p>",
        "id": 270794335,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644023542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> One other check: if you have a script with <code>#!/usr/bin/env python3</code>, does that work on a Windows system that has installed Python via the Microsoft store, and never used the official Python installer?</p>",
        "id": 270794475,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644023646
    },
    {
        "content": "<p>I think the shebang is entirely ignored. Shells will run it based on the file extension alone.</p>",
        "id": 270794823,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644023962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> Right, but the question is what the file association for that extension <em>does</em> with that shebang.</p>",
        "id": 270794837,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644023987
    },
    {
        "content": "<p>AFAICT, the official Python installer associates <code>.py</code> with a dispatch program that looks at the shebang.</p>",
        "id": 270794915,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644024025
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Draft message to Python issue tracker</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>I'm writing this issue on behalf of the Rust project.</p>\n<p>The build system for the Rust compiler is a Python 3 script <code>x.py</code>, which orchestrates the build process for a user even if they don't already have Rust installed. (For instance, <code>x.py build</code>, <code>x.py test</code>, and various command-line arguments for more complex cases.)</p>\n<p>We currently run into various issues making this script easy for people to use on all common platforms people build Rust on: Windows, macOS, and Linux.</p>\n<p>If we use a shebang of <code>#!/usr/bin/env python3</code>, then x.py works for macOS and Linux users, and also works on Windows systems that install Python via the Windows store, but fails to run on Windows systems that install via the official Python installer, requiring users to explicitly invoke Python 3 on the script, and adding friction, support issues, and complexity to our documentation to help users debug that situation.</p>\n<p>If we use a shebang of <code>#!/usr/bin/env python</code>, then x.py works for Windows users, fails on some modern macOS systems, works on other modern macOS systems (depending on installation method I think, e.g. homebrew vs Apple), fails on some modern Linux systems, and on macOS and Linux systems where it <em>does</em> work, it might be python2 or python3. So in practice, people often have to explicitly run <code>python3 x.py</code>, which again results in friction, support issues, and complexity in our documentation.</p>\n<p>We've even considered things like <code>#!/bin/sh</code> and then writing a shell script hidden inside a Python triple-quoted string, but that doesn't work well on Windows where we can't count on the presence of a shell.</p>\n<p>We'd love to write a single shebang that works for all of Windows, macOS, and Linux systems, and doesn't resort in recurring friction or support issues for us across the wide range of systems that our users use.</p>\n<p>As far as we can tell, <code>#!/usr/bin/env python3</code> would work on all platforms, if the Python installer for Windows shipped a <code>python3.exe</code> and handled that shebang by using <code>python3.exe</code> as the interpreter.</p>\n<p>Is that something that the official Python installer could consider adding, to make it easy for us to supply cross-platform Python 3 scripts that work out of the box for all our users?</p>\n<p>Thank you,<br>\nJosh Triplett, on behalf of many Rust team members</p>\n</div></div>\n<p>I'd love to get feedback on this before sending it.</p>",
        "id": 270794946,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644024056
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> I'd like to make sure I'm accurately describing the behavior of Python when installed via the Microsoft store.</p>",
        "id": 270794989,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644024093
    },
    {
        "content": "<p>As far as I can tell, python2 isn't available on the store. The earliest is 3.8. So it should always use python3.</p>",
        "id": 270795093,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644024175
    },
    {
        "content": "<p><em>nod</em>, but I'd like to make sure that such a script actually does find and use Python.</p>",
        "id": 270795112,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644024199
    },
    {
        "content": "<p>I don't expect a script with <code>#!/usr/bin/env python3</code> to accidentally run Python 2, I just want to make sure it works rather than failing with some kind of error.</p>",
        "id": 270795125,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644024222
    },
    {
        "content": "<p>Ok, I misunderstood. I tested it with <code>#!/usr/bin/env python3</code>. It works.</p>",
        "id": 270796201,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644025108
    },
    {
        "content": "<p>The only weirdness is that in powershell it will spawn a new command prompt unless <code>;.py</code> is appended to the <code>PATHEXT</code> environment variable.</p>",
        "id": 270796239,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644025176
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260325\">Chris Denton</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/270796201\">said</a>:</p>\n<blockquote>\n<p>Ok, I misunderstood. I tested it with <code>#!/usr/bin/env python3</code>. It works.</p>\n</blockquote>\n<p>That helps a great deal, thank you!</p>",
        "id": 270796676,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644025592
    },
    {
        "content": "<p>Any objections to the message I wrote <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/270794946\">above</a>?</p>",
        "id": 270796730,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644025676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>  Hm. I've tested with both the Windows store version and the official installer. Both seem fine with the shebang. I'm not actually sure it matters that python3.exe doesn't literally exist, it seems to interpret it fine either way. At least, I can't figure out how to replicate the failures people have mentioned. Maybe something has changed recently.</p>",
        "id": 270798003,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644026979
    },
    {
        "content": "<p>Huh!</p>",
        "id": 270798065,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644027036
    },
    {
        "content": "<p>Is that true on a system that has never had the windows store version installed? I want to make sure this isn't an artifact of having used multiple different installers.</p>",
        "id": 270798074,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644027055
    },
    {
        "content": "<p>Yeah, I tested on a fresh VM.</p>",
        "id": 270798094,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644027082
    },
    {
        "content": "<p>There could be some weird interaction with third party shells though.</p>",
        "id": 270798102,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644027098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> fwiw, x.py is python 2 and python 3 compatible</p>",
        "id": 270798442,
        "sender_full_name": "simulacrum",
        "timestamp": 1644027532
    },
    {
        "content": "<p>(in part due to the desire to just work regardless of what python equals)</p>",
        "id": 270798524,
        "sender_full_name": "simulacrum",
        "timestamp": 1644027638
    },
    {
        "content": "<p>Otherwise the message seems ok to me</p>",
        "id": 270798528,
        "sender_full_name": "simulacrum",
        "timestamp": 1644027650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Ok, so the problem occurs if using the third party <a href=\"https://www.msys2.org/\">MSYS2 shell</a> (which emulates a *nix environment) and the native python (installed using the official installer) instead of installing the msys2 python.</p>",
        "id": 270798883,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644028088
    },
    {
        "content": "<p>So using MSYS2 with the official Windows installer and using the <code>python3</code> shebang will fail.</p>",
        "id": 270798885,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644028091
    },
    {
        "content": "<p>Sounds like I need to post a correction to the issue I just filled then.</p>",
        "id": 270799834,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644029518
    },
    {
        "content": "<p>And, sounds like we might be able to change the shebang.</p>",
        "id": 270799877,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644029536
    },
    {
        "content": "<p>Basically the issue is mostly correct except to add that it only fails when used via MSYS2.</p>",
        "id": 270800107,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644029868
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 270800418,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030124
    },
    {
        "content": "<p>Do you know if this has changed at some point?</p>",
        "id": 270800443,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030173
    },
    {
        "content": "<p>I don't think it has but I'm not totally sure.</p>",
        "id": 270800528,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644030275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> And, <code>#!/usr/bin/env python3</code> works with the official installer from cmd as well? (You mentioned the quirk with PowerShell above, but I'm hoping it worked with cmd.)</p>",
        "id": 270800534,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030289
    },
    {
        "content": "<p>Yeah that works.</p>",
        "id": 270800549,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644030305
    },
    {
        "content": "<p>Thank you so much for the testing!</p>",
        "id": 270800560,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030318
    },
    {
        "content": "<p>Just posted a correction to <a href=\"https://bugs.python.org/issue46645\">https://bugs.python.org/issue46645</a></p>",
        "id": 270800642,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644030404
    },
    {
        "content": "<p>Earlier discussion in <a href=\"https://github.com/rust-lang/rust/issues/71841\">#71841</a></p>",
        "id": 270829165,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644070475
    },
    {
        "content": "<p>If anyone finds that <code>./x.py</code> doesn’t work for them personally because they only have <code>python2</code> and/or <code>python3</code> installed, note that <a href=\"https://github.com/rust-lang/rust/tree/master/src/tools/x\">https://github.com/rust-lang/rust/tree/master/src/tools/x</a> is a thing.</p>",
        "id": 270853252,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1644100793
    },
    {
        "content": "<p><del>Hmm, I tried that on windows and it popped the \"How do you want to open this file?\" dialog.  I guess it's still <code>python x.py</code> for me.</del> My bad!  Apparently windows still hates symlinks.</p>",
        "id": 270858158,
        "sender_full_name": "scottmcm",
        "timestamp": 1644108320
    },
    {
        "content": "<p>I think currently it'll ask you the firat you run a .py file. But that's a one time thing.</p>",
        "id": 270864842,
        "sender_full_name": "Chris Denton",
        "timestamp": 1644117210
    },
    {
        "content": "<p>I tried to <code>mklink</code> instead of copying the exe, and it didn't use it.  Once it was actually picking up the exe everything was fine.</p>",
        "id": 270866013,
        "sender_full_name": "scottmcm",
        "timestamp": 1644118915
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280891\">Frank Steffahn</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/270853252\">said</a>:</p>\n<blockquote>\n<p>If anyone finds that <code>./x.py</code> doesn’t work for them personally because they only have <code>python2</code> and/or <code>python3</code> installed, note that <a href=\"https://github.com/rust-lang/rust/tree/master/src/tools/x\">https://github.com/rust-lang/rust/tree/master/src/tools/x</a> is a thing.</p>\n</blockquote>\n<p>That doesn't fix things like the default git hooks invoking <code>x.py</code> directly as an executable</p>",
        "id": 271171218,
        "sender_full_name": "Alyssa Haroldsen [she]",
        "timestamp": 1644345101
    },
    {
        "content": "<p>macOS Monterey 12.3 was released today. It has removed python 2, and does not ship with a <code>python</code> name available in path. I created an issue here <a href=\"https://github.com/rust-lang/rust/issues/94964\">https://github.com/rust-lang/rust/issues/94964</a> that was closed in favor of the other issue from 2020 <a href=\"https://github.com/rust-lang/rust/issues/71818\">https://github.com/rust-lang/rust/issues/71818</a> - <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span>  also mentioned this issue upstream in python: <a href=\"https://bugs.python.org/issue46645\">https://bugs.python.org/issue46645</a></p>",
        "id": 275398811,
        "sender_full_name": "Walther",
        "timestamp": 1647362100
    },
    {
        "content": "<p>I think all proposals so far hurt some platform - but as I mentioned, a proper summary across both current fresh installs and (where relevant) things like rhel etc that would be good.</p>",
        "id": 275400937,
        "sender_full_name": "simulacrum",
        "timestamp": 1647362935
    },
    {
        "content": "<h1>Names of Python</h1>\n<p>Problem statement: across different operating system versions and installation methods, which names for Python are available in path?</p>\n<h2>Background</h2>\n<p>Josh Triplett at Python Issue Tracker <a href=\"https://bugs.python.org/issue46645\">Issue 46645</a>:</p>\n<blockquote>\n<p>The build system for the Rust compiler is a Python 3 script <code>x.py</code>, which orchestrates the build process for a user even if they don't already have Rust installed. (For instance, <code>x.py build</code>, <code>x.py test</code>, and various command-line arguments for more complex cases.)</p>\n<p>We currently run into various issues making this script easy for people to use on all common platforms people build Rust on: Windows, macOS, and Linux.</p>\n<p>If we use a shebang of <code>#!/usr/bin/env python3</code>, then x.py works for macOS and Linux users, and also works on Windows systems that install Python via the Windows store, but fails to run on Windows systems that install via the official Python installer, requiring users to explicitly invoke Python 3 on the script, and adding friction, support issues, and complexity to our documentation to help users debug that situation.</p>\n<p>If we use a shebang of <code>#!/usr/bin/env python</code>, then x.py works for Windows users, fails on some modern macOS systems, works on other modern macOS systems (depending on installation method I think, e.g. homebrew vs Apple), fails on some modern Linux systems, and on macOS and Linux systems where it <em>does</em> work, it might be python2 or python3. So in practice, people often have to explicitly run <code>python3 x.py</code>, which again results in friction, support issues, and complexity in our documentation.</p>\n</blockquote>\n<h2>Data collection</h2>\n<p>We are going to need several tables for this.</p>\n<ul>\n<li>Linux, per distribution, per version<ul>\n<li>base install, without installing Python manually</li>\n<li>installation of Python 3 from the default operating system repositories</li>\n<li>other installation methods: what else exists and which are relevant?</li>\n</ul>\n</li>\n<li>Windows, per version<ul>\n<li>official Python 3 installer from &lt;<a href=\"https://www.python.org/downloads/windows/\">https://www.python.org/downloads/windows/</a>&gt;</li>\n<li>official Python 3 installer from Windows Store as per &lt;<a href=\"https://docs.microsoft.com/en-us/windows/python/beginners\">https://docs.microsoft.com/en-us/windows/python/beginners</a>&gt;</li>\n<li>other installation methods: what else exists and which are relevant?</li>\n</ul>\n</li>\n<li>macOS, per version<ul>\n<li>base install, without installing Python manually</li>\n<li>official Python 3 installer from &lt;<a href=\"https://www.python.org/downloads/macos/\">https://www.python.org/downloads/macos/</a>&gt;</li>\n<li>homebrew, as a de facto package manager on macOS</li>\n<li>other installation methods: what else exists and which are relevant?</li>\n</ul>\n</li>\n</ul>\n<h2>Methodology</h2>\n<p>These are the questions we need to ask for each operating system and installation method:</p>\n<ol>\n<li>Does running <code>python -V</code> work? What does it return? (namely, 2 or 3)</li>\n<li>Does running <code>python3 -V</code> work?</li>\n<li>What other names for python are added to path, if any? (e.g. <code>py.exe</code>, others?)</li>\n</ol>\n<p>Note: we should <em>not</em> use helper packages like Ubuntu's <a href=\"https://packages.ubuntu.com/focal/python-is-python3\">python-is-python3</a> unless automatically installed by default on some operating system. We are concerned with the out-of-the-box experience, so we <em>must not</em> use any manual workarounds when collecting the data.</p>\n<h2>Open questions</h2>\n<ul>\n<li>Which linux distributions should we include?<ul>\n<li>Is there a popularity table somewhere?</li>\n<li>Probably at least Ubuntu, Debian, Arch, some commercial options like RHEL, other?</li>\n<li>Which versions should we include - how many years/versions back?</li>\n</ul>\n</li>\n<li>What is the easiest way to collect this data?<ul>\n<li>For linux distributions and versions, can we fully automate this?<ul>\n<li>e.g. write a script &amp; run on some cloud provider; likely to be quick and cheap</li>\n</ul>\n</li>\n<li>For Windows versions and install methods, can we do any automation?</li>\n<li>For macOS versions and install methods, can we do any automation?</li>\n</ul>\n</li>\n</ul>\n<h2>Ideal outcome</h2>\n<p>Ideally, we would find out a name that works the same way on all platforms. However, according to earlier conversations, this is unlikely.</p>\n<p>If not, we could hope to encourage Python developers to standardize and implement a name that is available on all install methods (e.g. <code>python3</code>).</p>",
        "id": 275503468,
        "sender_full_name": "Walther",
        "timestamp": 1647433834
    },
    {
        "content": "<p>Does Windows even care about the Shebang outside of WSL?</p>",
        "id": 275505811,
        "sender_full_name": "NeoRaider",
        "timestamp": 1647435236
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"294290\">NeoRaider</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/275505811\">said</a>:</p>\n<blockquote>\n<p>Does Windows even care about the Shebang outside of WSL?</p>\n</blockquote>\n<p>I would assume so, considering that that has been the main argument of not changing the current shebang to python3 as it \"would break windows users\"</p>",
        "id": 275507191,
        "sender_full_name": "Walther",
        "timestamp": 1647435888
    },
    {
        "content": "<p>The kernel does not recognize shebangs in any special way. I believe the issue is that the py executable only accepts <code>#!/usr/bin/env python</code> and not the python3 variant.</p>",
        "id": 275507737,
        "sender_full_name": "bjorn3",
        "timestamp": 1647436188
    },
    {
        "content": "<p>For linux distros there may not be a single answer since they often have different installation profiles (minimal/server/desktop/...). E.g. the Arch docker image doesn't have python installed while the boot ISO probably does (since archinstall needs it) and idk what the various archinstall profiles do.</p>",
        "id": 275508211,
        "sender_full_name": "The 8472",
        "timestamp": 1647436432
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/275508211\">said</a>:</p>\n<blockquote>\n<p>For linux distros there may not be a single answer since they often have different installation profiles (minimal/server/desktop/...). E.g. the Arch docker image doesn't have python installed while the boot ISO probably does (since archinstall needs it) and idk what the various archinstall profiles do.</p>\n</blockquote>\n<p>I could be wrong, but I would _personally_ be fairly confident in the hypothesis of \"on all linux distributions, if you have python 3 installed, you have <code>python3</code> in path\"</p>",
        "id": 275508852,
        "sender_full_name": "Walther",
        "timestamp": 1647436774
    },
    {
        "content": "<p>You might not if <code>python</code> is python3.</p>",
        "id": 275509078,
        "sender_full_name": "Connor Horman",
        "timestamp": 1647436910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/275507737\">said</a>:</p>\n<blockquote>\n<p>The kernel does not recognize shebangs in any special way. I believe the issue is that the py executable only accepts <code>#!/usr/bin/env python</code> and not the python3 variant.</p>\n</blockquote>\n<p>Yeah - people should be more exact when talking about \"windows\" regarding this issue. WSL and WSL2 are closer to VMs than operating \"on windows\" - they have their own package managers and software installs etc. If you run Python within a WSL(2) shell session, you are running the version installed within that machine - you are not calling into any python installation installed on the Windows side.</p>\n<p>The main argument against changing the shebang from <code>python</code> to <code>python3</code> has been that Windows does not support <code>python</code>. I would love to get more specific, <strong>exact statements</strong> on this - with what installation method, in which shell (CMD, Powershell, other native shell) does it not work on Windows and why?</p>\n<p>For WSL and WSL2, you will have the path issue of the linux distribution you are running - if you run Ubuntu, you'll have the Ubuntu behavior of <code>python</code> shebang not working, as by default Ubuntu does not ship with an alias of <code>python-is-python3</code></p>",
        "id": 275509423,
        "sender_full_name": "Walther",
        "timestamp": 1647437089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"257758\">Connor Horman</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/275509078\">said</a>:</p>\n<blockquote>\n<p>You might not if <code>python</code> is python3.</p>\n</blockquote>\n<p>Do you know of any examples? I know some systems ship with an alias of <code>python</code> executing <code>python3</code>, but i don't know of any distribution where <code>python3</code> would <em>not</em> exist in path when python 3 is installed</p>",
        "id": 275509513,
        "sender_full_name": "Walther",
        "timestamp": 1647437152
    },
    {
        "content": "<p>Not off the top of my head, but I think BLFS might only install python 3 and only as <code>python</code>.</p>",
        "id": 275509686,
        "sender_full_name": "Connor Horman",
        "timestamp": 1647437233
    },
    {
        "content": "<p>how big of a percentage of users contributing to the rust compiler are doing so on \"beyond linux from scratch\" vs from Windows, macOS, various other popular linux distributions? do you think BLFS should be a blocker for switching to <code>python3</code> even if the situation is resolved for Windows?</p>",
        "id": 275509927,
        "sender_full_name": "Walther",
        "timestamp": 1647437360
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Edition Windows 11 Pro\nVersion 21H2\nInstalled on    ‎12/‎12/‎2021\nOS build    22000.556\nExperience  Windows Feature Experience Pack 1000.22000.556.0\n</code></pre></div>\n<p>On my Windows 11 machine, if i run <code>python3</code> in either Powershell or CMD, the Windows Store automatically opens to the officiall Python 3.10 software page, published by Python Software Foundation.</p>\n<p>After I click the Get button to install it, in both Powershell and CMD, running <code>python3 -V</code> results in <code>Python 3.10.2</code></p>",
        "id": 275511369,
        "sender_full_name": "Walther",
        "timestamp": 1647438070
    },
    {
        "content": "<p>The windows isssue is the py.exe launcher, not python3.exe.</p>",
        "id": 275511808,
        "sender_full_name": "bjorn3",
        "timestamp": 1647438287
    },
    {
        "content": "<blockquote>\n<p>To allow shebang lines in Python scripts to be portable between Unix and Windows, this launcher supports a number of ‘virtual’ commands to specify which interpreter to use. The supported virtual commands are:</p>\n<ul>\n<li>/usr/bin/env python</li>\n<li>/usr/bin/python</li>\n<li>/usr/local/bin/python</li>\n<li>python</li>\n</ul>\n</blockquote>",
        "id": 275511939,
        "sender_full_name": "bjorn3",
        "timestamp": 1647438346
    },
    {
        "content": "<p>After the installation, if I write a small file</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello, world&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>and run <code>.\\hello.py</code> in Powershell or <code>hello.py</code> in CMD, on first run I get the modal for \"what do you want to use to open this file\", if i select Python 3.10, it will launch a new window where the output is shown</p>",
        "id": 275512013,
        "sender_full_name": "Walther",
        "timestamp": 1647438364
    },
    {
        "content": "<p>so at least on windows 11 with the python3 installed directly from windows store (as it automatically suggests if you try to run <code>python3</code>) the shebang of <code>#!/usr/bin/env python3</code> seems to work perfectly fine</p>",
        "id": 275512130,
        "sender_full_name": "Walther",
        "timestamp": 1647438423
    },
    {
        "content": "<p>I now uninstalled the version from the Windows Store, and installed the newest installed from <a href=\"https://www.python.org/downloads/release/python-3102/\">https://www.python.org/downloads/release/python-3102/</a> . I installed with the default options, _without_ selecting the \"add python 3.10 to PATH\" option as it was unselected by default.</p>\n<p>Even with this installation, running the abovementioned <code>.\\hello.py</code> works in powershell and <code>hello.py</code> in cmd, with the shebang set to refer to <code>python3</code>. Conversely, if I set the shebang to <code>python</code>, <strong>then</strong> it actually fails with an error of <code>Python was not found</code></p>",
        "id": 275513185,
        "sender_full_name": "Walther",
        "timestamp": 1647438927
    },
    {
        "content": "<p>based on this, it looks to me like the shebang of <code>#!/usr/bin/env python3</code> should work even on Windows, both when installed via Windows Store as well as when installed via the official Python installer?</p>",
        "id": 275513298,
        "sender_full_name": "Walther",
        "timestamp": 1647438968
    },
    {
        "content": "<p>and i get the same behavior with using the <code>py</code> wrapper you mentioned: <code>py hello.py</code> in both Powershell and CMD. shebang of <code>python3</code> works, <code>python</code> doesn't</p>",
        "id": 275513422,
        "sender_full_name": "Walther",
        "timestamp": 1647439031
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>py --help\nPython Launcher for Windows Version 3.10.2150.1013\n\nusage:\npy [launcher-args] [python-args] [script [script-args]]\n\nLauncher arguments:\n\n-2     : Launch the latest Python 2.x version\n-3     : Launch the latest Python 3.x version\n-X.Y   : Launch the specified Python version\n     The above all default to 64 bit if a matching 64 bit python is present.\n-X.Y-32: Launch the specified 32bit Python version\n-X-32  : Launch the latest 32bit Python X version\n-X.Y-64: Launch the specified 64bit Python version\n-X-64  : Launch the latest 64bit Python X version\n-0  --list       : List the available pythons\n-0p --list-paths : List with paths\n\n If no script is specified the specified interpreter is opened.\nIf an exact version is not given, using the latest version can be overridden by\nany of the following, (in priority order):\n An active virtual environment\n A shebang line in the script (if present)\n With -2 or -3 flag a matching PY_PYTHON2 or PY_PYTHON3 Environment variable\n A PY_PYTHON Environment variable\n From [defaults] in py.ini in your %LOCALAPPDATA%\\py.ini\n From [defaults] in py.ini beside py.exe (use `where py` to locate)\n</code></pre></div>",
        "id": 275513608,
        "sender_full_name": "Walther",
        "timestamp": 1647439103
    },
    {
        "content": "<p>to me it looks like even <code>py.exe</code> happily supports the <code>#!/usr/bin/env python3</code> shebang</p>",
        "id": 275513709,
        "sender_full_name": "Walther",
        "timestamp": 1647439155
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/275511939\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>To allow shebang lines in Python scripts to be portable between Unix and Windows, this launcher supports a number of ‘virtual’ commands to specify which interpreter to use. The supported virtual commands are:</p>\n<ul>\n<li>/usr/bin/env python</li>\n<li>/usr/bin/python</li>\n<li>/usr/local/bin/python</li>\n<li>python</li>\n</ul>\n</blockquote>\n</blockquote>\n<p>The documentation you are quoting <a href=\"https://docs.python.org/3/using/windows.html#shebang-lines\">https://docs.python.org/3/using/windows.html#shebang-lines</a> continues with the following snippet:</p>\n<blockquote>\n<p>Any of the above virtual commands can be suffixed with an explicit version (either just the major version, or the major and minor version).</p>\n</blockquote>\n<p>To me this sounds like there should be no reason why the shebang could not be updated to <code>#!/usr/bin/env python3</code></p>",
        "id": 275514348,
        "sender_full_name": "Walther",
        "timestamp": 1647439405
    },
    {
        "content": "<p>Of course if anyone has actual reproduction steps for <code>#!/usr/bin/env python3</code> shebang not working on Windows, please do share <span aria-label=\"bow\" class=\"emoji emoji-1f647\" role=\"img\" title=\"bow\">:bow:</span> Haven't been able to reproduce that, and that anecdote has been held as the main blocker for this change</p>",
        "id": 275540862,
        "sender_full_name": "Walther",
        "timestamp": 1647449088
    },
    {
        "content": "<p>In git bash I get <code>/c/Users/eric/AppData/Local/Microsoft/WindowsApps/python3: Permission denied</code> when running <code>python3</code>. That is with or without the store version installed.</p>",
        "id": 275550612,
        "sender_full_name": "Eric Huss",
        "timestamp": 1647452628
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/questions/56974927/permission-denied-trying-to-run-python-on-windows-10\">https://stackoverflow.com/questions/56974927/permission-denied-trying-to-run-python-on-windows-10</a></p>\n<p>What a mess. <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 275551141,
        "sender_full_name": "Eric Huss",
        "timestamp": 1647452830
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/275550612\">said</a>:</p>\n<blockquote>\n<p>In git bash I get <code>/c/Users/eric/AppData/Local/Microsoft/WindowsApps/python3: Permission denied</code> when running <code>python3</code>. That is with or without the store version installed.</p>\n</blockquote>\n<p>Is this a python issue or (more likely i think?) a git bash issue? considering it should work in CMD or Powershell (does it, on your machine?)</p>\n<p>Also: do you get that error when trying to run <code>python3</code> directly from the gitbash command line, or when running a file with the <code>#!/usr/bin/env python3</code> shebang? Is there a difference between running directly with <code>./hello.py</code> or with the py.exe helper <code>py hello.py</code> ?</p>",
        "id": 275553677,
        "sender_full_name": "Walther",
        "timestamp": 1647453773
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"201711\">Walther</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20and.20.2Fusr.2Fbin.2Fenv.20python/near/275553677\">said</a>:</p>\n<blockquote>\n<p>Is this a python issue or (more likely i think?) a git bash issue? considering it should work in CMD or Powershell (does it, on your machine?)</p>\n</blockquote>\n<p>Per the analysis in the stackoverflow above, the answer is \"it's complicated\".  I think the essence is the weird way microsoft created the 0-byte stubs that launch the store page.  It works in cmd/powershell.</p>\n<blockquote>\n<p>Also: do you get that error when trying to run <code>python3</code> directly from the gitbash command line, or when running a file with the <code>#!/usr/bin/env python3</code> shebang? Either directly with <code>./hello.py</code> or with the py.exe helper <code>py hello.py</code> ?</p>\n</blockquote>\n<p>All of those fail exept <code>py hello.py</code>.  </p>\n<p>I don't think this is something that should block progress.  I'm just pointing out that it will be a regression for some.  There are workarounds.  Preferably they could be documented somehow.</p>",
        "id": 275557405,
        "sender_full_name": "Eric Huss",
        "timestamp": 1647455328
    },
    {
        "content": "<p>okay i tried it on my machine as well.</p>\n<ul>\n<li>with python installed from the <a href=\"http://python.org\">python.org</a> installer, with default options, and then running gitbash,<ul>\n<li><code>./hello.py</code> does <strong>not</strong> work with _either_ shebang</li>\n<li><code>py hello.py</code> <strong>works</strong> with the python3 shebang but <strong>not</strong> with the python shebang</li>\n</ul>\n</li>\n<li>with python installed from the windows store, and then running githbash,<ul>\n<li><code>./hello.py</code> <strong>works</strong> with _either_ shebang</li>\n<li><code>py hello.py</code> does <strong>not</strong> work with either, as <code>py</code> or <code>py.exe</code> does not appear in gitbash path</li>\n</ul>\n</li>\n</ul>\n<p>so to me, it sounds like changing the shebang should not make things worse in any case, and should make many cases better?</p>",
        "id": 275557595,
        "sender_full_name": "Walther",
        "timestamp": 1647455409
    },
    {
        "content": "<p>Perhaps things changed in Windows 11 or your system is configured differently?  At least for me, it would be worse. But I can work around it.</p>",
        "id": 275557965,
        "sender_full_name": "Eric Huss",
        "timestamp": 1647455597
    },
    {
        "content": "<blockquote>\n<p>All of those fail exept py hello.py</p>\n</blockquote>\n<p>Just to double check: do any of the other running methods work in your gitbash if you switch the shebang back to <code>#!/usr/bin/env python</code>? As in, is there an actual specific difference between the <code>#!/usr/bin/env python</code> and <code>#!/usr/bin/env python3</code> that would regress?</p>",
        "id": 275558493,
        "sender_full_name": "Walther",
        "timestamp": 1647455804
    },
    {
        "content": "<p>Yea, <code>#!/usr/bin/env python</code> works. That launches the python installed from <a href=\"http://python.org\">python.org</a></p>",
        "id": 275561240,
        "sender_full_name": "Eric Huss",
        "timestamp": 1647456827
    },
    {
        "content": "<p>interesting! which python version, which git bash version, and do you happen to remember if you checked the \"add python to PATH\" in the installer or not? wondering if this can be reproduced / if we could figure out what the subset of users would be where this would regress. currently it looks like many cases should improve and some stay equally-supported</p>",
        "id": 275561985,
        "sender_full_name": "Walther",
        "timestamp": 1647457143
    },
    {
        "content": "<p>sorry, i think i owe you all an apology - i've been way too insistent and pushy on this issue. the topic is close to my heart, as i've been very frustrated by x.py not working out of the box on pretty much any of my machines, but i should not take it out on the community that is actively trying to help fix things <span aria-label=\"bow\" class=\"emoji emoji-1f647\" role=\"img\" title=\"bow\">:bow:</span></p>",
        "id": 276190235,
        "sender_full_name": "Walther",
        "timestamp": 1647956678
    }
]