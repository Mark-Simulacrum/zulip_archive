[
    {
        "content": "<p>I have a <code>tests/utils/mod.rs</code> module that contains helper functions for my code's tests. I have two integration test files <code>tests/test1.rs</code> and <code>tests/test2.rs</code>, which each use some, but not all, of the helper functions in <code>tests/utils/mod.rs</code>. When I run <code>cargo test</code>, I get dead code warnings for both the functions unused in <code>tests/test1.rs</code> and for the functions unused in <code>tests/test2.rs</code>. This seems like a bug, with the expected behavior being only getting dead_code warnings for functions of <code>tests/utils/mod.rs</code> unused in both <code>tests/test1.rs</code> and <code>tests/test2.rs</code>, but I wanted to confirm this before filing a bug report against the <code>rust-lang/rust</code> repository.</p>",
        "id": 259755429,
        "sender_full_name": "Ryan Lee",
        "timestamp": 1635633425
    },
    {
        "content": "<p>That is expected behavior.  If you are using <code>mod utils;</code> in two separate integration tests, it is independently compiling that module for each integration test.  Some workarounds: you can use a single integration test (<a href=\"https://github.com/rust-lang/cargo/blob/master/tests/testsuite/main.rs\">example from cargo's uber testsuite</a>) or move the utility code to a separate package (like <a href=\"https://github.com/rust-lang/cargo/blob/master/crates/cargo-test-support/src/lib.rs\">cargo's test support</a>).</p>",
        "id": 259763390,
        "sender_full_name": "Eric Huss",
        "timestamp": 1635646616
    }
]