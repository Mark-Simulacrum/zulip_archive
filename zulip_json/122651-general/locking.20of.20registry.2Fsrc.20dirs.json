[
    {
        "content": "<p>So I've been bitten by this a few times and now someone at work has run into this same problem.</p>\n<p>Essentially, VSCode/RA makes it very easy to accidentally modify the downloaded crate src code, when clicking through to see the src of a method from a crate, that is used when compiling a new project. </p>\n<p>A quick fix I can see would be adding a step at the end of this <a href=\"https://github.com/rust-lang/cargo/blob/109bfbd055325ef87a6e7f63d67da7e838f8300b/src/cargo/sources/registry/mod.rs#L587\">unpack_package</a> function to set recursively set the dir to read-only, but I might be missing something obvious that this breaks</p>",
        "id": 275786910,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647601106
    },
    {
        "content": "<p>For a demo of what I mean:</p>\n<ol>\n<li>Open an existing project in VSCode which uses an external crate</li>\n<li>Use the click-through feature of VSCode/RA to view the source inside that crate</li>\n<li>Change some code inside that editor window, save and close.</li>\n<li>Start a new project, add that crate/version to your Cargo.toml</li>\n<li>Unexpected behaviour</li>\n</ol>",
        "id": 275787419,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647601415
    },
    {
        "content": "<p>A more complex solution would be storing some integrity hash and checking it, but that seems like it'll touch a lot more code</p>",
        "id": 275787511,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647601459
    },
    {
        "content": "<p>Or VSCode/RA could open files in a kind of readonly view if they come from outside the current project. However, I'm not sure how feasible this is.</p>",
        "id": 275790182,
        "sender_full_name": "Chris Denton",
        "timestamp": 1647603216
    },
    {
        "content": "<p>As far as I saw when doing some quick research was that VSCode did not support read-only mode, but maybe that was outdated info</p>",
        "id": 275790684,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647603559
    },
    {
        "content": "<p>Oh, that's a shame.</p>",
        "id": 275791338,
        "sender_full_name": "Chris Denton",
        "timestamp": 1647604031
    },
    {
        "content": "<p>Reference: <a href=\"https://github.com/microsoft/vscode/issues/4873\">https://github.com/microsoft/vscode/issues/4873</a><br>\nIt seems bits of the editor have partial support (eg monaco supports <code>readOnly</code>). Depending on how RA click through works, it could make use of <a href=\"https://code.visualstudio.com/api/references/vscode-api#CustomReadonlyEditorProvider\">https://code.visualstudio.com/api/references/vscode-api#CustomReadonlyEditorProvider</a> to open external references in this mode</p>",
        "id": 275791486,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647604145
    },
    {
        "content": "<p>So I guess it's not off the table completely, but it's not exactly just a toggle either</p>",
        "id": 275791515,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647604178
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/5847\">rust-analyzer#5847</a></p>",
        "id": 275796133,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1647607186
    },
    {
        "content": "<p>Ultimately I would still like this if it wasn't a specific fix for VSCode, but in general, hence my read-only folder suggestion. But I'll try take a peek into RA vscode extension and see if I can fix it</p>",
        "id": 275808150,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647612953
    },
    {
        "content": "<p>I could have sworn we had a Cargo issue about making it read only... found it <a href=\"https://github.com/rust-lang/cargo/issues/9455\">https://github.com/rust-lang/cargo/issues/9455</a></p>",
        "id": 275811724,
        "sender_full_name": "Eh2406",
        "timestamp": 1647614629
    },
    {
        "content": "<p>I think a PR would be welcomed!</p>",
        "id": 275812005,
        "sender_full_name": "Eh2406",
        "timestamp": 1647614740
    }
]