[
    {
        "content": "<p>What is the reason this code does not compile? It seems that comparing &amp;&amp;str and a &amp;str is not possible, but I can't explain why. Is this a necessary limitation or just a papercut?<br>\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a8be370ff6fbef602c04b32d409a814c\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a8be370ff6fbef602c04b32d409a814c</a></p>",
        "id": 225881405,
        "sender_full_name": "rylev",
        "timestamp": 1612980233
    },
    {
        "content": "<p>(Simple repro: <code>&amp;2 == &amp;&amp;2</code>)<br>\nDirectly, PartialEq on references is <code>&amp;T: PartialEq&lt;&amp;T&gt;</code>.<br>\nIs there a different way?  Dunno.</p>\n<p>You might be interested in <a href=\"https://github.com/rust-lang/rust/issues/44619\">https://github.com/rust-lang/rust/issues/44619</a>, which had some discussions of stuff that are sortof related but nothing ended up happening.</p>",
        "id": 225882990,
        "sender_full_name": "scottmcm",
        "timestamp": 1612980927
    },
    {
        "content": "<p>yeah this is a papercut, no it's not a necessary one</p>",
        "id": 225885709,
        "sender_full_name": "Lokathor",
        "timestamp": 1612982066
    },
    {
        "content": "<p>Yeah, this has been a long-standing pet peeve of mine</p>",
        "id": 225906221,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612990496
    },
    {
        "content": "<p>luckily many PartialEq impls for std types have been filled out since then so it's no longer as painful as it used to be</p>",
        "id": 225906279,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1612990522
    },
    {
        "content": "<p>Perhaps we can detect this case and issue a note about how to fix it? Not exactly sure what the right herustic would be though...</p>",
        "id": 225985615,
        "sender_full_name": "rylev",
        "timestamp": 1613048304
    }
]