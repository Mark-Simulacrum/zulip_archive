[
    {
        "content": "<p>Should the proc_macro support work? I just get \"unresolved\" import. My test is here: <a href=\"https://github.com/Ciantic/rust-analyzer-com-rs-failure/blob/master/src/main.rs\">https://github.com/Ciantic/rust-analyzer-com-rs-failure/blob/master/src/main.rs</a></p>\n<p>It compiles just fine with <code>cargo build</code> but it seems as if the proc_macros doesn't work at all in VSCode.</p>",
        "id": 221638339,
        "sender_full_name": "Ciantic",
        "timestamp": 1609847921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256407\">@Ciantic</span> rust-analyzer doesn't support loading crates from sysroot</p>",
        "id": 221645568,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609853387
    },
    {
        "content": "<p>See also <a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/6842\">https://github.com/rust-analyzer/rust-analyzer/issues/6842</a></p>",
        "id": 221645631,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609853420
    },
    {
        "content": "<p>sysroot?</p>",
        "id": 221645649,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609853440
    },
    {
        "content": "<p>Proc_macro is in sysroot too</p>",
        "id": 221645664,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609853453
    },
    {
        "content": "<p>why is that involved?</p>",
        "id": 221645669,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609853458
    },
    {
        "content": "<p>Unless you special cased the standard library?</p>",
        "id": 221645673,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609853463
    },
    {
        "content": "<p>we did</p>",
        "id": 221645696,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609853484
    },
    {
        "content": "<p>Oh ignore me then</p>",
        "id": 221645700,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609853492
    },
    {
        "content": "<p>rust-analyzer doesn't handle proc_macros</p>",
        "id": 221645869,
        "sender_full_name": "rylev",
        "timestamp": 1609853609
    },
    {
        "content": "<p>You need to enable \"Load out dirs from check\" for them to work</p>",
        "id": 221645942,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609853648
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/122651-general/topic/proc_macro.20support/near/221645942\">said</a>:</p>\n<blockquote>\n<p>You need to enable \"Load out dirs from check\" for them to work</p>\n</blockquote>\n<p>Ah yea this does work for running cargo check but you won't get autocomplete</p>",
        "id": 221645981,
        "sender_full_name": "rylev",
        "timestamp": 1609853701
    },
    {
        "content": "<p>\"Load out dirs from check\" and \"Enable proc macro support\" will make autocomplete work in supported cases. <code>cargo check</code> always supports proc macros.</p>",
        "id": 221646360,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609853962
    },
    {
        "content": "<p>It looks like in this case the <code>interfaces!</code> macro does get expanded, but the output isn't processed correctly</p>",
        "id": 221646565,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609854104
    },
    {
        "content": "<p>(FYI: I'm the author of the crate in question)</p>",
        "id": 221646723,
        "sender_full_name": "rylev",
        "timestamp": 1609854192
    },
    {
        "content": "<p>Ah, the problem is that the <code>interfaces!</code> macro collides with the <code>interfaces</code> module, apparently, so I'm assuming the macro expansion fails early on, but works from the IDE later</p>",
        "id": 221651479,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609856986
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7171\">https://github.com/rust-analyzer/rust-analyzer/pull/7171</a> to help debug this. It does not emit an error in this case, which is strange.</p>",
        "id": 221653373,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609857916
    },
    {
        "content": "<p>I'm looking at the definition of <code>IUnknown</code> for this by the way, in com-rs <code>src/interfaces/iunknown.rs</code></p>",
        "id": 221653635,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609858029
    },
    {
        "content": "<p>(great work on that crate by the way, it looks very clean!)</p>",
        "id": 221653824,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1609858103
    },
    {
        "content": "<p>I have these: <a href=\"https://github.com/Ciantic/rust-analyzer-com-rs-failure/blob/master/.vscode/settings.json\">https://github.com/Ciantic/rust-analyzer-com-rs-failure/blob/master/.vscode/settings.json</a> but I guess the error in unresolved import case is different, because those didn't fix it.</p>",
        "id": 221679284,
        "sender_full_name": "Ciantic",
        "timestamp": 1609869462
    }
]