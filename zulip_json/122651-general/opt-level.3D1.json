[
    {
        "content": "<p>Does anybody use -Copt-level=1? It seems just as slow as -Copt-level=0 to me â€” probably because it doesn't do any inlining, which makes the stdlib dog-slow.</p>\n<p>Would moving an inlining pass to it be plausible?</p>",
        "id": 234360757,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618332166
    },
    {
        "content": "<p>at my previous job switching to opt-level 1 significantly sped up the test suite (which was dominated by computing password hashes)</p>",
        "id": 234364245,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1618333450
    },
    {
        "content": "<p>opt-level=1 runs the alwaysinline pass but afair this level is set to 1 if you have any inline(always) annotations which might explain why you're seeing no appreciable change.</p>",
        "id": 234365608,
        "sender_full_name": "nagisa",
        "timestamp": 1618333936
    },
    {
        "content": "<blockquote>\n<p>opt-level=1 runs the alwaysinline pass but afair this level is set to 1 if you have any inline(always) annotations which might explain why you're seeing no appreciable change.</p>\n</blockquote>\n<p>Right, in practice I sometimes use this for debug perf, but IIUC the stdlib is resistant to adding it to things (as it's a heavy hammer)</p>",
        "id": 234440886,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618375861
    },
    {
        "content": "<p>It is possible to enable inlining  pass with <code>-Cinline-threshold</code></p>",
        "id": 234453551,
        "sender_full_name": "tm",
        "timestamp": 1618385370
    }
]