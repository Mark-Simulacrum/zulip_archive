[
    {
        "content": "<p>when implementing <code>GlobalAlloc::alloc</code> by forwarding it to a system <code>malloc</code> (in my case, FreeBSD kernel malloc), is passing <code>layout.size()</code> enough or do I have to ensure <code>layout.align()</code> in some way also? (if so, how?)</p>",
        "id": 227970928,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1614364306
    },
    {
        "content": "<p>You must ensure alignment requirements are matched. If the kernel API doesn't offer a malloc variant that takes in an alignment (like posix_memalign), you can either reject allocation requests with alignments higher than the allocator's minimum alignment, or overallocate and adjust the pointer to an aligned point of the allocation</p>",
        "id": 227971513,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1614364533
    },
    {
        "content": "<p>that makes sense. Thanks!</p>",
        "id": 227971543,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1614364552
    },
    {
        "content": "<p>the windows implementation of the System allocator does the second if you want something to reference</p>",
        "id": 227971546,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1614364553
    },
    {
        "content": "<p>even better :)</p>",
        "id": 227971606,
        "sender_full_name": "Anatol Ulrich",
        "timestamp": 1614364565
    },
    {
        "content": "<p>I'm surprised that Windows doesn't have an allocator with N^2 config knobs and sliders.</p>",
        "id": 227979110,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1614367685
    },
    {
        "content": "<p>well it's got three ways to access \"basically all the same\" allocator.</p>",
        "id": 227985613,
        "sender_full_name": "Lokathor",
        "timestamp": 1614370269
    }
]