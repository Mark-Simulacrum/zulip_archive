[
    {
        "content": "<p>Hello. To illustrate my issue, let's say I want to add the following code right here: <a href=\"https://github.com/rust-lang/rust/blob/master/library/alloc/src/string.rs#L2387\">https://github.com/rust-lang/rust/blob/master/library/alloc/src/string.rs#L2387</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">HasWrappingNeg</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">wrapping_neg</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"bp\">Self</span>: <span class=\"nb\">Sized</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">HasWrappingNeg</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">ToString</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">to_string</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">String</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">String</span>::<span class=\"n\">new</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>When I do that and run <code>./x.py check</code> then I get this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0119]: conflicting implementations of trait `string::ToString`\n    --&gt; library/alloc/src/string.rs:2405:1\n     |\n2372 | impl&lt;T: fmt::Display + ?Sized&gt; ToString for T {\n     | --------------------------------------------- first implementation here\n...\n2405 | impl&lt;T: HasWrappingNeg&gt; ToString for T {\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation\n</code></pre></div>\n<p>And I'm not sure why. How can I have a special alternative implementation for string conversion for types that have <code>wrapping_neg</code> available?<br>\nI read <a href=\"https://rust-lang.github.io/rfcs/1210-impl-specialization.html#performance\">https://rust-lang.github.io/rfcs/1210-impl-specialization.html#performance</a> a bit and I think it should work. I'm just providing an alternative impl.</p>",
        "id": 256953590,
        "sender_full_name": "ruster",
        "timestamp": 1633870998
    },
    {
        "content": "<p>My ultimate goal (in this example) is to make <code>1_i32.to_string()</code> return <code>String::new()</code> (because <code>i32</code> implements <code>wrapping_neg</code>, see <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.wrapping_neg\">https://doc.rust-lang.org/std/primitive.i32.html#method.wrapping_neg</a>).</p>",
        "id": 256953715,
        "sender_full_name": "ruster",
        "timestamp": 1633871129
    }
]