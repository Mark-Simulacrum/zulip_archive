[
    {
        "content": "<p>This code does not compile in stable, which I expect:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// Insert a new data element at a given key.</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">insert</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">K</span>: <span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">this</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">K</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span>: <span class=\"nc\">K</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span>: <span class=\"nc\">V</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">key1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">val1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">this</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">((</span><span class=\"n\">key</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"p\">.</span><span class=\"n\">last_mut</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>However, it <strong>does</strong> compile on </p>\n<div class=\"codehilite\"><pre><span></span><code>% cargo +nightly --version --verbose\ncargo 1.49.0-nightly (d5556aeb8 2020-11-04)\nrelease: 1.49.0\ncommit-hash: d5556aeb8405b1fe696adb6e297ad7a1f2989b62\ncommit-date: 2020-11-04\n</code></pre></div>\n<p>It does <strong>not</strong> compile with </p>\n<div class=\"codehilite\"><pre><span></span><code>% cargo +nightly --version --verbose\ncargo 1.49.0-nightly (2af662e22 2020-11-12)\nrelease: 1.49.0\ncommit-hash: 2af662e22177a839763ac8fb70d245a680b15214\ncommit-date: 2020-11-12\n</code></pre></div>\n<p>Anyone know what happened there?</p>",
        "id": 217425146,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605890106
    },
    {
        "content": "<p>Why did I grab Cargo version information <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 217440964,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605897160
    },
    {
        "content": "<p>do you have a playground link so we can try to see which PR caused this change ?</p>",
        "id": 217442453,
        "sender_full_name": "lqd",
        "timestamp": 1605897955
    },
    {
        "content": "<p>I think I'm missing a piece of your request. That code I posted above should be enough to show the error.</p>",
        "id": 217442902,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898181
    },
    {
        "content": "<p>wtf</p>",
        "id": 217442985,
        "sender_full_name": "lqd",
        "timestamp": 1605898208
    },
    {
        "content": "<p><em>but</em></p>",
        "id": 217442996,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898216
    },
    {
        "content": "<p>zulip shows this as a regular code block until you hover over it</p>",
        "id": 217443003,
        "sender_full_name": "lqd",
        "timestamp": 1605898224
    },
    {
        "content": "<p>I can't reproduce it since I upgraded rustc</p>",
        "id": 217443025,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898236
    },
    {
        "content": "<p>and I can't find a nightly that reproduces</p>",
        "id": 217443050,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898248
    },
    {
        "content": "<p>so it seems like I've done something wrong somewhere...</p>",
        "id": 217443227,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898329
    },
    {
        "content": "<p>sorry about that but that UI is ... yikes</p>",
        "id": 217443252,
        "sender_full_name": "lqd",
        "timestamp": 1605898343
    },
    {
        "content": "<p>it's in a sense reassuring :)</p>",
        "id": 217443274,
        "sender_full_name": "lqd",
        "timestamp": 1605898357
    },
    {
        "content": "<p>You might want to reload the Zulip page? It looks different from the beginning for me...</p>",
        "id": 217443463,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898469
    },
    {
        "content": "<p>ah yes</p>",
        "id": 217443731,
        "sender_full_name": "lqd",
        "timestamp": 1605898594
    },
    {
        "content": "<p>lmk if you manage to reproduce, I'll look into it</p>",
        "id": 217443804,
        "sender_full_name": "lqd",
        "timestamp": 1605898632
    },
    {
        "content": "<p>there might have been some stale incremental state or something</p>",
        "id": 217443914,
        "sender_full_name": "lqd",
        "timestamp": 1605898689
    },
    {
        "content": "<p>my best guess is that I did <code>-Z polonius</code> once, and then maybe it got cached and didn't rebuild?</p>",
        "id": 217443925,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898694
    },
    {
        "content": "<p>e.g.</p>\n<div class=\"codehilite\"><pre><span></span><code>% cargo +nightly rustc -- -Zpolonius\n   Compiling p v0.1.0 (/private/tmp/p)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.17s\n\n# Time passed...\n\n% cargo +nightly run\n   Compiling p v0.1.0 (/private/tmp/p)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.34s\n     Running `target/debug/p`\n2 (0x7fb401405b44)\n2 (0x7fb401405b44)\n6 (0x7fb401405bc4)\n6 (0x7fb401405bc4)\n</code></pre></div>",
        "id": 217444095,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898776
    },
    {
        "content": "<p>I expect cargo to remember all flags and rebuild when they don't match but maaaybe</p>",
        "id": 217444127,
        "sender_full_name": "lqd",
        "timestamp": 1605898791
    },
    {
        "content": "<p>interesting</p>",
        "id": 217444270,
        "sender_full_name": "lqd",
        "timestamp": 1605898840
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>% RUSTFLAGS=-Zpolonius cargo +nightly run\n   Compiling p v0.1.0 (/private/tmp/p)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.40s\n     Running `target/debug/p`\n2 (0x7fd192c05b44)\n2 (0x7fd192c05b44)\n6 (0x7fd192c05bc4)\n6 (0x7fd192c05bc4)\n\n% cargo +nightly run\n   Compiling p v0.1.0 (/private/tmp/p)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.34s\n     Running `target/debug/p`\n2 (0x7fdaa2c05b44)\n2 (0x7fdaa2c05b44)\n6 (0x7fdaa2c05bc4)\n6 (0x7fdaa2c05bc4)\n</code></pre></div>",
        "id": 217444276,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898843
    },
    {
        "content": "<p>That <strong>last</strong> one especially</p>",
        "id": 217444298,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898857
    },
    {
        "content": "<p>Why do they say \"compiling\"...</p>",
        "id": 217444363,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898890
    },
    {
        "content": "<p>that aint right dangit</p>",
        "id": 217444421,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605898918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> does this behavior ring a bell for you? Specifically it looks as if rust flags (either via env var or <code>cargo rustc</code>) are \"sticky\" but Cargo still reports rebuilding things?</p>",
        "id": 217513826,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605985035
    },
    {
        "content": "<p>Hmm, this might be an incremental bug...</p>",
        "id": 217513890,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605985163
    },
    {
        "content": "<p>Indeed, adding</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[profile.dev]</span>\n<span class=\"n\">incremental</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n</code></pre></div>\n<p>Changes the behavior:</p>\n<div class=\"codehilite\"><pre><span></span><code>% RUSTFLAGS=&#39;-Zpolonius&#39; cargo +nightly build\n   Compiling p v0.1.0 (/private/tmp/p)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.51s\n\n% RUSTFLAGS=&#39;&#39; cargo +nightly build\n   Compiling p v0.1.0 (/private/tmp/p)\nerror[E0499]: cannot borrow `*this` as mutable more than once at a time\n --&gt; src/main.rs:8:16\n  |\n2 | pub fn insert&lt;&#39;a, K: Eq, V&gt;(this: &amp;&#39;a mut Vec&lt;(K, V)&gt;, key: K, val: V) -&gt; &amp;&#39;a mut V {\n  |               -- lifetime `&#39;a` defined here\n3 |     for (key1, val1) in &amp;mut *this {\n  |                         ---------- first mutable borrow occurs here\n4 |         if key == *key1 {\n5 |             return val1;\n  |                    ---- returning this value requires that `*this` is borrowed for `&#39;a`\n...\n8 |     let this = &amp;mut *this;\n  |                ^^^^^^^^^^ second mutable borrow occurs here\n</code></pre></div>",
        "id": 217513975,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605985318
    },
    {
        "content": "<p>That does sound like a bug in incremental.</p>",
        "id": 217514768,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1605986306
    },
    {
        "content": "<p>I've had issues with cargo not rebuilding lately <a href=\"https://github.com/rust-lang/cargo/issues/8868\">https://github.com/rust-lang/cargo/issues/8868</a></p>",
        "id": 217514779,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605986366
    },
    {
        "content": "<p>Filed as <a href=\"https://github.com/rust-lang/rust/issues/79316\">https://github.com/rust-lang/rust/issues/79316</a></p>",
        "id": 217567496,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1606075682
    }
]