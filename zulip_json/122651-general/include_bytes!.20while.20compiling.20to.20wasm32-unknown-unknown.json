[
    {
        "content": "<p>Hello all. Can anyone give me some advice on how to statically (at compile time) include bytes that I want to use in a function which will be called through web_assembly. The include_bytes macro does not seem to do the job. Thank you all in advance</p>",
        "id": 227268080,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614001610
    },
    {
        "content": "<p>Why does <code>include_bytes!</code> not work?</p>",
        "id": 227268135,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614001632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span>  I do not know why it does not work. I am using the egui crate and when I compile natively I see the image I loaded, but when I compile to wasm and open it in my browser the image does not appear</p>",
        "id": 227268637,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614001866
    },
    {
        "content": "<p>Do I need to allocate memory in wasm or something like that ?</p>",
        "id": 227268717,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614001911
    },
    {
        "content": "<p>hmm, no, this should definitely work</p>",
        "id": 227268922,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614002006
    },
    {
        "content": "<p>what data ends up in the binary? is there a difference in the actual bytes it results in?</p>",
        "id": 227268960,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614002028
    },
    {
        "content": "<p>Is there a convenient way to check this? Or should I do a diff on the wasm binary after commenting out the line including the bytes?</p>",
        "id": 227269181,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614002146
    },
    {
        "content": "<p>Print part of it to console?</p>",
        "id": 227269735,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614002412
    },
    {
        "content": "<p>I use this macro in wasm and it works for me.   How do you try to load the image in the browser? I'd suspect the problem will be on JS/bindgen side here, rather than with the macro</p>",
        "id": 227269786,
        "sender_full_name": "panstromek",
        "timestamp": 1614002446
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/rXii7t-IG-ZOKldCZFsQfw_5/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/rXii7t-IG-ZOKldCZFsQfw_5/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/rXii7t-IG-ZOKldCZFsQfw_5/image.png\"></a></div>",
        "id": 227270095,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614002576
    },
    {
        "content": "<p><a href=\"https://github.com/olivereanderson/waddle_allocator_frontend\">https://github.com/olivereanderson/waddle_allocator_frontend</a></p>",
        "id": 227270212,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614002637
    },
    {
        "content": "<p>this is my repository if you want to look through more of the code</p>",
        "id": 227270276,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614002649
    },
    {
        "content": "<p>Does it crash if you replace unwrap_or_default with unwrap?</p>",
        "id": 227270449,
        "sender_full_name": "panstromek",
        "timestamp": 1614002743
    },
    {
        "content": "<p>Yes I think it crashes when I use unwrap. Look here: <a href=\"/user_uploads/4715/8S6qLD3O6Cc6r_8aMz7i0PSO/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/8S6qLD3O6Cc6r_8aMz7i0PSO/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/8S6qLD3O6Cc6r_8aMz7i0PSO/image.png\"></a></div>",
        "id": 227270754,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614002872
    },
    {
        "content": "<p>I am confused because in this tutorial: <a href=\"https://bfnightly.bracketproductions.com/chapter_21.html#loading-rex-assets\">https://bfnightly.bracketproductions.com/chapter_21.html#loading-rex-assets</a> they seem to use two methods from an external crate to load an image statically into the wasm binary</p>",
        "id": 227270966,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614002957
    },
    {
        "content": "<p>What appears to fail is not inclusion of the image into the binary (as suggested, consider printing parts of it, or maybe checksumming the data and printing out the checksum), but rather the decoding of the image.</p>",
        "id": 227271800,
        "sender_full_name": "nagisa",
        "timestamp": 1614003295
    },
    {
        "content": "<p>Is there a way to get the dbg! macro working when targeting wasm?</p>",
        "id": 227273095,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614003782
    },
    {
        "content": "<p>Not dbg but you can import and use console.log. there's an example in wasm bindgen docs</p>",
        "id": 227273535,
        "sender_full_name": "panstromek",
        "timestamp": 1614003939
    },
    {
        "content": "<p>Try to also install console_error_panic_hook, that'll at least give you some backtrace</p>",
        "id": 227273699,
        "sender_full_name": "panstromek",
        "timestamp": 1614003972
    },
    {
        "content": "<p>There's also an example in wasm_bindgen docs (or wasm_pack, I keep confusing these two)</p>",
        "id": 227273785,
        "sender_full_name": "panstromek",
        "timestamp": 1614004009
    },
    {
        "content": "<p>Thanks. I managed to log the length of the bytes and it is indeed of the expected length. So <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  is right about decoding the image being the source of error.</p>",
        "id": 227279359,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614006202
    },
    {
        "content": "<p>panicked at 'The global thread pool has not been initialized.: ThreadPoolBuildError { kind: IOError(Custom { kind: Other, error: \"operation not supported on this platform\" }) }</p>",
        "id": 227281494,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614007012
    },
    {
        "content": "<p>Sounds like something in the program is trying to use threads. Does that crate have a <code>rayon</code> feature or something similar?</p>",
        "id": 227281871,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614007155
    },
    {
        "content": "<p>Yes indeed it does. I think this is maybe coming from the image crate</p>",
        "id": 227281977,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614007203
    },
    {
        "content": "<p><a href=\"https://github.com/image-rs/image/blob/master/Cargo.toml#L50\">https://github.com/image-rs/image/blob/master/Cargo.toml#L50</a></p>",
        "id": 227282019,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614007207
    },
    {
        "content": "<p>Is your image a JPEG?</p>",
        "id": 227282050,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614007219
    },
    {
        "content": "<p>found someone with a similar problem here: <a href=\"https://radu-matei.com/blog/tensorflow-inferencing-wasi/\">https://radu-matei.com/blog/tensorflow-inferencing-wasi/</a></p>",
        "id": 227282067,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614007224
    },
    {
        "content": "<p>yes my image is a JPEG</p>",
        "id": 227282101,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614007238
    },
    {
        "content": "<p>Yeah, try <code>default-features = false, features = [\"jpeg\"]</code></p>",
        "id": 227282202,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614007273
    },
    {
        "content": "<p>That worked! Thank you all so much :) :) :)</p>",
        "id": 227283138,
        "sender_full_name": "Oliver E. Anderson",
        "timestamp": 1614007622
    }
]