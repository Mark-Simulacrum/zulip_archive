[
    {
        "content": "<p>I notice that reviewers often say \"r=me when CI passes\". Can't you just <code>r+</code> before CI passes and then if it fails bors will stop the merge?</p>",
        "id": 211853690,
        "sender_full_name": "Noah Lev",
        "timestamp": 1601509417
    },
    {
        "content": "<p>Bors will still run tests again when CI fails</p>",
        "id": 211853722,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1601509443
    },
    {
        "content": "<p>And that blocks the queue for however many minutes it takes for them to fail again</p>",
        "id": 211853771,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1601509460
    },
    {
        "content": "<p>Could bors be changed so that it waits until CI passes before merge-testing?</p>",
        "id": 211853827,
        "sender_full_name": "Noah Lev",
        "timestamp": 1601509540
    },
    {
        "content": "<p>the problem is that sometimes CI can fail spuriously, so one doing the \"r=&lt;name&gt;\" can check the reason and r+ if it is spurious or not</p>",
        "id": 211855642,
        "sender_full_name": "DPC",
        "timestamp": 1601511134
    },
    {
        "content": "<p><code>r+ yield</code> or something like that could be useful</p>",
        "id": 211856569,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1601512007
    },
    {
        "content": "<p>I think it should be <code>r+ await</code> but otherwise agree <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 211856768,
        "sender_full_name": "tmandry",
        "timestamp": 1601512219
    },
    {
        "content": "<p>we could but bors is a bit dumb at this stage, even to yield to another pr of higher priority we often have to <code>@bors retry</code> it even though we don't want to retry it <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 211859174,
        "sender_full_name": "DPC",
        "timestamp": 1601514669
    },
    {
        "content": "<p>also github search isn't much helpful as I often try to search for <code>r=me</code> and it doesn't work that way</p>",
        "id": 211859191,
        "sender_full_name": "DPC",
        "timestamp": 1601514708
    },
    {
        "content": "<p>Yeah, it'd be nice to have more features in bors to manage review and similar.</p>",
        "id": 211865415,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601522565
    },
    {
        "content": "<p>I think I heard someone was working on a bors rewrite in rust with more features?</p>",
        "id": 211868752,
        "sender_full_name": "tmandry",
        "timestamp": 1601527235
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116883\">tmandry</span> <a href=\"#narrow/stream/122651-general/topic/bors.20r.3Dme.20when.20CI.20passes/near/211868752\">said</a>:</p>\n<blockquote>\n<p>I think I heard someone was working on a bors rewrite in rust with more features?</p>\n</blockquote>\n<p>yeah, here it is: <a href=\"https://github.com/bors-rs/bors\">https://github.com/bors-rs/bors</a></p>",
        "id": 211887340,
        "sender_full_name": "Yuki Okushi",
        "timestamp": 1601545136
    },
    {
        "content": "<p>That sounds cool!</p>",
        "id": 211987514,
        "sender_full_name": "Noah Lev",
        "timestamp": 1601594011
    },
    {
        "content": "<p>yeh but it's still \"early phases\" atm</p>",
        "id": 211989844,
        "sender_full_name": "DPC",
        "timestamp": 1601596081
    }
]