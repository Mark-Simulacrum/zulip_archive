[
    {
        "content": "<p>Using the <code>cc</code> crate, is there any way to specify a flag for a specific source file, without specifying it for any other source file?</p>",
        "id": 207043884,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597532643
    },
    {
        "content": "<p>For instance, I'd like to compile one file with <code>-mavx2</code> without compiling any other file with that option.</p>",
        "id": 207043894,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597532662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Clone the <code>Build</code>, add the flag and build that one source file separately. It all gets linked together in the end.</p>",
        "id": 208154999,
        "sender_full_name": "Amanieu",
        "timestamp": 1598479460
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> That doesn't help if you're trying to produce a single static library at the end that's findable and usable by other crates, using the <code>DEP_*</code> variables to find it.</p>",
        "id": 208155268,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598479634
    },
    {
        "content": "<p>The static libraries built by <code>cc</code> are automatically embedded into the <code>rlib</code> for the current crate. There shouldn't be a need to access it directly.</p>",
        "id": 208155406,
        "sender_full_name": "Amanieu",
        "timestamp": 1598479742
    },
    {
        "content": "<p>(Assuming you're running from <code>build.rs</code>)</p>",
        "id": 208155428,
        "sender_full_name": "Amanieu",
        "timestamp": 1598479764
    },
    {
        "content": "<p>I am, but other crates may use cmake or another build system, and expect to successfully link and run binaries against the built library.</p>",
        "id": 208173749,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598496913
    },
    {
        "content": "<p>Consider something like zlib.</p>",
        "id": 208173759,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598496932
    },
    {
        "content": "<p>Another crate may specifically look for libz.a and try to link it.</p>",
        "id": 208173762,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598496946
    },
    {
        "content": "<p>Which works, because libz-sys set up search paths properly.</p>",
        "id": 208173806,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598496968
    }
]