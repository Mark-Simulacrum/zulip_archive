[
    {
        "content": "<p>I thought <code>repr</code> on an enum with values would control the size of the discriminant, but this code still says 16 bytes. How do I make it 9 bytes, opting in to ignoring alignment and padding?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[repr(u8)]</span><span class=\"w\"></span>\n<span class=\"k\">enum</span> <span class=\"nc\">Alpha</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">X</span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Y</span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Z</span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">std</span>::<span class=\"n\">mem</span>::<span class=\"n\">size_of</span>::<span class=\"o\">&lt;</span><span class=\"n\">Alpha</span><span class=\"o\">&gt;</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275510445,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1647437615
    },
    {
        "content": "<p><code>#[repr(packed)]</code></p>",
        "id": 275511090,
        "sender_full_name": "bjorn3",
        "timestamp": 1647437910
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>error[E0517]: attribute should be applied to a struct or union\n --&gt; src/main.rs:1:8\n  |\n1 |   #[repr(packed)]\n  |          ^^^^^^\n</code></pre></div>",
        "id": 275511159,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1647437956
    },
    {
        "content": "<p>The discriminant of <code>Alpha</code> is 1 byte but types need to be passed to a multiple of their alignment. <code>struct Foo { bar: u64, baz: u8 }</code> is also 16 bytes.</p>",
        "id": 275511196,
        "sender_full_name": "bjorn3",
        "timestamp": 1647437986
    },
    {
        "content": "<p>s/passed/padded</p>",
        "id": 275511377,
        "sender_full_name": "bjorn3",
        "timestamp": 1647438074
    },
    {
        "content": "<p>FWIW, this question is coming from a training class after I described the aspects that go into the size of an enum.</p>",
        "id": 275511395,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1647438087
    },
    {
        "content": "<p>Using <code>#[repr(packed)] struct UnalignedU64(u64);</code> as fields should make it 9 bytes.</p>",
        "id": 275511548,
        "sender_full_name": "bjorn3",
        "timestamp": 1647438154
    },
    {
        "content": "<p>As the alignment of the fields becomes 1 at that point, right?</p>",
        "id": 275511693,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1647438232
    },
    {
        "content": "<p>And then 8 (data) + 1 (discrim) padded to a multiple of 1 is 9.</p>",
        "id": 275511777,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1647438264
    },
    {
        "content": "<p>Exactly!</p>",
        "id": 275512143,
        "sender_full_name": "bjorn3",
        "timestamp": 1647438427
    },
    {
        "content": "<p>And then <code>repr(...)</code> on the enum does control the size of the discriminant. E.g. <code>u16</code> makes the total size 10. Thanks!</p>",
        "id": 275513225,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1647438952
    }
]