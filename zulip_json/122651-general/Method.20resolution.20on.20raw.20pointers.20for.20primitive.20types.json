[
    {
        "content": "<p>I'm interested in trying to fix <a href=\"https://github.com/rust-lang/rust/issues/74679\">#74679</a>.  The method resolution algorithm seems to only consider trait bounds when inferring potential receiver types, but since CoerceUnsized is not implementable for primitive types such as slices and arrays, it currently seems to not be possible to get a coercion for raw pointers to primitive types during method resolution. <br>\n<span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> Do you maybe have any ideas for how this might be handled? I was thinking of a hacky solution, which would use try_coerce once all candidate checks in lookup_probe have failed, but I don't know how to get the inner type for the slice pointer in general.</p>",
        "id": 207966534,
        "sender_full_name": "BN",
        "timestamp": 1598364215
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"328097\">@BN</span>  I'm afraid I am entirely unfamiliar with that part of the compiler.</p>",
        "id": 207972458,
        "sender_full_name": "RalfJ",
        "timestamp": 1598366946
    }
]