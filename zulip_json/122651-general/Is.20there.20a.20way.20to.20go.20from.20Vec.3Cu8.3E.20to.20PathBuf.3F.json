[
    {
        "content": "<p>There's String::from_utf8, but I don't want a utf8 validation check - I don't need valid utf8.</p>",
        "id": 212897480,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602301984
    },
    {
        "content": "<p>Unix has <a href=\"https://doc.rust-lang.org/std/os/unix/ffi/trait.OsStringExt.html#tymethod.from_vec\"><code>from_vec</code></a> for <code>OsString</code>.</p>",
        "id": 212897612,
        "sender_full_name": "Chris Denton",
        "timestamp": 1602302223
    },
    {
        "content": "<p>oh I see, on windows things aren't Vec</p>",
        "id": 212897617,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602302259
    },
    {
        "content": "<p>On Windows Rust uses its own special encoding called \"WTF-8\". But it's also really insistent that programs aren't allowed to see WTF-8... so the API ends up being weirder than it would otherwise be.</p>",
        "id": 212897791,
        "sender_full_name": "Chris Denton",
        "timestamp": 1602302544
    },
    {
        "content": "<p><a href=\"https://github.com/dylni/os_str_bytes\">https://github.com/dylni/os_str_bytes</a></p>",
        "id": 212909260,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1602325195
    },
    {
        "content": "<p>nice, thanks :) unfortunately this is in bootstrap so allowing non-utf8 is probably not worth the new dependency, but I'll keep it in mind</p>",
        "id": 212917090,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602337837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> There are the OsStrExt traits.</p>",
        "id": 212971659,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1602433610
    }
]