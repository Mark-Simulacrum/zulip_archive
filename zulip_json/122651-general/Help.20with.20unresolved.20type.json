[
    {
        "content": "<p>Hi guys I'm having issues with some unresolved type inferences, can someone help me ?</p>",
        "id": 247724556,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627659606
    },
    {
        "content": "<p><a href=\"https://dontasktoask.com/\">https://dontasktoask.com/</a></p>",
        "id": 247727005,
        "sender_full_name": "fee1-dead",
        "timestamp": 1627660717
    },
    {
        "content": "<p>Please explain the issues that you are encountering, you can get people to help you that way :)</p>",
        "id": 247727759,
        "sender_full_name": "fee1-dead",
        "timestamp": 1627661049
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"429606\">Pháº¡m quang trung</span> has marked this topic as resolved.</p>",
        "id": 247748123,
        "sender_full_name": "Notification Bot",
        "timestamp": 1627671296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> has marked this topic as unresolved.</p>",
        "id": 247750543,
        "sender_full_name": "Notification Bot",
        "timestamp": 1627672746
    },
    {
        "content": "<p>ok so, i have this code using gStreamer, and returning an unresolved type</p>",
        "id": 247899250,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627891854
    },
    {
        "content": "<p>the method is the get trait of this structure <a href=\"https://docs.rs/gstreamer/0.17.1/gstreamer/structure/struct.Structure.html\">https://docs.rs/gstreamer/0.17.1/gstreamer/structure/struct.Structure.html</a></p>",
        "id": 247899288,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627891911
    },
    {
        "content": "<p>extern crate gstreamer as gst;</p>\n<p>use gst::prelude::*;<br>\nuse gst::CAPS_FEATURES_MEMORY_SYSTEM_MEMORY;<br>\nuse gst::{StructureRef, CapsFeaturesRef};<br>\nuse gst::Caps as gstCaps;<br>\nuse serde::{Serialize, Deserialize};<br>\nuse std::collections::HashMap;</p>\n<p>#[derive(Serialize, Deserialize)]<br>\npub struct StrCaps {<br>\n    data_type: String,<br>\n    data_format: String,<br>\n    details: HashMap&lt;String, String&gt;<br>\n}</p>\n<p>fn from(gst_caps: &amp;gstCaps) -&gt; Vec&lt;StrCaps&gt; {<br>\n    let caps_list: Vec&lt;StrCaps&gt; = Vec::new();</p>\n<div class=\"codehilite\"><pre><span></span><code>let feature_Count = gst_caps.size();\nfor i in 0..feature_Count {\n    let structure: Option&lt;&amp;StructureRef&gt;  = gst_caps.structure(i);\n    let features: Option&lt;&amp;CapsFeaturesRef&gt; = gst_caps.features(i);\n\n    if structure.is_none() {continue;}\n    let structure = structure.unwrap();\n\n    // Get super type (video audio and codec eg:video/x-raw)\n    if features.is_some() &amp;&amp; (\n        features.unwrap().is_any() ||\n        !features.unwrap().is_equal(&amp;CAPS_FEATURES_MEMORY_SYSTEM_MEMORY)\n    ){\n        let features_string = String::from(features.unwrap().to_string());\n    }\n\n    let name = structure.name();\n\n    for field in structure.fields() {\n        let field_value = structure.get(field);\n    }\n}\n\nreturn caps_list;\n</code></pre></div>\n\n<p>}</p>",
        "id": 247899325,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627891972
    },
    {
        "content": "<p>In the detail the line:<br>\nlet field_value = structure.get(field);<br>\nis evaluated to: result&lt;{unknown},GetError&gt;, and i have not idea of what to do.<br>\nDo I have to perform some sort of cast or type, but i do not know hot to do that.<br>\nI mean even if would like to store the result and cast it using a match case, rust do not allow me to go on with a unknown during compilation.</p>",
        "id": 247899359,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627892033
    },
    {
        "content": "<p>I do not know how to handle this, someone can illuminate me ?</p>",
        "id": 247899426,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627892148
    },
    {
        "content": "<p>i was thinking to match the result but i do now know the possible types</p>",
        "id": 247899577,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627892348
    },
    {
        "content": "<p>if <code>cargo check</code> doesn't complain, this is a bug in rust-analyzer</p>",
        "id": 247901002,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1627893893
    },
    {
        "content": "<p>if it does complain, the compiler error message should hopefully give you a hint</p>",
        "id": 247901071,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1627893964
    },
    {
        "content": "<p>ok</p>",
        "id": 247907098,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627900174
    },
    {
        "content": "<p>so the compiler complains ( i checked that wasn't the case too )</p>",
        "id": 247907128,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627900212
    },
    {
        "content": "<p>error[E0284]: type annotations needed for <code>Result&lt;T, GetError&gt;</code><br>\n  --&gt; src/dgi/caps.rs:43:35<br>\n   |<br>\n43 |                 let q = structure.get(field);<br>\n   |                     -             ^^^ cannot infer type for type parameter <code>T</code> declared on the associated function <code>get</code><br>\n   |                     |<br>\n   |                     consider giving <code>q</code> the explicit type <code>Result&lt;T, GetError&gt;</code>, where the type parameter <code>T</code> is specified<br>\n   |<br>\n   = note: cannot satisfy <code>&lt;_ as FromValue&lt;'_&gt;&gt;::Checker == _</code></p>\n<p>error: aborting due to previous error; 3 warnings emitted</p>",
        "id": 247907147,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627900234
    },
    {
        "content": "<p>but still i do not the possible types</p>",
        "id": 247907176,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627900265
    },
    {
        "content": "<p>or maybe i know i have to research the source code, i'll go in that direction for now</p>",
        "id": 247907212,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627900324
    },
    {
        "content": "<p>I found some insights here, <a href=\"https://gtk-rs.org/gtk4-rs/stable/latest/book/gobject_values.html\">https://gtk-rs.org/gtk4-rs/stable/latest/book/gobject_values.html</a></p>",
        "id": 247912053,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627905021
    },
    {
        "content": "<p>you have to call get using :: in order to specify the function return type</p>",
        "id": 247912080,
        "sender_full_name": "SigMagiiK",
        "timestamp": 1627905048
    }
]