[
    {
        "content": "<p>Hello everyone, Rust newbie here!</p>\n<p>I'm stuck trying to use strum's <code>VARIANTS</code> value, whose type seems to be <code>&amp;'static [&amp;'static str]</code>. I have the following enum:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">serde</span>::<span class=\"p\">{</span><span class=\"n\">Serialize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Deserialize</span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">strum_macros</span>::<span class=\"p\">{</span><span class=\"n\">EnumString</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">EnumVariantNames</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[derive(Serialize, Deserialize, Debug, EnumString, EnumVariantNames)]</span><span class=\"w\"></span>\n<span class=\"cp\">#[serde(rename_all = </span><span class=\"s\">\"lowercase\"</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"cp\">#[strum(serialize_all = </span><span class=\"s\">\"lowercase\"</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">MovieId</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Chihiro</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Ged</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Kaguyahime</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Karigurashi</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Kazetachinu</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Kokurikozaka</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Marnie</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Ponyo</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The problem is that I can't see any useful methods on <code>MovieId::VARIANTS</code> (<code>map</code>, <code>to_iter</code>, ... ) <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I'm sure I'm missing something obvious, maybe I should convert it to something else... any ideas?</p>",
        "id": 219985725,
        "sender_full_name": "Maurizio De Santis",
        "timestamp": 1608042354
    },
    {
        "content": "<p>If it's a <code>&amp;'static [&amp;'static str]</code>, then you can do <code>for s in MovieId::VARIANTS { ... }</code> or <code>MovieId::VARIANTS.iter()</code> and so on to use it as an iterator</p>",
        "id": 219986061,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608042487
    },
    {
        "content": "<p>See <a href=\"https://doc.rust-lang.org/std/primitive.slice.html\">https://doc.rust-lang.org/std/primitive.slice.html</a> for all the methods that can be called on a slice</p>",
        "id": 219986745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608042754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> thank you, it works! May I ask you where is the documentation of that <code>.iter</code> method? Is this one: <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.iter\">https://doc.rust-lang.org/std/primitive.slice.html#method.iter</a> ?</p>\n<p>I mean, with what kind of value am I dealing here? With an array slice?</p>",
        "id": 219987056,
        "sender_full_name": "Maurizio De Santis",
        "timestamp": 1608042878
    },
    {
        "content": "<p>It's a <code>&amp;[&amp;str]</code>, which is a pointer to a slice of <code>&amp;str</code>s. Yes that's the same <code>iter()</code></p>",
        "id": 219987188,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608042933
    },
    {
        "content": "<p>Concretely, this is a pair of a length and a pointer to an array of that length, each member of which is a <code>&amp;str</code>, which is itself a pair of a length and a pointer to a UTF-8 string of that size</p>",
        "id": 219987348,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608042988
    },
    {
        "content": "<p>this is the same as any other array slice, except this one has <code>'static</code> lifetime, meaning it's baked into your binary's read only section and is always available</p>",
        "id": 219987519,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608043076
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span>now it makes perfectly sense <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> thank you again!</p>",
        "id": 219987742,
        "sender_full_name": "Maurizio De Santis",
        "timestamp": 1608043169
    }
]