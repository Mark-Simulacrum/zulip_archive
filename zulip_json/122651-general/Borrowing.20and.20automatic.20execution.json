[
    {
        "content": "<p>So there is this example of borrowing -&gt; <a href=\"https://doc.rust-lang.org/beta/rust-by-example/scope/borrow.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/beta/rust-by-example/scope/borrow.html\">https://doc.rust-lang.org/beta/rust-by-example/scope/borrow.html</a> <code>fn borrow_i32(borrowed_i32: &amp;i32)</code> is getting called with a <code>&amp;Box&lt;i32&gt;</code> I guess the Borrow trait is responsible for turning the <code>&amp;Box&lt;i32&gt;</code> into and <code>&amp;i32</code>. If it is how does the compiler know that it has to use the method from this trait or from some other in case it's a different trait? I just have a hard time figuring out how these things work in Rust.</p>",
        "id": 168391699,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1560857988
    },
    {
        "content": "<blockquote>\n<p>I guess the Borrow trait is responsible </p>\n</blockquote>\n<p>It is not. <a href=\"https://stackoverflow.com/q/28519997/155423\" target=\"_blank\" title=\"https://stackoverflow.com/q/28519997/155423\">What are Rust's exact auto-dereferencing rules?</a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" target=\"_blank\" title=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\"><code>Deref</code></a>.</p>",
        "id": 168403165,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1560866178
    },
    {
        "content": "<p>Also, procedural aside: there's no problem with asking these types of questions here, but it's not the primary place for them, either. That's why responses are so slow. Regular \"using Rust\" questions are more frequent in the Discord or user's forum (<a href=\"https://www.rust-lang.org/community\" target=\"_blank\" title=\"https://www.rust-lang.org/community\">https://www.rust-lang.org/community</a>). Zulip tends to be more heavily used by the people working on compiler and other \"implementation details\"</p>",
        "id": 168403352,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1560866339
    },
    {
        "content": "<p>So if you want responses any quicker, those might be better places :-)</p>",
        "id": 168403382,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1560866367
    },
    {
        "content": "<p>Ah ok, I keep that in mind. Also thanks for the link.</p>",
        "id": 168407615,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1560869052
    }
]