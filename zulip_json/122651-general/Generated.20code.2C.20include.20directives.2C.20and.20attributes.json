[
    {
        "content": "<p>I'm trying to use a build script to generate some code. I've written the generated code into <code>$OUT_DIR/lib-generated.rs</code>, and <code>src/lib.rs</code> contains an include directive to include that. However, I ran into the issue that included files can't contain module doc comments or module-level directives like <code>#![no_std]</code>. Is there a well-known solution for that? What's the best way to generate a crate's source code from <code>build.rs</code>?</p>",
        "id": 182266930,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1575171450
    },
    {
        "content": "<p>you should be able to document the module from <a href=\"http://lib.rs\" target=\"_blank\" title=\"http://lib.rs\">lib.rs</a></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"sd\">/// docs here</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">generated</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">include</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">generated</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 182272348,
        "sender_full_name": "Lokathor",
        "timestamp": 1575182411
    },
    {
        "content": "<p>as for other directives, i simply placed all of them into <a href=\"http://lib.rs\" target=\"_blank\" title=\"http://lib.rs\">lib.rs</a></p>",
        "id": 182272354,
        "sender_full_name": "Lokathor",
        "timestamp": 1575182442
    },
    {
        "content": "<p>also you could just totally prevent the inner module from being known and having to document it maybe</p>",
        "id": 182272411,
        "sender_full_name": "Lokathor",
        "timestamp": 1575182536
    },
    {
        "content": "<p>depends on how important that module was for user understanding, but for ogl33 i just make it all appear in the crate root</p>",
        "id": 182272415,
        "sender_full_name": "Lokathor",
        "timestamp": 1575182570
    },
    {
        "content": "<p>The code generation wants to generate the documentation, too.</p>",
        "id": 182292762,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1575220762
    },
    {
        "content": "<p>I'd rather not hardcode it.</p>",
        "id": 182292812,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1575220809
    },
    {
        "content": "<p>Ditto the directives.</p>",
        "id": 182292816,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1575220816
    },
    {
        "content": "<p>You can generate the documentation in an <code>.md</code> file, and include it.</p>",
        "id": 182324411,
        "sender_full_name": "gnzlbg",
        "timestamp": 1575275688
    },
    {
        "content": "<p>The only documentation that you can't generate is \"top-level\" documentation for a module that has an <code>include!</code> from within that <code>include!</code>.</p>",
        "id": 182324516,
        "sender_full_name": "gnzlbg",
        "timestamp": 1575275792
    },
    {
        "content": "<p>but you can have:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#![doc(include = </span><span class=\"s\">&quot;generated_docs.md&quot;</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"n\">include</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">generated</span><span class=\"p\">);</span><span class=\"w\"></span>\n</pre></div>",
        "id": 182324567,
        "sender_full_name": "gnzlbg",
        "timestamp": 1575275870
    },
    {
        "content": "<p>markdown is good</p>",
        "id": 182327209,
        "sender_full_name": "Lokathor",
        "timestamp": 1575278616
    },
    {
        "content": "<p>also try this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// lib.rs is something like this</span>\n<span class=\"c1\">// you make a private inner module</span>\n<span class=\"c1\">// and pub use the content</span>\n<span class=\"c1\">// the outside world doesn&#39;t generally see the intermediate level</span>\n<span class=\"c1\">// (it will show up in the full path of error messages)</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">priv_includer</span>::<span class=\"o\">*</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">mod</span> <span class=\"nn\">priv_includer</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">include</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// gen.rs immediately creates a pub module</span>\n<span class=\"c1\">// you can stick doc on this module from the outside</span>\n<span class=\"c1\">// and the inside should support inner attributes</span>\n\n<span class=\"sd\">/// docs for the module you want seen</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">the_module_you_want_seen</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">//...</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 182327580,
        "sender_full_name": "Lokathor",
        "timestamp": 1575278909
    },
    {
        "content": "<p>the outside world sees it as <code>my_crate::the_module_you_want_seen</code></p>",
        "id": 182327629,
        "sender_full_name": "Lokathor",
        "timestamp": 1575278960
    }
]