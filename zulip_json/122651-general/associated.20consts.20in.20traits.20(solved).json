[
    {
        "content": "<p>Greetings. <br>\nI swear this worked before?</p>\n<div class=\"codehilite\"><pre><span></span><code>trait FixedSize: Sized {\n    const SIZE: usize;\n}\n\ntrait AsArray: FixedSize {\n    fn as_array(&amp;self) -&gt; [u8; Self::SIZE];\n}\n</code></pre></div>",
        "id": 204178092,
        "sender_full_name": "Sebastian Köln",
        "timestamp": 1594971340
    },
    {
        "content": "<p>or did I misrember and one had to use type Array = [u8; 42];</p>",
        "id": 204178181,
        "sender_full_name": "Sebastian Köln",
        "timestamp": 1594971402
    },
    {
        "content": "<p>either way, I am getting some interesting errors: <a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=695bf16779ddeda87b3ab5a06f14fa12\">https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=695bf16779ddeda87b3ab5a06f14fa12</a></p>",
        "id": 204178855,
        "sender_full_name": "Sebastian Köln",
        "timestamp": 1594971933
    },
    {
        "content": "<p>error[E0277]: the trait bound <code>A: AsArray</code> is not satisfied<br>\non <code>impl&lt;A: AsArray, B: AsArray&gt; AsArray for (A, B) {</code></p>",
        "id": 204178870,
        "sender_full_name": "Sebastian Köln",
        "timestamp": 1594971958
    },
    {
        "content": "<p>Okay, so  I am running  into a well known limitation. Disregard.</p>",
        "id": 204180989,
        "sender_full_name": "Sebastian Köln",
        "timestamp": 1594973604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257700\">@Sebastian Köln</span> this is the error you should be getting <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=26e23c4d11cf2b4bfe91f9597601ee89\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=26e23c4d11cf2b4bfe91f9597601ee89</a></p>",
        "id": 204188783,
        "sender_full_name": "eddyb",
        "timestamp": 1594979615
    },
    {
        "content": "<p>(the const generics feature-gate doubles as an opt-in for turning on \"lazy normalization\" which fixes the false error you were seeing, and reveals the true error)</p>",
        "id": 204188845,
        "sender_full_name": "eddyb",
        "timestamp": 1594979649
    }
]