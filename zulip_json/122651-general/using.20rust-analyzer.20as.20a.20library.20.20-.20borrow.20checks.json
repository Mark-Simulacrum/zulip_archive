[
    {
        "content": "<p>Hi! I've been playing around with using Rust-analyzer as a library and using it to analyze rust code programmatically - in particular, so far I've managed to get up to running <code>HirDatabase::infer</code> on some code and using the resulting typing map that rust-analyzer produces. Next I wanted to use rust-analyzer to find any borrow-checking errors in my code programatically, but I wasn't able to find any endpoints to do that.</p>\n<p>Is it possible to get borrow-checking diagnostics back from the rust-analyzer api? If so, could someone point me to which functions would be suitable to do that?</p>",
        "id": 259834853,
        "sender_full_name": "Kiran Gopinathan",
        "timestamp": 1635752671
    },
    {
        "content": "<p>No, not unless you go through diagnostics (ask it to run <code>cargo check</code> and show those errors).</p>",
        "id": 259835049,
        "sender_full_name": "Laurențiu",
        "timestamp": 1635752890
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/122651-general/topic/using.20rust-analyzer.20as.20a.20library.20.20-.20borrow.20checks/near/259835049\">said</a>:<br>\nAh, I see. Does the rust-analyzer-api provide a function to do that? and if it does, are the borrow-checking errors parsed into some kind of data structure by rust-analyzer (I am aware that the rust compiler can output it's diagnostic messages in json format), or will I have to parse/deserialize them myself?</p>",
        "id": 259835340,
        "sender_full_name": "Kiran Gopinathan",
        "timestamp": 1635753218
    },
    {
        "content": "<p>I think they are, in order to be reported to the LSP client. This happens around the <code>flycheck</code> crate and in <code>rust_analyzer::diagnostics</code>. But they aren't just borrow checking errors, they're everything you get from <code>cargo check</code>.</p>",
        "id": 259844824,
        "sender_full_name": "Laurențiu",
        "timestamp": 1635760736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454423\">@Kiran Gopinathan</span> you probably want to build a custom rustc driver which can access the borrow checking results directly</p>",
        "id": 259845956,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1635761334
    },
    {
        "content": "<p>Yeah, it depends on what you're planning to do with this. If you want perfect precision, going through rustc might be the better way.</p>",
        "id": 259846155,
        "sender_full_name": "Laurențiu",
        "timestamp": 1635761450
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"312719\">Xavier Denis</span> <a href=\"#narrow/stream/122651-general/topic/using.20rust-analyzer.20as.20a.20library.20.20-.20borrow.20checks/near/259845956\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"454423\">Kiran Gopinathan</span> you probably want to build a custom rustc driver which can access the borrow checking results directly</p>\n</blockquote>\n<p>That's what I had begun to fear, so had started looking into the rust_driver api, but it seems like the borrow errors are serialized quite early in the pipeline - for example, the output of rust_borrowck already seems to serialize the borrow errors: <a href=\"https://github.com/rust-lang/rust/blob/ff0e14829e1806ca0d4226595f7fdf3e8658758f/compiler/rustc_borrowck/src/lib.rs#L331\">https://github.com/rust-lang/rust/blob/ff0e14829e1806ca0d4226595f7fdf3e8658758f/compiler/rustc_borrowck/src/lib.rs#L331</a></p>\n<p>In that case, the options seem to be between, vendoring a custom version of rust_borrowck, or just retrieving the json output and parsing it in a hacky-way</p>",
        "id": 259846683,
        "sender_full_name": "Kiran Gopinathan",
        "timestamp": 1635761765
    },
    {
        "content": "<p>You can run the <code>MoveData</code> analysis yourself, which will give you those move errors. However you’re right that in general I don’t think it’s easy to recover borrow checking errors in the api</p>",
        "id": 259848384,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1635762996
    },
    {
        "content": "<p>It’s one of the weakest spots of the api</p>",
        "id": 259848397,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1635763011
    },
    {
        "content": "<p>Ah, I see. Thanks for the advice! Will try my hand at writing a custom driver</p>",
        "id": 259849179,
        "sender_full_name": "Kiran Gopinathan",
        "timestamp": 1635763585
    }
]