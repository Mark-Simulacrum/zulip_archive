[
    {
        "content": "<p>Is there any \"safe\" way to access private fields without using <code>mem::transmute</code>? I want to access the private fields of a <code>regex::Regex</code> so that I can generate Rust code that initializes it with static values.</p>",
        "id": 209247563,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599437099
    },
    {
        "content": "<p>No, and mem::transmute is not sound to use on repr(Rust) types. I recommend speaking to <span class=\"user-mention\" data-user-id=\"222471\">@BurntSushi</span> and seeing about providing constructors or similar to do what you want.</p>",
        "id": 209247700,
        "sender_full_name": "simulacrum",
        "timestamp": 1599437351
    },
    {
        "content": "<p>Okay, thanks!</p>",
        "id": 209247762,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599437481
    },
    {
        "content": "<p>regex::Regex already has a <code>new</code> constructor, what you want to do is, since you know the value ahead of time, use a <code>lazy_static!</code> or OnceCell-based initialization of it, or fork the crate and make <code>new</code> into a const fn. Using the first method (since uh, forking a crate is a bit much...) will still impose a runtime cost on the first initialization, but you will be able to guarantee, using a lazy initializer, that you mostly only pay the cost once.</p>",
        "id": 209247812,
        "sender_full_name": "Jubilee",
        "timestamp": 1599437566
    },
    {
        "content": "<p>Making the function const seems like the best option, if there's enough const eval support to do everything it wants to do. I'm sure there will be eventually.</p>",
        "id": 209307516,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599492648
    },
    {
        "content": "<p>That crate documents a conservative attitude towards bumping MSRV but maybe the maintainer would be inclined to lean more towards doing so if you filed an issue about how the usability of a <code>const new</code> constructor would significantly impact your use of the crate, <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span>.</p>",
        "id": 209331545,
        "sender_full_name": "Jubilee",
        "timestamp": 1599518143
    },
    {
        "content": "<p>It's not a big deal, it was just an idea I had that would require constructing a regex in a proc macro and then serializing the contents of it so it can be reconstructed at runtime without re-parsing the regex. Although it would be cool to get it working!</p>",
        "id": 209339181,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599529841
    }
]