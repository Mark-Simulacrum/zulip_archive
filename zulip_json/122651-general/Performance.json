[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>+--------------------------------------------------+-----------+-----------------+----------+------------+\n| Item                                             | Self time | % of total time | Time     | Item count |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen_emit_obj                     | 136.30s   | 51.631          | 136.30s  | 156        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_passes                                      | 49.03s    | 18.572          | 49.03s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| finish_ongoing_codegen                           | 27.80s    | 10.530          | 27.83s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_module                                   | 26.98s    | 10.222          | 27.93s   | 156        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_fulfill_obligation                       | 2.75s     | 1.043           | 2.77s    | 152720     |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_codegen                              | 2.48s     | 0.941           | 138.78s  | 156        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| LLVM_module_optimize_module_passes               | 2.35s     | 0.891           | 2.35s    | 156        |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| link_rlib                                        | 2.15s     | 0.813           | 2.15s    | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| monomorphization_collector_graph_walk            | 1.96s     | 0.742           | 6.30s    | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| expand_crate                                     | 1.26s     | 0.478           | 1.38s    | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| symbol_name                                      | 1.21s     | 0.458           | 1.21s    | 352413     |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n| codegen_crate                                    | 1.18s     | 0.446           | 29.21s   | 1          |\n+--------------------------------------------------+-----------+-----------------+----------+------------+\n</code></pre></div>\n<p>Wonderful performance summary, I'm guessing there's not much way to improve LLVM objects aside from just emitting less monomorphized code?</p>",
        "id": 224111777,
        "sender_full_name": "CraftSpider",
        "timestamp": 1611698983
    },
    {
        "content": "<p>You can also use the cranelift backend, I guess?</p>",
        "id": 224113753,
        "sender_full_name": "DÃ¡niel Buga",
        "timestamp": 1611699927
    },
    {
        "content": "<p>That's actually probably a good idea for development, at least. Would make the turnaround better. It's tough to decrease generated code due to the nature of the crate</p>",
        "id": 224114342,
        "sender_full_name": "CraftSpider",
        "timestamp": 1611700254
    }
]