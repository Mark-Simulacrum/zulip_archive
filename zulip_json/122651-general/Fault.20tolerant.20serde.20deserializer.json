[
    {
        "content": "<p>Hello! I am trying to implement a fault tolerant custom deserializer with serde. By fault tolerant I mean a deserializer that can \"skip\" invalid items in collections (array for my specific use case), record the error and continue. I am fine with syntax error being fatal and not being able to continue/recover. But when its basically a data type error (wrong type, wrong field name, etc) I want to be able to skip the entry and record the error.  </p>\n<p>I can't seem to come out with an approach that does not depend on the actual data format. The best thing i've got is using <code>serde_json::value::RawValue</code>: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6f9ac5fa69b3a84f7c11c4e35c3152bc\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6f9ac5fa69b3a84f7c11c4e35c3152bc</a></p>",
        "id": 204655595,
        "sender_full_name": "marmeladema",
        "timestamp": 1595418840
    }
]