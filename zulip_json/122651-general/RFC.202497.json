[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/53667\">https://github.com/rust-lang/rust/issues/53667</a></p>\n<p>I might take a stab at this feature but I need mentorship because It is been a while since I worked on lang stuff. Anyone interested?</p>",
        "id": 214118496,
        "sender_full_name": "Caio",
        "timestamp": 1603316532
    },
    {
        "content": "<p>Wasn't <span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> interested in working on if-let chains? Maybe they can help</p>",
        "id": 214118727,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603316704
    },
    {
        "content": "<p>I didn’t get around to working on it, <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> expressed interest in <a class=\"stream-topic\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler/topic/let.20chains\">#t-compiler &gt; let chains</a>.</p>",
        "id": 214118949,
        "sender_full_name": "davidtwco",
        "timestamp": 1603316846
    },
    {
        "content": "<p>I guess you're first going to need to change the parser and AST to implement the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2497-if-let-chains.md#grammar\">grammar changes</a></p>",
        "id": 214119285,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603317053
    },
    {
        "content": "<p>And then you'll have to implement the desugaring in the AST -&gt; HIR step</p>",
        "id": 214119833,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603317367
    },
    {
        "content": "<p>Hum... IIRC, there are now two parsers: (1) From rust-analyzer and (2) The traditional parser</p>",
        "id": 214120819,
        "sender_full_name": "Caio",
        "timestamp": 1603317906
    },
    {
        "content": "<blockquote>\n<p>And then you'll have to implement the desugaring in the AST -&gt; HIR step</p>\n</blockquote>\n<p>I hope it's that easy :)</p>",
        "id": 214120887,
        "sender_full_name": "Caio",
        "timestamp": 1603317958
    },
    {
        "content": "<p>Otherwise it's no fun :)</p>",
        "id": 214120973,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603317989
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211466\">Caio</span> <a href=\"#narrow/stream/122651-general/topic/RFC.202497/near/214120819\">said</a>:</p>\n<blockquote>\n<p>Hum... IIRC, there are now two parsers: (1) From rust-analyzer and (2) The traditional parser</p>\n</blockquote>\n<p>There are plans to have a unified parser library (cc <a class=\"stream\" data-stream-id=\"254930\" href=\"/#narrow/stream/254930-t-compiler.2Fwg-parselib\">#t-compiler/wg-parselib</a>) but I guess it's still far from happening</p>",
        "id": 214121602,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603318359
    },
    {
        "content": "<p>Desugar happens <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_ast_lowering/expr.rs.html#317-360\">here</a> for <code>if</code>s and <code>if let</code>s</p>",
        "id": 214123412,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603319599
    },
    {
        "content": "<p>So for the <code>if let</code> chains I think it could be possible to just have a recursive function that eats the conditions one by one</p>",
        "id": 214123563,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603319691
    },
    {
        "content": "<p>I'm no compiler expert though :)</p>",
        "id": 214123577,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1603319701
    },
    {
        "content": "<p>Hehehehe, thanks <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> ! Looks like there is a long road ahead</p>",
        "id": 214124869,
        "sender_full_name": "Caio",
        "timestamp": 1603320678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211466\">Caio</span> <a href=\"#narrow/stream/122651-general/topic/RFC.202497/near/214124869\">said</a>:</p>\n<blockquote>\n<p>Hehehehe, thanks <span class=\"user-mention silent\" data-user-id=\"255061\">LeSeulArtichaut</span> ! Looks like there is a long road ahead</p>\n</blockquote>\n<p>I've wanted this several times just in the last few <em>days</em>, and I'd love to see it.</p>",
        "id": 214271084,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1603425255
    },
    {
        "content": "<p>Thank you for considering working on it. :)</p>",
        "id": 214271090,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1603425283
    }
]