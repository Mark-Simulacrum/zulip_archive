[
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=04612c15d74b5a43fc21c9b1dc407fb1\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=04612c15d74b5a43fc21c9b1dc407fb1</a><br>\nThe error message and suggestion are messed:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0106</span><span class=\"p\">]</span>: <span class=\"nc\">missing</span><span class=\"w\"> </span><span class=\"n\">lifetime</span><span class=\"w\"> </span><span class=\"n\">specifier</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">5</span>:<span class=\"mi\">18</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">B</span>: <span class=\"kp\">&amp;</span><span class=\"kt\">str</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"test\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">                  </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"n\">lifetime</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">help</span>: <span class=\"nc\">consider</span><span class=\"w\"> </span><span class=\"n\">introducing</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"n\">lifetime</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">MyStruct</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">MyStruct</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">A</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"nb\">static</span> <span class=\"kt\">str</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"test\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">B</span>: <span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"kt\">str</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"test\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 212206515,
        "sender_full_name": "lzutao",
        "timestamp": 1601788442
    },
    {
        "content": "<p>people also asked about that in <a href=\"https://www.reddit.com/r/rust/comments/j4qtnt/declare_a_constant_string/\">https://www.reddit.com/r/rust/comments/j4qtnt/declare_a_constant_string/</a></p>",
        "id": 212211189,
        "sender_full_name": "lzutao",
        "timestamp": 1601797344
    },
    {
        "content": "<p>seems like a bug to me -- I'd expect associated consts to be treated like top-level consts here</p>",
        "id": 212214845,
        "sender_full_name": "RalfJ",
        "timestamp": 1601803899
    },
    {
        "content": "<p>this bug has already been fixed on nightly afaict</p>",
        "id": 212214973,
        "sender_full_name": "lcnr",
        "timestamp": 1601804112
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span>  doesn't seem like it: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=8adec37547e0449f0171f86b225007c7\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=8adec37547e0449f0171f86b225007c7</a></p>",
        "id": 212215386,
        "sender_full_name": "RalfJ",
        "timestamp": 1601804847
    },
    {
        "content": "<p>both of these suggestions are correct though?</p>",
        "id": 212215404,
        "sender_full_name": "lcnr",
        "timestamp": 1601804883
    },
    {
        "content": "<p>I would expect this to compile</p>",
        "id": 212215447,
        "sender_full_name": "RalfJ",
        "timestamp": 1601804926
    },
    {
        "content": "<p>without errors</p>",
        "id": 212215450,
        "sender_full_name": "RalfJ",
        "timestamp": 1601804929
    },
    {
        "content": "<p>after all the same thing compiles when moving the const out of the <code>impl</code> block</p>",
        "id": 212215458,
        "sender_full_name": "RalfJ",
        "timestamp": 1601804940
    },
    {
        "content": "<p>I don't think we allow elided lifetimes in associated consts</p>",
        "id": 212215469,
        "sender_full_name": "lcnr",
        "timestamp": 1601804959
    },
    {
        "content": "<p>right, and the question <span class=\"user-mention\" data-user-id=\"209117\">@lzutao</span> raised was \"why\"</p>",
        "id": 212215477,
        "sender_full_name": "RalfJ",
        "timestamp": 1601804980
    },
    {
        "content": "<p>seems rather arbitrary to only allow this for top-level consts</p>",
        "id": 212215485,
        "sender_full_name": "RalfJ",
        "timestamp": 1601804996
    },
    {
        "content": "<blockquote>\n<p>seems like a bug to me<br>\nand</p>\n</blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">MyStruct</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>was what I replied to <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 212215539,
        "sender_full_name": "lcnr",
        "timestamp": 1601805025
    },
    {
        "content": "<p>the title of this thread is</p>\n<blockquote>\n<p>why associated const of str require 'static ?</p>\n</blockquote>",
        "id": 212215544,
        "sender_full_name": "RalfJ",
        "timestamp": 1601805040
    },
    {
        "content": "<p>for associated consts lifetime other than static make sense</p>",
        "id": 212215545,
        "sender_full_name": "lcnr",
        "timestamp": 1601805048
    },
    {
        "content": "<p>at least that might have been one of the concerns</p>",
        "id": 212215548,
        "sender_full_name": "lcnr",
        "timestamp": 1601805058
    },
    {
        "content": "<p>otherwise we probably didn't have anyone push for this before <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 212215557,
        "sender_full_name": "lcnr",
        "timestamp": 1601805084
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/122651-general/topic/why.20associated.20const.20of.20str.20require.20'static.20.3F/near/212215544\">said</a>:</p>\n<blockquote>\n<p>the title of this thread is</p>\n<blockquote>\n<p>why associated const of str require 'static ?</p>\n</blockquote>\n</blockquote>\n<p>yeah, and associated const of str does not require static. <code>const N: &amp;'a str</code> is also allowed</p>",
        "id": 212215630,
        "sender_full_name": "lcnr",
        "timestamp": 1601805173
    },
    {
        "content": "<p>the title was not as clear to me as you think it should have been</p>",
        "id": 212215644,
        "sender_full_name": "lcnr",
        "timestamp": 1601805197
    },
    {
        "content": "<p>yeah, I'm sorry. We have limits on title length so I wrote it a little ambiguous.<br>\nI thought that all constants have the same 'static lifetime, so what I asked was<br>\nwhy 'static omitted in normal constants, but have to be specified in associated consts ?</p>",
        "id": 212215726,
        "sender_full_name": "lzutao",
        "timestamp": 1601805343
    },
    {
        "content": "<p>(changed the topic title)</p>",
        "id": 212215842,
        "sender_full_name": "lzutao",
        "timestamp": 1601805522
    },
    {
        "content": "<blockquote>\n<p>yeah, I'm sorry. We have limits on title length so I wrote it a little ambiguous.</p>\n</blockquote>\n<p>When writing the body of the message, just assume that nobody reads the title and explain everything in the body. There you also have enough space :)</p>",
        "id": 212217899,
        "sender_full_name": "RalfJ",
        "timestamp": 1601808872
    },
    {
        "content": "<blockquote>\n<p>It was also pointed out that while <code>'static</code> is a good default for statics and constants, it is not such a good choice for <strong>associated</strong> constants, which still require a fully explicit type (seems fine).</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rfcs/pull/1623#issuecomment-239559757\">https://github.com/rust-lang/rfcs/pull/1623#issuecomment-239559757</a></p>",
        "id": 212228788,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1601827072
    },
    {
        "content": "<p>Open issue about defaulting to <code>'static</code> in associated constants as well - <a href=\"https://github.com/rust-lang/rust/issues/51370\">https://github.com/rust-lang/rust/issues/51370</a>.</p>",
        "id": 212228873,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1601827161
    },
    {
        "content": "<p>If the <code>impl</code> block does not introduce any lifetimes, then defaulting to <code>'static</code> would be a sensible default. But if lifetime params are in scope, then I think omitting the lifetime should cause an error pointing to at least one non-<code>'static</code> lifetime parameter in scope and asking to disambiguate between <code>'static</code> and that one.</p>\n<p>That seems like a win-win situation <em>w.r.t.</em> the current situation:</p>\n<ul>\n<li>\n<p>in the basic cases, it does the Right Thing unambiguously,</p>\n</li>\n<li>\n<p>in the others, it still fails but with a more informative error message.</p>\n</li>\n</ul>",
        "id": 212229663,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1601828327
    },
    {
        "content": "<p>Hmm, I wonder how that interacts with the ideas in <a href=\"https://github.com/rust-lang/rfcs/pull/2548\">https://github.com/rust-lang/rfcs/pull/2548</a> -- notably we don't default to <code>'static</code> for <code>fn(int)-&gt;&amp;str</code> either.</p>",
        "id": 212237660,
        "sender_full_name": "scottmcm",
        "timestamp": 1601839607
    },
    {
        "content": "<p>I mentioned how a <code>const FOO: &amp;BAR&lt;T&gt;</code> associated constant can't have a static lifetime without requiring <code>T: 'static</code> in this comment: <a href=\"https://github.com/rust-lang/rust/issues/51370#issuecomment-703297429\">https://github.com/rust-lang/rust/issues/51370#issuecomment-703297429</a></p>",
        "id": 212239273,
        "sender_full_name": "matt1992",
        "timestamp": 1601842052
    }
]