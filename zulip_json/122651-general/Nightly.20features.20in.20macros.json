[
    {
        "content": "<p>Is there any way to use nightly features in macros without making the users add feature flags to their crate? libstd has <code>allow_internal_unstable</code> for that, but is that intended to also work for user crates?<br>\nSee <a href=\"https://github.com/Gilnaa/memoffset/pull/31\" target=\"_blank\" title=\"https://github.com/Gilnaa/memoffset/pull/31\">https://github.com/Gilnaa/memoffset/pull/31</a></p>",
        "id": 179918212,
        "sender_full_name": "RalfJ",
        "timestamp": 1572949322
    },
    {
        "content": "<p>yea, you should be able to add feature flags to your crate to be able to add <code>allow_internal_unstable</code> to your macro. Users of your macro will then not need the feature gates</p>",
        "id": 179918734,
        "sender_full_name": "oli",
        "timestamp": 1572949756
    },
    {
        "content": "<p>hmm... can't get it to work though: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=53f7565667c2d5d82923915a969f6aa6\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=53f7565667c2d5d82923915a969f6aa6\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=53f7565667c2d5d82923915a969f6aa6</a></p>",
        "id": 179919026,
        "sender_full_name": "oli",
        "timestamp": 1572949938
    },
    {
        "content": "<p>maybe it only works cross crate?</p>",
        "id": 179919032,
        "sender_full_name": "oli",
        "timestamp": 1572949944
    },
    {
        "content": "<p>it fails for doctests in the PR mentioned above</p>",
        "id": 179928049,
        "sender_full_name": "RalfJ",
        "timestamp": 1572957989
    },
    {
        "content": "<p>that's cross-crate</p>",
        "id": 179928050,
        "sender_full_name": "RalfJ",
        "timestamp": 1572957994
    },
    {
        "content": "<p>I think it might only work for libstd?</p>",
        "id": 179928052,
        "sender_full_name": "RalfJ",
        "timestamp": 1572958000
    },
    {
        "content": "<p>I think it's just const support that doesn't work with <code>allow_internal_unstable</code>.</p>",
        "id": 179928940,
        "sender_full_name": "Amanieu",
        "timestamp": 1572958785
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 179930392,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1572959915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> is there something const needs to do for that? <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> ?</p>",
        "id": 180044089,
        "sender_full_name": "RalfJ",
        "timestamp": 1573054649
    },
    {
        "content": "<p>heh</p>",
        "id": 180044221,
        "sender_full_name": "oli",
        "timestamp": 1573054722
    },
    {
        "content": "<p>I thought you were talking about macros?</p>",
        "id": 180044242,
        "sender_full_name": "oli",
        "timestamp": 1573054736
    },
    {
        "content": "<p>macros generating consts</p>",
        "id": 180044261,
        "sender_full_name": "RalfJ",
        "timestamp": 1573054750
    },
    {
        "content": "<p>See <a href=\"https://github.com/Gilnaa/memoffset/pull/31\" target=\"_blank\" title=\"https://github.com/Gilnaa/memoffset/pull/31\">https://github.com/Gilnaa/memoffset/pull/31</a></p>",
        "id": 180044282,
        "sender_full_name": "RalfJ",
        "timestamp": 1573054761
    },
    {
        "content": "<p>yea, idk why that isn't working</p>",
        "id": 180044673,
        "sender_full_name": "oli",
        "timestamp": 1573054982
    },
    {
        "content": "<p>the spans should still know about the macro expansion</p>",
        "id": 180044690,
        "sender_full_name": "oli",
        "timestamp": 1573054990
    },
    {
        "content": "<p>and thus about the allow_internal_unstable</p>",
        "id": 180044698,
        "sender_full_name": "oli",
        "timestamp": 1573054998
    }
]