[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">&quot;C&quot;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">__yk_swt_rec_loc</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[no_mangle]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">_yk_a</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">__yk_swt_rec_loc</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">global_asm</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">r</span><span class=\"err\">#</span><span class=\"s\">&quot;</span>\n<span class=\"s\">.globl __yk_swt_rec_loc</span>\n<span class=\"s\">.type __yk_swt_rec_loc,@function</span>\n<span class=\"s\">.section .text.__yk_swt_rec_loc,&quot;</span><span class=\"n\">ax</span><span class=\"s\">&quot;,@progbits</span>\n<span class=\"s\">__yk_swt_rec_loc:</span>\n<span class=\"s\">    retq</span>\n<span class=\"s\">&quot;</span><span class=\"err\">#</span><span class=\"w\"></span>\n<span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>When literally used as source works fine. However in a certain project the <code>__yk_swt_rec_loc</code> symbol from the <code>global_asm!</code> is omitted resulting in a linker error. Any idea what could cause this.</p>",
        "id": 209003807,
        "sender_full_name": "bjorn3",
        "timestamp": 1599154661
    },
    {
        "content": "<p>(what are you using yorick for btw ?)</p>",
        "id": 209005752,
        "sender_full_name": "lqd",
        "timestamp": 1599155570
    },
    {
        "content": "<p>I am trying if I can integrate it with cg_clif.</p>",
        "id": 209005832,
        "sender_full_name": "bjorn3",
        "timestamp": 1599155617
    },
    {
        "content": "<p>nice, sounds interesting</p>",
        "id": 209006060,
        "sender_full_name": "lqd",
        "timestamp": 1599155736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> Does it work if you put it directly in <code>.text</code> instead of a separate section just for that function?</p>",
        "id": 209011208,
        "sender_full_name": "Amanieu",
        "timestamp": 1599158175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> That doesn't help.</p>",
        "id": 209014774,
        "sender_full_name": "bjorn3",
        "timestamp": 1599159864
    },
    {
        "content": "<p>The <code>global_asm!</code> is missing from the llvm bitcode already.</p>",
        "id": 209064819,
        "sender_full_name": "bjorn3",
        "timestamp": 1599205986
    },
    {
        "content": "<p>The problem seems to be somewhere in ykrustc when <code>-Ctracer=hw</code> is used.</p>",
        "id": 209067652,
        "sender_full_name": "bjorn3",
        "timestamp": 1599208367
    },
    {
        "content": "<p>Found the problem. Ykrustc was replacing global asm instead of appending it somewhere.</p>",
        "id": 209070511,
        "sender_full_name": "bjorn3",
        "timestamp": 1599210584
    }
]