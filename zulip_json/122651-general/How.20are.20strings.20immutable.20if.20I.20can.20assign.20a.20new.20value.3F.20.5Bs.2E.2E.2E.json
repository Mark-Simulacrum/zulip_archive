[
    {
        "content": "<p>Hi! Rust Book in Chapter 4.1 says \"String literals ... they’re immutable\". Me doing this:</p>\n<div class=\"codehilite\"><pre><span></span><code>...\nlet mut str1 = &quot;other string&quot;;\nprintln!(&quot;string inside scope: {}&quot;, str1);\nstr1 = &quot;other string changed, thus mutable&quot;;\nprintln!(&quot;string inside scope after change: {}&quot;, str1);\n...\n</code></pre></div>\n\n\n<p>runs just fine :). Is the Book not updated or do i understand something wrong? BTW: Until now i'm really enjoying rust :).</p>",
        "id": 204474286,
        "sender_full_name": "Boris Junk",
        "timestamp": 1595278185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can this be moved to <a class=\"stream\" data-stream-id=\"122651\" href=\"/#narrow/stream/122651-general\">#general</a> ?</p>",
        "id": 204474575,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595278350
    },
    {
        "content": "<p>I believe you didn’t actually mutate the string, you only mutated the variable, but the first string is \"still there\"</p>",
        "id": 204474593,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1595278362
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp/topic/Ownership\">#t-compiler/help &gt; Ownership</a> by <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span></p>",
        "id": 204474595,
        "sender_full_name": "Notification Bot",
        "timestamp": 1595278364
    },
    {
        "content": "<p>Yup, you've changed what <code>str1</code> refers to, not the value of what it (used to) refer to.</p>",
        "id": 204474691,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595278433
    },
    {
        "content": "<p>much like how writing your house address on a piece of paper in your hand, and then replacing the paper with a new paper. The house is still there.</p>",
        "id": 204474789,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595278488
    },
    {
        "content": "<p>Ah i get it! Of course! The Literal is everything inside the double question marks themselve, somewhere on the stack (?),  thus i just \"redirected\" the target where 'str1' to, to another Literal. Correct?</p>",
        "id": 204474997,
        "sender_full_name": "Boris Junk",
        "timestamp": 1595278618
    },
    {
        "content": "<p>Oh dear, sorry for my bad english, it's late  :p</p>",
        "id": 204475043,
        "sender_full_name": "Boris Junk",
        "timestamp": 1595278667
    },
    {
        "content": "<p>The literal is baked in to the program binary itself, so neither the stack nor the heap, but otherwise yes.</p>",
        "id": 204475045,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595278668
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/q/25468422/155423\">Where is Rust storing all these bytes?</a></p>",
        "id": 204475114,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595278700
    },
    {
        "content": "<p>Oh your right, of course. Should have known this ... <br>\nBut thank you very much for this fast help! How do you handle 'closed' Questions in this chat? Do have to mark anything as 'solved'?</p>",
        "id": 204475366,
        "sender_full_name": "Boris Junk",
        "timestamp": 1595278815
    },
    {
        "content": "<p>We generally don't, but I might do so since you asked.</p>",
        "id": 204475421,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595278851
    },
    {
        "content": "<p>Ok, then just close. All open questions are solved :)</p>",
        "id": 204475515,
        "sender_full_name": "Boris Junk",
        "timestamp": 1595278889
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"323619\">Boris Junk</span> <a href=\"#narrow/stream/122651-general/topic/How.20are.20strings.20immutable.20if.20I.20can.20assign.20a.20new.20value.3F.20.5Bs.2E.2E.2E/near/204475366\">said</a>:</p>\n<blockquote>\n<p>Oh your right, of course. Should have known this ... <br>\nBut thank you very much for this fast help! How do you handle 'closed' Questions in this chat? Do have to mark anything as 'solved'?</p>\n</blockquote>\n<p>this is a good idea, I'll start doing this in t-compiler/help :)</p>",
        "id": 204488756,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1595282242
    },
    {
        "content": "<p>You do run into the topic length limit pretty quickly</p>",
        "id": 204488860,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595282296
    },
    {
        "content": "<p>hm doesn't that break links to the topic? Seems like a bad idea then</p>",
        "id": 204488861,
        "sender_full_name": "simulacrum",
        "timestamp": 1595282297
    }
]