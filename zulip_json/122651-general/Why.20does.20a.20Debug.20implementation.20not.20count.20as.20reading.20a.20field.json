[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">temp</span>: <span class=\"mf\">10.0</span><span class=\"w\"> </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[derive(Debug)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">F</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">temp</span>: <span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>warning: field is never read: `temp`\n --&gt; src/main.rs:7:5\n  |\n7 |     temp: f32,\n  |     ^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n</code></pre></div>",
        "id": 267640772,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641933072
    },
    {
        "content": "<p>Also, if you change it to <code>struct F(f32)</code>, the warning goes away</p>",
        "id": 267640843,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641933115
    },
    {
        "content": "<p>See <a href=\"https://github.com/rust-lang/rust/issues/88900\">https://github.com/rust-lang/rust/issues/88900</a></p>\n<p>I suspect the tuple struct not linting is a bug, but not sure.</p>",
        "id": 267641003,
        "sender_full_name": "simulacrum",
        "timestamp": 1641933193
    },
    {
        "content": "<blockquote>\n<p>Might this also be the reason why rust 1.57.0 fails to build itself?</p>\n</blockquote>\n<p>LOL</p>",
        "id": 267641682,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641933571
    },
    {
        "content": "<p>What's interesting about the root change to ignore the derived code in analysis is that I actually would like to use that myself for SNAFU.</p>",
        "id": 267641884,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641933697
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Why.20does.20a.20Debug.20implementation.20not.20count.20as.20reading.20a.20field/near/267640843\">said</a>:</p>\n<blockquote>\n<p>Also, if you change it to <code>struct F(f32)</code>, the warning goes away</p>\n</blockquote>\n<p>Sounds like a bug.  There's a <em>use</em> in the function that's generated by the parens sugar, but it's a write not a <em>read</em>.</p>",
        "id": 267641996,
        "sender_full_name": "scottmcm",
        "timestamp": 1641933752
    },
    {
        "content": "<p>I guess I'll open a new bug during my next training break.</p>",
        "id": 267642113,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641933834
    },
    {
        "content": "<p>And see if there's a tracking issue for stabilizing something like <code>rustc_trivial_field_reads</code></p>",
        "id": 267642225,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641933882
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/92790\">#92790</a></p>",
        "id": 267653042,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641938969
    }
]