[
    {
        "content": "<p>Hi all, I had this idea after seeing the new feature in 1.54 for using <code>#![doc = include_str!(\"README.md\")]</code>, which is: what if we could write markdown code blocks that can be tested by rustdoc but also rendered properly in Github?</p>\n<p>Right now, rustdoc will treat any code-fenced block as Rust, and compile and run it:</p>\n<div class=\"codehilite\"><pre><span></span><code># fn main() {\nprintln!(&quot;Hello, world!&quot;);\n# }\n</code></pre></div>\n<p>This snippet should compile and run, but only <code>println!(\"Hello, world!\");</code> should be rendered in html. If we were to put this code block in a README.md, however, Github would incorrectly render it with no syntax highlighting and without hiding the # lines. I'm wondering if it'd be possible to close this gap. I'm thinking there'd be two steps to this:</p>\n<p>1) Come up with a new codeblock-fence-label that both rustdoc and Github know is rustdoc-syntax-rust, I'm thinking the easiest would be just \"```rustdoc\"</p>\n<p>2) Get Github to implement markdown codeblock rendering for \"```rustdoc\" code fences. I don't know how likely it is for this to happen.</p>\n<p>I guess I wanted to get people's thoughts on how useful this would be and/or how difficult to make it happen. Would this warrant an RFC? The outcome is largely dependent on collaboration with Github itself, so I wanted opinions first. I think  it'd be great to be able to test code blocks in READMEs, to get the same \"hey, update your docs\" effect there.</p>",
        "id": 249870666,
        "sender_full_name": "Nick Mosher",
        "timestamp": 1629302051
    },
    {
        "content": "<p>Hi All, is there an equivalent in Rust for C's __attribute__((mode(HI)))?</p>",
        "id": 249876129,
        "sender_full_name": "Larry Dewey",
        "timestamp": 1629304462
    },
    {
        "content": "<p>(for enums)</p>",
        "id": 249876282,
        "sender_full_name": "Larry Dewey",
        "timestamp": 1629304543
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"433828\">Larry Dewey</span> <a href=\"#narrow/stream/122651-general/topic/Rustdoc.20code.20block.20for.20Github.20README/near/249876129\">said</a>:</p>\n<blockquote>\n<p>Hi All, is there an equivalent in Rust for C's __attribute__((mode(HI)))?</p>\n</blockquote>\n<p>Never seen that one. Is it like <code>#[repr(u16)]</code>?</p>",
        "id": 249876438,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1629304611
    },
    {
        "content": "<p>Hm, <code>#[repr(u16)]</code>? Not sure if that's fully equivalent</p>",
        "id": 249876449,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1629304614
    },
    {
        "content": "<p>Yeah, i've only seen it on <code>int</code>, never on enums.</p>",
        "id": 249876492,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1629304636
    },
    {
        "content": "<p>I think this question is in the wrong place though.</p>",
        "id": 249876504,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1629304645
    },
    {
        "content": "<p>(should be its own topic)</p>",
        "id": 249876515,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1629304653
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209168\">@Thom Chiovoloni</span> Sorry, still new here. Would it be more appropriate to make it a separate topic?</p>",
        "id": 249876616,
        "sender_full_name": "Larry Dewey",
        "timestamp": 1629304691
    },
    {
        "content": "<p>Yes.</p>",
        "id": 249876636,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1629304704
    }
]