[
    {
        "content": "<p>I have a BTreeMap&lt;u64, CustomType&gt; dict as a non-public member of a struct. serde::Serialize is already derived for CustomType. The question is how do I derive Serialize for BTreeMap&lt;u64,CustomType&gt; without deriving it for the whole class?</p>",
        "id": 168303956,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1560773070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223313\">@Daniel Papp</span> that doesn't really make sense. <code>Serialize</code> is implemented for <code>BTreeMap</code> by Serde itself. You can't implement a trait you don't own for a type you don't own (<a href=\"https://stackoverflow.com/q/25413201/155423\" target=\"_blank\" title=\"https://stackoverflow.com/q/25413201/155423\">How do I implement a trait I don't own for a type I don't own?</a>)</p>",
        "id": 168310164,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1560778152
    },
    {
        "content": "<p>i think you need to provide more detail about your goals and what you have now</p>",
        "id": 168310301,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1560778226
    },
    {
        "content": "<p>I see. I figured it out in the meantime. I mean that I can only define a trait implementation at the crate either where the trait or the type that I want to implement it for reside.</p>",
        "id": 168312397,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1560779834
    }
]