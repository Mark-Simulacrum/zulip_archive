[
    {
        "content": "<p>Is there an issue open for a rustc builds taking excessive amounts of RAM? It used to be that <code>./x.py build --stage 0 compiler/rustc</code> works fine for me with my 16GB RAM and 8 cores; nowadays I have to add <code>-j4</code> as otherwise my system runs out of RAM. I am seeing &gt;4GB \"resident RAM usage\" (in htop) for individual rustc processes (building rustc_middle seems to be the biggest one).</p>",
        "id": 219359211,
        "sender_full_name": "RalfJ",
        "timestamp": 1607530624
    },
    {
        "content": "<p>unfortunately I don't think <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a> really tracks memory usage :/ but I definitely run into this a lot</p>",
        "id": 219359390,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607530709
    },
    {
        "content": "<p>rustc_middle is definitely the biggest problem there.</p>",
        "id": 219367697,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1607534211
    },
    {
        "content": "<p>There are some folks looking at memory usage and optimization at the moment.</p>",
        "id": 219367744,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1607534234
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/73337\">#73337</a> seems related</p>",
        "id": 219371033,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1607535651
    },
    {
        "content": "<p>Actually, that's specifically about incremental.</p>",
        "id": 219371104,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1607535687
    },
    {
        "content": "<p>I think <a href=\"https://github.com/rust-lang/rust/issues/67183\">#67183</a> is pretty close</p>",
        "id": 219371141,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1607535706
    },
    {
        "content": "<p>I remember some time ago I've opened a related issue, let me see if I can find it</p>",
        "id": 219378698,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607539012
    },
    {
        "content": "<p>ohh no, mine is a bit different <a href=\"https://github.com/rust-lang/rust/issues/64276\">#64276</a></p>",
        "id": 219378950,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607539108
    },
    {
        "content": "<p>but also about excessive amount of resources used :P</p>",
        "id": 219380521,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1607539867
    },
    {
        "content": "<p>FWIW, I'm working pretty exclusively on reducing rustc memory usage, though I'm focusing on just incremental compilation right now. Incr-comp should see drastic reductions in memory usage in the next beta compiler if things go well. Drastic reductions meaning up to 15% for incr-full to 25% for incr-patched.</p>",
        "id": 219403277,
        "sender_full_name": "Tyson Nottingham",
        "timestamp": 1607550439
    },
    {
        "content": "<p>The effort in \"reduce rustc_middle\" largely focused on compile time. On that frame, the culprit is the glue for ~250 queries, accounting for ~150s of wall time. I would not be surprised if it was responsible for memory use too.</p>",
        "id": 219405132,
        "sender_full_name": "cjgillot",
        "timestamp": 1607551269
    },
    {
        "content": "<p>In the longer run, Tyson's work is amazing.</p>",
        "id": 219405156,
        "sender_full_name": "cjgillot",
        "timestamp": 1607551283
    },
    {
        "content": "<p>I think it is interesting that each query takes half a second to compile. That seems quite excessive.</p>",
        "id": 219405767,
        "sender_full_name": "bjorn3",
        "timestamp": 1607551553
    },
    {
        "content": "<p>I think the proc-macro generates a <em>lot</em> of code</p>",
        "id": 219405920,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607551615
    },
    {
        "content": "<p>it's probably the 4 or 5 enormous matches for the most part :)</p>",
        "id": 219406831,
        "sender_full_name": "simulacrum",
        "timestamp": 1607552038
    },
    {
        "content": "<p>Its also the content of rustc_middle::ty::query::plumbing 250 times: the implementations of QueryConfig and QueryAccessors, the implementation of TyCtxt{At,Ensure}::$query which instanciates all the invocation code, the monomorphisation of all the caches. Actually, those matches are the least of my worries.</p>",
        "id": 219410155,
        "sender_full_name": "cjgillot",
        "timestamp": 1607553738
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/.22x.2Epy.20build.22.20needs.20too.20much.20RAM/near/219406831\">said</a>:</p>\n<blockquote>\n<p>it's probably the 4 or 5 enormous matches for the most part :)</p>\n</blockquote>\n<p>Hopefully <span class=\"user-mention silent\" data-user-id=\"245339\">Nadrieril</span>'s work speeding up inhabitedness will help with that somewhat!</p>",
        "id": 219411680,
        "sender_full_name": "Noah Lev",
        "timestamp": 1607554524
    },
    {
        "content": "<p>Or rather, their work to make it a query</p>",
        "id": 219411928,
        "sender_full_name": "Noah Lev",
        "timestamp": 1607554640
    },
    {
        "content": "<p>It's not really about them</p>",
        "id": 219419385,
        "sender_full_name": "simulacrum",
        "timestamp": 1607560363
    },
    {
        "content": "<p>Mostly that we have huge functions as a result and LLVM really struggles with that</p>",
        "id": 219419396,
        "sender_full_name": "simulacrum",
        "timestamp": 1607560381
    },
    {
        "content": "<p>Just curious, are there any plans to replace the query infra with <code>salsa</code>?</p>",
        "id": 219466437,
        "sender_full_name": "Lauren»õiu",
        "timestamp": 1607604226
    },
    {
        "content": "<p>I run Gentoo and I'm in the process of replacing my server because 8 GB is no longer enough to build rust even without building LLVM (using the system LLVM), with low concurrency (I think even -j1 failed)</p>",
        "id": 219658582,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1607718896
    },
    {
        "content": "<p>see also <a href=\"https://bugs.gentoo.org/757276#c7\">https://bugs.gentoo.org/757276#c7</a></p>",
        "id": 219658592,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1607718899
    },
    {
        "content": "<p>lot of complaints there about recent memory increases building rust</p>",
        "id": 219658639,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1607718922
    },
    {
        "content": "<p>If I am reading the comments on that bug correctly people were compiling on a tmpfs? So it is effectively counting disk requirements as ram requirements?</p>",
        "id": 219732903,
        "sender_full_name": "The 8472",
        "timestamp": 1607814328
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125250\">Wesley Wiser</span> <a href=\"#narrow/stream/122651-general/topic/.22x.2Epy.20build.22.20needs.20too.20much.20RAM/near/219371104\">said</a>:</p>\n<blockquote>\n<p>Actually, that's specifically about incremental.</p>\n</blockquote>\n<p>I have <code>incremental=true</code> set in my <code>config.toml</code> -- does \"incremental needs lots of RAM\" also apply to the initial build where the incremental cache is being created?</p>",
        "id": 219811788,
        "sender_full_name": "RalfJ",
        "timestamp": 1607934780
    },
    {
        "content": "<p>Judging from what <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> said in <a href=\"https://github.com/rust-lang/rust/issues/73337\">https://github.com/rust-lang/rust/issues/73337</a>, it's about having <code>-i</code> enabled and not aboid actually doing an incremental build in the sense of using the incremental cache -- so that is then the same issue that I am also having.</p>",
        "id": 219812146,
        "sender_full_name": "RalfJ",
        "timestamp": 1607935008
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306073\">@Tyson Nottingham</span> that sounds great, thanks a lot. :-)</p>",
        "id": 219812156,
        "sender_full_name": "RalfJ",
        "timestamp": 1607935018
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> Yeah, having incremental enabled at all (even for the first build) does substantially increase memory requirements.</p>",
        "id": 219812279,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1607935088
    }
]