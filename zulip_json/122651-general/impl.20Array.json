[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> , regarding your comment on <a href=\"https://github.com/rust-lang/rfcs/pull/2545#issuecomment-477958603\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/pull/2545#issuecomment-477958603\">rust-lang/rfcs#2545</a>, what is the strategy there for allowing operations like deriving Debug or even indexing just into the Array? I tried playing with the code and found that attempting to add <code>Deref</code> or <code>Index</code> impls hit errors about \"trait <code>Array</code> cannot be made into an object\" due to its use of an associated const.</p>",
        "id": 162243228,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554128424
    },
    {
        "content": "<p>Debug works out of the box by adding it as a bound to <code>Array</code>'s definition, but unfortunately almost all other common operations are implemented indirectly via <code>Unsize</code>, so every use site would need <code>&amp;FOO as &amp;[T]</code>, which makes my idea unactionable. We'd need some language/compiler magic that would make <code>impl Unsize&lt;T&gt;</code> also allow operations via the unsizing (and as a consequence, also allow <code>U: Unsize&lt;[T]&gt;</code> bounds on generic functions to allow indexing into values of type <code>U</code>. I wonder if we'd get these automatically by implementing <code>Deref</code> for all array types up to length 32.</p>",
        "id": 162246678,
        "sender_full_name": "oli",
        "timestamp": 1554130893
    },
    {
        "content": "<p>Hmm I thought I tried adding <code>Debug</code> as a bound and found it did not work</p>",
        "id": 162248516,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554131978
    },
    {
        "content": "<p>can one make it a bound that is conditional on whether <code>T: Debug</code> ?</p>",
        "id": 162248603,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554132008
    },
    {
        "content": "<p>Ah no, probably not.</p>",
        "id": 162308820,
        "sender_full_name": "oli",
        "timestamp": 1554188525
    },
    {
        "content": "<p>okay. so basically, the idea doesn't work on any front. <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 162316750,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554196849
    }
]