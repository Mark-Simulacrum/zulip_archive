[
    {
        "content": "<p>yesterday I was trying to do a small script to interact with github's api to get our issues and prs and noticed a couple of things that wanted to know how are people doing this sorting out</p>",
        "id": 195862118,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588262805
    },
    {
        "content": "<ol>\n<li>there's no way to filter by things that do not have certain labels <a href=\"https://developer.github.com/v3/issues/#parameters\" title=\"https://developer.github.com/v3/issues/#parameters\">https://developer.github.com/v3/issues/#parameters</a>. My solution was to retrieve everything and filter manually</li>\n</ol>",
        "id": 195862238,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588262846
    },
    {
        "content": "<ol start=\"2\">\n<li>there's no way to filter prs by things that contain a certain label <a href=\"https://developer.github.com/v3/pulls/#parameters\" title=\"https://developer.github.com/v3/pulls/#parameters\">https://developer.github.com/v3/pulls/#parameters</a>. My solution will be to bring all the prs and filter manually but that seems crazy</li>\n</ol>",
        "id": 195862361,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588262888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195862361\" title=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195862361\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>there's no way to filter prs by things that contain a certain label <a href=\"https://developer.github.com/v3/pulls/#parameters\" title=\"https://developer.github.com/v3/pulls/#parameters\">https://developer.github.com/v3/pulls/#parameters</a>. My solution will be to bring all the prs and filter manually but that seems crazy</li>\n</ol>\n</blockquote>\n<p>this would also be a bit more complicated because of pagination</p>",
        "id": 195862473,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588262946
    },
    {
        "content": "<p>does someone have any tip or idea?</p>",
        "id": 195862485,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588262954
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 195862498,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588262960
    },
    {
        "content": "<p>github's api is not really well-suited to this sort of thing, fwiw. it's also pretty slow (they don't want you making more than one request at a time, and generally request latency is pretty high ime).</p>",
        "id": 195862503,
        "sender_full_name": "simulacrum",
        "timestamp": 1588262963
    },
    {
        "content": "<p>I think \"just request everything\" is the best bet unfortunately</p>",
        "id": 195862557,
        "sender_full_name": "simulacrum",
        "timestamp": 1588262994
    },
    {
        "content": "<p>another thing would be to request the html and parse it</p>",
        "id": 195862561,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588262996
    },
    {
        "content": "<p>that does mean you need auth</p>",
        "id": 195862570,
        "sender_full_name": "simulacrum",
        "timestamp": 1588262998
    },
    {
        "content": "<p><span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span></p>",
        "id": 195862639,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588263011
    },
    {
        "content": "<p>parsing the html is going to be worse, I think, or at least I would not go down that road</p>",
        "id": 195862651,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263017
    },
    {
        "content": "<p>I... honestly, I would at least consider doing this as part of triagebot</p>",
        "id": 195862674,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263031
    },
    {
        "content": "<p>and a webhook</p>",
        "id": 195862684,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263038
    },
    {
        "content": "<p>that stores into the db</p>",
        "id": 195862692,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263041
    },
    {
        "content": "<p>it's not self-healing, in theory, but that's not horrible for the most part</p>",
        "id": 195862731,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263062
    },
    {
        "content": "<p>or potentially also, consider making triagebot's server issue the github requests and cache results in memory</p>",
        "id": 195863321,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263337
    },
    {
        "content": "<p>(or in the db, whatever)</p>",
        "id": 195863331,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263340
    },
    {
        "content": "<p>e.g. every 15 minutes at most we'd re-fetch all issues and PRs into the db</p>",
        "id": 195863411,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263373
    },
    {
        "content": "<p>I don’t know much about the GitHub API either, I dived into it just for this application too</p>",
        "id": 195863452,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588263390
    },
    {
        "content": "<p>if we do it right it can be fairly cheap; you can tell github \"hey I have this request result locally\"</p>",
        "id": 195863467,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263394
    },
    {
        "content": "<p>but even if we have to issue, say, 100 queries every 15 minutes if someone is actively using it that's not bad</p>",
        "id": 195863531,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263430
    },
    {
        "content": "<p>I'm not sure if you're willing to accept 15 minute  latency though</p>",
        "id": 195863554,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263443
    },
    {
        "content": "<p>at some point you're just reimplementing github's db on the triagebot db which would be a bit unfortunate though :)</p>",
        "id": 195863597,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263470
    },
    {
        "content": "<p>if we can try to narrow down exactly the info we want that'd be helpful I think</p>",
        "id": 195863665,
        "sender_full_name": "simulacrum",
        "timestamp": 1588263483
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> thanks for your thoughts</p>",
        "id": 195901622,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588280882
    },
    {
        "content": "<p>an approach like what Mark has described seems interesting :)</p>",
        "id": 195901670,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588280895
    },
    {
        "content": "<p>I'm going to try to keep my huge hack going and see what happens</p>",
        "id": 195901701,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588280915
    },
    {
        "content": "<p>I just don't want to continue doing prioritization meetings manually :)</p>",
        "id": 195901718,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588280924
    },
    {
        "content": "<p>if I can automate 75% of the meeting that's at least better</p>",
        "id": 195901745,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588280938
    },
    {
        "content": "<p>fwiw the \"resync the last ~30 commits\" is the approach I went with for the bors commit list</p>",
        "id": 195901805,
        "sender_full_name": "simulacrum",
        "timestamp": 1588280980
    },
    {
        "content": "<p>yeah that kind of latency is good enough for this stuff</p>",
        "id": 195901900,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281019
    },
    {
        "content": "<p>I meant, at least for my use case</p>",
        "id": 195901912,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281028
    },
    {
        "content": "<p>well, to be clear, the bors commit list has 0 latency</p>",
        "id": 195901928,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281036
    },
    {
        "content": "<p>there's some kind of latency on github per se</p>",
        "id": 195901929,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281037
    },
    {
        "content": "<p>but it is relatively self healing too</p>",
        "id": 195901958,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281049
    },
    {
        "content": "<p><a href=\"https://triage.rust-lang.org/bors-commit-list\" title=\"https://triage.rust-lang.org/bors-commit-list\">https://triage.rust-lang.org/bors-commit-list</a></p>",
        "id": 195901963,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281051
    },
    {
        "content": "<p>I tag things with beta-nominated and go to my search of issues beta-nominated and don't see those newly nominated ones for some minutes</p>",
        "id": 195902003,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281072
    },
    {
        "content": "<p>unsure how long but it takes time</p>",
        "id": 195902013,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281077
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195901963\" title=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195901963\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://triage.rust-lang.org/bors-commit-list\" title=\"https://triage.rust-lang.org/bors-commit-list\">https://triage.rust-lang.org/bors-commit-list</a></p>\n</blockquote>\n<p>cool</p>",
        "id": 195902045,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281101
    },
    {
        "content": "<p>so -- e.g. if you want a list of beta-nominated prs -- triagebot could easily keep track of that for you</p>",
        "id": 195902076,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281120
    },
    {
        "content": "<p>at a http or JSON endpoint, w/e works</p>",
        "id": 195902137,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281134
    },
    {
        "content": "<p>yeah, seems like that's the best solution</p>",
        "id": 195902207,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281179
    },
    {
        "content": "<p>er, html or JSON</p>",
        "id": 195902210,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281179
    },
    {
        "content": "<p>obviously http</p>",
        "id": 195902222,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281186
    },
    {
        "content": "<p>I mean we <em>can</em> expose raw tcp sockets that just spew json at you if you connect</p>",
        "id": 195902244,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281200
    },
    {
        "content": "<p>but that seems like not what you want :)</p>",
        "id": 195902260,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281208
    },
    {
        "content": "<p>yeah no no</p>",
        "id": 195902349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281244
    },
    {
        "content": "<p>just json over http would be enough</p>",
        "id": 195902384,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195902207\" title=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195902207\">said</a>:</p>\n<blockquote>\n<p>yeah, seems like that's the best solution</p>\n</blockquote>\n<p>as I was saying it seems like the best solution but also seems like there's a bit of work to do that :P</p>",
        "id": 195902423,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281297
    },
    {
        "content": "<p>and some interesting steps too</p>",
        "id": 195902438,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281303
    },
    {
        "content": "<p>like dealing with github pagination</p>",
        "id": 195902452,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281310
    },
    {
        "content": "<p>understanding how to store things on triagebot</p>",
        "id": 195902473,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281325
    },
    {
        "content": "<p>how to setup jobs that run every x minutes there</p>",
        "id": 195902505,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281341
    },
    {
        "content": "<p>and a bunch of other, etcs :)</p>",
        "id": 195902519,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281350
    },
    {
        "content": "<p>may be a good idea to create some kind of little project or maybe just add an issue with those steps so we can agree on an approach and maybe split tasks between volunteers/people interested</p>",
        "id": 195902637,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281389
    },
    {
        "content": "<p>well, no, so to be clear</p>",
        "id": 195902652,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281395
    },
    {
        "content": "<p>you don't need a cronjob or whatever</p>",
        "id": 195902663,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281401
    },
    {
        "content": "<p>on each webhook, you look if that added a beta-nominated label, and then stick that issue (along with whatever metadata you want) in the db</p>",
        "id": 195902694,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281415
    },
    {
        "content": "<p>and if it's remove you can drop it presumably</p>",
        "id": 195902707,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281422
    },
    {
        "content": "<p>that's the easy thing</p>",
        "id": 195902732,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281437
    },
    {
        "content": "<p>and most likely works 99% ofthe time</p>",
        "id": 195902743,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281443
    },
    {
        "content": "<p>unsure if I got the whole solution then</p>",
        "id": 195902845,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281483
    },
    {
        "content": "<p>but how do you prepopulate the issues db?</p>",
        "id": 195902862,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281490
    },
    {
        "content": "<p>well, you either a) don't, and just toggle the beta-nominated labels</p>",
        "id": 195902923,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281519
    },
    {
        "content": "<p>also that's not the only thing I want (beta noms), also need other labels included, issues that do not have certain labels, etc</p>",
        "id": 195902933,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281525
    },
    {
        "content": "<p>if you can prepare a list, that'd be helpful</p>",
        "id": 195902964,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281541
    },
    {
        "content": "<p>list of things needed?</p>",
        "id": 195902980,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281551
    },
    {
        "content": "<p>I personally think that this is easily solveable with triagebot</p>",
        "id": 195902984,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281552
    },
    {
        "content": "<p>list of the \"queries\" you want to run against github, yeah</p>",
        "id": 195903004,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281561
    },
    {
        "content": "<p>let me show that quickly</p>",
        "id": 195903026,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281570
    },
    {
        "content": "<p>all the searches starting here <a href=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\" title=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\">https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers</a></p>",
        "id": 195903064,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281601
    },
    {
        "content": "<p>mainly filters about labels</p>",
        "id": 195903118,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281607
    },
    {
        "content": "<p>issues that include certain labels and exclude certain other labels</p>",
        "id": 195903143,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281621
    },
    {
        "content": "<p>issues and prs</p>",
        "id": 195903149,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281625
    },
    {
        "content": "<p>only issues</p>",
        "id": 195903153,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281628
    },
    {
        "content": "<p>things closed and open</p>",
        "id": 195903156,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281631
    },
    {
        "content": "<p>combinations of those things in general</p>",
        "id": 195903166,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281636
    },
    {
        "content": "<p>how do you use this information, though? i.e. why aren't the links good enough?</p>",
        "id": 195903285,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281708
    },
    {
        "content": "<p>so the use case is ...</p>",
        "id": 195903354,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281734
    },
    {
        "content": "<p><a href=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/pre-meeting.20triage.202020-04-30.20.2354818/near/195756076\" title=\"#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/pre-meeting.20triage.202020-04-30.20.2354818/near/195756076\">https://rust-lang.zulipchat.com/#narrow/stream/227806-t-compiler.2Fwg-prioritization/topic/pre-meeting.20triage.202020-04-30.20.2354818/near/195756076</a></p>",
        "id": 195903403,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281762
    },
    {
        "content": "<p>I use this hackmd <a href=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\" title=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\">https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers</a> to run the meeting</p>",
        "id": 195903467,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281796
    },
    {
        "content": "<p>go over each section and paste those links</p>",
        "id": 195903478,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281804
    },
    {
        "content": "<p>so we need to open them</p>",
        "id": 195903487,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281808
    },
    {
        "content": "<p>check if the list is empty or not</p>",
        "id": 195903497,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281814
    },
    {
        "content": "<p>so, let me try to phrase my understanding:</p>\n<p>you go to the link, and look over the issues -- your goal is to take some action</p>",
        "id": 195903506,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281817
    },
    {
        "content": "<p>then list them</p>",
        "id": 195903507,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281818
    },
    {
        "content": "<p>but you want to do so publicly, so ideally you'd not be manually copy pasting links and whatnot</p>",
        "id": 195903526,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281830
    },
    {
        "content": "<p>with markdown format, in some cases we need to add those to the agenda</p>",
        "id": 195903528,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281830
    },
    {
        "content": "<p>we spend literally 30 minutos on this each meeting</p>",
        "id": 195903550,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281841
    },
    {
        "content": "<p>is not only copy pasting the links but  also parsing them</p>",
        "id": 195903627,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281866
    },
    {
        "content": "<p>let me show you</p>",
        "id": 195903629,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281868
    },
    {
        "content": "<p>because I have a running thing</p>",
        "id": 195903630,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281872
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>     Running `target/debug/prioritization`\n\n### Remove I-nominated leftovers\n\n- [Unnominate leftover I-nominated](https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler)\n    - Remove `I-nominated` tag from issues discussed on the last meeting.\n\n\nUnsoundness due to variance of trait objects WRT associated types [#71550](https://github.com/rust-lang/rust/issues/71550)\nWarn on useless bindings like `let v2 = v1.sort();` [#71432](https://github.com/rust-lang/rust/issues/71432)\nAccept tuple.0.0 as tuple indexing (take 2) [#71322](https://github.com/rust-lang/rust/pull/71322)\nrepr(packed) allows invalid unaligned loads [#27060](https://github.com/rust-lang/rust/issues/27060)\n\n### Unprioritized I-prioritize\n\nGo over unprioritized I-prioritize issues. We should also go over I-nominated meanwhile we migrate, we were using I-nominated sometimes as an implicit request for prioritization.\n\n1. [No team assigned](https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize+-label%3AT-compiler+-label%3AT-libs+-label%3AT-infra+-label%3A\nT-rustdoc+-label%3AT-lang)\n    - Add T-compiler tag when it corresponds.\n\nEmpty\n\n2. [T-compiler](https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize)\n    - Prioritize issues and remove nomination of the ones not worth discussing.\n    - Tag regressions accordingly.\n    - Ping appropriate people and/or [ICE-breakers](https://rustc-dev-guide.rust-lang.org/ice-breaker/about.html#tagging-an-issue-for-an-ice-breaker-group).\n\nEmpty\n\n3. [All teams](https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize)\n    - No action required. It&#39;s nice to look at this for comparison.\n\nEmpty\n</code></pre></div>",
        "id": 195903683,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281905
    },
    {
        "content": "<p>this is more or less what the tool I'm building does</p>",
        "id": 195903735,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281931
    },
    {
        "content": "<p>and the idea would be to paste that into zulip?</p>",
        "id": 195903741,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281934
    },
    {
        "content": "<h3>Remove I-nominated leftovers</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">Unnominate leftover I-nominated</a><br>\n    - Remove <code>I-nominated</code> tag from issues discussed on the last meeting.</li>\n</ul>\n<p>Unsoundness due to variance of trait objects WRT associated types <a href=\"https://github.com/rust-lang/rust/issues/71550\" title=\"https://github.com/rust-lang/rust/issues/71550\">#71550</a><br>\nWarn on useless bindings like <code>let v2 = v1.sort();</code> <a href=\"https://github.com/rust-lang/rust/issues/71432\" title=\"https://github.com/rust-lang/rust/issues/71432\">#71432</a><br>\nAccept tuple.0.0 as tuple indexing (take 2) <a href=\"https://github.com/rust-lang/rust/pull/71322\" title=\"https://github.com/rust-lang/rust/pull/71322\">#71322</a><br>\nrepr(packed) allows invalid unaligned loads <a href=\"https://github.com/rust-lang/rust/issues/27060\" title=\"https://github.com/rust-lang/rust/issues/27060\">#27060</a></p>\n<h3>Unprioritized I-prioritize</h3>\n<p>Go over unprioritized I-prioritize issues. We should also go over I-nominated meanwhile we migrate, we were using I-nominated sometimes as an implicit request for prioritization.</p>\n<ol>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize+-label%3AT-compiler+-label%3AT-libs+-label%3AT-infra+-label%3A\nT-rustdoc+-label%3AT-lang\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize+-label%3AT-compiler+-label%3AT-libs+-label%3AT-infra+-label%3A\nT-rustdoc+-label%3AT-lang\">No team assigned</a><br>\n    - Add T-compiler tag when it corresponds.</li>\n</ol>\n<p>Empty</p>\n<ol start=\"2\">\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AT-compiler+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize\">T-compiler</a><br>\n    - Prioritize issues and remove nomination of the ones not worth discussing.<br>\n    - Tag regressions accordingly.<br>\n    - Ping appropriate people and/or <a href=\"https://rustc-dev-guide.rust-lang.org/ice-breaker/about.html#tagging-an-issue-for-an-ice-breaker-group\" title=\"https://rustc-dev-guide.rust-lang.org/ice-breaker/about.html#tagging-an-issue-for-an-ice-breaker-group\">ICE-breakers</a>.</li>\n</ol>\n<p>Empty</p>\n<ol start=\"3\">\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize\">All teams</a><br>\n    - No action required. It's nice to look at this for comparison.</li>\n</ol>\n<p>Empty</p>",
        "id": 195903754,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281942
    },
    {
        "content": "<p>yes and or to the agenda</p>",
        "id": 195903758,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281944
    },
    {
        "content": "<p>aha, okay</p>",
        "id": 195903767,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281949
    },
    {
        "content": "<p>ideally that could be run using commands here</p>",
        "id": 195903828,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281965
    },
    {
        "content": "<p>like @rustbot start-prioritization-meeting</p>",
        "id": 195903851,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281976
    },
    {
        "content": "<p>@rustbot next</p>",
        "id": 195903855,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281981
    },
    {
        "content": "<p>yeah, yeah, I see...</p>",
        "id": 195903856,
        "sender_full_name": "simulacrum",
        "timestamp": 1588281982
    },
    {
        "content": "<p>and then we see the next set of things and so on</p>",
        "id": 195903870,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588281988
    },
    {
        "content": "<p>maybe if we have 4 empty lists in a row the thing just skips everything</p>",
        "id": 195903886,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282000
    },
    {
        "content": "<p>it may seem silly but we spend a lot of time on this :)</p>",
        "id": 195903895,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282009
    },
    {
        "content": "<p>I think doing it in triagebot is the way to go honestly, you're going to end up copy/pasting a bunch if it's from the command line</p>",
        "id": 195903923,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282032
    },
    {
        "content": "<p>and then just ping triagebot here</p>",
        "id": 195903931,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282037
    },
    {
        "content": "<p>this is why I'm saying I'm building something very bad, ugly but that would do some of the work needed</p>",
        "id": 195903936,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282042
    },
    {
        "content": "<p>so how does this sound: you probably are good with a partial solution to start, too</p>",
        "id": 195903963,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282058
    },
    {
        "content": "<p>I can try to get <a href=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\" title=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\">https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers</a> specifically working</p>",
        "id": 195904047,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282084
    },
    {
        "content": "<p>I'm doing it in triagebot, just added a src/bin/prioritization</p>",
        "id": 195904048,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282084
    },
    {
        "content": "<p>well I meant as a zulip command, but sure</p>",
        "id": 195904061,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282093
    },
    {
        "content": "<p>and then you can use that as a template for how to do the rest?</p>",
        "id": 195904079,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282104
    },
    {
        "content": "<p>e.g. you'd do @triagebot leftover-noms</p>",
        "id": 195904107,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282122
    },
    {
        "content": "<p>sure, everything helps</p>",
        "id": 195904126,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282132
    },
    {
        "content": "<p>and it'd paste:</p>\n<h3>Remove I-nominated leftovers</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\" title=\"https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3AI-nominated+label%3AT-compiler\">Unnominate leftover I-nominated</a><br>\n    - Remove <code>I-nominated</code> tag from issues discussed on the last meeting.</li>\n</ul>\n<p>Unsoundness due to variance of trait objects WRT associated types <a href=\"https://github.com/rust-lang/rust/issues/71550\" title=\"https://github.com/rust-lang/rust/issues/71550\">#71550</a><br>\nWarn on useless bindings like <code>let v2 = v1.sort();</code> <a href=\"https://github.com/rust-lang/rust/issues/71432\" title=\"https://github.com/rust-lang/rust/issues/71432\">#71432</a><br>\nAccept tuple.0.0 as tuple indexing (take 2) <a href=\"https://github.com/rust-lang/rust/pull/71322\" title=\"https://github.com/rust-lang/rust/pull/71322\">#71322</a><br>\nrepr(packed) allows invalid unaligned loads <a href=\"https://github.com/rust-lang/rust/issues/27060\" title=\"https://github.com/rust-lang/rust/issues/27060\">#27060</a></p>",
        "id": 195904148,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282140
    },
    {
        "content": "<p>but I don't have an issue with that specifically</p>",
        "id": 195904158,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282143
    },
    {
        "content": "<p>I think we started to talk now about something different :)</p>",
        "id": 195904197,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282161
    },
    {
        "content": "<p>so the main problem is that I don't have a way to get prs</p>",
        "id": 195904220,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282175
    },
    {
        "content": "<p>I'm a bit confused :)</p>\n<p>I thought you were saying that you weren't sure how to do this</p>",
        "id": 195904221,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282176
    },
    {
        "content": "<p>how are prs different from this?</p>",
        "id": 195904245,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282193
    },
    {
        "content": "<p>so the main problem I was talking about is that I'd need to get all prs</p>",
        "id": 195904247,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282194
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> <a href=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195862361\" title=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195862361\">said</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>there's no way to filter prs by things that contain a certain label <a href=\"https://developer.github.com/v3/pulls/#parameters\" title=\"https://developer.github.com/v3/pulls/#parameters\">https://developer.github.com/v3/pulls/#parameters</a>. My solution will be to bring all the prs and filter manually but that seems crazy</li>\n</ol>\n</blockquote>\n<p>jump to the first two sentences of the topic</p>",
        "id": 195904351,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282233
    },
    {
        "content": "<p>that's in particular one of the problems</p>",
        "id": 195904361,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282240
    },
    {
        "content": "<p>I thought you were saying that we could solve this by storing issues and prs on a database and syncronizing them frequently</p>",
        "id": 195904388,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282259
    },
    {
        "content": "<p>yes you can do that</p>",
        "id": 195904455,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282281
    },
    {
        "content": "<p>but actually, I think you can just use the issues endpoint</p>",
        "id": 195904468,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282291
    },
    {
        "content": "<p>github will return both prs and issues from it iirc</p>",
        "id": 195904487,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282301
    },
    {
        "content": "<p>nope :)</p>",
        "id": 195904497,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282307
    },
    {
        "content": "<blockquote>\n<p>Note: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the pull_request key.</p>\n</blockquote>",
        "id": 195904514,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282319
    },
    {
        "content": "<p>really? if that's true all my problems are solved</p>",
        "id": 195904593,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282347
    },
    {
        "content": "<p>oh okay</p>",
        "id": 195904610,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282354
    },
    {
        "content": "<p>well :)</p>",
        "id": 195904614,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282356
    },
    {
        "content": "<p>to my knowledge it is true</p>",
        "id": 195904641,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282372
    },
    {
        "content": "<p>the may part confuses me but ... <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 195904662,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282382
    },
    {
        "content": "<p>the other problem is filtering out some labels but that can be done programmatically</p>",
        "id": 195904697,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282403
    },
    {
        "content": "<p>well obviously it can return just one or just the other depending on your query</p>",
        "id": 195904705,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282407
    },
    {
        "content": "<p>still we can talk about how to do the rest</p>",
        "id": 195904713,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282411
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195904047\" title=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195904047\">said</a>:</p>\n<blockquote>\n<p>I can try to get <a href=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\" title=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers\">https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Remove-I-nominated-leftovers</a> specifically working</p>\n</blockquote>\n<p>if it's easy to do this for you, may help <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 195904820,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282465
    },
    {
        "content": "<p>mainly to reduce the amount of work needed <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 195904830,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282474
    },
    {
        "content": "<p>but only if it's easy for you</p>",
        "id": 195904838,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282481
    },
    {
        "content": "<p>I'm more focused on something text based because I want to have something for the next meeting and I don't have a lot of time to play with this</p>",
        "id": 195904881,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282511
    },
    {
        "content": "<p>so if it's easy and you can would be great</p>",
        "id": 195904895,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282519
    },
    {
        "content": "<p>the problem I guess is setting up something with state</p>",
        "id": 195904929,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282543
    },
    {
        "content": "<p>I can probably get the state thing going</p>",
        "id": 195904952,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282559
    },
    {
        "content": "<p>where we can do <code>@rustbot start-meeting</code> and then continue doing calling <code>@rustbot next</code></p>",
        "id": 195905035,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282592
    },
    {
        "content": "<p>e.g. something like a wrapper that takes in a <code>impl Iterator&lt;Item=String&gt;</code> and on <code>rustbot next</code> it'll paste the next string</p>",
        "id": 195905051,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282600
    },
    {
        "content": "<p>and at the end with a <code>@rustbot end-meeting</code> it prints the agenda or something like that</p>",
        "id": 195905063,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282606
    },
    {
        "content": "<p>would that be helpful?</p>",
        "id": 195905071,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282611
    },
    {
        "content": "<p>yeah that's exactly what I was thinking about doing</p>",
        "id": 195905104,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282629
    },
    {
        "content": "<p>okay, yeah, I can do that no problem I think</p>",
        "id": 195905118,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282637
    },
    {
        "content": "<p>cool, thanks a lot</p>",
        "id": 195905143,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282652
    },
    {
        "content": "<p>I'm going to do the rest and hopefully we can mix up the pieces and have something soon</p>",
        "id": 195905160,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282667
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> do you need a iterator, specifically? or do you think just a Vec&lt;String&gt; would work too?</p>",
        "id": 195905183,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282682
    },
    {
        "content": "<p>basically, can the meeting run based on a pre-generated agenda</p>",
        "id": 195905225,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282694
    },
    {
        "content": "<p>instead of one that (in theory) could dynamically update as we go</p>",
        "id": 195905237,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282703
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195905225\" title=\"#narrow/stream/122651-general/topic/interacting.20with.20github.20api/near/195905225\">said</a>:</p>\n<blockquote>\n<p>basically, can the meeting run based on a pre-generated agenda</p>\n</blockquote>\n<p>the agenda is fixed and pre-generated</p>",
        "id": 195905409,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282804
    },
    {
        "content": "<p>so the confusing thing is that we have 2 agendas, let me explain</p>",
        "id": 195905433,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282827
    },
    {
        "content": "<p>there's pre-triage meeting which has a fixed amount of steps (we could call that pre-triage agenda)</p>",
        "id": 195905459,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282853
    },
    {
        "content": "<p>and that's documented here <a href=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Pre-triage\" title=\"https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Pre-triage\">https://hackmd.io/pHb6eTZ2Sjy6XZmwXZHIBA?view#Pre-triage</a></p>",
        "id": 195905479,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282866
    },
    {
        "content": "<p>that pre-triage meeting ends building a triage agenda</p>",
        "id": 195905510,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282878
    },
    {
        "content": "<p>and that triage agenda also have a fixed amount of things too</p>",
        "id": 195905531,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282896
    },
    {
        "content": "<p>so there's no dynamic updates as we go on any agenda</p>",
        "id": 195905565,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588282913
    },
    {
        "content": "<p>okay, so on my end I'll just have some command that can run a Rust function (or functions, depending, for each agenda etc) returning <code>Vec&lt;String&gt;</code> and then can make progress through that</p>",
        "id": 195905695,
        "sender_full_name": "simulacrum",
        "timestamp": 1588282975
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 195906264,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283255
    },
    {
        "content": "<p>I have most of the rest of the setup done</p>",
        "id": 195906278,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283264
    },
    {
        "content": "<p>but it needs love and some more work</p>",
        "id": 195906286,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283270
    },
    {
        "content": "<p>:D</p>",
        "id": 195906293,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I have things like this</p>",
        "id": 195906434,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283348
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">i_nominated_leftovers</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">client</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">GithubClient</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">Issue</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">get_issues</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">client</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"s\">&quot;state=open&quot;</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;I-nominated&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;T-compiler&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 195906440,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283352
    },
    {
        "content": "<p>one thing though, that I think it's already set up is ...</p>",
        "id": 195906466,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283367
    },
    {
        "content": "<p>it would be better to move all this repetitions to a toml file</p>",
        "id": 195906487,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283380
    },
    {
        "content": "<p>I'll likely have something by late friday or mid-weekend or so</p>",
        "id": 195906493,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283385
    },
    {
        "content": "<p>I would start by duplicating the code</p>",
        "id": 195906507,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283394
    },
    {
        "content": "<p>yeah this is what I've done</p>",
        "id": 195906561,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283404
    },
    {
        "content": "<p>we can clean it up and toml it later</p>",
        "id": 195906563,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283404
    },
    {
        "content": "<p>everything is kind of duplicated</p>",
        "id": 195906571,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283409
    },
    {
        "content": "<p>don't worry about that for now</p>",
        "id": 195906577,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283413
    },
    {
        "content": "<p>but I'd end up with more lines of code that rustc itself I fear <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 195906593,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283425
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+-label%3AP-critical+-label%3AP-high+-label%3AP-medium+-label%3AP-low+label%3AI-prioritize+-label%3AT-compiler+-label%3AT-libs+-label%3AT-infra+-label%3AT-rustdoc+-label%3AT-lang</span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">unpri_i_prioritize_no_team</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">client</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">GithubClient</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">Issue</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">// FIXME filter labels</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">get_issues</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">client</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"s\">&quot;state=open&quot;</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">name</span>: <span class=\"s\">&quot;I-prioritize&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}],</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;P-critical&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;P-high&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;P-medium&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;P-low&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;T-compiler&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;T-libs&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;T-infra&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;T-rustdoc&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">&amp;</span><span class=\"n\">Label</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">name</span>: <span class=\"s\">&quot;T-lang&quot;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 195906623,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283454
    },
    {
        "content": "<p>and so on</p>",
        "id": 195906633,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283461
    },
    {
        "content": "<p>then there are the messages we print</p>",
        "id": 195906658,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283470
    },
    {
        "content": "<p>all that is pure repetition</p>",
        "id": 195906664,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283478
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> lines of code don't bother me</p>",
        "id": 195906673,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283479
    },
    {
        "content": "<p>hehehe</p>",
        "id": 195906686,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283484
    },
    {
        "content": "<p>I would get a MVP out the door</p>",
        "id": 195906698,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283488
    },
    {
        "content": "<p>that makes me get stuck</p>",
        "id": 195906708,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283495
    },
    {
        "content": "<p>really</p>",
        "id": 195906715,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283500
    },
    {
        "content": "<p>I see that amount of repetition and get paralyzed</p>",
        "id": 195906738,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283517
    },
    {
        "content": "<p>anyway, will get this going but there's a toml file where we place this kind of things in triagebot, right?</p>",
        "id": 195906798,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283543
    },
    {
        "content": "<p>ah, no, not really</p>",
        "id": 195906808,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283549
    },
    {
        "content": "<p>we don't have global config anywhere</p>",
        "id": 195906819,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283555
    },
    {
        "content": "<p>but I'd not use toml for now anyway</p>",
        "id": 195906836,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283565
    },
    {
        "content": "<p>couldn't this be used <a href=\"https://github.com/rust-lang/triagebot/blob/master/triagebot.toml\" title=\"https://github.com/rust-lang/triagebot/blob/master/triagebot.toml\">https://github.com/rust-lang/triagebot/blob/master/triagebot.toml</a> ?</p>",
        "id": 195906875,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283585
    },
    {
        "content": "<p>make a helper function that goes from <code>&amp;[&amp;'static str]</code> to <code>Vec&lt;Label&gt;</code> and that'll already massively help</p>",
        "id": 195906906,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283603
    },
    {
        "content": "<p>well, no, not really, that's the config for the triagebot repo <em>itself</em></p>",
        "id": 195906944,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283631
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 195906995,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283644
    },
    {
        "content": "<p>will see :)</p>",
        "id": 195907001,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283648
    },
    {
        "content": "<p>but may end adding a file somewhere</p>",
        "id": 195907014,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588283660
    },
    {
        "content": "<p>okay</p>",
        "id": 195907064,
        "sender_full_name": "simulacrum",
        "timestamp": 1588283701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Semi-related; I actually have been working on a new GitHub API client library for Rust, that should hopefully nice to use, and I was wondering if you'd mind sharing which of GitHub's APIs you end using the most? It would help me with knowing what to prioritize in terms of what to implement. Example of the API for getting pull requests.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">prs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">octocrab</span><span class=\"p\">.</span><span class=\"n\">pulls</span><span class=\"p\">(</span><span class=\"s\">&quot;owner&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;repo&quot;</span><span class=\"p\">).</span><span class=\"n\">list</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// Optional Parameters</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">state</span><span class=\"p\">(</span><span class=\"n\">params</span>::<span class=\"n\">State</span>::<span class=\"n\">Open</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">params</span>::<span class=\"n\">pulls</span>::<span class=\"n\">Sort</span>::<span class=\"n\">Popularity</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">per_page</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// Send the request</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">send</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 195989204,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1588355649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> that's cool, at some point I thought about extracting some stuff into a small library too</p>",
        "id": 196006685,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588365300
    },
    {
        "content": "<p>but what I ended using is very reduced</p>",
        "id": 196006702,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588365308
    },
    {
        "content": "<p>mainly <a href=\"https://developer.github.com/v3/issues/\" title=\"https://developer.github.com/v3/issues/\">https://developer.github.com/v3/issues/</a></p>",
        "id": 196007187,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588365597
    },
    {
        "content": "<p>it's actually that + filtering with labels</p>",
        "id": 196007247,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588365612
    },
    {
        "content": "<p>nothing else really</p>",
        "id": 196007250,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588365615
    },
    {
        "content": "<p>octocrab xD</p>",
        "id": 196008736,
        "sender_full_name": "DPC",
        "timestamp": 1588366426
    },
    {
        "content": "<p>coming back to this thing, as <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> mentioned prs are grabbed when you use <a href=\"https://developer.github.com/v3/issues/\" title=\"https://developer.github.com/v3/issues/\">https://developer.github.com/v3/issues/</a> but it completely ignores the state part</p>",
        "id": 196378202,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588718948
    },
    {
        "content": "<p>that seems wrong, can you paste your url?</p>",
        "id": 196378233,
        "sender_full_name": "simulacrum",
        "timestamp": 1588718985
    },
    {
        "content": "<p>I remember state working for me</p>",
        "id": 196378237,
        "sender_full_name": "simulacrum",
        "timestamp": 1588718994
    },
    {
        "content": "<p>so regardless if you use state=open,all,closed it seems like is always giving me back the open ones</p>",
        "id": 196378241,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588718995
    },
    {
        "content": "<p>hold on ...</p>",
        "id": 196378247,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719001
    },
    {
        "content": "<p>yeah have done zero debugging ...</p>",
        "id": 196378293,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719010
    },
    {
        "content": "<p>\"https://api.github.com/repos/rust-lang/rust/issues?labels=beta-nominated&amp;\\\"state=closed\\\"\"</p>",
        "id": 196378446,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719139
    },
    {
        "content": "<p>or state=all</p>",
        "id": 196378451,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719145
    },
    {
        "content": "<p>both queries give back ...</p>",
        "id": 196378459,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719153
    },
    {
        "content": "<p>what's with the quotes there?</p>",
        "id": 196378460,
        "sender_full_name": "simulacrum",
        "timestamp": 1588719154
    },
    {
        "content": "<ul>\n<li>Backport 1.43.1 release notes to master<a href=\"https://github.com/rust-lang/rust/pull/71914\" title=\"https://github.com/rust-lang/rust/pull/71914\">#71914</a></li>\n<li>Update the <code>cc</code> crate<a href=\"https://github.com/rust-lang/rust/pull/71882\" title=\"https://github.com/rust-lang/rust/pull/71882\">#71882</a></li>\n</ul>",
        "id": 196378466,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719155
    },
    {
        "content": "<p>facepalm :)</p>",
        "id": 196378528,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719231
    },
    {
        "content": "<p>I thought this was working</p>",
        "id": 196378575,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719243
    },
    {
        "content": "<p>ohh I see, by default is state=open</p>",
        "id": 196378593,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719263
    },
    {
        "content": "<p>that's why I've assumed it was working was entirely ignoring that and giving me back state=open</p>",
        "id": 196378642,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719301
    },
    {
        "content": "<p>I thought the default was state=all</p>",
        "id": 196378656,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719314
    },
    {
        "content": "<p>anyway, it works, thanks</p>",
        "id": 196378661,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1588719322
    }
]