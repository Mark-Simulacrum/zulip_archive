[
    {
        "content": "<p>I don't understand how these two are conflicting, wouldn't the item have to be an array and a reference at the same time for that impl to overlap?</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0119]: conflicting implementations of trait `iter::traits::marker::TrustedLen` for type `iter::adapters::flatten::Flatten&lt;_&gt;`\n   --&gt; library/core/src/iter/adapters/flatten.rs:264:1\n    |\n258 | / unsafe impl&lt;T, I, const N: usize&gt; TrustedLen for Flatten&lt;I&gt; where\n259 | |     I: Iterator&lt;Item = [T; N]&gt; + TrustedLen\n260 | | {\n261 | | }\n    | |_- first implementation here\n...\n264 | / unsafe impl&lt;&#39;a, T, I, const N: usize&gt; TrustedLen for Flatten&lt;I&gt; where\n265 | |     I: Iterator&lt;Item = &amp;&#39;a [T; N]&gt; + TrustedLen\n266 | | {\n267 | | }\n    | |_^ conflicting implementation for `iter::adapters::flatten::Flatten&lt;_&gt;`\n</code></pre></div>",
        "id": 246253639,
        "sender_full_name": "The 8472",
        "timestamp": 1626456489
    },
    {
        "content": "<p>Looks like a variant of <a href=\"https://github.com/rust-lang/rust/issues/20400\">https://github.com/rust-lang/rust/issues/20400</a></p>",
        "id": 246256045,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1626457459
    },
    {
        "content": "<p>you know you're in a fun place when you run into a pre-1.0 bug...</p>",
        "id": 246256159,
        "sender_full_name": "cuviper",
        "timestamp": 1626457535
    },
    {
        "content": "<p>This bug does get really annoying because <code>Fn() -&gt; T</code>, <code>Fn() -&gt; U</code> is considered overlapping.</p>",
        "id": 246256414,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1626457661
    },
    {
        "content": "<p>Maybe I can work around it in this case with a helper trait.</p>",
        "id": 246256453,
        "sender_full_name": "The 8472",
        "timestamp": 1626457682
    },
    {
        "content": "<p>it works. it wants a public trait but at least that can be made hidden and unstable. it only needed two layers of hacks <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 246257897,
        "sender_full_name": "The 8472",
        "timestamp": 1626458349
    }
]