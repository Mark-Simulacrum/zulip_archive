[
    {
        "content": "<p><code>std::io::Write</code> seems to be byte-oriented:</p>\n<blockquote>\n<p>A trait for objects which are byte-oriented sinks.</p>\n</blockquote>\n<p>and it also is not implemented by <code>String</code>. Is there an equivalent trait that is <code>String</code>-oriented and that <code>String</code> implements? Thanks!</p>",
        "id": 209959343,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600048783
    },
    {
        "content": "<p>It looks like pulldown-cmark <a href=\"https://docs.rs/pulldown-cmark/0.8.0/pulldown_cmark/escape/trait.StrWrite.html\">has something like this</a>. Maybe there's a case for adding it to std?</p>",
        "id": 209959563,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600049113
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/std/fmt/trait.Write.html\">https://doc.rust-lang.org/std/fmt/trait.Write.html</a></p>",
        "id": 209959719,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600049287
    },
    {
        "content": "<p>(maybe pulldown should use that too?)</p>",
        "id": 209959737,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600049347
    },
    {
        "content": "<p>Although it says:</p>\n<blockquote>\n<p>This trait should generally not be implemented by consumers of the standard library. The write! macro accepts an instance of io::Write, and the io::Write trait is favored over implementing this trait.</p>\n</blockquote>",
        "id": 209959744,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600049366
    },
    {
        "content": "<p>Cc <span class=\"user-group-mention\" data-user-group-id=\"2645\">@T-libs</span></p>",
        "id": 209959913,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600049661
    },
    {
        "content": "<p>Oops, didn't realize pinging in this context was bad etiquette. Sorry about that!</p>",
        "id": 209960771,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600051118
    },
    {
        "content": "<p>I’m not sure why that comment is there. I’ve used <code>fmt::Write</code> for general-purpose Unicode-based streams.</p>",
        "id": 209967449,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1600063056
    },
    {
        "content": "<p>Writing to a String using <code>write_str</code> is fastest, so there's absolutely no reason to shy away from fmt::Write if that is indeed what you're doing.</p>",
        "id": 209969796,
        "sender_full_name": "Jubilee",
        "timestamp": 1600066061
    },
    {
        "content": "<p>And if you must use a write_fmt method, then write_fmt for a String is preferable over write_fmt to a <code>Vec&lt;u8&gt;</code></p>",
        "id": 209969862,
        "sender_full_name": "Jubilee",
        "timestamp": 1600066119
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/rust/issues/76729\">#76729</a>.</p>",
        "id": 210084916,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600136939
    }
]