[
    {
        "content": "<p>I am trying to address a problem I discovered when implementing type inference for inline consts in <a href=\"https://github.com/rust-lang/rust/issues/89561\">#89561</a>: <a href=\"https://github.com/rust-lang/rust/blob/master/src/test/ui/inline-const/const-match-pat-lifetime-err.rs\">https://github.com/rust-lang/rust/blob/master/src/test/ui/inline-const/const-match-pat-lifetime-err.rs</a>, but struggles to find a way to get it to work.</p>\n<p>The issue is that pattern is evaluated during THIR-&gt;MIR lowering, so borrowck no longer has access to this inline const. For associated consts this info is kept in the form of AscribeUserType, but I am unsure if using AscribeUserType is the correct thing to do for inline const scenario, because the user didn't really ascribed the type of the inline const block.</p>",
        "id": 261678923,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637084857
    },
    {
        "content": "<p>I think the correct thing here is to handle this roughtly the same way as closures: propagate lifetime constraints from borrow checking the constant to the enclosing funciton.</p>",
        "id": 261684470,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1637087081
    },
    {
        "content": "<p>This is already done for inline const expressions.</p>",
        "id": 261685169,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637087351
    },
    {
        "content": "<p>Closures never exist in pattern position though, so this is a novel issue for inline const.</p>",
        "id": 261685305,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637087395
    },
    {
        "content": "<p>/me is thinking of splitting inline const pattern into its own feature gate.</p>",
        "id": 261685544,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637087481
    },
    {
        "content": "<p>(I think I posted this in #general by mistake, should be in #t-compiler)</p>",
        "id": 261687921,
        "sender_full_name": "Gary Guo",
        "timestamp": 1637088474
    }
]