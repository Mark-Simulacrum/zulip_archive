[
    {
        "content": "<p>Is there any documentation on how lang = \"start\" works? I'm working on an embedded library and would like for users to be able to make <code>fn main()</code>and have the _start implemented in the library</p>",
        "id": 275604902,
        "sender_full_name": "Brandon Falk",
        "timestamp": 1647489270
    },
    {
        "content": "<p>When using <code>#[lang = \"start\"]</code> the compiler will make a <code>main</code> function that calls the lang=starr function with the user main function as argument.</p>",
        "id": 275617867,
        "sender_full_name": "bjorn3",
        "timestamp": 1647504457
    },
    {
        "content": "<p>The generated function is always main and not _start.</p>",
        "id": 275617965,
        "sender_full_name": "bjorn3",
        "timestamp": 1647504517
    },
    {
        "content": "<p>Maybe a custom <code>#[entry]</code> proc macro attribute is more suitable for your purposes. This attribute could generate the <code>_start</code> function calling whatever initialization function your library has (if any) before running the user main.</p>",
        "id": 275618006,
        "sender_full_name": "bjorn3",
        "timestamp": 1647504567
    },
    {
        "content": "<p>There's also a proposal to stabilize <code>use somecrate::main</code>, with which you could define your main function in a crate and then let the user define a function called by main.</p>",
        "id": 275620219,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647506100
    },
    {
        "content": "<p>That won't generate an _start function. Normally this is provided by the crt1.o object.</p>",
        "id": 275634601,
        "sender_full_name": "bjorn3",
        "timestamp": 1647514519
    },
    {
        "content": "<p>yeah the ability to import a <code>main</code> instead of defining a main is basically ineffective for embedded needs. Most importantly, a rust ABI main fn (as all main fns are) is UB for the rt0 to call.</p>",
        "id": 275663385,
        "sender_full_name": "Lokathor",
        "timestamp": 1647528270
    }
]