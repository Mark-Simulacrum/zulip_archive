[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"271719\">@Mario Carneiro</span> case you hasn’t seen it yet: <a class=\"stream\" data-stream-id=\"186049\" href=\"/#narrow/stream/186049-t-compiler.2Fwg-polonius\">#t-compiler/wg-polonius</a></p>",
        "id": 217348451,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605831457
    },
    {
        "content": "<p>Context: <a href=\"https://stackoverflow.com/q/64902078/155423\">https://stackoverflow.com/q/64902078/155423</a></p>",
        "id": 217348517,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605831491
    },
    {
        "content": "<p>That is, hands down, the Zulip stream I watch with most interest.</p>",
        "id": 217348533,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605831531
    },
    {
        "content": "<p>It also really needs a reasonably smart and reasonably hard-working person to be able to spend a few months on it.</p>",
        "id": 217348563,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605831575
    },
    {
        "content": "<p>I had already guessed that the answer to the polonius part of my SO question was \"yes\" from niko's original blog post about it, but I haven't really heard much about it since. I get the sense that lots of rust internals are getting moved into logic programming / \"prolog\" to make them more robust, although that sounds kind of expensive</p>",
        "id": 217349378,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605832356
    },
    {
        "content": "<p>(I also have yet to get over the psychological hump of downloading and building rustc)</p>",
        "id": 217349539,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605832517
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"271719\">@Mario Carneiro</span> if you're just doing it once you can let x.py build run overnight, the slowest parts are not likely to fail unless you run out of memory</p>",
        "id": 217352743,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605836129
    },
    {
        "content": "<p>lol it's comments like that that make me terrified</p>",
        "id": 217352800,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605836165
    },
    {
        "content": "<p>It’s <em>fine</em> as long as you have a 32-core processor with liquid cooling.</p>",
        "id": 217353316,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605836846
    },
    {
        "content": "<p>But seriously, part of the point for things like polonius and chalk is that you don’t have to compile the entire compiler. They are intended to be very modular.</p>",
        "id": 217353374,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1605836903
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"271719\">@Mario Carneiro</span> I don't know if it will make you feel worse or better, but here are some hard numbers: <a href=\"https://gist.github.com/jyn514/5476c7b6122a3cb18825e1b883c18a33\">https://gist.github.com/jyn514/5476c7b6122a3cb18825e1b883c18a33</a></p>",
        "id": 217353477,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605837106
    },
    {
        "content": "<p>Setting aside the crazy cost of compilation itself, it also requires a bunch of unfamiliar stuff that is specific to rustc (e.g. x.py). I would be <em>really happy</em> if it were possible to build <code>rustc</code> (not bootstrapped) using only cargo</p>",
        "id": 217353682,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605837383
    },
    {
        "content": "<p>But from a cursory examination of polonius it does appear to be \"just a crate\"</p>",
        "id": 217353726,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605837441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/122651-general/topic/Polonius/near/217353682\">said</a>:</p>\n<blockquote>\n<p>Setting aside the crazy cost of compilation itself, it also requires a bunch of unfamiliar stuff that is specific to rustc (e.g. x.py). I would be <em>really happy</em> if it were possible to build <code>rustc</code> (not bootstrapped) using only cargo</p>\n</blockquote>\n<p>this is not really feasible :/<br>\n<a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20to.20create.20an.20executable.20accessing.20.60rustc_private.60.3F/near/216240430\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/How.20to.20create.20an.20executable.20accessing.20.60rustc_private.60.3F/near/216240430</a><br>\n<a href=\"https://www.reddit.com/r/rust/comments/irhj4o/blog_post_rust_in_2021/g4yvujq/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3\">https://www.reddit.com/r/rust/comments/irhj4o/blog_post_rust_in_2021/g4yvujq/?utm_source=reddit&amp;utm_medium=web2x&amp;context=3</a></p>",
        "id": 217355352,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605839582
    },
    {
        "content": "<p>but see also <a href=\"#narrow/stream/131828-t-compiler/topic/RIIR.20contributor.20entry.20point\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/RIIR.20contributor.20entry.20point</a></p>",
        "id": 217355386,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605839629
    },
    {
        "content": "<p>but yeah, in theory it should be possible for the compile times to be faster, someone just needs to figure out why they're slow and fix it. I don't think <code>cargo build</code> is possible even in theory though.</p>",
        "id": 217355436,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605839675
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"271719\">Mario Carneiro</span> <a href=\"#narrow/stream/122651-general/topic/Polonius/near/217353726\">said</a>:</p>\n<blockquote>\n<p>But from a cursory examination of polonius it does appear to be \"just a crate\"</p>\n</blockquote>\n<p>polonius and chalk are indeed \"just a crate\". There are a lot of advantages from that, but their purpose is to be integrated into rustc: any modification required upstream or downstream from them will require building rustc, so will some parts of testing and validation (the rustc test suite is of course way more complete than the crates do or can provide). It's much less often than working on rustc itself, and it can be different depending on the type of work and each contributor, but it's not zero.</p>",
        "id": 217367168,
        "sender_full_name": "lqd",
        "timestamp": 1605854624
    },
    {
        "content": "<p>If I means anything, I have a fairly beefy i7 quad-core macbook with 32gb of ram (i think this ram is excessive, but the biggest cpu you can get helps) I do all my personal projects on, and I find that every once in a while when I rebase my pr's I have do something else while llvm builds, but after that, any testing I do (i dont ever need to go past stage 1), while isnt FAST per-se (compiling std seems to be the biggest part), its bearable</p>",
        "id": 217423600,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1605889529
    }
]