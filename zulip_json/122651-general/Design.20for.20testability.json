[
    {
        "content": "<p>How should we structure Rust code to make it easy to test?<br>\nI wrote a survey of everything I could find on the topic.<br>\nPlease tell me what I missed.<br>\n<a href=\"https://alastairreid.github.io/rust-testability/\">https://alastairreid.github.io/rust-testability/</a></p>",
        "id": 215223020,
        "sender_full_name": "Alastair Reid",
        "timestamp": 1604198494
    },
    {
        "content": "<p>If I may plug my own crate...<br>\n<a href=\"http://github.com/Mcat12/shaku\">Shaku</a> would fit in your section on dependency injection. It's a compile-time dependency injection library, designed to have an ergonomic API.</p>",
        "id": 215223143,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1604198713
    },
    {
        "content": "<p>It works well when combined with a mocking library like <code>mockall</code></p>",
        "id": 215223194,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1604198796
    },
    {
        "content": "<p><a href=\"https://github.com/dtolnay/trybuild\"><code>trybuild</code></a> is another great library by dtolnay for testing compile time error messages, such as from proc macros.</p>",
        "id": 215223265,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1604198924
    }
]