[
    {
        "content": "<p>Let's say I have two modules both have Event. What is better to add module prefix to them or consider each module separate and in places where both are needed to use module::Event?</p>",
        "id": 262055297,
        "sender_full_name": "moonwind",
        "timestamp": 1637321579
    },
    {
        "content": "<p>The module prefix would be redundant and in that case the latter is usually preferred. See <code>std::error::Error</code> and <code>std::io::Error</code> for example. You can always alias them during import if the path would be a mouthful.</p>\n<p>If you have some other more specific name that's not already part of the module name then you can also use that.</p>",
        "id": 262055710,
        "sender_full_name": "The 8472",
        "timestamp": 1637321887
    },
    {
        "content": "<p>Well actually those two errors are nearly the only example compared to all the errors that name what kind of error they are in the type name. Also one of those is a trait.</p>\n<p>If you've got two types of event in a crate, usually you should name them something more descriptive than \"event\" and not try to let the modules do any of the heavy lifting.</p>",
        "id": 262137931,
        "sender_full_name": "Lokathor",
        "timestamp": 1637360126
    }
]