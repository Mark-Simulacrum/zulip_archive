[
    {
        "content": "<p><a href=\"https://stackoverflow.com/q/58416511/155423\" target=\"_blank\" title=\"https://stackoverflow.com/q/58416511/155423\">Casting a function reference producing an invalid pointer?</a></p>",
        "id": 178300612,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1571240007
    },
    {
        "content": "<blockquote>\n<p>Ran on stable 1.38.0 this prints the function pointer, but beta (1.39.0-beta.6) and nightly return '1'. </p>\n</blockquote>\n<p>Is this a bug / regression? Is it related to const eval stuff at all?</p>\n<p>/cc <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 178300677,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1571240043
    },
    {
        "content": "<p>The MIR doesn't appear to have changed. Perhaps it's related the the recent-ish LLVM upgrade?</p>",
        "id": 178302079,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571240973
    },
    {
        "content": "<p>Looking at the MIR, the type of <code>ptr</code> is unchanged; for both <code>stable</code> and <code>beta</code> it is:</p>\n<div class=\"codehilite\"><pre><span></span>    let _1: *const unsafe fn() {foo};    // &quot;ptr&quot; in scope 0 at src/main.rs:6:9: 6:12\n</pre></div>",
        "id": 178302399,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1571241189
    },
    {
        "content": "<p>that code is weird though. <code>&amp;foo</code> is not a fn ptr but a ref-to-fn-ptr...</p>",
        "id": 178309490,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246416
    },
    {
        "content": "<p>probably <code>&amp;foo</code> now infers to a ref-to-the-unnamble-ZST-representing-<code>foo</code></p>",
        "id": 178309560,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246485
    },
    {
        "content": "<p>which would explain the <code>1</code></p>",
        "id": 178309568,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246489
    },
    {
        "content": "<p>you see, for every function in Rust there exists a correpsonding type. that type has no run-time information so its size is 0.</p>",
        "id": 178309600,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246513
    },
    {
        "content": "<p>the expression <code>foo</code> has that type</p>",
        "id": 178309615,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246519
    },
    {
        "content": "<p>but that unnamable ZST coerces to <code>fn()</code> which is what happens when people create fn ptrs</p>",
        "id": 178309673,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246540
    },
    {
        "content": "<p>but here maybe the coercion doesnt trigger anymore for... reasons. so now instead of a reference to a fn ptr, you now get a reference to the ZST. and because there's no memory backing them, <code>&amp;ZST</code> just become <code>1</code> in some cases.</p>",
        "id": 178309742,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246608
    },
    {
        "content": "<p>evidence that even on stable this does <em>not</em> print <code>foo</code>'s address:<br>\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ba08d2b12d4caf4f95b876797907b6d\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ba08d2b12d4caf4f95b876797907b6d\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ba08d2b12d4caf4f95b876797907b6d</a></p>",
        "id": 178309843,
        "sender_full_name": "RalfJ",
        "timestamp": 1571246690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> yeah, should have said I know all that part <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 178338063,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1571270170
    },
    {
        "content": "<p>The change / “... reasons” is the thing I’m worried about.</p>",
        "id": 178338079,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1571270190
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 178338121,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1571270252
    }
]