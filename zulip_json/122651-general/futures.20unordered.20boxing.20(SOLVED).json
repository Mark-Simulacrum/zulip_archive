[
    {
        "content": "<p>hello, i'm new to rust. Have trouble figuring out how to deal with futures properly. The following example doesn't compile. I've tried Boxing (and Pin&lt;Box&lt;&gt;&gt;, and lots of stuff), but fail miserably for two days already. Reading up all info on futures didn't enlighten me at all. The actual problem requires .map()'ing the future and it becomes even more complicated, but i can't even figure out this simple example. Please help :)</p>\n<div class=\"codehilite\"><pre><span></span><code>// [dependencies]\n// futures = &quot;*&quot;\n// tokio = { version = &quot;*&quot;, features = [&quot;full&quot;] }\n// reqwest = { version = &quot;*&quot;, features = [&quot;stream&quot;, &quot;gzip&quot;] }\n\nuse futures::stream::FuturesUnordered;\nuse futures::{Future, StreamExt};\nuse reqwest::{Result, Response, Client};\n\nfn foo(client: &amp;Client) -&gt; impl Future&lt;Output=Result&lt;Response&gt;&gt; {\n    client.get(&quot;https://google.com&quot;).send()\n}\n\nfn bar(client: &amp;Client) -&gt; impl Future&lt;Output=Result&lt;Response&gt;&gt; {\n    client.get(&quot;https://yahoo.com&quot;).send()\n}\n\n#[tokio::main]\nasync fn main() {\n    let mut unordered = FuturesUnordered::new();\n\n    let client = reqwest::Client::new();\n\n    unordered.push(foo(&amp;client));\n    unordered.push(bar(&amp;client));\n\n    loop {\n        tokio::select! {\n            Some(n) = unordered.next(), if ! unordered.is_empty() =&gt; {\n                println!(&quot;got {:?}&quot;, n);\n            },\n            else =&gt; {\n                break;\n            },\n        }\n    }\n}\n</code></pre></div>",
        "id": 210344540,
        "sender_full_name": "max",
        "timestamp": 1600313205
    },
    {
        "content": "<p>SOLVED. apparently manually doing <code>Pin&lt;Box&lt;&gt;&gt;</code> is not the same as <code>.boxed()</code>, because the latter worked as intended.</p>",
        "id": 210350611,
        "sender_full_name": "max",
        "timestamp": 1600321983
    }
]