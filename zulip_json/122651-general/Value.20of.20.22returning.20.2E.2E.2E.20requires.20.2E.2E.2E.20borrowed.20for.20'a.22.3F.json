[
    {
        "content": "<p>Another question raised during training...</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Thing</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">a</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">b</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Thing</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_mut_a</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_mut_b</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_both</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">get_mut_a</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">get_mut_b</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/lib.rs:15:17\n   |\n13 |     fn get_both&lt;&#39;a&gt;(&amp;&#39;a mut self) -&gt; (&amp;&#39;a mut i32, &amp;&#39;a mut i32) {\n   |                 -- lifetime `&#39;a` defined here\n14 |         let a = self.get_mut_a();\n   |                 ---- first mutable borrow occurs here\n15 |         let b = self.get_mut_b();\n   |                 ^^^^ second mutable borrow occurs here\n16 |         (a, b)\n   |         ------ returning this value requires that `*self` is borrowed for `&#39;a`\n</code></pre></div>",
        "id": 227471933,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1614102152
    },
    {
        "content": "<p>What is the value of this part of the error text:</p>\n<blockquote>\n<p>returning this value requires that <code>*self</code> is borrowed for <code>'a</code></p>\n</blockquote>\n<p>In similar cases, such as <code>(a, b); todo!()</code>, the error is simpler and doesn't mention <code>'a</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>16 |         (a, b);\n   |          - first borrow later used here\n</code></pre></div>",
        "id": 227471974,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1614102169
    },
    {
        "content": "<p>It indicates lifetime requirements that are different from just using the value at that point</p>",
        "id": 227472213,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614102247
    },
    {
        "content": "<p>but yeah, those aren't really relevant for that specific conflict</p>",
        "id": 227472297,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614102284
    },
    {
        "content": "<p>Do you think it would be worth filing an issue for this case? I know that these types of errors can be touchy to get right.</p>",
        "id": 227479765,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1614105006
    },
    {
        "content": "<p>I don't think it would hurt</p>",
        "id": 227481939,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614105738
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/82479\">https://github.com/rust-lang/rust/issues/82479</a></p>",
        "id": 227608986,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1614178037
    }
]