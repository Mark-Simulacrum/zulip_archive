[
    {
        "content": "<p>My problem is same as <a href=\"https://www.reddit.com/r/rust/comments/8i02gw/refmut_and_normal_mut_borrow_polymorphism/\">this</a>, I have a RefCell&lt;T&gt; and want get a &amp;mut T.</p>",
        "id": 238556971,
        "sender_full_name": "will hunt",
        "timestamp": 1620860641
    },
    {
        "content": "<p>Your problem is under specified. Based on what you have literally said, <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.get_mut\">https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.get_mut</a> would solve your problem. I can almost guarantee that it’s not what you want (because of the under specification)</p>",
        "id": 238557276,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620860850
    },
    {
        "content": "<p>The Discord is a better place for introductory questions like this as more people will be around to help you.</p>",
        "id": 238557379,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620860897
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/q/45674479/155423\">https://stackoverflow.com/q/45674479/155423</a></p>",
        "id": 238557458,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620860940
    },
    {
        "content": "<p>And <a href=\"https://stackoverflow.com/q/29401626/155423\">https://stackoverflow.com/q/29401626/155423</a></p>",
        "id": 238558140,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620861465
    },
    {
        "content": "<p>Your title says RefMut and your prose says refcell</p>",
        "id": 238558248,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620861533
    },
    {
        "content": "<p>Also <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.borrow_mut\">https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.borrow_mut</a></p>",
        "id": 238558298,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1620861593
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20get.20mut.20borrow.20from.20RefMut/near/238557276\">said</a>:</p>\n<blockquote>\n<p>Your problem is under specified. Based on what you have literally said, <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.get_mut\">https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.get_mut</a> would solve your problem. I can almost guarantee that it’s not what you want (because of the under specification)</p>\n</blockquote>\n<p>sorry about that, I created a new <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c3a8bc7d7208e1e28f0198ab44ae1ef3\">playground</a>, I want to implement <code>Defef</code> and <code>DerefMut</code> for <code>FooRef</code>.</p>",
        "id": 238563004,
        "sender_full_name": "will hunt",
        "timestamp": 1620864783
    },
    {
        "content": "<p>You can't implement <code>Deref</code> and <code>DerefMut</code> for <code>FooRef</code> as <code>RefCell</code> needs a guard (<code>Ref</code> or <code>RefMut</code>) to be alive for the duration of the borrow to ensure that the borrow flag inside the <code>RefCell</code> is properly updated. Neither <code>Deref</code> nor <code>DerefMut</code> allows returning this guard.</p>",
        "id": 238591654,
        "sender_full_name": "bjorn3",
        "timestamp": 1620891867
    }
]