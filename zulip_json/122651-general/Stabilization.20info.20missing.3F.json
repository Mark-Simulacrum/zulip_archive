[
    {
        "content": "<p>Some of the methods on primitive types, like <a href=\"https://doc.rust-lang.org/std/primitive.i64.html#method.from_str_radix\">https://doc.rust-lang.org/std/primitive.i64.html#method.from_str_radix</a>, don't say since when they are stable. That's a bug, right?</p>",
        "id": 275100664,
        "sender_full_name": "RalfJ",
        "timestamp": 1647096709
    },
    {
        "content": "<p>Isn't that typically the case for things stable in 1.0 (or methods stable in the same version the type/trait is). Was <code>from_str_radix</code> 1.0?</p>",
        "id": 275101756,
        "sender_full_name": "Connor Horman",
        "timestamp": 1647098075
    },
    {
        "content": "<p>Hmmm, apparently not: <a href=\"https://doc.rust-lang.org/core/mem/union.MaybeUninit.html#method.new\">https://doc.rust-lang.org/core/mem/union.MaybeUninit.html#method.new</a> was 1.36 as was MaybeUninit itself.<br>\nAnd <a href=\"https://doc.rust-lang.org/std/primitive.i64.html\">https://doc.rust-lang.org/std/primitive.i64.html</a> itself lists 1.0 as it's version.</p>",
        "id": 275101800,
        "sender_full_name": "Connor Horman",
        "timestamp": 1647098144
    },
    {
        "content": "<p>I thought I saw that in a few places.</p>",
        "id": 275101861,
        "sender_full_name": "Connor Horman",
        "timestamp": 1647098198
    },
    {
        "content": "<p>Definitely a bug. cc <span class=\"user-group-mention\" data-user-group-id=\"3925\">@T-rustdoc</span></p>",
        "id": 275102550,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1647099096
    },
    {
        "content": "<p>I think this is correct (though we've discussed changing rustdoc to always show the versions).</p>",
        "id": 275109372,
        "sender_full_name": "Noah Lev",
        "timestamp": 1647108390
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"257758\">Connor Horman</span> <a href=\"#narrow/stream/122651-general/topic/Stabilization.20info.20missing.3F/near/275101800\">said</a>:</p>\n<blockquote>\n<p>Hmmm, apparently not: <a href=\"https://doc.rust-lang.org/core/mem/union.MaybeUninit.html#method.new\">https://doc.rust-lang.org/core/mem/union.MaybeUninit.html#method.new</a> was 1.36 as was MaybeUninit itself.<br>\nAnd <a href=\"https://doc.rust-lang.org/std/primitive.i64.html\">https://doc.rust-lang.org/std/primitive.i64.html</a> itself lists 1.0 as it's version.</p>\n</blockquote>\n<p>In the case of MaybeUninit's methods, this may be due to them having const stability? (If so, that's something we should fix.)</p>",
        "id": 275109390,
        "sender_full_name": "Noah Lev",
        "timestamp": 1647108429
    },
    {
        "content": "<p>Yeah, I've once looked at that specific part in rustdoc, and perhaps rustdoc could be smarter by omitting the normal stability if it is the same as its parent. Here's what I mean:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Stable version same as parent</th>\n<th>Stable version different from parent</th>\n<th>Unstable</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>not const</td>\n<td>nothing</td>\n<td><code>1.2.0</code></td>\n<td>display unstable banner</td>\n</tr>\n<tr>\n<td>Const stable version same as parent</td>\n<td>nothing</td>\n<td><code>1.2.0</code></td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Const stable version different from parent</td>\n<td><code>const: 1.2.0</code></td>\n<td><code>1.2.0 (const: 1.3.0)</code> or <code>1.2.0</code></td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Const unstable or implied from <code>#[unstable]</code></td>\n<td><code>const: unstable</code></td>\n<td><code>1.2.0 (const: unstable)</code></td>\n<td>display unstable banner, and <code>const: unstable</code> if different tracking issue</td>\n</tr>\n</tbody>\n</table>\n<p>instead of the current way we display them</p>",
        "id": 275132562,
        "sender_full_name": "fee1-dead",
        "timestamp": 1647145516
    }
]