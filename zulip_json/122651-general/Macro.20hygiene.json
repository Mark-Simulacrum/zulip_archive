[
    {
        "content": "<p>Sup,</p>\n<p>Can anybody tell me if the following snippet is correct?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=3f08913c5b0a25497722ca9f88005961</span>\n\n<span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">fun</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"cp\">$fun</span>:<span class=\"nc\">ident</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"cp\">$($arg</span>:<span class=\"nc\">ident</span>: <span class=\"cp\">$arg_ty</span>:<span class=\"nc\">ty</span><span class=\"p\">),</span><span class=\"o\">*|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"cp\">$ex</span>:<span class=\"nc\">expr</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"cp\">$fun</span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"cp\">$($arg</span>: <span class=\"cp\">$arg_ty</span><span class=\"p\">),</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ex</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$ex</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fun</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">some_fun</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">a</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"kt\">i32</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"p\">}));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">some_fun</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>In my limited option, <code>a + b</code> should not be aware of <code>a: i32, b: i32</code> since they separated units (macro hygiene?) but everything is working somehow <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 265481613,
        "sender_full_name": "Caio",
        "timestamp": 1639922590
    },
    {
        "content": "<p>When you use a metavariable, it keeps the original hygiene</p>",
        "id": 265481671,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639922674
    },
    {
        "content": "<p>So, it's as if you had written <code>a: i32, b: i32</code> and <code>a + b</code> outside the macro call</p>",
        "id": 265481700,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1639922734
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/122651-general/topic/Macro.20hygiene/near/265481700\">said</a>:</p>\n<blockquote>\n<p>So, it's as if you had written <code>a: i32, b: i32</code> and <code>a + b</code> outside the macro call</p>\n</blockquote>\n<p>Oh, I see... It makes sense now :)<br>\nThanks <span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> !</p>",
        "id": 265481800,
        "sender_full_name": "Caio",
        "timestamp": 1639922844
    }
]