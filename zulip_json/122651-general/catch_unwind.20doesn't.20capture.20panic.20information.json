[
    {
        "content": "<p>So I have some code like this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">catch_result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">panic</span>::<span class=\"n\">catch_unwind</span><span class=\"p\">(</span><span class=\"n\">curses_main</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">cause</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">catch_result</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{:?}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cause</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n\n<span class=\"k\">fn</span> <span class=\"nf\">curses_main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">win</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Curses</span>::<span class=\"n\">init</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">panic</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;test panic&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>And when it prints, I just see \"Any\", I don't see the actual info of the panic message or the line that had the panic or anything else.</p>\n<p>Here's the problem: when the terminal is in curses mode, all use of stderr / stdout is suppressed, so I <em>need</em> the panic info to survive until after curses mode is shut down and the terminal goes back to shell mode. Otherwise you don't get any panic info at all.</p>",
        "id": 209242677,
        "sender_full_name": "Lokathor",
        "timestamp": 1599428188
    },
    {
        "content": "<p>The <code>Any</code> _is_ the panic info, you need to downcast it.</p>",
        "id": 209244154,
        "sender_full_name": "nagisa",
        "timestamp": 1599430845
    },
    {
        "content": "<p>or more specifically its the arguments supplied to the <code>panic!</code> call, potentially formatted.</p>",
        "id": 209244160,
        "sender_full_name": "nagisa",
        "timestamp": 1599430868
    },
    {
        "content": "<p>So it could be a <code>String</code>, but it could also be an <code>i32</code> for e.g. <code>panic!(42)</code>.</p>",
        "id": 209244166,
        "sender_full_name": "nagisa",
        "timestamp": 1599430901
    },
    {
        "content": "<p>So... without knowing what type went into the panic, i'm possibly stuck? I guess it's time for a custom panic hook.</p>",
        "id": 209244447,
        "sender_full_name": "Lokathor",
        "timestamp": 1599431388
    },
    {
        "content": "<p>Custom panic hook doesnâ€™t really give you anything more than the <code>Any</code>, just a location I guess.</p>",
        "id": 209244749,
        "sender_full_name": "nagisa",
        "timestamp": 1599431900
    },
    {
        "content": "<p>(the <code>message</code> being unstable)</p>",
        "id": 209244817,
        "sender_full_name": "nagisa",
        "timestamp": 1599432035
    },
    {
        "content": "<p>In most cases downcasting as string <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f6611103aec5a0fc54377bf2385071cf\">would likely serve you well</a></p>",
        "id": 209244834,
        "sender_full_name": "nagisa",
        "timestamp": 1599432095
    },
    {
        "content": "<p>custom panic hook lets me manually turn off curses before printing the <del>message</del> PanicInfo.</p>",
        "id": 209244957,
        "sender_full_name": "Lokathor",
        "timestamp": 1599432264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> FWIW std doesn't do anything different - it also just casts to string and str and then gives up</p>",
        "id": 209245840,
        "sender_full_name": "simulacrum",
        "timestamp": 1599433836
    },
    {
        "content": "<p>Does the cause have the panic info bundled with it? or is it just the value? Because without the panic info there's a lot less value.</p>",
        "id": 209245855,
        "sender_full_name": "Lokathor",
        "timestamp": 1599433889
    },
    {
        "content": "<p>You mean the return value of catch_unwind? Just the value</p>",
        "id": 209245906,
        "sender_full_name": "simulacrum",
        "timestamp": 1599433971
    },
    {
        "content": "<p>ah, yeah, gotta get that info too. custom hook for sure</p>",
        "id": 209245972,
        "sender_full_name": "Lokathor",
        "timestamp": 1599434078
    }
]