[
    {
        "content": "<p>Hey, is there any way to get this to work? I want <code>Baz</code> to be implemented for everything that implements <code>Bar</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Bar</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">Foo</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Baz</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// Errors</span>\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">B</span>: <span class=\"nc\">Bar</span><span class=\"o\">&lt;</span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span>: <span class=\"nc\">Foo</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Baz</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=245f7547115de96f2f0e6ab21b0e5c7a\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=245f7547115de96f2f0e6ab21b0e5c7a</a></p>",
        "id": 225712058,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612886631
    },
    {
        "content": "<p>I think you have to make <code>T</code> an associated type of Bar or Baz</p>",
        "id": 225712619,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612886840
    },
    {
        "content": "<p>this works:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Bar</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">T</span>: <span class=\"nc\">Foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Baz</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">B</span>: <span class=\"nc\">Bar</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Baz</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 225712891,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612886938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Thanks, I did realise I could do that, though I didn't implement it as a <code>type</code>, I just went with <code>trait Baz&lt;T: Foo&gt; {}</code> is there any difference/advantage to choosing one over the other?</p>",
        "id": 225713256,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1612887091
    },
    {
        "content": "<p>Associated types mean you can only implement it for one generic type, like <code>Iterator::Item</code>. Making it generic in the trait means you can have multiple impls, like in <code>From</code></p>",
        "id": 225713390,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612887139
    },
    {
        "content": "<p>See, for example, the difference between <code>Deref&lt;Target = T&gt;</code> and <code>AsRef&lt;T&gt;</code>.</p>",
        "id": 225730567,
        "sender_full_name": "scottmcm",
        "timestamp": 1612893585
    }
]