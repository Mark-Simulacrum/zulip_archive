[
    {
        "content": "<p>Please correct me if my understanding is wrong. If a external crate found in a crate that going to be compiled, cargo will trigger rustc to generate metadata for this crate. At this time, all MIRs is also been serialized into this .rmeta file in order to be load by “local crate” through creader.</p>\n<p>Is all MIR Body’s SourceScopeData also been serialized? If yes, could someone enlighten me the related code?</p>",
        "id": 228036638,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614405803
    },
    {
        "content": "<p>The encoding traits are usually derived: <code>#[derive(Encodable)]</code>, <code>#[derive(TyEncodable)]</code>. A source scope data will be encoded as well, except for <code>ClearCrossCrate</code> types inside.</p>\n<p>The entry point for encoding MIR would be <code>encode_mir</code> method in <code>compiler/rustc_metadata/src/rmeta/encoder.rs</code>. The <code>-Zalways-encode-mir</code>, might be required to encode some of MIR as by default only a MIR necessary for const eval or code generation is encoded.</p>",
        "id": 228048207,
        "sender_full_name": "tm",
        "timestamp": 1614420636
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"352985\">@tm</span></p>",
        "id": 228096610,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614476629
    },
    {
        "content": "<p>For experiment, I tried to add a property(with RustcEncodable, RustcDecodable derive) in SourceScopeData, however, compiler will report error like</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;DefId::expect_local: `DefId(2:8002 ~ core[13dc]::str[0]::{{impl}}[33]::as_bytes[0])` isn&#39;t local&#39;, /home/xsh/code/rust-compiler/src/libstd/macros.rs:16:9\nstack backtrace:\n   0: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n   1: core::fmt::write\n   2: std::io::Write::write_fmt\n   3: std::panicking::default_hook::{{closure}}\n   4: std::panicking::default_hook\n   5: rustc_driver::report_ice\n   6: std::panicking::rust_panic_with_hook\n   7: rust_begin_unwind\n   8: std::panicking::begin_panic_fmt\n   9: rustc_span::def_id::DefId::expect_local::{{closure}}\n  10: &lt;rustc_hir::hir_id::HirId as rustc_serialize::serialize::Decodable&gt;::decode\n  11: &lt;rustc_middle::mir::SourceScopeData as rustc_serialize::serialize::Decodable&gt;::decode\n  12: rustc_serialize::serialize::Decoder::read_seq\n  13: &lt;rustc_middle::mir::Body as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}\n  14: rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::get_optimized_mir\n  15: rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir\n</code></pre></div>\n<p>I suppose I messed up the binary serialized SourceScopeData. Where can I fix this issue? Some SpecializedEncoder impl maybe?</p>",
        "id": 228096766,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614476832
    },
    {
        "content": "<p>I don't think you can serialize HirIds cross crate</p>",
        "id": 228097596,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614477933
    },
    {
        "content": "<p>I added a safety, and keep other things untouched..I have no idea why it tried to decode HirID...</p>\n<div class=\"codehilite\"><pre><span></span><code>#[derive(Clone, Debug, RustcEncodable, RustcDecodable, HashStable)]\npub struct SourceScopeData {\n    pub span: Span,\n    pub parent_scope: Option&lt;SourceScope&gt;,\n    pub safety: Safety, // &lt;---------------This is I added\n    /// Crate-local information for this source scope, that can&#39;t (and\n    /// needn&#39;t) be tracked across crates.\n    pub local_data: ClearCrossCrate&lt;SourceScopeLocalData&gt;,\n}\n</code></pre></div>",
        "id": 228097705,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614478058
    },
    {
        "content": "<p>Maybe is because of order? that position should be local_data-&gt;hirId, but now changed to the safety? Correct me if I am wrong...nvm I remembered these is a specialized encoder for ClearCrossCrate</p>",
        "id": 228097799,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614478193
    },
    {
        "content": "<p>It's hard to tell with the back trace you posted, it's missing debug symbols so it skips frames</p>",
        "id": 228097991,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614478385
    },
    {
        "content": "<p>Try setting debug = true in config.toml</p>",
        "id": 228098015,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614478400
    },
    {
        "content": "<p>Sure, working on that</p>",
        "id": 228098019,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614478412
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#0 [optimized_mir] optimizing MIR for `rustc_std_workspace_core::mem::zeroed`\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\nend of query stack\nthread &#39;rustc&#39; panicked at &#39;DefId::expect_local: `DefId(1:6664 ~ core[bafc]::slice[0]::{{impl}}[0]::iter[0])` isn&#39;t local&#39;, /home/xsh/code/rust-compiler/src/libstd/macros.rs:16:9\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /home/xsh/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\n   1: backtrace::backtrace::trace_unsynchronized\n             at /home/xsh/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print_fmt\n             at src/libstd/sys_common/backtrace.rs:78\n   3: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n             at src/libstd/sys_common/backtrace.rs:59\n   4: core::fmt::write\n             at src/libcore/fmt/mod.rs:1076\n   5: std::io::Write::write_fmt\n             at src/libstd/io/mod.rs:1537\n   6: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:62\n   7: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:49\n   8: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:198\n   9: std::panicking::default_hook\n             at src/libstd/panicking.rs:217\n  10: &lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::Fn&lt;A&gt;&gt;::call\n             at ./src/liballoc/boxed.rs:1095\n  11: rustc_driver::report_ice\n             at src/librustc_driver/lib.rs:1161\n  12: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:530\n  13: rust_begin_unwind\n             at src/libstd/panicking.rs:437\n  14: std::panicking::begin_panic_fmt\n             at src/libstd/panicking.rs:391\n  15: rustc_span::def_id::DefId::expect_local::{{closure}}\n             at ./src/libstd/macros.rs:16\n  16: core::option::Option&lt;T&gt;::unwrap_or_else\n             at ./src/libcore/option.rs:425\n  17: rustc_span::def_id::DefId::expect_local\n             at ./src/librustc_span/def_id.rs:163\n  18: &lt;rustc_metadata::rmeta::decoder::DecodeContext as rustc_serialize::serialize::SpecializedDecoder&lt;rustc_span::def_id::LocalDefId&gt;&gt;::specialized_decode\n             at src/librustc_metadata/rmeta/decoder.rs:388\n  19: &lt;T as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_serialize/serialize.rs:982\n  20: core::ops::function::FnOnce::call_once\n             at ./src/libcore/ops/function.rs:233\n  21: rustc_serialize::serialize::Decoder::read_struct_field\n             at ./src/librustc_serialize/serialize.rs:292\n  22: &lt;rustc_hir::hir_id::HirId as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}\n             at ./src/librustc_hir/hir_id.rs:16\n  23: rustc_serialize::serialize::Decoder::read_struct\n             at ./src/librustc_serialize/serialize.rs:279\n  24: &lt;rustc_hir::hir_id::HirId as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_hir/hir_id.rs:14\n  25: core::ops::function::FnOnce::call_once\n             at ./src/libcore/ops/function.rs:233\n  26: rustc_serialize::serialize::Decoder::read_enum_variant_arg\n             at ./src/librustc_serialize/serialize.rs:252\n  27: &lt;rustc_middle::mir::Safety as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}::{{closure}}\n             at ./src/librustc_middle/mir/mod.rs:424\n  28: rustc_serialize::serialize::Decoder::read_enum_variant\n             at ./src/librustc_serialize/serialize.rs:244\n  29: &lt;rustc_middle::mir::Safety as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}\n             at ./src/librustc_middle/mir/mod.rs:416\n  30: rustc_serialize::serialize::Decoder::read_enum\n             at ./src/librustc_serialize/serialize.rs:235\n  31: &lt;rustc_middle::mir::Safety as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_middle/mir/mod.rs:416\n  32: core::ops::function::FnOnce::call_once\n             at ./src/libcore/ops/function.rs:233\n  33: rustc_serialize::serialize::Decoder::read_struct_field\n             at ./src/librustc_serialize/serialize.rs:292\n  34: &lt;rustc_middle::mir::SourceScopeData as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}\n             at ./src/librustc_middle/mir/mod.rs:1742\n  35: rustc_serialize::serialize::Decoder::read_struct\n             at ./src/librustc_serialize/serialize.rs:279\n  36: &lt;rustc_middle::mir::SourceScopeData as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_middle/mir/mod.rs:1735\n  37: &lt;alloc::vec::Vec&lt;T&gt; as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}::{{closure}}\n             at ./src/librustc_serialize/serialize.rs:684\n  38: rustc_serialize::serialize::Decoder::read_seq_elt\n             at ./src/librustc_serialize/serialize.rs:352\n  39: &lt;alloc::vec::Vec&lt;T&gt; as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}\n             at ./src/librustc_serialize/serialize.rs:684\n  40: rustc_serialize::serialize::Decoder::read_seq\n             at ./src/librustc_serialize/serialize.rs:344\n  41: &lt;alloc::vec::Vec&lt;T&gt; as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_serialize/serialize.rs:681\n  42: &lt;rustc_index::vec::IndexVec&lt;I,T&gt; as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_index/vec.rs:494\n  43: core::ops::function::FnOnce::call_once\n             at ./src/libcore/ops/function.rs:233\n  44: rustc_serialize::serialize::Decoder::read_struct_field\n             at ./src/librustc_serialize/serialize.rs:292\n  45: &lt;rustc_middle::mir::Body as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}\n             at ./src/librustc_middle/mir/mod.rs:109\n  46: rustc_serialize::serialize::Decoder::read_struct\n             at ./src/librustc_serialize/serialize.rs:279\n  47: &lt;rustc_middle::mir::Body as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_middle/mir/mod.rs:94\n  48: rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::rmeta::Lazy&lt;T,()&gt;&gt;::decode\n             at src/librustc_metadata/rmeta/decoder.rs:225\n  49: rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::get_optimized_mir\n             at src/librustc_metadata/rmeta/decoder.rs:1124\n  50: rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir\n             at src/librustc_metadata/rmeta/decoder/cstore_impl.rs:114\n  51: rustc_middle::ty::query::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_middle::ty::context::TyCtxt&gt; for rustc_middle::ty::query::queries::optimized_mir&gt;::compute\n             at src/librustc_middle/ty/query/plumbing.rs:381\n  52: rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task_impl\n             at ./src/librustc_query_system/dep_graph/graph.rs:303\n  53: rustc_query_system::query::plumbing::force_query_with_job::{{closure}}::{{closure}}\n             at ./src/librustc_query_system/dep_graph/graph.rs:0\n  54: rustc_middle::ty::query::plumbing::&lt;impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt&gt;::start_query::{{closure}}::{{closure}}::{{closure}}\n             at src/librustc_middle/ty/query/plumbing.rs:72\n  55: stacker::maybe_grow\n             at /home/xsh/.cargo/registry/src/github.com-1ecc6299db9ec823/stacker-0.1.9/src/lib.rs:52\n  56: rustc_data_structures::stack::ensure_sufficient_stack\n             at ./src/librustc_data_structures/stack.rs:16\n  57: rustc_middle::ty::query::plumbing::&lt;impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt&gt;::start_query::{{closure}}::{{closure}}\n             at src/librustc_middle/ty/query/plumbing.rs:72\n  58: rustc_middle::ty::context::tls::enter_context::{{closure}}\n             at src/librustc_middle/ty/context.rs:1710\n  59: rustc_middle::ty::context::tls::set_tlv\n             at src/librustc_middle/ty/context.rs:1694\n  60: rustc_middle::ty::context::tls::enter_context\n             at src/librustc_middle/ty/context.rs:1710\n  61: rustc_middle::ty::query::plumbing::&lt;impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt&gt;::start_query::{{closure}}\n             at src/librustc_middle/ty/query/plumbing.rs:71\n  62: rustc_middle::ty::context::tls::with_related_context::{{closure}}\n             at src/librustc_middle/ty/context.rs:1798\n  63: rustc_middle::ty::context::tls::with_context::{{closure}}\n             at src/librustc_middle/ty/context.rs:1782\n  64: rustc_middle::ty::context::tls::with_context_opt\n             at src/librustc_middle/ty/context.rs:1771\n  65: rustc_middle::ty::context::tls::with_context\n             at src/librustc_middle/ty/context.rs:1782\n  66: rustc_middle::ty::context::tls::with_related_context\n             at src/librustc_middle/ty/context.rs:1795\n  67: rustc_middle::ty::query::plumbing::&lt;impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt&gt;::start_query\n             at src/librustc_middle/ty/query/plumbing.rs:60\n  68: rustc_query_system::query::plumbing::force_query_with_job::{{closure}}\n             at ./src/librustc_query_system/query/plumbing.rs:589\n  69: rustc_query_system::query::plumbing::with_diagnostics\n             at ./src/librustc_query_system/query/plumbing.rs:296\n  70: rustc_query_system::query::plumbing::force_query_with_job\n             at ./src/librustc_query_system/query/plumbing.rs:588\n  71: rustc_query_system::query::plumbing::try_execute_query\n             at ./src/librustc_query_system/query/plumbing.rs:415\n  72: rustc_query_system::query::plumbing::get_query_impl::{{closure}}\n             at ./src/librustc_query_system/query/plumbing.rs:639\n  73: &lt;rustc_query_system::query::caches::ArenaCache&lt;K,V&gt; as rustc_query_system::query::caches::QueryCache&gt;::lookup\n             at ./src/librustc_query_system/query/caches.rs:193\n  74: rustc_query_system::query::plumbing::try_get_cached\n             at ./src/librustc_query_system/qu\n</code></pre></div>",
        "id": 228098670,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614479172
    },
    {
        "content": "<p>BTW, the code base is git tag 1.46.0, for some third party libraries limitation I have to work on LLVM 10...which is just before the refactor of codegen part</p>",
        "id": 228098701,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614479226
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>  23: rustc_serialize::serialize::Decoder::read_struct\n             at ./src/librustc_serialize/serialize.rs:279\n  24: &lt;rustc_hir::hir_id::HirId as rustc_serialize::serialize::Decodable&gt;::decode\n             at ./src/librustc_hir/hir_id.rs:14                           &lt;---------- To here\n  25: core::ops::function::FnOnce::call_once\n             at ./src/libcore/ops/function.rs:233\n  26: rustc_serialize::serialize::Decoder::read_enum_variant_arg        &lt;---------- Why from here\n             at ./src/librustc_serialize/serialize.rs:252\n  27: &lt;rustc_middle::mir::Safety as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}::{{closure}}\n             at ./src/librustc_middle/mir/mod.rs:424                      &lt;------ trying to decode Safety\n  28: rustc_serialize::serialize::Decoder::read_enum_variant\n             at ./src/librustc_serialize/serialize.rs:244\n  29: &lt;rustc_middle::mir::Safety as rustc_serialize::serialize::Decodable&gt;::decode::{{closure}}\n             at ./src/librustc_middle/mir/mod.rs:416\n</code></pre></div>",
        "id": 228099001,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614479569
    },
    {
        "content": "<p>Oh I see, there is an ExplicitUnsafe(hir::HirId) in Safety</p>",
        "id": 228099493,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614480172
    },
    {
        "content": "<p>Is it because HirId doesn't have any usage in extern crate (since MIR has been serialized, not HIR), that's why any HirId related properties moved to ClearCrossCrate?</p>",
        "id": 228099566,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614480288
    },
    {
        "content": "<p>I'm not sure what you mean by \"any usage\" but HIR is never serialized cross-crate</p>",
        "id": 228104479,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614486779
    },
    {
        "content": "<p>Oh I mean a HIR ID from extern crate is not meaningful in local crate since no HIR serialized into rlib's metadata</p>",
        "id": 228106354,
        "sender_full_name": "Shihao Xia",
        "timestamp": 1614489215
    }
]