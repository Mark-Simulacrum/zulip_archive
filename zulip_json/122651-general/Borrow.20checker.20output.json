[
    {
        "content": "<p>So if I understand correctly borrow checker can be understood as an STM solver. Can I enable showing solution trace?</p>",
        "id": 260413283,
        "sender_full_name": "Mr Smeet",
        "timestamp": 1636123029
    },
    {
        "content": "<p>I often run into hazy errors. Like:<br>\n<a href=\"https://github.com/godcodehunter/rust-analyzer/tree/test-and-run-vs-integration\">https://github.com/godcodehunter/rust-analyzer/tree/test-and-run-vs-integration</a></p>\n<p>error: lifetime may not live long enough<br>\n   --&gt; crates/ide_db/src/runnables.rs:232:28<br>\n    |<br>\n231 |     fn syn_branches(path: &amp;RefCell&lt;MutalPath&lt;'_&gt;&gt;, dvg_point: &amp;DifferencePoint) {<br>\n    |                     ----  - let's call the lifetime of this reference '1<br>\n    |                     |<br>\n    |                     has type &amp;RefCell&lt;Vec&lt;Bijection&lt;'2&gt;&gt;&gt;<br>\n232 |         let mut borrowed = path.borrow_mut();<br>\n    |                            ^^^^^^^^^^^^^^^^^ argument requires that '1 must outlive '2</p>\n<p>error[E0597]: borrowed does not live long enough<br>\n   --&gt; crates/ide_db/src/runnables.rs:233:29<br>\n    |<br>\n231 |     fn syn_branches(path: &amp;RefCell&lt;MutalPath&lt;'_&gt;&gt;, dvg_point: &amp;DifferencePoint) {<br>\n    |                     ---- has type &amp;RefCell&lt;Vec&lt;Bijection&lt;'2&gt;&gt;&gt;<br>\n232 |         let mut borrowed = path.borrow_mut();<br>\n233 |         let mut last_sync = borrowed.iter_mut();<br>\n    |</p>",
        "id": 260413376,
        "sender_full_name": "Mr Smeet",
        "timestamp": 1636123066
    },
    {
        "content": "<p>I am simply reviewing equations seems to be an easier way to solve problems than trying to figure out what went wrong by the error messages</p>",
        "id": 260413492,
        "sender_full_name": "Mr Smeet",
        "timestamp": 1636123109
    },
    {
        "content": "<p>Does <code>-Znll-facts</code> generate what you want? <a href=\"https://rust-lang.github.io/polonius/generate_inputs.html\">https://rust-lang.github.io/polonius/generate_inputs.html</a></p>",
        "id": 260421470,
        "sender_full_name": "The 8472",
        "timestamp": 1636126566
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/122651-general/topic/Borrow.20checker.20output/near/260421470\">said</a>:</p>\n<blockquote>\n<p>Does <code>-Znll-facts</code> generate what you want? <a href=\"https://rust-lang.github.io/polonius/generate_inputs.html\">https://rust-lang.github.io/polonius/generate_inputs.html</a></p>\n</blockquote>\n<p>This is a good starting point. thanks</p>",
        "id": 260427298,
        "sender_full_name": "Mr Smeet",
        "timestamp": 1636129016
    }
]