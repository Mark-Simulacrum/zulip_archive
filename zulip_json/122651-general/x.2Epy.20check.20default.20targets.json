[
    {
        "content": "<p>./x.py check recently had a change that would make it check --all-targets by default. Is there a flag to only check the old \"default\" targets?<br>\nI'm asking because ./x.py clippy is also affected and checking the tests and so on can be quite noisy</p>",
        "id": 250405056,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1629749561
    },
    {
        "content": "<p>No, but it seems reasonable to add one</p>",
        "id": 250406058,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629750051
    },
    {
        "content": "<p>What do you mean by noisy?</p>",
        "id": 250406064,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629750056
    },
    {
        "content": "<p>If you are testing that your <code>.clone()</code>produces correct data for example, you don't want clippy to complain about redundant_clone or something like that :D</p>",
        "id": 250406458,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1629750273
    },
    {
        "content": "<p>Oh I see, I thought you meant <code>x.py check src/tools/clippy</code></p>",
        "id": 250417403,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629755797
    },
    {
        "content": "<p>Yes, I agree it should be opt-in for x.py clippy</p>",
        "id": 250417415,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629755806
    },
    {
        "content": "<p>Hm, it seems plausible that x.py clippy should have different behavior; to be honest it doesn't really enter my calculus when making decisions for x.py much. I don't use clippy myself so not sure what the strategy should be.</p>",
        "id": 250418404,
        "sender_full_name": "simulacrum",
        "timestamp": 1629756420
    },
    {
        "content": "<p>I opened <a href=\"https://github.com/rust-lang/rust/pull/88511\">https://github.com/rust-lang/rust/pull/88511</a></p>",
        "id": 251299531,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1630359692
    },
    {
        "content": "<p>not too happy about the solution but something like going into the std::process::Command, inspecting the args list and removing <code>--all-targets</code> from it if <code>builder.kind == Kind::Clippy</code> seemed somewhat difficult <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>",
        "id": 251299758,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1630359825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"217864\">matthiaskrgr</span> <a href=\"#narrow/stream/122651-general/topic/x.2Epy.20check.20default.20targets/near/251299758\">said</a>:</p>\n<blockquote>\n<p>not too happy about the solution but something like going into the std::process::Command, inspecting the args list and removing <code>--all-targets</code> from it if <code>builder.kind == Kind::Clippy</code> seemed somewhat difficult <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span></p>\n</blockquote>\n<p>nah, I think this is a better solution</p>",
        "id": 251300163,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630360070
    },
    {
        "content": "<p>and your other idea would prevent CARGOFLAGS=--all-targets</p>",
        "id": 251300226,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630360087
    },
    {
        "content": "<p>left a review</p>",
        "id": 251300241,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630360097
    }
]