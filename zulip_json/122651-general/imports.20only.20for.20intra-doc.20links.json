[
    {
        "content": "<p>I'm currently tempted to write this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[allow(unused_imports)]</span><span class=\"w\"> </span><span class=\"c1\">// only for intra-doc links</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">Item</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>...just so that I don't have to link intra-doc links to <code>crate::Item</code>. Is this a common thing to do or should I Just Not?</p>",
        "id": 240355734,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1622047982
    },
    {
        "content": "<p>Yeah libstd does that in a couple places too</p>",
        "id": 240357588,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622048751
    },
    {
        "content": "<p>Can you use a cfg to scope it?</p>",
        "id": 240363912,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1622051549
    },
    {
        "content": "<p>I personally use <code>#[cfg(doc)]</code> for that <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e834974737ad103edd9c9987a8a5ddb2\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e834974737ad103edd9c9987a8a5ddb2</a></p>",
        "id": 240365701,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1622052267
    },
    {
        "content": "<p>I tend to just type out the full path in the docs</p>",
        "id": 240365966,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1622052378
    },
    {
        "content": "<p>I often do that, but for an item to which my docs refer constantly and which may not be used in the module where that happens, I am guilty of having used <code>#[cfg(doc)]</code>-gated imports <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 240366243,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1622052487
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232018\">Daniel Henry-Mantilla</span> <a href=\"#narrow/stream/122651-general/topic/imports.20only.20for.20intra-doc.20links/near/240365701\">said</a>:</p>\n<blockquote>\n<p>I personally use <code>#[cfg(doc)]</code> for that <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e834974737ad103edd9c9987a8a5ddb2\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e834974737ad103edd9c9987a8a5ddb2</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"232018\">@Daniel Henry-Mantilla</span> that will break if the item is re-exported, cfg(doc) isn't set for dependencies</p>",
        "id": 240388697,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622061910
    },
    {
        "content": "<p>and it will fail silently because it comes from another crate</p>",
        "id": 240388728,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622061919
    },
    {
        "content": "<p>I was talking for current-crate intra-doc links; if an item is re-exported cross-crate then it won't trigger the <code>unused_imports</code> lint to begin with, so a simple non-gated <code>pub use</code> suffices. Otherwise I am clearly missing some third possible usage <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 240392638,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1622063670
    },
    {
        "content": "<p>There is a third way I know of:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// [Item](crate::Item) also creates a link with the text \"Item\", even when [crate::Item] is not imported.</span>\n</code></pre></div>",
        "id": 240425629,
        "sender_full_name": "Pointerbender",
        "timestamp": 1622097651
    },
    {
        "content": "<p>Sure, and within a given docstring, the path can even be factored out:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// [Item] also creates a link with the test \"Item\", and we can name it</span>\n<span class=\"sd\">/// several times [Item] [Item] [Item]</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// [Item]: crate::Item</span>\n</code></pre></div>\n<ul>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=dd429ab6f90febf9a023d045138114a0\">Playground</a></li>\n</ul>",
        "id": 240454150,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1622116225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232018\">@Daniel Henry-Mantilla</span> the third possible usage is a public item in that module with a private import. If the item links to the import, it will break when the item is re-exported across crates if you use cfg(doc).</p>",
        "id": 240456701,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1622117457
    }
]