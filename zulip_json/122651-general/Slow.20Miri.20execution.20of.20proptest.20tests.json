[
    {
        "content": "<p>Man... miri + proptest == slooooooow</p>",
        "id": 223793063,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611459000
    },
    {
        "content": "<p>I'm at 17+ minutes</p>",
        "id": 223793114,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611459031
    },
    {
        "content": "<p>For the one test.</p>",
        "id": 223793130,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611459080
    },
    {
        "content": "<p><del>30</del> <del>45</del> 55 minutes. Probably too long to run in CI... but now I sleep <span aria-label=\"sleepy\" class=\"emoji emoji-1f62a\" role=\"img\" title=\"sleepy\">:sleepy:</span></p>",
        "id": 223793587,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611459834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Where.E2.80.99s.20my.20undefined.20behavior.20when.20string.20interning.3F/near/223793063\">said</a>:</p>\n<blockquote>\n<p>Man... miri + proptest == slooooooow</p>\n</blockquote>\n<p>yeah^^ there's some env var you can set to make it use fewer testcases... I recommend doing that ;)</p>",
        "id": 223810745,
        "sender_full_name": "RalfJ",
        "timestamp": 1611489836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> no, no â€” where is the environment variable to make Miri go faster?ï¿¼ ðŸ™ƒ</p>",
        "id": 223814650,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611495866
    },
    {
        "content": "<p>CPU time now 6h 37m. Maybe I'll kill it.</p>",
        "id": 223814816,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611496140
    },
    {
        "content": "<p>that env var would be <code>MIRIFLAGS=\"-Zmiri-disable-stacked-borrows -Zmiri-disable-validation -Zmiri-disable-data-race-detector\"</code> :D</p>",
        "id": 223817612,
        "sender_full_name": "RalfJ",
        "timestamp": 1611500226
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> I set proptest to run a single test case, and that has been running in Miri for 13m by itself. What types of operations might greatly contribute to Miri taking a while?</p>",
        "id": 223817690,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611500352
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Where.E2.80.99s.20my.20undefined.20behavior.20when.20string.20interning.3F/near/223817690\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> I set proptest to run a single test case, and that has been running in Miri for 13m by itself. What types of operations might greatly contribute to Miri taking a while?</p>\n</blockquote>\n<p>what did you set? proptest env vars are a bit confusing</p>",
        "id": 223817741,
        "sender_full_name": "RalfJ",
        "timestamp": 1611500405
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">CONFIG</span>: <span class=\"nc\">Lazy</span><span class=\"o\">&lt;</span><span class=\"n\">ProptestConfig</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Lazy</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">cfg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ProptestConfig</span>::<span class=\"n\">default</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"fm\">cfg!</span><span class=\"p\">(</span><span class=\"n\">miri</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">failure_persistence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"n\">cfg</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">proptest</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"cp\">#![proptest_config(CONFIG)]</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 223817782,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611500482
    },
    {
        "content": "<p>I added a <code>panic</code> in the <code>if</code> there and it did trigger.</p>",
        "id": 223817792,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611500513
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Where.E2.80.99s.20my.20undefined.20behavior.20when.20string.20interning.3F/near/223817792\">said</a>:</p>\n<blockquote>\n<p>I added a <code>panic</code> in the <code>if</code> there and it did trigger.</p>\n</blockquote>\n<p>oh interesting, I recall using env vars for this and I recall being confused by how two different env vars work; didnt know about the config object</p>",
        "id": 223817941,
        "sender_full_name": "RalfJ",
        "timestamp": 1611500723
    },
    {
        "content": "<blockquote>\n<p>What types of operations might greatly contribute to Miri taking a while?</p>\n</blockquote>\n<p>It's mostly a big constant factor, as far as I know... with one exception: doing a lot of work on the same allocation, like many references being creates, can lead to a large borrow stack which can dominate the cost. so you could try <code>-Zmiri-disable-stacked-borrows</code> and see if that helps. usually it should be a factor of 2-4, not more.</p>",
        "id": 223818074,
        "sender_full_name": "RalfJ",
        "timestamp": 1611500944
    },
    {
        "content": "<p>So, without Miri, <code>time</code> says <code>real 0.296</code>.</p>",
        "id": 223818142,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611501083
    },
    {
        "content": "<p>Miri overhead is often on the order of 100x-1000x</p>",
        "id": 223818188,
        "sender_full_name": "RalfJ",
        "timestamp": 1611501129
    },
    {
        "content": "<p>so, around 5min for this (assuming it's the same code path, and no concurrency)</p>",
        "id": 223818199,
        "sender_full_name": "RalfJ",
        "timestamp": 1611501169
    },
    {
        "content": "<p>Ah, that flag helped a bunch.</p>",
        "id": 223818221,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611501224
    },
    {
        "content": "<p>Turns out I have to disable isolation anyway, as it grabs the current time</p>",
        "id": 223818274,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611501285
    },
    {
        "content": "<p><code>4:10.12</code> with  MIRIFLAGS='-Zmiri-disable-isolation -Zmiri-disable-stacked-borrows'</p>",
        "id": 223818484,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611501549
    },
    {
        "content": "<p>Also, <code>CARGO_TARGET_DIR=target/miri</code> is a <em>real</em> timesaver</p>",
        "id": 223818580,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611501679
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Where.E2.80.99s.20my.20undefined.20behavior.20when.20string.20interning.3F/near/223818484\">said</a>:</p>\n<blockquote>\n<p><code>4:10.12</code> with  MIRIFLAGS='-Zmiri-disable-isolation -Zmiri-disable-stacked-borrows'</p>\n</blockquote>\n<p>wow that's slow... out of curiosity, does disabling the data race checker make any difference?</p>",
        "id": 223818912,
        "sender_full_name": "RalfJ",
        "timestamp": 1611502159
    },
    {
        "content": "<p>(Miri doesn't have perf tracking but that is the only thing I can imagine that recently made things slower)</p>",
        "id": 223818918,
        "sender_full_name": "RalfJ",
        "timestamp": 1611502184
    },
    {
        "content": "<p>That's <code>28.250</code> now</p>",
        "id": 223819486,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611502911
    },
    {
        "content": "<p>So, is there a point to running miri with all of this turned off?</p>",
        "id": 223819638,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611503105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Slow.20Miri.20execution.20of.20proptest.20tests/near/223819486\">said</a>:</p>\n<blockquote>\n<p>That's <code>28.250</code> now</p>\n</blockquote>\n<p>wait, that's just the data race checker being disabled (or also validation turned off)?</p>",
        "id": 223819647,
        "sender_full_name": "RalfJ",
        "timestamp": 1611503128
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/Slow.20Miri.20execution.20of.20proptest.20tests/near/223819638\">said</a>:</p>\n<blockquote>\n<p>So, is there a point to running miri with all of this turned off?</p>\n</blockquote>\n<p>Miri will still detect various forms of UB, such as alignment issues, use-after-free, out-of-bounds, or using uninit memory in the wrong way</p>",
        "id": 223819707,
        "sender_full_name": "RalfJ",
        "timestamp": 1611503178
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/122651-general/topic/Slow.20Miri.20execution.20of.20proptest.20tests/near/223819647\">said</a>:</p>\n<blockquote>\n<p>wait, that's just the data race checker being disabled (or also validation turned off)?</p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><code>MIRIFLAGS=&#39;-Zmiri-disable-isolation -Zmiri-disable-stacked-borrows -Zmiri-disable-data-race-detector&#39;\n</code></pre></div>",
        "id": 223822038,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611505928
    },
    {
        "content": "<p>And</p>\n<div class=\"codehilite\"><pre><span></span><code>MIRIFLAGS=&#39;-Zmiri-disable-isolation -Zmiri-disable-data-race-detector&#39;\n</code></pre></div>\n<p>is <code>16:31.57</code></p>",
        "id": 223825594,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611510312
    },
    {
        "content": "<p>(btw, \"disable-isolation\" does <em>not</em> miss any bugs... the flag just accidentally looks like the ones that do miss bugs :/ )</p>",
        "id": 223826352,
        "sender_full_name": "RalfJ",
        "timestamp": 1611511273
    },
    {
        "content": "<p>Wow... how much concurrency is in this code? Back in <a href=\"https://github.com/rust-lang/miri/pull/1617\">https://github.com/rust-lang/miri/pull/1617</a> some experiments were done and it looked the overhead of the data race detector in sequential code was tiny</p>",
        "id": 223826365,
        "sender_full_name": "RalfJ",
        "timestamp": 1611511309
    },
    {
        "content": "<p>Zero concurrency of my own. I don't actually know if proptest does concurrency by default...</p>",
        "id": 223827160,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611512340
    },
    {
        "content": "<p>if there is concurrency there should be a message somewhere warning you about thread support in Miri being experimental</p>",
        "id": 223872160,
        "sender_full_name": "RalfJ",
        "timestamp": 1611566851
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> is the code you are running here available somewhere? If so, would be great if you could open an issue titled \"data race detector causes massive slowdown\" or so, with instructions for how to reproduce the problem</p>",
        "id": 223872288,
        "sender_full_name": "RalfJ",
        "timestamp": 1611566925
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/miri/issues/1689\">Done</a>, thanks! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 223913392,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611588905
    },
    {
        "content": "<p>Now I wait for Ralf to see all my unsafe and then come rushing back: \"no no, you cannot do this\"</p>",
        "id": 223913473,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611588943
    },
    {
        "content": "<p>ah, if only I had the time to actually read all that unsafe carefully enough ;)</p>",
        "id": 223938869,
        "sender_full_name": "RalfJ",
        "timestamp": 1611598927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/122651-general/topic/Slow.20Miri.20execution.20of.20proptest.20tests/near/223938869\">said</a>:</p>\n<blockquote>\n<p>ah, if only I had the time to actually read all that unsafe carefully enough ;)</p>\n</blockquote>\n<p>You should write a program that encodes all your knowledge about unsafe and then automate your ability to review...</p>",
        "id": 223981589,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1611620165
    }
]