[
    {
        "content": "<p>Hey all, I keep on finding myself with a bunch of rust projects that have dependencies which need updating.</p>\n<p>How do ya'll stay on top of updates? I know semantic versioning is supposed to imply \"everything but the major version should be updateable\", but do any tools exist to...</p>\n<ul>\n<li>Update minor/patch versions automatically (validating correctness against, e.g., \"cargo build/test\")?</li>\n<li>Identify that a major version change exists, and could be upgraded (but would need to be done so manually)?</li>\n</ul>\n<p>I'm interested in playing around with cargo metadata to make something that helps, but I don't want to re-invent the wheel if a tool exists to do this already!</p>",
        "id": 221223014,
        "sender_full_name": "Sean Klein",
        "timestamp": 1609344445
    },
    {
        "content": "<p>You sure you want to update minor/patch versions in <code>.toml</code> at all? <code>cargo update</code> will regenerate the lockfile fwiw.</p>",
        "id": 221223184,
        "sender_full_name": "nagisa",
        "timestamp": 1609344591
    },
    {
        "content": "<p><a href=\"https://github.com/kbknapp/cargo-outdated\">https://github.com/kbknapp/cargo-outdated</a> can answer the 2nd</p>",
        "id": 221223277,
        "sender_full_name": "nagisa",
        "timestamp": 1609344644
    },
    {
        "content": "<p>I guess I've always been scared to specify more liberal dependency versions, like \"foo = '1'\" instead of \"foo = '1.x.y'\", because I've been bitten by semantic versioning for API stability not being entirely true in the past. I suppose the recommended way to avoid that would be to use a lockfile + \"cargo build --frozen\", and use cargo update, as you suggested?</p>",
        "id": 221223872,
        "sender_full_name": "Sean Klein",
        "timestamp": 1609344954
    },
    {
        "content": "<p>The \"cargo-outdated\" tool looks rad though, definitely going to take a look at that!</p>",
        "id": 221223916,
        "sender_full_name": "Sean Klein",
        "timestamp": 1609344968
    },
    {
        "content": "<p>FWIW <code>foo = '1.x.y'</code> does <em>not</em> freeze that specific version</p>",
        "id": 221223925,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609344981
    },
    {
        "content": "<p>you need <code>foo = '=1.x.y'</code> for that</p>",
        "id": 221223929,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609344991
    },
    {
        "content": "<p>the first one just says \"at least 1.x.y and less than 2.0\"</p>",
        "id": 221223938,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609345009
    },
    {
        "content": "<p>You should almost always avoid <code>=</code> dependencies as cargo will give an error when a crate is dependent on multiple times with semver compatible versions, but where an <code>=</code> dependency uses a version that is not compatible with all other dependencies. For example one crate depends on <code>=1.0.0</code> and another crate depends on <code>1.1.0</code>. The allowed versions are then <code>&gt;=1.1.0 &amp;&amp; &lt;2.0.0</code>, but <code>=1.0.0</code> conflicts with this. Depending on <code>0.1</code> and <code>0.2</code> is fine, as those aren't semver compatible anyway, so cargo won't try to unify them.</p>",
        "id": 221226612,
        "sender_full_name": "bjorn3",
        "timestamp": 1609347459
    },
    {
        "content": "<p><code>=</code> dependencies should pretty much only be used for either private dependencies that other crates shouldn't depend on anyway.</p>",
        "id": 221226700,
        "sender_full_name": "bjorn3",
        "timestamp": 1609347513
    },
    {
        "content": "<p>It sounds like the list of requirements are perfectly satisfied by using Dependabot, assuming you're on GitHub</p>",
        "id": 221227798,
        "sender_full_name": "Mark Drobnak",
        "timestamp": 1609348226
    },
    {
        "content": "<p>Except that dependabot doesn't do semver, so it'll happily send you PRs for every micro update to every dependency you have</p>",
        "id": 221415337,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1609618314
    },
    {
        "content": "<p>That is only the case if you have a lockfile afaik</p>",
        "id": 221415457,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1609618480
    }
]