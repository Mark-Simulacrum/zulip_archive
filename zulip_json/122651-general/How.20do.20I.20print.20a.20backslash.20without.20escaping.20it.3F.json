[
    {
        "content": "<p>I have this code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"{}{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">doc_line</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\\\</span><span class=\"s\">n\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which generates <code>.. info severity.\\\\nThe warnings ...</code>. But that's not what I want - I want it to generate a literal backslash, not two backslashes in a row.</p>",
        "id": 229340907,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615224707
    },
    {
        "content": "<p>How are you printing the string you created via format?</p>",
        "id": 229341213,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615224824
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{}{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"doc_line\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\\\</span><span class=\"s\">n\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>doc_line\\n\n</code></pre></div>",
        "id": 229341288,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615224846
    },
    {
        "content": "<p>my gut says you are debug-formatting the string:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"{}{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"doc_line\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\\\</span><span class=\"s\">n\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>&quot;doc_line\\\\n&quot;\n</code></pre></div>",
        "id": 229341341,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1615224863
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116155\">Jake Goulding</span> <a href=\"#narrow/stream/122651-general/topic/How.20do.20I.20print.20a.20backslash.20without.20escaping.20it.3F/near/229341213\">said</a>:</p>\n<blockquote>\n<p>How are you printing the string you created via format?</p>\n</blockquote>\n<p>this was absolutely it, it was being serialized with <code>serde_json::json!</code></p>",
        "id": 229365988,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615234219
    },
    {
        "content": "<p>let me try an actual newline and see if that works properly</p>",
        "id": 229366015,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615234229
    },
    {
        "content": "<p>yup that fixed it <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 229366061,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615234248
    },
    {
        "content": "<p>thank you!</p>",
        "id": 229366066,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615234250
    },
    {
        "content": "<p>fwiw, <code>r\"\\n\"</code> is another way to <em>write</em> that without escaping</p>",
        "id": 229387735,
        "sender_full_name": "cuviper",
        "timestamp": 1615242486
    },
    {
        "content": "<p>(doesn't change the printing side)</p>",
        "id": 229387754,
        "sender_full_name": "cuviper",
        "timestamp": 1615242492
    }
]