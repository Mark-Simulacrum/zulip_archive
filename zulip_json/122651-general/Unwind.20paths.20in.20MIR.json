[
    {
        "content": "<p>Hey, when writing this post <a href=\"https://users.rust-lang.org/t/how-can-std-thread-join-catch-panics/61805/5?u=yandros\">https://users.rust-lang.org/t/how-can-std-thread-join-catch-panics/61805/5?u=yandros</a>, with the source code in the playground (minus the <code>main()</code> function, just the <code>lib</code> definition), I observed that the function <code>drop_last()</code> did not feature an unwind path in the <code>--unpretty=mir{,-cfg}</code>-emitted MIR:</p>\n<p><a href=\"/user_uploads/4715/y18IeAbaHRUuxEh_YqS-j0wq/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/y18IeAbaHRUuxEh_YqS-j0wq/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/y18IeAbaHRUuxEh_YqS-j0wq/image.png\"></a></div><p>But that <code>drop::&lt;Option&lt;T&gt;&gt;(</code> can very well panic! I noticed that if I disabled the <code>mir-opt-level</code> down to 0, the <code>unwind</code> path was there.</p>\n<p><a href=\"/user_uploads/4715/Uj-TimpF_qsv2eTBBhbsMlbJ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/Uj-TimpF_qsv2eTBBhbsMlbJ/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/Uj-TimpF_qsv2eTBBhbsMlbJ/image.png\"></a></div><ul>\n<li><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=1d482dc2be51447d4dc5ff5370b88a30\">Playground</a></li>\n</ul>\n<p>Why that difference? Is that a bug of some MIR optimization, or is there something obvious I am missing about the <code>--unpretty</code>-generated MIR pseudo code?</p>",
        "id": 244694711,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1625228773
    },
    {
        "content": "<p>these look equivalent</p>",
        "id": 244695291,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625229076
    },
    {
        "content": "<p>if the <code>unwind</code> edge is missing it acts like a <code>resume</code> terminator</p>",
        "id": 244695312,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625229091
    },
    {
        "content": "<p>(yes this is subtle)</p>",
        "id": 244695325,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625229101
    },
    {
        "content": "<p>Ohhh thanks, I was wondering if there was something like that. Is it possible to force the display of <code>unwind -&gt; resume</code> paths? I find them very useful, both</p>\n<ul>\n<li>when teaching something, as in that post,</li>\n<li>and sometimes for my own actual code, to make sure I did not overlook possible unwind paths</li>\n</ul>",
        "id": 244695592,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1625229250
    },
    {
        "content": "<p>no, they will be displayed only when present</p>",
        "id": 244695650,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625229288
    },
    {
        "content": "<p>but I wouldn't mind an indicator for <code>None</code> unwind edges that has a <code>resume</code> label on it or something</p>",
        "id": 244695692,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625229312
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> <a href=\"#narrow/stream/122651-general/topic/Unwind.20paths.20in.20MIR/near/244695692\">said</a>:</p>\n<blockquote>\n<p>but I wouldn't mind an indicator for <code>None</code> unwind edges that has a <code>resume</code> label on it or something</p>\n</blockquote>\n<p>Would that be a <code>return [or resume-on-unwind]</code> label on a \"simplified\" edge rather than the current terse <code>return</code>, or the \"cumbersome\" <code>returnâ€¦</code>-&amp;-<code>unwind-to-resume</code> double branch?</p>",
        "id": 244697094,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1625230131
    },
    {
        "content": "<p>Something like:<br>\n<a href=\"/user_uploads/4715/5roqIICF-pKa6ya4Ql4feLR4/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/5roqIICF-pKa6ya4Ql4feLR4/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/5roqIICF-pKa6ya4Ql4feLR4/image.png\"></a></div>",
        "id": 244697250,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1625230212
    },
    {
        "content": "<p>I'd prefer two separate edges, with the unwind edge pointing \"nowhere\", if that's possible</p>",
        "id": 244697318,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625230252
    },
    {
        "content": "<p>but it probably doesn't matter too much</p>",
        "id": 244697361,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625230277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink  [he/him]</span> <a href=\"#narrow/stream/122651-general/topic/Unwind.20paths.20in.20MIR/near/244697318\">said</a>:</p>\n<blockquote>\n<p>I'd prefer two separate edges, with the unwind edge pointing \"nowhere\", if that's possible</p>\n</blockquote>\n<p>Oh yeah, that's even better. I don't really care what happens after the <code>unwind</code> edge, I would just want <em>some</em> way to know about an unwinding branch there <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 244697469,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1625230335
    },
    {
        "content": "<p>From the perspective of the personality function there isn't even an unwinding branch there. There is just no cleanup information at that specific point, so it tells the unwinder that no cleanup is necessary and that it should check with the next frame.</p>",
        "id": 244697602,
        "sender_full_name": "bjorn3",
        "timestamp": 1625230435
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Graphviz\"><pre><span></span><code><span class=\"w\">    </span><span class=\"nt\">bb1__0_13</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nt\">bb2__0_13</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"na\">label</span><span class=\"p\">=</span><span class=\"s2\">\"return\"</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// Show the unwind branch</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"na\">rank</span><span class=\"p\">=</span><span class=\"s\">same</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">bb1__0_13</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nt\">bb1__0_13_unwind</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"na\">label</span><span class=\"p\">=</span><span class=\"s2\">\"unwind\"</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">bb1__0_13_unwind</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"na\">style</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">invis</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">label</span><span class=\"p\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"na\">width</span><span class=\"p\">=</span><span class=\"m\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"/user_uploads/4715/JQJTvS0GDJPT2i3B-1nVfBP2/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/JQJTvS0GDJPT2i3B-1nVfBP2/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/JQJTvS0GDJPT2i3B-1nVfBP2/image.png\"></a></div>",
        "id": 244697722,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1625230486
    },
    {
        "content": "<p>yeah that looks good</p>",
        "id": 244697824,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1625230554
    }
]