[
    {
        "content": "<p>I finally tried vscode + rust-analyzer on the rustc codebase and I am completely <em>blown away</em> by how well this works. After a bit of loading I am getting ctrl-click-to-definition, show-type/doc-on-hover, and with a bit of configuration now also format-on-save. Kudos to everyone involved! &lt;3</p>\n<p>Is there documentation somewhere for the recommended settings when using this with rustc? So far I added llvm-project to the ignore list (so that it doesn't show up in Ctrl-P) and I added a <code>+nightly</code> argument to rustfmt. But maybe there is a way to make it use the bootstrap compiler (currently there's a \"failure\" in <code>librustc_index</code>, I think caused by using the wrong compiler).</p>",
        "id": 197794454,
        "sender_full_name": "RalfJ",
        "timestamp": 1589633650
    },
    {
        "content": "<p>I saw a discussion about using <code>rust-analyser</code> for rustc few days ago... I think you want to override the <code>cargo check</code> command with <code>./x.py check</code>, and override the formatter command with <code>./build/target/stage0/bin/rustfmt</code> or something alike.</p>",
        "id": 197795285,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1589634989
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/131828-t-compiler/topic/IDE/near/197315300\">this conversation</a></p>",
        "id": 197795360,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1589635114
    },
    {
        "content": "<p>hm, setting the formatter like that lead to weird errors... \"error[internal]: left behind trailing whitespace\"</p>",
        "id": 197797497,
        "sender_full_name": "RalfJ",
        "timestamp": 1589638371
    },
    {
        "content": "<p>oh that might be older messages (there's no time)</p>",
        "id": 197797504,
        "sender_full_name": "RalfJ",
        "timestamp": 1589638395
    },
    {
        "content": "<p>the latest one is</p>\n<div class=\"codehilite\"><pre><span></span><code>[Error - 4:12:59 PM] Request textDocument/formatting failed.\n  Message: No such file or directory (os error 2)\n  Code: -32603\n</code></pre></div>",
        "id": 197797505,
        "sender_full_name": "RalfJ",
        "timestamp": 1589638400
    },
    {
        "content": "<p>oh d'oh I have to replace \"target\" by something</p>",
        "id": 197797515,
        "sender_full_name": "RalfJ",
        "timestamp": 1589638419
    },
    {
        "content": "<p>hm still no luck though</p>",
        "id": 197797576,
        "sender_full_name": "RalfJ",
        "timestamp": 1589638479
    },
    {
        "content": "<p>maybe try <code>./x.py fmt</code> as formatter command?</p>",
        "id": 197798295,
        "sender_full_name": "Charles Lew",
        "timestamp": 1589639523
    },
    {
        "content": "<p>that format the entire tree, not just a single crate/file</p>",
        "id": 197798381,
        "sender_full_name": "RalfJ",
        "timestamp": 1589639689
    },
    {
        "content": "<p>so it takes a while</p>",
        "id": 197798382,
        "sender_full_name": "RalfJ",
        "timestamp": 1589639695
    },
    {
        "content": "<p>I doubt that matches what format-on-save usually does</p>",
        "id": 197798399,
        "sender_full_name": "RalfJ",
        "timestamp": 1589639702
    },
    {
        "content": "<p>so far I got this:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    &quot;editor.formatOnSave&quot;: true,\n    &quot;rust-analyzer.checkOnSave.overrideCommand&quot;: [\n        &quot;./x.py&quot;,\n        &quot;check&quot;,\n        &quot;--json-output&quot;\n    ],\n    &quot;rust-analyzer.rustfmt.extraArgs&quot;: [\n        &quot;+nightly&quot;\n    ],\n    &quot;files.exclude&quot;: {\n        &quot;**/llvm-project/**&quot;: true\n    }\n}\n</code></pre></div>",
        "id": 197798465,
        "sender_full_name": "RalfJ",
        "timestamp": 1589639782
    },
    {
        "content": "<p>Which rustdoc is invoked by <code>x.py fmt</code>? <code>build/x86_64-unknown-linux-gnu/stage0/bin/rustdoc</code>?</p>",
        "id": 197798552,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589639929
    },
    {
        "content": "<p>yes</p>",
        "id": 197798663,
        "sender_full_name": "simulacrum",
        "timestamp": 1589640102
    },
    {
        "content": "<p>Err, rustfmt, not rustdoc</p>",
        "id": 197801049,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589643230
    },
    {
        "content": "<p>also yes</p>",
        "id": 197801100,
        "sender_full_name": "simulacrum",
        "timestamp": 1589643270
    },
    {
        "content": "<p>I missed the rustdoc bit :)</p>",
        "id": 197801103,
        "sender_full_name": "simulacrum",
        "timestamp": 1589643277
    },
    {
        "content": "<p>Hmm, r-a does not seem to find that</p>\n<blockquote>\n<p>[Error - 5:34:04 PM] Request textDocument/formatting failed.<br>\n  Message: No such file or directory (os error 2)<br>\n  Code: -32603</p>\n</blockquote>",
        "id": 197801135,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589643352
    },
    {
        "content": "<p>That is with:</p>\n<div class=\"codehilite\"><pre><span></span><code>    &quot;rust-analyzer.rustfmt.overrideCommand&quot;: [\n        &quot;./build/x86_64-unknown-linux-gnu/stage0/bin/rustfmt&quot;\n    ],\n</code></pre></div>\n\n\n<p>It clearly is there and seems to work though</p>",
        "id": 197801196,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589643374
    },
    {
        "content": "<p>Ah, looks like it adjusts the working dir dynamically, so it can't find the command with a relative path</p>\n<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/d51c1f62178c383363a2d95e865131d9a7b969d0/crates/rust-analyzer/src/main_loop/handlers.rs#L651-L655\">https://github.com/rust-analyzer/rust-analyzer/blob/d51c1f62178c383363a2d95e865131d9a7b969d0/crates/rust-analyzer/src/main_loop/handlers.rs#L651-L655</a></p>\n<p>Specifying an absolute path works</p>",
        "id": 197801294,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589643572
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/122651-general/topic/rust-analyzer.20is.20awesome!/near/197801294\">said</a>:</p>\n<blockquote>\n<p>Ah, looks like it adjusts the working dir dynamically, so it can't find the command with a relative path</p>\n<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/blob/d51c1f62178c383363a2d95e865131d9a7b969d0/crates/rust-analyzer/src/main_loop/handlers.rs#L651-L655\">https://github.com/rust-analyzer/rust-analyzer/blob/d51c1f62178c383363a2d95e865131d9a7b969d0/crates/rust-analyzer/src/main_loop/handlers.rs#L651-L655</a></p>\n<p>Specifying an absolute path works</p>\n</blockquote>\n<p>Literally was just scratching my head about this.</p>",
        "id": 197802424,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1589645072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span>  Do you want to fix this/submit an issue? Otherwise I'll do it.</p>",
        "id": 197802448,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1589645146
    },
    {
        "content": "<p>You mean on rust-analyzer? It seems to be doing this on purpose</p>",
        "id": 197802534,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589645254
    },
    {
        "content": "<p>I think it might be necessary to configure the working directory for some of rustfmt's features to work</p>",
        "id": 197802540,
        "sender_full_name": "simulacrum",
        "timestamp": 1589645278
    },
    {
        "content": "<p>in particular iirc rustfmt does support \"crate wide\" formatting</p>",
        "id": 197802581,
        "sender_full_name": "simulacrum",
        "timestamp": 1589645290
    },
    {
        "content": "<p>or perhaps it'll fail to parse the file without this if the file contains <code>include_str!</code> with a relative path, for example</p>",
        "id": 197802592,
        "sender_full_name": "simulacrum",
        "timestamp": 1589645315
    },
    {
        "content": "<p>I was thinking you would first normalize the executable path to the workspace directory when you get a <code>RustfmtConfig::CustomCommand</code></p>",
        "id": 197802624,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1589645378
    },
    {
        "content": "<p>Not that you would stop setting <code>current_dir</code></p>",
        "id": 197802633,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1589645397
    },
    {
        "content": "<p>Yeah that could work here. What happens when you normalize a path like <code>rustfmt</code>, without any other elements? Does it stay as-is?</p>",
        "id": 197802685,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1589645447
    },
    {
        "content": "<p>hm normalizing would definitely leave it is as is, not sure what canonicalization does</p>",
        "id": 197802697,
        "sender_full_name": "simulacrum",
        "timestamp": 1589645476
    },
    {
        "content": "<p>it might try to resolve with respect to current directory of the process?</p>",
        "id": 197802703,
        "sender_full_name": "simulacrum",
        "timestamp": 1589645487
    },
    {
        "content": "<p>You would need to look for \"path-like\" things I guess, much like the shell does (hence why you have to write <code>./x.py</code> and not <code>x.py</code>)</p>",
        "id": 197802808,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1589645643
    },
    {
        "content": "<p>I'll submit a PR over there.</p>",
        "id": 197803421,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1589646633
    },
    {
        "content": "<p>having to use absolute paths would be a shame as then I couldnt share the settings between my 3 rustc worktrees any more</p>",
        "id": 197805474,
        "sender_full_name": "RalfJ",
        "timestamp": 1589649512
    },
    {
        "content": "<p>so thanks for bringing this up upstream :)</p>",
        "id": 197805476,
        "sender_full_name": "RalfJ",
        "timestamp": 1589649521
    },
    {
        "content": "<p>Hm well we update the rustfmt version very rarely - I think twice so far? - so you probably could</p>",
        "id": 197812867,
        "sender_full_name": "simulacrum",
        "timestamp": 1589660048
    },
    {
        "content": "<p>in that case <code>rustfmt +nightly</code> will probably also do it I guess?^^<br>\nI had to disable format-on-save now though because it also formats the test suite, breaking some tests...</p>",
        "id": 197837528,
        "sender_full_name": "RalfJ",
        "timestamp": 1589704031
    },
    {
        "content": "<p>Also it keeps telling me that there are too many files to be watched. are there some other folders besides llvm-project and build that I could exclude?</p>",
        "id": 197838649,
        "sender_full_name": "RalfJ",
        "timestamp": 1589706046
    },
    {
        "content": "<p>You could exclude <code>src/doc</code> and the things in <code>src/tools</code> that you don't care about. Another big contributor is the <code>src/test</code> dir.</p>",
        "id": 197839903,
        "sender_full_name": "bjorn3",
        "timestamp": 1589707935
    }
]