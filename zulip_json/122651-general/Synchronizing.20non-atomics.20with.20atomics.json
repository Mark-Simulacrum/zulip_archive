[
    {
        "content": "<p>Hey! Is it possible to synchronize non-atomic operations with atomic operations in Rust? FWIU this is possible in C++, and the documentation for Rust's std::sync::atomic says the memory ordering model is the same as in C++ - but is there a way to actually share a reference to implicitly-synchronized non-atomic variables across threads?</p>",
        "id": 223748263,
        "sender_full_name": "Benjamin",
        "timestamp": 1611406526
    },
    {
        "content": "<p>unsafecell?</p>",
        "id": 223748518,
        "sender_full_name": "nagisa",
        "timestamp": 1611406911
    },
    {
        "content": "<p>Thanks! Looks like UnsafeCell is !Sync, how would I share this across threads?</p>",
        "id": 223749109,
        "sender_full_name": "Benjamin",
        "timestamp": 1611407760
    },
    {
        "content": "<p>You can implement <code>Sync</code> on a wrapper around <code>UnsafeCell</code>.</p>",
        "id": 223749532,
        "sender_full_name": "bjorn3",
        "timestamp": 1611408322
    },
    {
        "content": "<p>Just make sure that you enforce correct synchronization.</p>",
        "id": 223749540,
        "sender_full_name": "bjorn3",
        "timestamp": 1611408341
    },
    {
        "content": "<p>Aha, thank you :)</p>",
        "id": 223749815,
        "sender_full_name": "Benjamin",
        "timestamp": 1611408788
    }
]