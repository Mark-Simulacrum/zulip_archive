[
    {
        "content": "<p>I'm trying to add a help line to an existing error message, and I'm running into issues:</p>\n<ul>\n<li><code>--bless</code> doesn't update all of UI tests. </li>\n<li><code>tidy</code> rejects my PR because a comment that checks the error message exceeds line length</li>\n</ul>",
        "id": 194596990,
        "sender_full_name": "Kornel",
        "timestamp": 1587301876
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>unexpected errors (from JSON output): [\n    Error {\n        line_num: 3,\n        kind: Some(\n            Help,\n        ),\n        msg: &quot;3:1: 3:21: if there is `mod not_a_real_file` elsewhere in the crate already, import it with `use crate::` instead&quot;,\n    },\n]\n\nnot found errors (from test file): [\n    Error {\n        line_num: 4,\n        kind: Some(\n            Help,\n        ),\n        msg: &quot;if there is `mod not_a_real_file` elsewhere in the crate already&quot;,\n    },\n]\n\nthread &#39;[ui] ui/parser/mod_file_not_exist.rs&#39; panicked at &#39;explicit panic&#39;, src/tools/compiletest/src/runtest.rs:1460:13\n</pre></div>",
        "id": 194597003,
        "sender_full_name": "Kornel",
        "timestamp": 1587301906
    },
    {
        "content": "<p>and the file is:</p>\n<div class=\"codehilite\"><pre><span></span>// ignore-windows\n\nmod not_a_real_file; //~ ERROR file not found for module `not_a_real_file`\n//~^ HELP to create the module `not_a_real_file` here, create file\n//~^ HELP if there is `mod not_a_real_file` elsewhere in the crate already\n\nfn main() {\n    assert_eq!(mod_file_aux::bar(), 10);\n    //~^ ERROR failed to resolve: use of undeclared type or module `mod_file_aux`\n}\n</pre></div>",
        "id": 194597051,
        "sender_full_name": "Kornel",
        "timestamp": 1587301934
    },
    {
        "content": "<p>the second <code>//~^ HELP</code> needs to be <code>//~| HELP</code></p>",
        "id": 194597068,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1587301967
    },
    {
        "content": "<p>Can I have two <code>//~^ HELP</code> lines per error? Are they searching for a substring, or do they have to be an exact match?</p>",
        "id": 194597071,
        "sender_full_name": "Kornel",
        "timestamp": 1587301971
    },
    {
        "content": "<p><code>^</code> means \"should appear on the line above this one\"</p>",
        "id": 194597076,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1587301986
    },
    {
        "content": "<p><code>|</code> means \"should appear on the same line as the above pattern\"</p>",
        "id": 194597080,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1587302000
    },
    {
        "content": "<p>Thanks</p>",
        "id": 194597099,
        "sender_full_name": "Kornel",
        "timestamp": 1587302015
    },
    {
        "content": "<p>also see <a href=\"https://rustc-dev-guide.rust-lang.org/tests/adding.html#error-annotations\" title=\"https://rustc-dev-guide.rust-lang.org/tests/adding.html#error-annotations\">https://rustc-dev-guide.rust-lang.org/tests/adding.html#error-annotations</a></p>",
        "id": 194598425,
        "sender_full_name": "RalfJ",
        "timestamp": 1587303896
    },
    {
        "content": "<p>there's also <code>// ignore-tidy-linelength</code></p>",
        "id": 194599734,
        "sender_full_name": "lqd",
        "timestamp": 1587305739
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116113\">lqd</span> <a href=\"#narrow/stream/122651-general/topic/UI.20tests.20woes/near/194599734\" title=\"#narrow/stream/122651-general/topic/UI.20tests.20woes/near/194599734\">said</a>:</p>\n<blockquote>\n<p>there's also <code>// ignore-tidy-linelength</code></p>\n</blockquote>\n<p>which should almost never be used in UI tests</p>",
        "id": 194619490,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1587332792
    }
]