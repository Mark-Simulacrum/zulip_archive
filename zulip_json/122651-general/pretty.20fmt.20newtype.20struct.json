[
    {
        "content": "<p>does anyone else imagine a utopian reality where <code>:#?</code> doesn't put newlines in newtype structs</p>",
        "id": 225934246,
        "sender_full_name": "devsnek",
        "timestamp": 1613003781
    },
    {
        "content": "<p>In general, I feel like <code>{:?}</code> is way too dense (no linebreaks! <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>) and <code>{:#?}</code> is way too sparse (linebreaks everywhere! my terminal is full! <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span>).</p>",
        "id": 225945925,
        "sender_full_name": "Noah Lev",
        "timestamp": 1613015566
    },
    {
        "content": "<p>Is there enough context for the formatter to in principle do a proper job of pretty printing? I suspect it's constrained by not having any buffers</p>",
        "id": 225946346,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613016027
    },
    {
        "content": "<p>proper job meaning wadler-style or similar, where you pay attention to how much space you have on the line and add newlines only if you have to</p>",
        "id": 225946379,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613016083
    },
    {
        "content": "<p>I don't think so, not with the way it's currently designed. But I think we could special-case one-element tuple structs in the <code>derive</code>d impl to be on one line (if people thought that was a good idea).</p>",
        "id": 225946625,
        "sender_full_name": "Noah Lev",
        "timestamp": 1613016360
    },
    {
        "content": "<p>There's definitely not enough information to do it fully TeX boxes-and-glue properly.</p>",
        "id": 225950420,
        "sender_full_name": "scottmcm",
        "timestamp": 1613021402
    },
    {
        "content": "<p>I'd be in favour of special-casing one-element structs, personally.</p>",
        "id": 225950465,
        "sender_full_name": "scottmcm",
        "timestamp": 1613021443
    },
    {
        "content": "<p>There are also some hacks that might work usably -- I've been pondering that <code>dbg!</code> try to write to a 40-byte stack buffer with <code>{:?}</code>, and use that if it fit, and only use <code>{:#?}</code> if it didn't fit.  The idea being that <code>[1, 2, 3, 4]</code> and <code>(\"hello\", 5)</code> are really not worth splitting.</p>",
        "id": 225950548,
        "sender_full_name": "scottmcm",
        "timestamp": 1613021559
    },
    {
        "content": "<p>There are at least some formatters that are one-use only (looking at you, <a href=\"https://docs.rs/itertools/0.10.0/itertools/trait.Itertools.html#method.format\"><code>Itertools::format</code></a>), so that strategy could cause them trouble.</p>",
        "id": 225952580,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613024308
    },
    {
        "content": "<p>Well that's unpleasant.  Definitely not what I expect from a <code>&amp;self</code> method.</p>",
        "id": 225952776,
        "sender_full_name": "scottmcm",
        "timestamp": 1613024624
    },
    {
        "content": "<p><del>Isn't it a <code>self</code> method?</del> Oh, I see: <code>Display::fmt</code> is an <code>&amp;self</code> method.</p>",
        "id": 226226255,
        "sender_full_name": "Noah Lev",
        "timestamp": 1613190922
    }
]