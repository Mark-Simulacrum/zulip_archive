[
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/stable/std/thread/fn.available_parallelism.html\">These</a> docs and the API seem like they could be improved. I can't find other sources that refer to \"parallelism\" as a system resource in this way.</p>\n<p>I also find it to be a grammatical issue because the returned NonZeroUsize represents individual items, not a collective quantity. It feels like a store saying \"10 items or less\" instead of \"10 items or fewer\"; the error, however common, makes the tone is a bit less professional. In explaining what this is, it even calls parallelism \"a bound on the number of computations it can perform simultaneously\", as opposed to \"the amount of computation\". You wouldn't ask someone \"how much apple basket do you have?\" You would ask, \"how many apples are in your basket?\" If the basket is parallelism, then the apples are threads, I suppose.</p>\n<p>If the idea is to use this to spawn a reasonably optimal number of threads, can is be called <code>suggested_thread_count</code>? How the number is determined might depend on the system but in our Rust code a thread is a thread. We're talking about Rust's <code>std::thread</code> threads, not whatever number of cores (or other determining factors) might be on the system. That might forego the need to use the term \"parallelism\" at all, since it would just refer to Rust threads.</p>\n<p>It's a good feature, though. It's nice to know there's an easy way to get a this value.</p>\n<p>Also, is there a better place to bring this up? I probably should have asked that before I typed all of this.</p>",
        "id": 273723791,
        "sender_full_name": "Jeff",
        "timestamp": 1646175180
    },
    {
        "content": "<p>The method is already stable, so the name can't be changed. Documentation can be improved if you think it needs it, though.</p>",
        "id": 273724878,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646175634
    },
    {
        "content": "<blockquote>\n<p>Also, is there a better place to bring this up? I probably should have asked that before I typed all of this.</p>\n</blockquote>\n<p>#t-libs</p>",
        "id": 273728340,
        "sender_full_name": "The 8472",
        "timestamp": 1646177564
    },
    {
        "content": "<p>Also, suggested_thread_count isn't much better since some thread pools don't want/need as many threads as you have hardware threads. E.g. IO pools.</p>",
        "id": 273728506,
        "sender_full_name": "The 8472",
        "timestamp": 1646177676
    },
    {
        "content": "<p>Is an alias out of the question? If I were looking for this feature, I do not think I could find it by its current name. I get that the grammar is not a priority.</p>",
        "id": 273728717,
        "sender_full_name": "Jeff",
        "timestamp": 1646177796
    },
    {
        "content": "<p>Only if there's a well-established name that someone might look for. Otherwise we would have to alias any of the other bike-shedded names (there were several).</p>",
        "id": 273728880,
        "sender_full_name": "The 8472",
        "timestamp": 1646177881
    },
    {
        "content": "<p><a href=\"https://std-dev-guide.rust-lang.org/documentation/doc-alias-policy.html\">https://std-dev-guide.rust-lang.org/documentation/doc-alias-policy.html</a></p>",
        "id": 273729015,
        "sender_full_name": "The 8472",
        "timestamp": 1646177933
    },
    {
        "content": "<p>Even <code>available_threads</code> would be better, just to give an idea of what that number represents and reflect how I would personally think to search for it. I think others would find that more easily too, but that's an assumption.</p>",
        "id": 273729106,
        "sender_full_name": "Jeff",
        "timestamp": 1646177983
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/74480\">https://github.com/rust-lang/rust/pull/74480</a> see the original PR proposing some names and then moving to <code>available_concurrency</code>, which was later changed to <code>available_parallelism</code> in another PR</p>",
        "id": 273729405,
        "sender_full_name": "The 8472",
        "timestamp": 1646178134
    },
    {
        "content": "<p><span aria-label=\"bike\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bike\">:bike:</span> <span aria-label=\"derelict house\" class=\"emoji emoji-1f3da\" role=\"img\" title=\"derelict house\">:derelict_house:</span> <span aria-label=\"art\" class=\"emoji emoji-1f3a8\" role=\"img\" title=\"art\">:art:</span></p>",
        "id": 273729455,
        "sender_full_name": "The 8472",
        "timestamp": 1646178171
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479357\">Jeff</span> <a href=\"#narrow/stream/122651-general/topic/available_parallelism/near/273729106\">said</a>:</p>\n<blockquote>\n<p>Even <code>available_threads</code> would be better, just to give an idea of what that number represents and reflect how I would personally think to search for it. I think others would find that more easily too, but that's an assumption.</p>\n</blockquote>\n<p>I do think such a name would work in many cases, but we got feedback that some systems might have concepts of parallelism that aren't based on hardware cores/threads. In particular, that name wouldn't convey that it also takes things like affinity and cgroups into account, as well as some kinds of virtual/sandbox systems.</p>",
        "id": 273730440,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646178761
    },
    {
        "content": "<p>This is interesting. The discussion of this change may not have been as productive as it could have been. Interestingly, the specific action that was interpreted as \"a demonstration of power, not equality\" and led to the complaint made in <a href=\"https://github.com/rust-lang/rust/issues/74479#issuecomment-933345728\">this comment</a> was made by <span class=\"user-mention\" data-user-id=\"245610\">@Jacob Pratt ðŸ‡ºðŸ‡¦</span> in this thread. I immediately knew that I was being waved off with the words \"if you think it needs it\", given how specific I was about what I think it needs. I hope we can continue to engage productively here despite this early hiccup.</p>\n<p>In that thread, I see an explanation for <code>available_concurrency</code> but not an explanation for the change (but I'm getting sleepy at this point so it could be there). The term \"concurrency\" coming from C++ makes sense, and the C++ docs have a nice definition, </p>\n<div class=\"codehilite\"><pre><span></span><code>Returns the number of concurrent threads supported by the implementation. The value should be considered only a hint.\n</code></pre></div>\n<p>Compare that to </p>\n<div class=\"codehilite\"><pre><span></span><code>Returns an estimate of the default amount of parallelism a program should use.\n</code></pre></div>\n<p>The C++ docs provide a clear, non-circular, definition.</p>",
        "id": 273732673,
        "sender_full_name": "Jeff",
        "timestamp": 1646180041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479357\">Jeff</span> <a href=\"#narrow/stream/122651-general/topic/available_parallelism/near/273732673\">said</a>:</p>\n<blockquote>\n<p>In that thread, I see an explanation for <code>available_concurrency</code> but not an explanation for the change (but I'm getting sleepy at this point so it could be there). The term \"concurrency\" coming from C++ makes sense, and the C++ docs have a nice definition, </p>\n<div class=\"codehilite\"><pre><span></span><code>Returns the number of concurrent threads supported by the implementation. The value should be considered only a hint.\n</code></pre></div>\n<p>Compare that to </p>\n<div class=\"codehilite\"><pre><span></span><code>Returns an estimate of the default amount of parallelism a program should use.\n</code></pre></div>\n<p>The C++ docs provide a clear, non-circular, definition.</p>\n</blockquote>\n<p>Concurrency is not the same as parallelism, however. It actually is precisely because it is trying to gauge a system resource like threads that it says parallelism, because concurrency can be achieved via asynchronous multitasking. Instead, This function is instead intended to answer \"okay how many tasks can I actually simultaneously start and execute over the same overlapping time, without any threads needing to idle?\"</p>",
        "id": 273733220,
        "sender_full_name": "Jubilee",
        "timestamp": 1646180423
    },
    {
        "content": "<p>It avoids saying \"threads\" because the intention was to offer an answer without having to address a deeper philosophical question:<br>\n\"What IS a thread, anyways?\"</p>",
        "id": 273733411,
        "sender_full_name": "Jubilee",
        "timestamp": 1646180532
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>we got feedback that some systems might have concepts of parallelism that aren&#39;t based on hardware cores/threads. In particular, that name wouldn&#39;t convey that it also takes things like affinity and cgroups into account\n</code></pre></div>\n<p>In the case of <code>suggested_thread_count</code> or <code>available_threads</code> I imagined \"thread\" referring strictly to <a href=\"https://doc.rust-lang.org/std/thread/struct.Thread.html\"><code>Thread</code></a>, not anything outside of the standard library's own vocabulary. That would have to made clear, and that might suggest it's not as intuitive as I thought. But at least it would make it clear what we're supposed to do with that value.</p>",
        "id": 273733543,
        "sender_full_name": "Jeff",
        "timestamp": 1646180619
    },
    {
        "content": "<p>It is completely fair to say \"clearly, it means <code>std::thread::Thread</code>\" but that is in fact also circularly defined:</p>\n<blockquote>\n<p>An executing Rust program consists of a collection of native OS threads, each with their own stack and local state. Threads can be named, and provide some built-in support for low-level synchronization.</p>\n</blockquote>",
        "id": 273733791,
        "sender_full_name": "Jubilee",
        "timestamp": 1646180740
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281757\">Jubilee</span> <a href=\"#narrow/stream/122651-general/topic/available_parallelism/near/273733791\">said</a>:</p>\n<blockquote>\n<p>It is completely fair to say \"clearly, it means <code>std::thread::Thread</code>\" but that is in fact also circularly defined:</p>\n<blockquote>\n<p>An executing Rust program consists of a collection of native OS threads, each with their own stack and local state. Threads can be named, and provide some built-in support for low-level synchronization.</p>\n</blockquote>\n</blockquote>\n<p>I don't think that's quite circular, it's just named after the thing it controls, like the <code>File</code> type.</p>",
        "id": 273733912,
        "sender_full_name": "Jeff",
        "timestamp": 1646180815
    },
    {
        "content": "<p>Hmm, that's fair, but a File is comprehensible as a blob of bytes <strong>somewhere</strong>. The notion of a \"thread\" is much more nebulous.</p>",
        "id": 273734267,
        "sender_full_name": "Jubilee",
        "timestamp": 1646181032
    },
    {
        "content": "<p>People are lowering Rust to SPIRV and CUDA, and those get weird.</p>",
        "id": 273734411,
        "sender_full_name": "Jubilee",
        "timestamp": 1646181140
    },
    {
        "content": "<p>Lotta people in the original conversation e.g. refer to individual cores as \"CPUs\", which is already a pretty telling sign that we're in a vague zone, because a single physical core can do SMT and thus execute multiple threads.</p>",
        "id": 273735165,
        "sender_full_name": "Jubilee",
        "timestamp": 1646181602
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"479357\">@Jeff</span> My apologies; I did not intend to dismiss your concern in the slightest. My wording was solely to indicate that documentation doesn't get changed \"just because\", but rather because it needs an improvement. I haven't read the documentation for the method recently, which is why I said that. Documentation can almost always be improved, after all.</p>",
        "id": 273827854,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646236458
    },
    {
        "content": "<p>No problem, I will continue to try to improve my ability to document my own thoughts so that future discussions can be more substantial.</p>\n<p>I still hope that a patient reading of my comments helps to explain why I find the documentation to be a circular definition, grammatically improvable and possibly why the function would be difficult to find (except maybe for C++ users who search for \"available\" or Rust people who search for \"num_cpus\"). I think the C++ docs for <code>available_concurrency</code> are perfect and while <span class=\"user-mention\" data-user-id=\"281757\">@Jubilee</span> makes a good point that \"parallelism\" is more correct, it seems like an unnecessary limitation to start with what the C++ library calls it and work backwards (though I can see how that came about, looking that the tracking issue).</p>\n<p>From the <a href=\"https://std-dev-guide.rust-lang.org/documentation/doc-alias-policy.html\">doc alias policy</a>:</p>\n<blockquote>\n<p>We must have a reasonable expectation that people might search for the term in the documentation search. Rust's documentation provides a name search, not a full-text search; as such, we expect that people may search for plausible names,</p>\n</blockquote>\n<p>...</p>\n<blockquote>\n<p>we don't expect that people are currently searching Rust documentation for language-specific names from arbitrary languages they're familiar with, and we don't want to add that as a new documentation search feature; please don't add aliases based on your favorite language. Those mappings should live in separate guides or references</p>\n</blockquote>\n<p>Hence the logic of keeping the name relevant to the standard library's own \"vocabulary\" or something unambiguous. Since being truly unambiguous is tough with regards to cpus, cores, virtual cores, etc. I see a use of <code>thread</code> (referring to the <code>Thread</code> type) as the most comprehensible option.</p>",
        "id": 273836950,
        "sender_full_name": "Jeff",
        "timestamp": 1646239546
    },
    {
        "content": "<p>One thought I have is that</p>\n<blockquote>\n<p>Returns the number of concurrent threads supported by the implementation. The value should be considered only a hint.</p>\n</blockquote>\n<p>and</p>\n<blockquote>\n<p>Returns an estimate of the default amount of parallelism a program should use.</p>\n</blockquote>\n<p>are just the first line. It is very desirable to read the actual documentation for this method to understand what it does, because it's actually pretty bad to just use it and then throw that number blindly into a threadpool spawner.</p>",
        "id": 273848440,
        "sender_full_name": "Jubilee",
        "timestamp": 1646243470
    },
    {
        "content": "<p>My personal policy in documentation is that if the succinct documentation could be misleading, keep it vague and explain in full in the full documentation.</p>",
        "id": 273850358,
        "sender_full_name": "Jubilee",
        "timestamp": 1646244105
    },
    {
        "content": "<p>Anyways, I do think any PRs to improve the documentation will be considered~</p>",
        "id": 273887433,
        "sender_full_name": "Jubilee",
        "timestamp": 1646260114
    },
    {
        "content": "<blockquote>\n<p>Returns the number of concurrent threads supported by the implementation.</p>\n</blockquote>\n<p>FWIW, my laptop \"supports\" thousands of concurrently running threads, even though it only has 8-way parallelism (4 cores and hyperthreading). So IMO <code>available_concurrency</code> is a misnomer.<br>\nIn other words, this function does <em>not</em> say how many (concurrent) <code>Thread</code>s you can actually have. It just says how many of them can run <em>in parallel</em>.</p>\n<p>Concurrency and parallelism are technical terms (that are confused so often it's almost become a meme ;), and in this case \"parallelism\" is the more accurate one to use.</p>",
        "id": 274443781,
        "sender_full_name": "RalfJ",
        "timestamp": 1646680827
    }
]