[
    {
        "content": "<p>Is there any actively developed Hoogle style search engine for Rust? I find myself frequently looking for functions that have specific types, especially when working on rustc-related projects...</p>",
        "id": 251963668,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1630720609
    },
    {
        "content": "<p>Someone mentioned in the rustdoc discord they were working on building one, but I haven't heard from them since</p>",
        "id": 251964231,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630721223
    },
    {
        "content": "<p><a href=\"https://github.com/hkmatsumoto/roogle\">https://github.com/hkmatsumoto/roogle</a></p>",
        "id": 251964252,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1630721261
    },
    {
        "content": "<p>(appears to be WIP)</p>",
        "id": 251964254,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1630721264
    },
    {
        "content": "<p>oh cool!</p>",
        "id": 251968946,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1630726692
    },
    {
        "content": "<p>There is also basic support for this in rustdoc already! <span class=\"user-mention\" data-user-id=\"210316\">@GuillaumeGomez</span> is working on improving it</p>",
        "id": 252022714,
        "sender_full_name": "Jakub Ber√°nek",
        "timestamp": 1630785711
    },
    {
        "content": "<p>in particular, if it were possible for rustdoc to see through type aliases that would solve 75% of my current needs</p>",
        "id": 252025947,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1630789252
    },
    {
        "content": "<p>for example, rustc uses tons of type alias wrappers around predicates which mean you often don't find the right results in your searches</p>",
        "id": 252025989,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1630789303
    },
    {
        "content": "<p>I'm not sure what you mean by \"see through type aliases\" in this context - rustdoc definitely chooses to turn aliases into the actual type in some cases. If you could open an issue with the exact problem you're having that would be helpful.</p>",
        "id": 252037412,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630802383
    },
    {
        "content": "<p>Author here <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> As <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> says, it's wip and  currently __ignores__ some part of type signatures like generic bounds and where predicates. Feel free to try it on your env, I think it works fine for most of the use cases.</p>",
        "id": 252061587,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1630831557
    },
    {
        "content": "<p>I love to get some feedbacks!</p>",
        "id": 252061770,
        "sender_full_name": "Hirochika Matsumoto",
        "timestamp": 1630831776
    },
    {
        "content": "<p>Like said previously, there is a work in progress that you can see there: <a href=\"https://github.com/rust-lang/rust/compare/master...GuillaumeGomez:improve-rustdoc-search?expand=1\">https://github.com/rust-lang/rust/compare/master...GuillaumeGomez:improve-rustdoc-search?expand=1</a></p>\n<p>It's waiting for <a href=\"https://github.com/rust-lang/rust/pull/88268\">https://github.com/rust-lang/rust/pull/88268</a> to be merged first</p>",
        "id": 252070756,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630842051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/Hoogle.20for.20Rust/near/252037412\">said</a>:</p>\n<blockquote>\n<p>I'm not sure what you mean by \"see through type aliases\" in this context - rustdoc definitely chooses to turn aliases into the actual type in some cases. If you could open an issue with the exact problem you're having that would be helpful.</p>\n</blockquote>\n<p>Sure I'll open an issue with queries that having missing results (imo)</p>",
        "id": 252082362,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1630854568
    },
    {
        "content": "<p>Just to be clear: the current rustdoc search is completely broken. However, opening an issue might be useful to keep track of everything broken. :)</p>",
        "id": 252083295,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1630855625
    }
]