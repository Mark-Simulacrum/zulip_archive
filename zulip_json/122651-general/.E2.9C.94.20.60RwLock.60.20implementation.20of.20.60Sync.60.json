[
    {
        "content": "<p>We have the following in <code>rwlock.rs</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">RwLock</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Why do we need <code>T</code> to implement <code>Send</code>?</p>\n<p>(I get that we need <code>Sync</code> because the read lock allows concurrent access to <code>T</code>, which is different from <code>Mutex</code> where we only need <code>Send</code> because of the serialisation provided.)</p>\n<p>IOW, it seems to me that <code>T</code> implementing <code>Sync</code> would suffice for <code>RwLock</code> to implement <code>Sync</code>. What causes this extra <code>Send</code> requirement?</p>",
        "id": 268396026,
        "sender_full_name": "Wedson Almeida Filho",
        "timestamp": 1642515262
    },
    {
        "content": "<p>You can send a value to another thread using <code>RwLock</code> by write locking it on another thread and then swapping another value in the place of the original value.</p>",
        "id": 268396503,
        "sender_full_name": "bjorn3",
        "timestamp": 1642515459
    },
    {
        "content": "<p>Ah, yes, makes sense. Thanks, bjorn!</p>",
        "id": 268397518,
        "sender_full_name": "Wedson Almeida Filho",
        "timestamp": 1642515872
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"458794\">Wedson Almeida Filho</span> has marked this topic as resolved.</p>",
        "id": 268397556,
        "sender_full_name": "Notification Bot",
        "timestamp": 1642515896
    },
    {
        "content": "<p>FWIW, I find the \"can be swapped\" argument to be a bit of unnecessary:</p>\n<blockquote>\n<p><code>T : Send</code> iff it is safe for unique access to <code>T</code> (<em>e.g.</em>, <code>T</code> itself, <strong>or <code>&amp;mut T</code></strong>) to cross thread boundaries.</p>\n</blockquote>\n<p>If <code>RwLock&lt;T&gt; : Sync</code>, then <code>&amp;RwLock&lt;T&gt;</code> can cross thread boundaries, and once that's done, with a <code>.write().unwrap()</code>, one has access to <code>&amp;mut T</code>.</p>\n<ul>\n<li>That is, if <code>RwLock&lt;T&gt; : Sync</code>, then it is possible for <code>&amp;mut T</code> to cross thread boundaries, thus <code>T : Send</code> is <em>necessary</em> for <code>RwLock&lt;T&gt; : Sync</code>.</li>\n</ul>",
        "id": 268397775,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1642515998
    }
]