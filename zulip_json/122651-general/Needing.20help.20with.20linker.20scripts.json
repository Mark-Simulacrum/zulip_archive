[
    {
        "content": "<p>Hello ! I'm new here. Sorry if this is the wrong place for this kind of questions.</p>\n<p>I'm trying to provide a linker script to the compiler but it seems to just ignore it. Right now it contains nonsense so I'm expecting to get some sort of error telling me that, but instead my crate compiles successfully.</p>\n<p>Here's the command I use<br>\n<code>cargo rustc -vv -Z build-std=core -Z build-std-features=compiler-builtins-mem --target x86_64-unknown-uefi -- --emit link=$@</code></p>\n<p>Here's .cargo/config.toml</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[build]</span>\n<span class=\"n\">rustflags</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s\">\"-C\"</span><span class=\"p\">,</span> <span class=\"s\">\"link-arg=-Tlink.x\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</code></pre></div>\n<p>Here's the command being actually ran</p>\n<div class=\"codehilite\"><pre><span></span><code>Running `CARGO=/home/teln0/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo CARGO_BIN_NAME=syscontrol CARGO_CRATE_NAME=syscontrol CARGO_MANIFEST_DIR=/home/teln0/Documents/SysControl CARGO_PKG_AUTHORS=&#39;&#39; CARGO_PKG_DESCRIPTION=&#39;&#39; CARGO_PKG_HOMEPAGE=&#39;&#39; CARGO_PKG_LICENSE=&#39;&#39; CARGO_PKG_LICENSE_FILE=&#39;&#39; CARGO_PKG_NAME=syscontrol CARGO_PKG_REPOSITORY=&#39;&#39; CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE=&#39;&#39; CARGO_PRIMARY_PACKAGE=1 LD_LIBRARY_PATH=&#39;/home/teln0/Documents/SysControl/target/debug/deps:/home/teln0/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib:/home/teln0/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib&#39; rustc --crate-name syscontrol --edition=2018 src/main.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --emit link=build/syscontrol.efi -C metadata=9674633f429b992a -C extra-filename=-9674633f429b992a --out-dir /home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps --target x86_64-unknown-uefi -C incremental=/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/incremental -L dependency=/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps -L dependency=/home/teln0/Documents/SysControl/target/debug/deps --extern bootloader=/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/libbootloader-0a1a45f058957690.rlib --extern &#39;noprelude:compiler_builtins=/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/libcompiler_builtins-5e6b064ad6dc3ae8.rlib&#39; --extern &#39;noprelude:core=/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/libcore-8104581145f81df1.rlib&#39; -Z unstable-options -C link-arg=-Tlink.x`\n</code></pre></div>\n<p>As you can see the <code>link-arg=-Tlink.x</code> is there at the end.</p>\n<p>I tried :</p>\n<ul>\n<li>using <code>link-arg=-Wl,-Tlink.x</code> instead</li>\n<li>switching to xargo and back</li>\n<li>using some other linker but I think I'm only making things worse that way</li>\n</ul>\n<p>Does this have something to do with my target <code>target x86_64-unknown-uefi</code> ?</p>",
        "id": 263910928,
        "sender_full_name": "Teln0",
        "timestamp": 1638820398
    },
    {
        "content": "<p>I'm getting kind of desperate, no one could find a solution on the discords</p>",
        "id": 263911087,
        "sender_full_name": "Teln0",
        "timestamp": 1638820433
    },
    {
        "content": "<p>Here's <a href=\"https://github.com/shepmaster/rust-arduino-blink-led-no-core-with-cargo/blob/master/avr-atmega328p.json#L27-L35\">one way I've specified a linker script</a></p>",
        "id": 263918837,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1638822025
    },
    {
        "content": "<p>Is there no way to specify one without making a custom target ?</p>",
        "id": 263920848,
        "sender_full_name": "Teln0",
        "timestamp": 1638822907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312985\">@Teln0</span> Can you try passing <code>-Z print-link-args</code> (in addition to what you're already passing), and see if it shows you the linker command line and if it looks like you expect?</p>",
        "id": 263930887,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638828057
    },
    {
        "content": "<p>(Also, I just realized that <code>-Z print-link-args</code> should become a stable <code>-C print-link-args</code>.)</p>",
        "id": 263930913,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638828073
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/91606\">https://github.com/rust-lang/rust/pull/91606</a></p>",
        "id": 263932361,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638828787
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/Needing.20help.20with.20linker.20scripts/near/263930887\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"312985\">Teln0</span> Can you try passing <code>-Z print-link-args</code> (in addition to what you're already passing), and see if it shows you the linker command line and if it looks like you expect?</p>\n</blockquote>\n<p>Here's the output after I added it. I do see -Tlink.x at the end. No idea if that's what I want though</p>\n<div class=\"codehilite\"><pre><span></span><code>rust-lld&quot; &quot;-flavor&quot; &quot;link&quot; &quot;/NOLOGO&quot; &quot;/entry:efi_main&quot; &quot;/subsystem:efi_application&quot; &quot;/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/syscontrol-9674633f429b992a.3vtu2ohhjpaowtlx.rcgu.o&quot; &quot;/LIBPATH:/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps&quot; &quot;/LIBPATH:/home/teln0/Documents/SysControl/target/debug/deps&quot; &quot;/LIBPATH:/home/teln0/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-uefi/lib&quot; &quot;/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/libbootloader-0a1a45f058957690.rlib&quot; &quot;/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/librustc_std_workspace_core-27905b76d90a39d7.rlib&quot; &quot;/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/libcore-8104581145f81df1.rlib&quot; &quot;/home/teln0/Documents/SysControl/target/x86_64-unknown-uefi/debug/deps/libcompiler_builtins-5e6b064ad6dc3ae8.rlib&quot; &quot;/NXCOMPAT&quot; &quot;/LIBPATH:/home/teln0/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-uefi/lib&quot; &quot;/OUT:build/syscontrol.efi&quot; &quot;/OPT:REF,NOICF&quot; &quot;/DEBUG&quot; &quot;/NODEFAULTLIB&quot; &quot;-Tlink.x&quot;\n</code></pre></div>",
        "id": 263939785,
        "sender_full_name": "Teln0",
        "timestamp": 1638833452
    },
    {
        "content": "<p>A fully custom target <em>shouldn't</em> be required. I use a basic <a href=\"https://github.com/Lokathor/zygravan/blob/main/.cargo/config.toml#L8\">rustflags</a> entry similar to yours and a tier3 target (with -Zbuild-std) and the linker uses my script.</p>",
        "id": 263940400,
        "sender_full_name": "Lokathor",
        "timestamp": 1638833929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/122651-general/topic/Needing.20help.20with.20linker.20scripts/near/263940400\">said</a>:</p>\n<blockquote>\n<p>A fully custom target <em>shouldn't</em> be required. I use a basic <a href=\"https://github.com/Lokathor/zygravan/blob/main/.cargo/config.toml#L8\">rustflags</a> entry similar to yours and a tier3 target (with -Zbuild-std) and the linker uses my script.</p>\n</blockquote>\n<p>I really don't know why it doesn't work for me. Is -Tlink.x really the right argument to pass in my case ? Like I see every other argument start with / maybe mine should start with / as well ?</p>",
        "id": 263941279,
        "sender_full_name": "Teln0",
        "timestamp": 1638834640
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312985\">@Teln0</span> So, all those arguments <em>look</em> like Windows linker arguments, rather than UNIX linker arguments, but I don't know if that means the linker will be confused about accepting a linker script or not.</p>",
        "id": 263945281,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1638837825
    },
    {
        "content": "<p>Oh, yeah, if you're using the windows linker then probably <code>-T</code> isn't correct. I've always used <code>-T</code> with gnu / llvm style linkers that use <code>-</code> for arguments.</p>",
        "id": 263947866,
        "sender_full_name": "Lokathor",
        "timestamp": 1638840071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/Needing.20help.20with.20linker.20scripts/near/263945281\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"312985\">Teln0</span> So, all those arguments <em>look</em> like Windows linker arguments, rather than UNIX linker arguments, but I don't know if that means the linker will be confused about accepting a linker script or not.</p>\n</blockquote>\n<p>But why does it use windows linker arguments ? I'm running Linux.</p>",
        "id": 263964221,
        "sender_full_name": "Teln0",
        "timestamp": 1638859157
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224471\">Lokathor</span> <a href=\"#narrow/stream/122651-general/topic/Needing.20help.20with.20linker.20scripts/near/263947866\">said</a>:</p>\n<blockquote>\n<p>Oh, yeah, if you're using the windows linker then probably <code>-T</code> isn't correct. I've always used <code>-T</code> with gnu / llvm style linkers that use <code>-</code> for arguments.</p>\n</blockquote>\n<p>Do you know what would be the windows version by any chance ? Maybe it will work ?</p>",
        "id": 263964241,
        "sender_full_name": "Teln0",
        "timestamp": 1638859189
    },
    {
        "content": "<p>Do these windows-like arguments have something to do with my target ?</p>",
        "id": 263964414,
        "sender_full_name": "Teln0",
        "timestamp": 1638859355
    },
    {
        "content": "<p>UEFI uses PE executables and thus needs a windows linker.</p>",
        "id": 263965428,
        "sender_full_name": "bjorn3",
        "timestamp": 1638860592
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/Needing.20help.20with.20linker.20scripts/near/263965428\">said</a>:</p>\n<blockquote>\n<p>UEFI uses PE executables and thus needs a windows linker.</p>\n</blockquote>\n<p>Makes sense. I'll try to find out what the right argument is then and I'll come back to mark this as resolved if it works.</p>",
        "id": 263967314,
        "sender_full_name": "Teln0",
        "timestamp": 1638862686
    },
    {
        "content": "<p>Update :</p>",
        "id": 263970131,
        "sender_full_name": "Teln0",
        "timestamp": 1638865331
    },
    {
        "content": "<p>I found an option to switch to lld -C link-arg=-fuse-ld=lld</p>",
        "id": 263970156,
        "sender_full_name": "Teln0",
        "timestamp": 1638865357
    },
    {
        "content": "<p>I haven't found a way to give linker scripts to windows style linkers</p>",
        "id": 263970178,
        "sender_full_name": "Teln0",
        "timestamp": 1638865390
    },
    {
        "content": "<p><a href=\"https://docs.microsoft.com/en-us/cpp/build/reference/base-base-address?view=msvc-170\">https://docs.microsoft.com/en-us/cpp/build/reference/base-base-address?view=msvc-170</a></p>\n<p>Maybe I could use something like that to achieve the result I want without linker scripts.</p>",
        "id": 263970514,
        "sender_full_name": "Teln0",
        "timestamp": 1638865672
    },
    {
        "content": "<p>Rustc was already using lld. Just in the windows linker flavor</p>",
        "id": 263979312,
        "sender_full_name": "bjorn3",
        "timestamp": 1638871257
    },
    {
        "content": "<p>What do you want to use the linker script for?</p>",
        "id": 263979377,
        "sender_full_name": "bjorn3",
        "timestamp": 1638871302
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/Needing.20help.20with.20linker.20scripts/near/263979377\">said</a>:</p>\n<blockquote>\n<p>What do you want to use the linker script for?</p>\n</blockquote>\n<p>I wanted to add an offset to addresses in my code</p>",
        "id": 263987215,
        "sender_full_name": "Teln0",
        "timestamp": 1638876216
    },
    {
        "content": "<p>UEFI executables are relocated by the firmware. If you were to offset everything by say 10 bytes, the firmware is allowed to load the file 10 bytes earlier, thus resulting in every function and static being loaded at exactly the same place.</p>",
        "id": 263988955,
        "sender_full_name": "bjorn3",
        "timestamp": 1638877227
    },
    {
        "content": "<p>Can't I use /FIXED to prevent relocation ? My goal is to have some code with an offset and some code without</p>",
        "id": 263990601,
        "sender_full_name": "Teln0",
        "timestamp": 1638878310
    },
    {
        "content": "<p>Different UEFI implementations may allocate at different locations. Whatever value you choose for <code>/FIXED</code> there may be a UEFI implementation for which it won't work. You should probably have a bootloader or the binary itself map the kernel in the higher half of the address space after exiting boot services. Before exiting boot services the page tables are managed by the uefi firmware.</p>",
        "id": 264020984,
        "sender_full_name": "bjorn3",
        "timestamp": 1638892654
    }
]