[
    {
        "content": "<p>I have a weird problem on my hand, i need to explicitly get rustc (with my cuda codegen) to generate <code>{ i32, i1 }</code> for the return type of an extern llvm intrinsic, <a href=\"https://docs.nvidia.com/cuda/nvvm-ir-spec/index.html#nvvm-intrin-warp-level-datamove\">this intrinsic</a>. It cannot be <code>{ i32, i8 }</code> or libnvvm rejects it. I tried <code>(u32, bool)</code> but rustc just makes <code>{ i32, i1 }</code>. I could implement this as a custom intrinsic in my hand-written llvm ir shim but that requires me to push a new version of the codegen so its annoying. Anyone know of a way to get rustc to explicitly make an <code>i1</code>? I tried a lot of things but couldnt get it</p>",
        "id": 272333013,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136534
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"cp\">#[link_name = </span><span class=\"s\">\"llvm.nvvm.shfl.sync.i32\"</span><span class=\"cp\">]</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">fn</span> <span class=\"nf\">nvvm_warp_shuffle_32</span><span class=\"p\">(</span><span class=\"n\">mask</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mode</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">a</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">(</span><span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Makes rustc generate</p>\n<div class=\"codehilite\" data-code-language=\"LLVM\"><pre><span></span><code><span class=\"k\">declare</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"vg\">@llvm.nvvm.shfl.sync.i32</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"k\">zeroext</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"k\">zeroext</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"k\">zeroext</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"k\">zeroext</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"k\">zeroext</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">unnamed_addr</span><span class=\"w\"> </span><span class=\"vg\">#0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Which makes libnvvm very sad</p>",
        "id": 272333087,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136582
    },
    {
        "content": "<p>Apparently rustc can do this just fine for <code>rust-intrinsic</code>, but i cannot use that or rustc complains about unrecognized intrinsic</p>",
        "id": 272333228,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136643
    },
    {
        "content": "<p>unadjusted CC might help.</p>",
        "id": 272333278,
        "sender_full_name": "nagisa",
        "timestamp": 1645136684
    },
    {
        "content": "<p>I don't think you can. Even <code>extern \"unadjusted\"</code> probably still results in <code>i8</code>. Rustc only uses <code>i1</code> for temporary values. As soon as itbis loaded, stored or passed to a function it is always turned into an <code>i8</code>.</p>",
        "id": 272333280,
        "sender_full_name": "bjorn3",
        "timestamp": 1645136685
    },
    {
        "content": "<p>but yeah ^</p>",
        "id": 272333294,
        "sender_full_name": "nagisa",
        "timestamp": 1645136701
    },
    {
        "content": "<p>Hmm</p>",
        "id": 272333300,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136708
    },
    {
        "content": "<p>Maybe you could try adding a special case for this function in cg_nvvm?</p>",
        "id": 272333359,
        "sender_full_name": "bjorn3",
        "timestamp": 1645136746
    },
    {
        "content": "<p>mhmm nope, unadjusted doesn't work</p>",
        "id": 272333367,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136750
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/Get.20rustc.20to.20make.20.7B.20i32.2C.20i1.20.7D/near/272333359\">said</a>:</p>\n<blockquote>\n<p>Maybe you could try adding a special case for this function in cg_nvvm?</p>\n</blockquote>\n<p>I can make a shim in this <a href=\"https://github.com/Rust-GPU/Rust-CUDA/blob/master/crates/rustc_codegen_nvvm/libintrinsics.ll\">llvm ir file</a> my codegen links in, but that requires me to push a new version of the codegen too</p>",
        "id": 272333468,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136790
    },
    {
        "content": "<p>idk how versioning works if a library requires a symbol from another library to work... this is unknown territory</p>",
        "id": 272333515,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136817
    },
    {
        "content": "<p>Ill just implement it as a shim in there for now and later on i will make a codegen macro or something</p>",
        "id": 272333726,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1645136923
    }
]