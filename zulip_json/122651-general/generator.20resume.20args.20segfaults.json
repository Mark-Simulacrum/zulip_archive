[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#![feature(generators, generator_trait)]</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">io</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">ops</span>::<span class=\"p\">{</span><span class=\"n\">Generator</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">GeneratorState</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">my_scenario</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"n\">Generator</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Yield</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"nb\">&#39;static</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Return</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"n\">_arg</span>: <span class=\"nb\">String</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">my_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kr\">yield</span><span class=\"w\"> </span><span class=\"s\">&quot;What is your name?&quot;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">my_mood</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kr\">yield</span><span class=\"w\"> </span><span class=\"s\">&quot;How are you feeling?&quot;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">format</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{} is {}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">my_name</span><span class=\"p\">.</span><span class=\"n\">trim</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">my_mood</span><span class=\"p\">.</span><span class=\"n\">trim</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">my_session</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Box</span>::<span class=\"n\">pin</span><span class=\"p\">(</span><span class=\"n\">my_scenario</span><span class=\"p\">());</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">my_session</span><span class=\"p\">.</span><span class=\"n\">as_mut</span><span class=\"p\">().</span><span class=\"n\">resume</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">GeneratorState</span>::<span class=\"n\">Yielded</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">prompt</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">GeneratorState</span>::<span class=\"n\">Complete</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">println</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&quot;{}&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"k\">break</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">io</span>::<span class=\"n\">stdin</span><span class=\"p\">().</span><span class=\"n\">read_line</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>./target/debug/example\nWhat is your name?\nHello\nHow are you feeling?\nworld\nzsh: segmentation fault  ./target/debug/so\n</pre></div>",
        "id": 187845409,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1581360465
    },
    {
        "content": "<p>Since this is so new, I expect issues; where are we talking about generators nowadays?</p>",
        "id": 187845490,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1581360495
    },
    {
        "content": "<p>Nice catch!</p>",
        "id": 187850681,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1581363548
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> is it? Should I go ahead and report it?</p>",
        "id": 187851460,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1581364187
    },
    {
        "content": "<p>Sure :)</p>",
        "id": 187851517,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1581364206
    },
    {
        "content": "<p>Can do!</p>",
        "id": 187851616,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1581364299
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/69039\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69039\">https://github.com/rust-lang/rust/issues/69039</a></p>",
        "id": 187852079,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1581364626
    },
    {
        "content": "<p>Is it bad if I have a little hope that I discovered a massive miscompilation issue?</p>",
        "id": 187945419,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1581449528
    },
    {
        "content": "<p>No, finding miscompilations is always good :)</p>",
        "id": 187949447,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1581451740
    }
]