[
    {
        "content": "<p>Has there ever been an effort to clean up duplicates on <a href=\"http://thanks.rust-lang.org\">thanks.rust-lang.org</a>? I just wrote a very primitive script that checks for duplicate emails and I got <strong>656</strong> entries representing 309 people (there are 6452 listed contributors). A quick look doesn't show any false positives.</p>\n<p>I plan on sending a PR addressing the duplicates I found. It's just surprising that 5.4% of all entries are superfluous, so I wasn't sure if anyone had ever bothered to check this sort of thing before.</p>",
        "id": 262420355,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637651906
    },
    {
        "content": "<p>Worth noting that there's certainly people who have used multiple emails that aren't in the <code>.mailmap</code> file who are not caught as part of this.</p>",
        "id": 262420372,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637651937
    },
    {
        "content": "<p>If someone else wants to take this up, feel free by the way. The way the code is organized is a little odd, so it's not trivial to make the desired changes.</p>",
        "id": 262427864,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637657901
    },
    {
        "content": "<p>Basically what needs to be done is for users to be compared by email and not by email _and_ name. While this can be done by adjusting the <code>Hash</code> impl, this might not generate the most common name that's actually used.</p>",
        "id": 262427919,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637657945
    },
    {
        "content": "<p>Though now that I think about it, the most recent name would probably be better.</p>",
        "id": 262428460,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637658224
    },
    {
        "content": "<p>If you're not doing it already you could cross-reference with the list in the team repo and the .mailmap in the rust repo</p>",
        "id": 262432510,
        "sender_full_name": "The 8472",
        "timestamp": 1637660767
    },
    {
        "content": "<p>I <em>think</em> I just got it working the way I hoped — using the most recent name. The <code>.mailmap</code> file is already used, but that only covers changes in emails and not changes in names.</p>",
        "id": 262433881,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637661650
    },
    {
        "content": "<p>My goal was to make this transparent so manual adjustment wasn't necessary in the future. I'm going to look over a few specific cases before submitting a PR.</p>",
        "id": 262433915,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637661679
    },
    {
        "content": "<p>Most recent might be iffy? I think sometimes github generates commits with the person's handle instead of their name.</p>",
        "id": 262434221,
        "sender_full_name": "The 8472",
        "timestamp": 1637661856
    },
    {
        "content": "<p>As I'm sure you saw, I considered going by whichever one was used the most, but that makes it functionally impossible for more frequent contributors to change.</p>",
        "id": 262434765,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637662172
    },
    {
        "content": "<p>By looking at the top 100ish people things seem to be done using their preferred display name.</p>",
        "id": 262434887,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637662219
    },
    {
        "content": "<p>.mailmap should permit changing either of name or email (the format canonicalizes a record, as far as I recall, to (name + email) pair. That said, if we can automate some of the processing for common cases and let folks override if necessary, that seems great.</p>",
        "id": 262435878,
        "sender_full_name": "simulacrum",
        "timestamp": 1637662820
    },
    {
        "content": "<p>Sounds good. That would probably amount to checking the mailmap for email address before checking the most recent.</p>",
        "id": 262436159,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637663043
    },
    {
        "content": "<p>You may want to generate a mailmap PR with your script.</p>",
        "id": 262460508,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637676786
    },
    {
        "content": "<p>Then people could review it.</p>",
        "id": 262460519,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637676795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> What I'm doing is in the <code>rust-lang/thanks</code> repo, not <code>rust-lang/rust</code>. Nothing here actually touches the <code>.mailmap</code> file. That would be a separate step, and would cover things like bors having multiple entries.</p>",
        "id": 262525840,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637708084
    },
    {
        "content": "<p>Ah, sorry, I thought that mailmap was an <em>input</em> to your script.</p>",
        "id": 262531077,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637711884
    },
    {
        "content": "<p>Which made me think that making it an <em>output</em> as well might be useful.</p>",
        "id": 262531108,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637711906
    },
    {
        "content": "<p>On a different note...</p>",
        "id": 262531114,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637711915
    },
    {
        "content": "<p>I'd like to suggest that you may wish to hold off for a few weeks on working on such a cleanup.</p>",
        "id": 262531125,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637711928
    },
    {
        "content": "<p>There's...a lot going on right now. And a sudden cleanup of past acknowledgements of people who worked on Rust seems like poor timing right now.</p>",
        "id": 262531149,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637711955
    },
    {
        "content": "<p>Insofar as it's not at all urgent and could wait until things settle down.</p>",
        "id": 262531157,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637711965
    },
    {
        "content": "<p>I don't think there's anything wrong with doing so, and it's a helpful contribution, but it's the kind of thing best done when nobody has <em>any</em> reason whatsoever to wonder/misinterpret if it's related to any other events.</p>",
        "id": 262531443,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1637712156
    },
    {
        "content": "<p>Yeah...I could see that. I'll hold off on a PR for a little bit despite the fact it's obviously unrelated.</p>",
        "id": 262533303,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637713877
    },
    {
        "content": "<p>Just curious, is there any reason git2 needs to be used? All of the information could be parsed from the output of <code>git log</code>, no? I think it would be <em>significantly</em> faster and more flexible. Canonicalizing the users/emails could be done as a separate step.</p>\n<p>I'm not opposed to rewriting the \"brains\" of the contribution counter to be more efficient, even if that means redoing it from scratch.</p>",
        "id": 262546163,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637729065
    },
    {
        "content": "<p>As it may be, calling out to git every time you need information is horrendously inefficient. On my machine, the full build (in release mode) takes 98 seconds. This includes generating the static webpages. I haven't yet written sufficient code to test all repositories, apply the mailmap to certain parts, etc., but a quick test shows an enormous improvement in speed. Getting the log for <code>rust-lang/rust</code> takes ~1.5 seconds and getting the relevant stats (commits including coauthors and reviews) takes 2.3 seconds in <strong>debug mode</strong> (0.3 seconds in release). So at first glance this appears to be very promising performance-wise.</p>",
        "id": 262572889,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637751443
    },
    {
        "content": "<p>No real reason, seems like a great thing to me</p>",
        "id": 262577398,
        "sender_full_name": "simulacrum",
        "timestamp": 1637754077
    },
    {
        "content": "<p>Ahh...I see why it's so slow. Runtime is quadratic — for every release it's re-parsing the full history then just finding the difference.</p>",
        "id": 262672848,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637824224
    },
    {
        "content": "<p>I need to think of a simple-ish way to handle submodules if I'm not using <code>git2</code>. That'll be the primary concern. Other than that it's quite simple (for the main repository it's single-passs).</p>",
        "id": 262672863,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637824259
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> since I saw you wrote the <code>.mailmap</code> handling, I thought you might be interested in this: <a href=\"https://git-scm.com/docs/git-check-mailmap\">https://git-scm.com/docs/git-check-mailmap</a></p>",
        "id": 262672934,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637824344
    },
    {
        "content": "<p>+11/-4 diff to reduce build time by 70%: <a href=\"https://github.com/rust-lang/thanks/pull/37\">https://github.com/rust-lang/thanks/pull/37</a></p>",
        "id": 262674817,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1637826529
    },
    {
        "content": "<p>My name is listed thrice. Once with 4 contribs (1971), and twice with one contrib (3848, 3848). But <code>git shortlog -sne --all</code> only lists me once with 4 contribs. I wonder what is going on here. Also, I have started going by my full legal name online now :( So,  my name might change too.</p>",
        "id": 263133015,
        "sender_full_name": "Ashok Gautham Jadatharan",
        "timestamp": 1638273090
    },
    {
        "content": "<p>Oof, I'm listed twice with the same name, but <code>.mailmap</code> looked fine last time I checked.</p>",
        "id": 264310188,
        "sender_full_name": "Laurențiu",
        "timestamp": 1639060699
    },
    {
        "content": "<p>I am both Jubilee and Jubilee Young, I think.</p>",
        "id": 264366660,
        "sender_full_name": "Jubilee",
        "timestamp": 1639084186
    },
    {
        "content": "<p>Note that git shortlog only incorporates rust-lang/rust, whereas thanks incorporates all submodules -- we only use rust-lang/rust's .mailmap though.</p>",
        "id": 264367391,
        "sender_full_name": "simulacrum",
        "timestamp": 1639084546
    },
    {
        "content": "<p>I haven't completed the new backend to calculate it, but what I'm going to do is pass the emails to the mailmap for rust-lang/rust unconditionally. Then we could just centralize the list instead of trying to do it all separately.</p>",
        "id": 264376032,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639088584
    },
    {
        "content": "<p>I thought we already did that?</p>",
        "id": 264376205,
        "sender_full_name": "simulacrum",
        "timestamp": 1639088682
    },
    {
        "content": "<p>(I may be misremembering)</p>",
        "id": 264376214,
        "sender_full_name": "simulacrum",
        "timestamp": 1639088689
    },
    {
        "content": "<p>Apologies for not getting to your currently posted PR, by the way, time keeps running away from me :)</p>",
        "id": 264376237,
        "sender_full_name": "simulacrum",
        "timestamp": 1639088706
    },
    {
        "content": "<p>Don't worry about it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 264376364,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639088766
    },
    {
        "content": "<p>The current backend requires both the name and email to match iirc, where I intend on just giving it the email.</p>",
        "id": 264376423,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639088801
    },
    {
        "content": "<p>Ah. Yeah, that seems okay -- I think in theory you can 'canonicalize' from a name if I recall the format right? But that seems like a rare and not necessary to support use case, and we can probably assume email is enough.</p>",
        "id": 264376537,
        "sender_full_name": "simulacrum",
        "timestamp": 1639088864
    },
    {
        "content": "<p>For the current PR I mostly wanted to take a bit of time to make sure things are still the same after merging it -- if you could post a comment confirming that I'm happy to merge it</p>",
        "id": 264376621,
        "sender_full_name": "simulacrum",
        "timestamp": 1639088895
    },
    {
        "content": "<p>(my vague recollection is that the current impl had a reason for being that way, iirc with submodule commits showing up in the wrong release, but it may be that your impl also works out)</p>",
        "id": 264376671,
        "sender_full_name": "simulacrum",
        "timestamp": 1639088921
    },
    {
        "content": "<p>As in giving it a name and getting the pair back? I don't think that's possible, but it's also not necessary here. You can either give it the pair or just the email, getting back the canonical pair.</p>",
        "id": 264376849,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639089016
    },
    {
        "content": "<p>The open PR doesn't actually touch submodules. It only has the optimization for the top-level repo.</p>",
        "id": 264376915,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639089061
    },
    {
        "content": "<p>Right, the problem if I'm recalling correctly was that we'd pick up the submodule commits as new when they were moved from submodule to subtree, and so incorrectly attribute them to the wrong release</p>",
        "id": 264377657,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089480
    },
    {
        "content": "<p>By \"move\" you mean when the submodule was updated in the main repo?</p>",
        "id": 264377831,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639089555
    },
    {
        "content": "<p>Either way the open PR doesn't touch that iirc</p>",
        "id": 264377857,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639089570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> that's still an existing bug AFAIK</p>",
        "id": 264378004,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639089628
    },
    {
        "content": "<p>it is?</p>",
        "id": 264378022,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089637
    },
    {
        "content": "<p>I was pretty sure it was fixed at one point, though maybe .. not?</p>",
        "id": 264378037,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089647
    },
    {
        "content": "<p>It only happens when the subtree is first added</p>",
        "id": 264378084,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639089670
    },
    {
        "content": "<p>And there haven't been any added since rustfmt</p>",
        "id": 264378104,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639089679
    },
    {
        "content": "<p>well, we generate a fresh each time</p>",
        "id": 264378244,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089734
    },
    {
        "content": "<p>and <a href=\"https://thanks.rust-lang.org/rust/1.54.0/\">https://thanks.rust-lang.org/rust/1.54.0/</a> does not show an abnormal amount of commits from rustfmt</p>",
        "id": 264378256,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089743
    },
    {
        "content": "<p>So I think it has been fixed?</p>",
        "id": 264378274,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089751
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt</span> <a href=\"#narrow/stream/122651-general/topic/thanks.2Erust-lang.2Eorg.20cleanup/near/264377831\">said</a>:</p>\n<blockquote>\n<p>By \"move\" you mean when the submodule was updated in the main repo?</p>\n</blockquote>\n<p>no, when the submodule is removed and replaced with subtree (which 'inlines' the commits into rust-lang/rust)</p>",
        "id": 264378295,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089771
    },
    {
        "content": "<p>Ah gotcha. Didn't know we used subtrees.</p>",
        "id": 264378343,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639089795
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/thanks/commit/5ef8ad1059582cb3f848af9e16ea1d1bcbfbda10\">https://github.com/rust-lang/thanks/commit/5ef8ad1059582cb3f848af9e16ea1d1bcbfbda10</a> was meant to fix the issue I'm discussing</p>",
        "id": 264378354,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089802
    },
    {
        "content": "<p>in any case, I'm happy to run the diff myself, but that's basically the blocker</p>",
        "id": 264378387,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089823
    },
    {
        "content": "<p>(it'll just take a bit until I get to it)</p>",
        "id": 264378404,
        "sender_full_name": "simulacrum",
        "timestamp": 1639089833
    },
    {
        "content": "<p>I'll try to remember to do so tonight</p>",
        "id": 264378467,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639089850
    },
    {
        "content": "<p>Good to keep in mind for my new backend too</p>",
        "id": 264378498,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639089864
    },
    {
        "content": "<p>Oh hmm, maybe so - I forgot they're regenerated fresh each release</p>",
        "id": 264378655,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639089962
    },
    {
        "content": "<p>(every day, in fact, but yes)</p>",
        "id": 264378872,
        "sender_full_name": "simulacrum",
        "timestamp": 1639090079
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://thanks.rust-lang.org/rust/1.54.0/\">https://thanks.rust-lang.org/rust/1.54.0/</a></p>\n</blockquote>\n<p>Just noticed I'm listed twice as well: \"Wesley Wiser\" and \"Wesley Wiser\". I assume since I use multiple emails.</p>",
        "id": 264383267,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1639093143
    },
    {
        "content": "<p>huh, I've got 3 entries in all-time</p>",
        "id": 264383454,
        "sender_full_name": "cuviper",
        "timestamp": 1639093294
    },
    {
        "content": "<p>My estimate is that on the all-time list there are ~500-600 entries that are duplicates. It's significant</p>",
        "id": 264383534,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1639093340
    },
    {
        "content": "<p>i'm another dupe as well <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 264467146,
        "sender_full_name": "pierwill",
        "timestamp": 1639151924
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/thanks/issues/38\">https://github.com/rust-lang/thanks/issues/38</a></p>",
        "id": 264467691,
        "sender_full_name": "pierwill",
        "timestamp": 1639152103
    },
    {
        "content": "<p>ah <a href=\"https://github.com/rust-lang/thanks/issues/32#issuecomment-776638638\">https://github.com/rust-lang/thanks/issues/32#issuecomment-776638638</a></p>",
        "id": 264467963,
        "sender_full_name": "pierwill",
        "timestamp": 1639152200
    }
]