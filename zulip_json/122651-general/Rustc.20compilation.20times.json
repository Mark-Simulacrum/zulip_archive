[
    {
        "content": "<p>Out of curiosity, how long does iterating on rustc take on your machine? I'm currently running <code>time ./x.py test src/test/ui</code> and i'm about 10 minutes in, still compiling</p>",
        "id": 187764889,
        "sender_full_name": "matprec",
        "timestamp": 1581266691
    },
    {
        "content": "<p>I'm on a laptop though, so i'm not expecting anything exceptional</p>",
        "id": 187764911,
        "sender_full_name": "matprec",
        "timestamp": 1581266745
    },
    {
        "content": "<p>15-20 minutes on a ryzen 1800x (8 core/16 thread) for a build to stage 1 std</p>",
        "id": 187765354,
        "sender_full_name": "simulacrum",
        "timestamp": 1581267656
    },
    {
        "content": "<p>and that's with cached llvm</p>",
        "id": 187765361,
        "sender_full_name": "simulacrum",
        "timestamp": 1581267663
    },
    {
        "content": "<p>That's rough, on a desktop with a pretty powerful cpu... what do you do in the meantime? Context switch to another copy of rustc?</p>",
        "id": 187768426,
        "sender_full_name": "matprec",
        "timestamp": 1581273801
    },
    {
        "content": "<p>@<strong>Matthias Prechtl</strong> Make sure you pass <code>-i</code> for incremental and <code>--stage 1</code> to only build the compiler once (one or both of these might be the default for <code>x.py test</code> nowadays). Also, I often don't run the entire test suite locally, just certain directories. I usually rely on CI to run the full suite when I feel my changes are probably correct.</p>",
        "id": 187768682,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581274309
    },
    {
        "content": "<p>Since I work mostly in <code>rustc_mir</code>, which is pretty late in the compilation pipeline, it only takes a few minutes for a build/test cycle.</p>",
        "id": 187768869,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581274673
    },
    {
        "content": "<p>If you are working on the AST, things will be slower.</p>",
        "id": 187768912,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581274715
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> thanks for the pointer, i'll try that one :) Curious why that's not the default?</p>",
        "id": 187768979,
        "sender_full_name": "matprec",
        "timestamp": 1581274837
    },
    {
        "content": "<p>Not sure, maybe just intertia. You modify <code>config.toml</code> to ensure incremental is on by default (like I said, that may already be the case).</p>",
        "id": 187769049,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581274941
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>./x.py clean --llvm-skip-rebuild TRUE\ntime ./x.py build\n</pre></div>\n\n\n<p>Takes 26min 24s</p>",
        "id": 187769052,
        "sender_full_name": "matprec",
        "timestamp": 1581274952
    },
    {
        "content": "<p>On an i7-8550U</p>",
        "id": 187769069,
        "sender_full_name": "matprec",
        "timestamp": 1581275001
    },
    {
        "content": "<p>I'm actually kind of impressed, given that the r7 1800X from <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> takes 15-20mins</p>",
        "id": 187769118,
        "sender_full_name": "matprec",
        "timestamp": 1581275071
    },
    {
        "content": "<p>I'll try the incremental version and post an update :)</p>",
        "id": 187769130,
        "sender_full_name": "matprec",
        "timestamp": 1581275108
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"202314\">@matprec</span> incremental will only be faster when you're making changes. The initial build will be slower</p>",
        "id": 187769145,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581275146
    },
    {
        "content": "<p>Do make sure you're always using stage 1 though.</p>",
        "id": 187769152,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581275162
    },
    {
        "content": "<p>For almost all changes you don't need a stage 2 build</p>",
        "id": 187769194,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581275206
    },
    {
        "content": "<p>Yeah that's expected :) is a newline change enough to make the incremental checker think it needs to rebuild?</p>",
        "id": 187769199,
        "sender_full_name": "matprec",
        "timestamp": 1581275225
    },
    {
        "content": "<p>Because then i'll likely try a \"worst case\" incremental build with a change in the parser</p>",
        "id": 187769204,
        "sender_full_name": "matprec",
        "timestamp": 1581275271
    },
    {
        "content": "<p>Not sure <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> Feel free to try</p>",
        "id": 187769264,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581275394
    },
    {
        "content": "<p>(I don't work on incremental, and <code>x.py</code> is a bit different than <code>cargo</code> so it might be relying on file timestamps)</p>",
        "id": 187769320,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581275490
    },
    {
        "content": "<p>Oh, one more thing. Use <code>x.py check</code>, not <code>x.py build</code> when you're still actively developing something. It will return results much faster if there's an error in your code.</p>",
        "id": 187769378,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581275623
    },
    {
        "content": "<p>10min sometimes. Maybe I'm remembering wrong too :)</p>",
        "id": 187769432,
        "sender_full_name": "simulacrum",
        "timestamp": 1581275709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"202314\">@matprec</span> One more one more thing. To build just the stage1 compiler with just  the stage1 standard library artifacts, it's <code>./x.py build --stage 1 src/libstd</code></p>",
        "id": 187769507,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581275876
    },
    {
        "content": "<p>If you add a <a href=\"https://github.com/rust-lang/rustup#working-with-custom-toolchains-and-local-builds\" target=\"_blank\" title=\"https://github.com/rust-lang/rustup#working-with-custom-toolchains-and-local-builds\">custom toolchain to <code>rustup</code></a> (I call mine <code>stage1</code>), which points to the build directory containing the stage 1 compiler, you can run <code>rustc +stage1 file.rs</code> to test your compiler without worrying about <code>x.py</code></p>",
        "id": 187769642,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581276087
    },
    {
        "content": "<p>This means I can alternate between editing files and running individual tests without having to rebuild every time.</p>",
        "id": 187769688,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1581276153
    },
    {
        "content": "<ol>\n<li>Build incremental rustc</li>\n<li>Touch <code>src/librustc_lexer/src/cursor.rs</code></li>\n<li><code>time ./x.py build -i --stage 1</code></li>\n</ol>\n<p>Results in</p>\n<div class=\"codehilite\"><pre><span></span>real    3m15,065s\nuser    13m27,142s\nsys     0m42,841s\n</pre></div>\n\n\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 187769976,
        "sender_full_name": "matprec",
        "timestamp": 1581276793
    },
    {
        "content": "<p>Thanks so much, your input has been extremely valuable <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> !</p>",
        "id": 187769982,
        "sender_full_name": "matprec",
        "timestamp": 1581276828
    },
    {
        "content": "<p>I just found <a href=\"https://rust-lang.github.io/rustc-guide/building/suggested.html\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/building/suggested.html\">https://rust-lang.github.io/rustc-guide/building/suggested.html</a> :) Still crawling through the docs, there's just so much to absorb :D</p>",
        "id": 187770085,
        "sender_full_name": "matprec",
        "timestamp": 1581277000
    },
    {
        "content": "<p>Yeah that guide is really helpful</p>",
        "id": 187770090,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1581277023
    },
    {
        "content": "<p>Is it acceptable to run tests with the <code>-i</code> flag?  For instance, <code>./x.py test -i --stage 1 [path to test module]</code>.  I am 10 mins into the compile to run one test without <code>-i</code> after an initial build... :)</p>",
        "id": 187845301,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1581360403
    },
    {
        "content": "<p>Significantly faster to run tests with <code>-i</code>.  Cut my time down to ~1/3 of that without it</p>",
        "id": 187846439,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1581360964
    },
    {
        "content": "<p>I'd say go for it, afaik incremental shouldn't affect the behaviour of the compiled rustc</p>",
        "id": 187850879,
        "sender_full_name": "matprec",
        "timestamp": 1581363714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262810\">@Chris Simpkins</span> ^</p>",
        "id": 187850953,
        "sender_full_name": "matprec",
        "timestamp": 1581363759
    },
    {
        "content": "<p>ty!</p>",
        "id": 187851307,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1581364059
    },
    {
        "content": "<p>I have set <code>incremental=true</code> in my <code>config.toml</code> so I don't need to pass that flag manually all the time any more ;)</p>",
        "id": 188088175,
        "sender_full_name": "RalfJ",
        "timestamp": 1581584130
    },
    {
        "content": "<p>so, yes, definitely acceptable to set that flag for local testing</p>",
        "id": 188088181,
        "sender_full_name": "RalfJ",
        "timestamp": 1581584139
    },
    {
        "content": "<p>Ah very nice! Thank you!</p>",
        "id": 188102822,
        "sender_full_name": "Chris Simpkins",
        "timestamp": 1581598231
    }
]