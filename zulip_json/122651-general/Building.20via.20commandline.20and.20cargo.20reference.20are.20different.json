[
    {
        "content": "<p>Hi all, I'm trying to use the glam-rs project with no_std: <a href=\"https://github.com/bitshifter/glam-rs\">https://github.com/bitshifter/glam-rs</a> and we're hitting a really bizzare issue (been talking with bitshifter, they don't know what's happening either). This PR added <code>no_std</code> support, via referencing <code>num-traits</code> and enabling its <code>libm</code> feature <a href=\"https://github.com/bitshifter/glam-rs/pull/88\">https://github.com/bitshifter/glam-rs/pull/88</a></p>\n<p>If you clone the project and run <code>cargo build --no-default-features --features libm</code> in the repo, it builds fine.<br>\nIf you create a new empty project, and add <code>glam = { git = \"https://github.com/bitshifter/glam-rs.git\", default-features = false, features = [\"libm\"] }</code> to its dependencies, it fails to build.<br>\nFor future reproducibility, the current HEAD of the repo is <a href=\"https://github.com/rust-lang/rust/commit/454e9c810feadc594aa5519943cbf7d3bcc8ef23\">454e9c810feadc594aa5519943cbf7d3bcc8ef23</a>.</p>\n<p>The reason I'm asking here instead of in <code>glam-rs</code> channels is to ask why those are inconsistent (not necessarily figure out a fix) - why does one work, and the other doesn't? It feels like a cargo bug to me, but idk.</p>",
        "id": 216591368,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605262341
    },
    {
        "content": "<p>Update: bitshifter has pushed a fix, and so the current HEAD works both ways. However, I'm still curious as to how the two builds are different.</p>",
        "id": 216596854,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605265980
    },
    {
        "content": "<p>If you add <code>-v</code> to show the rustc invocations, what is the difference between the two cases?</p>",
        "id": 216602856,
        "sender_full_name": "bjorn3",
        "timestamp": 1605270116
    },
    {
        "content": "<p>Ah right, forgot those two existed :P - looks like the only difference other than paths and hashes is that the cmdline to build glam has <code>-C incremental=/home/khyperia/me/glam-rs/target/debug/incremental</code>, and the cargo reference has <code>--cap-lints allow</code></p>",
        "id": 216603961,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605270950
    },
    {
        "content": "<p>oh, looks like <code>num_traits</code> (a dependency of <code>glam</code>) is compiled differently: on the commandline, it is compiled with <code>--cfg 'feature=\"default\"' --cfg 'feature=\"libm\"' --cfg 'feature=\"std\"'</code>, but on the cargo reference, it is compiled with just <code>--cfg 'feature=\"libm\"'</code>. That's... really weird, considering the commandline contained <code>--no-default-features</code>?</p>",
        "id": 216605253,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605271722
    },
    {
        "content": "<p>Yep, that pretty much looks like a <code>dev-dependency</code> infecting a non dev one (in this case, with the <code>default</code> [set of] feature[s] for <code>num-traits</code>)</p>",
        "id": 216610009,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1605274316
    },
    {
        "content": "<p>You can try to \"debug\" the behavior using <code>cargo clean &amp;&amp; CARGO_LOG=trace cargo c --no-default-features --features libm -vv</code> and then <code>grep</code> the hell out of that <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 216610339,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1605274448
    },
    {
        "content": "<p>FWIW, I've been doing a bit of that atm, and only when I commented out the dev-dependencies (and  thus the benches) out of the <code>Cargo.toml</code>, did the <code>default</code> feature of <code>num-traits</code> disappear</p>",
        "id": 216610433,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1605274494
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 216611517,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1605274925
    },
    {
        "content": "<p>Aah okay, looks like glam has a dev-dependency on criterion, which <em>does</em> has a dependency on num-traits but default-features = false, however, criterion depends on plotters, which depends on num-traits with default-features = true</p>",
        "id": 216611683,
        "sender_full_name": "Ashley Hauck",
        "timestamp": 1605275027
    },
    {
        "content": "<p>Demo: <a href=\"https://asciinema.org/a/8sanMmZL7mFb389yhFz1iTAeX\">https://asciinema.org/a/8sanMmZL7mFb389yhFz1iTAeX</a></p>",
        "id": 216613360,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1605275750
    },
    {
        "content": "<p>FYI, <a href=\"https://doc.rust-lang.org/cargo/reference/unstable.html#resolver\">https://doc.rust-lang.org/cargo/reference/unstable.html#resolver</a><br>\nis an unstable set of flags that separate dev/regular deps features.</p>",
        "id": 216615716,
        "sender_full_name": "Eh2406",
        "timestamp": 1605276818
    }
]