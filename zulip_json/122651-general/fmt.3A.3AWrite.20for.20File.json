[
    {
        "content": "<p>Why doesn't File implement fmt::Write? I want my code to accept both files and strings (through <code>&lt;W: fmt::Write&gt;(mut w: W)</code>) but File doesn't implement fmt::Write.</p>\n<p>And I can't switch to io::Write because then it wouldn't work for strings (and I'm only dealing with Unicode anyway).</p>",
        "id": 275313623,
        "sender_full_name": "Noah Lev",
        "timestamp": 1647302273
    },
    {
        "content": "<p>In theory it could, but if you had both traits important, that would result in ambiguity issues when writing to files.</p>",
        "id": 275327123,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647316806
    },
    {
        "content": "<p>I've never really seen the point in the fmt::Write trait</p>",
        "id": 275334132,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647325777
    },
    {
        "content": "<p>io::Write can't be used for writing to strings or other utf-8 encoded values. while it could be implemented, it would force utf-8 validation.</p>",
        "id": 275340139,
        "sender_full_name": "bjorn3",
        "timestamp": 1647331674
    },
    {
        "content": "<p>Right. Could we provide some shim that turns an io::Write into an fmt::Write? Eg <code>Utf8&lt;File&gt;</code></p>",
        "id": 275341523,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647332671
    },
    {
        "content": "<p><del>then replace <code>String</code> with <code>Utf8&lt;Vec&lt;u8&gt;&gt;</code></del></p>",
        "id": 275341625,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1647332739
    },
    {
        "content": "<p>I did exactly that the other day: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=6067bfa6c5a855a52752bd28f0df2e8e\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=6067bfa6c5a855a52752bd28f0df2e8e</a></p>",
        "id": 275386315,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647357149
    },
    {
        "content": "<p><a href=\"https://www.reddit.com/r/rust/comments/t69sld/is_there_a_way_to_allow_either_stdfmtwrite_or/hzafhls/?context=3\">https://www.reddit.com/r/rust/comments/t69sld/is_there_a_way_to_allow_either_stdfmtwrite_or/hzafhls/?context=3</a></p>",
        "id": 275386356,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647357169
    },
    {
        "content": "<p>FWIW I have typically had pretty good success just taking &amp;mut String or returning a String in such cases. Being generic over (File, String) typically isn't worth the extra compile time, IMO.</p>\n<p>(You probably want <code>BufWriter&lt;File&gt;</code> if you're using fmt::Write APIs, in any case).</p>",
        "id": 275386923,
        "sender_full_name": "simulacrum",
        "timestamp": 1647357414
    },
    {
        "content": "<p>In this case, I think it will be worth it since the code currently concatenates a ton of small strings together before writing them into a file, and doing this would allow writing them incrementally.</p>",
        "id": 275607515,
        "sender_full_name": "Noah Lev",
        "timestamp": 1647492970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/fmt.3A.3AWrite.20for.20File/near/275386315\">said</a>:</p>\n<blockquote>\n<p>I did exactly that the other day: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=6067bfa6c5a855a52752bd28f0df2e8e\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=6067bfa6c5a855a52752bd28f0df2e8e</a></p>\n</blockquote>\n<p>Thanks, I think I will do something like this! Especially since the polymorphism between fmt and io is only internal to the library so ergonomics are less important.</p>",
        "id": 275609060,
        "sender_full_name": "Noah Lev",
        "timestamp": 1647495092
    },
    {
        "content": "<p>You may want to bring this up in <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a></p>",
        "id": 275649230,
        "sender_full_name": "bstrie",
        "timestamp": 1647522490
    }
]