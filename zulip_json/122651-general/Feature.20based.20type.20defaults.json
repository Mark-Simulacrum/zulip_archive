[
    {
        "content": "<p>Hey, is there a way to have a type default that’s dependent on features?</p>\n<p>For example if I have <code>struct A&lt;T=B&gt;(T);</code> Is there a way for <code>T</code> have a default when the <code>b</code> feature is enabled, and have no default when that feature is disabled without redefining the whole type?</p>",
        "id": 222217367,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1610276843
    },
    {
        "content": "<p>Type parameters can take attributes like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">S</span><span class=\"o\">&lt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"cp\">#[cfg(feature = </span><span class=\"s\">\"foo\"</span><span class=\"cp\">)]</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"cp\">#[cfg(not(feature = </span><span class=\"s\">\"foo\"</span><span class=\"cp\">))]</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"></span>\n<span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I don't think it can be simplified much more than that.</p>",
        "id": 222225742,
        "sender_full_name": "Eric Huss",
        "timestamp": 1610290572
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> At least it’s possible to do without redefining the whole type, thanks for your response!</p>",
        "id": 223167808,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1611007490
    }
]