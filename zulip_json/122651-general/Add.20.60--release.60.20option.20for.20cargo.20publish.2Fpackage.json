[
    {
        "content": "<p>During package verification, cargo use default BuildConfig profile: <a href=\"https://github.com/rust-lang/cargo/blob/master/src/cargo/ops/cargo_package.rs#L699\">https://github.com/rust-lang/cargo/blob/master/src/cargo/ops/cargo_package.rs#L699</a> which leads to <a href=\"https://github.com/rust-lang/cargo/blob/964a16a28e234a3d397b2a7031d4ab4a428b1391/src/cargo/core/compiler/build_config.rs#L74\">https://github.com/rust-lang/cargo/blob/964a16a28e234a3d397b2a7031d4ab4a428b1391/src/cargo/core/compiler/build_config.rs#L74</a></p>\n<p>Then cargo will use <code>debug</code> profile for verification.</p>\n<p>As a developer I'll be happy to have the ability to specify which profile should be used. It'll help me to avoid extra building for the case where I already have all dependencies compiled for <code>release</code> profile.</p>\n<p>I'm absolutely new for zulip, cargo's development process, etc.<br>\nPlease let me know if it is a wrong place for that kind of proposals and lead me to the correct one.</p>\n<p>Everyone have a great day!<br>\nMaxV</p>",
        "id": 209352621,
        "sender_full_name": "MaxV",
        "timestamp": 1599549611
    },
    {
        "content": "<p>do you mean that you want to build external crates in release mode ?</p>",
        "id": 209369279,
        "sender_full_name": "lzutao",
        "timestamp": 1599561256
    },
    {
        "content": "<p>It sounds like you're saying you want <code>cargo publish</code> and similar to verify in <code>--release</code> mode.</p>",
        "id": 209411768,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599582797
    },
    {
        "content": "<p>Hm, I wonder if we could get Cargo to check the common profiles (debug and release) and just use whichever is closest to \"done\"</p>",
        "id": 209413188,
        "sender_full_name": "simulacrum",
        "timestamp": 1599583550
    },
    {
        "content": "<p>I wouldn't like it to be non-deterministic though</p>",
        "id": 209413293,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599583598
    },
    {
        "content": "<p>maybe non-deterministic is the wrong word - it should be obvious what it's doing</p>",
        "id": 209413324,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599583622
    },
    {
        "content": "<p>Yeah, it should do a specific profile.</p>",
        "id": 209414090,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599583966
    },
    {
        "content": "<p>If anything, I actually think it <em>should</em> build whichever one you haven't been using because then it'll be more likely to catch breakage. ;)</p>",
        "id": 209414122,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599583982
    },
    {
        "content": "<p>Not that \"it doesn't work in debug mode\" is very common, but still.</p>",
        "id": 209414142,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599583990
    },
    {
        "content": "<p>I thought <code>cargo publish</code> deliberately used a fresh <code>target</code> dir for the build test -- if nothing else to make sure it works with <a href=\"http://crates.io\">crates.io</a> dependencies rather than local paths</p>",
        "id": 209414752,
        "sender_full_name": "cuviper",
        "timestamp": 1599584295
    },
    {
        "content": "<p>so this wouldn't use your existing <code>--release</code> artifacts anyway</p>",
        "id": 209414822,
        "sender_full_name": "cuviper",
        "timestamp": 1599584325
    },
    {
        "content": "<p>Yeah, I think it rebuilds from scratch even if things have been previously built.</p>",
        "id": 209415354,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599584571
    },
    {
        "content": "<p>Ah, yeah, I think that's true. Probably also because presumably it uses a different feature resolver, one not affected by the workspace features?</p>",
        "id": 209417850,
        "sender_full_name": "simulacrum",
        "timestamp": 1599585894
    },
    {
        "content": "<p>I've actually had projects that only work in release mode because of link errors when it's under-optimized</p>",
        "id": 209424878,
        "sender_full_name": "Lokathor",
        "timestamp": 1599589384
    },
    {
        "content": "<p>though i could just turn up the opt-level on debug mode i suppose</p>",
        "id": 209424919,
        "sender_full_name": "Lokathor",
        "timestamp": 1599589406
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> Yeah, if you need a certain minimum optimization level to function, you should probably set that in the debug profile.</p>",
        "id": 209427723,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599590865
    },
    {
        "content": "<p>I'm guessing it's that optimization turns a libcall into something inlined?</p>",
        "id": 209427816,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1599590896
    },
    {
        "content": "<p>yep</p>",
        "id": 209429199,
        "sender_full_name": "Lokathor",
        "timestamp": 1599591531
    }
]