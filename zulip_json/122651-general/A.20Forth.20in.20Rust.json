[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"133169\">@matklad</span>! I have an off-topic compiler/parser question for you, if you have a minute :)</p>",
        "id": 262315555,
        "sender_full_name": "James Munns",
        "timestamp": 1637586255
    },
    {
        "content": "<p>I don't but I also can't resist :)</p>",
        "id": 262315595,
        "sender_full_name": "matklad",
        "timestamp": 1637586278
    },
    {
        "content": "<p>I currently have a (very bad, no good) forth compiler here: <a href=\"https://github.com/anachro-rs/anachro-forth/blob/8294f004bdab6a0dee2ff905146f30deef28264d/core/src/compiler.rs#L109-L264\">https://github.com/anachro-rs/anachro-forth/blob/8294f004bdab6a0dee2ff905146f30deef28264d/core/src/compiler.rs#L109-L264</a></p>",
        "id": 262315606,
        "sender_full_name": "James Munns",
        "timestamp": 1637586285
    },
    {
        "content": "<p>I'm planning to rewrite it to use an AST, to make sure that I have things like nested constructs working (they don't currently)</p>",
        "id": 262315640,
        "sender_full_name": "James Munns",
        "timestamp": 1637586312
    },
    {
        "content": "<p>Do you have an off the cuff \"just do it like this, silly\" approach that I should use for a line-oriented parser/compiler?</p>",
        "id": 262315692,
        "sender_full_name": "James Munns",
        "timestamp": 1637586344
    },
    {
        "content": "<p>Not really. I guess, if it is <em>really</em> line oriented, then you shouldn't have nesting at all. If however you do have nesting, then, well, just write the parser :)</p>",
        "id": 262316024,
        "sender_full_name": "matklad",
        "timestamp": 1637586512
    },
    {
        "content": "<p>Yeah, for example I might have something like:</p>\n<div class=\"codehilite\"><pre><span></span><code>: test 10 0 do if star then 5 0 do star loop loop ;\n</code></pre></div>\n<p>Which should be roughly parsed as:</p>\n<div class=\"codehilite\"><pre><span></span><code>: test\n  10 0 do\n    if\n      star\n    then\n    5 0 do\n      star\n    loop\n  loop\n;\n</code></pre></div>",
        "id": 262316249,
        "sender_full_name": "James Munns",
        "timestamp": 1637586643
    },
    {
        "content": "<p>I was thinking about making one pass that generates an AST, basically globbing up the matched scope, then compiling it recursively</p>",
        "id": 262316472,
        "sender_full_name": "James Munns",
        "timestamp": 1637586798
    },
    {
        "content": "<p>BTW, I'm asking you, because the <code>calc</code> exercise we wrote for training is basically what pushed me towards building a Forth :D</p>",
        "id": 262316899,
        "sender_full_name": "James Munns",
        "timestamp": 1637587048
    },
    {
        "content": "<p>Let me know if any magical thoughts/patterns come to mind, otherwise I'm gunna go blindly try and write a parser :)</p>",
        "id": 262317390,
        "sender_full_name": "James Munns",
        "timestamp": 1637587340
    },
    {
        "content": "<p>I guess just try writing recusive descent parser? <a href=\"https://compilers.iecc.com/crenshaw/\">https://compilers.iecc.com/crenshaw/</a> if you want the quickest and dirtiest way to get there</p>",
        "id": 262319074,
        "sender_full_name": "matklad",
        "timestamp": 1637588266
    },
    {
        "content": "<p><a href=\"https://craftinginterpreters.com/\">https://craftinginterpreters.com/</a> is good too</p>",
        "id": 262323216,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1637590258
    },
    {
        "content": "<p>I think you might already know it, but \"real\" Forth systems (or ANS Forth systems) doesn't really use an AST. Instead it has interpretation / compilation/ runtime semantics for each word, and can switch between them. Parsing full text without interpretation is not really possible for complex cases...</p>",
        "id": 262347668,
        "sender_full_name": "Charles Lew",
        "timestamp": 1637600527
    },
    {
        "content": "<p>Here's the draft standard full text for reference: <a href=\"https://www.taygeta.com/forth/dpans.html\">https://www.taygeta.com/forth/dpans.html</a></p>",
        "id": 262347724,
        "sender_full_name": "Charles Lew",
        "timestamp": 1637600561
    },
    {
        "content": "<p>that sounds not great for IDE stuff</p>",
        "id": 262349439,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1637601326
    }
]