[
    {
        "content": "<p>When failing CI due to some changed test output one often has to rebase and then rebuild the whole compiler to fix it.</p>\n<p>As CI already compiled the rebased compiler and ran all tests, afaict it should be fairly quick to run <code>./x.py test --bless</code> on CI and rebase + push the changes as a new commit to the PR.</p>\n<p>Would it be possible to add a command like <code>@bors bless</code> which automatically does this?</p>",
        "id": 206675130,
        "sender_full_name": "lcnr",
        "timestamp": 1597224869
    },
    {
        "content": "<p>I would also be interested in <code>@bors fmt</code>, I very often forget to run it before pushing</p>",
        "id": 206683140,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597231914
    },
    {
        "content": "<p>probably not bors, but yeah both of these should be possible. it's been something I've wanted to get done for a while</p>",
        "id": 206683478,
        "sender_full_name": "simulacrum",
        "timestamp": 1597232255
    },
    {
        "content": "<p>If you need help I would gladly spend a few hours looking into this, considering how much time this can save, especially for people with less beefy systems</p>",
        "id": 206683690,
        "sender_full_name": "lcnr",
        "timestamp": 1597232465
    },
    {
        "content": "<p>I can try and write up some notes, yeah!</p>",
        "id": 206683717,
        "sender_full_name": "simulacrum",
        "timestamp": 1597232504
    },
    {
        "content": "<p>I'll ping you when I do that, hopefully later today</p>",
        "id": 206683722,
        "sender_full_name": "simulacrum",
        "timestamp": 1597232513
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> one thing - do you know if --bless still fails on the first build? that is, can we just always bless tests in CI?</p>",
        "id": 206683845,
        "sender_full_name": "simulacrum",
        "timestamp": 1597232615
    },
    {
        "content": "<p>That would make this a lot easier</p>",
        "id": 206683866,
        "sender_full_name": "simulacrum",
        "timestamp": 1597232633
    },
    {
        "content": "<p>bless doesn't fail on the first build</p>",
        "id": 206683875,
        "sender_full_name": "lcnr",
        "timestamp": 1597232641
    },
    {
        "content": "<p>afaik</p>",
        "id": 206683893,
        "sender_full_name": "lcnr",
        "timestamp": 1597232643
    },
    {
        "content": "<p>Hm okay, we'll add another flag then or something. I'll write it up later :)</p>",
        "id": 206683933,
        "sender_full_name": "simulacrum",
        "timestamp": 1597232665
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/triagebot/issues/760\">https://github.com/rust-lang/triagebot/issues/760</a></p>",
        "id": 206689581,
        "sender_full_name": "simulacrum",
        "timestamp": 1597236974
    },
    {
        "content": "<p>This seems potentially dangerous for mir-opt tests, since they <em>only</em> rely on blessing (so there's no other correctness criteria other than \"MIR matches file\")</p>",
        "id": 206689707,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597237075
    },
    {
        "content": "<p>Seems like it would be easy to slip in unnoticed bugs that way</p>",
        "id": 206689794,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597237104
    },
    {
        "content": "<p>I would expect this change to require human intervention</p>",
        "id": 206689809,
        "sender_full_name": "lcnr",
        "timestamp": 1597237110
    },
    {
        "content": "<p>So we would use <code>@triage-bot bless</code> to fix this manually without having to do stuff locally</p>",
        "id": 206689848,
        "sender_full_name": "lcnr",
        "timestamp": 1597237134
    },
    {
        "content": "<p>the same would hold for the compare-mode tests</p>",
        "id": 206689854,
        "sender_full_name": "lqd",
        "timestamp": 1597237140
    },
    {
        "content": "<p>So triagebot would copy the actual output from CI into the file?</p>",
        "id": 206689924,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597237195
    },
    {
        "content": "<p>(instead of actually doing <code>--bless</code> during the post-merge bors run)</p>",
        "id": 206690002,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597237217
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/122651-general/topic/.40bors.20bless/near/206690002\">said</a>:</p>\n<blockquote>\n<p>(instead of actually doing <code>--bless</code> during the post-merge bors run)</p>\n</blockquote>\n<p>oh no, that seems dangerous to me</p>",
        "id": 206690030,
        "sender_full_name": "lcnr",
        "timestamp": 1597237234
    },
    {
        "content": "<p>right, if you look at the issue opened by <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> it adds a new '--bless-into' flag</p>",
        "id": 206690043,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237239
    },
    {
        "content": "<p>so that generating the files is separated from changing the expected files</p>",
        "id": 206690067,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237251
    },
    {
        "content": "<p>oh yeah, for sure, we're not automatically doing this</p>",
        "id": 206690085,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237264
    },
    {
        "content": "<p>we're just giving you a commit that applies blessing</p>",
        "id": 206690105,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237271
    },
    {
        "content": "<p>and it's still expected that reviewer (and author) check that the blessing of tests actually makes sense</p>",
        "id": 206690142,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> basically the failure mode here shouldn't really be different than \"author ran --bless locally, pushed changes, and that was r+ed without review\"</p>",
        "id": 206690241,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237331
    },
    {
        "content": "<p>ah, alright, that seems fine</p>",
        "id": 206690275,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1597237354
    },
    {
        "content": "<p>could <code>@bors fmt</code> work automatically though? that shouldn't ever go wrong</p>",
        "id": 206690278,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237355
    },
    {
        "content": "<p>though I do admit that the <em>ease</em> of accidentally missing something may be increased, since blessing would take much less time</p>",
        "id": 206690289,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237360
    },
    {
        "content": "<p>but <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> if reviewers don't review we really can't do much</p>",
        "id": 206690309,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237378
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Eventually, perhaps we'll squash in formatting automatically (i.e., run over your PR, formatting each file, and squashing those changes into your commits)</p>",
        "id": 206690358,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237412
    },
    {
        "content": "<p>but that's \"hard\" or at least I'm really hesitant to force push to author's branches</p>",
        "id": 206690381,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237434
    },
    {
        "content": "<p>maybe it's not that bad though!</p>",
        "id": 206690387,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237440
    },
    {
        "content": "<p>that would be amazing, I have <em>so</em> many <code>git commit -m rustfmt</code> commits haha</p>",
        "id": 206690425,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237442
    },
    {
        "content": "<p>really there should be no rustfmt commits on master, since authors should be squashing those in, e.g., via git absorb</p>",
        "id": 206690476,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237475
    },
    {
        "content": "<p>git absorb looks kind of neat</p>",
        "id": 206690524,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237504
    },
    {
        "content": "<p>can you add that to rustc-dev-guide?</p>",
        "id": 206690536,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237509
    },
    {
        "content": "<p>I don't have the time</p>",
        "id": 206690554,
        "sender_full_name": "simulacrum",
        "timestamp": 1597237518
    },
    {
        "content": "<p>I'll open an issue</p>",
        "id": 206690570,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237527
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/824\">https://github.com/rust-lang/rustc-dev-guide/issues/824</a></p>",
        "id": 206690728,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1597237592
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/triagebot/issues/760\">https://github.com/rust-lang/triagebot/issues/760</a></p>\n<p>will only get to this after the 26th, so if someone else wants to work on this before this feel free to do so.</p>",
        "id": 207060250,
        "sender_full_name": "lcnr",
        "timestamp": 1597564033
    }
]