[
    {
        "content": "<p>I'm the maintainer of <code>darling</code>, a proc-macro crate that has ~500 stars and ~15M downloads. I'm currently considering adding a provided method to the crate's fundamental trait (<a href=\"https://github.com/TedDriggs/darling/pull/177\">PR here</a>), and would love some additional reviewing eyes on it.</p>\n<p>Some specific questions:</p>\n<ol>\n<li>Does adding a provided method counts as a breaking change, meaning I need to bump the minor version?</li>\n<li>Is <code>from_none</code> a good name for this, or should I choose something different to reflect this method's narrower use-case?</li>\n</ol>",
        "id": 278698412,
        "sender_full_name": "Ted Driggs",
        "timestamp": 1649772830
    },
    {
        "content": "<p>Oh I thought you were talking about a <code>#[fundemental]</code> trait. I looked at the source and it looks like it isn't. See <a href=\"https://doc.rust-lang.org/cargo/reference/semver.html#possibly-breaking-adding-a-defaulted-trait-item\">this</a></p>",
        "id": 278699011,
        "sender_full_name": "fee1-dead",
        "timestamp": 1649773074
    },
    {
        "content": "<p>As for naming I think <code>from_none</code> is fine.</p>",
        "id": 278699237,
        "sender_full_name": "fee1-dead",
        "timestamp": 1649773161
    },
    {
        "content": "<p>Sorry, it's \"fundamental\" to the crate; I forgot that's a term with a proper meaning to Rust.</p>",
        "id": 278699741,
        "sender_full_name": "Ted Driggs",
        "timestamp": 1649773375
    },
    {
        "content": "<p>I do believe this is not a breaking change</p>",
        "id": 278701487,
        "sender_full_name": "Conrad Ludgate",
        "timestamp": 1649774104
    },
    {
        "content": "<p>agree this is not a breaking change</p>",
        "id": 278704904,
        "sender_full_name": "mejrs",
        "timestamp": 1649775509
    },
    {
        "content": "<p>it could produce an inference error if another trait with that method for the same type is in scope, but iirc inference errors are not considered breaking</p>",
        "id": 278705074,
        "sender_full_name": "mejrs",
        "timestamp": 1649775569
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"488050\">Ted Driggs</span> <a href=\"#narrow/stream/122651-general/topic/darling.20API.20change.20review/near/278698412\">said</a>:</p>\n<blockquote>\n<p>Some specific questions:</p>\n<ol>\n<li>Does adding a provided method counts as a breaking change</li>\n</ol>\n</blockquote>\n<p>This one there's an official answer to: <a href=\"https://rust-lang.github.io/rfcs/1105-api-evolution.html#minor-change-adding-a-defaulted-item\">https://rust-lang.github.io/rfcs/1105-api-evolution.html#minor-change-adding-a-defaulted-item</a></p>",
        "id": 278723066,
        "sender_full_name": "scottmcm",
        "timestamp": 1649783498
    }
]