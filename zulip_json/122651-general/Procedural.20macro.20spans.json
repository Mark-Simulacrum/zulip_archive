[
    {
        "content": "<p>I've written a procedural macro, but I don't think the spans on the generated code are quite right - is there any tooling for debugging this? I thought I remembered reading about something like that...</p>",
        "id": 208128750,
        "sender_full_name": "Diggsey",
        "timestamp": 1598466247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295632\">@Diggory Blake</span> On nightly, you can pass <code>-Z span-debug</code>, which will make the <code>Debug</code> impl for <code>Span</code> print out actual location information</p>",
        "id": 208145488,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1598474353
    },
    {
        "content": "<p>thanks - I'm also having a problem: I would like to replace uses of \"self\" with a different identifier, but the \"visit_mut\" functionality of syn doesn't seem to be able to look into macros like <code>println!</code> - is there a way I can force inner macros to be expanded?</p>",
        "id": 208156346,
        "sender_full_name": "Diggsey",
        "timestamp": 1598480389
    },
    {
        "content": "<p>Do you just need to look at the tokens provided to the macro?</p>",
        "id": 208239591,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1598544724
    },
    {
        "content": "<p>or do you actually need to see the code that the macro invocation produces?</p>",
        "id": 208239620,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1598544736
    },
    {
        "content": "<p>If it's the former, you should be able to parse the <code>TokenStream</code> from <code>syn::Macro</code> (<a href=\"https://docs.rs/syn/1.0.39/syn/struct.Macro.html\">https://docs.rs/syn/1.0.39/syn/struct.Macro.html</a>)</p>",
        "id": 208239739,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1598544791
    }
]