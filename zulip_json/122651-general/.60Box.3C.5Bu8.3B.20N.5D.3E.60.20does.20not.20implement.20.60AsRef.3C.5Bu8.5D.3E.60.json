[
    {
        "content": "<p>Hello!<br>\nIs there a reason <code>[u8; N]</code> implements <code>AsRef&lt;[u8]&gt;</code> but <code>Box&lt;[u8; N]&gt;</code> does not?<br>\nHere is my attempt to show the issue on the playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b6ec388ba0607020eac3d5917b3324d2\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b6ec388ba0607020eac3d5917b3324d2</a></p>",
        "id": 233305040,
        "sender_full_name": "marmeladema",
        "timestamp": 1617709969
    },
    {
        "content": "<p>Oh but it's even weirder, the first impl that works in stable, does not work in beta anymore.</p>",
        "id": 233305266,
        "sender_full_name": "marmeladema",
        "timestamp": 1617710092
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> I think it might be because Box&lt;[u8; N]&gt; only implements AsRef&lt;[u8; N]&gt; but not AsRef&lt;[u8]&gt; (docs at <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#impl-AsRef%3CT%3E\">https://doc.rust-lang.org/std/boxed/struct.Box.html#impl-AsRef%3CT%3E</a> ). I'm guessing that [u8; N] is not coerced to [u8] in generics, because a generic is not an actual value and coerced unsizing only works on actual values. Just a wild guess though!</p>",
        "id": 233321083,
        "sender_full_name": "Pointerbender",
        "timestamp": 1617716777
    },
    {
        "content": "<p>That's also why it probably does work on Box&lt;[u8]&gt;: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=47d4dfb3f7bec2c64279c8eb31aeaa17\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=47d4dfb3f7bec2c64279c8eb31aeaa17</a></p>",
        "id": 233321785,
        "sender_full_name": "Pointerbender",
        "timestamp": 1617717053
    },
    {
        "content": "<p>Sorry I got my first playground link wrong. The right one is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e5c5df307960712c7810d2cae0e64a0c\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e5c5df307960712c7810d2cae0e64a0c</a></p>",
        "id": 233335788,
        "sender_full_name": "marmeladema",
        "timestamp": 1617721635
    },
    {
        "content": "<p>I think the same reasoning applies there. <code>Box&lt;[u8; N]&gt;</code> implements <code>AsRef&lt;[u8; N]&gt;</code>, but does not implement AsRef&lt;[u8]&gt; which is required by the trait bounds on <code>AsBytes</code>.</p>",
        "id": 233344088,
        "sender_full_name": "Pointerbender",
        "timestamp": 1617724262
    },
    {
        "content": "<p>As for the reason why <code>Box&lt;[u8; N]&gt;</code> does not yet implement <code>AsRef&lt;[u8]&gt;</code>, too, I don't know :) It would have to add something like <code>impl AsRef&lt;U&gt; for Box&lt;T&gt; where T: Unsize&lt;U&gt; {}</code>, which is still missing currently</p>",
        "id": 233344721,
        "sender_full_name": "Pointerbender",
        "timestamp": 1617724510
    }
]