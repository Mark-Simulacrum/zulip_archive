[
    {
        "content": "<p>For <a href=\"https://github.com/rust-lang/rust/pull/87073\">https://github.com/rust-lang/rust/pull/87073</a> I made some changes to the logic in linkcheck (<a href=\"https://github.com/rust-lang/rust/pull/87073/commits/688174e88e4200617e8fb82241f7a41eb9ced602\">https://github.com/rust-lang/rust/pull/87073/commits/688174e88e4200617e8fb82241f7a41eb9ced602</a>).  Who should review that? I think it's a reasonable change but I feel a little uncomfortable unilaterally approving it.</p>",
        "id": 249938285,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629344376
    },
    {
        "content": "<p>If you're asking about the Windows error check, I think it's probably fine.  An alternative would be to just check for <code>::</code> and not bother looking at the error code, but either way seems fine to me.</p>\n<p>It looks like it needs to be formatted, though.</p>",
        "id": 249939159,
        "sender_full_name": "Eric Huss",
        "timestamp": 1629345553
    },
    {
        "content": "<blockquote>\n<p>It looks like it needs to be formatted, though.</p>\n</blockquote>\n<p>x.py fmt doesn't complain <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> </p>\n<div class=\"codehilite\"><pre><span></span><code>[nix-shell:~/rustc3]$ x fmt src/tools/linkchecker/\nUpdating only changed submodules\nSubmodules updated in 0.01 seconds\n    Finished dev [unoptimized + debuginfo] target(s) in 0.17s\nskip untracked path main.rs during rustfmt invocations\nBuild completed successfully in 0:00:00\n\n[nix-shell:~/rustc3]$ git d\n\n[nix-shell:~/rustc3]$\n</code></pre></div>",
        "id": 249939240,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629345612
    },
    {
        "content": "<p>hmm I wonder if that's related to the cfg</p>",
        "id": 249939268,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629345637
    },
    {
        "content": "<p>I don't think it is the cfg, <code>./x.py fmt</code> works for me.</p>",
        "id": 249939389,
        "sender_full_name": "Eric Huss",
        "timestamp": 1629345786
    },
    {
        "content": "<p>that's so strange</p>",
        "id": 249939398,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629345800
    },
    {
        "content": "<p>well, I'll just manually format it</p>",
        "id": 249939401,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629345806
    },
    {
        "content": "<p>Why are there now links with <code>::</code>?</p>",
        "id": 249939450,
        "sender_full_name": "Eric Huss",
        "timestamp": 1629345844
    },
    {
        "content": "<p>it's a broken link - are you asking why it's now broken?</p>",
        "id": 249939477,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629345864
    },
    {
        "content": "<p>it used to only be documented in std, but now that it's documented in core, the link to <code>alloc</code> doesn't resolve</p>",
        "id": 249939494,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629345880
    },
    {
        "content": "<p>and the alternative is to use relative links, which will break on re-exports</p>",
        "id": 249939505,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629345895
    },
    {
        "content": "<p>ah, I see</p>",
        "id": 249939506,
        "sender_full_name": "Eric Huss",
        "timestamp": 1629345897
    },
    {
        "content": "<p>Please r? me on those changes at least, I'd like to take a look at the CARGO_PKG_NAME being necessary - likely can do so tomorrow.</p>",
        "id": 249939598,
        "sender_full_name": "simulacrum",
        "timestamp": 1629345991
    },
    {
        "content": "<p>CARGO_PKG_NAME is being used for links like this:</p>\n<div class=\"codehilite\"><pre><span></span><code> #[doc = concat!(&quot;[`exit`]: &quot;, include_str!(concat!(&quot;../../&quot;, env!(&quot;CARGO_PKG_NAME&quot;), &quot;/primitive_docs/process_exit.md&quot;)))]\n</code></pre></div>",
        "id": 249939708,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629346130
    },
    {
        "content": "<p>I asked t-libs a couple times whether they had concerns but no one ever responded :(</p>",
        "id": 249939713,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629346143
    },
    {
        "content": "<p>Anything requiring new env variables for compilation (even if Cargo implicitly passes them) I'd appreciate a ping on, usually has relevance in a number of places.</p>",
        "id": 249939829,
        "sender_full_name": "simulacrum",
        "timestamp": 1629346314
    },
    {
        "content": "<p>gotcha, I can do that in the future :)</p>",
        "id": 249939873,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629346325
    },
    {
        "content": "<p>yeah I probably should have realized when I had to update a run-make test</p>",
        "id": 249939880,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629346340
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> so I did <a href=\"https://github.com/Mark-Simulacrum/rust/commit/d41c141051ef83234257d8aa4d2e11224f778383\">https://github.com/Mark-Simulacrum/rust/commit/d41c141051ef83234257d8aa4d2e11224f778383</a> locally and that seems to pass the src/test/rustdoc tests and work ok in the few links I clicked -- is there a reason you didn't do that? I feel like I'm missing something obvious?</p>",
        "id": 250035129,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400620
    },
    {
        "content": "<p>I don't really see any docs or discussion of why CARGO_PKG_NAME helps</p>",
        "id": 250035186,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400644
    },
    {
        "content": "<p>Umm. That probably works. Do the links work from the primitives re-exported in <code>std::primitive</code>?</p>",
        "id": 250035327,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629400687
    },
    {
        "content": "<p>Those aren't inlined, right?</p>",
        "id": 250035510,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400757
    },
    {
        "content": "<p>So they're just the same pages</p>",
        "id": 250035524,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400764
    },
    {
        "content": "<p>yup you're right</p>",
        "id": 250035562,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629400780
    },
    {
        "content": "<p>ok that's way simpler, let's do that <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> thanks for taking a look!</p>",
        "id": 250035596,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629400791
    },
    {
        "content": "<p>Anyway, if that works, happy to force push a squashed version to your branch</p>",
        "id": 250035603,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400793
    },
    {
        "content": "<p>(and r+)</p>",
        "id": 250035615,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400799
    },
    {
        "content": "<p>that would be great :) thank you!</p>",
        "id": 250037449,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629401594
    },
    {
        "content": "<p>(done)</p>",
        "id": 250045299,
        "sender_full_name": "simulacrum",
        "timestamp": 1629405187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I found why this broke - <code>include_str!</code> is relative to the current file, not the crate root, so <code>../primitive_docs</code> will always include the <code>std</code> version, not <code>core</code></p>",
        "id": 250228778,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567624
    },
    {
        "content": "<p>I'm going to revert that change and set it back to waiting on review</p>",
        "id": 250228781,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567638
    },
    {
        "content": "<p>hmm</p>",
        "id": 250228782,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567638
    },
    {
        "content": "<p>honestly, I'd rather we just duplicate the file maybe?</p>",
        "id": 250228788,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567658
    },
    {
        "content": "<p>like, with a CI check that they're the same</p>",
        "id": 250228793,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567667
    },
    {
        "content": "<p>that's a <em>lot</em> of docs to duplicate :/</p>",
        "id": 250228794,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567672
    },
    {
        "content": "<p>maybe even a symlink will work?</p>",
        "id": 250228801,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567684
    },
    {
        "content": "<p>and you'd have to make the check smart and know that the links can be different</p>",
        "id": 250228802,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567684
    },
    {
        "content": "<p>no, I mean, you don't need to change any of the contents, right?</p>",
        "id": 250228806,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567701
    },
    {
        "content": "<p>oh oh I see, if you use <code>include_str!(../core/primitive_docs.rs)</code> from core the links will be right</p>",
        "id": 250228810,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567707
    },
    {
        "content": "<p>er, not quite what I was thinking, but maybe</p>",
        "id": 250228857,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567727
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/Who.20should.20review.20changes.20to.20linkchecker.3F/near/250228801\">said</a>:</p>\n<blockquote>\n<p>maybe even a symlink will work?</p>\n</blockquote>\n<p>do symlinks work on windows?</p>",
        "id": 250228858,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567729
    },
    {
        "content": "<p>not sure</p>",
        "id": 250228860,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567734
    },
    {
        "content": "<p>hmm my computer is still in the mail so I can't test on windows just now</p>",
        "id": 250228867,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567757
    },
    {
        "content": "<p>but even just a <code>cp std/foo core/foo</code> would be fine with me, personally, and checked by tidy or something</p>",
        "id": 250228869,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/Who.20should.20review.20changes.20to.20linkchecker.3F/near/250228869\">said</a>:</p>\n<blockquote>\n<p>but even just a <code>cp std/foo core/foo</code> would be fine with me, personally, and checked by tidy or something</p>\n</blockquote>\n<p>I would rather try to get symlinks working first if possible - that seems like less effort all around</p>",
        "id": 250228881,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567787
    },
    {
        "content": "<p>let me see who helped with getting download-ci-llvm working on windows</p>",
        "id": 250228890,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567807
    },
    {
        "content": "<p>in theory symlinks work - <a href=\"https://blogs.windows.com/windowsdeveloper/2016/12/02/symlinks-windows-10/\">https://blogs.windows.com/windowsdeveloper/2016/12/02/symlinks-windows-10/</a></p>",
        "id": 250228897,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567824
    },
    {
        "content": "<p>I'm not sure if the relative path in rustc \"looks through\" symlinks</p>",
        "id": 250228943,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567851
    },
    {
        "content": "<blockquote>\n<p>Starting with Windows 10 Insiders build 14972, symlinks can be created without needing to elevate the console as administrator.</p>\n</blockquote>\n<p>oh <em>wow</em></p>",
        "id": 250228945,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567855
    },
    {
        "content": "<p>that's new</p>",
        "id": 250228948,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567859
    },
    {
        "content": "<p>(nor am I sure what the <em>right</em> behavior is)</p>",
        "id": 250228949,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567859
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/Who.20should.20review.20changes.20to.20linkchecker.3F/near/250228943\">said</a>:</p>\n<blockquote>\n<p>I'm not sure if the relative path in rustc \"looks through\" symlinks</p>\n</blockquote>\n<p>that much I can test on linux</p>",
        "id": 250228954,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567869
    },
    {
        "content": "<p>It's best to avoid symlinks on Windows</p>",
        "id": 250228964,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629567900
    },
    {
        "content": "<p>hmm, does git support hard links?</p>",
        "id": 250228984,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567920
    },
    {
        "content": "<p>or does it just treat them as copies?</p>",
        "id": 250228985,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567928
    },
    {
        "content": "<p>hm, not sure, but seems unlikely</p>",
        "id": 250228988,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567943
    },
    {
        "content": "<p>Git does not do anything with hard links, it just treats them as copies.</p>",
        "id": 250228999,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629567962
    },
    {
        "content": "<p>but honestly the \"copy the file\" behavior seems not terrible, ultimately it's not like these docs get edited that much</p>",
        "id": 250229042,
        "sender_full_name": "simulacrum",
        "timestamp": 1629567989
    },
    {
        "content": "<p>ok, I'll write the tidy check</p>",
        "id": 250229043,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629567989
    },
    {
        "content": "<p>ideally there should just be a single source</p>",
        "id": 250229168,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629568198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"303710\">@Gary Guo</span> open to suggestions <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 250229217,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629568213
    },
    {
        "content": "<p>I'll have a look at the PR later to see if I can come up some sensible suggestions</p>",
        "id": 250229236,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629568248
    },
    {
        "content": "<p>the commit you want is <a href=\"https://github.com/rust-lang/rust/pull/87073/commits/7dec1e7b440b1e0911550e43cfd5bcd0a2d709d1\">https://github.com/rust-lang/rust/pull/87073/commits/7dec1e7b440b1e0911550e43cfd5bcd0a2d709d1</a>, I wouldn't recommend looking at the whole PR</p>",
        "id": 250229255,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629568312
    },
    {
        "content": "<p>I wonder if we can introduce a special type of intradoc link, which allows a item path and a relative URL path</p>",
        "id": 250231061,
        "sender_full_name": "Gary Guo",
        "timestamp": 1629571009
    },
    {
        "content": "<p>I am not willing to introduce more hacks to rustdoc for this. There are plenty of other working alternatives.</p>",
        "id": 250231143,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1629571122
    }
]