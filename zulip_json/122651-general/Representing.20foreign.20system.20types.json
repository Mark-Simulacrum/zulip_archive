[
    {
        "content": "<p>Hey, how would you go about representing a type that's native to a system/platform but has no primitive equivalent in Rust? For example if I had a function from a system that returns a 256 bit integer, or a 80 bit floating point number, how could I create an ABI compatible type for that?</p>",
        "id": 224194476,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1611760234
    },
    {
        "content": "<p>generally that needs compiler support, I think</p>",
        "id": 224194703,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1611760324
    },
    {
        "content": "<p>like <code>__m256</code> for example <a href=\"https://doc.rust-lang.org/core/arch/x86_64/struct.__m256.html\">https://doc.rust-lang.org/core/arch/x86_64/struct.__m256.html</a></p>",
        "id": 224194778,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1611760351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span> So it wouldn't be enough for example to just have type that fits that layout like <code>pub struct __m256(f32, f32, f32, f32, f32, f32, f32, f32);</code> in my own lib code with <code>#[repr(C)]</code>?</p>",
        "id": 224195499,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1611760599
    },
    {
        "content": "<p>Depends on the specific platform ABI, but I believe the SIMD types are usually passed in SIMD registers, and normal structs aren't</p>",
        "id": 224195627,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1611760648
    },
    {
        "content": "<p>And x87 floats would be passed in x87 registers, but <code>[u8; 10]</code> or something similar won't</p>",
        "id": 224195761,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1611760688
    },
    {
        "content": "<p>Hmm, annoying, but not a deal breaker. For other reasons I'm using a fork of the compiler for this platform anyway, so just means more work. You wouldn't happen to know where the code to add the translation is? It seems to be abit all over the place in <code>stdarch</code>, it seems like there's a proc macro that handles it?</p>",
        "id": 224201029,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1611762773
    },
    {
        "content": "<p>For SIMD types there is <code>#[repr(simd)]</code>. There is nothing for x87 floats.</p>",
        "id": 224201440,
        "sender_full_name": "bjorn3",
        "timestamp": 1611762944
    },
    {
        "content": "<p>The x87 floats is what I'm most interested in. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 224201632,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1611763011
    },
    {
        "content": "<p>I think you'd probably need to make a new lang item for that following the other primitive types</p>",
        "id": 224202070,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1611763160
    },
    {
        "content": "<p>Alright, thanks for the info everyone!</p>",
        "id": 224203821,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1611763588
    }
]