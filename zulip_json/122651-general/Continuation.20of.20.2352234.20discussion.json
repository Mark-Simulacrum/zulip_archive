[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> This works, but isn't really ergonomic for users, as they have to manually import the internal macro</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">mod</span> <span class=\"nn\">macros</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">meta_macro</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"cp\">#[macro_export]</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">created</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">meta_macro</span><span class=\"o\">!</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"cp\">#[macro_export]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">macro_rules</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">consumer</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">created</span><span class=\"o\">!</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Works here</span>\n<span class=\"w\">    </span><span class=\"n\">consumer</span><span class=\"o\">!</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">mod</span> <span class=\"nn\">other</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// Not here, have to manually `use` it</span>\n<span class=\"w\">    </span><span class=\"k\">crate</span>::<span class=\"n\">consumer</span><span class=\"o\">!</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>I also tried to use <code>use $crate::created;</code>, but original error</p>",
        "id": 190321586,
        "sender_full_name": "Chase Wilson",
        "timestamp": 1583954954
    },
    {
        "content": "<p>I also attempted to move the meta-macro's declaration and calling to the root of the crate, but it still produces an error</p>",
        "id": 190322137,
        "sender_full_name": "Chase Wilson",
        "timestamp": 1583955253
    },
    {
        "content": "<p>I understand the reasoning behind the change and I know it's a really specific usecase, but it really hurts library authors trying to do this cleanly</p>",
        "id": 190322216,
        "sender_full_name": "Chase Wilson",
        "timestamp": 1583955315
    },
    {
        "content": "<p>Well, I certainly agree that it's annoying.</p>",
        "id": 190327971,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1583958664
    },
    {
        "content": "<p>It's rather a hard-to-fix bug, than a rule that we'd <em>want</em> to be in the language.</p>",
        "id": 190328035,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1583958711
    },
    {
        "content": "<p>Ok, thank you for your help!</p>",
        "id": 190330019,
        "sender_full_name": "Chase Wilson",
        "timestamp": 1583959917
    }
]