[
    {
        "content": "<p>right-o</p>",
        "id": 148642041,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543329953
    },
    {
        "content": "<p>do we still have the <code>dropck_eyepatch</code> and <code>#[unsafe_destructor_blind_to_params]</code>?</p>",
        "id": 148642102,
        "sender_full_name": "centril",
        "timestamp": 1543329992
    },
    {
        "content": "<p>We should remove <code>#[unsafe_destructor_blind_to_params]</code>  if we haven't already</p>",
        "id": 148642128,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330032
    },
    {
        "content": "<p>&lt;<a href=\"https://github.com/rust-lang/rust/issues/34761\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34761\">https://github.com/rust-lang/rust/issues/34761</a>&gt;</p>",
        "id": 148642140,
        "sender_full_name": "centril",
        "timestamp": 1543330051
    },
    {
        "content": "<p>I believe <code>dropck_eyepatch</code> is the feature gate for <code>#[may_dangle</code>], which we need to keep until we have a <del>more general</del> better solution to the problem it is solving.</p>",
        "id": 148642149,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330068
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> what was the problem again?</p>",
        "id": 148642202,
        "sender_full_name": "centril",
        "timestamp": 1543330107
    },
    {
        "content": "<p>The destructor for <code>Vec&lt;T&gt;</code></p>",
        "id": 148642210,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330122
    },
    {
        "content": "<p>is guaranteed to run without running any code for instances of <code>T</code> (apart from their own destructors)</p>",
        "id": 148642226,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330149
    },
    {
        "content": "<p>which means its sound to e.g. have a <code>Vec</code> where the elements hold references to other elements of the <code>Vec</code></p>",
        "id": 148642245,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330178
    },
    {
        "content": "<p>If a user tries to implement <code>Vec</code> themselves</p>",
        "id": 148642251,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330190
    },
    {
        "content": "<p>and does not opt into the <code>dropck_eyepatch</code></p>",
        "id": 148642255,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330196
    },
    {
        "content": "<p>they (may) discover that their version of a vec is not as expressive as <code>Vec</code> in the stdlib</p>",
        "id": 148642315,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330228
    },
    {
        "content": "<p>since their version cannot store cyclic structures</p>",
        "id": 148642320,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330237
    },
    {
        "content": "<p>There's an issue about this, hold on</p>",
        "id": 148642329,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330255
    },
    {
        "content": "<p>(and let me rename this divergent topic)</p>",
        "id": 148642338,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@Mazdak Farrokhzad</span> okay you can read more here: &lt;<a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#why-we-need-an-escape-hatch\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#why-we-need-an-escape-hatch\">https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#why-we-need-an-escape-hatch</a>&gt;</p>",
        "id": 148642485,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330407
    },
    {
        "content": "<p>cheers</p>",
        "id": 148642503,
        "sender_full_name": "centril",
        "timestamp": 1543330421
    },
    {
        "content": "<p>and of course far far more gory (and <strong>outdated</strong>) detail is available in &lt;<a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0769-sound-generic-drop.md\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/blob/master/text/0769-sound-generic-drop.md\">https://github.com/rust-lang/rfcs/blob/master/text/0769-sound-generic-drop.md</a>&gt;</p>",
        "id": 148642641,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330559
    },
    {
        "content": "<p>(which wasn't sound)</p>",
        "id": 148642701,
        "sender_full_name": "RalfJ",
        "timestamp": 1543330591
    },
    {
        "content": "<p>yeah that's why I added \"outdated\" but I should have put something stronger.</p>",
        "id": 148642712,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330611
    },
    {
        "content": "<p>why it was unsound is discussed briefly (with links to more detail) here: &lt;<a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#mistakes-were-made\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#mistakes-were-made\">https://github.com/rust-lang/rfcs/blob/master/text/1238-nonparametric-dropck.md#mistakes-were-made</a>&gt;</p>",
        "id": 148642742,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> there, fixed the title: &lt;<a href=\"https://github.com/rust-lang/rfcs/pull/769\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/pull/769\">https://github.com/rust-lang/rfcs/pull/769</a>&gt; ;)</p>",
        "id": 148642840,
        "sender_full_name": "centril",
        "timestamp": 1543330730
    },
    {
        "content": "<p>\"mistakes were made\" is one of my favorite uses of the passive voice to avoid pointing a finger at myself</p>",
        "id": 148642975,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543330820
    },
    {
        "content": "<p>there's a shorthand for that: \"oops\" =P</p>",
        "id": 148643023,
        "sender_full_name": "centril",
        "timestamp": 1543330868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> After reading 1238 I got nothing; <code>#[may_dangle]</code> is quite an ad-hoc thing to say ;)</p>",
        "id": 148646974,
        "sender_full_name": "centril",
        "timestamp": 1543334360
    },
    {
        "content": "<p>nothing comes to mind wrt. generalizations</p>",
        "id": 148646986,
        "sender_full_name": "centril",
        "timestamp": 1543334368
    },
    {
        "content": "<p>(except that as person who likes Haskell &amp; co. I like parametricity ^.^)</p>",
        "id": 148647013,
        "sender_full_name": "centril",
        "timestamp": 1543334395
    },
    {
        "content": "<p>(and I sure hope we get specialization and that it becomes good for all the trouble it has caused so far and keeps causing...)</p>",
        "id": 148647126,
        "sender_full_name": "centril",
        "timestamp": 1543334458
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> After reading 1238 I got nothing; <code>#[may_dangle]</code> is quite an ad-hoc thing to say ;)</p>\n</blockquote>\n<p>it's actually not</p>",
        "id": 148693914,
        "sender_full_name": "RalfJ",
        "timestamp": 1543388810
    },
    {
        "content": "<p>but I haven't seen a good description of it anywhere either had to puzzle together my own</p>",
        "id": 148693916,
        "sender_full_name": "RalfJ",
        "timestamp": 1543388822
    },
    {
        "content": "<p>(and talking to <span class=\"user-mention\" data-user-id=\"126804\">@Ariel Ben-Yehuda</span> helped)</p>",
        "id": 148693923,
        "sender_full_name": "RalfJ",
        "timestamp": 1543388829
    },
    {
        "content": "<p>I guess I should write a blog post...</p>",
        "id": 148693924,
        "sender_full_name": "RalfJ",
        "timestamp": 1543388838
    },
    {
        "content": "<p>but probably not before next week</p>",
        "id": 148693925,
        "sender_full_name": "RalfJ",
        "timestamp": 1543388844
    },
    {
        "content": "<p>Wait, 1238 isn’t going to explain may_dangle</p>",
        "id": 148697569,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543394752
    },
    {
        "content": "<p>For that, you would start with <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1327-dropck-param-eyepatch.md\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/blob/master/text/1327-dropck-param-eyepatch.md\">https://github.com/rust-lang/rfcs/blob/master/text/1327-dropck-param-eyepatch.md</a> (and then muddle along seeking a better explanation the way Ralf describes)</p>",
        "id": 148697713,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543394895
    },
    {
        "content": "<p>The heart of it is this line from that RFC: “When used on a lifetime, e.g. #[may_dangle] 'a, the programmer is asserting that no data behind a reference of lifetime 'a will be accessed by the destructor.”</p>",
        "id": 148697827,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543395111
    },
    {
        "content": "<p>The application to type parameters is specified as having an arguably stronger constraint (roughly “you can only move or drop instances of a #[may_dangle] T”) ... but it might make more sense to describe that constraint as a conservative approximation to the actual goal constraint. A more precise constraint might be described as applying #[may_dangle] to every lifetime that arises in the instantiation of T... but I’m not sure that is a sensible description. And in any case the conservative approximation conveys the kind of code we expect to occur in practice for such uses</p>",
        "id": 148698088,
        "sender_full_name": "pnkfelix",
        "timestamp": 1543395457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> ah so for tyvars its sort of the transitive closure of the idea on lifetimes</p>",
        "id": 148700291,
        "sender_full_name": "centril",
        "timestamp": 1543398333
    },
    {
        "content": "<p>it's still ad-hoc ;)</p>",
        "id": 148700351,
        "sender_full_name": "centril",
        "timestamp": 1543398364
    },
    {
        "content": "<p>I think I have an explanation you'll like much more <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> ^^ hopefully I can write it down next week...</p>",
        "id": 148700704,
        "sender_full_name": "RalfJ",
        "timestamp": 1543398728
    }
]