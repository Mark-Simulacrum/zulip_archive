[
    {
        "content": "<p>I feel like I'm still a bit confused about how release branching works. For example, when a new beta is branched off, does the source for it include unstable features that get cfg'ed out? In other words, is the beta an exact copy of the nightly that has slightly different configuration or does it work some other way?</p>",
        "id": 208037126,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598398222
    },
    {
        "content": "<p>does <a href=\"https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html#complications-of-bootstrapping\">https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html#complications-of-bootstrapping</a> help?</p>",
        "id": 208037186,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598398301
    },
    {
        "content": "<p>Exact copy, modulo being built as a beta compiler. This affects stability checking in the compiler, but there are no cfgs involved.</p>",
        "id": 208037265,
        "sender_full_name": "simulacrum",
        "timestamp": 1598398345
    },
    {
        "content": "<p>std itself is identical</p>",
        "id": 208037280,
        "sender_full_name": "simulacrum",
        "timestamp": 1598398364
    },
    {
        "content": "<p>So a beta compiler is built from nightly source code, and there are no <code>cfg</code>s so the binary has all the code for the unstable features, except that it doesn't let you use unstable features? I.e., you could use a stable compiler to compile unstable features as long as they were present when the beta was built? Or am I misunderstanding?</p>",
        "id": 208037505,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598398567
    },
    {
        "content": "<blockquote>\n<p>you could use a stable compiler to compile unstable features</p>\n</blockquote>\n<p>yes, using <code>RUSTC_BOOTSTRAP=1</code></p>",
        "id": 208037590,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598398645
    },
    {
        "content": "<p>see the link I posted</p>",
        "id": 208037591,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598398648
    },
    {
        "content": "<p>I see, I think I get it now! Thanks for the help :)</p>",
        "id": 208037896,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598398886
    },
    {
        "content": "<p>Bootstrapping compilers are one of the most mindbending things</p>",
        "id": 208037908,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598398899
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> to <a class=\"stream-topic\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes/topic/Require.20users.20to.20confirm.20they.20know.20RUSTC_.E2.80.A6.20compiler-team.23350\">#t-compiler/major changes &gt; Require users to confirm they know RUSTC_â€¦ compiler-team#350</a></p>",
        "id": 208145183,
        "sender_full_name": "Notification Bot",
        "timestamp": 1598474181
    },
    {
        "content": "<p>Sorry if I'm missing something, but why is rustc compiled using the latest beta rather than the nightly that the beta was built from? Wouldn't that avoid the need for <code>RUSTC_BOOTSTRAP</code>?</p>",
        "id": 208461575,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598748436
    },
    {
        "content": "<p>you'd have to ask <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> about that one haha</p>",
        "id": 208464130,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598753371
    },
    {
        "content": "<p>the reason the <em>beta</em> isn't built with latest nightly is it will likely no longer compile</p>",
        "id": 208464170,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598753405
    },
    {
        "content": "<p>Distros, for one, want to use stable releases to bootstrap the next stable.</p>",
        "id": 208464177,
        "sender_full_name": "simulacrum",
        "timestamp": 1598753422
    },
    {
        "content": "<p>because some features will have been stabilized, etc. and it will no longer compile without warnings</p>",
        "id": 208464178,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598753424
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> <a href=\"#narrow/stream/122651-general/topic/how.20does.20release.20branching.20work.3F/near/208461575\">said</a>:</p>\n<blockquote>\n<p>Sorry if I'm missing something, but why is rustc compiled using the latest beta rather than the nightly that the beta was built from? Wouldn't that avoid the need for <code>RUSTC_BOOTSTRAP</code>?</p>\n</blockquote>\n<p>but then how to you build that nightly? you'd have to use the previous nightly and thus do a new build every single day.</p>\n<p>so instead we ensure that each stable release of rust builds with the previous stable release, so this kind of \"bootstraipping\" does not involve nightlies.</p>",
        "id": 208471656,
        "sender_full_name": "RalfJ",
        "timestamp": 1598769620
    },
    {
        "content": "<p>for the beta branch, this means using the previous beta</p>",
        "id": 208471660,
        "sender_full_name": "RalfJ",
        "timestamp": 1598769640
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> I just meant that maybe you could use the same version of the compiler, but use the nightly build produced from it (which allows unstable features) instead of using the beta build that you have to \"backdoor\". But it seems there are other reasons for being able to bootstrap using a stable release :)</p>",
        "id": 208496449,
        "sender_full_name": "Noah Lev",
        "timestamp": 1598809769
    },
    {
        "content": "<p>@camelid there is no \"nightly build produced from it\".<br>\nevery commit pushed to <code>master</code> is built as nightly; every commit pushed to <code>beta</code> is built as beta; every commit pushed to <code>stable</code> is built as stable.</p>",
        "id": 208528239,
        "sender_full_name": "RalfJ",
        "timestamp": 1598859746
    },
    {
        "content": "<p>also, if you use the same version of the compiler, then how to you build <em>that</em>? if you need rust 1.45 to build rust 1.45, that would be a problem. ;)<br>\nfair warning: thinking too much about bootstrapping can break your head.^^</p>",
        "id": 208528265,
        "sender_full_name": "RalfJ",
        "timestamp": 1598859776
    },
    {
        "content": "<p>we used to have a chosen nightly snapshot for stage0, bumped as needed</p>",
        "id": 208585339,
        "sender_full_name": "cuviper",
        "timestamp": 1598892610
    },
    {
        "content": "<p>later we switched to N-1 stage0 as a more stable base</p>\n<ul>\n<li>stable N builds from stable N-1</li>\n<li>beta N builds from stable N-1</li>\n<li>nightly N builds from beta N-1</li>\n</ul>",
        "id": 208585453,
        "sender_full_name": "cuviper",
        "timestamp": 1598892675
    },
    {
        "content": "<p>and then we allowed stage0 to also be a \"rebuild\", especially for distros needing to build stable N from stable N again for patches etc., since distro repos usually only carry the most recent version</p>",
        "id": 208585628,
        "sender_full_name": "cuviper",
        "timestamp": 1598892762
    }
]