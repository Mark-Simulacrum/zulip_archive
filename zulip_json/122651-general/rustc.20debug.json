[
    {
        "content": "<p>Are there any Linux rustc builds with debug symbols available or will I have to build my own?</p>",
        "id": 151444803,
        "sender_full_name": "Jethro",
        "timestamp": 1544534500
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138938\">@Jethro</span> there are the <code>alt</code> builds, AFAIK they have debug symbols. you can install them via <a href=\"https://github.com/kennytm/rustup-toolchain-install-master\" target=\"_blank\" title=\"https://github.com/kennytm/rustup-toolchain-install-master\">https://github.com/kennytm/rustup-toolchain-install-master</a></p>",
        "id": 151445312,
        "sender_full_name": "RalfJ",
        "timestamp": 1544534988
    },
    {
        "content": "<p>I don't believe they do but would be happy to be wrong -- they exist primarily to enable LLVM asserts</p>",
        "id": 151445373,
        "sender_full_name": "simulacrum",
        "timestamp": 1544535014
    },
    {
        "content": "<p>you mean to <em>disable</em>?</p>",
        "id": 151445438,
        "sender_full_name": "Jethro",
        "timestamp": 1544535104
    },
    {
        "content": "<p>LLVM asserts are not enabled on regular builds; alt builds enable those</p>",
        "id": 151445501,
        "sender_full_name": "simulacrum",
        "timestamp": 1544535165
    },
    {
        "content": "<p>oh was it just LLVM asserts? dang, I thought it was all sorts of debug asserts</p>",
        "id": 151445555,
        "sender_full_name": "RalfJ",
        "timestamp": 1544535232
    },
    {
        "content": "<p>Looks like verify-llvm-ir and llvm-asserts are the only two options enabled by alt builds</p>",
        "id": 151445740,
        "sender_full_name": "simulacrum",
        "timestamp": 1544535390
    },
    {
        "content": "<p>did that change? it used to be other other way around</p>",
        "id": 151445800,
        "sender_full_name": "Jethro",
        "timestamp": 1544535462
    },
    {
        "content": "<p>A while back, yeah</p>",
        "id": 151445851,
        "sender_full_name": "simulacrum",
        "timestamp": 1544535489
    },
    {
        "content": "<p>so I built the compiler with <code>./x.py build --stage=0 src/rustc</code>, but I can't quite figure out how to run it</p>",
        "id": 151448291,
        "sender_full_name": "Jethro",
        "timestamp": 1544537801
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138938\">@Jethro</span> first, build it with <code>./x.py build --stage 1 src/libtest</code> (EDIT: should have been <code>libtest</code>, sorry)</p>",
        "id": 151448337,
        "sender_full_name": "RalfJ",
        "timestamp": 1544537847
    },
    {
        "content": "<p>or else you got yourself a nice compiler without a libstd, which is not very useful :P</p>",
        "id": 151448348,
        "sender_full_name": "RalfJ",
        "timestamp": 1544537858
    },
    {
        "content": "<p>second, add the stage 1 sysroot to rustup. that'd be using <code>rustup toolchain link</code>, and the sysroot lives in <code>build/*/stage1</code></p>",
        "id": 151448449,
        "sender_full_name": "RalfJ",
        "timestamp": 1544537922
    },
    {
        "content": "<p>then you can use that toolchain like any other. it is not 100% feature complete (compiler plugins and things needing <code>rustc_private</code> won't work, but as of recently, proc macros should work) but should get you quite far</p>",
        "id": 151448572,
        "sender_full_name": "RalfJ",
        "timestamp": 1544538006
    },
    {
        "content": "<p>nevermind, <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> saves the day and frees me from having to build the compiler :)</p>",
        "id": 151448724,
        "sender_full_name": "Jethro",
        "timestamp": 1544538152
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> just for future reference, I only cared about the frontend, I only wanted to use <code>rustc --print</code>, would've that been possible with just the stage0?</p>",
        "id": 151450369,
        "sender_full_name": "Jethro",
        "timestamp": 1544539541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138938\">@Jethro</span> I would be surprised but I don't know</p>",
        "id": 151451196,
        "sender_full_name": "RalfJ",
        "timestamp": 1544540250
    },
    {
        "content": "<p>and anyway, <code>libtest</code> adds just ~90s to the build time (if you don't need proc_macros or libtest, you can use <code>libstd</code> which takes just ~60s)</p>",
        "id": 151451254,
        "sender_full_name": "RalfJ",
        "timestamp": 1544540283
    },
    {
        "content": "<p>no it was starting to build LLVM, which it wasn't doing before</p>",
        "id": 151451460,
        "sender_full_name": "Jethro",
        "timestamp": 1544540461
    },
    {
        "content": "<p>oh, I keep forgetting about the codegen backends</p>",
        "id": 151451596,
        "sender_full_name": "RalfJ",
        "timestamp": 1544540555
    },
    {
        "content": "<p>actually I guess <code>--print cfg</code> needs the codegen backend to properly interpret the features, so probably no deal</p>",
        "id": 151451658,
        "sender_full_name": "Jethro",
        "timestamp": 1544540609
    }
]