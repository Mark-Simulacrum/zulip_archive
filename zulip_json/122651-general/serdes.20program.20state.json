[
    {
        "content": "<p>If I'm trying to build a macro to serialize/deserialize program state, and in particular dump every local and global's value to disk to be later reconstructed, is there some easy way to say 'based on the AST of a function, get all locals'?<br>\n(i.e. is there any equivalent to the python idiom of 'pickle.dump(locals()) + pickle.dump(globals())'</p>",
        "id": 275163489,
        "sender_full_name": "Leor Fishman",
        "timestamp": 1647189927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"485481\">@Leor Fishman</span>  Serde does not do name resolution. It can give you a list of all <em>identifiers</em> in a function, but it has no idea whether or not they resolve to the same variable. For example, there's no way to distinguish these variables unless you perform name resolution yourself:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span>: <span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"a\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 276804737,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648411022
    },
    {
        "content": "<p>(this gets significantly more complicated in the presence of macros, I wouldn't recommend writing your own name resolution if you need it to be at all reliable)</p>",
        "id": 276804807,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1648411122
    }
]