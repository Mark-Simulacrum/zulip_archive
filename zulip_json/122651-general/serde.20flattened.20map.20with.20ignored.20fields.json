[
    {
        "content": "<p>How to deserialize such a structure in serde? </p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;cpus&quot;:{\n    &quot;param&quot;:1,\n    &quot;other-ignored-param&quot;:&quot;2&quot;,\n    // there are more conventional fields\n    &quot;cpu@0&quot;:{&quot;compatible&quot;:&quot;my-uarch&quot;},\n    &quot;cpu@1&quot;:{&quot;compatible&quot;:&quot;my-uarch&quot;}\n    // there are more &quot;cpu@?&quot; fields\n}\n</code></pre></div>\n<p>It would be nice to use #[serde(flatten)] on a BTreeMap etc., but serde can't decide whether the field is a cpu structure or a conventional parameter.</p>",
        "id": 265120373,
        "sender_full_name": "luojia65",
        "timestamp": 1639640168
    },
    {
        "content": "<p>Also asked (and answered) on <a href=\"https://users.rust-lang.org/t/deserialize-flatten-map-with-ignored-fields/68908\">https://users.rust-lang.org/t/deserialize-flatten-map-with-ignored-fields/68908</a></p>",
        "id": 265124827,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1639643647
    }
]