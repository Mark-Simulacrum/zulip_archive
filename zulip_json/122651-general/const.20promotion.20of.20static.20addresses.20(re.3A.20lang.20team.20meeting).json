[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> Hi friend. I have a question related to the recent discussion in the lang team meeting.</p>\n<p>In my own <a href=\"https://github.com/rust-console/voladdress\" target=\"_blank\" title=\"https://github.com/rust-console/voladdress\">crate</a>, so far I don't have the problem with raw hardware addresses and const eval interacting badly because I ended up making a type (<code>VolAddress&lt;T&gt;</code>) which is internally a <code>NonZeroUsize</code> + <code>PhantomData&lt;T&gt;</code>, and then all the <code>const fn</code> manipulations of this type do const math to offset the address or whatever thing, while the actual reading and writing of the memory (where the address value is cast to <code>*mut T</code> at the last minute) isn't <code>const fn</code> so you simply can't end up writing a <code>const</code> expression where you'd read or write the memory. I think I'm just naturally saved in this situation by the type system.</p>\n<p>My question to you is, \"does this sound like a sane and correct approach?\" or is there perhaps something I missed that would make this a fall down suddenly?</p>",
        "id": 177914359,
        "sender_full_name": "Lokathor",
        "timestamp": 1570805632
    },
    {
        "content": "<p>yeah I'm a fan of that approach :D</p>",
        "id": 177990131,
        "sender_full_name": "RalfJ",
        "timestamp": 1570889070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> you are basically typing your integer addresses as <code>usize</code> instead of using pointers. which in some sense is more correct.</p>",
        "id": 177990143,
        "sender_full_name": "RalfJ",
        "timestamp": 1570889097
    }
]