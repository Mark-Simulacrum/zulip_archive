[
    {
        "content": "<p>Hello!<br>\nOne of my project compiles some crate to a cdylib shared library that exposes an FFI API to be used in other project.<br>\nI noticed that since the update to rust 1.50.0, the library now depends on <a href=\"http://libdl.so\">libdl.so</a><br>\nDoes anyone know what change lead to that dependency being added? For people linking against the library, the linker complain about missing symbols from <a href=\"http://weak.rs\">weak.rs</a> if libdl not added to the linked libraries list</p>",
        "id": 230066020,
        "sender_full_name": "marmeladema",
        "timestamp": 1615569365
    },
    {
        "content": "<p>It seems that the symbol <code>&lt;_ZN3std3sys4unix4weak13Weak$LT$F$GT$10initialize17h437c9120615a5202E&gt;</code> is using <code>dlsym</code> now</p>",
        "id": 230066160,
        "sender_full_name": "marmeladema",
        "timestamp": 1615569436
    },
    {
        "content": "<p>Hmmm, that's unfortunate, especially since it's only being used for compatibility with older systems. Trading one kind of compatibility for another. :(</p>",
        "id": 230070742,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615571364
    },
    {
        "content": "<p>I am not actually bothered by the change really. It's just that a bunch of things started failing to link against the library suddenly</p>",
        "id": 230073358,
        "sender_full_name": "marmeladema",
        "timestamp": 1615572365
    },
    {
        "content": "<p>Was it mentioned in the changelog for 1.50.0? Maybe I missed it :/</p>",
        "id": 230073391,
        "sender_full_name": "marmeladema",
        "timestamp": 1615572382
    },
    {
        "content": "<p>I think one of the problems here is that cargo doesn't provide a good programmatic way to see the set of libraries a staticlib needs to link against</p>",
        "id": 230073439,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615572409
    },
    {
        "content": "<p>If it was not mentioned, it might be a good thing to add for other changes like that.</p>",
        "id": 230073444,
        "sender_full_name": "marmeladema",
        "timestamp": 1615572412
    },
    {
        "content": "<p>I wish there were a standardized way to provide dependency information for static libraries.</p>",
        "id": 230074007,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615572693
    },
    {
        "content": "<p>You can use <code>--print native-static-libs</code>.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ echo | rustc --print native-static-libs - --crate-type staticlib\nnote: Link against the following native artifacts when linking against this static library. The order and any duplication can be significant on some platforms.\n\nnote: native-static-libs: -ldl -llog -lgcc -lc -lm\n</code></pre></div>",
        "id": 230074174,
        "sender_full_name": "bjorn3",
        "timestamp": 1615572750
    },
    {
        "content": "<p>It's really a shared .so library I am building; not a staticlib</p>",
        "id": 230074257,
        "sender_full_name": "marmeladema",
        "timestamp": 1615572798
    },
    {
        "content": "<p>but maybe I am missing a bit of context^^</p>",
        "id": 230074323,
        "sender_full_name": "marmeladema",
        "timestamp": 1615572841
    },
    {
        "content": "<p>Is cargo directly producing the dylib? or are you getting a static library out of cargo and then linking that into a dylib after?</p>",
        "id": 230074928,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615573119
    },
    {
        "content": "<p>If cargo is producing the .so, it should include appropriate dependencies on libdl and any other library it needs.</p>",
        "id": 230075675,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615573467
    },
    {
        "content": "<p>I am using <code>crate-type = [\"rlib\", \"cdylib\", \"staticlib\"]</code> in my Cargo.toml file<br>\nEven though I package the static .a library, no one is really using it. People started complaining because they encountered linker error when they tried to update the shared .so library</p>",
        "id": 230077597,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574300
    },
    {
        "content": "<p>That seems like a rustc bug then I think - the .so should itself link to libdl</p>",
        "id": 230077682,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615574345
    },
    {
        "content": "<p>So to answer your question, I am not sure what/who is producing the shared library. I am just running <code>cargo build</code> :)</p>",
        "id": 230077718,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574359
    },
    {
        "content": "<p>So the new version of my shared library started linking against libdl which what confused the user of the library</p>",
        "id": 230077787,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574395
    },
    {
        "content": "<p>Oh wait then what broke for the user? Were they running in an environment that doesn't have a libdl or something?</p>",
        "id": 230078075,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615574521
    },
    {
        "content": "<p>i.e.: after upgrading to rust 1.50.0, a new entry was listed when running <code>ldd</code> in my library:</p>\n<div class=\"codehilite\"><pre><span></span><code>libdl.so.2 =&gt; /usr/lib/libdl.so.2 (0x00007f585cc79000)\n</code></pre></div>",
        "id": 230078126,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574530
    },
    {
        "content": "<p>they were running in an environment where libdl is not added by default no</p>",
        "id": 230078173,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574554
    },
    {
        "content": "<p>It seems pretty reasonable to me to assume that libdl exists on a system imo</p>",
        "id": 230078241,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615574591
    },
    {
        "content": "<p>So it exist,  it jsut that the user now needed to change their linker configuration to add <code>-ldl</code></p>",
        "id": 230078282,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574619
    },
    {
        "content": "<p>added it to their linker configuration when building their own binary?</p>",
        "id": 230078376,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615574656
    },
    {
        "content": "<p>we were just surprised that a change like that appeared with a new version of the rust compiler without any code change on our end</p>",
        "id": 230078404,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574665
    },
    {
        "content": "<p>that shouldn't be required at all. They just link to your library which already declares the libdl dependency</p>",
        "id": 230078419,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615574674
    },
    {
        "content": "<p>yeah it's a setup where the library is loaded by cgo</p>",
        "id": 230078431,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574680
    },
    {
        "content": "<p>cgo can't handle transitive library loads?</p>",
        "id": 230078455,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615574696
    },
    {
        "content": "<p>cgo, in bazel to be exact</p>",
        "id": 230078474,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574703
    },
    {
        "content": "<p>Apparently not, bazel/cgo (I am not sure what part exactly broke) needed to be told about <code>-ldl</code></p>",
        "id": 230078536,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574729
    },
    {
        "content": "<p>weird</p>",
        "id": 230078570,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1615574749
    },
    {
        "content": "<p>my local cgo tests (without) bazel did not encounter the issue though. It was only when running in bazel that things started to break</p>",
        "id": 230078705,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574801
    },
    {
        "content": "<p>Anyway, as I said, I think I would just have liked to read such a change in the changelog that get announced for each version, that's all. I fully understand that assuming that libdl is available is totally right</p>",
        "id": 230078947,
        "sender_full_name": "marmeladema",
        "timestamp": 1615574911
    },
    {
        "content": "<p>Can changelogs be amended after the release? Because I am willing to provide the update if that is something that is actually ok todo <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 230079897,
        "sender_full_name": "marmeladema",
        "timestamp": 1615575320
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281572\">marmeladema</span> <a href=\"#narrow/stream/122651-general/topic/rust.201.2E50.2E0.20adds.20a.20new.20shared.20library.20dependency.20to.20libdl/near/230079897\">said</a>:</p>\n<blockquote>\n<p>Can changelogs be amended after the release? Because I am willing to provide the update if that is something that is actually ok todo <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n</blockquote>\n<p>I think so, yes</p>",
        "id": 230092559,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615580875
    },
    {
        "content": "<p>Yes, we're happy to accept PRs updating release notes.</p>",
        "id": 230095298,
        "sender_full_name": "simulacrum",
        "timestamp": 1615582191
    },
    {
        "content": "<p>Thank you for the inputs! I'll try to find some time to propose an update then :)</p>",
        "id": 230096882,
        "sender_full_name": "marmeladema",
        "timestamp": 1615582852
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/rust.201.2E50.2E0.20adds.20a.20new.20shared.20library.20dependency.20to.20libdl/near/230074174\">said</a>:</p>\n<blockquote>\n<p>You can use <code>--print native-static-libs</code>.</p>\n<p><div class=\"codehilite\"><pre><span></span><code>$ echo | rustc --print native-static-libs - --crate-type staticlib\nnote: Link against the following native artifacts when linking against this static library. The order and any duplication can be significant on some platforms.\n\nnote: native-static-libs: -ldl -llog -lgcc -lc -lm\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 230330491,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1615808364
    },
    {
        "content": "<p>Recently I received a bug report regarding <code>-lgcc / -lgcc_s</code></p>",
        "id": 230330644,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1615808432
    },
    {
        "content": "<p>It might be nice to link in the <code>.a</code> I'm afraid :/</p>",
        "id": 230330757,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1615808518
    }
]