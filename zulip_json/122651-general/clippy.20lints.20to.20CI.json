[
    {
        "content": "<p>we currently <code>deny(warnings)</code> in both the compiler and libs.</p>\n<p>I think it would make sense to also forbid some clippy lints, like <code>useless_conversion</code>, see <a href=\"https://github.com/rust-lang/rust/pull/76757#issuecomment-692991039\">https://github.com/rust-lang/rust/pull/76757#issuecomment-692991039</a>.</p>\n<p>Is there anything technical stopping us from doing so or does someone prefer to not add additional requirements here?</p>",
        "id": 210305307,
        "sender_full_name": "lcnr",
        "timestamp": 1600282850
    },
    {
        "content": "<p>is clippy currently run at all on CI?</p>",
        "id": 210306373,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600283310
    },
    {
        "content": "<p>in general I have no problem with running clippy in CI, but if we're thinking of denying the warning it might make sense to uplift the lint from clippy to rustc</p>",
        "id": 210306460,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600283343
    },
    {
        "content": "<p>I personally would prefer moving these lints to rustc, but iirc this is fairly bothersome as it requires t-lang signoff or something</p>",
        "id": 210306629,
        "sender_full_name": "lcnr",
        "timestamp": 1600283407
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> that seems like an argument to make the process for uplifting lints easier</p>",
        "id": 210306915,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600283545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/122651-general/topic/clippy.20lints.20to.20CI/near/210306629\">said</a>:</p>\n<blockquote>\n<p>I personally would prefer moving these lints to rustc, but iirc this is fairly bothersome as it requires t-lang signoff or something</p>\n</blockquote>\n<p>Honestly, I don't think that's the primary blocker. With my T-lang hat on, I'd <em>love</em> to see many clippy lints (any without false positives) uplifted into rustc. Other lang team members have expressed the same sentiment, and I think the approval process would be trivial. Someone just needs to port them and submit a PR.</p>",
        "id": 210309793,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600285004
    },
    {
        "content": "<p>In the past, there's been some difficulty because there was an attempt to mass-approve a whole pile of clippy lints, and that generated enough complexity and bikeshedding that it didn't make forward progress.</p>",
        "id": 210309844,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600285033
    },
    {
        "content": "<p>A PR uplifting a lint should be easy to get approved.</p>",
        "id": 210310736,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600285465
    },
    {
        "content": "<p>There is also <code>-Wtrivial-casts -Wtrivial-numeric-casts</code> in rustc (allow by default) but it seems very noisy.<br>\n<code>RUSTFLAGS=\"-Wtrivial-casts -Wtrivial-numeric-casts --cap-lints warn\" ./x.py check </code> if you are curious</p>",
        "id": 210313708,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1600286859
    },
    {
        "content": "<p>+1 to what Josh said.  The RFC was hard because it was trying to decide on something like two dozen lints at once.  But one at a time shouldn't be a problem.</p>",
        "id": 210442383,
        "sender_full_name": "scottmcm",
        "timestamp": 1600372607
    },
    {
        "content": "<h3>Noob question alert</h3>\n<div class=\"codehilite\"><pre><span></span><code>match sqlx::query!(\n        r#&quot;\n            INSERT INTO subscriptions (\n            id, email, name, subscribed_at\n            ) VALUES ($1, $2, $3, $4)\n        &quot;#,\n        Uuid::new_v4(),\n        form.email,\n        form.name,\n        Utc::now()\n    )\n</code></pre></div>\n<p>Clippy throws error stating that </p>\n<p><code>``error: used binding </code>_expr` which is prefixed with an underscore. A leading underscore signals that a binding will not be used<br>\n  --&gt; src/routes/subscriptions.rs:31:9<br>\n   |<br>\n31 |         Utc::now()</p>\n<div class=\"codehilite\"><pre><span></span><code>However as you can see, I am not using an underscore for any variable, I am directly using the value.\n\nIs the only way to avoid this linting error is to create a new variable?\n\nHow can I avoid the clippy error please suggest?\n</code></pre></div>",
        "id": 247064176,
        "sender_full_name": "Surya",
        "timestamp": 1627116545
    },
    {
        "content": "<p>Are you passing <code>-W</code> or <code>-D clippy::pedantic</code>?</p>",
        "id": 247064510,
        "sender_full_name": "Laurențiu",
        "timestamp": 1627117121
    },
    {
        "content": "<p>Maybe add <code>-A clippy::used_underscore_binding</code> or stop using <code>pedantic</code></p>",
        "id": 247064551,
        "sender_full_name": "Laurențiu",
        "timestamp": 1627117204
    },
    {
        "content": "<p>I want to understand why I am getting this error, there is no unused variable in there though, why am I getting this error?</p>",
        "id": 247154286,
        "sender_full_name": "Surya",
        "timestamp": 1627261436
    },
    {
        "content": "<p>the error probably occurs in the expansion of the <code>query!</code> macro</p>",
        "id": 247154400,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1627261578
    },
    {
        "content": "<p>this is a clippy bug, it should not flag issues in macros you don't control</p>",
        "id": 247154407,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1627261599
    },
    {
        "content": "<p>Thank you! <br>\n<code>cargo clippy</code> in my local passes without throwing any error though.</p>\n<p>In the CI though we seem to install <code>rustup cargo add clippy</code>, we check linting changes through a binary. I think the binary is not up to date <span aria-label=\"head bandage\" class=\"emoji emoji-1f915\" role=\"img\" title=\"head bandage\">:head_bandage:</span> </p>\n<p>I couldn't find the source code of the binary too, no idea what is happening.</p>\n<p>Anyways, I don't think this is a clippy bug.</p>\n<p>But thanks <span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink  [he/him]</span>  it helped me understand the issue. <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 247156018,
        "sender_full_name": "Surya",
        "timestamp": 1627264123
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/clippy.20lints.20to.20CI/near/210310736\">said</a>:</p>\n<blockquote>\n<p>A PR uplifting a lint should be easy to get approved.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> took one over for me in april (which I had initially filed in dec 2020), and it still hasn't landed (although it seems very close?). even before them it kind felt like a surprising amount of work at the time, and... i don't envy him the amount of work it took since then to get it landable.</p>\n<p>I also don't think it was particularly an example of a messy clippy lint or anything, just it seems that theres a big difference between whats acceptable for clippy and in-tree lints...</p>",
        "id": 247164383,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1627276832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209168\">@Thom Chiovoloni</span>  that is tricky!<br>\nWhat does in-tree lints mean?<br>\nIs it advisable to skip clippy linting for some cases? From your message looks like it is advisable to use clippy linting <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 247166418,
        "sender_full_name": "Surya",
        "timestamp": 1627279720
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"379674\">Surya</span> <a href=\"#narrow/stream/122651-general/topic/clippy.20lints.20to.20CI/near/247166418\">said</a>:</p>\n<blockquote>\n<p>What does in-tree lints mean?</p>\n</blockquote>\n<p>In-tree lints are compiler warnings, and sometimes it's desirable to move them from <code>clippy</code> to <code>rustc</code>. This thread was originally about running <code>clippy</code> on the compiler itself.</p>",
        "id": 247167835,
        "sender_full_name": "Laurențiu",
        "timestamp": 1627281416
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"379674\">Surya</span> <a href=\"#narrow/stream/122651-general/topic/clippy.20lints.20to.20CI/near/247156018\">said</a>:</p>\n<blockquote>\n<p>Anyways, I don't think this is a clippy bug.</p>\n</blockquote>\n<p>It's certainly a clippy bug. <a href=\"https://rust-lang.github.io/rust-clippy/master/#used_underscore_binding\">https://rust-lang.github.io/rust-clippy/master/#used_underscore_binding</a> says:</p>\n<blockquote>\n<p>The lint does not work properly with desugaring and macro [sic], it has been allowed in the mean time.</p>\n</blockquote>\n<p>So you're either passing <code>-W clippy::pedantic</code> or you're using an old version of clippy.</p>",
        "id": 247167918,
        "sender_full_name": "Laurențiu",
        "timestamp": 1627281523
    },
    {
        "content": "<p>hmm okay,  now I can understand.<br>\nIn local too when I try with <code>cargo clippy -- -W clippy::pedantic</code> I am able to reproduce these locally too.<br>\nthanks for the clarification</p>",
        "id": 247170112,
        "sender_full_name": "Surya",
        "timestamp": 1627283761
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209168\">Thom Chiovoloni</span> <a href=\"#narrow/stream/122651-general/topic/clippy.20lints.20to.20CI/near/247164383\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/122651-general/topic/clippy.20lints.20to.20CI/near/210310736\">said</a>:</p>\n<blockquote>\n<p>A PR uplifting a lint should be easy to get approved.</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> took one over for me in april (which I had initially filed in dec 2020), and it still hasn't landed (although it seems very close?). even before them it kind felt like a surprising amount of work at the time, and... i don't envy him the amount of work it took since then to get it landable.</p>\n<p>I also don't think it was particularly an example of a messy clippy lint or anything, just it seems that theres a big difference between whats acceptable for clippy and in-tree lints...</p>\n</blockquote>\n<p>well, I also decided to rewrite half of it to use diagnostic items :P so I had to fix some bugs and performance regressions from that. The latest test failure is because not all platforms have atomics, which shouldn't affect any lint other than this one.</p>",
        "id": 247194283,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627301951
    }
]