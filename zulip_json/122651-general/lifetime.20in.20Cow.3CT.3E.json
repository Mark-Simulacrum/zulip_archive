[
    {
        "content": "<p>The implementation of <code>Cow</code> is </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">Cow</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"k\">where</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">B</span>: <span class=\"o\">'</span><span class=\"na\">a</span> <span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">ToOwned</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Borrowed</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">),</span><span class=\"w\">    </span><span class=\"c1\">//用于包裹引用</span>\n<span class=\"w\">    </span><span class=\"n\">Owned</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">B</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nb\">ToOwned</span><span class=\"o\">&gt;</span>::<span class=\"n\">Owned</span><span class=\"p\">),</span><span class=\"w\">   </span><span class=\"c1\">//用于包裹所有者</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>And the lifetime tag <code>'a</code> appears twice in the <code>where</code> sentence that confused me a lot.<br>\nI just don't understand why there are two <code>'a</code>, <code>B: 'a + ToOwned + 'a + ?Sized</code><br>\n<span aria-label=\"dizzy\" class=\"emoji emoji-1f635\" role=\"img\" title=\"dizzy\">:dizzy:</span></p>",
        "id": 269837078,
        "sender_full_name": "yingmanwumen",
        "timestamp": 1643430114
    },
    {
        "content": "<p>Where did you get that definition from?</p>",
        "id": 269838749,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1643432221
    },
    {
        "content": "<p>The definition in <code>alloc</code> is: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">Cow</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">B</span>: <span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"k\">where</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">B</span>: <span class=\"nb\">ToOwned</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"sd\">/// Borrowed data.</span>\n<span class=\"w\">    </span><span class=\"n\">Borrowed</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"sd\">/// Owned data.</span>\n<span class=\"w\">    </span><span class=\"n\">Owned</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">B</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nb\">ToOwned</span><span class=\"o\">&gt;</span>::<span class=\"n\">Owned</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 269838761,
        "sender_full_name": "Ibraheem Ahmed",
        "timestamp": 1643432239
    },
    {
        "content": "<p>Uh, a quick check on the playground seems to indicate that you can put extra <code>+ 'a</code> all you want and the definition will still compile.</p>",
        "id": 269842183,
        "sender_full_name": "Lokathor",
        "timestamp": 1643435846
    },
    {
        "content": "<p>which i would not have expected to pass without a warning, but it sorta makes sense i guess</p>",
        "id": 269842192,
        "sender_full_name": "Lokathor",
        "timestamp": 1643435867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"472284\">@yingmanwumen</span> I think this material is from some Chinese materials and I cannot find the original version. You may not rely on that, and do double check at <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\">https://doc.rust-lang.org/std/borrow/enum.Cow.html</a> when you are not sure if what you are reading is right.</p>",
        "id": 269842524,
        "sender_full_name": "Frank King",
        "timestamp": 1643436185
    },
    {
        "content": "<p>You can write</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">T</span><span class=\"w\"> </span>: <span class=\"nb\">Sized</span> <span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Did</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Say</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">And</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Dont</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">Forget</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">About</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"w\"></span>\n</code></pre></div>\n<p>that is, bounds can be redundant, and this includes \"usable-within-region <code>'a</code>\" bounds such as <code>+ 'a</code>.<br>\nAs to <em>why</em> would anyone do that, my guess would be typos, such as in that material you had, and macro-generated code</p>",
        "id": 269856352,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1643453867
    },
    {
        "content": "<p>Thanks very much!</p>",
        "id": 269857278,
        "sender_full_name": "yingmanwumen",
        "timestamp": 1643454868
    }
]