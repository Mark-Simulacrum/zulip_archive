[
    {
        "content": "<p>A while back I attempted to port the rust compiler to a new platform (Linux with Musl libc and LLVM C++ libs). I thought this wouldn't be too difficult but unfortunately it was though eventually I was successful in creating a toolchain through hacking the musl docker scripts however my final result, although able to compile simple programs, was not able to recompile rust (probably my fault though I never got round to trying to fix that).</p>\n<p>I had the thought that providing a totally statically linked toolchain for use as the stage 0 compiler when building rustc on new, more obscure Linux platforms would make bootstrapping on new Linux platforms much easier. Is this a feasible idea?</p>",
        "id": 220918256,
        "sender_full_name": "Ella Stanforth",
        "timestamp": 1608896629
    },
    {
        "content": "<p>It is not possible to bootstrap rustc using a statically compiled compiler. To load proc-macros, rustc needs to be dynamically linked.</p>",
        "id": 220918336,
        "sender_full_name": "bjorn3",
        "timestamp": 1608896756
    },
    {
        "content": "<p>Ah, that's a shame. Is it possible to compile rust with all libs statically liked except <code>ld.so</code>?</p>",
        "id": 220918580,
        "sender_full_name": "Ella Stanforth",
        "timestamp": 1608897225
    },
    {
        "content": "<p>You can remove the <code>crate-type = [\"dylib\"]</code> from <code>compiler/rustc_driver/Cargo.toml</code> to statically link everything except for certain system libraries like <code>ld.so</code> and <code>libc.so</code>.</p>",
        "id": 220918638,
        "sender_full_name": "bjorn3",
        "timestamp": 1608897316
    },
    {
        "content": "<p>Nice, I'll try that. Thank you so much for the help!</p>",
        "id": 220918680,
        "sender_full_name": "Ella Stanforth",
        "timestamp": 1608897373
    },
    {
        "content": "<p>It is not possible to dynamically link to <code>ld.so</code> and at the same time statically link to <code>libc.so</code>. <code>ld.so</code> depends on <code>libc.so</code>.</p>",
        "id": 220918681,
        "sender_full_name": "bjorn3",
        "timestamp": 1608897387
    },
    {
        "content": "<p>Okay that makes sense.</p>",
        "id": 220918743,
        "sender_full_name": "Ella Stanforth",
        "timestamp": 1608897548
    }
]