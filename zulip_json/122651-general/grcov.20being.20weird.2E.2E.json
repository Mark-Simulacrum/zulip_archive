[
    {
        "content": "<p>Hi, does anyone know why in certain instances grcov reports show a single closing bracket of a test function as uncovered (red)?</p>\n<p>I've got a simple test which just says:</p>\n<div class=\"codehilite\"><pre><span></span><code>#[cfg(test)]\nmod test_current_module {\n    use super::*;\n    #[test]\n    #[should_panic(\n        expected = &quot;Bad result!&quot;\n    )]\n    fn test_bad_res_panic() {\n        func_that_can_panic(10);\n    } // &lt;--- this is marked red and uncovered...?\n}\n</code></pre></div>\n\n\n<p>The final closing bracket shows up as uncovered and I have no clue as to why? Appreciate any input..</p>",
        "id": 211006442,
        "sender_full_name": "pm5k",
        "timestamp": 1600869446
    },
    {
        "content": "<p>Well, the panic does lead to an _early_ return, of sorts, so the end of the function is never reached, even if that \"end of function\" is just \"empty\", _i.e._, <code>return ();</code>. I don't know, however, <code>grcov</code> well enough to know how to tweak it so that it ignores that \"dead code\"...</p>",
        "id": 211008845,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1600870302
    },
    {
        "content": "<p>Ah so it is considered unreachable code then.. I will have to investigate that one. Thanks, I think that's the bit I was missing. Guess 2 days of learning still means I know squat about Rust.. doh!</p>",
        "id": 211009385,
        "sender_full_name": "pm5k",
        "timestamp": 1600870515
    }
]