[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> is there a rough estimate of miri's slowdown factor that I can use as a rule of thumb?</p>",
        "id": 166953277,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559257502
    },
    {
        "content": "<p>other than \"a lot\"?^^<br>\nin <a href=\"https://github.com/rust-lang/miri/issues/638\" target=\"_blank\" title=\"https://github.com/rust-lang/miri/issues/638\">https://github.com/rust-lang/miri/issues/638</a> someone reported \"100x slower than python\". I didn't verify that.</p>",
        "id": 166975696,
        "sender_full_name": "RalfJ",
        "timestamp": 1559288759
    },
    {
        "content": "<p>I once benchmarked against plain execution, and I think these benchmarks are even still around in our repo, so you can test how bad it is today, but it used to be quite a few orders of magnitude</p>",
        "id": 166990762,
        "sender_full_name": "oli",
        "timestamp": 1559304073
    },
    {
        "content": "<p>with stacked borrows that probably got even worse :D</p>",
        "id": 166990768,
        "sender_full_name": "oli",
        "timestamp": 1559304085
    },
    {
        "content": "<p>I hold out hope of running Miri on a testsuite driven by a property-based test suite</p>",
        "id": 166992621,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559305982
    },
    {
        "content": "<p>have you tried running miri on a quickcheck test suite?</p>",
        "id": 166993393,
        "sender_full_name": "oli",
        "timestamp": 1559306704
    },
    {
        "content": "<p>we do have random number generators nowadays</p>",
        "id": 166993405,
        "sender_full_name": "oli",
        "timestamp": 1559306715
    },
    {
        "content": "<p>to give you an idea: the libcore test suite takes 0.4s when running \"for real\" and 6:20 min when running in Miri</p>",
        "id": 166998007,
        "sender_full_name": "RalfJ",
        "timestamp": 1559310251
    },
    {
        "content": "<p>that's roughly 1000x slowdown</p>",
        "id": 166998076,
        "sender_full_name": "RalfJ",
        "timestamp": 1559310316
    },
    {
        "content": "<p>which is in the same ballpark as \"100x slower than python\" I guess ;)</p>",
        "id": 166998089,
        "sender_full_name": "RalfJ",
        "timestamp": 1559310334
    },
    {
        "content": "<p>uh, I wanted to test that with validation disabled but then in ICEs...^^</p>",
        "id": 166998166,
        "sender_full_name": "RalfJ",
        "timestamp": 1559310376
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> quickcheck is old and busted. proptest is where it's at.</p>",
        "id": 167002079,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313306
    },
    {
        "content": "<p>What's annoying is that the places I want to use it are probably the most Miri-difficult: FFI and SIMD</p>",
        "id": 167002135,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313361
    },
    {
        "content": "<p>disabling validity is a roughly 2x speedup... as in, still 500x slower than \"real\"^^</p>",
        "id": 167002191,
        "sender_full_name": "RalfJ",
        "timestamp": 1559313379
    },
    {
        "content": "<p>yeah, SIMD needs someone to implement 5k intrinsics and FFI... I doubt will ever happen^^</p>",
        "id": 167002231,
        "sender_full_name": "RalfJ",
        "timestamp": 1559313423
    },
    {
        "content": "<p>For examples...</p>\n<p>I have twox-hash which uses proptest to validate the pure-Rust output against the C implementation. That's an \"easy\" property. Coming up with self contained properties is much harder.</p>\n<p>I also have jetscii, which uses proptest to validate the SIMD output against the non-SIMD output.</p>",
        "id": 167002616,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313703
    },
    {
        "content": "<p>In the first case, I don't want to run Miri on the FFI code.</p>",
        "id": 167002628,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313716
    },
    {
        "content": "<p>Is there a way to annotate a function to have Miri not inspect within it?</p>",
        "id": 167002720,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313768
    },
    {
        "content": "<p>\"inspect within it\"?</p>",
        "id": 167002793,
        "sender_full_name": "RalfJ",
        "timestamp": 1559313825
    },
    {
        "content": "<p>miri doesnt inspect anything, it evaluates</p>",
        "id": 167002797,
        "sender_full_name": "RalfJ",
        "timestamp": 1559313830
    },
    {
        "content": "<p>so it doesnt matter if there is FFI that is not used. but if your code <em>runs</em> FFI, there's nothing we can do.</p>",
        "id": 167002855,
        "sender_full_name": "RalfJ",
        "timestamp": 1559313845
    },
    {
        "content": "<p>cant you do the comparison \"externally\"? like, have the evaluation in Miri dump the results to a file and then compare that</p>",
        "id": 167002888,
        "sender_full_name": "RalfJ",
        "timestamp": 1559313880
    },
    {
        "content": "<p>that just requires disk I/O which is much more realistic than FFI ;)</p>",
        "id": 167002893,
        "sender_full_name": "RalfJ",
        "timestamp": 1559313890
    },
    {
        "content": "<p>I'm trying to think what the speed tradeoff would be there</p>",
        "id": 167002921,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313915
    },
    {
        "content": "<p>Can I call <code>std::cmd::Process</code> under Miri?</p>",
        "id": 167002947,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313935
    },
    {
        "content": "<p>then I could run the FFI in another non-Miri process.</p>",
        "id": 167003028,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559313972
    },
    {
        "content": "<p>Realistically, I can just run the tests 2x: once with comparing against FFI and once with the comparison replaced by <code>true</code>. Find bugs in the first run, UB in the second.</p>",
        "id": 167003092,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1559314025
    },
    {
        "content": "<p>no. but that is possible in principle...</p>",
        "id": 167003198,
        "sender_full_name": "RalfJ",
        "timestamp": 1559314086
    },
    {
        "content": "<p>lots of work but not impossible</p>",
        "id": 167003199,
        "sender_full_name": "RalfJ",
        "timestamp": 1559314086
    },
    {
        "content": "<p>someone would have to add a shim for <code>popen</code> I guess</p>",
        "id": 167003200,
        "sender_full_name": "RalfJ",
        "timestamp": 1559314086
    }
]