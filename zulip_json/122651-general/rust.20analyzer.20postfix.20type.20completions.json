[
    {
        "content": "<p>Hello!</p>",
        "id": 221313326,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609445372
    },
    {
        "content": "<p>Ooops i have press enter to send <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221313344,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609445390
    },
    {
        "content": "<p>Well i just wanted to get thoughts on an idea i had which i think would be great for rust analyzer. One pattern i often have to do is wrap a type in Option, Vec, etc. Therefore i was thinking it would be nice for rust analyzer to be able to complete something like <code>usize.vec</code> to <code>Vec&lt;usize&gt;</code>. Rust analyzer would detect if the type has a generic (and maybe if the type being completed can be put into the generic?) and offer a completion for it. This would only work for types with generics in scope so as to not have too many completions.</p>",
        "id": 221313442,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609445496
    },
    {
        "content": "<p>Hello! rust-analyzer supports a couple of postfix completion, as you might have already noticed, but as a design choice, there aren't a lot of them to avoid polluting the completion results. I think we don't even have <code>Rc</code> and <code>Arc</code> yet. I'm not sure the ones you're proposing are that clear, or useful (I thought <code>foo.vec</code> would expand to <code>vec![foo]</code>, which is a reasonable expectation, although not what you would like). And unfortunately I don't think we can provide postfix replacements like this without going through the completion list.</p>",
        "id": 221315179,
        "sender_full_name": "Laurențiu",
        "timestamp": 1609447582
    },
    {
        "content": "<p>Maybe these could be made configurable, once we support a config file, but I'm personally not a fan of those (because when multiple people work on a project, they might have different ideas about what postfix completions are useful).</p>",
        "id": 221315246,
        "sender_full_name": "Laurențiu",
        "timestamp": 1609447679
    },
    {
        "content": "<p>You're correct in saying that a lot of them pollute the results, however, i don't exactly agree with that in this case. That is because <code>usize.</code> can't quite complete to anything else, or am i missing something? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 221319141,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609451408
    },
    {
        "content": "<p>I think you've misunderstood what i meant, i do not mean <code>5.vec</code> -&gt; <code>vec![5]</code>, i mean in a type, e.g. <code>usize.vec</code> -&gt; <code>Vec&lt;usize&gt;</code></p>",
        "id": 221319173,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609451453
    },
    {
        "content": "<p>I also don't see why you would need a config file versus just making this an editor config</p>",
        "id": 221319205,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609451504
    },
    {
        "content": "<p>Yes, you're right about that, we could decide to complete to <code>Vec&lt;T&gt;</code> or even <code>vec![foo]</code> depending on what's on the left side</p>",
        "id": 221341134,
        "sender_full_name": "Laurențiu",
        "timestamp": 1609487643
    },
    {
        "content": "<p>I think RA already distinguishes between type completions and expr completions, no?</p>",
        "id": 221382543,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1609559723
    }
]