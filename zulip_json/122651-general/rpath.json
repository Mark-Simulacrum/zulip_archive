[
    {
        "content": "<p>Is it possible to set the runtime library search path ( rpath ) from cargo?</p>",
        "id": 275778090,
        "sender_full_name": "catch22",
        "timestamp": 1647595834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"457263\">@catch22</span> You can set <code>rpath = true</code> inside a cargo profile. For example</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[profile.dev]</span><span class=\"w\"></span>\n<span class=\"n\">rpath</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n\n<span class=\"k\">[profile.release]</span><span class=\"w\"></span>\n<span class=\"n\">rpath</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Note that rustc doesn't directly support choosing what rpath to use. It will use the directory of the executable. To specify a specific rpath that you need to pass <code>-Clink-arg=...</code> to rustc with whatever argument the linker needs to specify a specific rpath.</p>",
        "id": 275778685,
        "sender_full_name": "bjorn3",
        "timestamp": 1647596241
    },
    {
        "content": "<p>yes I want to control the actual rpath that is injected. I'll go try <code>-Clink-arg=...</code></p>\n<p>Thanks very much</p>",
        "id": 275779076,
        "sender_full_name": "catch22",
        "timestamp": 1647596449
    },
    {
        "content": "<p>This got the job done, <span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> , thanks for the hint</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"cargo:rustc-link-arg=-Wl,-rpath={}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">shared_lib_dir</span><span class=\"p\">.</span><span class=\"n\">display</span><span class=\"p\">());</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275782113,
        "sender_full_name": "catch22",
        "timestamp": 1647598017
    },
    {
        "content": "<p>If you want cross platform support you will need to check which linker is used I think. In addition windows unfortunately doesn't support rpath.</p>",
        "id": 275782201,
        "sender_full_name": "bjorn3",
        "timestamp": 1647598074
    },
    {
        "content": "<p>Windows has a somewhat similar application configuration option called <a href=\"https://docs.microsoft.com/en-us/windows/win32/sbscs/application-configuration-files#probing\">\"probing\"</a>. Using it is a bit more involved than rpath. I guess someone could make a tool that abstracts over some of the differences.</p>",
        "id": 275783897,
        "sender_full_name": "Chris Denton",
        "timestamp": 1647599105
    },
    {
        "content": "<p>Interesting you mention cross-platform that's definitely required but all my uses cases are linux, just different architectures, ARM and X86 at the moment.  I need to dig into how cross compiling works with Rust, I've only read the doco</p>",
        "id": 275853534,
        "sender_full_name": "catch22",
        "timestamp": 1647632751
    }
]