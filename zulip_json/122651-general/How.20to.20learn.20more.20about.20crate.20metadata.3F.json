[
    {
        "content": "<p>Can anyone point me to a place I read more about crate metadata (its fine if its just a place in the rustc codebase to start)? context is I am starting to look at this: <a href=\"https://github.com/rust-lang/rust/issues/78708\">https://github.com/rust-lang/rust/issues/78708</a></p>",
        "id": 216168147,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1604976883
    },
    {
        "content": "<p>hmm, <a href=\"https://rustc-dev-guide.rust-lang.org/serialization.html\">https://rustc-dev-guide.rust-lang.org/serialization.html</a> might be a good place to start</p>",
        "id": 216168226,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977008
    },
    {
        "content": "<p>and the relevant code is <code>rustc_metadata</code></p>",
        "id": 216168228,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977017
    },
    {
        "content": "<p>if you want a more hands-on example, <a href=\"https://github.com/rust-lang/rust/pull/75176\">https://github.com/rust-lang/rust/pull/75176</a> shows what happens when metadata loading goes wrong <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 216168256,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977068
    },
    {
        "content": "<p>spent <em>so</em> much time debugging that</p>",
        "id": 216168261,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977078
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168261\">said</a>:</p>\n<blockquote>\n<p>spent <em>so</em> much time debugging that</p>\n</blockquote>\n<p>oh i vaguely remember reading this and being very confused by it lol</p>\n<p>thanks for the pointers! and just 1 quick question, I know the in default case libraries become rlib, but what IS an rlib? I heard that we actually put the metadata, at least for generics in the actual llvm ir as \"bitcode\" or something like that, is that correct? (also I was about to ask how the hell cpp does this but then I remembered, header files lmaooo)</p>",
        "id": 216168463,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1604977333
    },
    {
        "content": "<p>rlib mostly contains MIR I think? and maybe some other things related to DefIds</p>",
        "id": 216168473,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977367
    },
    {
        "content": "<p>rustc_metadata will tell you exactly</p>",
        "id": 216168478,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977374
    },
    {
        "content": "<p>it does not usually contain LLVM IR since recently, let me find the PR</p>",
        "id": 216168500,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977420
    },
    {
        "content": "<p>interesting...ill play around with rustc_metadata</p>",
        "id": 216168550,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1604977451
    },
    {
        "content": "<p>I think <a href=\"https://github.com/rust-lang/rust/pull/71323\">https://github.com/rust-lang/rust/pull/71323</a></p>",
        "id": 216168561,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977476
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> u answer like every question in the rustc zulip, its very impressive!</p>",
        "id": 216168564,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1604977479
    },
    {
        "content": "<p>I remember when I first got started I couldn't get <em>anyone</em> to answer my questions <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 216168579,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977512
    },
    {
        "content": "<p>so I try to help people get unstuck</p>",
        "id": 216168583,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977519
    },
    {
        "content": "<p>thats very generous! and appreciated! I have gotten a lot more comfortable in rust-lang/rust cause of your help!</p>",
        "id": 216168640,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1604977583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168561\">said</a>:</p>\n<blockquote>\n<p>I think <a href=\"https://github.com/rust-lang/rust/pull/71323\">https://github.com/rust-lang/rust/pull/71323</a></p>\n</blockquote>\n<p>very interesting, thanks for the pointers!!</p>",
        "id": 216168643,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1604977597
    },
    {
        "content": "<p>glad to know it helps <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 216168649,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604977622
    },
    {
        "content": "<p>Rlibs: <a href=\"https://github.com/rust-lang/rust/issues/38913\">https://github.com/rust-lang/rust/issues/38913</a></p>",
        "id": 216168911,
        "sender_full_name": "oliver",
        "timestamp": 1604978063
    },
    {
        "content": "<p>I think that issue is out of date</p>",
        "id": 216168932,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604978118
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"257428\">Gus Wynn</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168463\">said</a>:</p>\n<blockquote>\n<p>but what IS an rlib? </p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"257428\">@Gus Wynn</span>  An rlib is a standard <code>.a</code> archive (similar to a tar file).  What it contains depends a lot on the compiler options, but it it is some combination of object code, LLVM bitcode, and rustc-specific metadata.</p>",
        "id": 216168979,
        "sender_full_name": "Eric Huss",
        "timestamp": 1604978168
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168932\">said</a>:</p>\n<blockquote>\n<p>I think that issue is out of date</p>\n</blockquote>\n<p>left a comment</p>",
        "id": 216168992,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604978222
    },
    {
        "content": "<p>any experts in rust-lld here?</p>",
        "id": 216169010,
        "sender_full_name": "Ivan Serdyuk",
        "timestamp": 1604978270
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168979\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"257428\">Gus Wynn</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168463\">said</a>:</p>\n<blockquote>\n<p>but what IS an rlib? </p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"257428\">Gus Wynn</span>  An rlib is a standard <code>.a</code> archive (similar to a tar file).  What it contains depends a lot on the compiler options, but it it is some combination of object code, LLVM bitcode, and rustc-specific metadata.</p>\n</blockquote>\n<p>yeah from that issue it's LLVM IR and machine code</p>",
        "id": 216169056,
        "sender_full_name": "oliver",
        "timestamp": 1604978301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168992\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168932\">said</a>:</p>\n<blockquote>\n<p>I think that issue is out of date</p>\n</blockquote>\n<p>left a comment</p>\n</blockquote>\n<p>I thumbed it up</p>",
        "id": 216169121,
        "sender_full_name": "oliver",
        "timestamp": 1604978433
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122651-general/topic/How.20to.20learn.20more.20about.20crate.20metadata.3F/near/216168992\">said</a>:</p>\n<blockquote>\n<p>left a comment</p>\n</blockquote>\n<p>MIR-only rlibs are a different approach, and is somewhat unrelated to the bitcode options that were added.  I think there is still some interest in having them, though as the issue mentions there are some tradeoffs.</p>",
        "id": 216169138,
        "sender_full_name": "Eric Huss",
        "timestamp": 1604978494
    },
    {
        "content": "<p>wait, so what's in an .rlib with --embed-bitcode=no, if it's not MIR?</p>",
        "id": 216169190,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604978562
    },
    {
        "content": "<p>It's compiled object code + metadata.</p>",
        "id": 216169201,
        "sender_full_name": "Eric Huss",
        "timestamp": 1604978587
    },
    {
        "content": "<p>oh I see</p>",
        "id": 216169211,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604978609
    },
    {
        "content": "<p>the suggestion is not to go through llvm at all until the final linking stage?</p>",
        "id": 216169214,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604978625
    },
    {
        "content": "<p>I think it's to store all MIR not just generics, inline, and consts</p>",
        "id": 216169258,
        "sender_full_name": "oliver",
        "timestamp": 1604978679
    },
    {
        "content": "<p>Yea, I believe so.</p>",
        "id": 216169262,
        "sender_full_name": "Eric Huss",
        "timestamp": 1604978692
    },
    {
        "content": "<p>optimize the MIR before storing it</p>",
        "id": 216169263,
        "sender_full_name": "oliver",
        "timestamp": 1604978694
    },
    {
        "content": "<p>that sounds useful :)</p>",
        "id": 216169266,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604978703
    },
    {
        "content": "<p>and add an unstable compiler flag which tries to build from MIR instead<br>\nof precompiled artifacts</p>",
        "id": 216169279,
        "sender_full_name": "oliver",
        "timestamp": 1604978733
    },
    {
        "content": "<p>and some clean up</p>",
        "id": 216169286,
        "sender_full_name": "oliver",
        "timestamp": 1604978749
    },
    {
        "content": "<p>I had just read this before I'm not in on the process</p>",
        "id": 216169334,
        "sender_full_name": "oliver",
        "timestamp": 1604978790
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/38913#issuecomment-322158939\">https://github.com/rust-lang/rust/issues/38913#issuecomment-322158939</a></p>",
        "id": 216169414,
        "sender_full_name": "oliver",
        "timestamp": 1604978943
    },
    {
        "content": "<p>oh wow, this might allow unifying <code>check</code> and <code>build</code> metadata <a href=\"https://github.com/rust-lang/rust/issues/38913#issuecomment-322323908\">https://github.com/rust-lang/rust/issues/38913#issuecomment-322323908</a></p>",
        "id": 216169497,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1604979064
    },
    {
        "content": "<p>thanks for the thorough answer!</p>",
        "id": 216252738,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1605032795
    },
    {
        "content": "<p>Do we have a simple way to lookup more info about an extern type? should I just look at methods on CStore that is contained in the Resolver?</p>",
        "id": 217421513,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1605888665
    }
]