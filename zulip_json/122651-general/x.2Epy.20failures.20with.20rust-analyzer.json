[
    {
        "content": "<p>Since I started using rust-analyzer, I am regularly getting errors like this when calling <code>x.py</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0460]: found possibly newer version of crate `std` which `log` depends on\n  --&gt; src/librustc_driver/lib.rs:12:1\n   |\n12 | extern crate log;\n   | ^^^^^^^^^^^^^^^^^\n   |\n   = note: perhaps that crate needs to be recompiled?\n   = note: the following crate versions were found:\n           crate `std`: /home/r/src/rust/rustc.2/build/x86_64-unknown-linux-gnu/stage0-sysroot/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-85c1f7840b2e949a.rmeta\n           crate `log`: /home/r/src/rust/rustc.2/build/x86_64-unknown-linux-gnu/stage0-rustc/x86_64-unknown-linux-gnu/release/deps/liblog-e908fe5e323e7fd9.rlib\n\nerror: aborting due to previous error\n\nerror: could not compile `rustc_driver`.\n</code></pre></div>\n\n\n<p>Is anyone else having that problem?</p>",
        "id": 198528974,
        "sender_full_name": "RalfJ",
        "timestamp": 1590229482
    },
    {
        "content": "<p>I AM TOO! I could have SWORN that once I started using rust-analyzer this started happening, but I couldn't prove it</p>",
        "id": 252085895,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1630858484
    },
    {
        "content": "<p>this is probably <a href=\"https://github.com/rust-lang/rust/pull/88310\">https://github.com/rust-lang/rust/pull/88310</a></p>",
        "id": 252087534,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630860312
    },
    {
        "content": "<p>rust-analyzer doesn't even work for me on the rust repo, I get cyclic dep errors.</p>",
        "id": 252087604,
        "sender_full_name": "The 8472",
        "timestamp": 1630860380
    },
    {
        "content": "<p>I get cyclic deps errors too, but rust-analyzer still seems to work decently ok even with them</p>",
        "id": 252087640,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1630860448
    },
    {
        "content": "<p>I got index out of bound panic</p>",
        "id": 252087648,
        "sender_full_name": "Gary Guo",
        "timestamp": 1630860469
    },
    {
        "content": "<p>ok, \"doesn't work\" may have been a slight overstatement. type-inference seems lack-luster - often {unknown} on locals even when the code compiles - which then leads to autocompletion failures. Errors don't show up as I type. Have to save the file, which re-runs check for everything... I thought the point of rust-analyzer was to do this incrementally.<br>\nIntellij otoh handles it better most of the time but it falls down on modules behind <code>cfg_if</code>, e.g. the entire <code>std::sys</code> hierarchy.</p>",
        "id": 252088684,
        "sender_full_name": "The 8472",
        "timestamp": 1630861494
    }
]