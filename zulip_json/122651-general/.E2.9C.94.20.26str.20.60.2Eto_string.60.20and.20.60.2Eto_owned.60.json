[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"440090\">Darrow O'Lykos [Rust Philly]</span> has marked this topic as resolved.</p>",
        "id": 276966390,
        "sender_full_name": "Notification Bot",
        "timestamp": 1648538329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257758\">@Connor Horman</span> btw, you could feature an <em>inherent</em> <code>.to_string()</code> impl on your <code>StringView</code>, so that in non-generic contexts, it shadows the <code>Display</code>-induced <code>ToString::to_string()</code>, yielding at least a poorman's specialization in known-type contexts</p>",
        "id": 276983224,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1648548725
    },
    {
        "content": "<p>I think <code>to_string</code> was misnamed. <code>to_string</code> reads like <code>to_String</code>, or <code>String::from</code>, but it's really <code>turn_into_text_for_humans</code>. It's just a coincidence that the way to turn a <code>&amp;str</code> into text for humans is to call <code>to_owned()</code>.</p>",
        "id": 278061006,
        "sender_full_name": "Robert",
        "timestamp": 1649267375
    },
    {
        "content": "<p>True, <code>.to_string()</code> is a bit of an ambiguous naming in that regard: it's indeed rather <code>.display_to_string()</code></p>",
        "id": 278175770,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1649343245
    }
]