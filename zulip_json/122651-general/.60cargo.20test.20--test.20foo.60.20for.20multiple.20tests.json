[
    {
        "content": "<p>Is there an equivalent of <code>cargo test --test</code> for multiple tests?</p>",
        "id": 209248141,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599438186
    },
    {
        "content": "<p>you can pass --test multiple times I think</p>",
        "id": 209248150,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599438234
    },
    {
        "content": "<p>Hmm, I guess that's not what was failing then. These tests were failing in <code>cargo</code> in my PR:</p>\n<div class=\"codehilite\"><pre><span></span><code>failures:\n    build::cargo_compile_with_invalid_code\n    build::signal_display\n    build_script::build_deps_not_for_normal\n    check::short_message_format\n    fix::do_not_fix_broken_builds\n    install::compile_failure\n</code></pre></div>\n\n\n<p>But when I run:</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo test --test build::signal_display --test build_script::build_deps_not_for_normal --test check::short_message_format --test fix::do_not_fix_broken_builds --test install::compile_failure\n</code></pre></div>\n\n\n<p>I get:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: no test target named `build::signal_display`\n</code></pre></div>",
        "id": 209249147,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599440013
    },
    {
        "content": "<p>What do you think the issue is?</p>",
        "id": 209249150,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599440024
    },
    {
        "content": "<p>it's likely a unit test, not an integration test</p>",
        "id": 209249196,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440087
    },
    {
        "content": "<p>try <code>cargo test build::signal_display</code> instead</p>",
        "id": 209249198,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440096
    },
    {
        "content": "<p>that passes the argument to the test binary, not cargo</p>",
        "id": 209249204,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440105
    },
    {
        "content": "<p>That works! Is there any way to do that for multiple tests?</p>",
        "id": 209249323,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599440392
    },
    {
        "content": "<p>I guess I could run them all sequentially, but then I'm not taking advantage of parallel test running</p>",
        "id": 209249371,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599440424
    },
    {
        "content": "<p>hmm I'm not sure ... I think if you pass multiple arguments it will filter <em>all</em>, not <em>any</em> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 209249372,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440428
    },
    {
        "content": "<p>I wish cargo didn't rerun tests if they've succeeded without a recompile</p>",
        "id": 209249378,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440444
    },
    {
        "content": "<p>I get this when I run with <code>cargo test foo bar baz</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: Found argument &#39;build_script::build_deps_not_for_normal&#39; which wasn&#39;t expected, or isn&#39;t valid in this context\n\nUSAGE:\n    cargo test [OPTIONS] [TESTNAME] [-- &lt;args&gt;...]\n\nFor more information try --help\n</code></pre></div>",
        "id": 209249383,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599440467
    },
    {
        "content": "<p>Actually I'm just doing this because I want to get the same output as a CI build without rerunning all the tests that passed</p>",
        "id": 209249389,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599440498
    },
    {
        "content": "<p>Maybe I'll make a feature request for this</p>",
        "id": 209249390,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599440516
    },
    {
        "content": "<p>you can find what arguments the test runner takes with <code>cargo test --lib -- -h</code></p>",
        "id": 209249426,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440525
    },
    {
        "content": "<p>but yeah I'm not sure</p>",
        "id": 209249428,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440528
    },
    {
        "content": "<p>this is actually very relevant to my 2021 blog post haha <a href=\"https://jyn514.github.io/2020/09/05/Rust-in-2021.html\">https://jyn514.github.io/2020/09/05/Rust-in-2021.html</a></p>",
        "id": 209249433,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599440544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> Okay, filed <a href=\"https://github.com/rust-lang/cargo/issues/8685\">rust-lang/cargo#8685</a>! Feel free to add clarifying information :)</p>",
        "id": 209249775,
        "sender_full_name": "Noah Lev",
        "timestamp": 1599441296
    }
]