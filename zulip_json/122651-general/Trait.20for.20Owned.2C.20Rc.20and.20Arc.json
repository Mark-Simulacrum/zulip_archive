[
    {
        "content": "<p>Hello! I am trying to declare a struct with a generic type which i want to restrict to something can either be an owned value, an <code>rc</code> or an <code>arc</code> (or any things that can give me a reference to my target type).<br>\nI've tried using <code>Deref</code> trait, but obvisouly that does not work for the \"owned\" case.<br>\nI pasted my code here: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fffb76898fa8b11f38973bcc50074b9a\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fffb76898fa8b11f38973bcc50074b9a\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fffb76898fa8b11f38973bcc50074b9a</a></p>",
        "id": 195748161,
        "sender_full_name": "marmeladema",
        "timestamp": 1588183518
    },
    {
        "content": "<p>doing this properly needs \"higher-order traits\" aka higher-kinded types aka GAT (generic associated types)</p>",
        "id": 195748220,
        "sender_full_name": "RalfJ",
        "timestamp": 1588183552
    },
    {
        "content": "<p>It seems that every time i want to do fancy trait stuff, i end up being blocked by the lack of GAT :p</p>",
        "id": 195748398,
        "sender_full_name": "marmeladema",
        "timestamp": 1588183631
    },
    {
        "content": "<p>yeah there is a reason people keep asking for them ;)</p>",
        "id": 195748471,
        "sender_full_name": "RalfJ",
        "timestamp": 1588183664
    },
    {
        "content": "<p>If only i had enough knowledge to help on the matter :/<br>\nIn the mean time, is there a \"hack\" i could use?</p>",
        "id": 195748685,
        "sender_full_name": "marmeladema",
        "timestamp": 1588183757
    },
    {
        "content": "<p>DID SOMEONE SAY GAT?</p>\n<p>This is the SO Rust chatroom meta:</p>\n<p><a href=\"/user_uploads/4715/mTexTOPPVUlJtAP0dX9dj-Cc/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/mTexTOPPVUlJtAP0dX9dj-Cc/image.png\" title=\"image.png\"><img src=\"/user_uploads/4715/mTexTOPPVUlJtAP0dX9dj-Cc/image.png\"></a></div>",
        "id": 195748959,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588183913
    },
    {
        "content": "<p>GATs are a bit of a meme over there</p>",
        "id": 195749002,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588183923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> <a href=\"https://stackoverflow.com/q/54161441/155423\" title=\"https://stackoverflow.com/q/54161441/155423\">Is there any way to simulate Generic Associated Types / Associated Type Constructors in Rust?</a></p>",
        "id": 195749112,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588183977
    },
    {
        "content": "<p>There's some small things, but nothing complete</p>",
        "id": 195749142,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588183992
    },
    {
        "content": "<p>i'll read that</p>",
        "id": 195749183,
        "sender_full_name": "marmeladema",
        "timestamp": 1588184017
    },
    {
        "content": "<blockquote>\n<p>(or any things that can give me a reference to my target type</p>\n</blockquote>\n<p>what about <a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html\" title=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html\">https://doc.rust-lang.org/std/convert/trait.AsRef.html</a> ?</p>",
        "id": 195749211,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588184035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> do you have highlighting configured for GAT here or what? ;)</p>",
        "id": 195749283,
        "sender_full_name": "RalfJ",
        "timestamp": 1588184061
    },
    {
        "content": "<p>Or <code>Borrow</code>, if you can figure out the difference.</p>",
        "id": 195749289,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588184064
    },
    {
        "content": "<p><code>kirby-dream-land</code>? <code>shepmaster-fanclub</code>? I see what you did there x)</p>",
        "id": 195749322,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1588184088
    },
    {
        "content": "<p>Same error <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fdc9010cfe53af9e9b0d47e259466b98\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fdc9010cfe53af9e9b0d47e259466b98\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fdc9010cfe53af9e9b0d47e259466b98</a></p>",
        "id": 195749387,
        "sender_full_name": "marmeladema",
        "timestamp": 1588184125
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> amusingly, I'm not the primary GAT memer there. I just join in that fun.</p>\n<p><span class=\"user-mention\" data-user-id=\"255061\">@LeSeulArtichaut</span> And I didn't even do that either ;-)</p>\n<p>There was a week where all of the SO regulars had a Kirby-themed avatar. That was highly confusing.</p>",
        "id": 195749401,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588184140
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=929d0c6b211a88b78459cb9c6312adcf\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=929d0c6b211a88b78459cb9c6312adcf\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=929d0c6b211a88b78459cb9c6312adcf</a> <code>Borrow</code> works</p>",
        "id": 195749581,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588184218
    },
    {
        "content": "<p>oh cool</p>",
        "id": 195749613,
        "sender_full_name": "marmeladema",
        "timestamp": 1588184236
    },
    {
        "content": "<p>I guess there is no <code>impl&lt;T&gt; AsRef&lt;T&gt; for T {...}</code>?</p>",
        "id": 195749675,
        "sender_full_name": "marmeladema",
        "timestamp": 1588184275
    },
    {
        "content": "<p>but why?</p>",
        "id": 195749783,
        "sender_full_name": "marmeladema",
        "timestamp": 1588184308
    },
    {
        "content": "<p><code>Unlike AsRef, Borrow has a blanket impl for any T, and can be used to accept either a reference or a value.</code></p>",
        "id": 195749860,
        "sender_full_name": "marmeladema",
        "timestamp": 1588184355
    },
    {
        "content": "<p>but good news is, it seems i don't need GAT after all :D</p>",
        "id": 195750000,
        "sender_full_name": "marmeladema",
        "timestamp": 1588184411
    },
    {
        "content": "<p>That's also one of the key \"tricks\" for avoiding GATs — don't be abstract over references or not references.</p>",
        "id": 195750137,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588184506
    },
    {
        "content": "<p>Since you said you wanted to always get a reference.</p>",
        "id": 195750211,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588184523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> i slightly modified your solution by adding a lifetime to <code>Inner</code>: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=802b60d5e5abbc530b8c92a70c44bd57\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=802b60d5e5abbc530b8c92a70c44bd57\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=802b60d5e5abbc530b8c92a70c44bd57</a><br>\nCompiler complains that the lifetime is not used. Is this intended?</p>",
        "id": 195759883,
        "sender_full_name": "marmeladema",
        "timestamp": 1588189110
    },
    {
        "content": "<p>I mean, I can add a phantomData is that pleases rustc, but i don't really understand why i have to do that</p>",
        "id": 195759919,
        "sender_full_name": "marmeladema",
        "timestamp": 1588189138
    },
    {
        "content": "<p>I understand it in vague terms which I both can't express cleanly and wouldn't help much <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\nI do recommend using <code>PhantomData&lt;Inner&lt;'a&gt;&gt;</code> to please the crab though <span aria-label=\"crab\" class=\"emoji emoji-1f980\" role=\"img\" title=\"crab\">:crab:</span></p>",
        "id": 195761145,
        "sender_full_name": "lcnr",
        "timestamp": 1588189785
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7c2fd589dc5e1408359a34feeffccd33\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7c2fd589dc5e1408359a34feeffccd33\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7c2fd589dc5e1408359a34feeffccd33</a></p>",
        "id": 195761411,
        "sender_full_name": "lcnr",
        "timestamp": 1588189922
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> I'd probably just leave that bound off  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9b412eb117e0dc4528db53ad241e2296\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9b412eb117e0dc4528db53ad241e2296\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9b412eb117e0dc4528db53ad241e2296</a></p>",
        "id": 195763682,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1588191091
    },
    {
        "content": "<p>oh right ok, i was making something way more complicated that it needs to be^^</p>",
        "id": 195766962,
        "sender_full_name": "marmeladema",
        "timestamp": 1588192863
    },
    {
        "content": "<p>thanks for the help</p>",
        "id": 195766979,
        "sender_full_name": "marmeladema",
        "timestamp": 1588192874
    }
]