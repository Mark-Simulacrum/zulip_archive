[
    {
        "content": "<p>Hello! I think I found a bug in cargo where when you specify a dep with <code>defp = {git = \"http://example.com\", default-feature = false}</code><br>\nThe <code>default-feature = false</code> will not work</p>\n<p>Can anyone confirm? And if so, can I open a PR to fix this bug?</p>",
        "id": 260531956,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636227341
    },
    {
        "content": "<p>Do you mean <code>default-features</code>?</p>",
        "id": 260532189,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636227626
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203546\">Laurențiu</span> <a href=\"#narrow/stream/122651-general/topic/Cargo.20bug/near/260532189\">said</a>:</p>\n<blockquote>\n<p>Do you mean <code>default-features</code>?</p>\n</blockquote>\n<p>Yes</p>",
        "id": 260533554,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636229283
    },
    {
        "content": "<p>It worked last time I tried it IIRC. Are you sure you don't have another dependency which enables those features?</p>",
        "id": 260533582,
        "sender_full_name": "Laurențiu",
        "timestamp": 1636229324
    },
    {
        "content": "<p><a href=\"https://github.com/AsafFisher/byteorder\">https://github.com/AsafFisher/byteorder</a><br>\nTry using this as a dep and set default-features to false and check the feature tree</p>",
        "id": 260533769,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636229554
    },
    {
        "content": "<p>I still see the std feature added from this dep</p>",
        "id": 260533797,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636229599
    },
    {
        "content": "<p>When I type <code>cargo tree -e features</code> I get std in the <code>core2</code> package.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">byteorder</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">.</span><span class=\"mf\">4.3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/AsafFisher/byteorder#d7d443a8)</span>\n<span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">core2</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"s\">\"default\"</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">       </span><span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">core2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">3.2</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">       </span><span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">memchr</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">4.1</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">       </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">core2</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"s\">\"std\"</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">           </span><span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">core2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">3.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">           </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">core2</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"s\">\"alloc\"</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">               </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">core2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">3.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This is weird because this is the toml of <code>byteorder</code>:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"byteorder\"</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"1.4.3\"</span>  <span class=\"c1\">#:version</span>\n<span class=\"n\">authors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"Andrew Gallant &lt;jamslam@gmail.com&gt;\"</span><span class=\"p\">]</span>\n<span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s\">\"Library for reading/writing numbers in big-endian and little-endian.\"</span>\n<span class=\"n\">documentation</span> <span class=\"o\">=</span> <span class=\"s\">\"https://docs.rs/byteorder\"</span>\n<span class=\"n\">homepage</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/BurntSushi/byteorder\"</span>\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/BurntSushi/byteorder\"</span>\n<span class=\"n\">readme</span> <span class=\"o\">=</span> <span class=\"s\">\"README.md\"</span>\n<span class=\"n\">categories</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"encoding\"</span><span class=\"p\">,</span> <span class=\"s\">\"parsing\"</span><span class=\"p\">,</span> <span class=\"s\">\"no-std\"</span><span class=\"p\">]</span>\n<span class=\"n\">keywords</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"byte\"</span><span class=\"p\">,</span> <span class=\"s\">\"endian\"</span><span class=\"p\">,</span> <span class=\"s\">\"big-endian\"</span><span class=\"p\">,</span> <span class=\"s\">\"little-endian\"</span><span class=\"p\">,</span> <span class=\"s\">\"binary\"</span><span class=\"p\">]</span>\n<span class=\"n\">license</span> <span class=\"o\">=</span> <span class=\"s\">\"Unlicense OR MIT\"</span>\n<span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"/ci/*\"</span><span class=\"p\">]</span>\n<span class=\"n\">edition</span> <span class=\"o\">=</span> <span class=\"s\">\"2018\"</span>\n\n<span class=\"k\">[lib]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"byteorder\"</span>\n<span class=\"n\">bench</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">]</span> <span class=\"c1\"># &lt;=============================</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.3.2\"</span>\n<span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n\n<span class=\"k\">[dev-dependencies]</span>\n<span class=\"n\">quickcheck</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.9.2\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"n\">false</span> <span class=\"p\">}</span>\n<span class=\"n\">rand</span> <span class=\"o\">=</span> <span class=\"s\">\"0.7\"</span>\n\n<span class=\"k\">[features]</span>\n<span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"std\"</span><span class=\"p\">]</span>\n<span class=\"n\">std</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"c1\"># This feature is no longer used and is DEPRECATED. This crate now</span>\n<span class=\"c1\"># automatically enables i128 support for Rust compilers that support it. The</span>\n<span class=\"c1\"># feature will be removed if and when a new major version is released.</span>\n<span class=\"n\">i128</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">[profile.bench]</span>\n<span class=\"n\">opt-level</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre></div>",
        "id": 260533916,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636229761
    },
    {
        "content": "<p>Is there anything else using the crate with the std feature? I tried it by creating a default \"hello world\" project (with <code>cargo new</code>) and adding the dependency. I don't have that issue. My cargo.toml:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[dependencies.byteorder]</span>\n<span class=\"n\">git</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/AsafFisher/byteorder.git\"</span>\n<span class=\"n\">default_features</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n</code></pre></div>\n<p><code>cargo tree -e features</code></p>\n<div class=\"codehilite\" data-code-language=\"plain\"><pre><span></span><code>temp v0.1.0 (Z:\\test\\temp)\n└── byteorder v1.4.3 (https://github.com/AsafFisher/byteorder.git#683d3114)\n    └── core2 v0.3.2\n        └── memchr v2.4.1\n</code></pre></div>",
        "id": 260534272,
        "sender_full_name": "Chris Denton",
        "timestamp": 1636230250
    },
    {
        "content": "<p>That is weird ….<br>\nHere is my toml test:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"n\">cargo-features</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"edition2021\"</span><span class=\"p\">]</span>\n<span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"coregdb\"</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span> <span class=\"o\">=</span> <span class=\"s\">\"2021\"</span>\n\n<span class=\"k\">[lib]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"libcore\"</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s\">\"src/lib.rs\"</span>\n\n<span class=\"k\">[dependencies]</span>\n<span class=\"n\">common</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.1.0\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s\">\"../common\"</span><span class=\"p\">}</span>\n\n<span class=\"c1\">#hal-stdgdb = {version = \"0.1.0\",path=\"../hal/stdgdb\"}</span>\n<span class=\"n\">byteorder</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">git</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/AsafFisher/byteorder\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"n\">false</span><span class=\"p\">}</span>\n<span class=\"n\">num-traits</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"0.2\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"n\">false</span><span class=\"p\">}</span>\n<span class=\"n\">num-derive</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"0.3\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"n\">false</span><span class=\"p\">}</span>\n<span class=\"n\">libc</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"0.2.103\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"n\">false</span><span class=\"p\">}</span>\n<span class=\"n\">serde</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"1.0.130\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"n\">false</span><span class=\"p\">,</span> <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"derive\"</span><span class=\"p\">]}</span>\n<span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"0.4.0\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span> <span class=\"o\">=</span> <span class=\"n\">false</span><span class=\"p\">}</span>\n<span class=\"n\">anyhow</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"1.0.44\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span><span class=\"o\">=</span><span class=\"n\">false</span><span class=\"p\">}</span>\n<span class=\"n\">base64</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"0.13.0\"</span><span class=\"p\">,</span> <span class=\"n\">default-features</span><span class=\"o\">=</span><span class=\"n\">false</span><span class=\"p\">,</span> <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">\"alloc\"</span><span class=\"p\">]}</span>\n<span class=\"n\">thiserror</span> <span class=\"o\">=</span> <span class=\"s\">\"1.0.30\"</span>\n\n<span class=\"n\">serde-json-core</span> <span class=\"o\">=</span> <span class=\"s\">\"0.4.0\"</span>\n<span class=\"n\">static-alloc</span> <span class=\"o\">=</span> <span class=\"s\">\"0.2.3\"</span>\n</code></pre></div>",
        "id": 260534461,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636230519
    },
    {
        "content": "<p>When I use the tree I see std on byteorder</p>",
        "id": 260534476,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636230545
    },
    {
        "content": "<p>Does \"common\" depend on byteorder?</p>",
        "id": 260534784,
        "sender_full_name": "Chris Denton",
        "timestamp": 1636230938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260325\">Chris Denton</span> <a href=\"#narrow/stream/122651-general/topic/Cargo.20bug/near/260534784\">said</a>:</p>\n<blockquote>\n<p>Does \"common\" depend on byteorder?</p>\n</blockquote>\n<p>Why does it matter? In the tree I see std is coming from byteorder</p>",
        "id": 260536761,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636233734
    },
    {
        "content": "<p>If there is another crate in your dependency graph that depends on byteorder that doesn't set <code>default-features = false</code> for it then it will pull in std due to that</p>",
        "id": 260537051,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1636234133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300586\">Lukas Wirth</span> <a href=\"#narrow/stream/122651-general/topic/Cargo.20bug/near/260537051\">said</a>:</p>\n<blockquote>\n<p>If there is another crate in your dependency graph that depends on byteorder that doesn't set <code>default-features = false</code> for it then it will pull in std due to that</p>\n</blockquote>\n<p>Ohhh I need to check that.</p>",
        "id": 260538263,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636235648
    },
    {
        "content": "<p>It seems like there are not other crates that I know of</p>",
        "id": 260542353,
        "sender_full_name": "Asaf Fisher",
        "timestamp": 1636241402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455787\">@Asaf Fisher</span> You can run <code>cargo tree -i byteorder -e features</code> to see which package is setting the <code>std</code> feature.</p>",
        "id": 260542665,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636241976
    },
    {
        "content": "<p>There is an example of the bottom of <a href=\"https://doc.rust-lang.org/cargo/commands/cargo-tree.html\">https://doc.rust-lang.org/cargo/commands/cargo-tree.html</a> on how to read the output.</p>",
        "id": 260542730,
        "sender_full_name": "Eric Huss",
        "timestamp": 1636242042
    }
]