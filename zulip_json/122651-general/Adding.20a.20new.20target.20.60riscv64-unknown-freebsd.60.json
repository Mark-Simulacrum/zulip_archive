[
    {
        "content": "<p>I have a rather specific question.  To summarize: I have a new platform.  For the curious it is riscv64-unknown-freebsd.  It currently has no rust.  I would like it to have rust.  It has clang and a toolchain.  I need to generate rust bootstrap binaries to go into the FreeBSD ports tree such that everyone can enjoy rust on this new system ... or class of systems.</p>\n<p>Please direct me to people who have knowledge on how this is done.  I have the skills and the hardware, I've just run out of ideas having tried different approaches to achieve it.</p>",
        "id": 246807405,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626927564
    },
    {
        "content": "<p>I think the first step would be to add a target specification to rustc (compiler/rustc_target/src/spec) and then add support for the new target to libc (<a href=\"https://github.com/rust-lang/libc\">https://github.com/rust-lang/libc</a>) After that you could try cross-compiling rustc from an already supported target to the new target.</p>",
        "id": 246811671,
        "sender_full_name": "bjorn3",
        "timestamp": 1626933433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"428095\">@Zaphod Beeblebrox</span></p>",
        "id": 246811677,
        "sender_full_name": "bjorn3",
        "timestamp": 1626933445
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/direct.20me.2E/near/246811671\">said</a>:</p>\n<blockquote>\n<p>I think the first step would be to add a target specification to rustc (compiler/rustc_target/src/spec) and then add support for the new target to libc (<a href=\"https://github.com/rust-lang/libc\">https://github.com/rust-lang/libc</a>) After that you could try cross-compiling rustc from an already supported target to the new target.</p>\n</blockquote>\n<p>Ok.  I added to the spec directory.  I created the .rs and I modified <a href=\"http://mod.rs\">mod.rs</a> since it seems that this is where the files are linked in.  However, when I build the cross compiler with this modified source, it does not show in --print  target-list.  While I could check this little bit in, I'd like to get further.</p>",
        "id": 246867324,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626969633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"428095\">@Zaphod Beeblebrox</span> How did you modify <code>mod.rs</code>?</p>",
        "id": 246868345,
        "sender_full_name": "bjorn3",
        "timestamp": 1626970107
    },
    {
        "content": "<p>Can you provide a diff?</p>",
        "id": 246868407,
        "sender_full_name": "bjorn3",
        "timestamp": 1626970147
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/122651-general/topic/direct.20me.2E/near/246868345\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"428095\">Zaphod Beeblebrox</span> How did you modify <code>mod.rs</code>?</p>\n</blockquote>\n<p>[1:28:328]dgilbert@vr:~/devel/rustc-1.53.0-src/vendor/rustc-ap-rustc_target/src/spec&gt; diff mod.rs*<br>\n769d768<br>\n&lt;     (\"riscv64gc-unknown-freebsd\", riscv64gc_unknown_freebsd),</p>",
        "id": 246870333,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626971053
    },
    {
        "content": "<p>That is in the <code>supported_targets!</code> block, right? That should work. Which  rustc executable did you run?</p>",
        "id": 246877150,
        "sender_full_name": "bjorn3",
        "timestamp": 1626973999
    },
    {
        "content": "<p>I built 1.53 to stage 2 and then installed it.  Then I checked that the /usr/local/bin/rustc was date/time appropriate, then I used it to test.</p>",
        "id": 246877890,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626974283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"428095\">@Zaphod Beeblebrox</span> How are you compiling rustc?</p>",
        "id": 246878856,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626974626
    },
    {
        "content": "<p>it looks like you modified the crate in a 'vendor' directory, not in 'compiler/rustc_target/src/spec/mod.rs' in a clone of the compiler</p>",
        "id": 246878953,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1626974662
    },
    {
        "content": "<p>I'm using the x.py thing.</p>",
        "id": 246897564,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626983917
    },
    {
        "content": "<p>OK.  Your change of directory idea got me one step further.  now I am getting this complaint.  Note that my .rs file is largely a copy of the arm64 freebsd .rs file ... along with a few modifications that made sense.</p>",
        "id": 246897668,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626983969
    },
    {
        "content": "<p>Compiling rls-data v0.19.1<br>\nerror[E0063]: missing fields <code>abi_return_struct_as_int</code>, <code>allow_asm</code>, <code>allows_weak_linkage</code> and 88 other fields in initializer of <code>TargetOptions</code><br>\n  --&gt; compiler/rustc_target/src/spec/riscv64gc_unknown_freebsd.rs:10:18<br>\n   |<br>\n10 |         options: TargetOptions {<br>\n   |                  ^^^^^^^^^^^^^ missing <code>abi_return_struct_as_int</code>, <code>allow_asm</code>, <code>allows_weak_linkage</code> and 88 other fields</p>",
        "id": 246897697,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626983984
    },
    {
        "content": "<p>Since, at this point, it's probably pertinent, here's my .rs file: <a href=\"https://termbin.com/vohv\">https://termbin.com/vohv</a></p>",
        "id": 246897897,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626984070
    },
    {
        "content": "<p>I think you removed a trailing <code>..Default::default()</code> from the <code>TargetOptions</code> value.</p>",
        "id": 246898064,
        "sender_full_name": "bjorn3",
        "timestamp": 1626984158
    },
    {
        "content": "<p>getting further.  It says this now:</p>",
        "id": 246912206,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626992136
    },
    {
        "content": "<p>error: unused variable: <code>base</code><br>\n --&gt; compiler/rustc_target/src/spec/riscv64gc_unknown_freebsd.rs:4:13<br>\n  |<br>\n4 |     let mut base = super::freebsd_base::opts();<br>\n  |             ^^^^ help: if this is intentional, prefix it with an underscore: <code>_base</code><br>\n  |</p>",
        "id": 246912207,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626992139
    },
    {
        "content": "<p>... which is something I pulled from another freebsd file.  A different freebsd file includes it a different way inside the target clause ... advice?</p>",
        "id": 246912277,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1626992172
    },
    {
        "content": "<p>that's just a warning, I'd set <code>deny-warnings = false</code> in config.toml until you have thigns working</p>",
        "id": 246916198,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626995387
    },
    {
        "content": "<p>Oh, I think the <code>..Default::default()</code> should actually have been <code>..base</code> instead.</p>",
        "id": 246949888,
        "sender_full_name": "bjorn3",
        "timestamp": 1627026981
    },
    {
        "content": "<p>Well... I got past that by moving one of the things inside 'target' out to be a \"base.\" thing.</p>",
        "id": 247013739,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627064355
    },
    {
        "content": "<p>... so good.  Now I have a rustc compiler with my new target.  When I switch to that new target, I get the following:</p>",
        "id": 247013781,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627064385
    },
    {
        "content": "<p>error[E0432]: unresolved imports <code>libc::c_int</code>, <code>libc::c_void</code><br>\n  --&gt; library/std/src/sys_common/net.rs:17:12<br>\n   |<br>\n17 | use libc::{c_int, c_void};<br>\n   |            ^^^^^  ^^^^^^ no <code>c_void</code> in the root<br>\n   |            |<br>\n   |            no <code>c_int</code> in the root</p>",
        "id": 247013784,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627064387
    },
    {
        "content": "<p>You will need to add support for the new target to libc (<a href=\"https://github.com/rust-lang/libc\">https://github.com/rust-lang/libc</a>) You may be able to copy some parts from other riscv64gc and freebsd targets.</p>",
        "id": 247015657,
        "sender_full_name": "bjorn3",
        "timestamp": 1627065387
    },
    {
        "content": "<p>Is that contained in the rustc archive?</p>",
        "id": 247018402,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627066948
    },
    {
        "content": "<p>It's not in rust-lang/rust , it's a separate repository under the rust-lang organization.</p>",
        "id": 247020995,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627068273
    },
    {
        "content": "<p>and so, x.py is pulling this down for the build?</p>",
        "id": 247021439,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627068546
    },
    {
        "content": "<p>How do I turn that off so I can make modifications locally?</p>",
        "id": 247021615,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627068630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"428095\">@Zaphod Beeblebrox</span> I think you can patch cargo.toml to use a git dependency for libc instead of <a href=\"http://crates.io\">crates.io</a></p>",
        "id": 247023092,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627069476
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/0443424954f32d94f847322e85c77df50d44f80f/library/std/Cargo.toml#L19\">https://github.com/rust-lang/rust/blob/0443424954f32d94f847322e85c77df50d44f80f/library/std/Cargo.toml#L19</a></p>",
        "id": 247023169,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627069517
    },
    {
        "content": "<p>I'm not familiar with what I can put in here.  I've forked libc, made a modification for riscv64gc --- what do I put in cargo.toml?</p>",
        "id": 247024245,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627070140
    },
    {
        "content": "<p>err I mean a path dependency - <code>libc = { path = \"../../../libc\" }</code></p>",
        "id": 247024942,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627070529
    },
    {
        "content": "<p>(or whever you cloned it)</p>",
        "id": 247024948,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627070535
    },
    {
        "content": "<p>something like <code>libc = { git = \"https://github.com/zaphod/libc\", default-features = false, features = ['rustc-dep-of-std']}</code></p>",
        "id": 247024963,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1627070545
    },
    {
        "content": "<p>oh path dep is probably easier yah</p>",
        "id": 247024972,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1627070551
    },
    {
        "content": "<p>oh yeah you will definitely still need <code>rustc-dep-of-std</code></p>",
        "id": 247024987,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627070565
    },
    {
        "content": "<p>FYI, features are ignored in the <code>[patch]</code> table (will soon be a warning).</p>",
        "id": 247025594,
        "sender_full_name": "Eric Huss",
        "timestamp": 1627070967
    },
    {
        "content": "<p>Oh, I see you were saying to update std directly.  I wouldn't do that, since libc shows up in several other places.</p>",
        "id": 247025700,
        "sender_full_name": "Eric Huss",
        "timestamp": 1627071036
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> what would you suggest instead if patch doesn't work?</p>",
        "id": 247025897,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627071144
    },
    {
        "content": "<p>I would use <code>[patch]</code>, don't update <code>[dependencies]</code> directly.</p>",
        "id": 247026127,
        "sender_full_name": "Eric Huss",
        "timestamp": 1627071257
    },
    {
        "content": "<p>Maybe that is what you meant, but I just wasn't sure.</p>",
        "id": 247026281,
        "sender_full_name": "Eric Huss",
        "timestamp": 1627071359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/122651-general/topic/Adding.20a.20new.20target.20.60riscv64-unknown-freebsd.60/near/247026127\">said</a>:</p>\n<blockquote>\n<p>I would use <code>[patch]</code>, don't update <code>[dependencies]</code> directly.</p>\n</blockquote>\n<p>but you just said <code>features</code> doesn't work with patch - how would you enable rustc-dep-of-std?</p>",
        "id": 247027440,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627071935
    },
    {
        "content": "<p>or is it controlled by library/std/Cargo.toml, and it doesn't need changes at all?</p>",
        "id": 247027463,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627071949
    },
    {
        "content": "<p>Yea, it's controlled from the original definition.</p>",
        "id": 247027496,
        "sender_full_name": "Eric Huss",
        "timestamp": 1627071963
    },
    {
        "content": "<p><a href=\"https://github.com/zBeeble42/rust-libc/tree/master/src/unix/bsd/freebsdlike/freebsd\">https://github.com/zBeeble42/rust-libc/tree/master/src/unix/bsd/freebsdlike/freebsd</a></p>",
        "id": 247028223,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627072431
    },
    {
        "content": "<p>... so I added <a href=\"http://riscv64gc.rs\">riscv64gc.rs</a>.  Pretty minimal, but since the compile failed the same way, I'm assuming there's a bit of interfile linkage I'm not seeing.</p>",
        "id": 247028325,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627072463
    },
    {
        "content": "<p>I think you need to add it here: <a href=\"https://github.com/zBeeble42/rust-libc/blob/master/src/unix/bsd/freebsdlike/freebsd/mod.rs#L1737\">https://github.com/zBeeble42/rust-libc/blob/master/src/unix/bsd/freebsdlike/freebsd/mod.rs#L1737</a></p>",
        "id": 247034472,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1627075488
    },
    {
        "content": "<p>damn... missed that.</p>",
        "id": 247034805,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627075768
    },
    {
        "content": "<p>modules can be confusing!</p>",
        "id": 247035806,
        "sender_full_name": "Gus Wynn",
        "timestamp": 1627076458
    },
    {
        "content": "<p>same error fail on that build.</p>",
        "id": 247040920,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627080079
    },
    {
        "content": "<p>OK.  In general, rust is pretty complex to put together.  I've made files to put in compiler/rustc_target/src/spec (modifying <a href=\"http://mod.rs\">mod.rs</a> and making <a href=\"http://riscv64gc-unknown-freebsd.rs\">riscv64gc-unknown-freebsd.rs</a>) and modified library/std/Cargo.toml to use my modified rust libc ... I think I'm suck in some \"off by ones\" ... not being of rust culture ... so not knowing exactly what's required.  The compiler knows about my new triple, but all of the sizes and whatnot don't seem to exist in libc.</p>",
        "id": 247604140,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627574667
    },
    {
        "content": "<p>You may want to use a <code>[patch.crates-io]</code> section in the root <code>Cargo.toml</code> instead of changing <code>library/std/Cargo.toml</code>. libstd has some dependencies that also use libc like backtrace.</p>",
        "id": 247604303,
        "sender_full_name": "bjorn3",
        "timestamp": 1627574757
    },
    {
        "content": "<p>that's not the error I'm getting.  I'm fixing up my git repository so that you guys can look at it.  almost finished.</p>",
        "id": 247604984,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627575114
    },
    {
        "content": "<p>ok.  <a href=\"https://github.com/zBeeble42/rust\">https://github.com/zBeeble42/rust</a> which references (AFAIK) <a href=\"https://github.com/zBeeble42/rust-libc\">https://github.com/zBeeble42/rust-libc</a></p>",
        "id": 247605799,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627575493
    },
    {
        "content": "<p>... my first goal here is to ./x.py build --stage 2 s.t. I can run an install on the target platform.</p>",
        "id": 247605876,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627575534
    },
    {
        "content": "<p>The only thing missing there is config.toml --- which invokes the target architecture and --prefix=/usr/local ('cause FreeBSD).</p>",
        "id": 247605951,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627575593
    },
    {
        "content": "<p>What is the exact error?</p>",
        "id": 247607237,
        "sender_full_name": "bjorn3",
        "timestamp": 1627576195
    },
    {
        "content": "<p>The first error looks like this:</p>",
        "id": 247608751,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627576918
    },
    {
        "content": "<p>17 | use libc::{c_int, c_void};<br>\n   |            ^^^^^  ^^^^^^ no <code>c_void</code> in the root<br>\n   |            |<br>\n   |            no <code>c_int</code> in the root</p>",
        "id": 247608754,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627576919
    },
    {
        "content": "<p>... which I'm told is that the types aren't filled in for the target type.</p>",
        "id": 247608834,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627576944
    },
    {
        "content": "<p>What crate is it compiling when it gives that error?</p>",
        "id": 247615240,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627579859
    },
    {
        "content": "<p>It should say \"failed to compile X due to previous error\"</p>",
        "id": 247615271,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627579872
    },
    {
        "content": "<p>error: could not compile <code>std</code></p>\n<p>To learn more, run the command again with --verbose.<br>\ncommand did not execute successfully: \"/home/dgilbert/devel/rustc-1.53.0-src/build/x86_64-unknown-freebsd/stage0/bin/cargo\" \"build\" \"--target\" \"riscv64gc-unknown-freebsd\" \"-Zbinary-dep-depinfo\" \"-j\" \"16\" \"--release\" \"--features\" \"panic-unwind backtrace compiler-builtins-c\" \"--manifest-path\" \"/home/dgilbert/devel/rustc-1.53.0-src/library/test/Cargo.toml\" \"--message-format\" \"json-render-diagnostics\"<br>\nexpected success, got: exit code: 101<br>\nfailed to run: /home/dgilbert/devel/rustc-1.53.0-src/build/bootstrap/debug/bootstrap build --stage 2<br>\nBuild completed unsuccessfully in 0:25:41</p>",
        "id": 247630464,
        "sender_full_name": "Zaphod Beeblebrox",
        "timestamp": 1627587294
    }
]