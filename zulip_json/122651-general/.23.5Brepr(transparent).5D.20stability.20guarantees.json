[
    {
        "content": "<p>If I understand this correctly, removing <code>#[repr(transparent))]</code> from a type is not considered a breaking change currently, even though it may break something (or at least make it UB).</p>\n<p>In my opinion, changing the <code>repr</code> of a type from something well-defined (like <code>transparent</code> or <code>C</code>) to anything else should be considered a breaking change in <a href=\"https://doc.rust-lang.org/cargo/reference/semver.html\">https://doc.rust-lang.org/cargo/reference/semver.html</a></p>\n<p>There seems to have been discussion on this before, but I'm still interested to know what you'd think of this?</p>\n<p>Related:<br>\n<a href=\"https://github.com/rust-lang/rust/issues/78586\">https://github.com/rust-lang/rust/issues/78586</a></p>",
        "id": 267243489,
        "sender_full_name": "nilstrieb",
        "timestamp": 1641589927
    },
    {
        "content": "<p>Wait, why wouldn't that be considered a breaking change?</p>",
        "id": 267247981,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1641592719
    },
    {
        "content": "<p>It's a breaking change if one of the following is true:</p>\n<ul>\n<li>The fields are public</li>\n<li>The layout is otherwise given publically and documented</li>\n</ul>\n<p>There can be use cases for a public type being <code>#[repr(transparent)]</code> only privately. It shouldn't be a breaking change to remove <code>#[repr(transparent)]</code> from such a type because the transparency isn't exposed as part of the API.</p>",
        "id": 267250616,
        "sender_full_name": "Connor Horman",
        "timestamp": 1641594160
    },
    {
        "content": "<p>(Note that the above conditions are not exclusive: Any time that a type's ABI would become part of it's API <code>repr(transparent)</code> to <code>repr(C)</code>, and any guaranteed repr to <code>repr(Rust)</code> becomes breaking.)</p>",
        "id": 267251956,
        "sender_full_name": "Connor Horman",
        "timestamp": 1641594954
    },
    {
        "content": "<p>There's an open issue suggesting that we change rustdoc to hide repr(transparent) on types where showing that in the public API might give users the wrong idea of what's guaranteed</p>",
        "id": 267265149,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1641604183
    },
    {
        "content": "<p>Confirming what <span class=\"user-mention\" data-user-id=\"257758\">@Connor Horman</span> said is correct. <code>#[repr(transparent)]</code> by itself is meaningless for external users.</p>",
        "id": 267265255,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1641604300
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"245610\">@Jacob Pratt</span> aside from when the fields are public? Or not even then?</p>",
        "id": 267265325,
        "sender_full_name": "Ben Reeves",
        "timestamp": 1641604357
    },
    {
        "content": "<p>That's why I said by itself. If the field is public, it's a guarantee.</p>",
        "id": 267265343,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1641604381
    },
    {
        "content": "<p>When fields are public yes (also when the non 1-ZST field is public)</p>",
        "id": 267265348,
        "sender_full_name": "Connor Horman",
        "timestamp": 1641604385
    },
    {
        "content": "<p>And of course, if it's documented, but documentation alone provides the guaranteed.</p>",
        "id": 267265358,
        "sender_full_name": "Connor Horman",
        "timestamp": 1641604404
    },
    {
        "content": "<p>Would it make sense to add this to the cargo book's semver rules?</p>",
        "id": 267284680,
        "sender_full_name": "nilstrieb",
        "timestamp": 1641631510
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/90435\">#90435</a> would be useful too</p>",
        "id": 267287319,
        "sender_full_name": "The 8472",
        "timestamp": 1641635412
    }
]