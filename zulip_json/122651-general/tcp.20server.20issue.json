[
    {
        "content": "<p>Hi everyone, I have basic TCP blocking server using <code>std::net::TcpListener</code> and <code>std::net::TcpStream</code> The problem I see is that _sometimes_ the server does not read any bytes from the socket after startup. I see packets are received (using tcptump) and I see the linux socket Rx queue increasing but the application does not read any byte from the socket. I tried different ways to read bytes (<code>read()</code>, <code>buf_fil()</code>, <code>read_exact()</code>) and none of them made a difference. With strace I see the socket is blocked on <code>recvfrom</code>.  I mentioned _sometimes_ before, basically the issue happens once in ~5 tries. Any clue what might be wrong?</p>",
        "id": 216319579,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605084554
    },
    {
        "content": "<p>Can you post your code  somewhere like <a href=\"http://play.rust-lang.org\">play.rust-lang.org</a>?</p>",
        "id": 216319684,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605084634
    },
    {
        "content": "<p>the code looks something like this: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4fd1de5b1f808dca8e593197f09b38c0\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4fd1de5b1f808dca8e593197f09b38c0</a></p>",
        "id": 216320676,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605085346
    },
    {
        "content": "<p>I removed the application logic which is mainly involved on<br>\n processing read bytes</p>",
        "id": 216320703,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605085372
    },
    {
        "content": "<p>You're only reading from a client at a time</p>",
        "id": 216321090,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605085569
    },
    {
        "content": "<p>what do you mean? something wrong in the way I use crossbeam scoped threads?</p>",
        "id": 216321168,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605085628
    },
    {
        "content": "<p><code>crossbeam::scope</code> blocks waiting for the threads to finish, so you won't take any new connections while <code>handle_connection</code> is running</p>",
        "id": 216321217,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605085666
    },
    {
        "content": "<p>I only test with one connection and the client connects</p>",
        "id": 216321358,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605085737
    },
    {
        "content": "<p>the reason I am using crossbeam is that I try to share some read only data owned by the main thread with all the threads</p>",
        "id": 216321511,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605085821
    },
    {
        "content": "<p>And there's another bug there, you don't exit when the client disconnects. But I assume it's only in the test code. Can you still reproduce the problem with that simplified example?</p>",
        "id": 216323430,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605087021
    },
    {
        "content": "<p>I need to try the simplified code, will take some time</p>",
        "id": 216325616,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605088505
    },
    {
        "content": "<p>Here is a slightly improved version: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7c0520d91c834ccf619a7a3d074a7d4e\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7c0520d91c834ccf619a7a3d074a7d4e</a></p>",
        "id": 216325726,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605088605
    },
    {
        "content": "<p>seem to work fine now when using the same crossbeam scope, as per your suggestion</p>",
        "id": 216348630,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605103044
    },
    {
        "content": "<p>multumesc frumos :)</p>",
        "id": 216348652,
        "sender_full_name": "Maximilian Hristache",
        "timestamp": 1605103057
    }
]