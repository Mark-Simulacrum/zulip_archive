[
    {
        "content": "<p>I'm trying to compile a \"hello world\" app for <code>aarch64-unknown-linux-musl</code> on Fedora.</p>\n<p>My Cargo.toml</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"hi-wo\"</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span> <span class=\"o\">=</span> <span class=\"s\">\"2018\"</span>\n\n<span class=\"k\">[target.aarch64-unknown-linux-musl]</span>\n<span class=\"n\">linker</span> <span class=\"o\">=</span> <span class=\"s\">\"musl-gcc\"</span>\n</code></pre></div>\n<p>My build cmd</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo build --target<span class=\"o\">=</span>aarch64-unknown-linux-musl\n</code></pre></div>\n<p>This gives me</p>\n<div class=\"codehilite\"><pre><span></span><code>error: linking with `cc` failed: exit code: 1\n...\nnote: /usr/bin/ld: /home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-musl/lib/self-contained/crt1.o: Relocations in generic ELF (EM: 183)\n          /usr/bin/ld: /home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-musl/lib/self-contained/crt1.o: Relocations in generic ELF (EM: 183)\n          /usr/bin/ld: /home/user/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-musl/lib/self-contained/crt1.o: error adding symbols: file in wrong format\n          collect2: error: ld returned 1 exit status\n</code></pre></div>\n<p>I don't know much about linking, so I'm not really sure what I'm doing...</p>",
        "id": 246924452,
        "sender_full_name": "Ben Little",
        "timestamp": 1627004094
    },
    {
        "content": "<p>I don't think you want to link with <code>musl-gcc</code>. That's typically a GCC for your host system. Are you building on an aarch64 platform?</p>",
        "id": 246925212,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627004951
    },
    {
        "content": "<p>If you have or can install an <code>aarch64-linux-musl-gcc</code>, you might want to try linking with that.</p>",
        "id": 246925225,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627004970
    },
    {
        "content": "<p>I'm building on x86. I will try to find a way to get <code>aarch64-linux-musl-gcc</code>.</p>",
        "id": 246925472,
        "sender_full_name": "Ben Little",
        "timestamp": 1627005165
    },
    {
        "content": "<p>Well here's some other data. The <a href=\"https://wiki.musl-libc.org/getting-started.html\">musl docs</a> say to use a cross compiler from <a href=\"https://musl.cc\">musl.cc</a>.</p>",
        "id": 246926694,
        "sender_full_name": "Ben Little",
        "timestamp": 1627006311
    },
    {
        "content": "<p>Okay. The musl cross compiler got me a working <code>aarch64-linux-musl-gcc</code>. However I'm still getting that same error, which makes me think that cargo isn't actually calling the bin that I think it should be. Could the <code>error: linking with `cc` failed</code> indicate a problem? Shouldn't that be <code>error: linking with `aarch64-linux-musl-gcc` failed</code>?</p>",
        "id": 246928444,
        "sender_full_name": "Ben Little",
        "timestamp": 1627007637
    },
    {
        "content": "<p>And after much ado <span aria-label=\"drum\" class=\"emoji emoji-1f941\" role=\"img\" title=\"drum\">:drum:</span> I needed to put the <code>target.aarch64-unknown-linux-musl</code> directive in <code>.cargo/config.toml</code> and not in the manifest <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>\n<p>Well I at least I learned a little about musl.</p>",
        "id": 246929629,
        "sender_full_name": "Ben Little",
        "timestamp": 1627008883
    },
    {
        "content": "<p>Thanks for you help Josh. That would have taken much longer if I had to putz around with <code>musl-gcc</code> before I figured out it was the wrong tool.</p>",
        "id": 246929721,
        "sender_full_name": "Ben Little",
        "timestamp": 1627008967
    },
    {
        "content": "<p>And one (maybe) last comment. It looks like <code>musl-gcc</code> actually _does_ work if I set my configs correctly. I believe it's a wrapper utility for musl cross compilers.</p>",
        "id": 246932133,
        "sender_full_name": "Ben Little",
        "timestamp": 1627011945
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"428223\">@Ben Little</span> Ah, I didn't catch that you said <code>Cargo.toml</code>.</p>",
        "id": 247000214,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627057976
    },
    {
        "content": "<p>Also, that's interesting that musl-gcc works; I wouldn't have expected it to.</p>",
        "id": 247000293,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627058031
    },
    {
        "content": "<p>Perhaps different distributions use that name for a different script.</p>",
        "id": 247000369,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1627058056
    }
]