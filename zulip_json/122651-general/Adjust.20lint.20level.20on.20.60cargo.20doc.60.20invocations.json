[
    {
        "content": "<p>[I'm not sure if this is the right place to post this, so please direct me to the right stream if it isn't]<br>\nIs there a way to adjust a lint's level when running <code>cargo doc</code>? I'd like to use <code>cargo doc --document-private-items</code> in a Git pre-commit hook to verify that my crates' documentation doesn't have any issues, and to help with this I'd like to forbid <code>broken_intra_doc_links</code>. I'm using a workspace, so a method that only touches the <code>cargo doc</code> invocation would be preferable (if such a solution exists).</p>\n<p>Thanks in advance for any help!</p>",
        "id": 222153815,
        "sender_full_name": "Ruby Lazuli",
        "timestamp": 1610167800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"338659\">@Ruby Lazuli</span> to pass flags directly to rustdoc, you can use <code>RUSTDOCFLAGS</code> or <code>cargo rustdoc</code>. If you just want to forbid the intra-doc links warning though, you can add <code>#![deny(broken_intra_doc_links)]</code> in the crate root, since those warnings are only emitted by rustdoc.</p>",
        "id": 222154271,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610168526
    },
    {
        "content": "<p>Btw <code>cargo doc</code> takes a little long for me personally to want it in a pre commit hook, you might consider adding it to CI instead</p>",
        "id": 222154308,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610168596
    },
    {
        "content": "<p>Thank you, setting <code>RUSTDOCFLAGS</code> worked! I wanted to avoid placing <code>forbid</code> attributes since I'm using a workspace which may (at this time) gain crates at any time, and I didn't want to forget to add the attribute to any new crate roots.</p>\n<p><code>cargo doc</code> does seem a bit slow, but I'm used to waiting longer for compiles in exchange for safety :P Thanks for the nudge about CI, by the way. I'm committing directly to the <code>main</code> branch right now since the project is still in a prototype phase, so CI wouldn't stop me until after the fact, but I'll definitely set it up for other contributors.</p>",
        "id": 222154795,
        "sender_full_name": "Ruby Lazuli",
        "timestamp": 1610169347
    },
    {
        "content": "<p>FWIW I've been working on performance lately, so rustdoc should be significantly faster on nightly: <a href=\"https://perf.rust-lang.org/compare.html?start=2020-10-01&amp;end=2020-01-08&amp;stat=instructions%3Au\">https://perf.rust-lang.org/compare.html?start=2020-10-01&amp;end=2020-01-08&amp;stat=instructions%3Au</a></p>",
        "id": 222155496,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610170493
    },
    {
        "content": "<p>I'm not sure why I said 'slow'; it's certainly not instant like <code>git commit</code> with no pre-commit hook, but adding a doc comment to every crate in the workspace leads to <code>git commit .</code> only taking 4.175 seconds on my machine (on nightly, timed with <code>time</code>). That's definitely reasonable enough for me :)<br>\n(Also, thank you for your continued work on rustdoc!)</p>",
        "id": 222155777,
        "sender_full_name": "Ruby Lazuli",
        "timestamp": 1610170954
    }
]