[
    {
        "content": "<p>Kate (the KDE text editor) has a feature where when I hit Shift-Enter to start a new line, the next line starts with the same comment characters as the current one. That is really useful when writing longer comments or doc-comments, as I don't have to type <code>//</code> or <code>///</code> all the time. Is there a similar feature for vscode/rust-analyzer?</p>",
        "id": 201574238,
        "sender_full_name": "RalfJ",
        "timestamp": 1592810544
    },
    {
        "content": "<p>Yes, you need to add a keybinding for the <code>onEnter</code> command</p>",
        "id": 201574308,
        "sender_full_name": "Laurențiu",
        "timestamp": 1592810638
    },
    {
        "content": "<p>But it's a bit awkward if you're using the Vim extension</p>",
        "id": 201574353,
        "sender_full_name": "Laurențiu",
        "timestamp": 1592810651
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4277#issuecomment-623075616\">https://github.com/rust-analyzer/rust-analyzer/issues/4277#issuecomment-623075616</a></p>",
        "id": 201574373,
        "sender_full_name": "Laurențiu",
        "timestamp": 1592810683
    },
    {
        "content": "<p>Im not using the vim extension</p>",
        "id": 201574532,
        "sender_full_name": "RalfJ",
        "timestamp": 1592810795
    },
    {
        "content": "<p>I dont want this to happen on normal enter though, just on shift-enter or so</p>",
        "id": 201574566,
        "sender_full_name": "RalfJ",
        "timestamp": 1592810830
    },
    {
        "content": "<p>Ah, you might be able to add a binding for that (unless Shift-Enter is special)</p>",
        "id": 201574604,
        "sender_full_name": "Laurențiu",
        "timestamp": 1592810872
    },
    {
        "content": "<p>hm, <code>editorLangId</code> is compared twice in that string...</p>",
        "id": 201574741,
        "sender_full_name": "RalfJ",
        "timestamp": 1592810974
    },
    {
        "content": "<p>ah no there's just missing parentheses</p>",
        "id": 201574751,
        "sender_full_name": "RalfJ",
        "timestamp": 1592810991
    },
    {
        "content": "<p>well, relying on <code>&amp;&amp;</code> binding stronger than <code>||</code> which is a form of code obfuscation ;)</p>",
        "id": 201574807,
        "sender_full_name": "RalfJ",
        "timestamp": 1592811007
    },
    {
        "content": "<p>that works, but it only works for doc comments</p>",
        "id": 201574823,
        "sender_full_name": "RalfJ",
        "timestamp": 1592811033
    },
    {
        "content": "<p>I also often write long non-doc comments and would like the same thing there</p>",
        "id": 201574829,
        "sender_full_name": "RalfJ",
        "timestamp": 1592811044
    },
    {
        "content": "<p>is that possible?</p>",
        "id": 201574831,
        "sender_full_name": "RalfJ",
        "timestamp": 1592811046
    },
    {
        "content": "<p>That's because brackets don't work in that attribute. It looks like a JS expression, but it's not.</p>",
        "id": 201574834,
        "sender_full_name": "Laurențiu",
        "timestamp": 1592811049
    },
    {
        "content": "<p>Yeah, it seems like it doesn't work for normal comments, not sure why. It might have been removed at some point.</p>",
        "id": 201574965,
        "sender_full_name": "Laurențiu",
        "timestamp": 1592811174
    },
    {
        "content": "<p>The workaround is to write them as doc comments, then remove a column of slashes <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 201574988,
        "sender_full_name": "Laurențiu",
        "timestamp": 1592811197
    },
    {
        "content": "<p>ugh^^</p>",
        "id": 201575003,
        "sender_full_name": "RalfJ",
        "timestamp": 1592811212
    },
    {
        "content": "<p>my workaround is to make a feature request :D</p>",
        "id": 201575011,
        "sender_full_name": "RalfJ",
        "timestamp": 1592811218
    },
    {
        "content": "<p><a href=\"https://github.com/rust-analyzer/rust-analyzer/issues/4980\">https://github.com/rust-analyzer/rust-analyzer/issues/4980</a></p>",
        "id": 201575018,
        "sender_full_name": "RalfJ",
        "timestamp": 1592811230
    }
]