[
    {
        "content": "<p>It's been over a year since I've written a custom struct serializer. I'm following the docs from <a href=\"https://serde.rs/impl-serialize.html#serializing-a-struct\">https://serde.rs/impl-serialize.html#serializing-a-struct</a>. I'm getting an unexpected type argument error on  fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;. I get that the error is saying it didn't expext S::Error, but removing it causes even more errors. I'm only trying to write a custom serializer for a struct. Is there maybe a version mismatch between the docs and the most recent serde crate? I have serde = { version = \"1.0.123\", features = [\"derive\"] } in my Cargo.toml</p>",
        "id": 226266420,
        "sender_full_name": "JR Smith",
        "timestamp": 1613249435
    },
    {
        "content": "<p>Have you also added the <code>where S: Serializer</code> bound?</p>",
        "id": 226267374,
        "sender_full_name": "Giacomo Stevanato",
        "timestamp": 1613250425
    },
    {
        "content": "<p>I have, yeah. I cleared out my main and just put in the sample code. That compiles. This leads me to believe that there is some kind of conflict in the code.</p>",
        "id": 226267468,
        "sender_full_name": "JR Smith",
        "timestamp": 1613250524
    },
    {
        "content": "<p>I've now commented stuff out until it compiles. I'm going through line by line to figure out where the conflict was. I'll circle back once I figure it out.</p>",
        "id": 226267691,
        "sender_full_name": "JR Smith",
        "timestamp": 1613250821
    },
    {
        "content": "<p>It looks like it was due to how I was importing traits for serde? But I played with until the below and it works.<br>\nuse serde::{Serialize, Deserialize};<br>\nuse serde::ser::{Serializer, SerializeStruct};<br>\nwhereas before I had<br>\nuse serde::{Serialize, Serializer, Deserialize};</p>",
        "id": 226267997,
        "sender_full_name": "JR Smith",
        "timestamp": 1613251191
    }
]