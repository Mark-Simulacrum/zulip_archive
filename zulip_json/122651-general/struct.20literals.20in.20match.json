[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">foo</span>: <span class=\"kt\">bool</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">foo</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">foo</span>: <span class=\"nc\">true</span><span class=\"p\">}.</span><span class=\"n\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>error: struct literals are not allowed here\n --&gt; src/main.rs:7:11\n  |\n7 |     match Foo {foo: true}.foo() {\n  |           ^^^^^^^^^^^^^^^\n  |\nhelp: surround the struct literal with parentheses\n  |\n7 |     match (Foo {foo: true}).foo() {\n  |           ^               ^\n</code></pre></div>\n<p>Usually when rust has weird edge case syntax restrictions there is some reason for it such as defense against future syntax extensions. What's the reason for this one?</p>",
        "id": 227375768,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1614048957
    },
    {
        "content": "<p>there is a similar restriction in <code>if</code> conditions as well</p>",
        "id": 227375846,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1614049009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"271719\">@Mario Carneiro</span> <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0092-struct-grammar.md\">https://github.com/rust-lang/rfcs/blob/master/text/0092-struct-grammar.md</a></p>",
        "id": 227377074,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614050145
    },
    {
        "content": "<p>Oh, I hadn't even noticed the ambiguity. Here's a fun version:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"k\">enum</span> <span class=\"nc\">Void</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">bar</span>: <span class=\"nc\">Void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">bar</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The first is an incomplete match on a unit struct (or would be if not for the RFC), and the second is an empty match on an uninhabited enum followed by an empty block</p>",
        "id": 227380156,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1614053482
    }
]