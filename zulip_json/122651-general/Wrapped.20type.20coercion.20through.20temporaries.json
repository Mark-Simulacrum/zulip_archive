[
    {
        "content": "<p>Hi,<br>\nType coercion can fail when it is passed through a temporary, simplest case: <a href=\"https://play.rust-lang.org/?gist=487d56225ce4b06116eb357f75bf6474\">https://play.rust-lang.org/?gist=487d56225ce4b06116eb357f75bf6474</a><br>\nMore interesting one: <a href=\"https://play.rust-lang.org/?gist=c5421fe405fbccf62782ec1718807e95\">https://play.rust-lang.org/?gist=c5421fe405fbccf62782ec1718807e95</a></p>\n<p>Is there anything I can do about it to make it work? <br>\nmy use-case is <a href=\"http://crates.io/crates/log-derive\">crates.io/crates/log-derive</a> which is a proc-macro that wraps the content of a function in a closure so it can log the output before returning, but because of coercion this can break working code <br>\n(the expanded output from my macro will be something like this: <a href=\"https://play.rust-lang.org/?gist=5d7b3f3addc12e0d08a6b7264619495a\">https://play.rust-lang.org/?gist=5d7b3f3addc12e0d08a6b7264619495a</a>)</p>",
        "id": 202872671,
        "sender_full_name": "Elichai Turkel",
        "timestamp": 1593867315
    },
    {
        "content": "<p>It fails because you cannot coerce <code>Option&lt;*mut T&gt;</code> into <code>Option&lt;*const _&gt;</code>. You can however coerce <code>*mut T</code> into <code>*const T</code></p>",
        "id": 202937125,
        "sender_full_name": "Gary Guo",
        "timestamp": 1593981180
    },
    {
        "content": "<p>Coercion will not happen when there is type inference. In the <code>second</code> function, because you assign it to <code>res</code> which has its type inferred, there is no coercion, thus <code>res</code> got type <code>Option&lt;*mut T&gt;</code>, which cannot be coerced into the return type.</p>",
        "id": 202937190,
        "sender_full_name": "Gary Guo",
        "timestamp": 1593981306
    },
    {
        "content": "<p>To avoid the error, give <code>res</code> an explicit type.</p>",
        "id": 202937244,
        "sender_full_name": "Gary Guo",
        "timestamp": 1593981370
    }
]