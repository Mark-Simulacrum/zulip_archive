[
    {
        "content": "<p><code>quote!</code> allows interpolations with repetitions, of this form:</p>\n<div class=\"codehilite\"><pre><span></span><code>#(#var),* â€” the character before the asterisk is used as a separator\n</code></pre></div>",
        "id": 275589091,
        "sender_full_name": "nnethercote",
        "timestamp": 1647472368
    },
    {
        "content": "<p>I think the separator can be any char <em>other</em> than <code>*</code>, is that right?</p>",
        "id": 275589142,
        "sender_full_name": "nnethercote",
        "timestamp": 1647472418
    },
    {
        "content": "<p>(Actually, I think it can be any token other than <code>*</code>)</p>",
        "id": 275589300,
        "sender_full_name": "nnethercote",
        "timestamp": 1647472546
    },
    {
        "content": "<p>Because <code>#(#var)**</code> is interpreted as <code>#(#var)*</code> (a repetition without a separator) followed by an unrelated <code>*</code></p>",
        "id": 275589390,
        "sender_full_name": "nnethercote",
        "timestamp": 1647472603
    },
    {
        "content": "<p>Some experimentation appears to confirm all of the above.</p>",
        "id": 275591266,
        "sender_full_name": "nnethercote",
        "timestamp": 1647474148
    },
    {
        "content": "<p>Yeah, I think <code>::quote::quote!</code> (aside: not to be confused with <code>::proc_macro::quote!</code>)  emulates <code>macro_rules!</code> syntax, which already has this limitation whereby you can't use one of the Kleene operators (<code>?</code>, <code>*</code>, <code>+</code>) as the separator in a repetition (making it even more annoying to parse trait bounds, btw).<br>\nIn the case of <code>::quote</code>, only the <code>*</code> Kleene operator is supported, leading to actually more flexibility w.r.t. the supported separators.</p>\n<p>FWIW, you can use <code>1 #(* #var)*</code> to work around that limitation <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 275641792,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1647518721
    },
    {
        "content": "<blockquote>\n<p>the character before the asterisk is used as a separator</p>\n</blockquote>\n<p>This is such a bad description</p>",
        "id": 275748051,
        "sender_full_name": "fee1-dead",
        "timestamp": 1647564884
    }
]