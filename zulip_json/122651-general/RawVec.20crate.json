[
    {
        "content": "<p>hashbrown has a <code>raw</code> mod if you enable the feature which makes custom hash maps easier to implement. But the std <code>RawVec</code> is locked behind implementation instability, why not separate it into another crate to make custom vecs easier?</p>",
        "id": 176848198,
        "sender_full_name": "Sydney Acksman",
        "timestamp": 1569717025
    },
    {
        "content": "<p>The <code>RawVec</code> is just something that <code>Vec</code> and <code>Deque</code> need, and it is tailored towards those uses</p>",
        "id": 176908902,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569827954
    },
    {
        "content": "<p>We should probably remove the feature gate since it probably won't be ever exposed at all</p>",
        "id": 176908909,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569827981
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> <span class=\"user-mention\" data-user-id=\"219747\">@Simon Sapin</span></p>",
        "id": 176908915,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569827997
    },
    {
        "content": "<p>even changing tiny details like the growth factor would prevent reusing <code>RawVec</code></p>",
        "id": 176908965,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569828034
    },
    {
        "content": "<p>since e.g. the Vec/Deque/etc. make use of knowledge of the precise growth factor, and IIRC deque constrains it</p>",
        "id": 176908989,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569828066
    },
    {
        "content": "<p>I don't know why there is a feature that exports it</p>",
        "id": 176909068,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569828133
    },
    {
        "content": "<p>there never was an RFC for that AFAIK</p>",
        "id": 176909076,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569828142
    },
    {
        "content": "<p>If someone finds it useful they can just copy&amp;paste <code>RawVec</code> into a different crate, but I don't know of any collection actually using the libstd one, chances are you are going to have to modify <code>RawVec</code> in subtle ways</p>",
        "id": 176909110,
        "sender_full_name": "gnzlbg",
        "timestamp": 1569828207
    },
    {
        "content": "<p>I noticed it also used by libarena but I don't know where that's used.</p>",
        "id": 176945489,
        "sender_full_name": "Sydney Acksman",
        "timestamp": 1569858716
    },
    {
        "content": "<p>libarena is just used internally in the compiler</p>",
        "id": 176978923,
        "sender_full_name": "centril",
        "timestamp": 1569881024
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132920\">@gnzlbg</span> there's a feature gate in <code>hashbrown</code>, I don't think there is one for <code>RawVec</code>?</p>",
        "id": 177712329,
        "sender_full_name": "RalfJ",
        "timestamp": 1570627076
    },
    {
        "content": "<p>I think that for “raw” hash table functionality there is a pre-RFC or similar in internals</p>",
        "id": 177714152,
        "sender_full_name": "gnzlbg",
        "timestamp": 1570628373
    },
    {
        "content": "<p>I don’t recall anything like that for RawVec</p>",
        "id": 177714177,
        "sender_full_name": "gnzlbg",
        "timestamp": 1570628389
    }
]