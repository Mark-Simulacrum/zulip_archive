[
    {
        "content": "<p>Hello!<br>\nIn allocation heavy scenario, I sometime need some kind of  \"bounded free list\".<br>\nFor objects that are expensive to create and/or drop, instead of creating new ones all the time, I usually reset them and store them in a Vec basically just doing push to append to the free list (unless there are already enough objects in the there) and pop (to retrieve an available object if there is one).<br>\nWhen when it comes to multi-threaded scenario, I wonder if there is a better / more performant approach to just blindly using a Mutex&lt;Vec&lt;T&gt;&gt;?</p>",
        "id": 239381351,
        "sender_full_name": "marmeladema",
        "timestamp": 1621410809
    },
    {
        "content": "<p>You may want to use an MPMC queue such as <a href=\"https://docs.rs/concurrent-queue\">https://docs.rs/concurrent-queue</a> or <a href=\"https://docs.rs/crossbeam-queue/*/crossbeam_queue/struct.ArrayQueue.html\">https://docs.rs/crossbeam-queue/*/crossbeam_queue/struct.ArrayQueue.html</a>.</p>",
        "id": 239383426,
        "sender_full_name": "Kestrer",
        "timestamp": 1621411905
    },
    {
        "content": "<p>Ah very interesting thanks! Crossbeam should already be <em>somewhere</em> in my dependency tree anyway :)<br>\nHave there been performance analysis of those two crates compared to a classic Mutex lock-ing?<br>\nIn my scenario, I actually don't do much concurrent access, but I need to provide a thread-safe API to another project and therefore; even though it's not really used in a multi-threaded environment <em>yet</em> I need all the thread-safety I can get, but without sacrificing performances ideally</p>",
        "id": 239384029,
        "sender_full_name": "marmeladema",
        "timestamp": 1621412219
    },
    {
        "content": "<p>A mutex should be quite fast as long as it is uncontended. An atomic RMW instruction per lock and unlock, no syscalls.</p>",
        "id": 239395115,
        "sender_full_name": "The 8472",
        "timestamp": 1621417867
    },
    {
        "content": "<p>Ok that's good to hear. There is probably no point in using advanced current queues yet then.</p>",
        "id": 239395643,
        "sender_full_name": "marmeladema",
        "timestamp": 1621418133
    }
]