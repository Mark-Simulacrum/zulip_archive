[
    {
        "content": "<p>Has anyone already written a program that takes rust source, replaces some {...} with {unimplemented!()} and checks it gets the same compiler error message and repeates? I feel like there should be a deice tool that I can run on some code that ICEs to minimise it before I try and do it manually. (I'm sure there's other applications of a tool such as that). Is there one already I can use / improve or do I get to code one up?</p>",
        "id": 170520365,
        "sender_full_name": "Giles Cope",
        "timestamp": 1562745388
    },
    {
        "content": "<p>next question will be is there a robust (can handle errors well) ast manipulation tree available? I should probably look at rust fix shouldn't I... that changes rust code.</p>",
        "id": 170523038,
        "sender_full_name": "Giles Cope",
        "timestamp": 1562748253
    },
    {
        "content": "<p>c-reduce kinda works on simple rust code, it'd be amazingly useful if it supported more</p>",
        "id": 170525492,
        "sender_full_name": "lqd",
        "timestamp": 1562750701
    },
    {
        "content": "<p>There was something recently...</p>",
        "id": 170540571,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1562764916
    },
    {
        "content": "<p><a href=\"https://github.com/jethrogb/rust-reduce\" target=\"_blank\" title=\"https://github.com/jethrogb/rust-reduce\">https://github.com/jethrogb/rust-reduce</a></p>",
        "id": 170540656,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1562764972
    },
    {
        "content": "<p>fuzzy-pickles has a mutable AST visitor</p>",
        "id": 170540740,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1562765033
    },
    {
        "content": "<p>one of my future ideas is a \"regex on steroids\" where you can say like <code>s/$x = $x + $y/\\0 += \\1</code> (made up, unrealistic syntax)</p>",
        "id": 170541011,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1562765214
    },
    {
        "content": "<p>To be able to do customized code transforms, something I envy from other languages.</p>",
        "id": 170541062,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1562765264
    },
    {
        "content": "<p>or maybe you can adapt <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s <a href=\"https://github.com/rust-lang/rust/pull/19964\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/19964\">\"everybody loops\"</a> to randomize which body to turn into a loop :)</p>",
        "id": 170542184,
        "sender_full_name": "lqd",
        "timestamp": 1562766061
    },
    {
        "content": "<p>I just reviewed a master thesis on a \"regex for asts\" and we're gonna integrate it with clippy</p>",
        "id": 170566407,
        "sender_full_name": "oli",
        "timestamp": 1562783083
    },
    {
        "content": "<p>You can find an early version in the clippy PR list (search for pattern or RFC)</p>",
        "id": 170566457,
        "sender_full_name": "oli",
        "timestamp": 1562783117
    },
    {
        "content": "<p>Well, I guess I <em>could</em> have gotten a Masters. I always assumed all my ideas were ones people had already done.</p>",
        "id": 170568484,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1562784485
    },
    {
        "content": "<p>And of course, now it <em>is</em> done, so I'm back in the same state</p>",
        "id": 170568735,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1562784659
    },
    {
        "content": "<p><a href=\"http://coccinelle.lip6.fr/\" target=\"_blank\" title=\"http://coccinelle.lip6.fr/\">http://coccinelle.lip6.fr/</a> is one of the best at that AFAICT, rust support for <em>that</em> would also be amazing (but I've been told by someone who worked on it that it wouldn't be easy etc)</p>",
        "id": 170569909,
        "sender_full_name": "lqd",
        "timestamp": 1562785596
    },
    {
        "content": "<p>Rust-reduce includes everybody loops among other things. It worked well to bring a large project down to something much more managable.</p>",
        "id": 171587286,
        "sender_full_name": "Giles Cope",
        "timestamp": 1563956528
    }
]