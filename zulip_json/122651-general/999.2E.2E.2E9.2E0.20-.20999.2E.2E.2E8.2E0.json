[
    {
        "content": "<p>how to get the correct result in rust(from an interesting <a href=\"https://news.ycombinator.com/item?id=18832155\" target=\"_blank\" title=\"https://news.ycombinator.com/item?id=18832155\">HN</a> thread?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">9999999999999999.0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mf\">9999999999999998.0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">assert_eq</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=397cf6ad371e03c0e816e94a8ed300e3\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=397cf6ad371e03c0e816e94a8ed300e3\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=397cf6ad371e03c0e816e94a8ed300e3</a></p>",
        "id": 154506638,
        "sender_full_name": "csmoe",
        "timestamp": 1546762741
    },
    {
        "content": "<p><a href=\"https://crates.io/crates/rustc_apfloat\" target=\"_blank\" title=\"https://crates.io/crates/rustc_apfloat\">apfloat</a></p>",
        "id": 154506769,
        "sender_full_name": "nagisa",
        "timestamp": 1546763002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> now that apfloat is a nice external crate, perhaps releasing a proper <code>apfloat</code> and making the compiler depend on it would be great?</p>",
        "id": 154506812,
        "sender_full_name": "nagisa",
        "timestamp": 1546763049
    },
    {
        "content": "<p>thanks <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 154506825,
        "sender_full_name": "csmoe",
        "timestamp": 1546763124
    }
]