[
    {
        "content": "<p>Hi all, this may well be a really obvious question in hindsight but if I pass a method a closure, do any uses of self within that closure coerce to the self type of the method rather than the self type of function method that called the method i.e. </p>\n<div class=\"codehilite\"><pre><span></span><code>struct Foo {}\n\nimpl Foo {\n    fn takes_closure(&amp;self, R: FnOnce) {\n        R()\n    }\n\n    fn baz() {}\n}\n\nStruct Bar {\n    IsFoo: Foo\n}\n\nimpl Bar {\n    fn passes_self_type(&amp;self) {\n        self.IsFoo.takes_closure(|_| {\n            self.baz() &lt;-- Will this call Baz on Foo or Baz on Bar - I am assuming Baz on Foo\n        }\n    }\n    fn baz() {}\n}\n</code></pre></div>",
        "id": 256109739,
        "sender_full_name": "Tom Farmer",
        "timestamp": 1633372609
    },
    {
        "content": "<p><code>self</code> is lexically scoped like any other variable, so <code>self</code> inside the closure still refers to the same value as outside, and <code>self.baz()</code> is <code>Bar::baz</code> (except in your example it won't compile since <code>baz</code> doesn't take a self parameter</p>",
        "id": 256111650,
        "sender_full_name": "Florian Diebold",
        "timestamp": 1633373363
    },
    {
        "content": "<p>Ahhh sure yea I was mostly just typing it out as an example so missed a bit of the syntax - I expect that what I'm seeing in the code I'm reading is calling methods through dereferencing types via the deref trait then. Thanks!</p>",
        "id": 256111924,
        "sender_full_name": "Tom Farmer",
        "timestamp": 1633373460
    },
    {
        "content": "<p>As in the code I'm reading the self type inside the closure doesn't have the method being called on it implemented directly</p>",
        "id": 256112063,
        "sender_full_name": "Tom Farmer",
        "timestamp": 1633373508
    }
]