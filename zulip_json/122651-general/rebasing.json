[
    {
        "content": "<p>so it seems that bors doesn't respect <code>squash!</code> commits, and there is no standard process by which a reviewer warns you before they r+, and the contributing guidelines ask you not to force push, so what are you supposed to do exactly</p>",
        "id": 222387530,
        "sender_full_name": "devsnek",
        "timestamp": 1610421620
    },
    {
        "content": "<blockquote>\n<p>the contributing guidelines ask you not to force push</p>\n</blockquote>\n<p>they do? force pushing is pretty normal IME</p>",
        "id": 222387582,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610421667
    },
    {
        "content": "<p>What is a <code>squash!</code> commit?</p>",
        "id": 222387587,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610421670
    },
    {
        "content": "<p>Yeah, I force push all the time.</p>",
        "id": 222387599,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610421682
    },
    {
        "content": "<p>If they say that we should update them.</p>",
        "id": 222387619,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610421713
    },
    {
        "content": "<p>FYI, we now have <code>@bors squash</code> so you can ask someone to do that.</p>",
        "id": 222387670,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610421726
    },
    {
        "content": "<p>Also, how do you rebase without force-pushing?</p>",
        "id": 222387685,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610421755
    },
    {
        "content": "<blockquote>\n<p>they do? force pushing is pretty normal IME</p>\n</blockquote>\n<p>for example -&gt; <a href=\"https://github.com/rust-lang/rust/pull/78684#issuecomment-720736750\">https://github.com/rust-lang/rust/pull/78684#issuecomment-720736750</a></p>\n<blockquote>\n<p>What is a squash! commit?</p>\n</blockquote>\n<p>when you rebase, git can automatically squash commits which have subjects starting with <code>squash!</code> and <code>fixup!</code></p>",
        "id": 222387707,
        "sender_full_name": "devsnek",
        "timestamp": 1610421783
    },
    {
        "content": "<p>That doesn't say \"don't force push\", it says \"add new commits when you make new changes\":</p>\n<blockquote>\n<p>If any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.</p>\n</blockquote>\n<p>Perhaps we should clarify that.</p>",
        "id": 222387743,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610421841
    },
    {
        "content": "<p>might be good to update it yeah. i'm just sad that now and forever i will have a commit in rust named <code>squash! fix wasi</code> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 222387818,
        "sender_full_name": "devsnek",
        "timestamp": 1610421925
    },
    {
        "content": "<p>By the way, the way I squash is with <code>git rebase -i (git merge-base master HEAD)</code>.</p>",
        "id": 222387926,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610422037
    },
    {
        "content": "<p>yeah generally i would just amend locally and then force push, since gh ui does support showing you what changed in a force push</p>",
        "id": 222388009,
        "sender_full_name": "devsnek",
        "timestamp": 1610422122
    },
    {
        "content": "<p>It's really hard to give general advice, it depends on the PR whether amending commits or pushing updates as new commits makes sense.</p>",
        "id": 222388049,
        "sender_full_name": "simulacrum",
        "timestamp": 1610422178
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"219805\">devsnek</span> <a href=\"#narrow/stream/122651-general/topic/rebasing/near/222388009\">said</a>:</p>\n<blockquote>\n<p>yeah generally i would just amend locally and then force push, since gh ui does support showing you what changed in a force push</p>\n</blockquote>\n<p>It does? News to me <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 222388412,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610422594
    },
    {
        "content": "<p>I agree with what <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> said: it really is dependent on the situation. We should probably say something like that in highfive's message so it doesn't feel like a global rule.</p>",
        "id": 222388437,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610422645
    },
    {
        "content": "<p>Github's force push diffs fail to work pretty often to me.</p>",
        "id": 222414620,
        "sender_full_name": "nagisa",
        "timestamp": 1610448302
    },
    {
        "content": "<p>I have never seen them working I think.</p>",
        "id": 222414951,
        "sender_full_name": "bjorn3",
        "timestamp": 1610448484
    },
    {
        "content": "<p>That's likely because you <em>also</em> rebase at the same time.</p>",
        "id": 222460692,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610470509
    },
    {
        "content": "<p>I have:</p>\n<div class=\"codehilite\"><pre><span></span><code>[alias]\n        safe-rebase = !git rebase $(git merge-base HEAD @{upstream})\n</code></pre></div>",
        "id": 222460757,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610470536
    },
    {
        "content": "<p>When I'm trying to be very easy for a reviewer to follow along, I'll do a rebase of just my commits, force-push that (generating a useful diff) and then rebase on master (to catch conflicts / etc) and force-push that again</p>",
        "id": 222461183,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610470691
    },
    {
        "content": "<p>Usually when I squash I'm rebasing on the merge-base, so I don't think that's the issue. But I didn't even know of a GitHub force-push diff feature, so <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 222491213,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610484062
    },
    {
        "content": "<p>By the way, you can use <code>@{u}</code> instead of <code>@{upstream}</code> â€“ not sure if you know already, but thought it's worth mentioning :)</p>",
        "id": 222491260,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610484087
    },
    {
        "content": "<p>I often use <code>git diff @{u}...</code> after squashing to make sure I didn't make any changes aside from moving commits around.</p>",
        "id": 222491309,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610484110
    },
    {
        "content": "<p>it's not worth putting shorthands like that in scripts / aliases. I don't have to type them there.</p>",
        "id": 222496160,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610486436
    },
    {
        "content": "<p>and I don't find myself typing that at the command line often (because I have the alias, I suppose)</p>",
        "id": 222496362,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1610486556
    },
    {
        "content": "<p>Yeah, I just wanted to make sure you knew in case you do type it often :)</p>\n<p>As I said, I type <code>git diff @{u}..</code> fairly often so it's useful for me.</p>",
        "id": 222510889,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610494068
    },
    {
        "content": "<p>AFAIK we have a general \"no squash or rebase during review\" policy? At least that's what I was told, and it's what I have been telling people. Squashing or rebasing during review makes it much harder to know what changed since the last review.<br>\nHowever, is this documented somewhere, so that I can link contributors to some document instead of having to explain it each time?</p>",
        "id": 222994323,
        "sender_full_name": "RalfJ",
        "timestamp": 1610818371
    },
    {
        "content": "<p>it should be noted on their first pr by highfive</p>",
        "id": 222994351,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818398
    },
    {
        "content": "<p>but it's also not always the right policy</p>",
        "id": 222994356,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818408
    },
    {
        "content": "<p>yeah I remember that. but I assume people forget, and that's not something to link to.</p>",
        "id": 222994363,
        "sender_full_name": "RalfJ",
        "timestamp": 1610818419
    },
    {
        "content": "<p>e.g. if the PR changes &lt;100 lines I personally prefer they keep it clean commit history wise</p>",
        "id": 222994375,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818435
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/rebasing/near/222994356\">said</a>:</p>\n<blockquote>\n<p>but it's also not always the right policy</p>\n</blockquote>\n<p>sure, but it's the right default IMO. it's better than people squashing and rebasing without being prompted to do so ;)</p>",
        "id": 222994415,
        "sender_full_name": "RalfJ",
        "timestamp": 1610818446
    },
    {
        "content": "<p>yes, that seems right</p>",
        "id": 222994421,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818456
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/122651-general/topic/rebasing/near/222994375\">said</a>:</p>\n<blockquote>\n<p>e.g. if the PR changes &lt;100 lines I personally prefer they keep it clean commit history wise</p>\n</blockquote>\n<p>In that case I'll ask them to squash once I am happy, right before <code>r+</code>. but when there are still changes, I have to re-read it all, and even 100 line diffs can contain some not entirely trivial bits.</p>",
        "id": 222994435,
        "sender_full_name": "RalfJ",
        "timestamp": 1610818475
    },
    {
        "content": "<p>yeah I guess it depends, I usually go long enough between reviews to lose just enough context to not really be able to apply diffs and check if they resolve things</p>\n<p>we have</p>\n<blockquote>\n<p>Rust follows a no merge-commit policy, meaning, when you encounter merge conflicts you are expected to always rebase instead of merging. E.g. always use rebase when bringing the latest changes from the master branch to your feature branch. Also, please make sure that fixup commits are squashed into other related commits with meaningful commit messages.</p>\n</blockquote>",
        "id": 222994470,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818546
    },
    {
        "content": "<p>in dev guide</p>",
        "id": 222994473,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818549
    },
    {
        "content": "<p>but that's rather the opposite, under opening a new pr, when it is the right advice</p>",
        "id": 222994492,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818563
    },
    {
        "content": "<p>we should definitely write something up</p>",
        "id": 222994577,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818634
    },
    {
        "content": "<p>could always link to <a href=\"https://github.com/rust-lang/highfive/blob/master/highfive/newpr.py#L25\">https://github.com/rust-lang/highfive/blob/master/highfive/newpr.py#L25</a> which is rather awkward in the meantime :)</p>",
        "id": 222994609,
        "sender_full_name": "simulacrum",
        "timestamp": 1610818667
    },
    {
        "content": "<p>the horizontal scrollbar doesn't help^^</p>",
        "id": 222994678,
        "sender_full_name": "RalfJ",
        "timestamp": 1610818717
    }
]