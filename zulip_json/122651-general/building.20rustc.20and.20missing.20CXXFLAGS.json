[
    {
        "content": "<p>So, in the continuing trend of \"doing everything on hard mode\" for me: I'm trying to build rustc with our canonical C++ compilers (but still the bundled LLVM) statically so I can get it running without gross hacks on our build machines. The wrinkle is that our libc++ was built with <code>-D_GLIBCXX_USE_CXX11_ABI=0</code> and when I try to do that in config.toml, the resulting <code>llvm-config</code> doesn't seem to know about that flag (or any of the other nonsense I dumped in <code>cflags</code> and <code>cxxflags</code> in config.toml). Has anyone seen this kind of issue before? Any pointers on how to debug this phase of the build process?</p>",
        "id": 203996115,
        "sender_full_name": "durin42",
        "timestamp": 1594838677
    },
    {
        "content": "<p>Related: I see <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_llvm/build.rs#L281\">https://github.com/rust-lang/rust/blob/master/src/librustc_llvm/build.rs#L281</a> which seems to indicate that statically linking rustc against libc++  isn't supported, but I can't  find a reason. Does  anyone  know why that line is there?</p>",
        "id": 204008461,
        "sender_full_name": "durin42",
        "timestamp": 1594844801
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> or <span class=\"user-mention\" data-user-id=\"116011\">@Steve Klabnik</span> might have the history on this :)</p>",
        "id": 204091096,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1594909809
    },
    {
        "content": "<p>hmmm</p>",
        "id": 204091172,
        "sender_full_name": "Steve Klabnik",
        "timestamp": 1594909838
    },
    {
        "content": "<p>i do not know</p>",
        "id": 204091261,
        "sender_full_name": "Steve Klabnik",
        "timestamp": 1594909875
    },
    {
        "content": "<p>any thoughts on who might know?</p>",
        "id": 204091349,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1594909909
    },
    {
        "content": "<p>my go-to for build stuff is alex</p>",
        "id": 204091458,
        "sender_full_name": "Steve Klabnik",
        "timestamp": 1594909940
    },
    {
        "content": "<p>I assume I should fire up a VM or something and try to make it work? I suspect I'll trip on the \"missing CXXFLAGS\" nonsense again, but this is basically a blocker for me landing properly-supportable rustc at work.</p>",
        "id": 204091483,
        "sender_full_name": "durin42",
        "timestamp": 1594909948
    },
    {
        "content": "<p>yeah, I was worried you'd say that :P</p>",
        "id": 204091485,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1594909948
    },
    {
        "content": "<p><span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 204091606,
        "sender_full_name": "Steve Klabnik",
        "timestamp": 1594909999
    },
    {
        "content": "<p>We can email Alex I guess <span class=\"user-mention\" data-user-id=\"316805\">@durin42</span></p>",
        "id": 204091687,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1594910038
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"116011\">@Steve Klabnik</span> , hopefully I get somewhere useful soon :)</p>",
        "id": 204093507,
        "sender_full_name": "durin42",
        "timestamp": 1594910799
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316805\">@durin42</span> sorry to ask potentially dumb questions, but by \"canonical C++ compiler\", do you mean the Canonical that makes Ubuntu?</p>",
        "id": 204099379,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594913163
    },
    {
        "content": "<p>I'm basically trying to find out what someone would need to do to reproduce your problem locally</p>",
        "id": 204099506,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594913218
    },
    {
        "content": "<p>No, we've got a C++ toolchain team that maintains a clang/clang++ build.</p>",
        "id": 204099812,
        "sender_full_name": "durin42",
        "timestamp": 1594913345
    },
    {
        "content": "<p>I'm working on a dockerfile now to build an environment to reproduce this.</p>",
        "id": 204099841,
        "sender_full_name": "durin42",
        "timestamp": 1594913356
    },
    {
        "content": "<p>okay great</p>",
        "id": 204099895,
        "sender_full_name": "pnkfelix",
        "timestamp": 1594913392
    },
    {
        "content": "<p>Alrighty, I've got a minimal reproduction recipe that at least shows a surprising result. It's not the _same_ result, but it's surprising in a way that seems related.</p>\n<p><a href=\"https://gist.github.com/durin42/31338b84f97f21b371e2150bedd144e6\">https://gist.github.com/durin42/31338b84f97f21b371e2150bedd144e6</a></p>\n<p>I built rust using that setup, and AFAICT I've asked pretty specifically for a static dep on libc++, but then I get this at the end:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ldd build/x86_64-unknown-linux-gnu/stage2/bin/rustc  | grep c++\n    libstdc++.so.6 =&gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f084b77d000)\n</code></pre></div>",
        "id": 204107632,
        "sender_full_name": "durin42",
        "timestamp": 1594916622
    },
    {
        "content": "<p>Okay, I got past most of the issues and I've now got that gist (updated, same URL) to the same place I got with our internal compilers: it looks for all the world like <code>llvm-config --cxxflags</code> is omitting important flags. Is that believable? Am I configuring rustbuild correctly to be using the non-C++11 ABI and libc++ in llvm?</p>",
        "id": 204260519,
        "sender_full_name": "durin42",
        "timestamp": 1595020768
    },
    {
        "content": "<p>It looks like user-specified CFLAGS and CXXFLAGS, such as those we put in config.toml are <em>not</em> expected to come back from <code>llvm-config --cflags</code> etc, so we should take the configured CFLAGS and CXXFLAGS from <code>config.toml</code> and thread them down into the Rust crates that build some C++ and try to link against llvm. Does that sound reasonable?</p>",
        "id": 204434522,
        "sender_full_name": "durin42",
        "timestamp": 1595257824
    }
]