[
    {
        "content": "<p>is it possible for me to write a lexer and parser, and then lower it to MIR, and have rustc start compiling it as if it was a rust program? I know miri can accomplish this, but it's interpreted.</p>",
        "id": 162667825,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1554503949
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116108\">@Keith Yeung</span> there's nothing preventing that afaik; however, everything in rustc's internals is ofc highly unstable.</p>",
        "id": 162667918,
        "sender_full_name": "centril",
        "timestamp": 1554504007
    },
    {
        "content": "<p>ok, if so, is there a guide lying around that describes how one might be able to do so?</p>",
        "id": 162667975,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1554504058
    },
    {
        "content": "<p>or if there's a source file in particular that i should look at?</p>",
        "id": 162668008,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1554504078
    },
    {
        "content": "<p>maybe <a href=\"https://rust-lang.github.io/rustc-guide/\" target=\"_blank\" title=\"https://rust-lang.github.io/rustc-guide/\">https://rust-lang.github.io/rustc-guide/</a> has something; the rustc driver infrastructure is beyond my expertise, maybe <span class=\"user-mention\" data-user-id=\"116466\">@Zoxc</span> can help</p>",
        "id": 162668156,
        "sender_full_name": "centril",
        "timestamp": 1554504176
    },
    {
        "content": "<p>Using rustc as a backend sounds like a terrible idea =P</p>",
        "id": 162668297,
        "sender_full_name": "Zoxc",
        "timestamp": 1554504291
    },
    {
        "content": "<p>huh, perhaps i should be asking whether there are good crates out there that provides good rust bindings to LLVM instead</p>",
        "id": 162668622,
        "sender_full_name": "Keith Yeung",
        "timestamp": 1554504532
    }
]