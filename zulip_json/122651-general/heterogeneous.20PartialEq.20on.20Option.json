[
    {
        "content": "<p>Is there any specific reason why <code>PartialEq</code> on <code>Option</code> forces LHS and RHS to have the same type?<br>\nThis means one can compare <code>&amp;OsStr</code> to <code>&amp;str</code> but not <code>Option&lt;&amp;OsStr&gt;</code> to <code>Option&lt;&amp;str&gt;</code>.</p>",
        "id": 265924195,
        "sender_full_name": "RalfJ",
        "timestamp": 1640271776
    },
    {
        "content": "<p>Probably the usual inference problem -- I suspect that the heterogeneous one would stop inferring <code>x &lt; Some(10)</code> reliably.</p>",
        "id": 265924330,
        "sender_full_name": "scottmcm",
        "timestamp": 1640271854
    },
    {
        "content": "<p>(I hope we one day find a good system for hinting such things better)</p>",
        "id": 265924408,
        "sender_full_name": "scottmcm",
        "timestamp": 1640271919
    },
    {
        "content": "<p>Especially when one side is <code>None</code></p>",
        "id": 265926791,
        "sender_full_name": "cuviper",
        "timestamp": 1640273642
    },
    {
        "content": "<p>LOL, this was one of <a href=\"https://stackoverflow.com/q/30429801/155423\">my first problems with Rust</a>. I even <a href=\"https://stackoverflow.com/questions/30429801/whats-the-most-idiomatic-way-to-test-two-options-for-equality-when-they-contain#comment97116593_30429920\">tried to change it</a>, and it was definitely the <code>None</code> case that broke the entire world.</p>",
        "id": 266945467,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641394877
    },
    {
        "content": "<p>Ah, and commented on by <strong>Mara</strong> in <a href=\"https://github.com/rust-lang/rust/issues/20063\">https://github.com/rust-lang/rust/issues/20063</a></p>",
        "id": 266961150,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1641402182
    }
]