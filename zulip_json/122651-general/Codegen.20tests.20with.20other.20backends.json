[
    {
        "content": "<p>(I'm kinda new here and I have no idea which stream I should post this question to. Please redirect me to somewhere else if it's inappropriate to post here).</p>\n<p>I'm working on the GCC backend and I would like to be able to make use of codegen test facility. I want to be able to test that certain code generates specific GIMPLE instructions (GCC's analog to LLVM IR). What would be the correct way to use it with a separate backend specified with <code>-Zcodegen-backend=path/to/dylib</code>? I'm prepared to patch any amount of files I'll have to.</p>",
        "id": 253455075,
        "sender_full_name": "Commeownist",
        "timestamp": 1631726945
    },
    {
        "content": "<p>codegen tests support <code>compile-flags: ...</code> directives</p>",
        "id": 253455854,
        "sender_full_name": "cuviper",
        "timestamp": 1631727275
    },
    {
        "content": "<p>but if that <code>path/to/dylib</code> needs to be more dynamic, I guess you may need a run-make test instead<br>\n(like <code>src/test/run-make-fulldeps/hotplug_codegen_backend/</code>)</p>",
        "id": 253456040,
        "sender_full_name": "cuviper",
        "timestamp": 1631727357
    },
    {
        "content": "<p>It should be <code>compile-flags: -Zcodegen-backend=gcc</code> and not <code>compile-flags: -Zcodegen-backend=/path/to/dylib</code> if you the tests to rust itself.</p>",
        "id": 253456099,
        "sender_full_name": "bjorn3",
        "timestamp": 1631727367
    }
]