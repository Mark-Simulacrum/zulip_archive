[
    {
        "content": "<p>Hi!<br>\nI have this somewhat convoluted example:<br>\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=7e39db392597aa6aeb120874ae56ea24\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=7e39db392597aa6aeb120874ae56ea24</a><br>\nThis code fails to compile, suggesting to add <code>T: First&lt;i32&gt;</code> bound to the <code>Container&lt;T&gt;</code> definition. But it’s actually redundant, since <code>T: First&lt;&lt;Self as Second&lt;T&gt;&gt;::Out&gt;</code> is the same bound. It’s accepted by the compiler (the above code compiles with the redundant bound added:<br>\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=7fa4f5676a2337c3a8f676a260b87f4f\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=7fa4f5676a2337c3a8f676a260b87f4f</a><br>\n), but doesn’t “count” somehow.<br>\nIs this behaviour known/intended?</p>",
        "id": 268348164,
        "sender_full_name": "Goldstein",
        "timestamp": 1642487132
    },
    {
        "content": "<p>It’s also kinda interesting that line 19 in the second example only requires <code>T: First&lt;i32&gt;</code> bound, despite <code>Container&lt;T&gt;</code> definition having two bounds.</p>",
        "id": 268348928,
        "sender_full_name": "Goldstein",
        "timestamp": 1642487916
    },
    {
        "content": "<p>Another fun example:<br>\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=3fbc83b12d0e31091467dd330292247d\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=3fbc83b12d0e31091467dd330292247d</a><br>\nThis one gives fails to unify a type with itself:</p>\n<div class=\"codehilite\"><pre><span></span><code>overflow evaluating the requirement `&lt;Container&lt;T&gt; as Second&lt;T&gt;&gt;::Out == &lt;Container&lt;T&gt; as Second&lt;T&gt;&gt;::Out`\n</code></pre></div>",
        "id": 268352904,
        "sender_full_name": "Goldstein",
        "timestamp": 1642491428
    }
]