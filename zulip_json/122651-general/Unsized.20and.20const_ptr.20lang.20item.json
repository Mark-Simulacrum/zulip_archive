[
    {
        "content": "<p>Hi everyone</p>\n<p>I have been working through the libcore code to compile slices for gccrs. Its been a great adventure to find bugs especially in method resolution and associated types. We have focused on rustc 1.49.0 libcore since this is just prior to const-generics (which we don't any any support for yet), and have come across this piece of code in the flow from creating a slice from an array:</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/slice/index.rs#L217-L223\">https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/slice/index.rs#L217-L223</a></p>\n<p>Here its easier to read if i break down the line into each method call:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">slice</span><span class=\"p\">.</span><span class=\"n\">as_ptr</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">start</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">ptr</span>::<span class=\"n\">slice_from_raw_parts</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">start</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The part i have a problem with is slice.as_ptr(). So here slice is of type *const [T] and really what we want back is *const T. Though currently gccrs is (wrongly) inferring that the result of slice.as_ptr is just *const [T] back again since [T] is a valid substitution for the const_ptr lang item. There must be some kind of unsize magic going on here so we found this:</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/ops/unsize.rs#L67-L69\">https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/ops/unsize.rs#L67-L69</a></p>\n<p>Which i think could be responsible for rust being able to unsize the Slice type such that we get *const T (element type) back so that the offset calculation is correct. Are we on the right track? I can't find anything documented about this so far from either:</p>\n<p><a href=\"https://doc.rust-lang.org/nightly/nomicon/dot-operator.html\">https://doc.rust-lang.org/nightly/nomicon/dot-operator.html</a><br>\n<a href=\"https://rustc-dev-guide.rust-lang.org/method-lookup.html\">https://rustc-dev-guide.rust-lang.org/method-lookup.html</a></p>\n<p>Any pointers would be great.</p>",
        "id": 277154319,
        "sender_full_name": "Philip Herron",
        "timestamp": 1648651025
    },
    {
        "content": "<p>The <code>.as_ptr()</code> here should resolve to <a href=\"https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/ptr/const_ptr.rs#L907-L909\">https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/ptr/const_ptr.rs#L907-L909</a> in case <code>slice</code> is an <code>*const [T]</code> which takes an <code>*const [T]</code> as argument and returns an <code>*const T</code>. In case <code>slice</code> is an <code>&amp;[T]</code> it should resolve to <a href=\"https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/slice/mod.rs#L409-L411\">https://github.com/rust-lang/rust/blob/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/slice/mod.rs#L409-L411</a> which takes an <code>&amp;[T]</code> and return an <code>*const T</code>.</p>",
        "id": 277154892,
        "sender_full_name": "bjorn3",
        "timestamp": 1648651214
    },
    {
        "content": "<p>I have the wrong lang item in my testcase I am looking at const_ptr not const_slice_ptr. That solves the issue</p>",
        "id": 277155266,
        "sender_full_name": "Philip Herron",
        "timestamp": 1648651345
    }
]