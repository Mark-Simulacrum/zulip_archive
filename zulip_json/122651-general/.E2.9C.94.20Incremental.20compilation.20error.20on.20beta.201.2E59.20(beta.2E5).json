[
    {
        "content": "<p>Thanks, I can reproduce it</p>",
        "id": 270611803,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1643919741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"280891\">@Frank Steffahn</span> I see your test in on a beta. I see a similar error at that line</p>\n<div class=\"codehilite\"><pre><span></span><code>&#39;no entry found for key&#39;, compiler/rustc_metadata/src/rmeta/decoder.rs:1617:13\n</code></pre></div>\n<p>in a couple of issues<br>\n<a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aissue+rustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs\">https://github.com/rust-lang/rust/issues?q=is%3Aissue+rustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs</a></p>",
        "id": 270611827,
        "sender_full_name": "apiraino",
        "timestamp": 1643919757
    },
    {
        "content": "<p>some of them are closed by <a href=\"https://github.com/rust-lang/rust/issues/92533\">#92533</a><br>\n(not sure if it helps, though)</p>",
        "id": 270611876,
        "sender_full_name": "apiraino",
        "timestamp": 1643919777
    },
    {
        "content": "<p>Looking at the backtrace, this is already fixed by <a href=\"https://github.com/rust-lang/rust/pull/92533\">https://github.com/rust-lang/rust/pull/92533</a></p>",
        "id": 270611905,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1643919791
    },
    {
        "content": "<p>the next bootstrap bump will pull that in</p>",
        "id": 270611923,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1643919799
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280891\">Frank Steffahn</span> has marked this topic as resolved.</p>",
        "id": 270612861,
        "sender_full_name": "Notification Bot",
        "timestamp": 1643920200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> perfect, thanks :-)</p>",
        "id": 270612985,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1643920241
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125294\">@Aaron Hill</span> <span class=\"user-mention\" data-user-id=\"250987\">@apiraino</span> I’m repeatedly running into this kind of ICE… do you perhaps happen to know if there’s any less time-intensive workaround besides executing <code>./x.py clean</code>?</p>",
        "id": 270632905,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1643929828
    },
    {
        "content": "<p><code>rm -r build/&lt;arch&gt;/stage&lt;something&gt;</code>?</p>",
        "id": 270633424,
        "sender_full_name": "The 8472",
        "timestamp": 1643930075
    },
    {
        "content": "<p>maybe even just an incremntal subdir</p>",
        "id": 270633469,
        "sender_full_name": "The 8472",
        "timestamp": 1643930101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span>  hmm, that seems like a plausible approach; I’ll try that tomorrow when I’ll – most likely – run into it again :-)</p>",
        "id": 270634647,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1643930718
    },
    {
        "content": "<p>Deleting the specific incremental subdir for the crate has worked for me in the past</p>",
        "id": 270659350,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1643941289
    },
    {
        "content": "<p>Tried it now, deleting the relevant folder works so well that I’m questioning why cargo can’t offer to do this automatically for “incremental-compilation-looking” ICEs (or maybe for ICEs in general if there’s no way to tell).</p>",
        "id": 270770829,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1644007847
    }
]