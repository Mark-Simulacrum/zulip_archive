[
    {
        "content": "<p>i'm confused by the usage of \"outlives\" in the documentation: it looks like in many places in the Reference and elsewhere, we say things like \"<code>'a: 'b</code> means <code>'a</code> outlives '<code>'b</code>\" when the context implies \"<code>'a</code> lives at least as long as <code>'b</code>. which definition is correct? i read \"outlives\" as \"strictly outlives\" or \"lives longer than\", not as \"lives at least as long as\", but the latter seems to be what is intended?</p>",
        "id": 244017062,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624716854
    },
    {
        "content": "<p>yeah it's more like <code>&gt;=</code> than like <code>&gt;</code></p>",
        "id": 244017458,
        "sender_full_name": "Lokathor",
        "timestamp": 1624717429
    },
    {
        "content": "<p>thanks. it seems pretty pervasive, so changing it might be infeasible, but maybe additional clarifications in key places would help?</p>",
        "id": 244017530,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624717505
    },
    {
        "content": "<p>I think part of the rationale is that the \"strictly longer than\" interpretation isn't one we would need particularly often, if ever. So it seems natural to use \"outlives\" to mean \"at least as long as\", because that's the only interpretation we typically need.</p>",
        "id": 244021123,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1624722456
    },
    {
        "content": "<p>yeah, that makes sense. though i think it would be good to make it explicit in more places</p>",
        "id": 244021520,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624722867
    },
    {
        "content": "<p>i had to read through parts of the rustc dev guide about cycles in the \"outlives\" constraint graph before it barely started to sink in</p>",
        "id": 244021667,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624723016
    },
    {
        "content": "<p>The main purpose of the word \"outlives\" is just to have a single word to sum up the relation and get the order right (i.e. to avoid confusing <code>'a: 'b</code> with <code>'b: 'a</code>). Because of that, it has to be short and there isn't much room for nuance. You have to learn the details but I think it's good enough for mnemonic use</p>",
        "id": 244027858,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1624731884
    },
    {
        "content": "<p>You can also imagine (more or less) that it is a strict <code>&gt;</code> if you're willing to write a new scope for every single new value you create. Each close-of-scope will then naturally also close out a single value at a time, and you'll have a nice and strict ordering.</p>",
        "id": 244036109,
        "sender_full_name": "Lokathor",
        "timestamp": 1624744306
    },
    {
        "content": "<p>is it approximately correct to say \"a <em>region</em> is a subgraph of the control-flow graph, typically containing the nodes where a value or reference is valid\"?</p>",
        "id": 244042378,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624754499
    },
    {
        "content": "<p>(i know the actual definition that the rustc dev guide uses is more precise: <a href=\"https://rustc-dev-guide.rust-lang.org/borrow_check/region_inference.html#region-variables\">https://rustc-dev-guide.rust-lang.org/borrow_check/region_inference.html#region-variables</a>)</p>",
        "id": 244042446,
        "sender_full_name": "Taylor Yu [they/she]",
        "timestamp": 1624754628
    }
]