[
    {
        "content": "<p>Inline assembly allows you to declare that LLVM must not use the stack red zone during an inline assembly block, but is there some sort of setting, such as in a target's description, that LLVM must <em>never ever</em> use the stack red zone?</p>\n<p>Particularly, this is of issue for bare metal systems where interrupts are involved. If the interrupt handler pushes anything to the stack while LLVM is working beyond the stack pointer then that could get trashed during the interrupt handling. However, you don't ever know when an interrupt will happen, so essentially LLVM must be told to never use the red zone somehow.</p>",
        "id": 254289486,
        "sender_full_name": "Lokathor",
        "timestamp": 1632264275
    },
    {
        "content": "<p>Doesn't rustc have an equivalent of the -fno-red-zone gcc option?</p>",
        "id": 254290221,
        "sender_full_name": "Connor Horman",
        "timestamp": 1632264793
    },
    {
        "content": "<p>Ah ha, it wasn't in <a href=\"https://doc.rust-lang.org/cargo/?search=red%20zone\">cargo</a>, but it's in <a href=\"https://doc.rust-lang.org/rustc/codegen-options/index.html?highlight=red%20zone#no-redzone\">rustc</a>. Excellent.</p>",
        "id": 254290863,
        "sender_full_name": "Lokathor",
        "timestamp": 1632265282
    },
    {
        "content": "<p>Target specs also have an option to disable the redzone.</p>",
        "id": 254339106,
        "sender_full_name": "bjorn3",
        "timestamp": 1632302659
    },
    {
        "content": "<p>yeah, it seems they don't by default</p>",
        "id": 254362358,
        "sender_full_name": "Lokathor",
        "timestamp": 1632315549
    },
    {
        "content": "<p>To be fair, the only targets that use a red zone are x86_64 and Apple's ARM64 ABI.</p>",
        "id": 254366004,
        "sender_full_name": "Amanieu",
        "timestamp": 1632317098
    },
    {
        "content": "<p>ah, so ARM32 won't use a red zone even without that flag set?</p>",
        "id": 254373260,
        "sender_full_name": "Lokathor",
        "timestamp": 1632319644
    },
    {
        "content": "<p>windows on arm does have one. <a href=\"https://devblogs.microsoft.com/oldnewthing/20190111-00/?p=100685\">https://devblogs.microsoft.com/oldnewthing/20190111-00/?p=100685</a></p>",
        "id": 254376050,
        "sender_full_name": "The 8472",
        "timestamp": 1632320670
    },
    {
        "content": "<p>hm, well I'm most worried about the bare metal ARM32 situation</p>",
        "id": 254392321,
        "sender_full_name": "Lokathor",
        "timestamp": 1632326696
    },
    {
        "content": "<p>FWIW, the bare-metal x86_64 target won't use the red zone by default, and you'd have to explicitly enable it.</p>",
        "id": 254437636,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1632344076
    },
    {
        "content": "<p>powerpc64le also has a red-zone</p>",
        "id": 254462805,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1632358098
    },
    {
        "content": "<p>I shall assume that llvm isn't using the red zone on me then, but i will keep this in mind for when i eventually submit a dedicated GBA target for rustc</p>",
        "id": 254472499,
        "sender_full_name": "Lokathor",
        "timestamp": 1632365572
    }
]