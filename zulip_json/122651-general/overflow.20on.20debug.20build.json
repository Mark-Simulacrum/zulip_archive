[
    {
        "content": "<p>Hello! Sorry if this has been asked already, as it probably has been asked before.</p>\n<p>I noticed that on debug builds shifts (<code>&gt;&gt;</code> or <code>&lt;&lt;</code>) will cause a runtime panic if you are attempting a shift that would cause an overflow (for example shifting 8 places on an <code>u8</code>), whereas on release builds that overflow is caught at compile time and the build fails, as one would expect. I suppose this is a product of a missing build phase on debug builds, but could someone please explain why this happens?</p>",
        "id": 198694068,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590432682
    },
    {
        "content": "<p>Do you mean <code>cargo check</code>?</p>",
        "id": 198694289,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590432899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211727\">@Jonas Schievink</span>  Nope, <code>cargo run</code> will build and run just fine and panic on runtime. But <code>cargo run --release</code> will not compile at all.</p>",
        "id": 198694453,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590433040
    },
    {
        "content": "<p>Can you give an example? This is just a lint, so it might depend on optimizations, but I didn't think we ran any that could affect this.</p>",
        "id": 198694598,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590433177
    },
    {
        "content": "<p>The following gives an error in both debug and release mode on the playground:</p>\n<div class=\"codehilite\"><pre><span></span><code>fn main() {\n    0u8 &lt;&lt; 8;\n}\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>error: this arithmetic operation will overflow\n --&gt; src/main.rs:2:5\n  |\n2 |     0u8 &lt;&lt; 8;\n  |     ^^^^^^^^ attempt to shift left with overflow\n  |\n  = note: `#[deny(arithmetic_overflow)]` on by default\n</code></pre></div>",
        "id": 198694710,
        "sender_full_name": "bjorn3",
        "timestamp": 1590433269
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211727\">Jonas Schievink</span> <a href=\"#narrow/stream/122651-general/topic/overflow.20on.20debug.20build/near/198694598\">said</a>:</p>\n<blockquote>\n<p>Can you give an example? This is just a lint, so it might depend on optimizations, but I didn't think we ran any that could affect this.</p>\n</blockquote>\n<p>As of right now MIR optimizations are identical in check, debug and release mode.</p>",
        "id": 198694747,
        "sender_full_name": "bjorn3",
        "timestamp": 1590433318
    },
    {
        "content": "<p>Mir optimizations are usually not run in check mode.</p>",
        "id": 198694947,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1590433492
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>fn main() {\n    let a: u8 = 0x01;\n    let b = a &lt;&lt; 8;\n}\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>error: attempt to shift left with overflow\n --&gt; src/main.rs:3:13\n  |\n3 |     let b = a &lt;&lt; 8;\n  |             ^^^^^^\n  |\n  = note: `#[deny(exceeding_bitshifts)]` on by default\n\nerror: aborting due to previous error\n\nerror: could not compile `overflow`.\n</code></pre></div>\n\n\n<p>ah right, it's a lint, didn't notice the <code>deny(exceeding_bitshifts)</code> there, my bad.. but in any case, <span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> 's answer makes sense. thanks <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 198695263,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590433788
    },
    {
        "content": "<p>But check mode is <code>cargo check</code>, not <code>cargo build</code></p>",
        "id": 198695560,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590434079
    },
    {
        "content": "<p>I'm not running <code>cargo check</code>, I noticed those in <code>cargo run</code>, which also outputs warnings and errors.</p>",
        "id": 198695905,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590434432
    },
    {
        "content": "<p>more importantly, <code>cargo check</code> does not show that error at all, it only shows up on <code>cargo run --release</code>, which was what caught my attention</p>",
        "id": 198695957,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590434488
    },
    {
        "content": "<p>...and with <code>cargo run</code>, which does <code>cargo build</code>.</p>",
        "id": 198696276,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590434825
    },
    {
        "content": "<p>I'm just confused because you said there was a difference between a debug and a release build</p>",
        "id": 198696282,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590434841
    },
    {
        "content": "<p>there is.. <code>cargo run</code> and <code>cargo run --release</code> have different behaviours</p>",
        "id": 198696926,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590435491
    },
    {
        "content": "<p>So far all the examples shown emit the error in both</p>",
        "id": 198696943,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590435531
    },
    {
        "content": "<p>the example i shared is with the <code>--release</code> flag, but if I don't use the <code>--release</code> tag, as I said, it panics at runtime with the following message:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;attempt to shift left with overflow&#39;, src/main.rs:3:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 198697289,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590435862
    },
    {
        "content": "<p>It fails to compile with <code>error: this arithmetic operation will overflow</code> in both modes on the playground. Did you silence the lint somehow?</p>",
        "id": 198697443,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590436049
    },
    {
        "content": "<p>I think we used to have a bug which sounds very similar to this but I can't find it off hand.</p>",
        "id": 198697487,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590436083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246514\">@Martin Asquino</span> are you on the latest Rust version?</p>",
        "id": 198697505,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590436099
    },
    {
        "content": "<p>aah right, I was on 1.42, updating to 1.43.1 fixed it, thank you <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span></p>",
        "id": 198697782,
        "sender_full_name": "Martin Asquino",
        "timestamp": 1590436372
    },
    {
        "content": "<p>I don't think you've provided enough information. This fails at compile time with a debug build:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"k\">u8</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>My guess is that when you are doing a release build, it \"tries harder\" to evaluate stuff at compile time.</p>",
        "id": 198711604,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1590453926
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> they were using an outdated rustc and thus hitting an already fixed bug.</p>",
        "id": 199244489,
        "sender_full_name": "RalfJ",
        "timestamp": 1590825037
    },
    {
        "content": "<p>right now there should be no difference in diagnostics between debug and release builds.</p>",
        "id": 199244491,
        "sender_full_name": "RalfJ",
        "timestamp": 1590825050
    },
    {
        "content": "<p>However, there <em>are</em> some differences between \"check\"s and \"build\"s.</p>",
        "id": 199244494,
        "sender_full_name": "RalfJ",
        "timestamp": 1590825061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> hmm. When I sent my message, I could only see the very first message \"Hello! Sorry if this has been asked...\" and there were no replies... but I now see that my message follows a lot of back-and-forth.</p>",
        "id": 199251698,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1590837263
    },
    {
        "content": "<p>This is very strange, but I do run Chrome Canary, which has been acting up a bit in the last few days (e.g. large parts of the screen were covered in red and unreadable). I wonder if it's something I did, Zulip did, or Chrome did.</p>",
        "id": 199251727,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1590837331
    }
]