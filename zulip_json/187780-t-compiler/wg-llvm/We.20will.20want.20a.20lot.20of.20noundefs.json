[
    {
        "content": "<p><a href=\"https://aqjune.github.io/posts/2021-10-4.the-select-story.html\">https://aqjune.github.io/posts/2021-10-4.the-select-story.html</a></p>\n<p>Right now I believe we dont apply noundef anywhere pretty much and we should be applying at least never-poison pretty much almost everywhere.</p>",
        "id": 256106096,
        "sender_full_name": "nagisa",
        "timestamp": 1633371315
    },
    {
        "content": "<p>There is no nopoison, only noundef. And yes, we can apply it liberally, though we probably need to regress mem::uninitialized() to return the same as mem::zeroed() (just with strong assertions) first.</p>",
        "id": 256122151,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1633377404
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/74378\">https://github.com/rust-lang/rust/issues/74378</a></p>",
        "id": 256122218,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1633377429
    },
    {
        "content": "<p>Why is <code>uninitialized</code> a problem? Any use of value containing it is already UB?</p>",
        "id": 256133003,
        "sender_full_name": "nagisa",
        "timestamp": 1633381771
    },
    {
        "content": "<p>as long as we somehow avoid introducing noundef directly on the <code>undef</code> that <code>mem::uninitialized</code> produces, things should be fine?</p>",
        "id": 256133034,
        "sender_full_name": "nagisa",
        "timestamp": 1633381795
    },
    {
        "content": "<p>Also, from what I can tell a problem with noundef is that it only applies to parameters and return values. We can't e.g. say <code>%x = add nuw ..., !noundef</code> or somesuch</p>",
        "id": 256133187,
        "sender_full_name": "nagisa",
        "timestamp": 1633381868
    },
    {
        "content": "<p>this seems particularly relevant to e.g. shifts because we always wraparound the shift amount to fit.</p>",
        "id": 256133262,
        "sender_full_name": "nagisa",
        "timestamp": 1633381907
    },
    {
        "content": "<p>Not a problem as far as semantics are concerned, just suspect that the practical impact there might be large as uses of mem::uninitialized() do tend to be UB that is currently mostly ignored for types without a trap representation.</p>",
        "id": 256212305,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1633430480
    }
]