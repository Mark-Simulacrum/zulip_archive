[
    {
        "content": "<p>I am considering enabling <code>-Znew-llvm-pass-manager</code> in a big codebase to work around <a href=\"https://github.com/rust-lang/rust/issues/66617\">https://github.com/rust-lang/rust/issues/66617</a> which has been extremely troublesome for us, but I wasn't able to find any kind of tracking issue. What is the current state of this feature and anything I should be aware of? limitations, platform compatibility, etc</p>",
        "id": 204752367,
        "sender_full_name": "David Tolnay",
        "timestamp": 1595467681
    },
    {
        "content": "<p>You should measure it didn't cause unacceptable performance loss for you. Platform compatibility should not change AFAIK but it's less tested with Rust so you know.</p>",
        "id": 204765361,
        "sender_full_name": "mati865",
        "timestamp": 1595487240
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span>  did you see my comment about the workaround that I found <a href=\"https://github.com/rust-lang/rust/issues/66617#issuecomment-660722837\">https://github.com/rust-lang/rust/issues/66617#issuecomment-660722837</a> by marking one function with inline the compile time for 1 CGU and 2 CGUs was almost the same.<br>\ndo not know if it will work in your case but maybe something to look at.<br>\nmy thinking when adding inline is that compiling with 1 CGU was fast so some info was missing and by adding inline to a function it is copied in to all CGUs so I marked one of the functions that was only declared in the slow CGU with inline and the compilation was fast. <br>\nhave not been able to understand why it changes the compile time but maybe have something to do with having all the defines for the calls of functions in the recursive functions.</p>",
        "id": 204767288,
        "sender_full_name": "andjo403",
        "timestamp": 1595489214
    },
    {
        "content": "<p>changing to the new pass manager  feels a bit iffy when reading that a lot of test is not passing in llvm <a href=\"http://lists.llvm.org/pipermail/llvm-dev/2020-July/143666.html\">http://lists.llvm.org/pipermail/llvm-dev/2020-July/143666.html</a><br>\nand also unclear how mush test that is executed with the new pass manager</p>",
        "id": 204859956,
        "sender_full_name": "andjo403",
        "timestamp": 1595542752
    },
    {
        "content": "<p>The first reply is \"we should switch to NPM by default because many people use it anyway\", which is something at least.</p>",
        "id": 204864007,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1595545960
    }
]