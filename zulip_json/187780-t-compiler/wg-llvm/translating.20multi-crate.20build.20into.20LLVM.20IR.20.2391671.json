[
    {
        "content": "<p>I’ve been trying to dissect a nasty LLVM bug</p>",
        "id": 266438146,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640879865
    },
    {
        "content": "<p>involving LTO</p>",
        "id": 266438152,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640879869
    },
    {
        "content": "<p>Issue <a href=\"https://github.com/rust-lang/rust/issues/91671\">#91671</a></p>",
        "id": 266438218,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640879908
    },
    {
        "content": "<p>Here’s my Question: I’ve got a <a href=\"https://github.com/pnkfelix/issue-91671-a64-doctestfail/blob/4f2e874fa404ca462e1993c20368ed1629bd2a2c/repro.sh#L9\">repro.sh script</a> that involves building three crates. We segfault on the third build.</p>",
        "id": 266438249,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640879954
    },
    {
        "content": "<p>what I would <em>like</em> is to reduce that into something that I can file with the LLVM folks. I.e. LLVM-IR files</p>",
        "id": 266438260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640879973
    },
    {
        "content": "<p>I can do <code>—emit llvm-ir</code> for the first two builds, but I’m not sure what I should do to process that output into something that the third invocation will use</p>",
        "id": 266438424,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640880056
    },
    {
        "content": "<p>/me looks at the <a href=\"http://repro.sh\">repro.sh</a> script and realizes that he should push the updated version that targets aarch64 Linux rather than Darwin</p>",
        "id": 266438473,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640880103
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> to <a class=\"stream-topic\" data-stream-id=\"238009\" href=\"/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-30.20.2354818\">#t-compiler/meetings &gt; [weekly] 2021-12-30 #54818</a></p>",
        "id": 266438740,
        "sender_full_name": "Notification Bot",
        "timestamp": 1640880330
    },
    {
        "content": "<p>@_<strong>Notification Bot|100006</strong> <a href=\"#narrow/stream/187780-t-compiler.2Fwg-llvm/topic/translating.20multi-crate.20build.20into.20LLVM.20IR/near/266438740\">said</a>:</p>\n<blockquote>\n<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> to <a class=\"stream-topic\" data-stream-id=\"238009\" href=\"/#narrow/stream/238009-t-compiler.2Fmeetings/topic/.5Bweekly.5D.202021-12-30.20.2354818\">#t-compiler/meetings &gt; [weekly] 2021-12-30 #54818</a></p>\n</blockquote>\n<p>(it wasn’t, not really. Its more that I accidentally moved more messages than I intended.)</p>",
        "id": 266438813,
        "sender_full_name": "pnkfelix",
        "timestamp": 1640880379
    },
    {
        "content": "<p>As you are dealing with a backend bug, you should be able to add -C save-temps on the final rustc command and then run all bitcode files through llc and see what crashes.</p>",
        "id": 266439220,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1640880786
    },
    {
        "content": "<p>I had a very hard time trying to figure out lto bugs myself too. Anything I would get out of rustc would not reproduce anything with llc anymore.</p>",
        "id": 266501472,
        "sender_full_name": "nagisa",
        "timestamp": 1640954424
    },
    {
        "content": "<p>probably because I was invoking llc just very slightly differently or something.</p>",
        "id": 266501476,
        "sender_full_name": "nagisa",
        "timestamp": 1640954440
    },
    {
        "content": "<p>alas I don't really have any suggestions or advice here <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 266501485,
        "sender_full_name": "nagisa",
        "timestamp": 1640954451
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> , if you have time, I’d love to pick your brain to learn how you reduced <a href=\"https://github.com/llvm/llvm-project/issues/53315\">https://github.com/llvm/llvm-project/issues/53315</a></p>",
        "id": 268856365,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642778372
    },
    {
        "content": "<p>/me is going to add a <a href=\"https://github.com/rust-lang/llvm/issues/53315\">llvm#53315</a> rewrite rule now (the link currently generated is rust-lang/llvm/53315)</p>",
        "id": 268856397,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642778389
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I added <code>-C save-temps</code> to the last rustc command, then checked that the final bitcode crashes <code>llc -O0</code> and then ran llvm-reduce with <code>! build/bin/llc -O0 -o /dev/null &lt; $1</code> test script. Plus some minimal manual cleanup (function names...)</p>",
        "id": 268858239,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1642779169
    },
    {
        "content": "<p>I tried several times to use <code>-C save-temps</code>, but I never identified the correct file to feed into <code>llc</code>. Which one was it that you fed into it?</p>",
        "id": 268864797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642781718
    },
    {
        "content": "<p>I just realized that you suggested feeding <em>all</em> bitcode files into <code>llc</code> above. (I misread it originally, I think.) So do you just loop through each file in the directory and pass it to <code>llc</code>? Let me see what that does for me now</p>",
        "id": 268865038,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642781802
    },
    {
        "content": "<p>That's what I usually do when I don't know which one it is. In this case I just tried the <code>rcgu.bc</code> one and that worked.</p>",
        "id": 268866505,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1642782413
    },
    {
        "content": "<p>Also, Florian Hahn on the LLVM side suggested this nice little trick: Add a call to <code>F.getParent()-&gt;dump()</code> to the start of <code>SafeStackLegacyPass::runOnFunction</code> (in llvm/lib/CodeGen/SafeStack.cpp), and that will spit out the .ll content that was fed into that pass.</p>",
        "id": 268866577,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642782450
    },
    {
        "content": "<p>I just now used the output of that dump, and fed it into <code>llc -O0</code> like you said, and it also reproduced the problem. So I’m thrilled. Thanks <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> for all your help here!</p>",
        "id": 268866689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642782486
    },
    {
        "content": "<p>(so now I have two ways to go about this. I’m going to see about putting this info into the rustc-dev-guide in some fashion.)</p>",
        "id": 268866888,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642782598
    },
    {
        "content": "<p>maybe you can do that with this option?</p>\n<div class=\"codehilite\"><pre><span></span><code>--print-before=&lt;string&gt; - Print IR before specified passes\n</code></pre></div>\n\n<p>e.g. passed via <code>-Cllvm-args=--print-before=...</code></p>",
        "id": 268866892,
        "sender_full_name": "cuviper",
        "timestamp": 1642782600
    },
    {
        "content": "<p>For backend crashes you usually don't need anything fancy, as they tend to reduce cleanly. It's a bit more tricky for the middle-end, because you need to reduce both the test case and the optimization pipeline.</p>",
        "id": 268867068,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1642782663
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> Main problem with -print is that it only prints the IR unit the pass runs on, so you get just the function, without any referenced declarations, globals, metadata etc. Adding a manual dump call can be easier to get the whole module :) Probably that should be exposed by some flag...</p>",
        "id": 268867246,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1642782737
    },
    {
        "content": "<p>Yes, I wasn’t able to feed the output of <code>-print</code> just now to reproduce the problem. But I agree with <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> , this seems like a potentially useful variant to add to llvm</p>",
        "id": 268867330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1642782774
    },
    {
        "content": "<p>Hey, <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> , when you were looking at <a href=\"https://github.com/llvm/llvm-project/issues/53315\">llvm#53315</a>, did you try your patched build against my repro? I ask because I finally have gotten around to cherry-picking the patch, and I’m still seeing <em>a</em> segfault (though it could well have a different root cause).</p>",
        "id": 269437599,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643213793
    },
    {
        "content": "<p>Nope, I didn't try to bootstrap rustc with that. A compiler segfault or at runtime?</p>",
        "id": 269439050,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1643214332
    },
    {
        "content": "<p>Compiler segfault</p>",
        "id": 269439643,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643214544
    },
    {
        "content": "<p>or, well, maybe linker, need to check</p>",
        "id": 269439663,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643214554
    },
    {
        "content": "<p>but not at runtime</p>",
        "id": 269439670,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643214558
    },
    {
        "content": "<p>Anyway, I just wanted to see if you had evidence to contrary before I spent more time on it</p>",
        "id": 269439753,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643214593
    },
    {
        "content": "<p>I just tried my LLVM trunk llc against the original bitcode file and that at least doesn't crash anymore.</p>",
        "id": 269440032,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1643214684
    },
    {
        "content": "<p>I’ll come back around in here when I have more info. I’m doing a Debug build of LLVM now to feed into it.</p>",
        "id": 269440108,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643214713
    },
    {
        "content": "<p>Oh, <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span> , I didn’t do the cherry-pick correctly</p>",
        "id": 269447056,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643217264
    },
    {
        "content": "<p>(or rather, I cherry-picked, but then the build automatically moved back to the previous commit.)</p>",
        "id": 269447094,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643217284
    },
    {
        "content": "<p>Okay, build of my repro is now failing with a more reasonable error during link: </p>\n<div class=\"codehilite\"><pre><span></span><code>error: linking with `cc` failed: exit status: 1\n  |\n  = note: &quot;cc&quot; &quot;/tmp/rust_out2.dir/demo.demo.f366c950-cgu.0.rcgu.o&quot; &quot;-Wl,--as-needed&quot; &quot;-L&quot; &quot;/tmp/deps&quot; &quot;-L&quot; &quot;/tmp/deps&quot; &quot;-L&quot; &quot;/media/pnkfelix/Rust/i\\\nssue_91671/rust-91671/objdir-dbgopt/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/aarch64-unknown-linux-gnu/lib&quot; &quot;-Wl,--eh-frame-hdr&quot; &quot;-Wl,-znoe\\\nxecstack&quot; &quot;-L&quot; &quot;/media/pnkfelix/Rust/issue_91671/rust-91671/objdir-dbgopt/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/aarch64-unknown-linux-gn\\\nu/lib&quot; &quot;-o&quot; &quot;/tmp/rust_out2.dir/demo&quot; &quot;-Wl,--gc-sections&quot; &quot;-pie&quot; &quot;-Wl,-zrelro,-znow&quot; &quot;-nodefaultlibs&quot;\n  = note: /usr/bin/ld: /tmp/rust_out2.dir/demo.demo.f366c950-cgu.0.rcgu.o: Relocations in generic ELF (EM: 183)\n          /usr/bin/ld: /tmp/rust_out2.dir/demo.demo.f366c950-cgu.0.rcgu.o: Relocations in generic ELF (EM: 183)\n          /usr/bin/ld: /tmp/rust_out2.dir/demo.demo.f366c950-cgu.0.rcgu.o: Relocations in generic ELF (EM: 183)\n          /usr/bin/ld: /tmp/rust_out2.dir/demo.demo.f366c950-cgu.0.rcgu.o: error adding symbols: file in wrong format\n          collect2: error: ld returned 1 exit status\n</code></pre></div>",
        "id": 269449426,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643218167
    },
    {
        "content": "<p>(so, sorry for the noise. My mistake.)</p>",
        "id": 269449477,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643218185
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/187780-t-compiler.2Fwg-llvm/topic/translating.20multi-crate.20build.20into.20LLVM.20IR.20.2391671/near/269447094\">said</a>:</p>\n<blockquote>\n<p>(or rather, I cherry-picked, but then the build automatically moved back to the previous commit.)</p>\n</blockquote>\n<p>The usual x.py submodules footgun <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 269582389,
        "sender_full_name": "nagisa",
        "timestamp": 1643294791
    },
    {
        "content": "<p>yep. So now I've posted a note to the rustc-dev-guide about it: <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1291/files\">https://github.com/rust-lang/rustc-dev-guide/pull/1291/files</a></p>",
        "id": 269681986,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643340643
    },
    {
        "content": "<p>and expanded the dev-guide's treatment on debugging LLVM: <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1290\">https://github.com/rust-lang/rustc-dev-guide/pull/1290</a></p>",
        "id": 269682020,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643340686
    },
    {
        "content": "<p>and, finally, I tested the cherry-pick on my M1. It resolves the problem, so I'm proposing we backport it to our LLVM fork: <a href=\"https://github.com/rust-lang/llvm-project/pull/129\">https://github.com/rust-lang/llvm-project/pull/129</a></p>",
        "id": 269682095,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643340740
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> , regarding the <a href=\"https://github.com/rust-lang/rust/pull/93426#issuecomment-1024299821\">CI failure</a> on <a href=\"https://github.com/rust-lang/rust/issues/93426\">#93426</a>: is that a known intermittent issue with <code>compiletest</code> or something else?</p>",
        "id": 270469773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1643841335
    },
    {
        "content": "<p>The CI failure looks like <a href=\"https://github.com/rust-lang/rust/issues/93384\">#93384</a>.</p>",
        "id": 270474712,
        "sender_full_name": "tm",
        "timestamp": 1643843955
    }
]