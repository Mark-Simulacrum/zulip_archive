[
    {
        "content": "<p>I could use some help with <a href=\"https://github.com/rust-lang/rust/pull/81327\">https://github.com/rust-lang/rust/pull/81327</a>... I am looking for a way to abort codegen when a post-monomorphization error was triggered, but no matter what I do I run into LLVM assertion failures (or weird MSVC hangs, it seems).</p>",
        "id": 224326997,
        "sender_full_name": "RalfJ",
        "timestamp": 1611841554
    },
    {
        "content": "<p>I am already looking into this.</p>",
        "id": 224327462,
        "sender_full_name": "bjorn3",
        "timestamp": 1611841763
    },
    {
        "content": "<p>In <code>codegen_crate</code> you can check for <code>tcx.sess.has_errors()</code> and then I think only call <code>submit_codegened_module_to_llvm</code> if there are no errors. At the end of the loop you can then add a <code>tcx.sess.abort_if_errors()</code>. This should prevent any module from being optimized and written while still codegening them all for the errors.</p>",
        "id": 224328113,
        "sender_full_name": "bjorn3",
        "timestamp": 1611842065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> ^</p>",
        "id": 224328135,
        "sender_full_name": "bjorn3",
        "timestamp": 1611842080
    }
]