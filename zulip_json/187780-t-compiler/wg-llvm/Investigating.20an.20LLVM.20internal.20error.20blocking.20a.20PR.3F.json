[
    {
        "content": "<p>Does anyone have the bandwidth to investigate an LLVM issue that's been blocking a PR for some time now? <a href=\"https://github.com/rust-lang/rust/pull/81825\">https://github.com/rust-lang/rust/pull/81825</a> is blocked by <a href=\"https://pipelines.actions.githubusercontent.com/DhU3eyB11Ei4viT99vzh0CpKzg7REqx1Nup2tB9LzmxBcoHdbh/_apis/pipelines/1/runs/8344/signedlogcontent/43?urlExpires=2021-04-26T05%3A10%3A28.3118596Z&amp;urlSigningMethod=HMACV1&amp;urlSignature=VAH%2F2e9amO%2F54uFup7UScJPXY5A5r7Mbq1imLk5wz6E%3D\">this failure</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>2021-03-27T19:34:16.0666981Z rustc: /checkout/src/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:883: void {anonymous}::RegAllocFast::defineVirtReg(llvm::MachineInstr&amp;, unsigned int, llvm::Register, bool): Assertion `PhysReg != 0 &amp;&amp; \"Register not assigned\"' failed.\n2021-03-27T19:34:16.0668162Z error: ran out of registers during register allocation\n</code></pre></div>\n<p>Nobody involved in the issue has any idea how to address it.<br>\n<a href=\"https://github.com/rust-lang/rust/issues/83854\">https://github.com/rust-lang/rust/issues/83854</a> appears to have a somewhat simplified version of the same error.<br>\nIt'd really help to have someone with LLVM experience take a look at the issue.</p>",
        "id": 236121332,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619413894
    },
    {
        "content": "<p>I may be able to look at this this weekend.</p>",
        "id": 236250692,
        "sender_full_name": "nagisa",
        "timestamp": 1619473960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> Thank you, that would be deeply appreciated. <span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span>️</p>",
        "id": 236299944,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1619511848
    },
    {
        "content": "<p>I wasn't able to get to it last weekend <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 237151502,
        "sender_full_name": "nagisa",
        "timestamp": 1620043965
    },
    {
        "content": "<p>This is related to stsack probes, though. <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> wasn't the decision to force the inline probes to off until llvm 13?</p>",
        "id": 237151916,
        "sender_full_name": "nagisa",
        "timestamp": 1620044209
    },
    {
        "content": "<p>because of the codegen bug</p>",
        "id": 237151924,
        "sender_full_name": "nagisa",
        "timestamp": 1620044215
    },
    {
        "content": "<p>Well until the bug is fixed, at least. Someone said LLVM 13 in the meeting but I don’t know why we would commit to delaying that long if a backportable patch comes before then</p>",
        "id": 237152566,
        "sender_full_name": "pnkfelix",
        "timestamp": 1620044600
    },
    {
        "content": "<p>simplified to a </p>\n<div class=\"codehilite\"><pre><span></span><code>echo &quot;fn main() {}&quot; | ./build/i686-unknown-linux-gnu/stage1/bin/rustc - &quot;--target=i686-unknown-linux-gnu&quot; -Clto=thin -Ccodegen-units=1\n</code></pre></div>\n<p>for now...</p>",
        "id": 237176972,
        "sender_full_name": "nagisa",
        "timestamp": 1620054652
    },
    {
        "content": "<p>Huh. So the register allocation error happens even if you're not doing anything related to allocating a lot of registers (such as making a system call)?</p>",
        "id": 237187495,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620058709
    },
    {
        "content": "<p>That's quite the misdirection. :)</p>",
        "id": 237187591,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620058753
    },
    {
        "content": "<p>Thanks for investigating!</p>",
        "id": 237187597,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620058758
    },
    {
        "content": "<p>This seems to me more like it could be a bug in regalloc, though I still haven't gotten to the point of looking at the machine code that triggers it.</p>",
        "id": 237190109,
        "sender_full_name": "nagisa",
        "timestamp": 1620059915
    },
    {
        "content": "<p>But if you run this with <code>-Cllvm-args=-verify-machineinstrs</code> the validation freaks out about invalid register constraints and whatnot which would suggest that it may be an issue in, say, fastisel too.</p>",
        "id": 237190179,
        "sender_full_name": "nagisa",
        "timestamp": 1620059961
    },
    {
        "content": "<p>Huh, this does not reproduce when cross-compiling. I tried a bunch of things, but I wasn't able to reduce case due to a number of complications: the issue involves LTO, regalloc, etc.</p>",
        "id": 238052245,
        "sender_full_name": "nagisa",
        "timestamp": 1620584802
    },
    {
        "content": "<p>I tried changing the strategy and using a debugger instead, but LLVM built with debug info no longer reproduces the issue <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 238052252,
        "sender_full_name": "nagisa",
        "timestamp": 1620584826
    },
    {
        "content": "<p>If anybody else is interested in looking into this, feel free to do so.</p>",
        "id": 238052273,
        "sender_full_name": "nagisa",
        "timestamp": 1620584864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/187780-t-compiler.2Fwg-llvm/topic/Investigating.20an.20LLVM.20internal.20error.20blocking.20a.20PR.3F/near/237176972\">said</a>:</p>\n<blockquote>\n<p>simplified to a </p>\n<div class=\"codehilite\"><pre><span></span><code>echo &quot;fn main() {}&quot; | ./build/i686-unknown-linux-gnu/stage1/bin/rustc - &quot;--target=i686-unknown-linux-gnu&quot; -Clto=thin -Ccodegen-units=1\n</code></pre></div>\n<p>for now...</p>\n</blockquote>\n<p>This does not longer trigger the assertion for me. However, changing <code>lto=thin</code> to <code>lto=fat</code> triggers it again.<br>\nThe number of CGUs does not seem to have an effect. However, setting<code>opt-level=1</code> prevents the issue.<br>\nAn updated reproduction would thus be:</p>\n<div class=\"codehilite\"><pre><span></span><code>echo &quot;fn main() {}&quot; | build/i686-unknown-linux-gnu/stage1/bin/rustc - &quot;--target=i686-unknown-linux-gnu&quot; -Clto=fat\n</code></pre></div>",
        "id": 244150204,
        "sender_full_name": "Dominik Stolz",
        "timestamp": 1624889510
    }
]