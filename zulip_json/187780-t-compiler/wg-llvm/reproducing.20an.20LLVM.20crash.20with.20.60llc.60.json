[
    {
        "content": "<p>I've got some code which I'm testing out compiling to wasm64 which is crashing in LLVM. I've narrowed it down to the production of debuginfo, and I'm trying to get a file to report to upstream LLVM. To that end I've got a bitcode file from LLVM (via <code>-C save-temps</code>) which I believe is the bitcode that rustc is using to generate the object, and then the object file is zero bytes which I believe confirms the behavior where it's crashing creating the object file.</p>\n<p>Unfortunately though I can't get <code>llc</code> to crash. Historically I've had to fiddle with various options to <code>llc</code> to get it to crash as well to ensure it's running with the same settings that rustc configures, but I was curious if others know of any tips/tricks to get <code>llc</code> to crash in the same way as llvm-as-invoked-by-<code>rustc</code>? Or otherwise does anyone know if debuginfo passes various options behind the scenes to LLVM and/or how to configure llc to produce debuginfo the same way as the compiler?</p>",
        "id": 259533994,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635518495
    },
    {
        "content": "<p>Is this an unoptimized build? Note that llc defaults to <code>-O2</code>, so you have to pass <code>-O0</code> explicitly.</p>",
        "id": 259535637,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1635519200
    },
    {
        "content": "<p>yeah this is an unoptimized rust build that crashes and unfortunately <code>-O0</code> to llc doesn't seem to help</p>",
        "id": 259535806,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635519276
    },
    {
        "content": "<p>the specific bug is that a relocation is being generated in rustc which crashes, but w/e I do I can't seem to get llc to generate the same relocation</p>",
        "id": 259535846,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635519295
    },
    {
        "content": "<p><code>-filetype=obj</code> maybe relevant if the crash is in the MC layer</p>",
        "id": 259535889,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1635519316
    },
    {
        "content": "<p>yeah   that's there too :(</p>",
        "id": 259535906,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635519323
    },
    {
        "content": "<p>the relevant rustc reproduction bits are <code>-C embed-bitcode=no -C debuginfo=1 --target wasm64-unknown-unknown -C codegen-units=1</code>, and the llc args so far are <code>-filetype=obj -o foo.o -O0</code></p>",
        "id": 259536044,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635519376
    },
    {
        "content": "<p>I've tried lots of other flags to llc like <code>--relocation-model=static</code> but nothing seems to do the trick</p>",
        "id": 259536078,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635519396
    },
    {
        "content": "<p>Hm, then I don't know ^^ LLVMRustCreateTargetMachine has the custom options that should be relevant for the llc context.</p>",
        "id": 259536476,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1635519573
    },
    {
        "content": "<p>If you're already set code and relocation model, I'm not sure what else would be relevant here</p>",
        "id": 259536791,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1635519690
    },
    {
        "content": "<p>yeah going as far as <code>-filetype=obj -o foo.o -O0 --relocation-model=static --mattr=+bulk-memory,+mutable-globals,+sign-ext,+nontrapping-fptoint --trap-unreachable -mcpu=generic -mtriple=wasm64-unknown-unknown --thread-model=single --code-model=medium</code> even doesn't seem to get llc to crash... well in any case I'll keep poking or otherwise just skip debuginfo for now and hope it gets fixed at some point upstream</p>",
        "id": 259537223,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635519849
    },
    {
        "content": "<p>it took me way too long to find this but it was <code>-generate-arange-section</code>, that argument causes llc to crash</p>",
        "id": 259919869,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1635800044
    }
]