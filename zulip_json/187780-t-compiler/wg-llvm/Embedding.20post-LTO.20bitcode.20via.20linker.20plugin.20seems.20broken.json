[
    {
        "content": "<p>Hi wg-llvm,</p>\n<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> and I have been trying to figure out why embedding post-LTO bitcode (via linker plugin) is not behaving as expected. I'm keen to make this work so that I can use it  in a research project.</p>\n<p>Yesterday we conversed in <a href=\"https://github.com/rust-lang/rust/issues/84395\">this issue</a> and to summarise, we'd expect something like this to work:</p>\n<div class=\"codehilite\"><pre><span></span><code>RUSTFLAGS=&quot;-C linker_plugin_lto -C linker=clang -C link-arg=-fuse-ld=lld \\\n    -C link-arg=-Wl,--plugin-opt=-lto-embed-bitcode=optimized&quot; cargo build --release\n</code></pre></div>\n<p>But:</p>\n<ul>\n<li>The end binaries contains many concatenated bitcode modules in its <code>.llvmbc</code> section (there should be just one module in there).</li>\n<li>The bitcode appears to be pre-LTO.</li>\n<li>...despite putting debug prints in libLTO to confirm that it's taking the <code>EmbedOptimized</code> path, which It appears to be.</li>\n</ul>\n<p>At this point we are stumped. rustc is doing something which causes the incorrect result, but we are not sure what.</p>\n<p>Posting here because it's likely that someone here is knowledgeable in this space. Any help would be much appreciated.</p>\n<p>Thanks</p>",
        "id": 236476376,
        "sender_full_name": "Edd Barrett",
        "timestamp": 1619602133
    },
    {
        "content": "<p>For reference it does work correctly when using clang instead of rustc.</p>",
        "id": 236476464,
        "sender_full_name": "bjorn3",
        "timestamp": 1619602183
    }
]