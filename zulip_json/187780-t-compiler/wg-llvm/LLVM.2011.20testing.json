[
    {
        "content": "<p>Hey all, just want to share that I've been preparing Rust changes for LLVM 11</p>",
        "id": 201201929,
        "sender_full_name": "cuviper",
        "timestamp": 1592428686
    },
    {
        "content": "<p>in my initial perf test, syn-opt is going from 79.68B instructions to 74.05B</p>",
        "id": 201201978,
        "sender_full_name": "cuviper",
        "timestamp": 1592428721
    },
    {
        "content": "<p>that's out-of-tree vanilla LLVM 10 vs vanilla LLVM 11 (master), identical build options</p>",
        "id": 201202031,
        "sender_full_name": "cuviper",
        "timestamp": 1592428761
    },
    {
        "content": "<p>only blocker I have is that the C <code>LLVMTypeKind</code> broke ABI adding <code>LLVMBFloatTypeKind</code> -- I've already reached out to ask for that fixed (moved to the end of the enum)</p>",
        "id": 201202191,
        "sender_full_name": "cuviper",
        "timestamp": 1592428850
    },
    {
        "content": "<p>when that's settled, I'll open a Rust PR with the changes</p>",
        "id": 201202272,
        "sender_full_name": "cuviper",
        "timestamp": 1592428910
    },
    {
        "content": "<p>here's my branch, assuming BFloat is moved to enum value 18<br>\n<a href=\"https://github.com/cuviper/rust/tree/llvm11\">https://github.com/cuviper/rust/tree/llvm11</a></p>",
        "id": 201203554,
        "sender_full_name": "cuviper",
        "timestamp": 1592429588
    },
    {
        "content": "<p>Nice! I also started working on this, but got a bit side tracked by opaque pointers. I see you avoided that rabbit hole by using pointer element types.</p>",
        "id": 201297353,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1592499764
    },
    {
        "content": "<p>yeah, using pointer element types is basically what LLVM did in the deprecated methods we were using before</p>",
        "id": 201307063,
        "sender_full_name": "cuviper",
        "timestamp": 1592504641
    },
    {
        "content": "<p>I didn't look into whether we need to do something else for opaque pointers in the long term</p>",
        "id": 201307140,
        "sender_full_name": "cuviper",
        "timestamp": 1592504669
    },
    {
        "content": "<p>This would be wonderful for AVR ‚Äî we have like 30 commits that aren‚Äôt in the current Rust fork of LLVM; pulling LLVM head would be easier for us than all the cherry picks üòÅ</p>",
        "id": 201472561,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1592649988
    },
    {
        "content": "<p>wait opaque pointers are here?</p>",
        "id": 202944913,
        "sender_full_name": "eddyb",
        "timestamp": 1593995715
    },
    {
        "content": "<p>I guess I can go read <a href=\"https://github.com/rust-lang/rust/pull/73525\">https://github.com/rust-lang/rust/pull/73525</a></p>",
        "id": 202944965,
        "sender_full_name": "eddyb",
        "timestamp": 1593995799
    },
    {
        "content": "<p>oh I see this is just being explicit in the instructions</p>",
        "id": 202945023,
        "sender_full_name": "eddyb",
        "timestamp": 1593995889
    },
    {
        "content": "<p>we should try to avoid introspecting LLVM types, just to make it easier on ourselves in the future</p>",
        "id": 202945028,
        "sender_full_name": "eddyb",
        "timestamp": 1593995910
    },
    {
        "content": "<p><code>rustc_codegen_llvm</code> should know the <code>TyAndLayout</code>, although some of the API from <code>rustc_codegen_ssa</code> might need to be updated</p>",
        "id": 202945039,
        "sender_full_name": "eddyb",
        "timestamp": 1593995956
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/73526\">#73526</a> is now ready with LLVM 11-rc1</p>",
        "id": 205284982,
        "sender_full_name": "cuviper",
        "timestamp": 1595967347
    },
    {
        "content": "<p>I've ran LLVM tests with 32 bit mingw-w64 hoping to find small reproducer for the assertion and that yielded everything but an assertion...<br>\n106k lines output: <a href=\"https://gist.github.com/mati865/076a53a023f4b940fca64343ee095946\">https://gist.github.com/mati865/076a53a023f4b940fca64343ee095946</a></p>",
        "id": 205788720,
        "sender_full_name": "mati865",
        "timestamp": 1596458471
    },
    {
        "content": "<p>You do have a lot of \"PLEASE submit a bug report\" which are probably crashes... the output is cut off though.</p>",
        "id": 205790471,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1596459671
    },
    {
        "content": "<p>Those are  legitimate crashes (<code>STATUS_ACCESS_VIOLATION</code>) but I don't think they are useful with broken stacktrace.</p>",
        "id": 205790691,
        "sender_full_name": "mati865",
        "timestamp": 1596459829
    },
    {
        "content": "<p>now that we landed with <code>rustc/11.0-2020-08-20</code>, we should probably kill the unused <code>rustc/11.0-2020-07-28</code></p>",
        "id": 208125321,
        "sender_full_name": "cuviper",
        "timestamp": 1598464554
    },
    {
        "content": "<p>who has force-push access -- <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> ?</p>",
        "id": 208125369,
        "sender_full_name": "cuviper",
        "timestamp": 1598464564
    },
    {
        "content": "<p>I deleted the branch</p>",
        "id": 208133457,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1598468496
    },
    {
        "content": "<p>Updated you <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> to an admin role on the repo too</p>",
        "id": 208133474,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1598468502
    },
    {
        "content": "<p>to delete it I just temporarily change the branch protection rule, delete it, and then revert the rule back</p>",
        "id": 208133528,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1598468520
    },
    {
        "content": "<p>sounds good, thanks!</p>",
        "id": 208133657,
        "sender_full_name": "cuviper",
        "timestamp": 1598468568
    }
]