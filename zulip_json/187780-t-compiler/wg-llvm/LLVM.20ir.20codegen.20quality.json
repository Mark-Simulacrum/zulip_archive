[
    {
        "content": "<p>I have been working on an llvm backend for cranelift for the last week or so. Today I managed to get it working on a reasonable set of programs. Just for fun I tried to benchmark with <a href=\"https://github.com/ebobby/simple-raytracer\">https://github.com/ebobby/simple-raytracer</a> and compare it to cg_llvm. It seems to be much faster even though I didn't use any optimizations for the llvm cranelift backend, while cg_llvm does do some optimizations by default even in debug mode. It also prevents any pointer provenance based optimizations as it uses ptrtoint and inttoptr everywhere as cg_clif doesn't have a separate pointer type.</p>\n<p>cg_llvm: 7437 milliseconds elapsed.<br>\ncg_clif + llvm backend: 4692 milliseconds elapsed.</p>\n<p>This seems to indicate that cg_clif produces significantly higher quality ir, such that even after translation from clif ir to llvm ir it is much better.</p>\n<p>As cg_clif + llvm backend doesn't support debuginfo, here is a run with cg_llvm with debuginfo disabled:</p>\n<p>cg_llvm + debuginfo=0: 7088 milliseconds elapsed.</p>\n<p>I have spent a considerable amount of time optimizing the ir produced by cg_clif, which may be the reason for this runtime perf difference, but I didn't expect the difference to be this big.</p>",
        "id": 255074401,
        "sender_full_name": "bjorn3",
        "timestamp": 1632758803
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span></p>",
        "id": 255074655,
        "sender_full_name": "bjorn3",
        "timestamp": 1632758886
    },
    {
        "content": "<p><code>-Cno-prepopulate-passes</code> would be the right way to disable optimizations with cg_llvm</p>",
        "id": 255074658,
        "sender_full_name": "nagisa",
        "timestamp": 1632758887
    },
    {
        "content": "<p>cg_llvm + debuginfo=0 + -Cno-prepopulate-passes: 8805 milliseconds elapsed.</p>",
        "id": 255074811,
        "sender_full_name": "bjorn3",
        "timestamp": 1632758943
    },
    {
        "content": "<p>ha <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 255074935,
        "sender_full_name": "nagisa",
        "timestamp": 1632758997
    },
    {
        "content": "<p>do you have any measurement of the resulting performance?</p>",
        "id": 255609687,
        "sender_full_name": "cuviper",
        "timestamp": 1633021333
    },
    {
        "content": "<p>e.g. I wonder how much \"It also prevents any pointer provenance based optimizations\" is a problem, and perhaps if that short-cuts a lot of the LLVM runtime cost</p>",
        "id": 255609835,
        "sender_full_name": "cuviper",
        "timestamp": 1633021403
    },
    {
        "content": "<p>basically, whether it's faster just because it's doing less</p>",
        "id": 255609887,
        "sender_full_name": "cuviper",
        "timestamp": 1633021426
    },
    {
        "content": "<p>of course, if we can \"do less\" while keeping all optimizations, that would be great :)</p>",
        "id": 255610219,
        "sender_full_name": "cuviper",
        "timestamp": 1633021550
    },
    {
        "content": "<p>What are the resulting binary sizes?</p>",
        "id": 255612558,
        "sender_full_name": "Jubilee",
        "timestamp": 1633022426
    },
    {
        "content": "<p>This was actually about runtime performance. I haven't checked compile time performance, but I expect it to be worse than cg_llvm as it uses an intermediate ir. The main point here is that by generating better quality ir (which I think won't result in more than a couple percent cost of translation as cg_clif does it too) in cg_llvm, the debug mode runtime performance can be significantly improved.</p>",
        "id": 255616317,
        "sender_full_name": "bjorn3",
        "timestamp": 1633023771
    },
    {
        "content": "<p>oh, that's elapsed time of _running_ the raytracer? wow!</p>",
        "id": 255616483,
        "sender_full_name": "cuviper",
        "timestamp": 1633023828
    },
    {
        "content": "<p>Yes! I was very much surprised myself!</p>",
        "id": 255616660,
        "sender_full_name": "bjorn3",
        "timestamp": 1633023878
    },
    {
        "content": "<p>Hang on, I am not sure if I disabled <code>-Zmir-opt-level=3</code>for libstd. If I didn't, then this is much less impressive.</p>",
        "id": 255617126,
        "sender_full_name": "bjorn3",
        "timestamp": 1633024055
    },
    {
        "content": "<p>I think I will need to redo the benchmark tomorrow.</p>",
        "id": 255617205,
        "sender_full_name": "bjorn3",
        "timestamp": 1633024083
    },
    {
        "content": "<p>Less impressive, though still faster:</p>\n<div class=\"codehilite\"><pre><span></span><code>Benchmark #1: target/x86_64-unknown-linux-gnu/debug/main\n  Time (mean ± σ):      6.643 s ±  0.011 s    [User: 6.641 s, System: 0.002 s]\n  Range (min … max):    6.630 s …  6.665 s    10 runs\n\nBenchmark #2: ./raytracer_cg_llvm\n  Time (mean ± σ):      7.419 s ±  0.018 s    [User: 7.416 s, System: 0.003 s]\n  Range (min … max):    7.390 s …  7.449 s    10 runs\n\nSummary\n  &#39;target/x86_64-unknown-linux-gnu/debug/main&#39; ran\n    1.12 ± 0.00 times faster than &#39;./raytracer_cg_llvm&#39;\n</code></pre></div>\n<p><code>target/x86_64-unknown-linux-gnu/debug/main</code> is cg_clif + llvm backend<br>\n<code>./raytracer_cg_llvm</code> is cg_llvm</p>",
        "id": 255751311,
        "sender_full_name": "bjorn3",
        "timestamp": 1633097903
    },
    {
        "content": "<p>Compiling it:</p>\n<p>cg_clif + llvm backend: <code>    Finished dev [unoptimized] target(s) in 45.92s</code><br>\ncg_llvm: <code>    Finished dev [unoptimized] target(s) in 17.83s</code></p>\n<p>note that cg_clif + llvm backend is single threaded while cg_llvm is multi threaded. Forcing both to use a single thread using <code>-j1</code> gives:</p>\n<p>cg_clif + llvm backend: <code>    Finished dev [unoptimized] target(s) in 1m 03s</code><br>\ncg_llvm: <code>    Finished dev [unoptimized] target(s) in 32.37s</code></p>",
        "id": 255751888,
        "sender_full_name": "bjorn3",
        "timestamp": 1633098155
    },
    {
        "content": "<p>So cg_clif + llvm backend is about twice as slow as cg_llvm. Presumably due to translation overhead.</p>",
        "id": 255751963,
        "sender_full_name": "bjorn3",
        "timestamp": 1633098189
    }
]