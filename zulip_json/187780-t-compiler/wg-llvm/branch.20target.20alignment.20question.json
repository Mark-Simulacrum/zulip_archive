[
    {
        "content": "<p>I've been asked the following question by someone investigating performance/codegen in Firefox:</p>\n<blockquote>\n<p>Do you know why rust chooses to align branch targets on 16-byte boundaries, and where in the code this is controlled?</p>\n</blockquote>\n<p>I don't know the answer but maybe some here does? Any help is appreciated!</p>",
        "id": 173638513,
        "sender_full_name": "mw",
        "timestamp": 1566290016
    },
    {
        "content": "<p>This has to happen somewhere in the x86 backend (or whatever architecture they're referring to), and rather late at that (around MC emission, probably?). I'm not familiar enough with it to give a more precise answer.</p>",
        "id": 173643913,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1566295164
    },
    {
        "content": "<p>I should add for completeness that \"happens in the x86 backend\" may mean \"there is an small hard-to-find hook being overriden somewhere in the target which is used by shared code in lib/CodeGen that actually inserts the padding\"</p>",
        "id": 173645405,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1566296454
    },
    {
        "content": "<p>Oh, as for <em>why</em>, general optimization advice from Intel is to align hot jump targets to a cache line</p>",
        "id": 173645434,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1566296507
    },
    {
        "content": "<p>Very interesting! Thank you, <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span>! I'll pass it on.</p>",
        "id": 173657511,
        "sender_full_name": "mw",
        "timestamp": 1566307794
    }
]