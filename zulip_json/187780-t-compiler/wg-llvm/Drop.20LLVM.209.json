[
    {
        "content": "<p>Now that we're on LLVM 12, can we drop support for LLVM 9?</p>",
        "id": 230425630,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1615845669
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span></p>",
        "id": 230429637,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615846739
    },
    {
        "content": "<p>What's the earliest supported version of RHEL these days?</p>",
        "id": 230429709,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615846761
    },
    {
        "content": "<p>We don't have a set policy for maintaining old llvm releases. I personally consider 1 previous llvm to be plenty.</p>",
        "id": 230429965,
        "sender_full_name": "nagisa",
        "timestamp": 1615846834
    },
    {
        "content": "<p>In the past we would motivate it basically on the grounds of maintainer burden</p>",
        "id": 230430105,
        "sender_full_name": "nagisa",
        "timestamp": 1615846872
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"372582\">@Sylvestre Ledru</span> as well, for Debian.</p>",
        "id": 230430188,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615846904
    },
    {
        "content": "<p>Distributions don't generally bump rustc version they ship within a distro cycle do they?</p>",
        "id": 230430300,
        "sender_full_name": "nagisa",
        "timestamp": 1615846929
    },
    {
        "content": "<p>There are a few distro-related factors that would potentially affect how many versions of LLVM we'd need to support in Rust.</p>",
        "id": 230430476,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615846988
    },
    {
        "content": "<p>(perfect opportunity to make up a policy)</p>",
        "id": 230430565,
        "sender_full_name": "nagisa",
        "timestamp": 1615847019
    },
    {
        "content": "<p>(agreed)</p>",
        "id": 230430576,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847023
    },
    {
        "content": "<p>Rust is a build dependency of Firefox, and distributions do want to keep Firefox up to date.</p>",
        "id": 230430618,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847038
    },
    {
        "content": "<p>Distributions don't always adopt newer versions of LLVM rapidly, and it'd be helpful to slightly decouple updating Rust from updating LLVM. (This might motivate supporting LLVM N-1, though not N-2 or N-3 I think.)</p>",
        "id": 230430790,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847087
    },
    {
        "content": "<p>And then I think cuviper may have had some additional reasons related to RHEL.</p>",
        "id": 230430885,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847119
    },
    {
        "content": "<p>The de facto policy seems to be three LLVM releases, but I don't know how that came about and whether it's just an accident.</p>",
        "id": 230430936,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1615847136
    },
    {
        "content": "<p>Personally, I'd be in favor of a policy to support latest and latest minus 1, but I don't maintain distro packages.</p>",
        "id": 230431099,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847181
    },
    {
        "content": "<p>we actually keep up pretty closely on RHEL -- it's not considered an ABI-stable system library, so we rebase frequently</p>",
        "id": 230431163,
        "sender_full_name": "cuviper",
        "timestamp": 1615847202
    },
    {
        "content": "<p>Fedora stays put on an LLVM version, but that's only about a year to support</p>",
        "id": 230431237,
        "sender_full_name": "cuviper",
        "timestamp": 1615847228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> Interesting. Does that mean things depending on LLVM also need updating frequently, such as Mesa?</p>",
        "id": 230431248,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847229
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> well we have two things -- an <code>llvm-private</code> package that mostly stays put, which mesa uses</p>",
        "id": 230431489,
        "sender_full_name": "cuviper",
        "timestamp": 1615847306
    },
    {
        "content": "<p>Current n-2 state likely came about as an accident of sorts wherein nobody was bothered enough by adding an additional ifdef to support the older version vs dropping it.</p>",
        "id": 230431518,
        "sender_full_name": "nagisa",
        "timestamp": 1615847315
    },
    {
        "content": "<p>and then an llvm-toolset collection that rebases for every version</p>",
        "id": 230431524,
        "sender_full_name": "cuviper",
        "timestamp": 1615847316
    },
    {
        "content": "<p>my soft ask is \"whatever the oldest supported Fedora has\", which would be Fedora 32 with LLVM 10</p>",
        "id": 230431659,
        "sender_full_name": "cuviper",
        "timestamp": 1615847378
    },
    {
        "content": "<p>I can mily recall a time where we might have supported just n-1. I feel like that bump was motivated by our use of some new llvm feature . I could see us doing the same for e.g. newpm</p>",
        "id": 230431755,
        "sender_full_name": "nagisa",
        "timestamp": 1615847416
    },
    {
        "content": "<p>and Fedora 32 will be EOL in May, then Fedora 33 is my lowest with LLVM 11</p>",
        "id": 230431874,
        "sender_full_name": "cuviper",
        "timestamp": 1615847491
    },
    {
        "content": "<p>anyway, dropping 9 is fine with me now</p>",
        "id": 230431964,
        "sender_full_name": "cuviper",
        "timestamp": 1615847535
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> LLVM 10 is, today, N-1. LLVM 12 isn't released yet, so it isn't N yet.</p>",
        "id": 230432084,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847605
    },
    {
        "content": "<p>yeah, well 12 is imminent</p>",
        "id": 230432130,
        "sender_full_name": "cuviper",
        "timestamp": 1615847638
    },
    {
        "content": "<p>Sure. And yeah, it'll be out before May.</p>",
        "id": 230432187,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847654
    },
    {
        "content": "<p>Does Fedora have a policy for how up-to-date they keep LLVM, or is it just \"how well did Fedora's release line up with LLVM's release\"?</p>",
        "id": 230432257,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847689
    },
    {
        "content": "<p>And to what extent does Fedora need to be able to update Rust in stable releases?</p>",
        "id": 230432281,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847711
    },
    {
        "content": "<p>Fedora usually jumps on even RCs for rawhide, but for release we stick with that version</p>",
        "id": 230432390,
        "sender_full_name": "cuviper",
        "timestamp": 1615847772
    },
    {
        "content": "<p>I do need to keep rebasing Rust for Firefox's sake, at least, because we don't use ESR</p>",
        "id": 230432419,
        "sender_full_name": "cuviper",
        "timestamp": 1615847794
    },
    {
        "content": "<p>/me doesn't actually know Firefox's requirement for MSRV.</p>",
        "id": 230432497,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615847845
    },
    {
        "content": "<p><a href=\"https://wiki.mozilla.org/Rust_Update_Policy_for_Firefox\">https://wiki.mozilla.org/Rust_Update_Policy_for_Firefox</a></p>",
        "id": 230432525,
        "sender_full_name": "cuviper",
        "timestamp": 1615847866
    },
    {
        "content": "<p>hmm, that hasn't been updated in a while</p>",
        "id": 230432544,
        "sender_full_name": "cuviper",
        "timestamp": 1615847881
    },
    {
        "content": "<p>one relevant milestone is when a new ESR is issued, and what Rust that will require</p>",
        "id": 230432699,
        "sender_full_name": "cuviper",
        "timestamp": 1615847968
    },
    {
        "content": "<p>it would be friendly to some distros if that Rust has a conservative LLVM requirement</p>",
        "id": 230432730,
        "sender_full_name": "cuviper",
        "timestamp": 1615847993
    },
    {
        "content": "<p>looks like ESR 91 is next: <a href=\"https://wiki.mozilla.org/Release_Management/Calendar\">https://wiki.mozilla.org/Release_Management/Calendar</a></p>",
        "id": 230432967,
        "sender_full_name": "cuviper",
        "timestamp": 1615848119
    },
    {
        "content": "<p>Thats quite few releases away, isn't it?</p>",
        "id": 230433101,
        "sender_full_name": "nagisa",
        "timestamp": 1615848198
    },
    {
        "content": "<p>86 being current it's in 5 months.</p>",
        "id": 230433121,
        "sender_full_name": "nagisa",
        "timestamp": 1615848220
    },
    {
        "content": "<p>I guess if that becomes beta on 2021-06-14, by policy they'll have chosen Rust 1.52</p>",
        "id": 230433123,
        "sender_full_name": "cuviper",
        "timestamp": 1615848220
    },
    {
        "content": "<p>I suggest we let 1.52 hang on to LLVM 9, then bump soon after</p>",
        "id": 230433388,
        "sender_full_name": "cuviper",
        "timestamp": 1615848369
    },
    {
        "content": "<p>master is now 1.53, so here you go: <a href=\"https://github.com/rust-lang/rust/issues/83387\">#83387</a></p>",
        "id": 231367276,
        "sender_full_name": "cuviper",
        "timestamp": 1616440245
    },
    {
        "content": "<p>Does ubuntu:18.04 have llvm-10? It might need a bump as well.</p>",
        "id": 231368937,
        "sender_full_name": "tm",
        "timestamp": 1616440872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span> yes it does, but no higher</p>",
        "id": 231369370,
        "sender_full_name": "cuviper",
        "timestamp": 1616440990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> did you take a close look at the <code>att_syntax</code> changes? I'm not fully confident that those assembly blocks are good for intel as-is</p>",
        "id": 231370650,
        "sender_full_name": "cuviper",
        "timestamp": 1616441335
    },
    {
        "content": "<p>I guess CI should tell</p>",
        "id": 231371133,
        "sender_full_name": "cuviper",
        "timestamp": 1616441471
    },
    {
        "content": "<p>Yeah they looked fine to me.</p>",
        "id": 231374133,
        "sender_full_name": "nagisa",
        "timestamp": 1616442655
    },
    {
        "content": "<p>Actually… I just looked at a few of them, not all of them, let me go though them again.</p>",
        "id": 231374228,
        "sender_full_name": "nagisa",
        "timestamp": 1616442703
    },
    {
        "content": "<p>I suspect that SGX <code>lea</code> might need to be reversed</p>",
        "id": 231374446,
        "sender_full_name": "cuviper",
        "timestamp": 1616442786
    },
    {
        "content": "<p>oh, you just commented too, okay</p>",
        "id": 231374470,
        "sender_full_name": "cuviper",
        "timestamp": 1616442800
    },
    {
        "content": "<p>I updated the comments with the replacements for both.</p>",
        "id": 231375189,
        "sender_full_name": "nagisa",
        "timestamp": 1616443100
    },
    {
        "content": "<p>Had forgotten the <code>width ptr</code> before <code>[]</code> when first writing the comment.</p>",
        "id": 231375230,
        "sender_full_name": "nagisa",
        "timestamp": 1616443125
    },
    {
        "content": "<p>FWIW I think it is fine to let the CI take care of verifying these assembly snippets, they will fail at compile time if they're wrong <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span></p>",
        "id": 231375436,
        "sender_full_name": "nagisa",
        "timestamp": 1616443209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Yeah, we (Debian) trying to support the most recent versions of LLVM for Rustc . So, dropping support for 9 is fine from the Debian POV. The next Debian version will ship with LLVM 11 as default. </p>\n<p>Note that a bigger pain point is that Rustc has patches applied to its in-tree LLVM tree. As we, in Debian, are relying on the LLVM packages, we might have differences ( <span class=\"user-mention\" data-user-id=\"220510\">@Mike Hommey</span> mentioned miscompilation to me) in the binary generated.</p>",
        "id": 231545374,
        "sender_full_name": "Sylvestre Ledru",
        "timestamp": 1616534255
    },
    {
        "content": "<p>I'm not sure if anything can be done on our end about our backporting of soundness fixes.</p>",
        "id": 231560530,
        "sender_full_name": "nagisa",
        "timestamp": 1616542769
    },
    {
        "content": "<p>in my memory very few of the soundness issues that were addressed through LLVM fixes could've been meaningfully addressed in rustc itself.</p>",
        "id": 231560687,
        "sender_full_name": "nagisa",
        "timestamp": 1616542892
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372582\">@Sylvestre Ledru</span> In general, we don't tend to backport random changes or make Rust-specific changes that would make our version of LLVM unsuitable for general usage. So most of the time it'd be appropriate to apply Rust's LLVM patches (especially backports) to the system LLVM. Does that help?</p>",
        "id": 231561484,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616543472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372582\">@Sylvestre Ledru</span> What's the current procedure for shipping new versions of Firefox in stable (since that's an unusual procedure compared to Debian's usual stable security backports)?</p>",
        "id": 231561603,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616543546
    }
]