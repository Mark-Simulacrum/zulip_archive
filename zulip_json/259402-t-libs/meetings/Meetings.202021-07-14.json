[
    {
        "content": "<p>Libs Meeting Agenda: <a href=\"https://hackmd.io/@rust-libs/HJpbQs3a_\">https://hackmd.io/@rust-libs/HJpbQs3a_</a><br>\nLibs API Meeting Agenda: <a href=\"https://hackmd.io/@rust-libs/B1sAMs2TO\">https://hackmd.io/@rust-libs/B1sAMs2TO</a></p>",
        "id": 245995016,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1626284892
    },
    {
        "content": "<p>Let me do the Mara thing</p>",
        "id": 245995216,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1626284999
    },
    {
        "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"4493\">@T-libs</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  We have a meeting at <time datetime=\"2021-07-07T18:00:00Z\">2021-07-07T20:00:00+02:00</time> aka in 10 minutes</p>",
        "id": 245995273,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1626285007
    },
    {
        "content": "<p>about <a href=\"https://github.com/rust-lang/rust/issues/53823\">#53823</a> earlier there was the question if the binary_search would have to be reverted to the old impl if we picked solution 2 (specialized x86 asm!) to which my answer was yes. But I forgot about <code>partition_point</code>. We can fix partition point this way without waiting for LLVM changes since it doesn't need or want the O(1)-for-exact-matches implementation.</p>\n<p>So the we could do a partial fix on the libs side and point users to try partition_point if that fits their use-case.</p>",
        "id": 246014514,
        "sender_full_name": "The 8472",
        "timestamp": 1626293996
    },
    {
        "content": "<p>But probably not worth it anyway.</p>",
        "id": 246014648,
        "sender_full_name": "The 8472",
        "timestamp": 1626294050
    },
    {
        "content": "<p>I wanted to make sure that the backport nomination for <a href=\"https://github.com/rust-lang/rust/issues/85953\">#85953</a> gets looked at. It looks like the automation only picks up things that are still open?</p>",
        "id": 246025693,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626298988
    },
    {
        "content": "<p>I think only the release team looks at beta-nominated tags. The libs team only looks at I-nominated</p>",
        "id": 246026329,
        "sender_full_name": "The 8472",
        "timestamp": 1626299355
    },
    {
        "content": "<p>There's a section for backports in the agenda?</p>",
        "id": 246026571,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626299508
    },
    {
        "content": "<p><a href=\"https://hackmd.io/@rust-libs/HJpbQs3a_#Backports\">https://hackmd.io/@rust-libs/HJpbQs3a_#Backports</a></p>",
        "id": 246026700,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626299572
    },
    {
        "content": "<p>good point, idk where I go that idea then.</p>",
        "id": 246026747,
        "sender_full_name": "The 8472",
        "timestamp": 1626299616
    },
    {
        "content": "<p>looks like the issue query only checks <code>is:open</code>, but yes we should check <em>all</em> backport nominations<br>\n<a href=\"https://github.com/rust-lang/libs-team/blob/9fda0c2cce47ca137b3d04210e09532eaab5d5d5/tools/agenda-generator/src/generator.rs#L338\">https://github.com/rust-lang/libs-team/blob/9fda0c2cce47ca137b3d04210e09532eaab5d5d5/tools/agenda-generator/src/generator.rs#L338</a></p>",
        "id": 246032844,
        "sender_full_name": "cuviper",
        "timestamp": 1626303654
    },
    {
        "content": "<p>I don't think that's actually the query.</p>",
        "id": 246037091,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626307236
    },
    {
        "content": "<p>Just the link that shows up in the assembeld agenda.</p>",
        "id": 246037111,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626307259
    },
    {
        "content": "<p>This is the query: <a href=\"https://github.com/rust-lang/libs-team/blob/9fda0c2cce47ca137b3d04210e09532eaab5d5d5/tools/agenda-generator/src/generator.rs#L328\">https://github.com/rust-lang/libs-team/blob/9fda0c2cce47ca137b3d04210e09532eaab5d5d5/tools/agenda-generator/src/generator.rs#L328</a></p>",
        "id": 246037122,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626307266
    },
    {
        "content": "<p>As I understand it, the final query URL looks something like <code>https://api.github.com/repos/rust-lang/rust/issues?labels=beta-nominated,t-libs</code></p>",
        "id": 246037214,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626307332
    },
    {
        "content": "<p>The problem is that github adds an implicit \"state=open\" paramater, <a href=\"https://docs.github.com/en/rest/reference/issues\">as documented here</a>.</p>",
        "id": 246037292,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626307428
    },
    {
        "content": "<p>What we'd really like is for the final query URL to be <code>https://api.github.com/repos/rust-lang/rust/issues?labels=beta-nominated,t-libs&amp;state=all</code>, and similarly for the other backport related cases.</p>",
        "id": 246037374,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626307493
    },
    {
        "content": "<p>clearly, I'm not familiar with this code :)</p>",
        "id": 246038998,
        "sender_full_name": "cuviper",
        "timestamp": 1626308999
    },
    {
        "content": "<p>care to open a PR?</p>",
        "id": 246039040,
        "sender_full_name": "cuviper",
        "timestamp": 1626309007
    },
    {
        "content": "<p>I'm not either! I just went on a slightly deeper delve.</p>",
        "id": 246039351,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626309317
    },
    {
        "content": "<p>I'm looking at it.</p>",
        "id": 246039468,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626309446
    },
    {
        "content": "<p>Hrmm.</p>",
        "id": 246039489,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626309482
    },
    {
        "content": "<p>The tricky bit is that we probably want to include closed <code>stable/beta-nominated</code> issues, but not closed \"stable/beta-accepted` issues.</p>",
        "id": 246039664,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626309663
    },
    {
        "content": "<p>The simplest thing to do is probably to break backports into seperate nominated and accepted subsections.</p>",
        "id": 246039678,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626309700
    },
    {
        "content": "<p>I don't know why we need to look at accepted at all, actually</p>",
        "id": 246039879,
        "sender_full_name": "cuviper",
        "timestamp": 1626309949
    },
    {
        "content": "<p>once it's nominated+accepted, the release team will see it for backport</p>",
        "id": 246039924,
        "sender_full_name": "cuviper",
        "timestamp": 1626309978
    },
    {
        "content": "<p><a href=\"https://forge.rust-lang.org/release/backporting.html\">https://forge.rust-lang.org/release/backporting.html</a></p>",
        "id": 246039938,
        "sender_full_name": "cuviper",
        "timestamp": 1626310006
    },
    {
        "content": "<p>though note that the release-team's query also only looks at the pr once it's closed -- we want it done on master first</p>",
        "id": 246039964,
        "sender_full_name": "cuviper",
        "timestamp": 1626310067
    },
    {
        "content": "<p>Okay, if it's really totally fine to not list <code>stable/beta-accepted</code> issues,  then I've got it implemented.</p>",
        "id": 246042183,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626312967
    },
    {
        "content": "<p>I'm worried I'll cause someone to miss something they need to see though...</p>",
        "id": 246042210,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626313006
    },
    {
        "content": "<p>Ahh, I see.</p>",
        "id": 246042733,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626313581
    },
    {
        "content": "<p>No, that's not going to work.</p>",
        "id": 246042739,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626313588
    },
    {
        "content": "<p>I need to fix something.</p>",
        "id": 246042746,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1626313596
    }
]