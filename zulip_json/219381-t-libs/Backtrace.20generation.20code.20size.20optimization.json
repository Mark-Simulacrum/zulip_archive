[
    {
        "content": "<p>I'm interested in making the backtrace code that powers RUST_BACKTRACE smaller. Before I get too deep, has anyone else worked on this?</p>",
        "id": 251186892,
        "sender_full_name": "Ben Kimock",
        "timestamp": 1630303148
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120827\">@Ben Kimock</span> have a look also to the <a class=\"stream\" data-stream-id=\"257204\" href=\"/#narrow/stream/257204-project-error-handling\">#project-error-handling</a> group streams. They are working also on backtraces, trying to move it to core IIRC, and may have additional information if you ping them.</p>",
        "id": 251190406,
        "sender_full_name": "pachi",
        "timestamp": 1630306588
    },
    {
        "content": "<p>This is the issue they're tracking: <a href=\"https://github.com/rust-lang/rfcs/pull/3156\">https://github.com/rust-lang/rfcs/pull/3156</a></p>",
        "id": 251203424,
        "sender_full_name": "pachi",
        "timestamp": 1630315217
    },
    {
        "content": "<p>we've not done any work on backtrace code size</p>",
        "id": 251268649,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1630346582
    },
    {
        "content": "<p>though much of the work we've done will certainly have an impact</p>",
        "id": 251268689,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1630346599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120827\">@Ben Kimock</span> I'd be happy to talk to you about the changes you'd like to make and all of the changes we're actively considering</p>",
        "id": 251268747,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1630346631
    },
    {
        "content": "<p>Thanks for the offer <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby</span> <br>\nIt sounds like the changes under discussion are all about what API should be provided, and what embedded developers would do with backtrace support. I'm interested in making an stripped executable from an empty fn main on x86_64-unknown-linux-gnu smaller than 252 kB. I expect I'll be fiddling mostly in <code>gimli</code> and <code>addr2line</code>, so as long as the the error handling project group isn't going to rewrite the existing backtrace implementations I shouldn't be impacted much by your work.</p>",
        "id": 251295905,
        "sender_full_name": "Ben Kimock",
        "timestamp": 1630357958
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120827\">Ben Kimock</span> <a href=\"#narrow/stream/219381-t-libs/topic/Backtrace.20generation.20code.20size.20optimization/near/251295905\">said</a>:</p>\n<blockquote>\n<p>Thanks for the offer <span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby</span> <br>\nIt sounds like the changes under discussion are all about what API should be provided, and what embedded developers would do with backtrace support. I'm interested in making an stripped executable from an empty fn main on x86_64-unknown-linux-gnu smaller than 252 kB. I expect I'll be fiddling mostly in <code>gimli</code> and <code>addr2line</code>, so as long as the the error handling project group isn't going to rewrite the existing backtrace implementations I shouldn't be impacted much by your work.</p>\n</blockquote>\n<p>is your stripped executable going to link <code>std</code>?</p>",
        "id": 251296002,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1630358014
    },
    {
        "content": "<p>actually either way it probably doesn't matter</p>",
        "id": 251296139,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1630358066
    },
    {
        "content": "<p>See <a href=\"https://github.com/Amanieu/mini-backtrace\">https://github.com/Amanieu/mini-backtrace</a> for a very stripped-down backtrace implementation. It just outputs a code address for each frame, all the post-processing for resolving the backtrace to a symbol &amp; line number is done off-line with <code>addr2line</code>.</p>",
        "id": 251330413,
        "sender_full_name": "Amanieu",
        "timestamp": 1630384275
    },
    {
        "content": "<p>Well, if the goal is for code size and only address is needed probably it's easier to use _Unwind_Backtrace: <a href=\"https://github.com/nbdd0121/unwind/blob/41e805c1cfa1e0a853007e670491448e458c15e3/src/panic_handler.rs#L58-L77\">https://github.com/nbdd0121/unwind/blob/41e805c1cfa1e0a853007e670491448e458c15e3/src/panic_handler.rs#L58-L77</a></p>\n<p>Because you can dynamically link to libgcc_s.</p>",
        "id": 251382844,
        "sender_full_name": "Gary Guo",
        "timestamp": 1630415973
    }
]