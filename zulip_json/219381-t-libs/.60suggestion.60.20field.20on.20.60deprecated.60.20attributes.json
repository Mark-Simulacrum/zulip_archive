[
    {
        "content": "<p><code>#[deprecated]</code> and <code>#[rustc_deprecated]</code> have a <code>suggestion</code> attribute whose only documentation is \"A text snippet used to completely replace any use of the deprecated item in an expression. This is currently unstable.\" Presumably this is something added for the aid of <code>cargo fix</code>, but I can't find any documentation about how this works, or a tracking issue or RFC for tracking its stability. Does anyone know more about this?</p>",
        "id": 229364100,
        "sender_full_name": "bstrie",
        "timestamp": 1615233391
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256342\">bstrie</span> <a href=\"#narrow/stream/219381-t-libs/topic/.60suggestion.60.20field.20on.20.60deprecated.60.20attributes/near/229364100\">said</a>:</p>\n<blockquote>\n<p><code>#[deprecated]</code> and <code>#[rustc_deprecated]</code> have a <code>suggestion</code> attribute whose only documentation is \"A text snippet used to completely replace any use of the deprecated item in an expression. This is currently unstable.\" Presumably this is something added for the aid of <code>cargo fix</code>, but I can't find any documentation about how this works, or a tracking issue or RFC for tracking its stability. Does anyone know more about this?</p>\n</blockquote>\n<p>I would expect it's related to <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.Diagnostic.html#method.span_suggestion\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/struct.Diagnostic.html#method.span_suggestion</a> somehow</p>",
        "id": 229364370,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615233498
    },
    {
        "content": "<p>judging by the documentation that looks a bit different: what you've linked looks to be intended to be shown to the user, which is already something that <code>rustc_deprecated</code> supports via the <code>reason</code> field. I feel like the <code>suggestion</code> field is intended for machine consumption; it's only used in a handful of places in the stdlib, but e.g. the deprecated <code>std::sync::atomic::ATOMIC_BOOL_INIT</code> has <code>suggestion = \"AtomicBool::new(false)\"</code>. if this were merely something that were to be shown to the user, one would think that this would not warrant its own field but would simply be appended on the <code>reason</code> field</p>",
        "id": 229365553,
        "sender_full_name": "bstrie",
        "timestamp": 1615234017
    },
    {
        "content": "<p>I could be wrong, of course, but that's why I'm trying to find a tracking issue or other docs :)</p>",
        "id": 229365612,
        "sender_full_name": "bstrie",
        "timestamp": 1615234053
    },
    {
        "content": "<p>the PR that added the suggestion field was <a href=\"https://github.com/rust-lang/rust/pull/58002\">https://github.com/rust-lang/rust/pull/58002</a> , without much useful information, at least one other PR <a href=\"https://github.com/rust-lang/rust/pull/59372\">https://github.com/rust-lang/rust/pull/59372</a> seems to suggest this benefits rustfix</p>",
        "id": 229366949,
        "sender_full_name": "bstrie",
        "timestamp": 1615234648
    },
    {
        "content": "<p>The <code>suggestion</code> I linked is used for rustfix</p>",
        "id": 229371476,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615236722
    },
    {
        "content": "<p>Well, rustfix and diagnostics</p>",
        "id": 229371587,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615236761
    },
    {
        "content": "<p>That's why it has an Applicability</p>",
        "id": 229371664,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1615236794
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> Both the <code>reason</code> and <code>suggestion</code> are shown to the user.</p>\n<div class=\"codehilite\"><pre><span></span><code>warning: use of deprecated associated function `core::str::&lt;impl str&gt;::trim_left`: superseded by `trim_start`\n --&gt; src/main.rs:5:16\n  |\n5 |     let _ = &quot;&quot;.trim_left();\n  |                ^^^^^^^^^ help: replace the use of the deprecated associated function: `trim_start`\n  |\n</code></pre></div>\n<p>The <code>suggestion</code> is machine-applicable, so that <code>cargo fix</code> can auto-apply it.  Many editors have \"fix-it\" buttons to be able to apply suggestions in the editor.</p>\n<p>This is sorta documented here: <a href=\"https://rustc-dev-guide.rust-lang.org/stability.html#rustc_deprecated\">https://rustc-dev-guide.rust-lang.org/stability.html#rustc_deprecated</a></p>\n<p>I don't think there are any plans or intent to stabilize that for <code>#[deprecated]</code>.</p>",
        "id": 229374590,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615237956
    },
    {
        "content": "<p>thanks, this confirms my suspicion that this only works when changing one identifier into another identifier, and not for anything more complex. ironically, the very first suggestion that inspired the addition of this field fails this test, and hence fails to apply properly with <code>cargo fix</code>: <a href=\"https://github.com/rust-lang/rust/blob/8f349be27815d43d462a32faeb270a22a68486b6/library/core/src/sync/atomic.rs#L268\">https://github.com/rust-lang/rust/blob/8f349be27815d43d462a32faeb270a22a68486b6/library/core/src/sync/atomic.rs#L268</a></p>",
        "id": 229375186,
        "sender_full_name": "bstrie",
        "timestamp": 1615238169
    },
    {
        "content": "<p>(the error message it gives is extremely confusing, claiming that <code>AtomicBool</code> is not in scope even if it is)</p>",
        "id": 229375293,
        "sender_full_name": "bstrie",
        "timestamp": 1615238216
    },
    {
        "content": "<p>Yea, that would be good to fix.  I also saw quite a number of <code>#[rustc_deprecated]</code> that are missing <code>suggestion</code> that could use it.</p>",
        "id": 229375521,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615238290
    }
]