[
    {
        "content": "<p>As discussed in the libs meeting just now, let's go through our open issues and label those that can be good starter issues (or any other labels that seem useful for getting them resolved): <a href=\"https://github.com/rust-lang/rust/issues?q=label%3At-libs+is%3Aissue+is%3Aopen\">https://github.com/rust-lang/rust/issues?q=label%3At-libs+is%3Aissue+is%3Aopen</a></p>",
        "id": 269465798,
        "sender_full_name": "Mara",
        "timestamp": 1643224513
    },
    {
        "content": "<p>I think I'd like to mark <a href=\"https://github.com/rust-lang/rust/issues/74189\">https://github.com/rust-lang/rust/issues/74189</a> as help wanted but not as good starting issue since it deals with questions about unsafety</p>",
        "id": 269465974,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643224568
    },
    {
        "content": "<p>marking <a href=\"https://github.com/rust-lang/rust/issues/74928\">https://github.com/rust-lang/rust/issues/74928</a> as help wanted and good first issue since I expect the implementation to be simple and the issue seems well documented</p>",
        "id": 269466705,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643224849
    },
    {
        "content": "<p>actually i guess we don't have a good first issue tag, just E-easy</p>",
        "id": 269466796,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643224893
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/75636\">https://github.com/rust-lang/rust/issues/75636</a> seems like either a E-medium or E-hard to me since they'll have to read some generated assembly, curious what other ppl think</p>",
        "id": 269467365,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643225121
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> I would consider \"need to read generated assembly\" by itself just E-medium.</p>",
        "id": 269467820,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643225304
    },
    {
        "content": "<p>However, if it ends up needing work on LLVM to improve codegen then it becomes E-hard, I think. :)</p>",
        "id": 269467920,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643225345
    },
    {
        "content": "<p>i suppose there's E-medium and E-hard solutions to that issue ^^</p>",
        "id": 269468388,
        "sender_full_name": "Mara",
        "timestamp": 1643225530
    },
    {
        "content": "<p>I think doing the analysis and starting to work on it is E-medium, and it may turn out that someone with an E-medium level of experience can figure out that parts of it need someone with an E-hard level of experience. :)</p>",
        "id": 269468474,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643225568
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/88762\">https://github.com/rust-lang/rust/issues/88762</a> seems E-easy and help wanted to me? It looks like there was a proposed fix, which was closed due to inactivity, and it just needs reviving?</p>",
        "id": 269468696,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643225653
    },
    {
        "content": "<p>Does my analysis for <a href=\"https://github.com/rust-lang/rust/issues/84118#issuecomment-1022540358\">https://github.com/rust-lang/rust/issues/84118#issuecomment-1022540358</a> sound right? If so then let's just close this issue.</p>",
        "id": 269470021,
        "sender_full_name": "Amanieu",
        "timestamp": 1643226192
    },
    {
        "content": "<p>I agree with your analysis. Go ahead and close it.</p>",
        "id": 269470184,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226266
    },
    {
        "content": "<p>SIGABRT is the normal way to make a process abort and dump core.</p>",
        "id": 269470243,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226294
    },
    {
        "content": "<p>Sometimes I see an issue with those green labels on stuff I am familiar with and could solve but then I'm not a starter either, so I'm not sure if I should leave them or not.</p>",
        "id": 269470482,
        "sender_full_name": "The 8472",
        "timestamp": 1643226393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> Can you clarify what you mean? Do you mean you see an E-xyz label and you think it's not accurate?</p>",
        "id": 269470559,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/269470482\">said</a>:</p>\n<blockquote>\n<p>Sometimes I see an issue with those green labels on stuff I am familiar with and could solve but then I'm not a starter either, so I'm not sure if I should leave them or not.</p>\n</blockquote>\n<p>you're on the review rotation right?</p>",
        "id": 269470597,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643226453
    },
    {
        "content": "<p>my recommendation would be to make sure there's nobody else you could help first then feel free to grab issues otherwise</p>",
        "id": 269470645,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643226475
    },
    {
        "content": "<p>I don't think so? I sometimes just grab issues that are easy enough to review.</p>",
        "id": 269470646,
        "sender_full_name": "The 8472",
        "timestamp": 1643226476
    },
    {
        "content": "<p>Or do you mean you see an E-help-wanted issue and you want to work on it, but you don't consider yourself a new developer so you're wondering if you should leave it for someone else?</p>",
        "id": 269470648,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226477
    },
    {
        "content": "<p>is libs-contributors not tied to being on the review rotation?</p>",
        "id": 269470717,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643226497
    },
    {
        "content": "<p>feel free to solve E-easy issues too. solving issues is useful in general :)</p>",
        "id": 269470719,
        "sender_full_name": "Mara",
        "timestamp": 1643226498
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/269470717\">said</a>:</p>\n<blockquote>\n<p>is libs-contributors not tied to being on the review rotation?</p>\n</blockquote>\n<p>depends what you mean with 'rotation'</p>",
        "id": 269470752,
        "sender_full_name": "Mara",
        "timestamp": 1643226509
    },
    {
        "content": "<p>the rotation is who high-five assigns to. that's the high five rotation, which is separately configured in the high-five repository</p>",
        "id": 269470804,
        "sender_full_name": "Mara",
        "timestamp": 1643226528
    },
    {
        "content": "<p>ah</p>",
        "id": 269470825,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1643226535
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>  the latter</p>",
        "id": 269470831,
        "sender_full_name": "The 8472",
        "timestamp": 1643226537
    },
    {
        "content": "<p>but libs-contributors has r+ rights, and anyone is welcome to review things under the conditions described here: <a href=\"https://std-dev-guide.rust-lang.org/reviewing.html\">https://std-dev-guide.rust-lang.org/reviewing.html</a></p>",
        "id": 269470895,
        "sender_full_name": "Mara",
        "timestamp": 1643226571
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/269470831\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span>  the latter</p>\n</blockquote>\n<p>In general I'd say that unless someone has already claimed it, it's not unreasonable to work on something you're interested in. You don't need to leave it for a more novice user.</p>",
        "id": 269471011,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226607
    },
    {
        "content": "<p>(And if someone <em>has</em> claimed it, you could see if they are still working on it, if they need help, or if they're not working on it anymore and you could take it on.)</p>",
        "id": 269471096,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226647
    },
    {
        "content": "<p>Is there a standard label for \"this bug needs changes in some other code that isn't Rust\"?</p>",
        "id": 269471786,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226925
    },
    {
        "content": "<p>For instance, I think <a href=\"https://github.com/rust-lang/rust/issues/80406\">https://github.com/rust-lang/rust/issues/80406</a> needs a patch to valgrind.</p>",
        "id": 269471815,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643226938
    },
    {
        "content": "<p>If an external bug has been filed it could be O-blocked?</p>",
        "id": 269472358,
        "sender_full_name": "The 8472",
        "timestamp": 1643227178
    },
    {
        "content": "<p>Honestly, we should probably just file a valgrind issue and then close the Rust bug.</p>",
        "id": 269472690,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1643227268
    },
    {
        "content": "<p>gonna do more issue tagging today.</p>",
        "id": 271175880,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644347115
    },
    {
        "content": "<p>wondering if it might be a good idea to make sure every libs / libs-api issue has an <code>A-xxx</code> area tag associated with it. My reasoning for wanting this is to that we can then pick specific areas we want to direct more attention to and go through and more carefully tag those issues and submit them to TWIR's call for participation section</p>",
        "id": 271176064,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644347196
    },
    {
        "content": "<p>make sure they have mentor instructions / clear paths forward and all that jazz, then get people excited and involved in cleaning up that area, and hopefully in the process build up new longterm expertise on areas of the libs that are currently undermaintained</p>",
        "id": 271176145,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644347249
    },
    {
        "content": "<p>curious what others think</p>",
        "id": 271176176,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644347263
    },
    {
        "content": "<p>Do we currently believe that those <code>A-</code>tags are getting attention already, or is this just so that we can direct attention to a specific area?</p>",
        "id": 271176857,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644347632
    },
    {
        "content": "<p>Either way, it seems <em>useful</em> to add the <code>A-</code> tags; just a question of relative priority.</p>",
        "id": 271176934,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644347655
    },
    {
        "content": "<p>Also, are you talking about issues as in bugs, or issues as in tracking issues?</p>",
        "id": 271176976,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644347686
    },
    {
        "content": "<p>For tracking issues, I'd personally place a higher priority on the <code>S-tracking-*</code> labels for tracking issues, to make the future of the feature clear.</p>",
        "id": 271176983,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644347689
    },
    {
        "content": "<p>But for bugs, an area may be useful.</p>",
        "id": 271176994,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644347696
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271176857\">said</a>:</p>\n<blockquote>\n<p>Do we currently believe that those <code>A-</code>tags are getting attention already, or is this just so that we can direct attention to a specific area?</p>\n</blockquote>\n<p>i don't know if they're getting attention but my goal is to make it so we can use them ourselves</p>",
        "id": 271178140,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348289
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 271178156,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644348299
    },
    {
        "content": "<p>Seems reasonable to me.</p>",
        "id": 271178168,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644348307
    },
    {
        "content": "<p>like, lets say we want to put more attention into libtest, it would be useful if every related issue was already tagged so we can easily filter by A-libtest to really dig into those issues to make sure they have the appropriate E-help-wanted and difficulty tags and mentor instructions where appropriate</p>",
        "id": 271178236,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348345
    },
    {
        "content": "<p>and i think we already do this a lot of the time</p>",
        "id": 271178357,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348388
    },
    {
        "content": "<p>already finding quite a few <code>t-libs</code> issues with no associated A- tags</p>",
        "id": 271178735,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348553
    },
    {
        "content": "<p>though I don't think we necessarily have an A- tag for every single case</p>",
        "id": 271179058,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348701
    },
    {
        "content": "<p>for example: I cant figure out what tag to use for <a href=\"https://github.com/rust-lang/rust/issues/93586\">https://github.com/rust-lang/rust/issues/93586</a></p>",
        "id": 271179076,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348709
    },
    {
        "content": "<p>doesn't matter in that case since someone already claimed it tho, so hopefully fine</p>",
        "id": 271179166,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348739
    },
    {
        "content": "<p>O-windows since it's only on windows paths?</p>",
        "id": 271179258,
        "sender_full_name": "The 8472",
        "timestamp": 1644348786
    },
    {
        "content": "<p>good idea, though that still ends up being a diff tag group so it still breaks my proposed heuristic of \"all issues should have an A- tag\"</p>",
        "id": 271179338,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348822
    },
    {
        "content": "<p>which is fine I think</p>",
        "id": 271179366,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348836
    },
    {
        "content": "<p>A-io could be extended to cover paths too</p>",
        "id": 271179458,
        "sender_full_name": "The 8472",
        "timestamp": 1644348866
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 271179726,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644348985
    },
    {
        "content": "<p>tagged <a href=\"https://github.com/rust-lang/rust/issues/92958\">https://github.com/rust-lang/rust/issues/92958</a> as A-slice, A-codegen, E-help-wanted, and E-hard</p>",
        "id": 271179962,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349113
    },
    {
        "content": "<p>not sure if the optimization would actually be hard or not but I figure better to err on the side of caution</p>",
        "id": 271179996,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349134
    },
    {
        "content": "<p>eyyy, an issue that can be closed: <a href=\"https://github.com/rust-lang/rust/issues/89261\">https://github.com/rust-lang/rust/issues/89261</a></p>",
        "id": 271180228,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271179458\">said</a>:</p>\n<blockquote>\n<p>A-io could be extended to cover paths too</p>\n</blockquote>\n<p>oh actually, I just noticed <code>A-resolve: Path resolution</code>, I feel like that's probably the right area for this one</p>",
        "id": 271180539,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349435
    },
    {
        "content": "<p>Isn't that for item paths in the compiler?</p>",
        "id": 271180602,
        "sender_full_name": "The 8472",
        "timestamp": 1644349454
    },
    {
        "content": "<p>is it?</p>",
        "id": 271180606,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349459
    },
    {
        "content": "<p>shit</p>",
        "id": 271180611,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349461
    },
    {
        "content": "<p>it is</p>",
        "id": 271180656,
        "sender_full_name": "The 8472",
        "timestamp": 1644349493
    },
    {
        "content": "<p>okay, undone, sad day</p>",
        "id": 271180688,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349506
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/91913\">https://github.com/rust-lang/rust/issues/91913</a> feels like it begs for a new <code>A-fallible-allocation</code> tag</p>",
        "id": 271180752,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349546
    },
    {
        "content": "<p>Updated the A-io label description.</p>",
        "id": 271180839,
        "sender_full_name": "The 8472",
        "timestamp": 1644349574
    },
    {
        "content": "<p>blessed, ty <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span></p>",
        "id": 271180897,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349611
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/91417\">https://github.com/rust-lang/rust/issues/91417</a> marking this as I-prioritize as requested, and A-time + E-help-wanted</p>",
        "id": 271180970,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349662
    },
    {
        "content": "<p>no idea what difficulty to put, leaving it blank for now, I figure we can always come back later and add those tags in one pass</p>",
        "id": 271181046,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644349685
    },
    {
        "content": "<p>marking <a href=\"https://github.com/rust-lang/rust/issues/91226\">https://github.com/rust-lang/rust/issues/91226</a> as A-unicode and I-needs-decision</p>",
        "id": 271182714,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644350450
    },
    {
        "content": "<p>I think this is an issue we could close but we probably need to discuss it as a team and write up an explanation in doing so</p>",
        "id": 271182791,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644350483
    },
    {
        "content": "<p>I do agree that we should close it, but we need a clear explanation.</p>",
        "id": 271182955,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644350542
    },
    {
        "content": "<p>Also, OsString is a pain to deal with, and if we're going to push people towards <code>args_os</code> and <code>vars_os</code>, we may want to make OsString more usable.</p>",
        "id": 271183387,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644350734
    },
    {
        "content": "<p>yea, and I think its important our justification isn't just \"people have a responsibility to read the documentation\", which is not entirely wrong but I think our goal should always be to make our APIs resistant to misuse and we always provide clear reasoning whenever we choose to deprioritize fixing a footgun.</p>",
        "id": 271183656,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644350859
    },
    {
        "content": "<p>can't find an appropriate area for <a href=\"https://github.com/rust-lang/rust/issues/88716\">https://github.com/rust-lang/rust/issues/88716</a></p>",
        "id": 271184154,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351094
    },
    {
        "content": "<p>nor: <a href=\"https://github.com/rust-lang/rust/issues/87766\">https://github.com/rust-lang/rust/issues/87766</a></p>",
        "id": 271184329,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351167
    },
    {
        "content": "<p>i guess maybe F- tags might be best?</p>",
        "id": 271184405,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351204
    },
    {
        "content": "<p>There isn't one for threads or processes</p>",
        "id": 271184421,
        "sender_full_name": "The 8472",
        "timestamp": 1644351209
    },
    {
        "content": "<p>Yeah, a general <code>A-command</code> or similar for the Command API might be good.</p>",
        "id": 271184548,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351271
    },
    {
        "content": "<p>mmm, yea, and the F- ones are all for specific features</p>",
        "id": 271184559,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351277
    },
    {
        "content": "<p>And <code>A-threads</code> for thread APIs.</p>",
        "id": 271184563,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351279
    },
    {
        "content": "<p>but the one i linked to is about organizing the feature flags in rust-lang/rust</p>",
        "id": 271184597,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351299
    },
    {
        "content": "<p>For 87766, I wonder if we might want an A- tag for libs internals or similar?</p>",
        "id": 271184663,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351333
    },
    {
        "content": "<p>A-technical-debt</p>",
        "id": 271184749,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351367
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 271184756,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351371
    },
    {
        "content": "<p>That sounds perfect.</p>",
        "id": 271184772,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351380
    },
    {
        "content": "<p>marking <a href=\"https://github.com/rust-lang/rust/issues/87707\">https://github.com/rust-lang/rust/issues/87707</a> as e-help-wanted, e-easy, F-track-caller</p>",
        "id": 271185002,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351500
    },
    {
        "content": "<p>I just kicked off rfcbot on <a href=\"https://github.com/rust-lang/rust/issues/80967\">https://github.com/rust-lang/rust/issues/80967</a> ; here's hoping that we can get some degree of consensus.</p>",
        "id": 271185547,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351745
    },
    {
        "content": "<p>Created A-thread and A-process</p>",
        "id": 271185570,
        "sender_full_name": "The 8472",
        "timestamp": 1644351760
    },
    {
        "content": "<p>tyty, <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> can you also create the <code>A-technical-debt</code> one as well?</p>",
        "id": 271185620,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351785
    },
    {
        "content": "<p>sure</p>",
        "id": 271185639,
        "sender_full_name": "The 8472",
        "timestamp": 1644351794
    },
    {
        "content": "<p>im currently reading through <a href=\"https://github.com/rust-lang/rust/issues/87249\">https://github.com/rust-lang/rust/issues/87249</a></p>",
        "id": 271185653,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351799
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271185002\">said</a>:</p>\n<blockquote>\n<p>marking <a href=\"https://github.com/rust-lang/rust/issues/87707\">https://github.com/rust-lang/rust/issues/87707</a> as e-help-wanted, e-easy, F-track-caller</p>\n</blockquote>\n<p>I agree with that one being E-help-wanted, but to confirm something, do we have any benchmarks in the perf suite that cover mutex performance? If not, I think it should be E-medium at least, because someone would need to add such a benchmark.</p>",
        "id": 271185678,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351815
    },
    {
        "content": "<p>no idea</p>",
        "id": 271185699,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351829
    },
    {
        "content": "<p>I suppose Rust compilation has <em>some</em> use of mutexes...</p>",
        "id": 271185711,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351836
    },
    {
        "content": "<blockquote>\n<p>A-technical-debt Area: Internal cleanup work</p>\n</blockquote>",
        "id": 271185763,
        "sender_full_name": "The 8472",
        "timestamp": 1644351848
    },
    {
        "content": "<p>also, is this putting track caller on mutex or on sync::Once?</p>",
        "id": 271185784,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351858
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271185653\">said</a>:</p>\n<blockquote>\n<p>im currently reading through <a href=\"https://github.com/rust-lang/rust/issues/87249\">https://github.com/rust-lang/rust/issues/87249</a></p>\n</blockquote>\n<p>Do we have an A- tag for \"performance optimization\"?</p>",
        "id": 271185790,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351862
    },
    {
        "content": "<p>I-slow</p>",
        "id": 271185800,
        "sender_full_name": "The 8472",
        "timestamp": 1644351871
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271185784\">said</a>:</p>\n<blockquote>\n<p>also, is this putting track caller on mutex or on sync::Once?</p>\n</blockquote>\n<p>Oh, right, sorry.</p>",
        "id": 271185837,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351891
    },
    {
        "content": "<p>not that I can see</p>",
        "id": 271185896,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351919
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I think that one can just be A-string</p>",
        "id": 271185981,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351962
    },
    {
        "content": "<p>even tho its kinda straddling the boundary</p>",
        "id": 271186019,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644351974
    },
    {
        "content": "<p>Seems reasonable. A-str I-slow would be fine.</p>",
        "id": 271186044,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644351994
    },
    {
        "content": "<p>tagged that one as E-help-wanted as well but no difficulty</p>",
        "id": 271186805,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352382
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/87067\">https://github.com/rust-lang/rust/issues/87067</a> seems like one that will involve updating docs more than the code for our partialeq/etc impls</p>",
        "id": 271187274,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352650
    },
    {
        "content": "<p>but it also looks like something that we probably want to discuss as a team</p>",
        "id": 271187315,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352665
    },
    {
        "content": "<p>gonna mark A-docs and nominate it for libs discussion</p>",
        "id": 271187340,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352677
    },
    {
        "content": "<p>Not sure how to tag <a href=\"https://github.com/rust-lang/rust/issues/85261\">#85261</a>. Seems to be caused by allocations in thread-locals after fork.</p>",
        "id": 271187762,
        "sender_full_name": "The 8472",
        "timestamp": 1644352864
    },
    {
        "content": "<p>A-allocations?</p>",
        "id": 271187797,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352885
    },
    {
        "content": "<p>wait damn</p>",
        "id": 271187806,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352891
    },
    {
        "content": "<p>no we only have A-allocators</p>",
        "id": 271187814,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352894
    },
    {
        "content": "<p>Well, it's that allocations are forbidden after fork due to posix rules</p>",
        "id": 271187920,
        "sender_full_name": "The 8472",
        "timestamp": 1644352930
    },
    {
        "content": "<p>async-signal-safety</p>",
        "id": 271187938,
        "sender_full_name": "The 8472",
        "timestamp": 1644352939
    },
    {
        "content": "<p>eh, A-process should be fine. fork is just one wart of that :D</p>",
        "id": 271187970,
        "sender_full_name": "The 8472",
        "timestamp": 1644352956
    },
    {
        "content": "<p>lol</p>",
        "id": 271187987,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352964
    },
    {
        "content": "<p>sg</p>",
        "id": 271187992,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644352967
    },
    {
        "content": "<p>marking <a href=\"https://github.com/rust-lang/rust/issues/80787\">https://github.com/rust-lang/rust/issues/80787</a> as A-error-handling</p>",
        "id": 271188435,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353186
    },
    {
        "content": "<p>not gonna mark it as help-wanted yet since its not immediately obvious to me how best to resolve the issue</p>",
        "id": 271188526,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353239
    },
    {
        "content": "<p>will look into it later</p>",
        "id": 271188534,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353243
    },
    {
        "content": "<blockquote>\n<p>Ultimately nothing building on top can do anything nice unless we find a way to format as {:#?}, so we really need to find a way to enable this as an option.</p>\n</blockquote>\n<p>Isn't it a formatting thing? A-fmt?</p>",
        "id": 271188669,
        "sender_full_name": "The 8472",
        "timestamp": 1644353301
    },
    {
        "content": "<p>ah good call, I'll dual tag it</p>",
        "id": 271188715,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353328
    },
    {
        "content": "<p>marked <a href=\"https://github.com/rust-lang/rust/issues/80406\">https://github.com/rust-lang/rust/issues/80406</a> as A-io, E-help-wanted, E-easy</p>",
        "id": 271188757,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353352
    },
    {
        "content": "<p>seems like we know we want to surpress the warnings in valgrind which I'm assuming is easy to do but I don't actually know</p>",
        "id": 271188829,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353389
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"120989\">@nnethercote</span> as resident valgrind expert</p>",
        "id": 271188905,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353409
    },
    {
        "content": "<p>marking <a href=\"https://github.com/rust-lang/rust/issues/80392\">https://github.com/rust-lang/rust/issues/80392</a> as E-help-wanted and A-concurrency</p>",
        "id": 271189054,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353498
    },
    {
        "content": "<p>I went through pages 3 and 4 and added a bunch of A- labels</p>",
        "id": 271189216,
        "sender_full_name": "The 8472",
        "timestamp": 1644353568
    },
    {
        "content": "<p>I think this is also an E-medium but I want to add a mentor notes comment showing an example of somewhere else in std where we intentionally control the variance of a type so ppl know how</p>",
        "id": 271189227,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353572
    },
    {
        "content": "<p>k taking a break from issue tagging for a bit, ty for all the help <span class=\"user-mention\" data-user-id=\"330154\">@The 8472</span> !</p>",
        "id": 271189621,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644353764
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271188829\">said</a>:</p>\n<blockquote>\n<p>seems like we know we want to surpress the warnings in valgrind which I'm assuming is easy to do but I don't actually know</p>\n</blockquote>\n<p>Adding a suppression is easy, the question is <em>where</em> to add it. Generally if you have a leak in your own project that you want Valgrind to ignore you create your own suppression file and always run <code>valgrind --suppressions=my-suppressions-file</code>, e.g. on your CI setup or whatever.</p>",
        "id": 271198210,
        "sender_full_name": "nnethercote",
        "timestamp": 1644357975
    },
    {
        "content": "<p>Valgrind also has its own built-in suppression file for system libraries. Sounds like <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> is suggesting we add the suppression to that? If this is something that would affect many/every Rust binary, that seems reasonable</p>",
        "id": 271198290,
        "sender_full_name": "nnethercote",
        "timestamp": 1644358025
    },
    {
        "content": "<p>If the latter is needed I'm happy to get it into Valgrind. The only hard part is getting the stack trace right. Suppressions have wildcarding mechanisms, and sometimes it takes a few tries to work out which parts of the stack trace are always present and which might disappear</p>",
        "id": 271201605,
        "sender_full_name": "nnethercote",
        "timestamp": 1644359665
    },
    {
        "content": "<p>I've commented in the issue. It's not as bad as it sounds at first. It's not a true leak, and it's only going to be a problem for people who are very particular about ensuring there is no unfreed memory at termination in their programs. I've assigned it to myself because the fix will be on the Valgrind side.</p>",
        "id": 271207441,
        "sender_full_name": "nnethercote",
        "timestamp": 1644362844
    },
    {
        "content": "<p>awesome, thank you!</p>",
        "id": 271207498,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1644362873
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120989\">nnethercote</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271198290\">said</a>:</p>\n<blockquote>\n<p>Valgrind also has its own built-in suppression file for system libraries. Sounds like <span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> is suggesting we add the suppression to that? If this is something that would affect many/every Rust binary, that seems reasonable</p>\n</blockquote>\n<p>Yeah, that's what I'm suggesting. Just as valgrind ships suppressions for the C library, it makes sense for it to ship suppressions for the Rust standard library.</p>",
        "id": 271228609,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644379683
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/271176857\">said</a>:</p>\n<blockquote>\n<p>Do we currently believe that those <code>A-</code>tags are getting attention already, or is this just so that we can direct attention to a specific area?</p>\n</blockquote>\n<p>I regularly stalk all the <code>A-simd</code> tags so yes.</p>",
        "id": 272612237,
        "sender_full_name": "Jubilee",
        "timestamp": 1645386572
    },
    {
        "content": "<p>Not libs, but I'll often look through A-rustdoc-json for what to direct my attention towards</p>",
        "id": 272629979,
        "sender_full_name": "CraftSpider",
        "timestamp": 1645406521
    },
    {
        "content": "<p>I used A-asm to see if I could find any open issues that would be cause for blocking <code>asm!</code> stability (e.g. <a href=\"https://github.com/rust-lang/rust/issues/36718#issuecomment-1029227398\">https://github.com/rust-lang/rust/issues/36718#issuecomment-1029227398</a> )</p>",
        "id": 272697549,
        "sender_full_name": "bstrie",
        "timestamp": 1645454911
    },
    {
        "content": "<p>doing some more issue tagging and submitting them to TWIR for the CFP section this time as well</p>",
        "id": 273580672,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646099231
    },
    {
        "content": "<p>first issue is <a href=\"https://github.com/rust-lang/rust/issues/94454\">https://github.com/rust-lang/rust/issues/94454</a>, tagged this one as E-easy, E-help-wanted and E-docs</p>",
        "id": 273580678,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646099242
    },
    {
        "content": "<p>it boils down to just removing a comment from the source, should be a real easy one for someone to get their feet wet with</p>",
        "id": 273580698,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646099263
    },
    {
        "content": "<p>this one seems like it could be a good one but I'm not actually sure how we should go about fixing it: <a href=\"https://github.com/rust-lang/rust/issues/93055\">https://github.com/rust-lang/rust/issues/93055</a></p>",
        "id": 273581141,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646099639
    },
    {
        "content": "<p>I know we have precident for the second option they listed, which is how we do output capturing on tests already</p>",
        "id": 273581193,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646099667
    },
    {
        "content": "<p>but I don't know how one would mock \"windows console mode\"</p>",
        "id": 273581232,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646099715
    },
    {
        "content": "<p>doing so seems like the ideal option but I'd want a clear path on how to do so before asking someone to try to do it</p>",
        "id": 273581241,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646099735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I'm surprised you marked <a href=\"https://github.com/rust-lang/rust/issues/91979\">https://github.com/rust-lang/rust/issues/91979</a> as E-medium</p>",
        "id": 273582335,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646100725
    },
    {
        "content": "<p>I don't understand the code in question or the suggested fix well enough to know how well it would work, but my general understanding of dylibs in rust is that unloading them is unsound for more reasons than just this thread local. I remember something about persisting <code>&amp;'static</code> references to unloaded data being an issue as well. I feel like we'd probably need to get a more clear picture on what we're trying to solve here before we can confidently tag the difficulty. (Though if this is just me missing something please lmk, happy to be wrong in this case)</p>",
        "id": 273582401,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646100826
    },
    {
        "content": "<p>will pass these issues to people who may be looking for one <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 273585920,
        "sender_full_name": "DPC",
        "timestamp": 1646104430
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> I have <em>no</em> idea what circumstances led me to mark that E-medium, but it definitely isn't.</p>",
        "id": 273593875,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1646112858
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120823\">DPC</span> <a href=\"#narrow/stream/219381-t-libs/topic/Open.20issues/near/273585920\">said</a>:</p>\n<blockquote>\n<p>will pass these issues to people who may be looking for one :)</p>\n</blockquote>\n<p>i also submitted it to TWIR already</p>",
        "id": 273593985,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646112994
    },
    {
        "content": "<p>so don't feel too much pressure to get ppl to take them right away, they should have a lot of eyes on them</p>",
        "id": 273594010,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646113029
    },
    {
        "content": "<p>I think that issue is probably <a href=\"https://github.com/rust-lang/rust/issues/88737\">https://github.com/rust-lang/rust/issues/88737</a>. I think while it's true ideally we would have more of a concrete story here, in practice we are misusing one of the apis in a way that will lead to a concrete crash in some cases (one of them is described there, but I'm not certain its the only case). That said, maybe I'm mistaken and it's something else</p>",
        "id": 273595061,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1646114306
    },
    {
        "content": "<p>It seems like it though. It wouldn't be hard to fix this.</p>",
        "id": 273595067,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1646114316
    },
    {
        "content": "<p>I outline the fix in the description.</p>",
        "id": 273595075,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1646114338
    },
    {
        "content": "<p>(That said, it's probably always a bad idea for people to call dlclose. I don't think people should do it most of the time, it's very dangerous, and generally much more unsafe than a normal \"release resources\" call)</p>",
        "id": 273595371,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1646114473
    }
]