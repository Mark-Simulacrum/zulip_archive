[
    {
        "content": "<p>I think it was mentioned somewhere that the libs team might discuss the policy around potential breakage for OS specific code? I mean, in terms of having a rough policy about the extent to which it is acceptable to introduce changes that could (at least hypothetically) break someone's code. Sorry if this has already been explained elsewhere. I'm struggling to find if outcomes of t-libs meetings are documented anywhere or not.</p>\n<p>I have a particular interest in this because there are a number of issues with <code>sys/windows</code> and I'd prefer not to annoy the whole libs team every single time I make a PR. They seem rather busy already!</p>",
        "id": 243082550,
        "sender_full_name": "Chris Denton",
        "timestamp": 1623962939
    },
    {
        "content": "<p>we don't really have a clear policy here. i think it'd be quite hard to have a general policy for these things.<br>\ndo you have some examples of things you might want to break?</p>",
        "id": 243097502,
        "sender_full_name": "Mara",
        "timestamp": 1623971624
    },
    {
        "content": "<p>That's fine. I was more looking for some general idea of what sort of behaviour is guaranteed vs. what can be changed. So that I don't waste everybody's time. For example, command line argument parsing. In ~2008 Microsoft slightly tweaked the algorithm they use for parsing arguments but Rust still uses the older algorithm. Another example is file path handling. Rust currently has very limited understanding of different types of Windows paths and so it would be great if Rust could handle them more intelligently. But doing so might result in changing behaviour, even if the previous behaviour was wrong.</p>",
        "id": 243125058,
        "sender_full_name": "Chris Denton",
        "timestamp": 1624001338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260325\">@Chris Denton</span> both of those sound like changes we should make, although carefully.</p>",
        "id": 243131145,
        "sender_full_name": "Mara",
        "timestamp": 1624005273
    },
    {
        "content": "<p>just like your environment variable fix (thanks for that :) )</p>",
        "id": 243131216,
        "sender_full_name": "Mara",
        "timestamp": 1624005323
    },
    {
        "content": "<p>Thanks! I guess I'm just feeling overly nervous at the moment.</p>",
        "id": 243132602,
        "sender_full_name": "Chris Denton",
        "timestamp": 1624006077
    },
    {
        "content": "<p>if you open an issue on the <code>libs-team</code> repository describing all the changes you want to make, we can discuss your plans in a meeting and make a decision about which changes might be a problem, and which would be fine to make.<br>\n(this is not a requirement, but might save you a lot of time implementing some change, and gives us a good overview of where you're going with your PRs)</p>",
        "id": 243143758,
        "sender_full_name": "Mara",
        "timestamp": 1624013241
    }
]