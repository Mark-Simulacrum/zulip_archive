[
    {
        "content": "<p>Does anyone know if we have any tests for std APIs that test specific properties on an API and then share inputs across multiple tests?</p>\n<p>For context, I've run into two different PRs today where I wanted to write a proptest style test encoding an invariant that should be upheld which I could then plug into some existing set of useful inputs, doesn't necessarily have to be randomly generated or anything</p>",
        "id": 258633074,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1634858574
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/87339#discussion_r717773993\">https://github.com/rust-lang/rust/pull/87339#discussion_r717773993</a> is the first example, where I'd like to be able to write that assert as a test and then plug in a bunch of different Paths without having to copy interesting examples of paths from other tests</p>",
        "id": 258633129,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1634858617
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/83233#issuecomment-949069431\">https://github.com/rust-lang/rust/pull/83233#issuecomment-949069431</a> is the other one, where I wanted to be able to test different combinations of M and N</p>",
        "id": 258633268,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1634858682
    },
    {
        "content": "<p>tho honestly in retrospect the second one is a bad example</p>",
        "id": 258633274,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1634858691
    },
    {
        "content": "<p>the log10 integer tests brute-force the value domain of some smaller integer types</p>",
        "id": 258680237,
        "sender_full_name": "The 8472",
        "timestamp": 1634891860
    },
    {
        "content": "<p>but they don't share inputs across tests</p>",
        "id": 258680334,
        "sender_full_name": "The 8472",
        "timestamp": 1634891901
    },
    {
        "content": "<blockquote>\n<p>I'd like to be able to write that assert as a test and then plug in a bunch of different Paths without having to copy interesting examples of paths from other tests</p>\n</blockquote>\n<p>Doesn't <code>path/tests.rs</code> already do that? a macro driving several tests invoked with many different parameters.</p>",
        "id": 258680913,
        "sender_full_name": "The 8472",
        "timestamp": 1634892239
    }
]