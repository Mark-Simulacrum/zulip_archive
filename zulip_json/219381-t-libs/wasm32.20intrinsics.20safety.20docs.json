[
    {
        "content": "<p>While working on the release blog post, I noticed that at least some of the unsafe wasm32 intrinsics don't seem to have any \"safety\" documentation for what their requirements are. </p>\n<p>I seem to vaguely recall that <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> mentioned somewhere during the introduction that those may not yet be well known so it's hard for us to represent them in the docs. It seems like a key feature of the docs though if we're going to encourage folks to use these APIs! In practice it's probably true that for the most part the preconditions aren't too interesting (e.g., \"pointer is valid for reading\"). On the other hand, I'm not sure if wasm32 requires the address to be aligned for reading 128-bit vectors or not.</p>",
        "id": 246167348,
        "sender_full_name": "simulacrum",
        "timestamp": 1626390508
    },
    {
        "content": "<p>(One example: <a href=\"https://doc.rust-lang.org/nightly/core/arch/wasm32/fn.v128_load.html\">https://doc.rust-lang.org/nightly/core/arch/wasm32/fn.v128_load.html</a>)</p>",
        "id": 246167364,
        "sender_full_name": "simulacrum",
        "timestamp": 1626390527
    },
    {
        "content": "<p>Oh this is a good point! I'll make updates to the docs tomorrow about the safety conditions, but you're right in that it's basically \"this is a valid pointer with alignment of 1\", so there's nothing too special, still should doucment of course</p>",
        "id": 246167479,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626390613
    },
    {
        "content": "<p>these live in stdarch, right? </p>\n<p><span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> if you could try and cherry-pick and arrange for an easy bump on the beta branch, that'd be good too -- these are shipping in 1.54 (in 2 weeks) so would be great to get the safety docs immediately out there. not the end of the world if they're just on nightly though!</p>",
        "id": 246167570,
        "sender_full_name": "simulacrum",
        "timestamp": 1626390707
    },
    {
        "content": "<p>(bumping submodules in beta backports can be a bit of a hassle when dealing with the upstream repo otherwise)</p>",
        "id": 246167629,
        "sender_full_name": "simulacrum",
        "timestamp": 1626390732
    },
    {
        "content": "<p>Indeed yeah they live in stdarch</p>",
        "id": 246167640,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626390745
    },
    {
        "content": "<p>I don't think I have the rights still to make branches and stuff so for a backport someone else may have to help</p>",
        "id": 246167670,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626390773
    },
    {
        "content": "<p>But personally I don't see any need to backport a doc update</p>",
        "id": 246167685,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626390785
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/rust-lang/stdarch/pull/1184\">https://github.com/rust-lang/stdarch/pull/1184</a> for this</p>",
        "id": 246234385,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626447544
    },
    {
        "content": "<p>Note that stdarch master doesn't compile yet because of a change in the location of the <code>asm!</code> macro.</p>",
        "id": 246252668,
        "sender_full_name": "Amanieu",
        "timestamp": 1626456020
    }
]