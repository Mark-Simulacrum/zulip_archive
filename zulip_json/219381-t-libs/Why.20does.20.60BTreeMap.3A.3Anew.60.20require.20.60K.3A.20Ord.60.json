[
    {
        "content": "<p>It seems to me that the <code>K: Ord</code> bound is unnecessary here and would interact with const_fn_trait_bound  in an undesirable way (see <a href=\"https://github.com/rust-lang/rust/issues/87375\">#87375</a>)</p>",
        "id": 249320180,
        "sender_full_name": "Gary Guo",
        "timestamp": 1628827409
    },
    {
        "content": "<p>Are you just proposing that new doesn't need to be able to keep elements ordered because it doesn't insert any elements?</p>",
        "id": 249348173,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1628853619
    },
    {
        "content": "<p>The situation is analogous to <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.new\"><code>HashMap::new</code></a> not having a <code>K:</code><a href=\"https://doc.rust-lang.org/std/cmp/trait.Eq.html\"><code>Eq</code></a><code>+</code><a href=\"https://doc.rust-lang.org/std/hash/trait.Hash.html\"><code>Hash</code></a> bound. IMO, the <code>K: Ord</code> bound should be removed.</p>",
        "id": 249349930,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1628855101
    },
    {
        "content": "<p>There seems to be a lot of discussion on this in <a href=\"https://github.com/rust-lang/rust/issues/79245\">#79245</a></p>",
        "id": 249351491,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1628856172
    },
    {
        "content": "<p>Seems that in that discussion the only reason for not removing bound on \"BTreeMap::new\" is \"hashbrown has some issue before\"</p>",
        "id": 249364341,
        "sender_full_name": "Gary Guo",
        "timestamp": 1628863568
    },
    {
        "content": "<p>But I fail to see why it'd be problematic for BTreeMap.</p>",
        "id": 249364379,
        "sender_full_name": "Gary Guo",
        "timestamp": 1628863588
    },
    {
        "content": "<p>To give another point of context / comparison: <code>Haskell</code>’s <a href=\"https://hackage.haskell.org/package/containers-0.6.5.1/docs/Data-Map-Lazy.html#g:1\"><code>Map</code></a> and <a href=\"https://hackage.haskell.org/package/containers-0.6.5.1/docs/Data-Set.html#g:1\"><code>Set</code></a> datatypes (which are <a href=\"https://hackage.haskell.org/package/base-4.15.0.0/docs/Data-Ord.html\"><code>Ord</code></a> based data structures using search trees, similar to <code>BTree(Map|Set)</code> in Rust) <a href=\"https://hackage.haskell.org/package/containers-0.6.5.1/docs/Data-Map-Lazy.html#g:2\">do offer constructors for empty and even single-element maps/sets without an <code>Ord</code> bound on the key type</a>.</p>",
        "id": 249375362,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1628868740
    },
    {
        "content": "<p>I’m also having a hard time figuring out the exact reason why the PR <a href=\"https://github.com/rust-lang/rust/issues/79245\">#79245</a> removed so many of its changes, including the one that would’ve eliminated the <code>K: Ord</code> bound for <code>::new</code>. Admitted, I only skimmed some of the comments. But maybe there was additional off-thread discussion? Anyways, it probably wouldn’t hurt to just open a new PR and get the relevant feedback there if there <em>really are</em> any good reasons against the change.</p>\n<p>Notably, the argument that removing the bound helps with <code>const</code> usage is one that I couldn’t find at all in <a href=\"https://github.com/rust-lang/rust/issues/79245\">#79245</a>. In particular, as <code>const</code> is particularly common as a requirement for initializing static variables, this seems like a very relevant/strong argument in favor of the removal of the bound.</p>",
        "id": 249375953,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1628869013
    },
    {
        "content": "<p>For anyone else reading this topic, note that there’s now a <a href=\"https://github.com/rust-lang/rust/issues/88040\">#88040</a> opened by <span class=\"user-mention silent\" data-user-id=\"303710\">Gary Guo</span> that removes the <code>Ord</code> bound from <code>BTree(Map|Set)::(new|default)</code></p>",
        "id": 249515523,
        "sender_full_name": "Frank Steffahn",
        "timestamp": 1629037693
    }
]