[
    {
        "content": "<p>Would this be an appropriate place to request review on a couple of libc PRs?<br>\n<a href=\"https://github.com/rust-lang/libc/pull/1858\">https://github.com/rust-lang/libc/pull/1858</a><br>\n<a href=\"https://github.com/rust-lang/libc/pull/1859\">https://github.com/rust-lang/libc/pull/1859</a></p>",
        "id": 206416968,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597016603
    },
    {
        "content": "<p>(I have a crate that would like to use those, and I'd rather not have to reimplement them within the crate.)</p>",
        "id": 206416979,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1597016630
    },
    {
        "content": "<p>Anyone around who could take a look at a PR for the libc crate? I'm trying to unblock some changes to rust-lang/rust that depend on it.<br>\n<a href=\"https://github.com/rust-lang/libc/pull/1899\">https://github.com/rust-lang/libc/pull/1899</a></p>",
        "id": 211217269,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601007966
    },
    {
        "content": "<p>I sure didn't know you could <code>cfg</code> <em>inside</em> of the link attribute.</p>",
        "id": 211217358,
        "sender_full_name": "Lokathor",
        "timestamp": 1601008086
    },
    {
        "content": "<p>It's important, because if you put it <em>outside</em> the link attribute it doesn't work.</p>",
        "id": 211217379,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601008138
    },
    {
        "content": "<p>I suppose I always just assumed you'd cfg_attr, or put a cfg on the module holding the extern block</p>",
        "id": 211217633,
        "sender_full_name": "Lokathor",
        "timestamp": 1601008466
    },
    {
        "content": "<p>I tried that, and the net result was those libraries not getting passed to the linker at all.</p>",
        "id": 211217732,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601008635
    },
    {
        "content": "<p>there's two hard problems in programming, and linking is one of them.</p>",
        "id": 211217745,
        "sender_full_name": "Lokathor",
        "timestamp": 1601008662
    },
    {
        "content": "<p>I think the <code>crt-static</code> feature isn't known until link-time, which is why this hackery is needed.</p>",
        "id": 211286040,
        "sender_full_name": "Amanieu",
        "timestamp": 1601053717
    },
    {
        "content": "<p>Ah, that's a good point; it's a target feature, so it can be decided when you invoke the compiler, which is long after std has been built.</p>",
        "id": 211292050,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1601056716
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/219381-t-libs/topic/libc.20PR.20review/near/211217732\">said</a>:</p>\n<blockquote>\n<p>I tried that, and the net result was those libraries not getting passed to the linker at all.</p>\n</blockquote>\n<p>interesting, that sounds like somewhat of a footgun, something I'd probably file a bug over.</p>",
        "id": 211383417,
        "sender_full_name": "nagisa",
        "timestamp": 1601155563
    },
    {
        "content": "<p>There is issue opened by <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> <a href=\"https://github.com/rust-lang/rust/issues/72510\">https://github.com/rust-lang/rust/issues/72510</a></p>",
        "id": 211386170,
        "sender_full_name": "mati865",
        "timestamp": 1601160653
    },
    {
        "content": "<p>To make it clear, <code>cfg</code> inside <code>#[link(...)]</code> is resolved at the when linking the library specified by <code>#[link(...)]</code> while \"typical\" <code>cfg</code> is resolved at the build time.</p>",
        "id": 211386461,
        "sender_full_name": "mati865",
        "timestamp": 1601161147
    }
]