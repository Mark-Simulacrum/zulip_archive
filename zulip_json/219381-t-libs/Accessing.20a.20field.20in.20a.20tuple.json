[
    {
        "content": "<p>If I have a <code>Ty::Tuple</code> the only way I can see accessing a field is to call <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/struct.TyS.html#method.tuple_fields\"><code>tuple_fields</code></a> and then do <code>nth(index)</code>. </p>\n<p>By understanding is that since this is a DoubleEndedIterator accessing a specific field would cost <code>O(n)</code></p>\n<p>I'm wondering if there is a method to do this more effeciently? (possibly O(1)/random access)</p>",
        "id": 216979167,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605603823
    },
    {
        "content": "<p>hmm this is an interesting question (and maybe more for <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a> than <a class=\"stream\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler\">#t-compiler</a>)</p>",
        "id": 217003243,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605620536
    },
    {
        "content": "<p>if you look at <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_middle/ty/sty.rs.html#2180\">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_middle/ty/sty.rs.html#2180</a> it's calling <code>.iter().map()</code> on a <code>Vec</code></p>",
        "id": 217003264,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605620552
    },
    {
        "content": "<p>now <code>Vec.iter()</code> overrides <code>.nth()</code> to be more efficient, since it has random access to the elements: <a href=\"https://doc.rust-lang.org/src/core/slice/mod.rs.html#3785\">https://doc.rust-lang.org/src/core/slice/mod.rs.html#3785</a></p>",
        "id": 217003351,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605620607
    },
    {
        "content": "<p>however <code>.map()</code> doesn't know anything about the internal iterator, so it doesn't override <code>.nth()</code>, even for <code>DoubleEndedIterator</code>s: <a href=\"https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#836\">https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#836</a></p>",
        "id": 217003440,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605620646
    },
    {
        "content": "<p>I wonder if there's a way to 'forward' that knowledge from Iter to Map</p>",
        "id": 217003474,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605620666
    },
    {
        "content": "<p>in the short term, you can do this by calling nth() before calling map:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">Tuple</span><span class=\"p\">(</span><span class=\"n\">substs</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">substs</span><span class=\"p\">.</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">nth</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">field</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">.</span><span class=\"n\">expect_ty</span><span class=\"p\">()),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"o\">!</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 217003610,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605620749
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> could you move this to <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a> ?</p>",
        "id": 217003707,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605620788
    },
    {
        "content": "<p>I can, in a few minutes - we have TrustedRandomAccess or something like that for this purpose</p>",
        "id": 217003839,
        "sender_full_name": "simulacrum",
        "timestamp": 1605620862
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp/topic/Accessing.20a.20field.20in.20a.20tuple\">#t-compiler/help &gt; Accessing a field in a tuple</a> by <span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span></p>",
        "id": 217003849,
        "sender_full_name": "Notification Bot",
        "timestamp": 1605620873
    },
    {
        "content": "<p>ok - so maybe <code>Map</code> should be taking greater advantage of <code>TrustedRandomAccess</code>?</p>",
        "id": 217004323,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605621122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> I think the place to modify is <a href=\"https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#932\">https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#932</a>, are you interested in a PR?</p>\n<p>on nightly I do see <code>SourceIter</code> for this but I'm not sure if it's related or not</p>",
        "id": 217004638,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605621297
    },
    {
        "content": "<p>but in any case, map cannot do this</p>",
        "id": 217004646,
        "sender_full_name": "simulacrum",
        "timestamp": 1605621306
    },
    {
        "content": "<p>map().nth() means to iterate N places, and the closure could have side effects</p>",
        "id": 217004672,
        "sender_full_name": "simulacrum",
        "timestamp": 1605621319
    },
    {
        "content": "<p>ahh, because it's FnMut, not Fn</p>",
        "id": 217004784,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605621371
    },
    {
        "content": "<p>that's unfortunate</p>",
        "id": 217004795,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605621373
    },
    {
        "content": "<p>Well, no, that's not important</p>",
        "id": 217004806,
        "sender_full_name": "simulacrum",
        "timestamp": 1605621380
    },
    {
        "content": "<p>we would expect N println!s, if the closure was <code>|x| { println!{\"{:?}\", x); x }</code></p>",
        "id": 217004847,
        "sender_full_name": "simulacrum",
        "timestamp": 1605621410
    },
    {
        "content": "<p>ah hmm I see, it's true here too - there could be a panic in <code>expect_ty</code></p>",
        "id": 217005319,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605621675
    },
    {
        "content": "<p>maybe the fix should be in rustc, have a <code>nth_tuple_field()</code> that's more efficient than O(n)</p>",
        "id": 217005455,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605621733
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/219381-t-libs/topic/Accessing.20a.20field.20in.20a.20tuple/near/217005455\">said</a>:</p>\n<blockquote>\n<p>maybe the fix should be in rustc, have a <code>nth_tuple_field()</code> that's more efficient than O(n)</p>\n</blockquote>\n<p>Yeah that's what I was thinking, maybe move this back to <code>t-compiler</code> or <code>t-compiler/help</code></p>",
        "id": 217047592,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605639904
    },
    {
        "content": "<p>how would that be better than tuple_fields().nth(5).whatever ?</p>",
        "id": 217047827,
        "sender_full_name": "simulacrum",
        "timestamp": 1605640026
    },
    {
        "content": "<p>I was picturing it more like in rustic we know it isn't necessarily is a side effect to just do <code>substs.iter().nth(index).map(|field| field.expect_ty())</code>. So basically what <span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span>  suggested</p>",
        "id": 217048711,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605640502
    },
    {
        "content": "<p>And <code>nth()</code> here is on RandomAccess Iterator so it's quicker</p>",
        "id": 217048938,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605640606
    },
    {
        "content": "<p>Shouldn't the adapters generally override the default traitethod impl by calling their inner iterator's impl of the method?</p>",
        "id": 217049378,
        "sender_full_name": "Lokathor",
        "timestamp": 1605640813
    },
    {
        "content": "<p>Yes, but as mentioned, <code>map(f).nth(n)</code> doesn't call the inner <code>nth</code> because <code>f</code> might have side effects on all of the items</p>",
        "id": 217049671,
        "sender_full_name": "cuviper",
        "timestamp": 1605640960
    },
    {
        "content": "<p>see also <a href=\"https://github.com/rust-lang/rust/issues/73069\">https://github.com/rust-lang/rust/issues/73069</a></p>",
        "id": 217049788,
        "sender_full_name": "cuviper",
        "timestamp": 1605641019
    },
    {
        "content": "<p>and this one had a T-libs discussion: <a href=\"https://github.com/rust-lang/rust/pull/28125\">https://github.com/rust-lang/rust/pull/28125</a></p>",
        "id": 217050061,
        "sender_full_name": "cuviper",
        "timestamp": 1605641160
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/219381-t-libs/topic/Accessing.20a.20field.20in.20a.20tuple/near/217049671\">said</a>:</p>\n<blockquote>\n<p>Yes, but as mentioned, <code>map(f).nth(n)</code> doesn't call the inner <code>nth</code> because <code>f</code> might have side effects on all of the items</p>\n</blockquote>\n<p>I flipped the <code>nth()</code> and <code>map</code> around</p>",
        "id": 217050267,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605641261
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281950\">@Aman Arora</span> yes, <code>map</code> afterward is fine, that's <code>Option::map</code>. I was responding to <span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span>'s question about adapters</p>",
        "id": 217050467,
        "sender_full_name": "cuviper",
        "timestamp": 1605641378
    },
    {
        "content": "<p>Ah, sorry</p>",
        "id": 217050588,
        "sender_full_name": "Aman Arora",
        "timestamp": 1605641419
    },
    {
        "content": "<p>Oops, yeah, order matters big in this one</p>",
        "id": 217050698,
        "sender_full_name": "Lokathor",
        "timestamp": 1605641471
    }
]