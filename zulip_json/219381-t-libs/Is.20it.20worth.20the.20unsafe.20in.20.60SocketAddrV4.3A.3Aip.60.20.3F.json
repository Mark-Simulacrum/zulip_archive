[
    {
        "content": "<p>Ipv4Addr is a Copy type. There is no need to return the reference of Ipv4Addr.<br>\nEspecially when SockAddv4 doesn't contain Ipv4Addr.<br>\nNow we left with unsafe cast when I change the underlined type of Ipv4Addr.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">ip</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">Ipv4Addr</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">&amp;*</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inner</span><span class=\"p\">.</span><span class=\"n\">sin_addr</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">c</span>::<span class=\"n\">in_addr</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">Ipv4Addr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>Now when I change the underlined type of Ipv4Addr by a wrapper struct around u32.<br>\nI don't know if the code above is safe and correct.<br>\nHow do I resolve this?</p>",
        "id": 205785831,
        "sender_full_name": "lzutao",
        "timestamp": 1596456383
    },
    {
        "content": "<p>The wrapper struct I talked about is in <a href=\"https://github.com/rust-lang/rust/issues/75110\">#75110</a></p>",
        "id": 205807783,
        "sender_full_name": "lzutao",
        "timestamp": 1596468342
    },
    {
        "content": "<p>(we since talked about the cast in <a href=\"https://github.com/rust-lang/rust/issues/75110\">#75110</a>, it should be fine now)</p>",
        "id": 206173775,
        "sender_full_name": "RalfJ",
        "timestamp": 1596735933
    },
    {
        "content": "<p>and it is too late to discuss whether this should really return a reference, that type is stable now...</p>",
        "id": 206173802,
        "sender_full_name": "RalfJ",
        "timestamp": 1596735951
    }
]