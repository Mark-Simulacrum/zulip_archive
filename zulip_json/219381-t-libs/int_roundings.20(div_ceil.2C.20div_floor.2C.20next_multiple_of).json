[
    {
        "content": "<p>A while back, we added <code>div_floor</code>, <code>div_ceil</code>, <code>next_multiple_of</code>, etc, under the <code>int_roundings</code> feature. We then ended up renaming them temporarily to add an <code>unstable_</code> prefix, due to a conflict with methods of the same name in <code>num_integer</code> causing widespread breakage.</p>",
        "id": 273280156,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645820676
    },
    {
        "content": "<p>We now have a stable release (1.59) where we have a future compatibility warning about using those methods.</p>",
        "id": 273280182,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645820694
    },
    {
        "content": "<p>Given that, could we rename the methods back and aim to stabilize them in 1.61?</p>",
        "id": 273280201,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645820707
    },
    {
        "content": "<p>Is there any other blocker to stabilization?</p>",
        "id": 273280213,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645820716
    },
    {
        "content": "<p>does that warning give any estimate of a timeline?</p>",
        "id": 273280335,
        "sender_full_name": "cuviper",
        "timestamp": 1645820777
    },
    {
        "content": "<p>(distro hat on) RHEL is updating Rust every 6 months, which is ~4-5 rust releases. So a RHEL customer would never even see a future warning that only spanned 2 releases, unless we got lucky on that alignment</p>",
        "id": 273280457,
        "sender_full_name": "cuviper",
        "timestamp": 1645820846
    },
    {
        "content": "<p>(in this instance, we'd be unlucky, as we're shipping 1.58 in RHEL 8.6 and 9.0, so 8.7/9.1 will probably get 1.62 or 1.63)</p>",
        "id": 273280744,
        "sender_full_name": "cuviper",
        "timestamp": 1645821000
    },
    {
        "content": "<p>I would also expect most crates to get updated by then, so that RHEL customer would miss both the warning and the breakage the warning seeks to prevent.</p>",
        "id": 273281302,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645821275
    },
    {
        "content": "<p>hopefully. I don't have good data on that...</p>",
        "id": 273281420,
        "sender_full_name": "cuviper",
        "timestamp": 1645821349
    },
    {
        "content": "<p>The largest sources of breakage are already fixed.</p>",
        "id": 273281570,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645821427
    },
    {
        "content": "<p>num-bigint in particular.</p>",
        "id": 273281582,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645821434
    },
    {
        "content": "<p>Also, the breakage was exacerbated by having an unstable function that conflicted with the stable function, so people encountering the conflict couldn't just switch to the standard library function. If we rename and stabilize the functions, people encountering the conflict can switch to the standard library function.</p>",
        "id": 273281940,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645821505
    },
    {
        "content": "<p>If we rename back, it seems like we would want to immediately stabilize alongside that, right? Otherwise you (still) can't migrate and the breakage hasn't actually gone away?</p>\n<p>Or did num-integer get fixed somehow?</p>",
        "id": 273281968,
        "sender_full_name": "simulacrum",
        "timestamp": 1645821511
    },
    {
        "content": "<p>Oh, heh, you just said that.</p>",
        "id": 273282025,
        "sender_full_name": "simulacrum",
        "timestamp": 1645821524
    },
    {
        "content": "<p>Yeah, that's what I'm proposing to do. I'd be happy to send the PR doing exactly that.</p>",
        "id": 273283006,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645822005
    },
    {
        "content": "<p>I just realized that we <em>did</em> rename back, some time ago: <a href=\"https://github.com/rust-lang/rust/commit/41f70f3491f02533819ab6584328ffd266ce02f2\">41f70f3491f02533819ab6584328ffd266ce02f2</a></p>",
        "id": 273305760,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1645837163
    },
    {
        "content": "<p>ah, thanks to <a href=\"https://github.com/rust-lang/rust/issues/90329\">#90329</a></p>",
        "id": 273306119,
        "sender_full_name": "cuviper",
        "timestamp": 1645837376
    }
]