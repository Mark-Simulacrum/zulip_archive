[
    {
        "content": "<p>Hey, long ago I've noticed that <a href=\"https://github.com/rust-lang/rust/issues/74465\">https://github.com/rust-lang/rust/issues/74465</a> is being stuck. I am wondering, if there are some quick things I can do to unblock it?</p>\n<p>I feel that it is mostly blocked on implementation work (current impl blocker: <a href=\"https://github.com/rust-lang/rust/issues/74465\">https://github.com/rust-lang/rust/issues/74465</a>), but I don't have capacity for moving the work forward myself :(</p>",
        "id": 246212762,
        "sender_full_name": "matklad",
        "timestamp": 1626436045
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> you posted the same link twice -- what's the blocker?</p>",
        "id": 246222901,
        "sender_full_name": "cuviper",
        "timestamp": 1626442354
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/74465#issuecomment-783294558\">https://github.com/rust-lang/rust/issues/74465#issuecomment-783294558</a></p>\n<p>Some renames basically</p>",
        "id": 246224116,
        "sender_full_name": "matklad",
        "timestamp": 1626442949
    },
    {
        "content": "<p>we can nominate the issue for discussion during our next T-libs-API meeting and hopefully work through the naming questions</p>",
        "id": 246239572,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1626449871
    },
    {
        "content": "<p>I'm happy to do these renames. But surely the next step is really to accept the RFC at <a href=\"https://github.com/rust-lang/rfcs/pull/2788\">https://github.com/rust-lang/rfcs/pull/2788</a> first?</p>",
        "id": 246271424,
        "sender_full_name": "bstrie",
        "timestamp": 1626465677
    },
    {
        "content": "<p>(And if it's up for discussion next week I'll hold off on a rename PR until that happens)</p>",
        "id": 246271468,
        "sender_full_name": "bstrie",
        "timestamp": 1626465698
    },
    {
        "content": "<p>yea, probably best to wait until the meeting before making any changes incase we decide against them</p>",
        "id": 246274325,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1626467318
    },
    {
        "content": "<p>and also dang, didn't realize that the RFC hadn't been accepted</p>",
        "id": 246274348,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1626467328
    },
    {
        "content": "<p>Note that RFC wasn’t accepted because we wanted to have impl in std before accepting the rfc</p>",
        "id": 246278255,
        "sender_full_name": "matklad",
        "timestamp": 1626469283
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/pull/2788#issuecomment-558227921\">https://github.com/rust-lang/rfcs/pull/2788#issuecomment-558227921</a></p>",
        "id": 246278771,
        "sender_full_name": "matklad",
        "timestamp": 1626469404
    },
    {
        "content": "<p>FWIW on the names, I know people want to break up the <code>sync</code> module, but it’d be great if the migration path to std was this.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">once_cell</span>::<span class=\"n\">sync</span>::<span class=\"n\">Lazy</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">sync</span>::<span class=\"n\">Lazy</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 246278803,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1626469412
    },
    {
        "content": "<p>Peanut gallery comment on the names: These feel like the first time people will use them is in <code>static</code>, so it'd be nice if the one with the shorter name was the one that worked there.  Especially since using the thread-safe one accidentally is just a minor perf hit, not something that makes it fail compilation.</p>\n<p>I worry that with the current nightly names the normal experience will be <code>static FOO: Lazy&lt;...&gt;</code>, get an error, go \"oh yeah\", and change to <code>SyncLazy</code>.</p>",
        "id": 246628866,
        "sender_full_name": "scottmcm",
        "timestamp": 1626804912
    },
    {
        "content": "<p>yeah, SyncLazy is superfluous unless we have an UnsynchLazy too. Otherwise just call it Lazy.</p>",
        "id": 246630814,
        "sender_full_name": "Lokathor",
        "timestamp": 1626805898
    },
    {
        "content": "<p>we do have that, there's both a Sync and !Sync version, and only the former can be used in statics</p>",
        "id": 246635544,
        "sender_full_name": "bstrie",
        "timestamp": 1626808334
    },
    {
        "content": "<p>the tension here is that the Sync version feels more generally useful, but the unSync one feels more theoretically fundamental, and only one of them can just be called <code>Lazy</code>, unless you put them in separate modules and call them both <code>Lazy</code> which seems confusing in its own right</p>",
        "id": 246635823,
        "sender_full_name": "bstrie",
        "timestamp": 1626808505
    },
    {
        "content": "<p>and I tend to agree that the sync one should be favored with the <code>Lazy</code> name, but that leaves the question of what to name the other one, since we have no established pattern of naming something like this</p>",
        "id": 246636192,
        "sender_full_name": "bstrie",
        "timestamp": 1626808683
    },
    {
        "content": "<p>from what I can tell the proposed rename is to make the unsync version <code>std::cell::LazyCell</code> and the sync version <code>std::lazy::Lazy</code>. this piggybacks on the idea that <code>std::cell</code> is for \"things that aren't Sync\"</p>",
        "id": 246636594,
        "sender_full_name": "bstrie",
        "timestamp": 1626808906
    },
    {
        "content": "<p>this seems like a pretty reasonable organization to me</p>",
        "id": 246636752,
        "sender_full_name": "bstrie",
        "timestamp": 1626808982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> just curious, did this completely fell off your radar, or are there some blockers?</p>",
        "id": 263135332,
        "sender_full_name": "matklad",
        "timestamp": 1638274454
    },
    {
        "content": "<p>Yes sorry, dealing with family issues has consumed the last few months of my attention. As of last week that should all be resolved, so I'm eager to get back up to speed and pick up the loose threads I left hanging</p>",
        "id": 263155965,
        "sender_full_name": "bstrie",
        "timestamp": 1638284011
    },
    {
        "content": "<p>Maybe I am disproportionately excited, but I think that, having been considering the question for about three years, I've found objectively perfect color for this particular bike shed. </p>\n<p>We should stabilize <code>OnceCell&lt;T&gt;: !Sync</code> and <code>OnceLock&lt;T&gt;: Sync</code></p>\n<p><a href=\"https://github.com/rust-lang/rust/issues/74465#issuecomment-1095665053\">https://github.com/rust-lang/rust/issues/74465#issuecomment-1095665053</a></p>\n<p>Sorry for the double notification, but this feels like a major breakthrough for me personally, at least in this very minute <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 278629495,
        "sender_full_name": "matklad",
        "timestamp": 1649719053
    }
]