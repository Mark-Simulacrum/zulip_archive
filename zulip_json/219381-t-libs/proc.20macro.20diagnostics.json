[
    {
        "content": "<p>Not a big priority of mine, but I just remembered that <a href=\"https://github.com/rust-lang/rust/issues/83363\">#83363</a> has been open for just shy of a year. <a href=\"https://github.com/rust-lang/rust/issues/54140#issuecomment-944798181\">Jane had a concern</a> about the proposed design for proc macro diagnostics, namely the ability to emit diagnostics without a primary span. This was raised back in October and hasn't had any activity since. How do people feel about this? I think proc macro diagnostics is one of the more influential things we could lang.</p>",
        "id": 274288923,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646548253
    },
    {
        "content": "<p>I think as long as it's trivial to get the span of the macro call site, we don't need a spanless diagnostics API, as for those few cases, the extra effort of getting the call site span explicitly is not an issue</p>",
        "id": 274295648,
        "sender_full_name": "oli",
        "timestamp": 1646558806
    },
    {
        "content": "<p>That said, I am still in favour of starting with a much simpler API similar to how we started with a proc macro API that only supported a <code>to_string</code> operation. We could have a diagnostic builder similar to the one in rustc, but only expose a <code>from_json_str_with_placeholders</code> API that wants a diagnostic json string (with span placeholders instead of file/line info). Then user space can write APIs in crates and we can figure out whether to stabilize a better API from there</p>",
        "id": 274295966,
        "sender_full_name": "oli",
        "timestamp": 1646559263
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"119235\">@David Tolnay</span>, who seconded the proposed API. It doesn't look like Sergio is active on Zulip nowadays. What use case might there be for diagnostics <em>without</em> a primary span? Is it used in the compiler/stdlib anywhere?</p>",
        "id": 274319586,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646589712
    }
]