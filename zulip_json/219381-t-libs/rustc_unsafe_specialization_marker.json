[
    {
        "content": "<p>(not sure if this is libs or lang)</p>\n<p>I see the <code>#[rustc_unsafe_specialization_marker]</code> that is intended to be used with <code>min_specialization</code>. I am looking into revamping the <code>Step</code> trait (see <a href=\"https://github.com/rust-lang/rust/issues/83772\">#83772</a>), and believe this marker is appropriate to be used. My question is how are these marker traits used to implement specialization? I'm only familiar with the \"normal\" specialization, so to speak.</p>",
        "id": 239046189,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621237249
    },
    {
        "content": "<p>Alright, think I figured it out â€” just going to try some code to make sure. Should I only use the attribute if I run into a compile error? I'm not familiar with the specifics of when it's needed.</p>",
        "id": 239049959,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621239492
    },
    {
        "content": "<p>If possible a <code>#[rustc_specialization_trait] unsafe trait SpecMarker {}</code> should be used instead. You can then do <code>impl InternalSpecHelperTrait for I where I: Iterator + SpecMarker</code>.</p>",
        "id": 239056515,
        "sender_full_name": "The 8472",
        "timestamp": 1621242940
    },
    {
        "content": "<p>The difference being what is known to be sound I presume?</p>",
        "id": 239056708,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621243066
    },
    {
        "content": "<p>Yes, it's sort of explained here: <a href=\"https://doc.rust-lang.org/stable/nightly-rustc/rustc_typeck/impl_wf_check/min_specialization/index.html#rustc_unsafe_specialization_marker\">https://doc.rust-lang.org/stable/nightly-rustc/rustc_typeck/impl_wf_check/min_specialization/index.html#rustc_unsafe_specialization_marker</a></p>\n<p>I think the unsafe one is only needed if your marker has a supertrait, which isn't necessary for most specializations.</p>\n<p>Also, your PR mentions trustedlen... trustedlen already is a specialization trait, that's not enough to rely on as marker?</p>",
        "id": 239057187,
        "sender_full_name": "The 8472",
        "timestamp": 1621243284
    },
    {
        "content": "<p>Ah, step itself isn't an iterator</p>",
        "id": 239057338,
        "sender_full_name": "The 8472",
        "timestamp": 1621243354
    },
    {
        "content": "<p>Yeah I'm doing a PR to change the <code>Step</code> trait, modelling the change after <code>TrustedLen</code>. I speculatively swapped out the attribute with success, so presumably it's fine. Thank you!</p>",
        "id": 239154272,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621283061
    }
]