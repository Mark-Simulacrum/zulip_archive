[
    {
        "content": "<p>I wonder if the libs team has any opinion on the name of the raw_ref macros, currently <code>std::ptr::raw_mut!</code> and <code>std::ptr_raw_const!</code>? See <a href=\"https://github.com/rust-lang/rust/issues/73394#issuecomment-751342185\">here</a> for why I am not a big fan of the current names.</p>",
        "id": 221212080,
        "sender_full_name": "RalfJ",
        "timestamp": 1609334754
    },
    {
        "content": "<p>not libs team but <code>const_raw!</code> does seem better than <code>raw_const!</code>. neither are great though. i think people will be confused by the <code>const</code> in the name (i know i was at first, despite writing lots of unsafe code).</p>",
        "id": 221212353,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1609335022
    },
    {
        "content": "<p>also, i assume you mean something other than <code>const_mut!</code> in that github issue you've linked? perhaps <code>mut_raw!</code>/<code>raw_mut!</code>? not sure, but <code>const_mut!</code> just seems wrong</p>",
        "id": 221212458,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1609335136
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209168\">Thom Chiovoloni</span> <a href=\"#narrow/stream/219381-t-libs/topic/raw_ref.20macros/near/221212458\">said</a>:</p>\n<blockquote>\n<p>also, i assume you mean something other than <code>const_mut!</code> in that github issue you've linked? perhaps <code>mut_raw!</code>/<code>raw_mut!</code>? not sure, but <code>const_mut!</code> just seems wrong</p>\n</blockquote>\n<p>d'oh, what was I thinking...</p>",
        "id": 221284720,
        "sender_full_name": "RalfJ",
        "timestamp": 1609414534
    },
    {
        "content": "<p>yeah I mean <code>std::ptr::mut_raw!</code>, mirroring the proposed <code>std::ptr::const_raw!</code></p>",
        "id": 221284721,
        "sender_full_name": "RalfJ",
        "timestamp": 1609414539
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209168\">Thom Chiovoloni</span> <a href=\"#narrow/stream/219381-t-libs/topic/raw_ref.20macros/near/221212353\">said</a>:</p>\n<blockquote>\n<p>not libs team but <code>const_raw!</code> does seem better than <code>raw_const!</code>. neither are great though. i think people will be confused by the <code>const</code> in the name (i know i was at first, despite writing lots of unsafe code).</p>\n</blockquote>\n<p>Do you see any way to avoid the <code>const</code> though? The type is spelled <code>*const T</code>, after all...</p>",
        "id": 221285160,
        "sender_full_name": "RalfJ",
        "timestamp": 1609415197
    },
    {
        "content": "<p>I guess the other alternative would be <code>std::ptr::raw!</code> and <code>std::ptr::raw_mut!</code>. Not sure I like that, though.</p>",
        "id": 221285181,
        "sender_full_name": "RalfJ",
        "timestamp": 1609415256
    },
    {
        "content": "<p>And these are kept together when alphabetically ordered</p>",
        "id": 221297713,
        "sender_full_name": "pachi",
        "timestamp": 1609429755
    },
    {
        "content": "<p>/me wonders why raw pointers ended up with \"const\" when references didn't.</p>",
        "id": 221299714,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1609431485
    },
    {
        "content": "<p>There was an RFC! <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0068-const-unsafe-pointers.md\">https://github.com/rust-lang/rfcs/blob/master/text/0068-const-unsafe-pointers.md</a></p>",
        "id": 221300787,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1609432449
    },
    {
        "content": "<p>Interesting!</p>",
        "id": 221301575,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1609433191
    },
    {
        "content": "<p>I guess another option would be just <code>ptr::const!</code> and <code>ptr::mut!</code> -- assuming \"ptr/pointer\" implies \"raw\" (which I often see people do)</p>",
        "id": 221407590,
        "sender_full_name": "RalfJ",
        "timestamp": 1609607010
    },
    {
        "content": "<p>or, if we want to ditch the idea of having the macros inside a module, <code>const_ptr!</code> and <code>mut_ptr!</code></p>",
        "id": 221407594,
        "sender_full_name": "RalfJ",
        "timestamp": 1609607024
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/219381-t-libs/topic/raw_ref.20macros/near/221407590\">said</a>:</p>\n<blockquote>\n<p>I guess another option would be just <code>ptr::const!</code> and <code>ptr::mut!</code> -- assuming \"ptr/pointer\" implies \"raw\" (which I often see people do)</p>\n</blockquote>\n<p>I would guess that it can't be those, though, as they're keywords.</p>",
        "id": 221409656,
        "sender_full_name": "scottmcm",
        "timestamp": 1609610079
    },
    {
        "content": "<p>ah, good point</p>",
        "id": 221410692,
        "sender_full_name": "RalfJ",
        "timestamp": 1609611542
    },
    {
        "content": "<p>As for <code>const_ptr!</code>, I think there's technically a naming guideline to not repeat module names.</p>\n<p>I don't know how fond of that people are these days, though.  I remember some musings that maybe it would have been better to have <code>fmt::FormatResult</code> instead of <code>fmt::Result</code>, for example.  And I think it's likely that there will soon be <code>array::ArrayVec</code>.</p>",
        "id": 221410967,
        "sender_full_name": "scottmcm",
        "timestamp": 1609611949
    },
    {
        "content": "<blockquote>\n<p>As for const_ptr!, I think there's technically a naming guideline to not repeat module names.</p>\n</blockquote>\n<p>it wouldn't be repeated if the macro lives in the crate root :D (like all current macros do)</p>",
        "id": 221411232,
        "sender_full_name": "RalfJ",
        "timestamp": 1609612224
    },
    {
        "content": "<p>hm, what about <code>ptr::const_addr_of!</code> and <code>ptr::mut_addr_of!</code>?</p>",
        "id": 221458293,
        "sender_full_name": "RalfJ",
        "timestamp": 1609690889
    },
    {
        "content": "<p>Stabilization PR with those last names I proposed is up: <a href=\"https://github.com/rust-lang/rust/pull/80886\">https://github.com/rust-lang/rust/pull/80886</a></p>",
        "id": 222242499,
        "sender_full_name": "RalfJ",
        "timestamp": 1610313344
    }
]