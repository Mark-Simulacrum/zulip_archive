[
    {
        "content": "<p>I recently discovered that <code>std::collections::Bound</code>, an enum that was supposed to have been deprecated in Rust 1.26, accidentally wasn't ever deprecated due to the manner of its deprecation: it was made into a re-export, and the re-export was given the <code>#[rustc_deprecated]</code> attribute, which silently doesn't do anything at all (<a href=\"https://github.com/rust-lang/rust/issues/30827\">https://github.com/rust-lang/rust/issues/30827</a>). I filed <a href=\"https://github.com/rust-lang/rust/pull/82122\">https://github.com/rust-lang/rust/pull/82122</a> to properly deprecate it by turning it into a type alias, which just landed, but it turns out that type aliases don't support importing enum variants via <code>use</code> (<a href=\"https://github.com/rust-lang/rust/issues/83248\">https://github.com/rust-lang/rust/issues/83248</a>), so this will break code that tries to do <code>use std::collections::Bound::*;</code>. this seems like quite a dilemma and I'm not sure what to do here. Either we accept the potential breakage, or we abandon the deprecation altogether until either one of the two issues is fixed (both involve invasive compiler changes that are out of my depth) and just live with having both <code>collections::Bound</code> and <code>ops::Bound</code>. should I submit a PR to revert? should we do a crater run?</p>",
        "id": 230789689,
        "sender_full_name": "bstrie",
        "timestamp": 1616026071
    },
    {
        "content": "<p>Just a quick grep through <a href=\"http://crates.io\">crates.io</a> shows about 27 packages importing a Bound variant.</p>",
        "id": 230794947,
        "sender_full_name": "Eric Huss",
        "timestamp": 1616029836
    },
    {
        "content": "<p>In the short term I think it should be reverted?</p>",
        "id": 230828827,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1616056774
    },
    {
        "content": "<p>I'm biased because quinn-proto is one of the crates you broke :)</p>",
        "id": 230828848,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1616056794
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> yes, can you send a PR to revert? thanks</p>\n<p>we should revert first, and then figure out how to fix this again without breakage</p>",
        "id": 230858314,
        "sender_full_name": "Mara",
        "timestamp": 1616072500
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"226095\">Dirkjan Ochtman</span> <a href=\"#narrow/stream/219381-t-libs/topic/unavoidable.20breakage.20when.20deprecating.20an.20enum.3F/near/230828848\">said</a>:</p>\n<blockquote>\n<p>I'm biased because quinn-proto is one of the crates you broke :)</p>\n</blockquote>\n<p>I'll be reverting it, but you should perhaps still take this chance to change it to use ops::Bound :)</p>",
        "id": 230902843,
        "sender_full_name": "bstrie",
        "timestamp": 1616087440
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/219381-t-libs/topic/unavoidable.20breakage.20when.20deprecating.20an.20enum.3F/near/230794947\">said</a>:</p>\n<blockquote>\n<p>Just a quick grep through <a href=\"http://crates.io\">crates.io</a> shows about 27 packages importing a Bound variant.</p>\n</blockquote>\n<p>what tool are you using to grep <a href=\"http://crates.io\">crates.io</a>? can I see the output of that command?</p>",
        "id": 230902972,
        "sender_full_name": "bstrie",
        "timestamp": 1616087487
    },
    {
        "content": "<p>I just use my editor or ripgrep.  I have a custom script for downloading all of the crates, but there are a bunch of mirroring tools out there.  This is just using a dumb regex that doesn't really handle all cases, just a cursory scan.</p>\n<p><a href=\"https://gist.github.com/ehuss/0e6bb640ac064bf7477b70ee8c7e5b6c\">https://gist.github.com/ehuss/0e6bb640ac064bf7477b70ee8c7e5b6c</a></p>",
        "id": 230903613,
        "sender_full_name": "Eric Huss",
        "timestamp": 1616087737
    },
    {
        "content": "<p>thanks, I'll think about submitting PRs to those to migrate. a sort of manual deprecation warning :P</p>",
        "id": 230904098,
        "sender_full_name": "bstrie",
        "timestamp": 1616087921
    },
    {
        "content": "<p>the good news is that, while <code>#[rustc_deprecated]</code> doesn't work on re-exports, <code>#[doc(hidden)]</code> does, so it's unlikely that uses of this in the wild will increase over time</p>",
        "id": 230905043,
        "sender_full_name": "bstrie",
        "timestamp": 1616088249
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/219381-t-libs/topic/unavoidable.20breakage.20when.20deprecating.20an.20enum.3F/near/230858314\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"256342\">bstrie</span> yes, can you send a PR to revert? thanks</p>\n<p>we should revert first, and then figure out how to fix this again without breakage</p>\n</blockquote>\n<p>reversion PR up at <a href=\"https://github.com/rust-lang/rust/pull/83269\">https://github.com/rust-lang/rust/pull/83269</a></p>",
        "id": 230911844,
        "sender_full_name": "bstrie",
        "timestamp": 1616090672
    },
    {
        "content": "<p>thanks!</p>",
        "id": 230912177,
        "sender_full_name": "Mara",
        "timestamp": 1616090781
    },
    {
        "content": "<p>ok, I've sent PRs to all the projects that <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> pointed out, maybe sometime in the future we'll see if this can be pursued further. at least eddyb seems to think that it wouldn't be insurmountably difficult to just get <code>#[rustc_deprecated]</code> working on re-exports, which would obviate the issue altogether</p>",
        "id": 230944473,
        "sender_full_name": "bstrie",
        "timestamp": 1616104944
    }
]