[
    {
        "content": "<p>It would be nice to have a simple trait, <code>Takeable</code> in <code>core</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Takeable</span>: <span class=\"nb\">Default</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">take</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">core</span>::<span class=\"n\">mem</span>::<span class=\"n\">take</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>That could be implemented on all the collections, e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Takeable</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 211179506,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976069
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> thought this had been proposed before but wasn't sure if it had gone anywhere</p>",
        "id": 211179547,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976094
    },
    {
        "content": "<p>considering that <code>Takeable</code> has a bound on <code>Default</code>, what's the advantage over using <code>mem::take</code> directly here?</p>",
        "id": 211179645,
        "sender_full_name": "lcnr",
        "timestamp": 1600976154
    },
    {
        "content": "<p>It's shorter and you don't need to import <code>core::mem</code> :)</p>",
        "id": 211179703,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976171
    },
    {
        "content": "<p>It's just for \"ergonomics\"</p>",
        "id": 211179718,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976179
    },
    {
        "content": "<p>Plus it would make it easier to find in docs and it would be consistent with <code>Option::take</code></p>",
        "id": 211179750,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976203
    },
    {
        "content": "<p>Someone proposed adding <code>take()</code> to <code>Default</code> in <a href=\"https://github.com/rust-lang/rust/issues/76633\">#76633</a>, but people thought there would be churn because of <code>Default</code>'s wide use</p>",
        "id": 211179865,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976270
    },
    {
        "content": "<p>This would avoid that because it would not be auto-implemented</p>",
        "id": 211179886,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976282
    },
    {
        "content": "<p>but it requires to not be part of prelude in this case</p>",
        "id": 211179985,
        "sender_full_name": "lcnr",
        "timestamp": 1600976343
    },
    {
        "content": "<p>Personally, I'd rather not have both ways here.  And <code>core</code> in general doesn't seem to make things methods just for the sake of them being methods.</p>",
        "id": 211180023,
        "sender_full_name": "scottmcm",
        "timestamp": 1600976367
    },
    {
        "content": "<p>or really only be implement for collections, at which point I personally don't feel like it carries its weight</p>",
        "id": 211180024,
        "sender_full_name": "lcnr",
        "timestamp": 1600976367
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/219381-t-libs/topic/add.20trait.20.60Takeable.60/near/211180023\">said</a>:</p>\n<blockquote>\n<p>Personally, I'd rather not have both ways here.  And <code>core</code> in general doesn't seem to make things methods just for the sake of them being methods.</p>\n</blockquote>\n<p>What about <code>Option::take</code>?</p>",
        "id": 211180298,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976518
    },
    {
        "content": "<p><code>Option::take</code> is inherent.  I should have said \"extension methods\".</p>",
        "id": 211180402,
        "sender_full_name": "scottmcm",
        "timestamp": 1600976571
    },
    {
        "content": "<p>I just mean that there's no reason for it being a method other than not using <code>mem::take</code></p>",
        "id": 211180730,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976728
    },
    {
        "content": "<p>I think what we have precedent for right now is specific inherent take methods on types where it makes sense.</p>",
        "id": 211180745,
        "sender_full_name": "scottmcm",
        "timestamp": 1600976739
    },
    {
        "content": "<p>But I'm not sure that <code>Csprng::take</code> makes sense to have available as a method, even if it's <code>Default</code> and thus is technically usable with <code>mem::take</code>.</p>",
        "id": 211180893,
        "sender_full_name": "scottmcm",
        "timestamp": 1600976798
    },
    {
        "content": "<p>I just think it makes sense on <code>Vec</code>, and <span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> thought that the reason it wasn't there is we didn't want to implement it one by one on all the collections</p>",
        "id": 211180906,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/219381-t-libs/topic/add.20trait.20.60Takeable.60/near/211180893\">said</a>:</p>\n<blockquote>\n<p>But I'm not sure that <code>Csprng::take</code> makes sense to have available as a method, even if it's <code>Default</code> and thus is technically usable with <code>mem::take</code>.</p>\n</blockquote>\n<p>Where is that from?</p>",
        "id": 211180971,
        "sender_full_name": "Noah Lev",
        "timestamp": 1600976853
    },
    {
        "content": "<p>A conceptual type that seeds itself from <code>/dev/random</code> in <code>Default</code> -- that's a reasonable <code>Default</code>, but also not a good fit with <code>take</code>.</p>",
        "id": 211181834,
        "sender_full_name": "scottmcm",
        "timestamp": 1600977355
    }
]