[
    {
        "content": "<p>Introduce</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">is_char</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span>\n</code></pre></div>\n<p>as alternative for</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kt\">char</span>::<span class=\"n\">try_from</span><span class=\"p\">().</span><span class=\"n\">is_ok</span><span class=\"p\">()</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Good or bad idea?</p>",
        "id": 248213547,
        "sender_full_name": "Bot+",
        "timestamp": 1627993639
    },
    {
        "content": "<p>What will you do if it returns true? Seems like in most cases you would then want to convert it, which means that you've done the checking logic twice.</p>",
        "id": 248227871,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1628000673
    },
    {
        "content": "<p>You may be immediately encoding it, which may be more efficient in u32 where you can do bit manipulation.</p>",
        "id": 248229531,
        "sender_full_name": "Connor Horman",
        "timestamp": 1628001387
    },
    {
        "content": "<p>the conversion itself is free, right? so we'd expect char::try_from().is_ok() to be equivalent to is_char() at runtime anyway.</p>\n<p>This seems true in a tiny case - <a href=\"https://rust.godbolt.org/z/G3P3nM76P\">https://rust.godbolt.org/z/G3P3nM76P</a></p>",
        "id": 248231262,
        "sender_full_name": "simulacrum",
        "timestamp": 1628002136
    },
    {
        "content": "<p>Conversion is just a transmute. Basically move <a href=\"https://github.com/rust-lang/rust/blob/2939249f294dd54a9ce78a8ee1f2922a44e7fb7c/library/core/src/char/convert.rs#L251\">this check</a> to a const quality of life utility function.</p>\n<p>Chars in const are currently major PITA.</p>\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=29fc2d0117d00e1430dee4fda41153a1\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=29fc2d0117d00e1430dee4fda41153a1</a></p>",
        "id": 248234347,
        "sender_full_name": "Bot+",
        "timestamp": 1628003406
    },
    {
        "content": "<p>I don't think there's any reason <a href=\"https://doc.rust-lang.org/nightly/std/char/fn.from_u32.html\">https://doc.rust-lang.org/nightly/std/char/fn.from_u32.html</a> can't be made const today (presumably moving try_from's contents into it)</p>",
        "id": 248237416,
        "sender_full_name": "simulacrum",
        "timestamp": 1628004659
    }
]