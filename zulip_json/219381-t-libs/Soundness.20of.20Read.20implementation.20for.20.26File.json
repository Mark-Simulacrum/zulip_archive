[
    {
        "content": "<p>I'm wondering about safety of <code>Read</code> implementation for <code>&amp;File</code><br>\nThe POSIX specification on <a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/functions/read.html\">https://pubs.opengroup.org/onlinepubs/9699919799/functions/read.html</a> says that \"The behavior of multiple concurrent reads on the same pipe, FIFO, or terminal device is unspecified.\" (and our <code>Read</code> implementation on POSIX platforms pretty much calls <code>read</code>)<br>\nI'm not sure whether \"unspecified\" here means UB, and whether it's an issue at all on all platforms we support (it may be something that POSIX doesn't specify, but all platforms we support do)</p>",
        "id": 199730078,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1591268094
    },
    {
        "content": "<p>Unspecified behaviour is different from UB - see <a href=\"https://stackoverflow.com/questions/2397984/undefined-unspecified-and-implementation-defined-behavior\">https://stackoverflow.com/questions/2397984/undefined-unspecified-and-implementation-defined-behavior</a></p>",
        "id": 199730334,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591268300
    },
    {
        "content": "<p>Yeah, but this isn't C specification, but rather POSIX, and in this case there is no \"set of allowable behaviors\" provided.</p>",
        "id": 199730464,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1591268408
    },
    {
        "content": "<p>I would have assumed the set of allowable behaviours is implicitly \"some bytes are provided\" whether or not they look anything like the file they were supposed to have been read from</p>",
        "id": 199730962,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591268768
    },
    {
        "content": "<p>okay, that sounds reasonable</p>",
        "id": 199731006,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1591268807
    },
    {
        "content": "<p>so it's not UB, undesirable, sure, but as far Rust is concerned it's safe</p>",
        "id": 199731057,
        "sender_full_name": "Konrad Borowski",
        "timestamp": 1591268858
    }
]