[
    {
        "content": "<p>The pull request was approved by two WG members. Can a review-user approve those changes?</p>",
        "id": 218831163,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1607088044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216785\">@Tim Diekmann</span> Can you rebase it first to remove the merge commits?</p>",
        "id": 218832107,
        "sender_full_name": "Mara",
        "timestamp": 1607088577
    },
    {
        "content": "<p>Sure!</p>",
        "id": 218834292,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1607089675
    },
    {
        "content": "<p>Thank you very much! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 218835010,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1607090087
    },
    {
        "content": "<p>No problem. Feel free to assign PRs to me, if I can review them without having all the context of the wg-allocators group ^^</p>",
        "id": 218835190,
        "sender_full_name": "Mara",
        "timestamp": 1607090181
    },
    {
        "content": "<p>Btw, if you have time, it'd be good to also update <code>hashbrown</code>: <a href=\"https://github.com/rust-lang/hashbrown/blob/master/src/raw/alloc.rs#L6\">https://github.com/rust-lang/hashbrown/blob/master/src/raw/alloc.rs#L6</a></p>",
        "id": 218835200,
        "sender_full_name": "Mara",
        "timestamp": 1607090187
    },
    {
        "content": "<p>Sure, I'll do, thanks!</p>\n<p>I'm already working on adjusting <code>hashbrown</code>, but there are more things to change than just changing the trait name. Currently, a <code>A: Clone</code> bound is spread all over the crate, which is unfortunate and I try to remove it if possible. Do I remember correctly, that <code>std</code> does not depend on the allocator-feature of <code>hashbrown</code> or did that change? If so, I'll open a PR as soon as I have time. </p>\n<p>If not, I like to postpone adjusting the crate as I'm working on <a href=\"https://internals.rust-lang.org/t/is-custom-allocators-the-right-abstraction/13460\">a pretty nice proposal, which replaces the allocator in collection with a storage trait</a>. That way, it will be possible to inline a storage like <code>[MaybeUninit&lt;_&gt;; N]</code> into a collection, which is what most people would expect from a generic parameter on collecitons.</p>",
        "id": 218836599,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1607090983
    },
    {
        "content": "<blockquote>\n<p>Do I remember correctly, that std does not depend on the allocator-feature of hashbrown </p>\n</blockquote>\n<p>Yeah, i think so. If not, the CI would fail. ^^</p>",
        "id": 218836790,
        "sender_full_name": "Mara",
        "timestamp": 1607091088
    },
    {
        "content": "<p>Sounds like you all have it under control, great! Thanks for working on all this!</p>",
        "id": 218836894,
        "sender_full_name": "Mara",
        "timestamp": 1607091126
    }
]