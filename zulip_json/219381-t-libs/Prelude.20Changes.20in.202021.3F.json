[
    {
        "content": "<p>Are there plans to expand the prelude in 2021 edition?</p>\n<p>I know that currently \"editions don't do that\", but it seems possible to make the necessary changes to allow for another prelude to be part of 2021, and have it all ready in time.</p>",
        "id": 205541225,
        "sender_full_name": "Lokathor",
        "timestamp": 1596149061
    },
    {
        "content": "<p>I think it's a possibility. We've got this issue to track it: <a href=\"https://github.com/rust-lang/rust/issues/65512\">https://github.com/rust-lang/rust/issues/65512</a></p>",
        "id": 205541390,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1596149201
    },
    {
        "content": "<p>Oh, ha, I just opened this earlier today: <a href=\"https://github.com/rust-lang/lang-team/issues/44\">https://github.com/rust-lang/lang-team/issues/44</a></p>",
        "id": 205668024,
        "sender_full_name": "scottmcm",
        "timestamp": 1596263497
    },
    {
        "content": "<p>Have we ever had discussion about possibly removing/hiding deprecated APIs in new editions? Possibly even as simple as <code>#[doc(hidden)]</code>-ing them?</p>",
        "id": 207718105,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1598092167
    },
    {
        "content": "<p>there was a discussion about adding a 'pending deprecation' attribute if I can find it</p>",
        "id": 207722560,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598099863
    },
    {
        "content": "<p><a href=\"#narrow/stream/219381-t-libs/topic/Deprecate.20.7Binteger.7D.3A.3Amax_value.20and.20min_value.20methods\">https://rust-lang.zulipchat.com/#narrow/stream/219381-t-libs/topic/Deprecate.20.7Binteger.7D.3A.3Amax_value.20and.20min_value.20methods</a></p>",
        "id": 207722626,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1598099902
    },
    {
        "content": "<p>FWIW, we already have the \"deprecated_in_future\" lint and you can deprecate something for a future rustc version.</p>",
        "id": 207728136,
        "sender_full_name": "RalfJ",
        "timestamp": 1598108580
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204346\">Ashley Mannix</span> <a href=\"#narrow/stream/219381-t-libs/topic/Prelude.20Changes.20in.202021.3F/near/207718105\">said</a>:</p>\n<blockquote>\n<p>Have we ever had discussion about possibly removing/hiding deprecated APIs in new editions? Possibly even as simple as <code>#[doc(hidden)]</code>-ing them?</p>\n</blockquote>\n<p>Personally, I think that as long as its possible for code that uses such APIs to still compile, we should continue to document them. Otherwise, someone reading existing code can't look up what those APIs do.</p>",
        "id": 207737956,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598123291
    },
    {
        "content": "<p>Small detail, doc(hidden) doesn't prevent doc comments. So it would be possible to maintain doc comments while also strongly discouraging new use by not showing it in the main generated doc.</p>\n<p>I do think that's probably a step too far, but it would work.</p>",
        "id": 207743990,
        "sender_full_name": "Lokathor",
        "timestamp": 1598133943
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> I'm aware, but my point was that people wouldn't find that documentation.</p>",
        "id": 207745782,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1598137297
    },
    {
        "content": "<p>Ah, i just open up modules and read the source often enough, but i guess most people might not.</p>",
        "id": 207745850,
        "sender_full_name": "Lokathor",
        "timestamp": 1598137420
    },
    {
        "content": "<p>Use of the deprecated APIs is already strongly discouraged by compiler being super loud about you using them.</p>",
        "id": 207745955,
        "sender_full_name": "nagisa",
        "timestamp": 1598137602
    },
    {
        "content": "<p>I think at some point we‚Äôll need to hide some deprecated APIs since they‚Äôre going to accumulate effectively until the end of time. Maybe we could look at an edition flag to rustdoc so picking an old edition shows those old deprecated APIs too?</p>",
        "id": 207746286,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1598138201
    },
    {
        "content": "<p>I‚Äôm trying to think of ways we can make the most of edition releases for the standard library since we can‚Äôt really do much üòÑ</p>",
        "id": 207746298,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1598138258
    },
    {
        "content": "<p>collapsing them by default could go a long way towards decluttering. That said I don't think its a good idea to think about how to address problem (docs cluttered with deprecated items to the point of unreadability) that we don't yet have.</p>",
        "id": 207746350,
        "sender_full_name": "nagisa",
        "timestamp": 1598138305
    },
    {
        "content": "<p>mostly because trying to figure it now unnecessarily restricts the solution space.</p>",
        "id": 207746365,
        "sender_full_name": "nagisa",
        "timestamp": 1598138367
    },
    {
        "content": "<p>That‚Äôs fair. I don‚Äôt know if we want to try take on splitting up <code>std::sync</code> by the time the 2021 edition rolls around (there‚Äôs no RFC or anything for it), but if we did that might be a good one to look at and see what clutter it would produce</p>",
        "id": 207746428,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1598138473
    },
    {
        "content": "<p>A solution on the rustdoc side might be having a dedicated ‚Äúdeprecated functions‚Äù section that‚Äôs collapsed by default.</p>",
        "id": 207759273,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1598164635
    }
]