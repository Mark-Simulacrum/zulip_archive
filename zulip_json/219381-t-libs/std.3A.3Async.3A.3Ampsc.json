[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/88612\">https://github.com/rust-lang/rust/pull/88612</a></p>",
        "id": 252502734,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123046
    },
    {
        "content": "<p>I'd love to discuss what we should do about mpsc.</p>",
        "id": 252502796,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123076
    },
    {
        "content": "<p>i believe <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> has opinions on that ^^</p>",
        "id": 252502915,
        "sender_full_name": "Mara",
        "timestamp": 1631123132
    },
    {
        "content": "<p>My opinion is that it should be burned with fire</p>",
        "id": 252503051,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1631123178
    },
    {
        "content": "<p>aka deprecated-and-forgotten</p>",
        "id": 252503076,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1631123186
    },
    {
        "content": "<p>There's an element of \"who will bell the cat\" in it, but I'd like to start with the question of consensus before we try to figure out who will do the work. Can we confirm that we want the work done? Would we take a PR that rewrites mpsc atop another channel library (e.g. flume)? Or a PR that turns it into a low-performance but reliable system, using a mutex?</p>",
        "id": 252503081,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123188
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"259402\" href=\"/#narrow/stream/259402-t-libs.2Fmeetings/topic/Meetings.202021-09-08\">#t-libs/meetings &gt; Meetings 2021-09-08</a> by <span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span></p>",
        "id": 252503083,
        "sender_full_name": "Notification Bot",
        "timestamp": 1631123189
    },
    {
        "content": "<p>And, orthogonally to those, we could mark it deprecated. I think we might still want to make it not-broken, though.</p>",
        "id": 252503112,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123205
    },
    {
        "content": "<p>well, my recommendation would be to take one of those routes, deprecation or rewrite-with-mutex</p>",
        "id": 252503185,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1631123244
    },
    {
        "content": "<p>my opinion is the deprecation one</p>",
        "id": 252503211,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1631123252
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116015\">Alex Crichton</span> <a href=\"#narrow/stream/219381-t-libs/topic/std.3A.3Async.3A.3Ampsc/near/252503185\">said</a>:</p>\n<blockquote>\n<p>well, my recommendation would be to take one of those routes, deprecation or rewrite-with-mutex</p>\n</blockquote>\n<p>What's this \"or\" business? ;)</p>",
        "id": 252503234,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123261
    },
    {
        "content": "<p>but hey if someone wants to do both I can't disagree :)</p>",
        "id": 252503246,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1631123267
    },
    {
        "content": "<p>but whatever you do make sure no one uses my code again there please</p>",
        "id": 252503329,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1631123290
    },
    {
        "content": "<p>Informally gauging consensus (cc <span class=\"user-group-mention\" data-user-group-id=\"4493\">@T-libs</span>):</p>",
        "id": 252504352,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123715
    },
    {
        "content": "<p>Could I get a <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> or <span aria-label=\"-1\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"-1\">:-1:</span> on a consensus of \"please replace mpsc wholesale with the simplest possible code that works, using a mutex and not worrying about performance\"?</p>",
        "id": 252504400,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123735
    },
    {
        "content": "<p>Yes to replacing, no to deprecating since there's a ton of code that uses channels in tests.</p>",
        "id": 252504506,
        "sender_full_name": "Amanieu",
        "timestamp": 1631123766
    },
    {
        "content": "<p><del>delete the code and pretend it was never there</del></p>",
        "id": 252504507,
        "sender_full_name": "Mara",
        "timestamp": 1631123767
    },
    {
        "content": "<p>And separately, could I get a <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> or <span aria-label=\"-1\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"-1\">:-1:</span> on a consensus of \"mark mpsc as deprecated so everyone using it gets a warning, and steer people towards third-party channel libraries instead\"?</p>",
        "id": 252504513,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"143274\">@Amanieu</span> Interesting. Why does that use in tests motivate not deprecating it? What would prevent replacing that code with something using a better channel crate?</p>",
        "id": 252504623,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123827
    },
    {
        "content": "<p>(I'm not necessarily trying to argue for deprecating, I'm asking what consideration I'm missing there.)</p>",
        "id": 252504658,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1631123847
    },
    {
        "content": "<p>It just feels like a lot of churn in the ecosystem, which I'd like to avoid.</p>",
        "id": 252504689,
        "sender_full_name": "Amanieu",
        "timestamp": 1631123859
    },
    {
        "content": "<p>the churn thing is compelling to me personally, although i could be convinced otherwise with numbers. e.g., if the prevalence of its use is much smaller than i think it is.</p>\n<p>i like the idea of replacing it with a simple implementation. the fact that we don't have a <code>select!</code> thingy should make it quite a bit simpler than it otherwise would be i think. and very likely fast enough for most use cases.</p>",
        "id": 252505665,
        "sender_full_name": "BurntSushi",
        "timestamp": 1631124189
    },
    {
        "content": "<p>from <a href=\"https://github.com/rust-lang/rust/issues/39364#issuecomment-880136715\">https://github.com/rust-lang/rust/issues/39364#issuecomment-880136715</a></p>\n<blockquote>\n<p>If I recall correctly there were some talks about adding crossbeam-channel to the standard library as additional channel implementation and deprecate std::sync::mpsc. I believe the interface between the two is sufficiently incompatible that it is not possible to make the current channel interface backed by crossbeam-channel. </p>\n</blockquote>\n<p>it would be good to know where the impedance mismatches are to other libraries. maybe the gaps could be bridged one way or another?</p>",
        "id": 252506900,
        "sender_full_name": "The 8472",
        "timestamp": 1631124601
    },
    {
        "content": "<p>back-ref: <a href=\"#narrow/stream/219381-t-libs/topic/Replacing.20mpsc/near/212616741\">https://rust-lang.zulipchat.com/#narrow/stream/219381-t-libs/topic/Replacing.20mpsc/near/212616741</a></p>",
        "id": 252508166,
        "sender_full_name": "cuviper",
        "timestamp": 1631125099
    }
]