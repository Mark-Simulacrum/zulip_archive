[
    {
        "content": "<p>Hey all <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> I spent some time thinking about <span class=\"user-mention\" data-user-id=\"219747\">@Simon Sapin</span>’s <a href=\"https://github.com/rust-lang/rust/issues/65816#issuecomment-546405936\">suggestion on the <code>Vec::into_raw_parts</code> tracking issue</a> to return a <code>NonNull&lt;T&gt;</code> instead of a <code>*mut T</code>. I was thinking we could keep our APIs moving forward to more modern approaches without losing symmetry or consistency with existing ones by specifying a set of methods for leaking and working with containers: <a href=\"https://github.com/KodrAus/rfcs/blob/container-leak/text/0000-container-leak.md\">https://github.com/KodrAus/rfcs/blob/container-leak/text/0000-container-leak.md</a></p>",
        "id": 205663183,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1596255133
    },
    {
        "content": "<p>What do you all think? It’s _very_ sketchy :slight_smile: I just threw it together now for some feedback before going down the rabbithole properly</p>",
        "id": 205663192,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1596255177
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 205663276,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1596255334
    },
    {
        "content": "<p>Hmm, is <code>.leak_raw()</code> (rougly) equivalent to <code>.leak().into()</code>, since the <code>&amp;mut</code> can give the <code>NonNull</code> safely?</p>",
        "id": 205668010,
        "sender_full_name": "scottmcm",
        "timestamp": 1596263425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> It is, yes. It’s just meant to be discoverable and symmetrical with <code>unleak_raw</code> and <code>unleak_raw_parts</code>, which might need a capacity too</p>",
        "id": 205670549,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1596268865
    },
    {
        "content": "<p>I think I'll fill the rest of this in, do a dummy implementation and then PR it up</p>",
        "id": 205757043,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1596425416
    }
]