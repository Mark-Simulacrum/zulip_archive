[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/78343\">https://github.com/rust-lang/rust/pull/78343</a> qualifies the call to <code>panic!()</code> from <code>assert_eq!()</code>, <code>todo!()</code>, etc. with <code>$crate</code>, fixing a hygiene bug they had where they might call a shadowed <code>panic!()</code> defined by the user. it is technically a breaking change, but really just a hygiene bugfix. I'm tempted to just <code>r+</code> it. how careful should we be with situations like this?</p>",
        "id": 215021370,
        "sender_full_name": "Mara",
        "timestamp": 1604002328
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span></p>",
        "id": 215021398,
        "sender_full_name": "Mara",
        "timestamp": 1604002352
    },
    {
        "content": "<p>IMO code that hypothetically relied on being able to shadow panic there is just going to need to be fixed. We could do a crater run before merging to see what the breakage looks like but it seems obscure enough that I think it'd just be fine to merge. If we're wrong, the beta crater runs should pick it up anyway</p>",
        "id": 215021570,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1604002480
    },
    {
        "content": "<p>I suspect most of the cases where people are overriding panic! won't be caught by crater anyway</p>",
        "id": 215021816,
        "sender_full_name": "simulacrum",
        "timestamp": 1604002609
    },
    {
        "content": "<p>they're likely to either be on embedded targets or a difference between \"my custom message\" and \"just panic!\" which crater can't detect</p>",
        "id": 215021869,
        "sender_full_name": "simulacrum",
        "timestamp": 1604002640
    },
    {
        "content": "<p>It seems like most of the situations are in performance-critical code: <a href=\"https://grep.app/search?q=%5E%5Cs%2Amacro_rules%21%20panic%20%7B&amp;regexp=true&amp;case=true&amp;filter[lang][0]=Rust\">https://grep.app/search?q=%5E%5Cs%2Amacro_rules%21%20panic%20%7B&amp;regexp=true&amp;case=true&amp;filter[lang][0]=Rust</a></p>",
        "id": 215021895,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604002656
    },
    {
        "content": "<p>I sort of can't imagine someone overriding a panic! with something that's non-panicky</p>",
        "id": 215021902,
        "sender_full_name": "simulacrum",
        "timestamp": 1604002660
    },
    {
        "content": "<p>craterbot's queue is a bit long at the moment.</p>",
        "id": 215021928,
        "sender_full_name": "Mara",
        "timestamp": 1604002674
    },
    {
        "content": "<p>yeah i did that search. posted the three cases that might break in the PR here: <a href=\"https://github.com/rust-lang/rust/pull/78343#issuecomment-718970335\">https://github.com/rust-lang/rust/pull/78343#issuecomment-718970335</a></p>",
        "id": 215021995,
        "sender_full_name": "Mara",
        "timestamp": 1604002692
    },
    {
        "content": "<p>(almost all results there are just (old) copies of core or std)</p>",
        "id": 215022104,
        "sender_full_name": "Mara",
        "timestamp": 1604002764
    },
    {
        "content": "<p>All those crates will have to do is just also shadow assert/assert_eq, right?</p>",
        "id": 215022113,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1604002768
    },
    {
        "content": "<p>yup. or just switch to using #[panic_handler] instead.</p>",
        "id": 215022144,
        "sender_full_name": "Mara",
        "timestamp": 1604002783
    },
    {
        "content": "<p>Yeah, then I'd just land it and cc the authors of those repos so they have some heads up</p>",
        "id": 215022243,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1604002810
    },
    {
        "content": "<p>the only case i found in a crate that seems to be in use is a testcrate in our own compiler-builtins</p>",
        "id": 215022284,
        "sender_full_name": "Mara",
        "timestamp": 1604002834
    },
    {
        "content": "<p>alright. r+'ing it.</p>",
        "id": 215022308,
        "sender_full_name": "Mara",
        "timestamp": 1604002845
    },
    {
        "content": "<p>I do see that boringssl seems to rely on shadowing <code>panic!</code> to produce a compile error: <a href=\"https://github.com/google/mundane/blob/master/src/boringssl/abort.rs#L96\">https://github.com/google/mundane/blob/master/src/boringssl/abort.rs#L96</a></p>",
        "id": 215022386,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604002886
    },
    {
        "content": "<p>but they override all the other macros too. looks like they explicitly do not want to rely on this hygiene bug</p>",
        "id": 215022432,
        "sender_full_name": "Mara",
        "timestamp": 1604002917
    },
    {
        "content": "<p>Ah, yes, I missed that. Alright, seems good then!</p>",
        "id": 215022514,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604002940
    },
    {
        "content": "<p>(only they missed <code>todo!()</code>)</p>",
        "id": 215022519,
        "sender_full_name": "Mara",
        "timestamp": 1604002945
    },
    {
        "content": "<p>Well <code>todo!</code> is more recent</p>",
        "id": 215022540,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604002956
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span>  oh wait, you still wanted to squash the commits right, before i r+ it?</p>",
        "id": 215022559,
        "sender_full_name": "Mara",
        "timestamp": 1604002969
    },
    {
        "content": "<p>The file hasn't been updated since Dec 2018</p>",
        "id": 215022561,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604002970
    },
    {
        "content": "<p>Oh yes, thanks! I forgot :)</p>",
        "id": 215022576,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604002979
    },
    {
        "content": "<p>Squashed <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 215023187,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604003297
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> Should I add a test for <code>unreachable!</code> too?</p>",
        "id": 215023347,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604003401
    },
    {
        "content": "<p>might be good, if you have the time</p>",
        "id": 215023588,
        "sender_full_name": "Mara",
        "timestamp": 1604003516
    },
    {
        "content": "<p>i can imagine you feel like you have already spent enough time on this change ^^'</p>",
        "id": 215023659,
        "sender_full_name": "Mara",
        "timestamp": 1604003536
    },
    {
        "content": "<p>It was much more involved than I thought, but also very interesting :)</p>",
        "id": 215024273,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604003869
    },
    {
        "content": "<p>About to push up a commit</p>",
        "id": 215024282,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604003874
    },
    {
        "content": "<p>(Just waiting on a build)</p>",
        "id": 215024344,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604003891
    },
    {
        "content": "<p>Done</p>",
        "id": 215025465,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604004464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> Do you want to mark as <code>rollup=never</code> so it's easier to bisect if there are issues?</p>",
        "id": 215025668,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604004573
    },
    {
        "content": "<p>Might not be necessary but wanted to suggest it</p>",
        "id": 215025698,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604004589
    },
    {
        "content": "<p>I don't think that's necessary. Any issues this might create should directly point at the macro name and <code>panic!()</code>. Should be easy to find.</p>",
        "id": 215025931,
        "sender_full_name": "Mara",
        "timestamp": 1604004692
    },
    {
        "content": "<p>Sounds good.</p>",
        "id": 215026503,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604004943
    },
    {
        "content": "<p>(And I feel like there's a general overuse of never lately -- it gives the PR higher priority, so the other day when I tried to use <code>rollup=iffy</code> it just never landed between all the <code>always</code> stuff and the rollups that get p=5.  So I'll just never use <code>iffy</code> again...)</p>",
        "id": 215049534,
        "sender_full_name": "scottmcm",
        "timestamp": 1604023269
    },
    {
        "content": "<p>Well it's frustrating when a rolled-up PR introduces a regression because it can be hard to tell which rolled-up PR caused it</p>",
        "id": 215049710,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604023490
    },
    {
        "content": "<p>Yeah, no easy answers here.</p>",
        "id": 215049936,
        "sender_full_name": "scottmcm",
        "timestamp": 1604023780
    },
    {
        "content": "<p>Except for adding more compute power <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 215051220,
        "sender_full_name": "Noah Lev",
        "timestamp": 1604025418
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> not sure if you noticed, but your PR failed in CI because apparently two tests have an unused <code>use std::panic;</code> that only became actually unused with your bug fix.</p>",
        "id": 215155567,
        "sender_full_name": "Mara",
        "timestamp": 1604095090
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 215432438,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1604397825
    }
]