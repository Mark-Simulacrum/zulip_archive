[
    {
        "content": "<p>While implementing asm! I noticed that it is possible for format strings to address named argument by position: <code>println!(\"{0} {foo}\", foo = 2);</code> prints <code>2 2</code>.</p>",
        "id": 187998442,
        "sender_full_name": "Amanieu",
        "timestamp": 1581504121
    },
    {
        "content": "<p>Is this intentional? The <code>fmt</code> documentation doesn't explicitly say that it isn't allowed, but it feels like it should be...</p>",
        "id": 187998502,
        "sender_full_name": "Amanieu",
        "timestamp": 1581504154
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116015\">@Alex Crichton</span> <span class=\"user-mention\" data-user-id=\"119031\">@Esteban Küber</span></p>",
        "id": 188000209,
        "sender_full_name": "Amanieu",
        "timestamp": 1581505798
    },
    {
        "content": "<blockquote>\n<p>It is not valid to put positional parameters (those without names) after arguments which have names.</p>\n</blockquote>\n<p>Is the only discussion I see in the docs about this</p>",
        "id": 188012095,
        "sender_full_name": "simulacrum",
        "timestamp": 1581516270
    },
    {
        "content": "<p>My guess is that it's unintentional but also unchangeable at this point</p>",
        "id": 188012114,
        "sender_full_name": "simulacrum",
        "timestamp": 1581516289
    },
    {
        "content": "<p>If it's unintentional then we could add a warning for it (maybe even a deny-by-default lint).</p>",
        "id": 188012779,
        "sender_full_name": "Amanieu",
        "timestamp": 1581516774
    },
    {
        "content": "<p>I'm mainly asking because I'm working on <code>asm!</code> and wondering whether I should emulate this behavior.</p>",
        "id": 188012816,
        "sender_full_name": "Amanieu",
        "timestamp": 1581516799
    },
    {
        "content": "<p>I think we should keep them consistent. I personally think positional arguments were probably a mistake (as a user-facing detail), and we could warn on this I guess, though I don't know that there's much point.</p>",
        "id": 188012948,
        "sender_full_name": "simulacrum",
        "timestamp": 1581516892
    },
    {
        "content": "<p>That behavior feels surprising to me, I suspect it was an accident</p>",
        "id": 188026114,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1581524617
    },
    {
        "content": "<p>A quick bisects shows that this was actually rejected until 1.12.0, which started accepting it.</p>",
        "id": 188030501,
        "sender_full_name": "Amanieu",
        "timestamp": 1581527143
    },
    {
        "content": "<p>Possibly introduced by <a href=\"https://github.com/rust-lang/rust/issues/33642\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/33642\">#33642</a></p>",
        "id": 188030648,
        "sender_full_name": "Amanieu",
        "timestamp": 1581527236
    },
    {
        "content": "<p>I would file a ticket to lint on this, I would assume that starting to reject these outright would lead to widespread breakage</p>",
        "id": 188053497,
        "sender_full_name": "Esteban Küber",
        "timestamp": 1581541863
    },
    {
        "content": "<p>I opened <a href=\"https://github.com/rust-lang/rust/issues/69110\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/69110\">#69110</a> for this</p>",
        "id": 188053978,
        "sender_full_name": "Amanieu",
        "timestamp": 1581542217
    },
    {
        "content": "<p>seems pretty reasonable to at least run crater to see if changing it's clearly not possible at this point</p>",
        "id": 188055878,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1581543654
    }
]