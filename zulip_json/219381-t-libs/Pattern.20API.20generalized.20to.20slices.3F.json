[
    {
        "content": "<p>I am aware that there used to be an RFC that would have included this change, but got retracted: <a href=\"https://github.com/rust-lang/rust/pull/76901#issuecomment-880169952\">https://github.com/rust-lang/rust/pull/76901#issuecomment-880169952</a></p>\n<p>I understand not wanting to expand the Pattern API to beyond what it is now, and sealing the trait. But I also see no reason to limit this trait to just <code>&amp;str</code> instead of any <code>&amp;[T]</code>. The lack of a simple efficient substring search for slices really hurts the standard library IMO. Are there any plans for generalizing the <code>Pattern</code> trait to any slice and moving the <code>find</code> method to slice rather than on <code>str</code>?</p>",
        "id": 261113348,
        "sender_full_name": "orlp",
        "timestamp": 1636624973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"393382\">@orlp</span> Last time we discussed Pattern, nobody had any objections to adding more instances in the standard library, just to stabilizing it.</p>",
        "id": 261124328,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636632073
    },
    {
        "content": "<p>That said, I don't know how invasive it would be to rework it to support slices, or if that could be done compatibly (if it would affect the set of existing instances), or if it needs one trait or two.</p>",
        "id": 261124405,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1636632123
    },
    {
        "content": "<p>Trait implementations are insta-stable.</p>",
        "id": 261135390,
        "sender_full_name": "bjorn3",
        "timestamp": 1636638246
    }
]