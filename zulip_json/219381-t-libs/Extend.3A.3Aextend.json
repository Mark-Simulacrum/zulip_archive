[
    {
        "content": "<p>What should a collection do if someone tries to extend it beyond it's capacity and it cannot grow the capacity?</p>\n<p>major options seem to be:</p>\n<p>1) Panic<br>\n2) Drop the rest of the iterator items</p>\n<p>This doesn't have to get added to the official docs, I'd just like to know general opinion at the moment.</p>",
        "id": 186010213,
        "sender_full_name": "Lokathor",
        "timestamp": 1579378596
    },
    {
        "content": "<p>ArrayVec simply drops the rest of the iterator.</p>",
        "id": 186010838,
        "sender_full_name": "Amanieu",
        "timestamp": 1579379736
    },
    {
        "content": "<p>I think this does need to go into the official docs for the <code>Extend</code> trait.</p>",
        "id": 186010841,
        "sender_full_name": "Amanieu",
        "timestamp": 1579379755
    },
    {
        "content": "<p>I had been leaning towards \"panic\" for my own ArrayVec type in the <code>tinyvec</code> crate. That is what it currently does.</p>\n<p>It felt consistent to panic because all the <em>other</em> ways to add elements will cause a panic on overflow.</p>",
        "id": 186012918,
        "sender_full_name": "Lokathor",
        "timestamp": 1579383661
    },
    {
        "content": "<p>Panicking seems like a better option to me as well</p>",
        "id": 186015986,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1579389437
    },
    {
        "content": "<p>Dropping the rest of the elements seems <em>highly</em> unexpected</p>",
        "id": 186021103,
        "sender_full_name": "simulacrum",
        "timestamp": 1579399950
    },
    {
        "content": "<p>The program will silently continue until you get a logic error sometime later :/</p>",
        "id": 186097929,
        "sender_full_name": "gnzlbg",
        "timestamp": 1579523937
    },
    {
        "content": "<p>If someone needs this to be fallible, then we can always add a <code>TryExtend</code> API, similar to how <code>try_push</code>/<code>try_reserve</code> work</p>",
        "id": 186098001,
        "sender_full_name": "gnzlbg",
        "timestamp": 1579524004
    },
    {
        "content": "<p><code>arrayvec</code> has <code>try_extend_from_slice</code>. It could have a an iterator-based <code>try_extend</code> method even if thereâ€™s no <code>TryExtend</code> trait in the standard library.</p>",
        "id": 186124203,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1579544960
    }
]