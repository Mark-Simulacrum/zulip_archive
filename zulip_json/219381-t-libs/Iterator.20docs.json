[
    {
        "content": "<p>Hey! I've been thinking about our <code>Iterator</code> docs lately and thought it might be nice to give them a bit of TLC. Before going through the large number of methods though I thought I'd test the waters with <code>fold()</code>. I thought it would be good if all of our <code>Iterator</code> methods:</p>\n<ul>\n<li>Had a basic example, preferably using a collection rather than successive calls to <code>assert_eq!(Some(expr), iter.next())</code></li>\n<li>Had an example with at least one other adapter in it</li>\n<li>Had a copy of the basic example implemented without iterators</li>\n<li>Had a list of related methods</li>\n</ul>\n<p>This is where I got with <code>fold()</code>: <a href=\"https://hackmd.io/LX7MYKX_SCadkmLuRl4Wmg\">https://hackmd.io/LX7MYKX_SCadkmLuRl4Wmg</a></p>\n<p>What do you think? Do those seem like reasonable things to aim for? If so I'd like to go through a bunch of the other adapters.</p>",
        "id": 223638444,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1611320923
    },
    {
        "content": "<p>Some specific changes to <code>fold()</code> include moving _Notes to Implementors_ to the bottom and replacing the table with the output of <code>dbg!</code> (I never found the table very helpful because it renders very wide so I found it hard to digest)</p>",
        "id": 223638665,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1611321032
    },
    {
        "content": "<p>I do worry a bit that it'll make the iterator page even longer, but scrolling through it is already unreasonable so seems okay.</p>",
        "id": 223639286,
        "sender_full_name": "simulacrum",
        "timestamp": 1611321377
    },
    {
        "content": "<p>Yeh it’s quite unwieldy. That’s what got me thinking about the “Related Methods” section to maybe give us some more semantic navigation</p>",
        "id": 223639395,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1611321443
    },
    {
        "content": "<p>We could also be a little more tactical. I can imagine methods like <code>max</code> or <code>sum</code> are clear enough to not need a lot of content</p>",
        "id": 223639579,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1611321560
    },
    {
        "content": "<p>I do wonder - another strategy could be brief summaries on the method, and longer summaries on the return type, which for most of the interesting adapters would be unique</p>",
        "id": 223643719,
        "sender_full_name": "simulacrum",
        "timestamp": 1611323816
    },
    {
        "content": "<p>That would work for something like <code>scan</code> <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> But wouldn’t really for <code>fold</code></p>",
        "id": 223644027,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1611323969
    },
    {
        "content": "<p>Yeah, true.</p>",
        "id": 223644446,
        "sender_full_name": "simulacrum",
        "timestamp": 1611324145
    },
    {
        "content": "<p>If rustdoc can help here, I'm happy for suggestions :)</p>",
        "id": 223647012,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611325385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"204346\">Ashley Mannix</span> <a href=\"#narrow/stream/219381-t-libs/topic/Iterator.20docs/near/223638444\">said</a>:</p>\n<blockquote>\n<p>Hey! I've been thinking about our <code>Iterator</code> docs lately and thought it might be nice to give them a bit of TLC. Before going through the large number of methods though I thought I'd test the waters with <code>fold()</code>. I thought it would be good if all of our <code>Iterator</code> methods:</p>\n<ul>\n<li>Had a basic example, preferably using a collection rather than successive calls to <code>assert_eq!(Some(expr), iter.next())</code></li>\n<li>Had an example with at least one other adapter in it</li>\n<li>Had a copy of the basic example implemented without iterators</li>\n<li>Had a list of related methods</li>\n</ul>\n<p>This is where I got with <code>fold()</code>: <a href=\"https://hackmd.io/LX7MYKX_SCadkmLuRl4Wmg\">https://hackmd.io/LX7MYKX_SCadkmLuRl4Wmg</a></p>\n<p>What do you think? Do those seem like reasonable things to aim for? If so I'd like to go through a bunch of the other adapters.</p>\n</blockquote>\n<p>FWIW, I would love to see most examples using collections rather than <code>.next()</code> calls, but at the same time, I'd also love to see a few examples at the top showing the equivalence, using <code>assert_eq!(..., iter.next())</code>. That helped greatly when learning iterators.</p>",
        "id": 223702515,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611350717
    },
    {
        "content": "<p>We don't need to re-demonstrate that in every iterator method. But it'd be nice to have a couple of examples in the <code>iter.next()</code> style attached to <code>Iterator</code> itself.</p>",
        "id": 223702579,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611350748
    },
    {
        "content": "<p>Personally I find the .next usage to be the clearest way to do an example with iterators, but maybe that's just me</p>",
        "id": 223725737,
        "sender_full_name": "Lokathor",
        "timestamp": 1611367568
    }
]