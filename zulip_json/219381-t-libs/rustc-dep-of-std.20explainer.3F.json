[
    {
        "content": "<p>newbie here, looking into a custom libstd build setup and one of the two blocking issues I'm currently seeing involves the libc dep having the rustc-dep-of-std feature. with the feature enabled I get <code>doesn't have a size known at compile-time</code> errors and without it the build seems to continue to the next blocker. is there a writeup somewhere of how rustc-dep-of-std works so I can understand the implications of that hack? I didn't see it covered in <a href=\"https://std-dev-guide.rust-lang.org/\">https://std-dev-guide.rust-lang.org/</a></p>\n<p>specifically what I'm trying to do is use <a href=\"https://github.com/facebookincubator/reindeer\">https://github.com/facebookincubator/reindeer</a> to generate buildfiles for FB's Buck build system based on libstd's in-tree Cargo.toml files. that configuration is turbo-unsupported but the context may help clarify what I'm trying to ramp up on</p>\n<p>thanks in advance!</p>",
        "id": 260908291,
        "sender_full_name": "Matt H",
        "timestamp": 1636511323
    },
    {
        "content": "<p>I think there's a long comment in a toml file in tree - try looking for the shim crates we replace with core/std in the root Cargo.toml and then look at their Cargo.tomls</p>",
        "id": 260913399,
        "sender_full_name": "simulacrum",
        "timestamp": 1636511465
    },
    {
        "content": "<p>The size errors are likely hiding some actual error in the wall of noise about a missing Lang item or duplicate Lang item</p>",
        "id": 260913429,
        "sender_full_name": "simulacrum",
        "timestamp": 1636511509
    },
    {
        "content": "<p>do you mean library/rustc-std-workspace-core and friends? the Cargo.tomls in those crates in-tree don't have anything useful</p>",
        "id": 260914344,
        "sender_full_name": "Matt H",
        "timestamp": 1636511899
    },
    {
        "content": "<p>Hm I thought they had an explainer</p>",
        "id": 260914365,
        "sender_full_name": "simulacrum",
        "timestamp": 1636511921
    },
    {
        "content": "<p>Ah <a href=\"https://github.com/rust-lang/rust/tree/master/library/rustc-std-workspace-core\">https://github.com/rust-lang/rust/tree/master/library/rustc-std-workspace-core</a></p>",
        "id": 260914427,
        "sender_full_name": "simulacrum",
        "timestamp": 1636511960
    },
    {
        "content": "<p>(readme)</p>",
        "id": 260914432,
        "sender_full_name": "simulacrum",
        "timestamp": 1636511965
    },
    {
        "content": "<p>the README.md in the core one explains what the shim packages are for, but it's not clear to me what rustc-dep-of-std does. is that just a cfg gate that says to depend on those workspace crates?</p>",
        "id": 260914436,
        "sender_full_name": "Matt H",
        "timestamp": 1636511968
    },
    {
        "content": "<p>Essentially yes</p>",
        "id": 260914650,
        "sender_full_name": "simulacrum",
        "timestamp": 1636512070
    },
    {
        "content": "<p>(the library source code may not necessarily reference it directly, e.g. hash brown has <a href=\"https://github.com/rust-lang/hashbrown/blob/master/Cargo.toml#L44\">https://github.com/rust-lang/hashbrown/blob/master/Cargo.toml#L44</a>)</p>",
        "id": 260914849,
        "sender_full_name": "simulacrum",
        "timestamp": 1636512173
    },
    {
        "content": "<p>okay so thinking out loud, removing that feature from libc would result in things that dep on it being built with the distribution's core crate rather than the in-tree one which will cause problems when linking to the libstd/libcore i'm trying to build. so i'm robbing peter to pay paul here</p>\n<p>cool cool, thank you for your help!</p>",
        "id": 260915050,
        "sender_full_name": "Matt H",
        "timestamp": 1636512310
    }
]