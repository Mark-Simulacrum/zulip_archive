[
    {
        "content": "<p>As far as I can tell, there is no function on <code>&amp;mut [T]</code> for moving all elements satisfying a boolean predicate to the left, and all others to the right, and returning the two slices. Should this be added? Suggested name: <code>&lt;[T]&gt;::partition</code></p>",
        "id": 256549604,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1633599706
    },
    {
        "content": "<p>already exists as <code>slice.iter_mut().partition_in_place()</code></p>",
        "id": 256550989,
        "sender_full_name": "The 8472",
        "timestamp": 1633600368
    },
    {
        "content": "<p>oh, I wasn't expecting it on the iterator type</p>",
        "id": 256551075,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1633600417
    },
    {
        "content": "<p>wait, it's a method on <code>Iterator</code>? That makes no sense</p>",
        "id": 256551325,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1633600541
    },
    {
        "content": "<p>what does \"in place\" even mean for a streaming iterator</p>",
        "id": 256551347,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1633600553
    },
    {
        "content": "<p>look at the where bounds</p>",
        "id": 256551525,
        "sender_full_name": "The 8472",
        "timestamp": 1633600660
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.partition_in_place\">https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.partition_in_place</a></p>",
        "id": 256551613,
        "sender_full_name": "The 8472",
        "timestamp": 1633600699
    },
    {
        "content": "<p>Dang, in addition to being unstable it also doesn't meet my use case since it is <em>unstable</em> i.e. reorders elements. Seems like a misleading name, although the stabilization PR mentions that it's not possible to implement a stable partition without additional allocation?</p>",
        "id": 256552047,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1633600910
    }
]