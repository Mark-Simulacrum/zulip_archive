[
    {
        "content": "<p>Hi dear lib team <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> </p>\n<p>I'm about to request my first FCP :) I've been going over the documentation, but I think I need some additional guidance on how to proceed in case of <a href=\"https://github.com/rust-lang/rust/issues/71146\">https://github.com/rust-lang/rust/issues/71146</a>. I found these manuals: <a href=\"https://rustc-dev-guide.rust-lang.org/stabilization_guide.html\">#1</a> <a href=\"https://rustc-dev-guide.rust-lang.org/stability.html#stabilizing-a-library-feature\">#2</a> <a href=\"https://std-dev-guide.rust-lang.org/feature-lifecycle/stabilization.html\">#3</a> and I <em>think</em> that I need to follow <a href=\"https://std-dev-guide.rust-lang.org/feature-lifecycle/stabilization.html\">this one</a>, but I'm not 100% sure.</p>\n<p>A little background on the tracking issue at hand: this one tracks multiple methods in the core library, but in this case I'm only after a partial stabilization. In short, the tracking issue is about <code>#![feature(slice_ptr_len)]</code> and <code>#![feature(const_slice_ptr_len)]</code> (for const fn) which covers the methods <code>&lt;*const [T]&gt;::len</code>, <code>&lt;*mut [T]&gt;::len</code> and <code>NonNull&lt;[T]&gt;::len</code>. In this case, I want to request a FCP for <em>only</em> <code>NonNull&lt;[T]&gt;::len</code>, because the other 2 methods are slightly more controversial.</p>\n<p>Some questions related to this:</p>\n<ol>\n<li>Am I looking at the correct documentation?</li>\n<li>Can the FCP for partial stabilization be requested on <a href=\"https://github.com/rust-lang/rust/issues/71146\">https://github.com/rust-lang/rust/issues/71146</a> or should I create a separate tracking issue first?</li>\n<li>How do I correctly mention the libs team on the tracking issue? I <a href=\"https://github.com/rust-lang/rust/issues/71146#issuecomment-1055987262\">saw</a> one commenter do it, but my Github interface does not recognize the username <code>@rust-lang/libs-api</code> for some reason (also, if I click on that username, I get a 404 not found). The second manual I found suggests mentioning <code>@T-libs-api</code> and the third manual suggests <code>@rust-lang/libs</code>, so now I'm a little confused about which one to use :)</li>\n</ol>\n<p>Thank you so much for the help and for making the standard library a better place! :)</p>",
        "id": 273875556,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646254632
    },
    {
        "content": "<p>For partial stabilizations, FCP is generally completed in the PR, as there can only be a single FCP per issue. No need to create a separate tracking issue.</p>",
        "id": 273879488,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646256402
    },
    {
        "content": "<p>And yes, that guide for stabilization seems about right. Feel free to ping me if you need assistance with the actual code.</p>",
        "id": 273879704,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646256502
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"245610\">@Jacob Pratt ðŸ‡ºðŸ‡¦</span> ! In this case, the PR for <code>NonNull&lt;[T]&gt;::len</code> was already <a href=\"https://github.com/rust-lang/rust/pull/71940\">merged</a> in 2020. Should I create a new stabilization PR for <code>NonNull&lt;[T]&gt;::len</code> and request the FCP there? (The reason I'm not very sure about this, is because the manual says it's better to wait with the PR until after the FCP). Thanks for the help!</p>",
        "id": 273883108,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646258032
    },
    {
        "content": "<p>Yeah, that PR <em>created</em> the methods. What you want to do is stabilize it. For something like this it should just amount to changing the <code>#[unstable]</code> attribute to <code>#[stable]</code>. You'll want to use 1.61 as the stable version, as that's the current nightly.</p>",
        "id": 273883336,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646258123
    },
    {
        "content": "<p>The guide should probably be updated to note how partial stabilizations are handled, to be honest.</p>",
        "id": 273883399,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646258150
    },
    {
        "content": "<p>Great! :) Thanks for the pointers, I'll draft a partial stabilization PR somewhere this week. Might you also know what the correct Github username is to mention on the PR description so that they can initiate FCP? The username <code>@rust-lang/libs</code> is not recognized as a \"mention\" on the Github user interface, it seems.</p>",
        "id": 273883758,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646258306
    },
    {
        "content": "<p>Only org members can mention a team like <code>@rust-lang/libs</code> on github.</p>",
        "id": 273892486,
        "sender_full_name": "bjorn3",
        "timestamp": 1646262424
    },
    {
        "content": "<p>If you do <code>@rustbot label +T-libs-api</code>, someone from that team will see it eventually.</p>",
        "id": 273919532,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646280342
    },
    {
        "content": "<p>I'll take a look tomorrow at the very least</p>",
        "id": 273919592,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646280384
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 273930229,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646290035
    },
    {
        "content": "<p>I can't give the final okay for a PR (I'm not a reviewer on the list) or start FCP (not on any teams), but if you leave the PR number here I can still check it out.</p>",
        "id": 273972501,
        "sender_full_name": "Jacob Pratt ðŸ‡ºðŸ‡¦",
        "timestamp": 1646314440
    },
    {
        "content": "<p>Thank you very much :) I'll prepare the PR for partial stabilization of <code>NonNull&lt;[T]&gt;::len</code> this weekend!</p>",
        "id": 273981667,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646318359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt ðŸ‡ºðŸ‡¦</span> <a href=\"#narrow/stream/219381-t-libs/topic/First.20time.20going.20through.20FCP/near/273883399\">said</a>:</p>\n<blockquote>\n<p>The guide should probably be updated to note how partial stabilizations are handled, to be honest.</p>\n</blockquote>\n<p>gonna do this</p>",
        "id": 274047065,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646345001
    },
    {
        "content": "<p>and update the rustc dev guide to point directly to the correct std-dev-guide section and remove the old outdated section</p>",
        "id": 274047106,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646345028
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/219381-t-libs/topic/First.20time.20going.20through.20FCP/near/273892486\">said</a>:</p>\n<blockquote>\n<p>Only org members can mention a team like <code>@rust-lang/libs</code> on github.</p>\n</blockquote>\n<p>I didn't realize that. :(</p>",
        "id": 274047191,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646345063
    },
    {
        "content": "<p>rather unfortunate</p>",
        "id": 274047195,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646345067
    },
    {
        "content": "<p>I wonder if rustbot can be convinced to ping libs or something</p>",
        "id": 274047223,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646345094
    },
    {
        "content": "<p>I have a PR open at <a href=\"https://github.com/rust-lang/rustc-dev-guide/pull/1317\">https://github.com/rust-lang/rustc-dev-guide/pull/1317</a> to point to the std-dev-guide from rustc-dev-guide</p>",
        "id": 274053083,
        "sender_full_name": "scottmcm",
        "timestamp": 1646348367
    },
    {
        "content": "<p>oh dang you beat me to it</p>",
        "id": 274053482,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646348456
    },
    {
        "content": "<p>I just opened <a href=\"https://github.com/rust-lang/std-dev-guide/pull/32\">https://github.com/rust-lang/std-dev-guide/pull/32</a></p>",
        "id": 274053496,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646348464
    },
    {
        "content": "<p>and in the description mentioned I was gonna do what you did afterwards, lol</p>",
        "id": 274053513,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646348476
    },
    {
        "content": "<p>I also ended up copying this section <a href=\"https://rustc-dev-guide.rust-lang.org/stability.html#stabilizing-a-library-feature\">https://rustc-dev-guide.rust-lang.org/stability.html#stabilizing-a-library-feature</a> over into the std-dev-guide version of the docs</p>",
        "id": 274053647,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646348530
    },
    {
        "content": "<p>and want to remove that section and add another crossreference to the std-dev-guide in <a href=\"https://rustc-dev-guide.rust-lang.org/stability.html#unstable\">https://rustc-dev-guide.rust-lang.org/stability.html#unstable</a></p>",
        "id": 274053669,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646348548
    },
    {
        "content": "<p>If you'd like to steal some text, here's the \"how to do libs stabilization\" text I wrote before realizing that I was adding it to the wrong place:</p>\n<p><a href=\"https://github.com/rust-lang/rustc-dev-guide/commit/01551192a5da133c288d4c269acf861ecb8c9f7d#diff-0f7144b6e5ff7c920dee703be255fd4a7f457cf615d5c30eb6772307026be2abR186\">https://github.com/rust-lang/rustc-dev-guide/commit/01551192a5da133c288d4c269acf861ecb8c9f7d#diff-0f7144b6e5ff7c920dee703be255fd4a7f457cf615d5c30eb6772307026be2abR186</a></p>",
        "id": 274056861,
        "sender_full_name": "scottmcm",
        "timestamp": 1646350420
    },
    {
        "content": "<p>don't mind if i do</p>",
        "id": 274056998,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646350490
    },
    {
        "content": "<p><em>yoink</em></p>",
        "id": 274057004,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646350494
    },
    {
        "content": "<p>aaand done</p>",
        "id": 274058036,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646351231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/First.20time.20going.20through.20FCP/near/273919592\">said</a>:</p>\n<blockquote>\n<p>I'll take a look tomorrow at the very least</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt ðŸ‡ºðŸ‡¦</span> <a href=\"#narrow/stream/219381-t-libs/topic/First.20time.20going.20through.20FCP/near/273972501\">said</a>:</p>\n<blockquote>\n<p>I can't give the final okay for a PR (I'm not a reviewer on the list) or start FCP (not on any teams), but if you leave the PR number here I can still check it out.</p>\n</blockquote>\n<p>The PR is up now :) <a href=\"https://github.com/rust-lang/rust/pull/94640\">https://github.com/rust-lang/rust/pull/94640</a></p>",
        "id": 274237021,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646478749
    },
    {
        "content": "<p>Whoops, looks like I messed something up :) It doesn't like that <code>slice_ptr_len</code> is now both a <code>#[stable]</code> and <code>#[unstable]</code> feature. It seems that I have to create a separate feature and tracking issue for that after all, I'm going to look into that now. I'm planning to use that PR as the tracking issue.</p>",
        "id": 274238085,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646479924
    },
    {
        "content": "<p>I ended up going with new features <code>slice_ptr_len_nonnull</code> and <code>const_slice_ptr_len_nonnull</code> and the PR is up-to-date now. I could not find how to add these to the <a href=\"https://doc.rust-lang.org/beta/unstable-book/library-features/slice-ptr-len.html\">feature list</a>, might this be something that the libs team does instead of the PR creator?</p>",
        "id": 274242547,
        "sender_full_name": "Pointerbender",
        "timestamp": 1646485605
    },
    {
        "content": "<p>For a partial stabilization, the best way is to change the feature name of the thing being stabilized, so that anyone on nightly enabling the feature still enables the not-yet-stabilized stuff.  Here's an example of such a stabilization PR: <a href=\"https://github.com/rust-lang/rust/pull/85608/files#diff-49412431a58f2ca62539b01666601bb34bcc133f35049a6c6d32c0c1ae891084R49\">https://github.com/rust-lang/rust/pull/85608/files#diff-49412431a58f2ca62539b01666601bb34bcc133f35049a6c6d32c0c1ae891084R49</a></p>\n<p>You don't have to put <em>library</em> features into any list.  They're picked up automatically from the attributes.</p>",
        "id": 274262666,
        "sender_full_name": "scottmcm",
        "timestamp": 1646511207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/219381-t-libs/topic/First.20time.20going.20through.20FCP/near/274262666\">said</a>:</p>\n<blockquote>\n<p>For a partial stabilization, the best way is to change the feature name of the thing being stabilized, so that anyone on nightly enabling the feature still enables the not-yet-stabilized stuff.  Here's an example of such a stabilization PR: <a href=\"https://github.com/rust-lang/rust/pull/85608/files#diff-49412431a58f2ca62539b01666601bb34bcc133f35049a6c6d32c0c1ae891084R49\">https://github.com/rust-lang/rust/pull/85608/files#diff-49412431a58f2ca62539b01666601bb34bcc133f35049a6c6d32c0c1ae891084R49</a></p>\n<p>You don't have to put <em>library</em> features into any list.  They're picked up automatically from the attributes.</p>\n</blockquote>\n<p>i missed this before but that's a really good point, I'll update the partial stabilization section to specifically recommend that workflow</p>",
        "id": 274917728,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646959554
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/std-dev-guide/pull/32\">https://github.com/rust-lang/std-dev-guide/pull/32</a>, would appreciate a review if anyone has time (particularly from the perspective of making sure the grammar and spelling is all correct)</p>",
        "id": 274918220,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1646959967
    },
    {
        "content": "<p>Grammar and such looks good to me.  Left one process thought.</p>",
        "id": 274944930,
        "sender_full_name": "scottmcm",
        "timestamp": 1646987667
    },
    {
        "content": "<p>Aight, I updated <a href=\"https://github.com/rust-lang/std-dev-guide/pull/32\">https://github.com/rust-lang/std-dev-guide/pull/32</a> and posted a link to the rendered version of the document</p>",
        "id": 275026155,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647028783
    },
    {
        "content": "<p>Note <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> and <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I added links to <a href=\"https://github.com/rust-lang/rust/issues/88581#issuecomment-1054642118\">https://github.com/rust-lang/rust/issues/88581#issuecomment-1054642118</a> and <a href=\"https://github.com/rust-lang/rust/issues/29553\">https://github.com/rust-lang/rust/issues/29553</a> as good examples of stabilization reports. In the former case we need to update Josh's comment to include the API Summary and Experience report, and in the second case we need the entire comment for the stabilization report to be written so I'm just linking whole issue for now and we can always update that later to point to the specific comment</p>",
        "id": 275026474,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647028896
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> The top comment in the tracking issue includes the API summary.</p>",
        "id": 275026821,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647029059
    },
    {
        "content": "<p>okay, I'll update the stabilization report to just crosslink that</p>",
        "id": 275026841,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647029070
    },
    {
        "content": "<p>alright, I updated <a href=\"https://github.com/rust-lang/rust/issues/88581#issuecomment-1054642118\">https://github.com/rust-lang/rust/issues/88581#issuecomment-1054642118</a> <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> , for now the only thing that needs to be filled in is the experience report</p>",
        "id": 275029435,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647030409
    },
    {
        "content": "<p>Done.</p>",
        "id": 275032886,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647032290
    },
    {
        "content": "<p>awesome <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> ty</p>",
        "id": 275033968,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647032938
    },
    {
        "content": "<p>I went and also added some example usages of each API as well</p>",
        "id": 275033981,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647032945
    },
    {
        "content": "<p>though I couldn't find any good examples of <code>next_multiple_of</code></p>",
        "id": 275033989,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647032955
    },
    {
        "content": "<p>still looking tho</p>",
        "id": 275034015,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647032976
    },
    {
        "content": "<p>found one using num-integer</p>",
        "id": 275034155,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647033049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> I think any examples using num-integer are fine for this. I think we want to know that 1) people want these APIs and 2) people will be able to use the versions in std. Uses in num-integer address (1), and matching num-integer's behavior addresses (2).</p>",
        "id": 275034255,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647033110
    },
    {
        "content": "<p>yea</p>",
        "id": 275034309,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647033126
    },
    {
        "content": "<p>sorry, I didn't mean to imply I didn't want examples using crates with the same API. I just wanted to search for ones using the unstable feature first before falling back to the external crate equivalents</p>",
        "id": 275034410,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647033195
    },
    {
        "content": "<p>and I wanted to get an example usage of each portion of the API</p>",
        "id": 275034421,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647033203
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/First.20time.20going.20through.20FCP/near/275034410\">said</a>:</p>\n<blockquote>\n<p>sorry, I didn't mean to imply I didn't want examples using crates with the same API. I just wanted to search for ones using the unstable feature first before falling back to the external crate equivalents</p>\n</blockquote>\n<p>Fair. I think, in general, we're often not going to see <em>persistent</em> examples of using unstable library or language features.</p>",
        "id": 275043653,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647037952
    },
    {
        "content": "<p>I expect many experience reports to take the form of \"I locally tested out using this in my crate, and it seems to work.\". Because people can't actually use a nightly feature in their crate.</p>",
        "id": 275043722,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647037989
    },
    {
        "content": "<p>yea, but in those cases I'd appreciate if they could link to the branch where they did test it out</p>",
        "id": 275043836,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647038055
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby [she/her]</span> <a href=\"#narrow/stream/219381-t-libs/topic/First.20time.20going.20through.20FCP/near/275043836\">said</a>:</p>\n<blockquote>\n<p>yea, but in those cases I'd appreciate if they could link to the branch where they did test it out</p>\n</blockquote>\n<p>That would suggest they pushed that branch anywhere.</p>",
        "id": 275069589,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647048988
    },
    {
        "content": "<p>Every time I've tested a nightly-only feature, I just try changing my code to use it, <code>cargo +nightly test</code> and/or <code>cargo +nightly run</code>, and then <code>git checkout -f</code>.</p>",
        "id": 275069599,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1647049019
    },
    {
        "content": "<p>I've integrated the feedback from the libs-api team meeting in this commit: <a href=\"https://github.com/rust-lang/std-dev-guide/pull/32/commits/accbcbc2cda50ed8f836fbbae908016f31fb7d6c\">https://github.com/rust-lang/std-dev-guide/pull/32/commits/accbcbc2cda50ed8f836fbbae908016f31fb7d6c</a> and am fairly confident that the PR is now ready to merge</p>",
        "id": 275578970,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647465652
    }
]