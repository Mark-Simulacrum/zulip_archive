[
    {
        "content": "<p>Any thoughts on this? I know this predates Pin, but it seems like there should be a best practice here.</p>",
        "id": 185739973,
        "sender_full_name": "JP Sugarbroad",
        "timestamp": 1579119720
    },
    {
        "content": "<p>A -sys crate is just supposed to be a direct translation of a C API.</p>",
        "id": 185740395,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1579119979
    },
    {
        "content": "<p>it does not expose a safe interface. that would be the job of another crate consuming libz-sys</p>",
        "id": 185740418,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1579120000
    },
    {
        "content": "<p>in particular I believe this is because you can (generally) only have one libz-sys due to <code>links</code> in Cargo.toml, IIRC, so  you want it to be as thin a wrapper as possible</p>",
        "id": 185746897,
        "sender_full_name": "simulacrum",
        "timestamp": 1579124167
    },
    {
        "content": "<p>Yes, but now that we have Pin the crate should probably annotate non-movable types, no?</p>",
        "id": 185755232,
        "sender_full_name": "JP Sugarbroad",
        "timestamp": 1579130495
    },
    {
        "content": "<p>I think no, or at least I would not expect it to</p>",
        "id": 185755596,
        "sender_full_name": "simulacrum",
        "timestamp": 1579130858
    },
    {
        "content": "<p>like most sys crates basically have no \"Rust\" types in them</p>",
        "id": 185755615,
        "sender_full_name": "simulacrum",
        "timestamp": 1579130868
    },
    {
        "content": "<p>(modulo primitives)</p>",
        "id": 185755618,
        "sender_full_name": "simulacrum",
        "timestamp": 1579130873
    },
    {
        "content": "<p>Adding an !Unpin to that type isn't going to do much anyway - that only affects behavior when interacting with Pin in the first place.</p>",
        "id": 185779898,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1579141957
    },
    {
        "content": "<p>Won't it change it so Pin&lt;Box&lt;z_stream&gt;&gt; works correctly?</p>",
        "id": 185789198,
        "sender_full_name": "JP Sugarbroad",
        "timestamp": 1579155827
    },
    {
        "content": "<blockquote>\n<p>like most sys crates basically have no \"Rust\" types in them</p>\n</blockquote>\n<p>What is <code>z_stream</code> then?</p>",
        "id": 185789260,
        "sender_full_name": "JP Sugarbroad",
        "timestamp": 1579155889
    },
    {
        "content": "<p>note that whatever it is <code>links</code> really does in cargo.toml is under documented, and particularly you can link to a lib without a links entry.</p>",
        "id": 185789360,
        "sender_full_name": "Lokathor",
        "timestamp": 1579156062
    },
    {
        "content": "<p>Links in cargo just means only one package in your crate graph with that key can exist</p>",
        "id": 185807821,
        "sender_full_name": "simulacrum",
        "timestamp": 1579175901
    },
    {
        "content": "<p>z_stream is a direct transcription of the z_stream type in libz's header files.</p>",
        "id": 185808253,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1579176310
    },
    {
        "content": "<p>Perhaps I do not understand what you mean by \"Rust\" types.</p>",
        "id": 185846827,
        "sender_full_name": "JP Sugarbroad",
        "timestamp": 1579200929
    },
    {
        "content": "<p>No types that are not C-compatible, basically</p>",
        "id": 185861016,
        "sender_full_name": "simulacrum",
        "timestamp": 1579209231
    },
    {
        "content": "<p>i.e. repr(C)</p>",
        "id": 185861031,
        "sender_full_name": "simulacrum",
        "timestamp": 1579209240
    },
    {
        "content": "<p>and essentially only primitives from std/core</p>",
        "id": 185861098,
        "sender_full_name": "simulacrum",
        "timestamp": 1579209260
    },
    {
        "content": "<p>i.e., not String or CStr</p>",
        "id": 185861107,
        "sender_full_name": "simulacrum",
        "timestamp": 1579209269
    },
    {
        "content": "<p>or PhantomPinned</p>",
        "id": 185917520,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1579269446
    }
]