[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2645\">@T-libs-api</span> feelings towards marking <code>std::env::set_var</code> and <code>std::env::remove_var</code> as deprecated in the future? As in right now, before an <code>unsafe</code> replacement is present in <code>std</code>. There seems to be some disagreement over whether we should do this (<a href=\"https://github.com/rust-lang/rust/issues/92365\">#92365</a>), so I figure I may as well ping the relevant team to gauge feelings.</p>",
        "id": 266444883,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640886255
    },
    {
        "content": "<p>I would be in favor of a future deprecation, just not a present one.</p>",
        "id": 266446020,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1640887252
    },
    {
        "content": "<p>Yeah, for clarity I mean <code>#[rustc_deprecated(since = \"TBD\")]</code></p>",
        "id": 266446062,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640887280
    },
    {
        "content": "<p>That still causes the same warnings for all current users, though, right? It's not really all that different IMO from a user's perspective compared to just deprecating, IIUC what the effect is.</p>\n<p>I think we shouldn't do it until we have a plan or set of replacements in place, for the same reasons deprecating the current functions isn't yet a good idea.</p>",
        "id": 266446409,
        "sender_full_name": "simulacrum",
        "timestamp": 1640887515
    },
    {
        "content": "<p>It would cause a warning if <code>#![warn(future_deprecated)]</code> is enabled (which I do not believe is default).</p>",
        "id": 266446429,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640887547
    },
    {
        "content": "<p>It doesn't trigger <code>#![warn(deprecated)]</code></p>",
        "id": 266446481,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1640887564
    },
    {
        "content": "<p>Hm, ok</p>",
        "id": 266446482,
        "sender_full_name": "simulacrum",
        "timestamp": 1640887565
    },
    {
        "content": "<p>yeah, sounds like that's the case. I'm not sure we'll actually end up deprecating the current functions, and the effect of adding such a label on them seems pretty minimal, but it seems oK then</p>",
        "id": 266446523,
        "sender_full_name": "simulacrum",
        "timestamp": 1640887644
    },
    {
        "content": "<p>That particular PR looks more minimal than what I'd expect though -- and maybe regardless of the actual deprecated attribute, adding a paragraph to the docs about the soundness / problems with these functions as they're implemented today seems like a good start to me</p>",
        "id": 266446626,
        "sender_full_name": "simulacrum",
        "timestamp": 1640887717
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/219381-t-libs/topic/future.20deprecation.20of.20.60env.3A.3Aset_var.60/near/266446626\">said</a>:</p>\n<blockquote>\n<p>adding a paragraph to the docs about the soundness / problems with these functions as they're implemented today seems like a good start to me</p>\n</blockquote>\n<p>There appears to be at least some such documentation already.</p>",
        "id": 266449127,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1640889910
    }
]