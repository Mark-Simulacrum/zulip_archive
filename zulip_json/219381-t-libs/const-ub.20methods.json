[
    {
        "content": "<p>Now that <a href=\"https://github.com/rust-lang/rfcs/pull/3016\">RFC 3016</a> has been merged, is there any reason that methods like <code>core::str::from_utf8_unchecked</code> can't be stabilized as <code>const</code>? This specific one is <a href=\"https://github.com/rust-lang/rust/issues/75196\">#75196</a>, but there are plenty of other methods that I imagine are only blocked on this.</p>",
        "id": 240147906,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621924953
    },
    {
        "content": "<p>Notably, whether the compiler can actively detect the UB and throw a compile error is irrelevant â€” it's \"okay\" (in that it's the user's problem) to produce invalid values.</p>",
        "id": 240147987,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621925038
    },
    {
        "content": "<p>started the FCP process and pinged the const eval wg. let's see what they say :)</p>",
        "id": 240152105,
        "sender_full_name": "Mara",
        "timestamp": 1621928119
    },
    {
        "content": "<p>Works for me. If this one is okay, then others like const transmute, const union, and many others should be as well.</p>",
        "id": 240152483,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621928353
    },
    {
        "content": "<p>They are all OK, we just didn't have the capacity to act yet. We should do unions, deref and transmute at the same time though</p>",
        "id": 240166146,
        "sender_full_name": "oli",
        "timestamp": 1621937411
    },
    {
        "content": "<p>The UTF8 functions are different though, they can be stabilized without the others, as its unsoundness is library unsoundness</p>",
        "id": 240166228,
        "sender_full_name": "oli",
        "timestamp": 1621937482
    },
    {
        "content": "<p>I'll look into creating a PR that stabilizes those three. Stabilization of methods can come separately so as to avoid a megalith of a PR.</p>",
        "id": 240171018,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1621940783
    },
    {
        "content": "<p>See also the discussion in <a class=\"stream\" data-stream-id=\"146212\" href=\"/#narrow/stream/146212-t-compiler.2Fconst-eval\">#t-compiler/const-eval</a></p>",
        "id": 240171481,
        "sender_full_name": "oli",
        "timestamp": 1621941064
    }
]