[
    {
        "content": "<p>Hello!<br>\nI needed a way to remove a range from a <code>Vec&lt;u8&gt;</code> and I ended up understanding that I should use <code>Vec::drain</code>, however that does seem overly complicated for basically just a memmove. Moreover, whats the best way to consume the iterator returned by drain? I found <code>https://github.com/rust-lang/rust/pull/48945</code> which seem to imply I should call <code>.drop()</code> on the returned iterator? Even if my elements are <code>T: Copy</code>?</p>",
        "id": 206745799,
        "sender_full_name": "marmeladema",
        "timestamp": 1597263525
    },
    {
        "content": "<p>I think you can literally do <code>the_vec.drain(start..end);</code> the returned iterator is dropped because there is no owner</p>",
        "id": 206746154,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1597263671
    },
    {
        "content": "<p>I guess I could also implement remove_range using copy_within + unsafe call to set_len. It's a bit unfortunate that I have to rely of unsafe code for what seems to be a safe operation</p>",
        "id": 206746180,
        "sender_full_name": "marmeladema",
        "timestamp": 1597263683
    },
    {
        "content": "<p>oh</p>",
        "id": 206746197,
        "sender_full_name": "marmeladema",
        "timestamp": 1597263693
    },
    {
        "content": "<p>Test that out, at least.</p>",
        "id": 206746330,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1597263739
    },
    {
        "content": "<p>I see <code>Note 1: The element range is removed even if the iterator is only partially consumed or not consumed at all.</code></p>",
        "id": 206746334,
        "sender_full_name": "marmeladema",
        "timestamp": 1597263740
    },
    {
        "content": "<p>For more complicated cases, there's <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain_filter\">https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain_filter</a></p>",
        "id": 206746370,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1597263760
    },
    {
        "content": "<p>I don't understand how <code>Note 2: It is unspecified how many elements are removed from the vector if the Drain value is leaked.</code> relates to <code>Note 1</code></p>",
        "id": 206746450,
        "sender_full_name": "marmeladema",
        "timestamp": 1597263797
    },
    {
        "content": "<p>Either all elements are removed not matter what you do with the iterator, or not</p>",
        "id": 206746512,
        "sender_full_name": "marmeladema",
        "timestamp": 1597263822
    },
    {
        "content": "<p>It might be an english issue, but I feel like note 2 kind of contradicts note 1?</p>",
        "id": 206746617,
        "sender_full_name": "marmeladema",
        "timestamp": 1597263852
    },
    {
        "content": "<p>Note 2 says that if you, for example, do <code>mem::forget(vec.drain(start..end))</code> you might end up with an empty vector</p>",
        "id": 206746937,
        "sender_full_name": "simulacrum",
        "timestamp": 1597264017
    },
    {
        "content": "<p>(or a completely full one, with no elements removed, or really anything in between)</p>",
        "id": 206746965,
        "sender_full_name": "simulacrum",
        "timestamp": 1597264035
    },
    {
        "content": "<p>Ok</p>",
        "id": 206747100,
        "sender_full_name": "marmeladema",
        "timestamp": 1597264092
    },
    {
        "content": "<p>thank you!</p>",
        "id": 206747161,
        "sender_full_name": "marmeladema",
        "timestamp": 1597264133
    },
    {
        "content": "<p>I think everything makes sense now :) Maybe the doc could use some more examples though</p>",
        "id": 206747211,
        "sender_full_name": "marmeladema",
        "timestamp": 1597264169
    },
    {
        "content": "<p>I'll see what I can do if I ever find the time to improve it</p>",
        "id": 206747296,
        "sender_full_name": "marmeladema",
        "timestamp": 1597264204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281572\">@marmeladema</span> I remember modifying exactly those docs recently, I donâ€™t think the changes have landed in stable yet</p>",
        "id": 206760557,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1597271537
    },
    {
        "content": "<p>Yep: <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.drain\">https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.drain</a></p>",
        "id": 206760787,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1597271741
    },
    {
        "content": "<p>oh great, its clearer now!</p>",
        "id": 206760924,
        "sender_full_name": "marmeladema",
        "timestamp": 1597271834
    },
    {
        "content": "<p>thank you!</p>",
        "id": 206760930,
        "sender_full_name": "marmeladema",
        "timestamp": 1597271842
    },
    {
        "content": "<p>I have nothing to improve anymore :P</p>",
        "id": 206761030,
        "sender_full_name": "marmeladema",
        "timestamp": 1597271920
    }
]