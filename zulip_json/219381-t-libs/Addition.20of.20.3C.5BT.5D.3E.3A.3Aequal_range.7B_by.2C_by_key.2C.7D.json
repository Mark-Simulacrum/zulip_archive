[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133169\">@matklad</span> in one of his videos about Rust Analyzer proposed adding <code>equal_range*</code> functions for slice in std. I've decided to look into this. There is an old discussion in <a href=\"https://github.com/rust-lang/rfcs/issues/2184\">rfcs/#2184</a>, but it doesn't come to the conclusion on whatever <code>equal_range</code> should be added.</p>\n<p>Should I make a PR adding <code>equal_range*</code> functions or it isn't worth adding to std? (there already exist crates that provide such functions)</p>",
        "id": 257593386,
        "sender_full_name": "Waffle Lapkin",
        "timestamp": 1634240506
    },
    {
        "content": "<p>I'd still like to see it, for what little that's worth.  That said, we do have <code>https://doc.rust-lang.org/stable/std/primitive.slice.html#method.partition_point</code> now, which avoids a bunch of the problems of <code>binary_search</code> -- that could be an argument for (since we're adding more related methods) or against (since you can use partition_point to do it) adding equal_range.</p>",
        "id": 257594511,
        "sender_full_name": "scottmcm",
        "timestamp": 1634241007
    }
]