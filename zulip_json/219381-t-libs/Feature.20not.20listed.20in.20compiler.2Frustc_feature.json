[
    {
        "content": "<p>Hello. I was just going to put together my first stabilization PR, but ran into a problem when following <a href=\"https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\">the instructions</a>. One of the first steps is to move to feature from \"active\" to \"accepted\". Only one problem â€” the feature isn't listed. I've confirmed the feature does in fact work on nightly, so I'm not sure what's going on. The feature in question is <code>unsigned_abs</code> if it matters.</p>",
        "id": 222516597,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1610498399
    },
    {
        "content": "<p>Just ran across the t-compiler stream. I'll post there, as it seems more appropriate in that location.</p>",
        "id": 222516825,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1610498538
    },
    {
        "content": "<p>that feature-gate listing is only for compiler features.  You don't need to touch it for a library stabilization</p>",
        "id": 222521369,
        "sender_full_name": "scottmcm",
        "timestamp": 1610502014
    },
    {
        "content": "<p>A library stabilization PR is usually pretty simple; here's an example of one I did a while back in case it helps: <a href=\"https://github.com/rust-lang/rust/pull/58074/files\">https://github.com/rust-lang/rust/pull/58074/files</a></p>",
        "id": 222521549,
        "sender_full_name": "scottmcm",
        "timestamp": 1610502135
    },
    {
        "content": "<p>They informed me of that over there, thanks! One question, though. I'm trying to stabilize <code>rem_euclid</code> and similar as <code>const fn</code>. Apparently the <code>#[allow_internal_unstable]</code> attribute can only be applied to a macro? How would one go about stabilizing something that depends on an intrinsic (not publicly, of course)? Must the intrinsic itself be \"stabilized\" as <code>const fn</code>, despite the fact that intrinsics are never actually stable?</p>",
        "id": 222526981,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1610507020
    },
    {
        "content": "<p>I'm not sure how const-stabilization works for intrinsics, sorry.</p>",
        "id": 222533993,
        "sender_full_name": "scottmcm",
        "timestamp": 1610514013
    },
    {
        "content": "<p>You might ask in <a class=\"stream\" data-stream-id=\"146212\" href=\"/#narrow/stream/146212-t-compiler.2Fconst-eval\">#t-compiler/const-eval</a> -- they'd probably have the best current answer.</p>",
        "id": 222534016,
        "sender_full_name": "scottmcm",
        "timestamp": 1610514044
    }
]