[
    {
        "content": "<p>Hi, I found out that </p>\n<div class=\"codehilite\"><pre><span></span><code>pub fn char_into_string() -&gt; String {\n    &#39;x&#39;.into()\n}\n</code></pre></div>\n\n\n<p>Does not work</p>\n<div class=\"codehilite\"><pre><span></span><code> &#39;x&#39;.into()\n\n  |         ^^^^ the trait `std::convert::From&lt;char&gt;` is not implemented for `std::string::String`\n</code></pre></div>\n\n\n<p>while <code>'x'.to_string()</code> works fine.</p>\n<p>Are there any objections to making this work?</p>",
        "id": 201213027,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1592436360
    },
    {
        "content": "<p>would something like this be enough?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#[stable(feature = </span><span class=\"s\">&quot;from_char_for_string&quot;</span><span class=\"cp\">, since = </span><span class=\"s\">&quot;1.46.0&quot;</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"nb\">From</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"cp\">#[inline]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">from</span><span class=\"p\">(</span><span class=\"n\">c</span>: <span class=\"kt\">char</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 201216428,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1592439488
    },
    {
        "content": "<p>(+ some tests of course..)</p>",
        "id": 201216444,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1592439513
    },
    {
        "content": "<p>yeah should be good</p>",
        "id": 201221222,
        "sender_full_name": "simulacrum",
        "timestamp": 1592445496
    }
]