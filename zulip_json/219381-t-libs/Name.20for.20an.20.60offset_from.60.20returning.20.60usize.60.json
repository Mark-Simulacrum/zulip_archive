[
    {
        "content": "<p>I was looking at the new <code>from_ptr_range</code>'s implementation, and it's calling <code>offset_from</code>: <a href=\"https://github.com/rust-lang/rust/pull/89793/files#diff-b89f9f6546b170c60c697982f8df104a866c66f08d97acb0df1c55a26ae3b83cR289\">https://github.com/rust-lang/rust/pull/89793/files#diff-b89f9f6546b170c60c697982f8df104a866c66f08d97acb0df1c55a26ae3b83cR289</a></p>\n<p>But it could, <a href=\"https://github.com/rust-lang/rust/blob/1b14fd3b1063771923e2fcf2110961bfa5ba4ad0/library/core/src/slice/iter/macros.rs#L25-L29\">like the slice iterators</a>, be slightly more optimal since it's already UB for it to be called with <code>end &lt; begin</code>, and thus it doesn't need to do a <em>signed</em> length division.</p>\n<p>I think it would be nice to add a new API for pointers to do that -- and it's consistent with how we used to just have <code>offset</code> taking <code>isize</code>, but now we have <code>add</code> &amp; <code>sub</code> taking <code>usize</code> too.  Maybe it could be called <code>sub_ptr</code>?</p>\n<p>Thoughts?  Better name ideas?</p>",
        "id": 274176111,
        "sender_full_name": "scottmcm",
        "timestamp": 1646421397
    },
    {
        "content": "<p>how about <code>offset_from_u</code>?</p>",
        "id": 274177661,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1646422225
    },
    {
        "content": "<p>I feel like just <code>u</code> is unusual, for core names.  The precedent from <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.unsigned_abs\">https://doc.rust-lang.org/std/primitive.i32.html#method.unsigned_abs</a> says to me that that direction might be spelled more like <code>unsigned_offset_from</code>, or something.</p>",
        "id": 274178175,
        "sender_full_name": "scottmcm",
        "timestamp": 1646422489
    },
    {
        "content": "<p>how about <code>index_from</code>? especially since this is in \"units of <code>T</code>\"</p>",
        "id": 274201596,
        "sender_full_name": "cuviper",
        "timestamp": 1646435555
    },
    {
        "content": "<p>Well, I made a PR: <a href=\"https://github.com/rust-lang/rust/pull/95837\">https://github.com/rust-lang/rust/pull/95837</a></p>\n<p>Feel free to put name recommendations in there.</p>",
        "id": 278397269,
        "sender_full_name": "scottmcm",
        "timestamp": 1649493401
    },
    {
        "content": "<p>Huh, I should have <code>rg</code>'d sooner -- essentially every use of <code>ptr::offset_of</code> is followed by <code>as usize</code>: <a href=\"https://github.com/rust-lang/rust/search?q=offset_from+path%3Alibrary\">https://github.com/rust-lang/rust/search?q=offset_from+path%3Alibrary</a></p>\n<p>The main exceptions are those where it's a different <code>offset_of</code> that subtracts slice lengths, and thus isn't the pointer <code>offset_of</code> at all:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/4bb685e4714a2b310774f45c3d023d1743de8bd0/library/core/src/num/dec2flt/common.rs#L87-L90\">https://github.com/rust-lang/rust/blob/4bb685e4714a2b310774f45c3d023d1743de8bd0/library/core/src/num/dec2flt/common.rs#L87-L90</a></p>",
        "id": 278398782,
        "sender_full_name": "scottmcm",
        "timestamp": 1649495720
    }
]