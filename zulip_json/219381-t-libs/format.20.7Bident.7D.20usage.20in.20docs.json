[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/93950\">https://github.com/rust-lang/rust/pull/93950</a> was filed to update a bunch of format strings to the new inline capture syntax (<code>{foo}</code>). One thought I had is that if users are copy/pasting to their own environments or similarly learning Rust, they may for whatever reason not be on the latest stable, the error message was not great:</p>\n<div class=\"codehilite\"><pre><span></span><code>fn foo(test: u8) -&gt; String {\n    format!(&quot;bar {test}&quot;)\n}\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>error: there is no argument named `test`\n --&gt; &lt;source&gt;:2:18\n  |\n2 |     format!(&quot;bar {test}&quot;)\n  |                  ^^^^^^\n</code></pre></div>\n<p>So that might be pretty confusing for them.</p>",
        "id": 271850208,
        "sender_full_name": "simulacrum",
        "timestamp": 1644855651
    },
    {
        "content": "<p>yeah, it might make sense to wait a bit until more people are on a version that supports it.</p>",
        "id": 271850819,
        "sender_full_name": "Mara",
        "timestamp": 1644855931
    },
    {
        "content": "<p><del>and make rustc delete itself when it's older than six weeks, to prevent these things in the future ;)</del></p>",
        "id": 271850920,
        "sender_full_name": "Mara",
        "timestamp": 1644855980
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/219381-t-libs/topic/format.20.7Bident.7D.20usage.20in.20docs/near/271850208\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/93950\">https://github.com/rust-lang/rust/pull/93950</a> was filed to update a bunch of format strings to the new inline capture syntax (<code>{foo}</code>). One thought I had is that if users are copy/pasting to their own environments or similarly learning Rust, they may for whatever reason not be on the latest stable, the error message was not great:</p>\n<div class=\"codehilite\"><pre><span></span><code>fn foo(test: u8) -&gt; String {\n    format!(&quot;bar {test}&quot;)\n}\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>error: there is no argument named `test`\n --&gt; &lt;source&gt;:2:18\n  |\n2 |     format!(&quot;bar {test}&quot;)\n  |                  ^^^^^^\n</code></pre></div>\n<p>So that might be pretty confusing for them.</p>\n</blockquote>\n<p>I honestly never thought about that! Though I thought it gave you a warning  about that? I believe if you were on an older release when the feature was first announced, stating that inline capture strings are not yet supported, but will be when Edition 2021 comes around.</p>\n<p>As I've stated in the PR, willing to revert changes where need be :)</p>",
        "id": 271858670,
        "sender_full_name": "T•Ø•R•Ü•S",
        "timestamp": 1644859207
    },
    {
        "content": "<p>I think the updates that <em>aren't</em> in doc-comments are clearly good.</p>\n<p>I don't think it's worth waiting all that long to use new language features in the docs.  After all, if they're using latest docs (instead of versioned docs that match their toolchain) then they're also seeing a bunch of types and methods that they also can't use on their version.</p>\n<p>Maybe we have precedent from using <code>[1, 2].into_iter()</code> instead of <code>IntoIterator::into_iter([1, 2])</code>?</p>",
        "id": 271884837,
        "sender_full_name": "scottmcm",
        "timestamp": 1644870990
    },
    {
        "content": "<p>I think the latter is much lighter weight (and had a better diagnostic), personally</p>",
        "id": 271895661,
        "sender_full_name": "simulacrum",
        "timestamp": 1644876067
    },
    {
        "content": "<p>I'm probably just not used to seeing it just yet - it was a little surprising to me in a few cases to see it written the new way</p>",
        "id": 271895697,
        "sender_full_name": "simulacrum",
        "timestamp": 1644876090
    },
    {
        "content": "<p>I personally think we should use new features in doc comments as soon as they're stable. (We shouldn't use nightly only features in unrelated doc comments.)</p>",
        "id": 271915759,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644889531
    },
    {
        "content": "<p>Documentation is for the current stable version, and it may also document functions that don't exist in previous versions.</p>",
        "id": 271915778,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644889548
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>. If it's stable, it should be able to be used in docs. Users can always load older versions of the docs if they want.</p>",
        "id": 271917691,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1644891241
    },
    {
        "content": "<p>And it may be incentive to upgrade ;-)</p>",
        "id": 271918325,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1644891755
    },
    {
        "content": "<p>I think <code>rustc</code> should nag users to update in order to avoid any such confusions (and that nagging should also include a message on how to turn it off). It should be highlighted when something like an unexpected character pops up, which could be new syntax in use.</p>",
        "id": 271932662,
        "sender_full_name": "T•Ø•R•Ü•S",
        "timestamp": 1644907161
    },
    {
        "content": "<p>** It, in this case being the message that nags the user.</p>",
        "id": 271932674,
        "sender_full_name": "T•Ø•R•Ü•S",
        "timestamp": 1644907182
    },
    {
        "content": "<p>That doesn't really seem plausible in general. How would Rust 1.59 know what abilities Rust 1.99 has?</p>",
        "id": 271985581,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1644936997
    },
    {
        "content": "<p>Feels like every error would need to say \"or upgrade, maybe?\" and if every error says that, then there's not much value added.</p>",
        "id": 271985692,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1644937046
    }
]