[
    {
        "content": "<p>So I ran a perf test on a PR that is adding <code>#[track_caller]</code> to <code>Once</code> and it came up with a regression on two of the benchmarks: <a href=\"https://github.com/rust-lang/rust/pull/94236#issuecomment-1048300388\">https://github.com/rust-lang/rust/pull/94236#issuecomment-1048300388</a></p>",
        "id": 272885597,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645575353
    },
    {
        "content": "<p>and I could use some help figuring out how to interpret these results, my guess from looking at them is that this isn't significant, but I kinda want to try digging into the details on the specific benchmarks to understand how the PR caused them to regress</p>",
        "id": 272885702,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645575407
    },
    {
        "content": "<p>I tried looking for the source of the <code>alloc</code> and <code>chalk_solve</code> benchmarks in <a href=\"https://github.com/rust-lang/rustc-perf\">https://github.com/rust-lang/rustc-perf</a> and couldn't find either of them, guessing I'm looking in the wrong place</p>",
        "id": 272885901,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645575551
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> and <span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span></p>",
        "id": 272885984,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645575610
    },
    {
        "content": "<p>That might be fine, tbh -- those regressions seem fairly minor.</p>\n<p>It's not surprising that adding #[track_caller] to things has a performance cost, it generally prevents optimizations of stuff like deduplicating branches (since it needs to pass something with the correct line info), among other things. This might increase the amount of stuff llvm has to chew on, or might just slow the compiler down (by fractions of a percent) directly.</p>",
        "id": 272886244,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1645575823
    },
    {
        "content": "<p>I haven't done much perf triage, but while it does look curious that one is singled out consistently, I think it's small enough not to worry about it.</p>",
        "id": 272886326,
        "sender_full_name": "cuviper",
        "timestamp": 1645575876
    },
    {
        "content": "<p>chalk solve and alloc are crates built during rustc bootstrap; those results are likely noise</p>",
        "id": 272888627,
        "sender_full_name": "simulacrum",
        "timestamp": 1645577571
    },
    {
        "content": "<p>oh the testcase is just building those crates</p>",
        "id": 272888685,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645577606
    },
    {
        "content": "<p>i see</p>",
        "id": 272888690,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645577611
    },
    {
        "content": "<p>oh I only looked at the <code>externs</code> part of the results</p>",
        "id": 272888710,
        "sender_full_name": "cuviper",
        "timestamp": 1645577627
    },
    {
        "content": "<p>The externs benchmark is probably small enough to be okay</p>",
        "id": 272888717,
        "sender_full_name": "simulacrum",
        "timestamp": 1645577631
    },
    {
        "content": "<p>oh i wasn't even looking at the right part of the data</p>",
        "id": 272888869,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645577740
    },
    {
        "content": "<p>so the first section is actual benchmarks, and then the long list of things below that is just timings from the bootstrap build?</p>",
        "id": 272888950,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645577787
    },
    {
        "content": "<p>haha, I found the externs benchmark</p>",
        "id": 272889110,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645577910
    },
    {
        "content": "<p>okay so lmk if I'm understanding this right. The perf suite works by taking the compiler from your build and uses that to compile all of the benchmarks as well as bootstrap the compiler, and then the measured perf is how well your version of the compiler did at building all of those testcases?</p>",
        "id": 272889282,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645578020
    },
    {
        "content": "<p>Essentially, yes.</p>",
        "id": 272889575,
        "sender_full_name": "simulacrum",
        "timestamp": 1645578253
    },
    {
        "content": "<p>cool okay, tyty</p>",
        "id": 272890036,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1645578667
    }
]