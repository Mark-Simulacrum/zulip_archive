[
    {
        "content": "<p>marking something as stable will make it work in the next release, if you specify a future date, idk if we error, but it  any case it will still be stable</p>",
        "id": 253852083,
        "sender_full_name": "oli",
        "timestamp": 1631954652
    },
    {
        "content": "<p>That's what I suspected, but wasn't sure.</p>",
        "id": 253852127,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1631954748
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245610\">Jacob Pratt</span> has marked this topic as resolved.</p>",
        "id": 253852194,
        "sender_full_name": "Notification Bot",
        "timestamp": 1631954789
    },
    {
        "content": "<p>I recall some attribute working as expected with a future version number. Maybe it’s <code>#[rustc_deprecated]</code>?</p>\n<p>For <code>#[stable]</code> if using a future version number is a bug, maybe that’s something tidy could check for</p>",
        "id": 253855500,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1631958307
    },
    {
        "content": "<p>There is an option to mark something as \"deprecated in the future\", though I can't think of the syntax off-hand. It doesn't specify an actual version.</p>",
        "id": 253855852,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1631958709
    },
    {
        "content": "<blockquote>\n<p>but unquestionably needs more time to let the inherent-over-trait method resolution settle by users upgrading <code>num-integer</code>.</p>\n</blockquote>\n<p>There's no upgrade for <code>num-integer</code> though. I published a fix in <code>num-bigint</code> to use explicit trait calls, but all users of the conflicting <code>Integer</code> methods have to do the same. I don't think there's anything I could do in <code>num-integer</code> to resolve this.</p>",
        "id": 253874831,
        "sender_full_name": "cuviper",
        "timestamp": 1631978104
    },
    {
        "content": "<p>Well, I suppose a breaking change to <code>Integer</code> could give it the same signature, with values instead of references, but I wouldn't want to do that because it's not good for types like <code>BigInt</code>.</p>",
        "id": 253875194,
        "sender_full_name": "cuviper",
        "timestamp": 1631978518
    },
    {
        "content": "<p>yeah, that crate, not that that was the point. A breaking change to <code>Integer</code> doesn't make much sense as you of course realized.</p>",
        "id": 253897596,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1632003580
    }
]