[
    {
        "content": "<p>I'm not sure if there's any interest, but while further optimizing number conversion routines, I noticed that the decimal implementation in <code>dec2flt</code> (which is only for very rare cases) is fairly slow, and can be optimized by ~6-45x using relatively simple big-integer arithmetic. I've described the issue <a href=\"https://github.com/rust-lang/rust/issues/88656\">here</a>, and if there's any interest would be more than happy to submit a PR.</p>",
        "id": 252195915,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1630944622
    },
    {
        "content": "<p>That is a very impressive and detailed write-up.</p>",
        "id": 252201265,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1630947884
    },
    {
        "content": "<p>I think we'd love to have a faster algorithm for decimal-to-float conversion, as long as it comes with benchmarks showing that.</p>",
        "id": 252201356,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1630947933
    },
    {
        "content": "<p>are those halfway floats esoteric edge-cases or do large amounts of them occur in realworld serialized data?</p>",
        "id": 252202803,
        "sender_full_name": "The 8472",
        "timestamp": 1630948690
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330154\">The 8472</span> <a href=\"#narrow/stream/219381-t-libs/topic/Slow-Path.20Float.20Parsing/near/252202803\">said</a>:</p>\n<blockquote>\n<p>are those halfway floats esoteric edge-cases or do large amounts of them occur in realworld serialized data?</p>\n</blockquote>\n<p>Very esoteric edge-cases. They're very rare in real-world cases, but when they do occur, they can be much, much slower than faster cases. For example, the string <code>8.988465674311580536e307</code>parses in ~30ns, while the string <code>8.9884656743115805365666807213e307</code> takes ~350ns with my implementation, and generally ~15us+ with most other implementations, including netlib's dtoa, fast_float (the C++ implementation upon which Rust's dec2flt is based on), as well as Rust core.</p>",
        "id": 252203754,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1630949222
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/219381-t-libs/topic/Slow-Path.20Float.20Parsing/near/252201356\">said</a>:</p>\n<blockquote>\n<p>I think we'd love to have a faster algorithm for decimal-to-float conversion, as long as it comes with benchmarks showing that.</p>\n</blockquote>\n<p>Wonderful, I'll write the implementation then, and show benchmarks demonstrating that.</p>",
        "id": 252203893,
        "sender_full_name": "Alexander Huszagh (He/Him)",
        "timestamp": 1630949290
    }
]