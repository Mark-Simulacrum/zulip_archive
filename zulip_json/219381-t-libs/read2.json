[
    {
        "content": "<p>There are several \"read2\" implementation (or copies of the same one) floating around -- e.g., <a href=\"https://github.com/rust-lang/cargo/blob/master/src/cargo/util/read2.rs\">Cargo</a>, <a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/pipe.rs\">std</a>, <a href=\"https://github.com/rust-lang/rust/blob/master/src/tools/compiletest/src/read2.rs\">compiletest 1</a> and <a href=\"https://github.com/rust-lang/rust/blob/d462551a8600e57d8b6f87e71ea56868bc5da6cf/src/tools/compiletest/src/runtest.rs#L3515\">2</a>.</p>\n<p>I would like to propose adding them -- in some fashion -- to std, perhaps as a function on <a href=\"https://doc.rust-lang.org/nightly/std/process/struct.Child.html\">std::process::Child</a> to start.</p>\n<p>Do we feel that there's interest in this? I would be willing to try and invest some time in hashing out a reasonable API that works for the primary use cases if so. Bringing this up because I just ran across another case where I wanted this -- to stream stdout/err in perf.rlo's logging -- and would rather avoid copying things. I'd also be open to pulling this out to a crate if we think that's the right next step here -- I personally think it's a good fit for builtin functionality though as it's not too niche and relatively platform-specific.</p>",
        "id": 202744886,
        "sender_full_name": "simulacrum",
        "timestamp": 1593724187
    },
    {
        "content": "<p>i would be interested, yeah. i would use it in ripgrep instead of using threads to achieve the same goal: <a href=\"https://github.com/BurntSushi/ripgrep/blob/master/crates/cli/src/process.rs\">https://github.com/BurntSushi/ripgrep/blob/master/crates/cli/src/process.rs</a></p>",
        "id": 202805931,
        "sender_full_name": "BurntSushi",
        "timestamp": 1593784494
    },
    {
        "content": "<p>Okay! I'll add it to my todo list then.</p>",
        "id": 202986625,
        "sender_full_name": "simulacrum",
        "timestamp": 1594041283
    }
]