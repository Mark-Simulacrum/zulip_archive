[
    {
        "content": "<p>I'm deliberating whether <a href=\"https://github.com/rust-lang/rust/issues/77773\">https://github.com/rust-lang/rust/issues/77773</a> is something I think we ought to prioritise investigating before stabilising <code>min_const_generics</code>. I do think this is a frustrating issue that we're going to have to fix at <em>some</em> point, in which case the sooner the better.</p>",
        "id": 212924028,
        "sender_full_name": "varkor",
        "timestamp": 1602348657
    },
    {
        "content": "<p>I personally don't think we have to get this to work before stabilizing <code>min_const_generics</code>but also would be happy if we get this to work before than <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n<p>I don't think that I frequently hit that issue and as long as the error message is good enough I don't mind the current limitation</p>",
        "id": 212955242,
        "sender_full_name": "lcnr",
        "timestamp": 1602404710
    },
    {
        "content": "<p>I do want to rework the way we emit generic arg mismatch errors though</p>",
        "id": 212955247,
        "sender_full_name": "lcnr",
        "timestamp": 1602404726
    },
    {
        "content": "<p>The implementation until lowering seems straightforward enough. I can't picture exactly how it should disambiguate during type-checking yet (maybe just lazily). I would try this myself, but I won't have much time in the next few weeks. (Maybe after that if no-one else has.)</p>",
        "id": 212961933,
        "sender_full_name": "varkor",
        "timestamp": 1602416161
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/260443-project-const-generics/topic/multi-segment.20paths.20in.20const.20generic.20arguments/near/212955247\">said</a>:</p>\n<blockquote>\n<p>I do want to rework the way we emit generic arg mismatch errors though</p>\n</blockquote>\n<p>I do think this would go a long way to improving the situation.</p>",
        "id": 212961976,
        "sender_full_name": "varkor",
        "timestamp": 1602416194
    },
    {
        "content": "<p>yeah, I previously talked with <span class=\"user-mention\" data-user-id=\"326189\">@jknodt</span> about this and the current way is really unfortunate. It works quite well with type and lt params, but const params are too similar to type params for this to stay true.</p>",
        "id": 212961998,
        "sender_full_name": "lcnr",
        "timestamp": 1602416272
    },
    {
        "content": "<p>think I should be able to get to this in the next week</p>",
        "id": 212962040,
        "sender_full_name": "lcnr",
        "timestamp": 1602416302
    },
    {
        "content": "<p>Specifically for the way the type/const params have their order checked seems to depend on types &amp; consts to be similar and I assume a similar treatment throughout a lot of the code</p>",
        "id": 212977286,
        "sender_full_name": "jknodt",
        "timestamp": 1602442861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/260443-project-const-generics/topic/multi-segment.20paths.20in.20const.20generic.20arguments/near/212962040\">said</a>:</p>\n<blockquote>\n<p>think I should be able to get to this in the next week</p>\n</blockquote>\n<p>looks like life got in the way so I won't get to it in the next few weeks</p>",
        "id": 213580245,
        "sender_full_name": "lcnr",
        "timestamp": 1602864452
    },
    {
        "content": "<p>if someone else wants to look into making the current error less noisy, maybe by merging the ty and ct mismatch errors into 1 this is probably good enough for now</p>",
        "id": 213580445,
        "sender_full_name": "lcnr",
        "timestamp": 1602864547
    }
]