[
    {
        "content": "<p>starting to work on unused substs again today. wrt filtering the predicates we probably want something like  <a href=\"user_uploads/4715/L9wKI2pAz2gxePa6YELH_eUh/a.png\">a.png</a>  .  Going to first actually implement the \"only lazily figuring out the used substs\" part though</p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/4715/L9wKI2pAz2gxePa6YELH_eUh/a.png\" title=\"a.png\"><img src=\"user_uploads/4715/L9wKI2pAz2gxePa6YELH_eUh/a.png\"></a></div>",
        "id": 246320008,
        "sender_full_name": "lcnr",
        "timestamp": 1626521071
    },
    {
        "content": "<p>i think that's how the query graph should look in the end, not sure though <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 246320103,
        "sender_full_name": "lcnr",
        "timestamp": 1626521181
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> Welcome back btw. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 246328385,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1626533826
    },
    {
        "content": "<p>thanks ^^ still taking my time with everything to not instantly get back to being overwhelmed, but i do enjoy being able to work on stuff again</p>",
        "id": 246328446,
        "sender_full_name": "lcnr",
        "timestamp": 1626533927
    },
    {
        "content": "<p>for those interested, the current status is <a href=\"https://github.com/lcnr/rust/pull/4\">https://github.com/lcnr/rust/pull/4</a></p>",
        "id": 246342774,
        "sender_full_name": "lcnr",
        "timestamp": 1626554120
    },
    {
        "content": "<p>dealing with unused substs seems to <em>mostly</em>? work</p>",
        "id": 246342790,
        "sender_full_name": "lcnr",
        "timestamp": 1626554150
    },
    {
        "content": "<p>however, while I did not intend any changes in behavior, there are two I wasn't able to figure out yet</p>",
        "id": 246342830,
        "sender_full_name": "lcnr",
        "timestamp": 1626554174
    },
    {
        "content": "<ul>\n<li>an ICE in <code>issue-39211.rs</code> which seems to happen because we try to eval <code>M::Row::DIM</code> without the needed param env?!?, which just seems wrong to me.</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">constant</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"n\">depends</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">generic</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">lcnr</span><span class=\"o\">/</span><span class=\"n\">rust2</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">ui</span><span class=\"o\">/</span><span class=\"n\">issues</span><span class=\"o\">/</span><span class=\"n\">issue</span><span class=\"o\">-</span><span class=\"mf\">39211.</span><span class=\"n\">rs</span>:<span class=\"mi\">11</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">LL</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">M</span>::<span class=\"n\">Row</span>::<span class=\"n\">DIM</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">^^^^^^^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">fail</span><span class=\"w\"> </span><span class=\"n\">depending</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">what</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"> </span><span class=\"n\">takes</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">internal</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">compiler</span><span class=\"o\">/</span><span class=\"n\">rustc_traits</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">normalize_erasing_regions</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">54</span>:<span class=\"mi\">32</span>: <span class=\"nc\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">fully</span><span class=\"w\"> </span><span class=\"n\">normalize</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">Mat</span><span class=\"o\">&gt;</span>::<span class=\"n\">Row</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 246343017,
        "sender_full_name": "lcnr",
        "timestamp": 1626554523
    },
    {
        "content": "<ul>\n<li>a bunch of const generics test with a const-evaluatable bound error report one error more, e.g. <code>issue-74634.rs</code> which now has</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">constant</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"n\">depends</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">generic</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"cp\">$DIR</span><span class=\"o\">/</span><span class=\"n\">issue</span><span class=\"o\">-</span><span class=\"mf\">74634.</span><span class=\"n\">rs</span>:<span class=\"mi\">15</span>:<span class=\"mi\">11</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">LL</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"p\">()</span>: <span class=\"nc\">If</span><span class=\"o\">&lt;</span><span class=\"p\">{</span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">^^^^^^^^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">fail</span><span class=\"w\"> </span><span class=\"n\">depending</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">what</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"> </span><span class=\"n\">takes</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0308</span><span class=\"p\">]</span>: <span class=\"nc\">mismatched</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"cp\">$DIR</span><span class=\"o\">/</span><span class=\"n\">issue</span><span class=\"o\">-</span><span class=\"mf\">74634.</span><span class=\"n\">rs</span>:<span class=\"mi\">14</span>:<span class=\"mi\">19</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">LL</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">N</span>: <span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">IsZero</span><span class=\"o\">&lt;</span><span class=\"n\">N</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                   </span><span class=\"o\">^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">{</span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">{</span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"p\">{</span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"p\">{</span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">aborting</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0308</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>instead of</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">constant</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"n\">depends</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">generic</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"cp\">$DIR</span><span class=\"o\">/</span><span class=\"n\">issue</span><span class=\"o\">-</span><span class=\"mf\">74634.</span><span class=\"n\">rs</span>:<span class=\"mi\">15</span>:<span class=\"mi\">11</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">LL</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"p\">()</span>: <span class=\"nc\">If</span><span class=\"o\">&lt;</span><span class=\"p\">{</span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">^^^^^^^^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">fail</span><span class=\"w\"> </span><span class=\"n\">depending</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">what</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"> </span><span class=\"n\">takes</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">aborting</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 246343058,
        "sender_full_name": "lcnr",
        "timestamp": 1626554607
    },
    {
        "content": "<ul>\n<li>an ICE in <code>const-generics/const_evaluatable_checked/associated-consts.rs</code> which ones again happens because of a missing param env</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>error: internal compiler error: Encountered error `Unimplemented` selecting `Binder(&lt;C as BlockCipher&gt;, [])` during codegen\n   |\n   = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:68:32\n</code></pre></div>\n<p>this ICE is the only test going from <code>run-pass</code> to an error/ICE</p>",
        "id": 246343152,
        "sender_full_name": "lcnr",
        "timestamp": 1626554720
    },
    {
        "content": "<p>the first 2 errors make it seems like we somehow forget to remember that an error already occurred while the first and last errors seem like something's going wrong with param envs</p>",
        "id": 246343200,
        "sender_full_name": "lcnr",
        "timestamp": 1626554787
    },
    {
        "content": "<p>i wasn't able to quickly find the source of either of these issues</p>",
        "id": 246343203,
        "sender_full_name": "lcnr",
        "timestamp": 1626554805
    },
    {
        "content": "<p>that's where I am going to stop for this week and I am going look into it next week again. If someone wants to try to figure this out, I would be extremely grateful. Though considering the distinct lack of comments and the size of this PR, I doubt that it will be very enjoyable <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>",
        "id": 246343311,
        "sender_full_name": "lcnr",
        "timestamp": 1626555011
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/260443-project-const-generics/topic/anon.20const.20unused.20substs/near/246343152\">said</a>:</p>\n<blockquote>\n<ul>\n<li>an ICE in <code>const-generics/const_evaluatable_checked/associated-consts.rs</code> which ones again happens because of a missing param env</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>error: internal compiler error: Encountered error `Unimplemented` selecting `Binder(&lt;C as BlockCipher&gt;, [])` during codegen\n   |\n   = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:68:32\n</code></pre></div>\n<p>this ICE is the only test going from <code>run-pass</code> to an error/ICE</p>\n</blockquote>\n<p>this one seems to be because of this code <a href=\"https://github.com/lcnr/rust/blob/lazy-anon-const-default-substs/compiler/rustc_middle/src/ty/mod.rs#L1254-L1255\">here</a> in <code>ParamEnv::and</code> emptying the param env when we evaluate a const with <code>substs_: None</code> <a href=\"https://github.com/lcnr/rust/blob/lazy-anon-const-default-substs/compiler/rustc_middle/src/ty/consts/kind.rs#L141-L144\">eval code</a></p>",
        "id": 246401260,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1626645665
    },
    {
        "content": "<p>alright, had <code>Unevaluated</code> influence the typeflags of <code>ty::Const</code> but I didn't do anything for its own typeflags, so when using <code>unevaluated.visit_with(&amp;mut HasTypeFlagsVisitor { .. })</code> we got the wrong flags</p>",
        "id": 246428503,
        "sender_full_name": "lcnr",
        "timestamp": 1626683306
    },
    {
        "content": "<p>thanks boxy &lt;3</p>",
        "id": 246428511,
        "sender_full_name": "lcnr",
        "timestamp": 1626683310
    },
    {
        "content": "<p>the additional error messages happen because select + fulfill for <code>ConstEquate</code> without <code>feature(const_evaluatable_checked)</code> actually returns an error when equating a <em>generic</em> constant with itself</p>",
        "id": 246437886,
        "sender_full_name": "lcnr",
        "timestamp": 1626690070
    },
    {
        "content": "<p>it didn't previously cause errors as we have an equivalence check in <code>super_combine_consts</code></p>",
        "id": 246437929,
        "sender_full_name": "lcnr",
        "timestamp": 1626690103
    },
    {
        "content": "<p>that equivalence check was now returning <code>false</code> if one of the consts has exposed default substs while the other one does not</p>",
        "id": 246438001,
        "sender_full_name": "lcnr",
        "timestamp": 1626690129
    },
    {
        "content": "<p>changed it to just expose all default substs before checking for equivalence here, this is kind of hack, but any other changes would be more invasive</p>",
        "id": 246438058,
        "sender_full_name": "lcnr",
        "timestamp": 1626690172
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">expose_default_const_substs</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">expose_default_const_substs</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">debug</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"{}.consts({:?}, {:?})\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">relation</span><span class=\"p\">.</span><span class=\"n\">tag</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 246438088,
        "sender_full_name": "lcnr",
        "timestamp": 1626690199
    }
]