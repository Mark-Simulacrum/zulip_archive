[
    {
        "content": "<p>In case anyone finds this interesting, min-const-generics has worked out well for me when writing a rayon-parallelized arbitrary-dimension hashlife implementation: <a href=\"https://github.com/programmerjake/parallel-hashlife-4\">https://github.com/programmerjake/parallel-hashlife-4</a></p>\n<p>My main complaint is that rust-analyzer won't autocomplete a const-generic that's in scope:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">CONST</span>: <span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">MyTrait</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyType</span><span class=\"o\">&lt;</span><span class=\"n\">CONST</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">AssociatedType</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MyType2</span><span class=\"o\">&lt;</span><span class=\"n\">CO</span><span class=\"o\">|&gt;</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// rust-analyzer refuses to auto-complete CONST at the |</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 223272052,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1611081462
    },
    {
        "content": "<p>(indirectly) ask and you shall receive <a href=\"https://github.com/rust-analyzer/rust-analyzer/pull/7351\">https://github.com/rust-analyzer/rust-analyzer/pull/7351</a></p>",
        "id": 223276825,
        "sender_full_name": "Lukas Wirth",
        "timestamp": 1611083334
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300586\">@Lukas Wirth</span> Thanks!</p>",
        "id": 223278106,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1611083769
    }
]