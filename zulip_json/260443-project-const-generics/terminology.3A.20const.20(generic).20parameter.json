[
    {
        "content": "<p>we're currently using both \"const parameter\" and \"const generic parameter\" in diagnostic and comments, I personally would like to be consistent here and always use the same terminology. I personal prefer just \"const parameter\". Any opinions?</p>",
        "id": 235346939,
        "sender_full_name": "lcnr",
        "timestamp": 1618926803
    },
    {
        "content": "<p>I prefer just <code>const parameter</code></p>",
        "id": 235356769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618930492
    },
    {
        "content": "<p>Looked into changing all occurrences of \"const generic parameter\" to just \"const parameter\".</p>\n<p>I did see a few uses of \"const generic argument\" <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> using \"const argument\" does not seem great. Do we just want to keep using \"const generic argument\" but use \"const parameter\"</p>",
        "id": 237394685,
        "sender_full_name": "lcnr",
        "timestamp": 1620161033
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"3805\">@project-const-generics</span> <a href=\"https://github.com/rust-lang/rust/issues/84926\">#84926</a> opinions?</p>",
        "id": 237398724,
        "sender_full_name": "lcnr",
        "timestamp": 1620162403
    },
    {
        "content": "<blockquote>\n<p>Const generic arguments</p>\n</blockquote>",
        "id": 237399062,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162490
    },
    {
        "content": "<p>do we still want to use this if we use const paramater elsewhere?</p>",
        "id": 237399099,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162500
    },
    {
        "content": "<p><span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 237399143,
        "sender_full_name": "lcnr",
        "timestamp": 1620162512
    },
    {
        "content": "<p>idk, i do want to be consistent, but \"const argument\" seems slightly ambiguous to me</p>",
        "id": 237399232,
        "sender_full_name": "lcnr",
        "timestamp": 1620162533
    },
    {
        "content": "<p>though i guess the same can be said for \"const parameter\" <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 237399292,
        "sender_full_name": "lcnr",
        "timestamp": 1620162554
    },
    {
        "content": "<p>yes &gt;_&gt;</p>",
        "id": 237399323,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162566
    },
    {
        "content": "<p>too bad we dont call it \"type parameters\"</p>",
        "id": 237399358,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162579
    },
    {
        "content": "<p>\"type generic arguments\"</p>",
        "id": 237399383,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162588
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"326176\">Boxy</span> <a href=\"#narrow/stream/260443-project-const-generics/topic/terminology.3A.20const.20.28generic.29.20parameter/near/237399358\">said</a>:</p>\n<blockquote>\n<p>too bad we dont call it \"type parameters\"</p>\n</blockquote>\n<p>hmm what <em>do</em> we use for type params?</p>",
        "id": 237399485,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162608
    },
    {
        "content": "<p>we do though, don't we?</p>",
        "id": 237399487,
        "sender_full_name": "lcnr",
        "timestamp": 1620162609
    },
    {
        "content": "<p><code>T</code> is a type parameter and <code>u32</code> is a type argument</p>",
        "id": 237399521,
        "sender_full_name": "lcnr",
        "timestamp": 1620162621
    },
    {
        "content": "<p>i think</p>",
        "id": 237399532,
        "sender_full_name": "lcnr",
        "timestamp": 1620162624
    },
    {
        "content": "<p>we should mirror that terminology then probably <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 237399580,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162637
    },
    {
        "content": "<p><code>'a</code> is a lifetime parameter and <code>???</code> is a lifetime argument <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 237399727,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162691
    },
    {
        "content": "<p>for <code>struct Foo&lt;T&gt;;</code> the error message just calls it a \"parameter\"</p>",
        "id": 237399948,
        "sender_full_name": "Boxy [she/her]",
        "timestamp": 1620162747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/260443-project-const-generics/topic/terminology.3A.20const.20.28generic.29.20parameter/near/237394685\">said</a>:</p>\n<blockquote>\n<p>I did see a few uses of \"const generic argument\" <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> using \"const argument\" does not seem great. Do we just want to keep using \"const generic argument\" but use \"const parameter\"</p>\n</blockquote>\n<p>I think this was probably the reason it wasn't done earlier: \"const argument\" may suggest a normal argument that has a const value passed in, or something like that?</p>",
        "id": 237405298,
        "sender_full_name": "varkor",
        "timestamp": 1620164617
    },
    {
        "content": "<p>It's hard to tell, because we all have a slightly different perspective than most Rust users.</p>",
        "id": 237405331,
        "sender_full_name": "varkor",
        "timestamp": 1620164636
    },
    {
        "content": "<p>I'd have no objection to at least changing \"const generic parameter\" to \"const parameter\", though.</p>",
        "id": 237405428,
        "sender_full_name": "varkor",
        "timestamp": 1620164667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121053\">varkor</span> <a href=\"#narrow/stream/260443-project-const-generics/topic/terminology.3A.20const.20.28generic.29.20parameter/near/237405298\">said</a>:</p>\n<blockquote>\n<p>I think this was probably the reason it wasn't done earlier: \"const argument\" may suggest a normal argument that has a const value passed in, or something like that?</p>\n</blockquote>\n<p>I might think that, or some kind of argument-position sugar for a const parameter</p>",
        "id": 237599154,
        "sender_full_name": "tmandry",
        "timestamp": 1620271061
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> We talk about \"const arguments\" whenever we talk about supplying SIMD assembly instructions with the immediate values that they require, and also when discussing whether an argument, supplied as a constant, will be <em>optimized</em> into the desired assembly.</p>",
        "id": 238566792,
        "sender_full_name": "Jubilee",
        "timestamp": 1620867797
    }
]