[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/77650\">#77650</a> and <a href=\"https://github.com/rust-lang/rust/issues/77708\">#77708</a> are most probably caused by us calling <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TyCtxt.html#method.try_unify_abstract_consts\"><code>query try_unify_abstract_consts</code></a> with substs containing inference variables.</p>",
        "id": 221163894,
        "sender_full_name": "lcnr",
        "timestamp": 1609273287
    },
    {
        "content": "<p>inference variables are not allowed in the query system, so we have 3 different ways to deal with this</p>",
        "id": 221163968,
        "sender_full_name": "lcnr",
        "timestamp": 1609273329
    },
    {
        "content": "<ol>\n<li>replace them with placeholders or fresh variables</li>\n</ol>",
        "id": 221164007,
        "sender_full_name": "lcnr",
        "timestamp": 1609273386
    },
    {
        "content": "<p>this requires an inference context so isn't really feasable</p>",
        "id": 221164125,
        "sender_full_name": "lcnr",
        "timestamp": 1609273521
    },
    {
        "content": "<ol start=\"2\">\n<li>move <code>AbstractConst</code>s into <code>rustc_middle</code>  and change <code>try_unify_abstract_consts</code> to an ordinary method</li>\n</ol>",
        "id": 221164152,
        "sender_full_name": "lcnr",
        "timestamp": 1609273560
    },
    {
        "content": "<p>probably the easiest even if it's a bit annoying as the logic for <code>AbstractConst</code>s doesn't otherwise need to be in <code>rustc_middle</code></p>",
        "id": 221164219,
        "sender_full_name": "lcnr",
        "timestamp": 1609273599
    },
    {
        "content": "<ol start=\"3\">\n<li>add something similar to <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/query/struct.Providers.html\">https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/query/struct.Providers.html</a> for ordinary functions</li>\n</ol>",
        "id": 221164264,
        "sender_full_name": "lcnr",
        "timestamp": 1609273682
    },
    {
        "content": "<p>this allows us to keep all of the logic outside of <code>rustc_middle</code> while still solving this issue</p>",
        "id": 221164328,
        "sender_full_name": "lcnr",
        "timestamp": 1609273720
    },
    {
        "content": "<p>first, <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> what do you think is the best approach for now?</p>",
        "id": 221164346,
        "sender_full_name": "lcnr",
        "timestamp": 1609273747
    },
    {
        "content": "<p>second, <span class=\"user-mention\" data-user-id=\"326189\">@jknodt</span> <span class=\"user-mention\" data-user-id=\"366818\">@Pedro Mendes</span> <span class=\"user-mention\" data-user-id=\"351972\">@Ethan Brierley</span> <span class=\"user-mention\" data-user-id=\"256313\">@Hameer Abbasi</span> is one of you interested in working on this? pm me if you don't want to get pinged for stuff like this</p>",
        "id": 221164474,
        "sender_full_name": "lcnr",
        "timestamp": 1609273855
    },
    {
        "content": "<p>I would like to look into this one. Also note, I love getting pinged for this kind of thing :).</p>\n<p>I am going to bed now so will take a proper look tomorrow.</p>",
        "id": 221164722,
        "sender_full_name": "Ethan Brierley",
        "timestamp": 1609274100
    },
    {
        "content": "<p>Option 4: use one of the query modifiers to make the query just be a normal function</p>",
        "id": 221169379,
        "sender_full_name": "oli",
        "timestamp": 1609277773
    },
    {
        "content": "<p>I'm not sure that's possible,  but I remember lots of fun modifiers like <code>no_hash</code> and <code>always_evaluate</code> or sth</p>",
        "id": 221169544,
        "sender_full_name": "oli",
        "timestamp": 1609277932
    },
    {
        "content": "<p>hmm, I am not sure if reusing queries for this is clean approach as this seems to be a fundamental property of queries <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 221209422,
        "sender_full_name": "lcnr",
        "timestamp": 1609331685
    },
    {
        "content": "<p>i do think using the third way and reusing that new <code>struct</code> for other functions which are currently in <code>rustc_middle</code> is probably a good change</p>",
        "id": 221209474,
        "sender_full_name": "lcnr",
        "timestamp": 1609331763
    },
    {
        "content": "<p>so that we pretty much end up with <code>rustc_middle</code> being only used for query and type definitions and move most of the complex logic into separate crates</p>",
        "id": 221209520,
        "sender_full_name": "lcnr",
        "timestamp": 1609331809
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"216206\">lcnr</span> <a href=\"#narrow/stream/260443-project-const-generics/topic/incremental.20const_evaluatable_checked.20bug/near/221209474\">said</a>:</p>\n<blockquote>\n<p>i do think using the third way and reusing that new <code>struct</code> for other functions which are currently in <code>rustc_middle</code> is probably a good change</p>\n</blockquote>\n<p>Yea, I thought we already had queries that were behaving like that, but turns out I had a misunderstanding of <code>always_evaluate</code> queries (that attribute means we always run it, even if all input is green)</p>",
        "id": 221211074,
        "sender_full_name": "oli",
        "timestamp": 1609333762
    },
    {
        "content": "<p>if there's no rush, we should implement 3.</p>",
        "id": 221211081,
        "sender_full_name": "oli",
        "timestamp": 1609333786
    },
    {
        "content": "<p>but that requires an MCP</p>",
        "id": 221211087,
        "sender_full_name": "oli",
        "timestamp": 1609333793
    },
    {
        "content": "<p>Iâ€™d also say I love getting pinged. ðŸ’› But Iâ€™m currently away from home and with family, so itâ€™s a bit difficult for me to allocate time to this. Iâ€™ll be back 17 January and then Iâ€™ll work more on this.</p>",
        "id": 221262567,
        "sender_full_name": "Hameer Abbasi",
        "timestamp": 1609379477
    }
]