[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"131070\">@Luca Barbato</span> so what do you need the feature iterator for ? I've managed to rebase it, but I'm not sure it is ready for merging.</p>",
        "id": 175795472,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568624884
    },
    {
        "content": "<p>My goal was switching rustc to use the same feature-detection as libstd</p>",
        "id": 175795484,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568624901
    },
    {
        "content": "<p>The support for runtime disabling extension would need to map Feature to the strings provided by the env:var</p>",
        "id": 175795502,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568624929
    },
    {
        "content": "<p>right now, we use LLVM to detect features there, and LLVM might not 100% agree with libstd on what features are available</p>",
        "id": 175795505,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568624932
    },
    {
        "content": "<p>The override is to disable more features so that part is fine</p>",
        "id": 175795543,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568624963
    },
    {
        "content": "<p>hmm, so the envar would have a string of features, e.g., <code>\"avx,aes\"</code> etc. right ?</p>",
        "id": 175795633,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625025
    },
    {
        "content": "<p>yes</p>",
        "id": 175795636,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625031
    },
    {
        "content": "<p>and where in std::detect do you want to implement the override ?</p>",
        "id": 175795651,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625048
    },
    {
        "content": "<p>probably not at the macro level, and probably before the dispatch to the actual feature detection for the target</p>",
        "id": 175795678,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625074
    },
    {
        "content": "<p><code>STD_DETECT_DISABLE=\"avx2\" my_bin</code> would run it with avx2 off even if the system claims it is</p>",
        "id": 175795691,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625085
    },
    {
        "content": "<p>so that one does not have to implement it for every target</p>",
        "id": 175795693,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625086
    },
    {
        "content": "<p>I refactored <code>check_for</code> so I can run the env check there</p>",
        "id": 175795709,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625116
    },
    {
        "content": "<p>ah, that what that was for, great</p>",
        "id": 175795755,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625125
    },
    {
        "content": "<p>yes so it makes sense</p>",
        "id": 175795761,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625131
    },
    {
        "content": "<p>hmm</p>",
        "id": 175795763,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625137
    },
    {
        "content": "<p>we probably want to read the override variable only once, cache it in a bitset</p>",
        "id": 175795775,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625152
    },
    {
        "content": "<p>exactly :)</p>",
        "id": 175795778,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625158
    },
    {
        "content": "<p>and then only do a bit test</p>",
        "id": 175795779,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625160
    },
    {
        "content": "<p>so what do you need the feature iterator there for?</p>",
        "id": 175795792,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625173
    },
    {
        "content": "<p>I get from the env</p>",
        "id": 175795800,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625182
    },
    {
        "content": "<p>do you want to dynamically create the bitset ?</p>",
        "id": 175795804,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625183
    },
    {
        "content": "<p><code>\"foo, bar, baz\"</code></p>",
        "id": 175795814,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625194
    },
    {
        "content": "<p>I split the <code>,</code> and then for each string I need to to map a Feature</p>",
        "id": 175795830,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625226
    },
    {
        "content": "<p>and then flip off the bit in the cache</p>",
        "id": 175795879,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625246
    },
    {
        "content": "<p>So I need the from_str part</p>",
        "id": 175795899,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625286
    },
    {
        "content": "<p>mainly</p>",
        "id": 175795903,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625289
    },
    {
        "content": "<p>then if the iterator itself needs more work it is fine</p>",
        "id": 175795915,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625304
    },
    {
        "content": "<p>one discussion item if we want to make the iterator return a 3 items tuple</p>",
        "id": 175795928,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625320
    },
    {
        "content": "<p>ah I see (I forgot that the <code>from_str</code> part was already implemented)</p>",
        "id": 175795930,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625323
    },
    {
        "content": "<p>with one item for the env override</p>",
        "id": 175795937,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625335
    },
    {
        "content": "<p>so the program knows what is available and what is off for external reasons</p>",
        "id": 175795963,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625353
    },
    {
        "content": "<p>hmm, dunno</p>",
        "id": 175796015,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625370
    },
    {
        "content": "<p>but its use-case is relatively fringe (a program wanting  to tell the user what's is on and off)</p>",
        "id": 175796029,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625383
    },
    {
        "content": "<p>the point of the override it is to be able to override it</p>",
        "id": 175796036,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625389
    },
    {
        "content": "<p>if a program can inspect that, and ignore it, then I don't know</p>",
        "id": 175796045,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625398
    },
    {
        "content": "<p>not ignore</p>",
        "id": 175796079,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625437
    },
    {
        "content": "<p>basically</p>",
        "id": 175796084,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625442
    },
    {
        "content": "<p>also, thinking about it, no, but query the value, and do something depending on it</p>",
        "id": 175796100,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625451
    },
    {
        "content": "<p>I suppose that initially this does not matter, because the iterator isn't public</p>",
        "id": 175796119,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625471
    },
    {
        "content": "<p>my main use-case is to debug behavior on user-machine</p>",
        "id": 175796140,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625482
    },
    {
        "content": "<p>so all I need is a way for the user to turn off a feature without having to rebuild everything</p>",
        "id": 175796185,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625523
    },
    {
        "content": "<p>so maybe we could add that later</p>",
        "id": 175796186,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625524
    },
    {
        "content": "<p>definitely</p>",
        "id": 175796190,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625529
    },
    {
        "content": "<p>but right now the iterator returns whether a feature is enabled, using the normal check</p>",
        "id": 175796191,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625538
    },
    {
        "content": "<p>basically all I need is the from_str</p>",
        "id": 175796193,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625539
    },
    {
        "content": "<p>and that check will be overriden by the env</p>",
        "id": 175796198,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625544
    },
    {
        "content": "<p>and it is fine</p>",
        "id": 175796203,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625548
    },
    {
        "content": "<p>ok</p>",
        "id": 175796204,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625551
    },
    {
        "content": "<p>the iterator is good since it can be used on a <code>--help</code> path</p>",
        "id": 175796215,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625578
    },
    {
        "content": "<p>i think we can do it like this initially, and we'll see</p>",
        "id": 175796222,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625587
    },
    {
        "content": "<p>so there is a mean to discover what can be turn off or on</p>",
        "id": 175796224,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625591
    },
    {
        "content": "<p>maybe we should add an UNSTABLE to the env variable</p>",
        "id": 175796227,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625598
    },
    {
        "content": "<p>to make it clear that this API is not stable</p>",
        "id": 175796274,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625605
    },
    {
        "content": "<p>and maybe even somehow disable it for stable Rust</p>",
        "id": 175796284,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625614
    },
    {
        "content": "<p>Initially I thought of using a feature guard</p>",
        "id": 175796293,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625633
    },
    {
        "content": "<ul>\n<li>the no_std guard since iirc we cannot reach the env w/out std, right? :)</li>\n</ul>",
        "id": 175796314,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625656
    },
    {
        "content": "<p>I also thought about having <code>FOO=\"avx=off:avx512f:on\"</code> kind of syntax</p>",
        "id": 175796315,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625659
    },
    {
        "content": "<p>no :)</p>",
        "id": 175796323,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625669
    },
    {
        "content": "<p>but disabling features is always sound</p>",
        "id": 175796325,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625673
    },
    {
        "content": "<p>you can ONLY disable it</p>",
        "id": 175796327,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625673
    },
    {
        "content": "<p>while enabling features can exhibit UB</p>",
        "id": 175796329,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625680
    },
    {
        "content": "<p>enabling a feature you do not support is a sigill</p>",
        "id": 175796338,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625703
    },
    {
        "content": "<p>I wonder if there is a feature that can exhibit UB when it is disabled</p>",
        "id": 175796340,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625703
    },
    {
        "content": "<p>either way an <code>_UNSTABLE</code> env var that disables features on nightly for debugging seems ok</p>",
        "id": 175796394,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625746
    },
    {
        "content": "<p>I'll try and see if I can get this merged today</p>",
        "id": 175796402,
        "sender_full_name": "gnzlbg",
        "timestamp": 1568625756
    },
    {
        "content": "<p>great :)</p>",
        "id": 175796407,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625762
    },
    {
        "content": "<p>I'll get the first draft of the code on top of it</p>",
        "id": 175796416,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625778
    },
    {
        "content": "<p>and let see what people think</p>",
        "id": 175796426,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1568625788
    }
]