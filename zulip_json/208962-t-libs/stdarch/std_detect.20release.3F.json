[
    {
        "content": "<p>Can we have a new release? I would use it in rav1e potentially.</p>",
        "id": 177758733,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1570657247
    },
    {
        "content": "<p>Ping on this.</p>",
        "id": 253428532,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631717992
    },
    {
        "content": "<p>std_detect is part of libstd already. See the <code>is_*_feature_detected!()</code> macros.</p>",
        "id": 253428820,
        "sender_full_name": "bjorn3",
        "timestamp": 1631718065
    },
    {
        "content": "<p>the env override is not enabled</p>",
        "id": 253429587,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631718321
    },
    {
        "content": "<p>So either we enable it like we do for the proc parsing or would be nice to have a release</p>",
        "id": 253429739,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631718365
    },
    {
        "content": "<p>We don't plan on publishing these crates to <a href=\"http://crates.io\">crates.io</a></p>",
        "id": 253429766,
        "sender_full_name": "Amanieu",
        "timestamp": 1631718372
    },
    {
        "content": "<p>However I think you can pass features to them with -Zbuild-std-features</p>",
        "id": 253429838,
        "sender_full_name": "Amanieu",
        "timestamp": 1631718399
    },
    {
        "content": "<p>I'll start adding the feature to std so that can be done</p>",
        "id": 253430119,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631718488
    },
    {
        "content": "<p>but would be quite nice to have it in std w/out asking the user to use a nightly compiler ^^;</p>",
        "id": 253430223,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631718523
    },
    {
        "content": "<p>The env override is a security issue. If you enable a feature that is not actually supported by the current processor, it is possible that the current processor will interpret certain instructions that are part of said feature as other instructions that do something completely different. This is not a hypothetical scenario. For example older x86 cpu's without SSE2(?) interpret lzcnt as bsr.</p>",
        "id": 253430629,
        "sender_full_name": "bjorn3",
        "timestamp": 1631718681
    },
    {
        "content": "<p>the env override is to disable extensions not enable them</p>",
        "id": 253431463,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631718986
    },
    {
        "content": "<p>so that cannot happen</p>",
        "id": 253431481,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631718995
    },
    {
        "content": "<p>It takes the detected value and unsets bits</p>",
        "id": 253431665,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631719069
    },
    {
        "content": "<p>Right, my bad.</p>",
        "id": 253432186,
        "sender_full_name": "bjorn3",
        "timestamp": 1631719237
    },
    {
        "content": "<p>The name could be less misleading I guess :)</p>",
        "id": 253432288,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631719283
    },
    {
        "content": "<p>And the env might be changed to <code>RUST_STD_DETECT_UNSTABLE</code> -&gt; <code>RUST_STD_DETECT_DISABLE_UNSTABLE</code></p>",
        "id": 253432372,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1631719320
    }
]