[
    {
        "content": "<p>this is my first try <a href=\"https://github.com/xiph/rav1e/pull/1768/commits/3cd84ecc2bb1dd905bb54f2dd69bb3506be70b17\" target=\"_blank\" title=\"https://github.com/xiph/rav1e/pull/1768/commits/3cd84ecc2bb1dd905bb54f2dd69bb3506be70b17\">https://github.com/xiph/rav1e/pull/1768/commits/3cd84ecc2bb1dd905bb54f2dd69bb3506be70b17</a></p>",
        "id": 178329237,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1571260908
    },
    {
        "content": "<p>and apparently the main problem was me misreading what the assembly using it was expecting</p>",
        "id": 178360583,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1571300870
    },
    {
        "content": "<p>I mean, if you just want a static array that's aligned, you can do:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#[repr(align(N)]</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">MyArray</span><span class=\"p\">([</span><span class=\"n\">T</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">FOO</span>: <span class=\"nc\">MyArray</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MyArray</span><span class=\"p\">([</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">]);</span><span class=\"w\"></span>\n</pre></div>",
        "id": 178361534,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571301899
    },
    {
        "content": "<p>You can set the <code>N</code> in <code>repr(align(N))</code> to whatever alignment you want, and the alignment of the array will be <code>max(N, align_of&lt;T&gt;)</code></p>",
        "id": 178361635,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571302012
    },
    {
        "content": "<p>yes, I can simplify the notation</p>",
        "id": 178451555,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1571385151
    },
    {
        "content": "<p>So that's the best way we have for that</p>",
        "id": 178452402,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571385932
    },
    {
        "content": "<p>In C++ things are a bit better because we can use const generics and metaprogramming to set the type alignment, but otherwise things are similar</p>",
        "id": 178452500,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571386025
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">template</span><span class=\"o\">&lt;</span><span class=\"k\">typename</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"kt\">size_t</span> <span class=\"n\">N</span><span class=\"o\">&gt;</span>\n<span class=\"k\">struct</span> <span class=\"n\">simd_array</span> <span class=\"p\">{</span>\n    <span class=\"k\">alignas</span><span class=\"p\">(</span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">N</span><span class=\"p\">)</span> <span class=\"n\">T</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">];</span>\n<span class=\"p\">};</span>\n</pre></div>",
        "id": 178452568,
        "sender_full_name": "gnzlbg",
        "timestamp": 1571386088
    },
    {
        "content": "<p>quite a bit</p>",
        "id": 178452584,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1571386122
    },
    {
        "content": "<p>newtyping is fine IMHO</p>",
        "id": 178452626,
        "sender_full_name": "Luca Barbato",
        "timestamp": 1571386185
    }
]