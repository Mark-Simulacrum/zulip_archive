[
    {
        "content": "<p>just FYI there's another recent incremental ICE on stable for <code>def_ident_span</code>, tracked in <a href=\"https://github.com/rust-lang/rust/issues/95945\">#95945</a></p>\n<p>I've bisected it to <a href=\"https://github.com/rust-lang/rust/issues/93095\">#93095</a> (and pinged the author and reviewer) but it's unclear to me whether this is an ICE from the PR itself, or a variation on what the PR wanted to fix</p>",
        "id": 278707878,
        "sender_full_name": "lqd",
        "timestamp": 1649776571
    },
    {
        "content": "<p>I'll take a look today</p>",
        "id": 278712515,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1649778703
    },
    {
        "content": "<p>Found the issue - we're skipping hashing the <code>Ident</code> span in several manual <code>HashStable</code> impls: <a href=\"https://github.com/rust-lang/rust/blob/327caac4d01aef74d6577b87c295270608be09fa/compiler/rustc_hir/src/stable_hash_impls.rs#L157\">https://github.com/rust-lang/rust/blob/327caac4d01aef74d6577b87c295270608be09fa/compiler/rustc_hir/src/stable_hash_impls.rs#L157</a></p>",
        "id": 278725000,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1649784469
    },
    {
        "content": "<p>I knew what I was looking for, but it still took me a few read-throughs to notice that when I was examining the impl</p>",
        "id": 278725105,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1649784507
    },
    {
        "content": "<p>yet another case of manual hashstable impls causing problems :/</p>",
        "id": 278725140,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1649784527
    },
    {
        "content": "<p>We <em>do</em> currently hash the span of the item itself. Usually, both the item ident span and the item span will be changed at the same time. When macros are involved, though, we can end up with two completely different spans, only one of which may change between sessions</p>",
        "id": 278725436,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1649784673
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125294\">Aaron Hill</span> <a href=\"#narrow/stream/241847-t-compiler.2Fwg-incr-comp/topic/.60def_ident_span.60.20incr.20ICE.20.2395945/near/278725000\">said</a>:</p>\n<blockquote>\n<p>Found the issue - we're skipping hashing the <code>Ident</code> span in several manual <code>HashStable</code> impls: <a href=\"https://github.com/rust-lang/rust/blob/327caac4d01aef74d6577b87c295270608be09fa/compiler/rustc_hir/src/stable_hash_impls.rs#L157\">https://github.com/rust-lang/rust/blob/327caac4d01aef74d6577b87c295270608be09fa/compiler/rustc_hir/src/stable_hash_impls.rs#L157</a></p>\n</blockquote>\n<p>I wonder if we could/should address this by adding some derive-style proc macro machinery that lets you enumerate the fields <em>to skip</em></p>",
        "id": 278733674,
        "sender_full_name": "pnkfelix",
        "timestamp": 1649788155
    },
    {
        "content": "<p>We already have <code>#[stable_hasher(ignore)]</code>.</p>",
        "id": 278734295,
        "sender_full_name": "cjgillot",
        "timestamp": 1649788415
    },
    {
        "content": "<p>This impl is manual because it setups <code>NodeIdHashingMode</code>.  <a href=\"https://github.com/rust-lang/rust/issues/95656\">#95656</a> suggests to remove that.</p>",
        "id": 278734523,
        "sender_full_name": "cjgillot",
        "timestamp": 1649788519
    }
]