[
    {
        "content": "<p>While working on removing <code>Ord</code> from <code>Defid</code> (see <a href=\"https://github.com/rust-lang/rust/issues/90317\">#90317</a>), I've needed to replace some BTreeMaps with FxHashMaps (since BTree requires type to have <code>Ord</code>). The result it that in a few places that use nested indexmaps, I'm getting:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0599]: the method `hash_stable` exists for reference `&amp;indexmap::map::IndexMap&lt;SimplifiedTypeGen&lt;rustc_span::def_id::DefId&gt;, Vec&lt;rustc_span::def_id::DefId&gt;, BuildHasherDefault&lt;FxHasher&gt;&gt;`, but its trait bounds were not satisfied\n   --&gt; compiler/rustc_middle/src/traits/specialization_graph.rs:86:52\n    |\n86  |   #[derive(Default, TyEncodable, TyDecodable, Debug, HashStable)]\n    |                                                      ^^^^^^^^^^\n    |                                                      |\n    |                                                      method cannot be called on `&amp;indexmap::map::IndexMap&lt;SimplifiedTypeGen&lt;rustc_span::def_id::DefId&gt;, Vec&lt;rustc_span::def_id::DefId&gt;, BuildHasherDefault&lt;FxHasher&gt;&gt;` due to unsatisfied trait bounds\n    |                                                      in this derive macro expansion\n    |\n   ::: /Users/will/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.8.0/src/map.rs:71:1\n    |\n71  |   pub struct IndexMap&lt;K, V, S = RandomState&gt; {\n    |   ------------------------------------------ doesn&#39;t satisfy `_: HashStable&lt;_&gt;`\n    |\n   ::: compiler/rustc_middle/src/ty/fast_reject.rs:21:1\n    |\n21  | / pub enum SimplifiedTypeGen&lt;D&gt;\n22  | | where\n23  | |     D: Copy + Debug + Eq,\n24  | | {\n...   |\n48  | |     ParameterSimplifiedType,\n49  | | }\n    | |_- doesn&#39;t satisfy `_: HashStable&lt;_&gt;`\n    |\n   ::: /Users/will/.cargo/registry/src/github.com-1ecc6299db9ec823/synstructure-0.12.6/src/macros.rs:94:9\n    |\n94  | /         pub fn $derives(\n95  | |             i: $crate::macros::TokenStream\n96  | |         ) -&gt; $crate::macros::TokenStream {\n    | |________________________________________- in this expansion of `#[derive(HashStable)]`\n    |\n    = note: the following trait bounds were not satisfied:\n            `SimplifiedTypeGen&lt;rustc_span::def_id::DefId&gt;: HashStable&lt;_&gt;`\n            which is required by `indexmap::map::IndexMap&lt;SimplifiedTypeGen&lt;rustc_span::def_id::DefId&gt;, Vec&lt;rustc_span::def_id::DefId&gt;, BuildHasherDefault&lt;FxHasher&gt;&gt;: HashStable&lt;_&gt;`\n            `indexmap::map::IndexMap&lt;SimplifiedTypeGen&lt;rustc_span::def_id::DefId&gt;, Vec&lt;rustc_span::def_id::DefId&gt;, BuildHasherDefault&lt;FxHasher&gt;&gt;: HashStable&lt;_&gt;`\n            which is required by `&amp;indexmap::map::IndexMap&lt;SimplifiedTypeGen&lt;rustc_span::def_id::DefId&gt;, Vec&lt;rustc_span::def_id::DefId&gt;, BuildHasherDefault&lt;FxHasher&gt;&gt;: HashStable&lt;_&gt;`\nnote: the following trait must be implemented\n   --&gt; /Users/will/repos/rust/compiler/rustc_data_structures/src/stable_hasher.rs:198:1\n    |\n198 | / pub trait HashStable&lt;CTX&gt; {\n199 | |     fn hash_stable(&amp;self, hcx: &amp;mut CTX, hasher: &amp;mut StableHasher);\n200 | | }\n    | |_^\n</code></pre></div>\n<p>Is it totally insane to consider implementing HashStable for IndexMap&lt;T,U&gt; where T,U are HashStable? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 272869695,
        "sender_full_name": "pierwill",
        "timestamp": 1645565591
    },
    {
        "content": "<p>Actually I think I've misunderstood something along the way...</p>",
        "id": 272871040,
        "sender_full_name": "pierwill",
        "timestamp": 1645566427
    },
    {
        "content": "<p>Because it's already implemented lol</p>",
        "id": 272871149,
        "sender_full_name": "pierwill",
        "timestamp": 1645566483
    },
    {
        "content": "<p>The problem is with <code>ParameterSimplifiedType</code></p>",
        "id": 272871231,
        "sender_full_name": "pierwill",
        "timestamp": 1645566560
    },
    {
        "content": "<p>But ah!! <a href=\"https://doc.rust-lang.org/stable/nightly-rustc/rustc_middle/ty/fast_reject/enum.SimplifiedTypeGen.html#impl-HashStable%3CStableHashingContext%3C%27a%3E%3E\">https://doc.rust-lang.org/stable/nightly-rustc/rustc_middle/ty/fast_reject/enum.SimplifiedTypeGen.html#impl-HashStable%3CStableHashingContext%3C%27a%3E%3E</a></p>",
        "id": 272871325,
        "sender_full_name": "pierwill",
        "timestamp": 1645566608
    },
    {
        "content": "<p>Ah okay. So _maybe_ this <code>Ord</code> isn't needed <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span> </p>\n<div class=\"codehilite\"><pre><span></span><code>impl&lt;&#39;a, D&gt; HashStable&lt;StableHashingContext&lt;&#39;a&gt;&gt; for SimplifiedTypeGen&lt;D&gt; where\n    D: Copy + Debug + Ord + Eq + HashStable&lt;StableHashingContext&lt;&#39;a&gt;&gt;,\n</code></pre></div>",
        "id": 272871633,
        "sender_full_name": "pierwill",
        "timestamp": 1645566800
    },
    {
        "content": "<p>Submitted <a href=\"https://github.com/rust-lang/rust/pull/94267\">https://github.com/rust-lang/rust/pull/94267</a></p>",
        "id": 272877872,
        "sender_full_name": "pierwill",
        "timestamp": 1645570220
    }
]