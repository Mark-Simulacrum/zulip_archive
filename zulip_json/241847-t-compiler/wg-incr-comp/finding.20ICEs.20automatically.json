[
    {
        "content": "<p>So I wondered if we could somehow automatically find incremental ices using the spaceheater approach (throwing cpu at the problem).<br>\nSo far I have been iterating through all commits of a repo and building them one by one, but we can also use clippy to modify the sources!<br>\nSo I came up with this command chain:</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo build ; cargo clippy --all-targets --fix -Zunstable-options  --allow-dirty -- --cap-lints warn  -Wclippy::pedantic  ; cargo  build\n</code></pre></div>\n<p>We first build the crate, then apply clippy lint suggestions and build again to see if the incremental verification catches anything. :)</p>",
        "id": 230238909,
        "sender_full_name": "matthiaskrgr",
        "timestamp": 1615729015
    },
    {
        "content": "<p>I believe there was a program to automatically run incr comp through all commits in a project. It was used when incr comp was still unstable.</p>",
        "id": 230256496,
        "sender_full_name": "bjorn3",
        "timestamp": 1615743396
    },
    {
        "content": "<p>I think that was <a href=\"https://github.com/michaelwoerister/cargo-incremental\">https://github.com/michaelwoerister/cargo-incremental</a></p>",
        "id": 230354492,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1615818976
    },
    {
        "content": "<p>Yeah, <a href=\"https://github.com/nikomatsakis/cargo-incremental\">https://github.com/nikomatsakis/cargo-incremental</a> was what we actually used. It required a lot of maintenance because not every commit would build.</p>",
        "id": 230490626,
        "sender_full_name": "mw",
        "timestamp": 1615891190
    },
    {
        "content": "<p>startup idea: a globally-accessible database recording whether given commits are expected or unexpect to build. (potential features include: recording how may of each; what hosts (i.e. os+cpu) worked or didn’t; recording uploaded diffs against commits to “fix”  them) ...</p>",
        "id": 230680681,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615983793
    },
    {
        "content": "<p>(I imagine <del>many</del> some search tools would benefit from knowing such info ahead of time.)</p>",
        "id": 230680752,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615983842
    },
    {
        "content": "<p>(further next steps beyond that: make a proof-of-work currency based on the results, called “buildcoin”)</p>",
        "id": 230680908,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615983917
    },
    {
        "content": "<p>((Last part is a joke: I know part of proof-of-work is ability to verify result, which is not tenable here))</p>",
        "id": 230681155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615984048
    }
]