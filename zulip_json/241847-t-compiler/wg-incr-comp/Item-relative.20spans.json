[
    {
        "content": "<p>I recently submitted <a href=\"https://github.com/rust-lang/rust/issues/84373\">#84373</a>. This PR changes the incr-comp encoding of spans to only encode the position relative to the surrounding definition. This PR unlocks some massive opportunities for incr compilation: up to 25% for cargo-check. More gains will be accessible later to a review of span usage by the MIR optimizer (for instance).</p>\n<p>I am looking for a reviewer inside the work-group to evaluate the soundness of the design.</p>",
        "id": 236718226,
        "sender_full_name": "cjgillot",
        "timestamp": 1619719246
    },
    {
        "content": "<p>does this affect multithreaded builds?</p>",
        "id": 236718911,
        "sender_full_name": "oliver",
        "timestamp": 1619719468
    },
    {
        "content": "<p>Theoretically, yes.</p>",
        "id": 236719188,
        "sender_full_name": "cjgillot",
        "timestamp": 1619719594
    },
    {
        "content": "<p>if theoretical then no implementation</p>",
        "id": 236719574,
        "sender_full_name": "oliver",
        "timestamp": 1619719761
    },
    {
        "content": "<p>What do you mean?</p>",
        "id": 236734612,
        "sender_full_name": "cjgillot",
        "timestamp": 1619725952
    },
    {
        "content": "<p>does this pr actually involve multithreading rustc, or would that be an extension of the pr and this topic?</p>",
        "id": 236752215,
        "sender_full_name": "oliver",
        "timestamp": 1619732537
    },
    {
        "content": "<p>I think no</p>",
        "id": 236752252,
        "sender_full_name": "oliver",
        "timestamp": 1619732563
    },
    {
        "content": "<p>The modification is independent of multithreading, and should apply to both single and multi thread versions equally.</p>",
        "id": 236868157,
        "sender_full_name": "cjgillot",
        "timestamp": 1619802300
    }
]