[
    {
        "content": "<p>Hi!</p>\n<p><span class=\"user-mention\" data-user-id=\"270929\">@Arlo Siemsen</span> has been making excellent progress on the Cargo side of the HTTP based index work! Thank you Arlo!<br>\nSo I think it's time we get our heads together and create a plan for crates.io's support of this interface. (In the hope that we can talk Arlo into doing that work as well.)<br>\nI want to make sure we find a solution <a href=\"http://crates.io\">crates.io</a> is willing to maintain, and infra is willing to host.<br>\nI want to start the conversation now, and be involved, to make it clear that cargo can change it's behavior if that will help.<br>\nI see three choices we have to make:</p>\n<ol>\n<li>Use the existing index file layout or add a merkle tree on top. (The question being do we need the merkle tree before we stabilize. )</li>\n<li>Use S3 to store the files, or generate them dynamically on <a href=\"http://crates.io\">crates.io</a></li>\n<li>Use a short TTL on the CDN or use explicit invalidations</li>\n</ol>",
        "id": 275816159,
        "sender_full_name": "Eh2406",
        "timestamp": 1647616452
    },
    {
        "content": "<p>I have strong evidence that this is wide open for bike shedding. In practice based on the number of long conversations I've already had about this, since the RFC was first proposed. But from first principles because all 8 of the possibilities can work reasonably well, and we can switch between them without much fanfare.</p>",
        "id": 275831919,
        "sender_full_name": "Eh2406",
        "timestamp": 1647622577
    },
    {
        "content": "<p>I know the <a href=\"http://crate.io\">crate.io</a> team is very short on reviewer time. It seems to me that the biggest design consideration is what is easiest for you to review.</p>",
        "id": 275832351,
        "sender_full_name": "Eh2406",
        "timestamp": 1647622769
    },
    {
        "content": "<p>What's the simplest thing that would work?</p>",
        "id": 275843571,
        "sender_full_name": "Carol (Nichols || Goulding)",
        "timestamp": 1647627762
    },
    {
        "content": "<p>Like is there a path that would let us deploy a change, verify it works for people opting in with an unstable cargo feature or something, that would let us monitor, test, then iterate?</p>",
        "id": 275843856,
        "sender_full_name": "Carol (Nichols || Goulding)",
        "timestamp": 1647627913
    },
    {
        "content": "<p>In addition to minimizing review, I'd also love if the plan minimized the risk-- like, do we have to have a big switch that flips and turns on (or breaks) everyone all at once, or is there a more gradual way to switch over (and switch back if something's not working) to cause the least disruption to cargo users and the least headaches for on-call?</p>",
        "id": 275844093,
        "sender_full_name": "Carol (Nichols || Goulding)",
        "timestamp": 1647628022
    },
    {
        "content": "<p>The feature is not yet merged in cargo. Even when it's merged it can be opt in as long as we want.</p>",
        "id": 275844562,
        "sender_full_name": "Eh2406",
        "timestamp": 1647628262
    },
    {
        "content": "<p>At some point we can make the http endpoint the default for <a href=\"http://crates.io\">crates.io</a>, but I expect we'll go through several steps.</p>\n<ul>\n<li>Require manual configuration of source replacement and <code>-Z http-registry</code> on nightly cargo</li>\n<li>Add additional unstable switch to cargo that automatically configures the http endpoint as the default for Cargo (so source replacement is not necessary)</li>\n<li>Stabilize http-registry</li>\n<li>Make the http endpoint the default on nightly (and have a config option to switch back to the git-based <a href=\"http://crates.io\">crates.io</a> as default)</li>\n<li>Make the http endpoint the default for stable.</li>\n</ul>",
        "id": 275844609,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647628287
    },
    {
        "content": "<p>We will need support in cargo for realizing that <a href=\"http://crates.io\">crates.io</a> has both a git and an http based index and that they should be treated as equivalent. That code can also be made to handle \"try the HTTP based index first, but if that doesn't work try to the git one\"<br>\n(I don't know that we would make this available to any other registry, but we can definitely do it for <a href=\"http://crates.io\">crates.io</a>)</p>",
        "id": 275844811,
        "sender_full_name": "Eh2406",
        "timestamp": 1647628398
    },
    {
        "content": "<p>We'll also need to decide what to do about the <code>Cargo.lock</code> files. Eventually we may want to \"update\" them to away from github as the registry url.</p>",
        "id": 275847916,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647629977
    },
    {
        "content": "<blockquote>\n<p>What's the simplest thing that would work?</p>\n</blockquote>\n<p>Here is a plan:</p>\n<ul>\n<li>Add code to have new publishes add their crate hash to the database.</li>\n<li>Arlo has code that adds the appropriate endpoints to <a href=\"http://crates.io\">crates.io</a> to dynamically generate the index files.<br>\n    - (This is enough for some bare minimum of testing on the cargo side.)</li>\n<li>Do a backfill to get the hashes from already published crates.<br>\n    - (This allows testing of existing projects.)</li>\n<li>Add CloudFront in front of those endpoints. (With say a 15 minute CDN- TTL.)<br>\n    - (This is enough for us to start encouraging people to test on nightly with <code>-Z http-registry</code>)</li>\n<li>Encourage more testing and decrease CDN- TTL. To see how much problem the load is.</li>\n</ul>\n<p>Reevaluate from here.</p>",
        "id": 275848400,
        "sender_full_name": "Eh2406",
        "timestamp": 1647630145
    },
    {
        "content": "<p>The simplest thing that would get us started is (IMHO):</p>\n<ol>\n<li>Use the existing index file layout</li>\n<li>Store the crates on S3</li>\n<li>Use short TTL on CDN</li>\n</ol>\n<p>We'd need to bulk upload all the existing index files, then modify <a href=\"http://crates.io\">crates.io</a> to publish new a new index file as part of uploading a new crate.</p>",
        "id": 275848413,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647630152
    },
    {
        "content": "<p>I was just going to write up that as the alternative just as easy plan. :-P</p>",
        "id": 275848473,
        "sender_full_name": "Eh2406",
        "timestamp": 1647630199
    },
    {
        "content": "<p>Haha yes, both seem similar difficulty.</p>",
        "id": 275848523,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647630227
    },
    {
        "content": "<p>I can do the changes to <a href=\"http://crates.io\">crates.io</a> source, but I expect I'd need to work with someone for the bulk upload of existing files / or bulk import of hashes.</p>",
        "id": 275848725,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647630322
    },
    {
        "content": "<p>Who's available that has access to set up CDN, DNS, etc? Someone also needs to make a decision between \"dynamically generate\" and \"store on S3\" options. I can do the code change to <a href=\"http://crates.io\">crates.io</a> for either option.</p>",
        "id": 275849133,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647630514
    },
    {
        "content": "<p>I have the access needed to set the infra up</p>",
        "id": 275855877,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1647633956
    },
    {
        "content": "<p>Just had a thought that for testing purposes it doesn't have to be a URL at <code>crates.io</code>. We can have the code update the S3 buckets for <a href=\"https://crates-io-index-temp.rust-lang.org/6887cde41199f4e2934e64646c02e76f8061365e/config.json\">https://crates-io-index-temp.rust-lang.org/6887cde41199f4e2934e64646c02e76f8061365e/config.json</a></p>",
        "id": 275867757,
        "sender_full_name": "Eh2406",
        "timestamp": 1647640720
    },
    {
        "content": "<blockquote>\n<p>Someone also needs to make a decision between \"dynamically generate\" and \"store on S3\" options. I can do the code change to <a href=\"http://crates.io\">crates.io</a> for either option.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"257516\">@Carol (Nichols || Goulding)</span> who on Crates should make that decision?</p>",
        "id": 276090273,
        "sender_full_name": "Eh2406",
        "timestamp": 1647885422
    },
    {
        "content": "<p>I'd definitely want <span class=\"user-mention\" data-user-id=\"257369\">@Justin Geibel</span> to weigh in. He's often not available during the day because he has a day job though :)</p>",
        "id": 276090663,
        "sender_full_name": "Carol (Nichols || Goulding)",
        "timestamp": 1647885611
    },
    {
        "content": "<p>I think there are pros and cons to each approach. If we go with dynamically generated, then I think that should probably be a separate deployment from the main <a href=\"http://crates.io\">crates.io</a> Heroku app to ensure we don't impact performance. The store on S3 approach would use less resources, but may be more difficult when it comes to cache invalidation and making sure that S3 and the git index are always in agreement.</p>",
        "id": 276091918,
        "sender_full_name": "Justin Geibel",
        "timestamp": 1647886162
    },
    {
        "content": "<p>Sounds like the S3 approach is less risky to production. So lets start there.</p>",
        "id": 276096148,
        "sender_full_name": "Eh2406",
        "timestamp": 1647887873
    },
    {
        "content": "<p>Here's the initial implementation: <a href=\"https://github.com/rust-lang/crates.io/pull/4661\">https://github.com/rust-lang/crates.io/pull/4661</a>. I still need to understand how the tests work with mocked AWS.</p>",
        "id": 276227571,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647971085
    },
    {
        "content": "<p>It looks like the tests are running against captured replays of interactions with <a href=\"http://alexcrichton-test.s3.amazonaws.com/\">http://alexcrichton-test.s3.amazonaws.com/</a> </p>\n<p>How can I generate new ones? Do I need to set up an S3 account?</p>",
        "id": 276235331,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1647974016
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"270929\">Arlo Siemsen</span> <a href=\"#narrow/stream/318791-t-crates-io/topic/HTTP.20based.20index/near/276235331\">said</a>:</p>\n<blockquote>\n<p>It looks like the tests are running against captured replays of interactions with <a href=\"http://alexcrichton-test.s3.amazonaws.com/\">http://alexcrichton-test.s3.amazonaws.com/</a> </p>\n<p>How can I generate new ones? Do I need to set up an S3 account?</p>\n</blockquote>\n<p>I usually just copy-paste an existing capture</p>",
        "id": 276273969,
        "sender_full_name": "Carol (Nichols || Goulding)",
        "timestamp": 1647995503
    },
    {
        "content": "<p>infra wise, can it be a separate bucket?</p>",
        "id": 276294182,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648018126
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Currently all the config in the <a href=\"http://crates.io\">crates.io</a> source is centered around one S3 bucket for both crates and readme files so making a change to add a different bucket for the index isn't trivial.</p>\n<p>If it needs to be a separate bucket I can make that change. I think we'd need additional configuration keys such as <code>S3_INDEX_BUCKET, S3_INDEX_ACCESS_KEY, S3_INDEX_SECRET_KEY, S3_INDEX_REGION, S3_INDEX_CDN</code>, then some refactoring to share code about parsing the config and having a separate <code>Uploader</code> instance for the index.</p>\n<p>Is that something we need to move forward?</p>",
        "id": 276901578,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1648486170
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> would you set up a the S3 buckets?<br>\n<span class=\"user-mention\" data-user-id=\"270929\">@Arlo Siemsen</span> assuming that the envs get added, do you want to start on that code?</p>",
        "id": 277342565,
        "sender_full_name": "Eh2406",
        "timestamp": 1648762005
    },
    {
        "content": "<p>didn't have a chance yet</p>",
        "id": 277342591,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648762025
    },
    {
        "content": "<p>will do either on the weekend or next week</p>",
        "id": 277342608,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648762037
    },
    {
        "content": "<p>Perfect, thank you!</p>",
        "id": 277343126,
        "sender_full_name": "Eh2406",
        "timestamp": 1648762390
    },
    {
        "content": "<p>there are now the <code>crates-io-index</code> and <code>staging-crates-io-index</code> s3 buckets</p>",
        "id": 277472010,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648843929
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/simpleinfra/commit/64d96b727d0fcb0d73a4855c49036f1196cff2ea\">https://github.com/rust-lang/simpleinfra/commit/64d96b727d0fcb0d73a4855c49036f1196cff2ea</a></p>",
        "id": 277472100,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648843984
    },
    {
        "content": "<p>Wonderful! Do they have CludFrunt?</p>",
        "id": 277472280,
        "sender_full_name": "Eh2406",
        "timestamp": 1648844088
    },
    {
        "content": "<p>And what is the URL associated with them?</p>",
        "id": 277472446,
        "sender_full_name": "Eh2406",
        "timestamp": 1648844191
    },
    {
        "content": "<p>not yet, do you need cloudfront right now?</p>",
        "id": 277472464,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648844205
    },
    {
        "content": "<p>(or like, in the coming days?)</p>",
        "id": 277472480,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648844211
    },
    {
        "content": "<p>I think the s3 unblocks the <a href=\"http://crates.io\">crates.io</a> work. So thank you!</p>",
        "id": 277472565,
        "sender_full_name": "Eh2406",
        "timestamp": 1648844268
    },
    {
        "content": "<p>cloudfront/URLs will be needed when we get to testing it with cargo, but that is counting chickens.</p>",
        "id": 277472686,
        "sender_full_name": "Eh2406",
        "timestamp": 1648844327
    },
    {
        "content": "<p><a href=\"https://index.crates.io/\">https://index.crates.io/</a> + <a href=\"https://index.staging.crates.io\">https://index.staging.crates.io</a></p>",
        "id": 277473630,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648844821
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/simpleinfra/commit/62695e20150dccdd91044d85f415ce6f068a8d48\">https://github.com/rust-lang/simpleinfra/commit/62695e20150dccdd91044d85f415ce6f068a8d48</a></p>",
        "id": 277473661,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648844839
    },
    {
        "content": "<p>both configs are cut-down copy/pastes of the staging configuration</p>",
        "id": 277473720,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648844869
    },
    {
        "content": "<p>TTLs are definitely wrong on cloudfront</p>",
        "id": 277473729,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648844876
    },
    {
        "content": "<p>Should be more than good enough for testing!<br>\nI will make sure that you look at the TTL's again before anything gets stabilized.<br>\nDo you know what they are currently set to?</p>",
        "id": 277474165,
        "sender_full_name": "Eh2406",
        "timestamp": 1648845117
    },
    {
        "content": "<p>whatever default terraform or cloudfront sets</p>",
        "id": 277474269,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1648845174
    },
    {
        "content": "<p>I know the current index in GH stores only the 1st degree of dependencies. Would it be worthwhile to cache the entire graph of the dependency tree for each crate somehow</p>",
        "id": 277978242,
        "sender_full_name": "pinkforest(she/her)",
        "timestamp": 1649224439
    },
    {
        "content": "<p>I would love to test dependency-circular-bomb and see just how twisted / hostile dependency tree I could build</p>",
        "id": 277978383,
        "sender_full_name": "pinkforest(she/her)",
        "timestamp": 1649224572
    },
    {
        "content": "<p>Or are we still using some type of cloning type operation of the whole index in the new design? - what I understood from <a href=\"https://github.com/rust-lang/crates.io/pull/4661\">https://github.com/rust-lang/crates.io/pull/4661</a> is that it's atomic per crate instead of clone</p>",
        "id": 277978442,
        "sender_full_name": "pinkforest(she/her)",
        "timestamp": 1649224663
    },
    {
        "content": "<p>Upon publish from design PoV it should resolve the entire tree at publish stage and queue-delay publish upon when the dependency minimums have each been published - resolving by Pub/Sub kind of logic recursively working from the bottom-up - this would also resolve the issue described in broken builds due dependencies not published yet</p>",
        "id": 277981048,
        "sender_full_name": "pinkforest(she/her)",
        "timestamp": 1649227363
    },
    {
        "content": "<p>Happy to contribute some design / code / tests, it's a bit like reactive publish upon when dependencies are published</p>",
        "id": 277981104,
        "sender_full_name": "pinkforest(she/her)",
        "timestamp": 1649227441
    },
    {
        "content": "<blockquote>\n<p>Would it be worthwhile to cache the entire graph of the dependency tree for each crate somehow</p>\n</blockquote>\n<p>The graph depends on what else you are depending on. So I don't know how useful it would be to have the \"entire graph if this was your only dependency\"</p>\n<blockquote>\n<p>dependency-circular-bomb</p>\n</blockquote>\n<p>How are you proposing to publish circular dependency?</p>\n<blockquote>\n<p>what I understood from <a href=\"https://github.com/rust-lang/crates.io/pull/4661\">https://github.com/rust-lang/crates.io/pull/4661</a> is that it's atomic per crate instead of clone</p>\n</blockquote>\n<p>Yes.</p>\n<blockquote>\n<p>Happy to contribute some design / code / tests, it's a bit like reactive publish upon when dependencies are published</p>\n</blockquote>\n<p>I would love to talk about better designs. but the biggest limitations are the extremely limited capacity of both the cargo and <a href=\"http://crates.io\">crates.io</a> team.<br>\nThe current design is largely optimized to be small enough that both teams could imagine implementing it. and even so the cargo side took two years of implementation.</p>\n<p>Good design for what we could do next or really helpful. Designs that require us to do more work in order to see the tangible benefits from this design, is less helpful.</p>",
        "id": 278046604,
        "sender_full_name": "Eh2406",
        "timestamp": 1649261026
    },
    {
        "content": "<p>I updated the PR for <a href=\"http://crates.io\">crates.io</a> to add a separate bucket for the index, as well as a bulk-upload tool. <a href=\"https://github.com/rust-lang/crates.io/pull/4661\">https://github.com/rust-lang/crates.io/pull/4661</a></p>",
        "id": 278310964,
        "sender_full_name": "Arlo Siemsen",
        "timestamp": 1649427617
    }
]