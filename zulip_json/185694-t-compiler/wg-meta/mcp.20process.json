[
    {
        "content": "<p>So I was talking to <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> about moving to a final decision on the git subtree MCP</p>",
        "id": 193819242,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810760
    },
    {
        "content": "<p>And I realized a few things</p>",
        "id": 193819291,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810766
    },
    {
        "content": "<p>So, specific to <a href=\"https://github.com/rust-lang/compiler-team/issues/266\" title=\"https://github.com/rust-lang/compiler-team/issues/266\">https://github.com/rust-lang/compiler-team/issues/266</a> --</p>",
        "id": 193819310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810782
    },
    {
        "content": "<p>I think we've had plenty of exposure and we can just say we're in FCP, it was semi-announced last week</p>",
        "id": 193819334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810796
    },
    {
        "content": "<p>though it's <em>supposed</em> to start at a meeting, so we could wait for that</p>",
        "id": 193819349,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810803
    },
    {
        "content": "<p>which is probably also fine</p>",
        "id": 193819359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810810
    },
    {
        "content": "<p>but also the terminology here is maybe confusing and this process is kind of annoying me already in some minor ways</p>",
        "id": 193819385,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810825
    },
    {
        "content": "<p>On the matter of terminology, FCP sort of refers to three things, two of which are pre-existing:</p>\n<ul>\n<li>the process where everybody checks their boxes </li>\n<li>the time period <em>after</em> enough boxes are checked</li>\n<li>the time period <em>after</em> MCP is announced</li>\n</ul>",
        "id": 193819418,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810867
    },
    {
        "content": "<p>I worry we will be endlessly confused here</p>",
        "id": 193819429,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810875
    },
    {
        "content": "<p>On the topic of things being annoying, though, I think we need to figure out the process for \"announcing\" that an MCP has a second and will move to be accepted pretty soon. I also think it might be nice if it can start asynchronously anytime, but it needs to include at least one meeting? Or should it always start on a Thursday?</p>",
        "id": 193819534,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810940
    },
    {
        "content": "<p>I imagine for many changes -- especialy those like subtree that have had a fair amount of discussion -- it just feels unnecessary to wait.</p>",
        "id": 193819562,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810963
    },
    {
        "content": "<p>I like async starts</p>",
        "id": 193819578,
        "sender_full_name": "simulacrum",
        "timestamp": 1586810972
    },
    {
        "content": "<p>it always feels really awkward to wait if you have everything lined up</p>",
        "id": 193819591,
        "sender_full_name": "simulacrum",
        "timestamp": 1586810983
    },
    {
        "content": "<p>Yeah exactly</p>",
        "id": 193819603,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586810989
    },
    {
        "content": "<p>once question: do we want the meeting in which it's brought up to be after the second, or before?</p>",
        "id": 193819739,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811046
    },
    {
        "content": "<p>I'd be in favor of either</p>",
        "id": 193819746,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811049
    },
    {
        "content": "<p>to make it lightweight</p>",
        "id": 193819750,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811052
    },
    {
        "content": "<p>so the process could be:</p>\n<p>You post a comment like</p>\n<p>Hey @rust-lang/compiler, I second this proposal! </p>\n<p>and add the final-comment-period label. </p>\n<p>At the next meeting, we list out all the things with the final-comment-period label to make sure people know they're happening.</p>\n<p>After a week has passed, you can move ahead -- or, if you feel confident it will work out, after the meeting is fine.</p>",
        "id": 193819769,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811064
    },
    {
        "content": "<p>ah, hmm, I guess I can go either way</p>",
        "id": 193819804,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811083
    },
    {
        "content": "<p>I had in mind that people got notified <em>after</em> the second, because that's like \"oh hey this is happening\"</p>",
        "id": 193819841,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811106
    },
    {
        "content": "<p>instead of \"hmm this is an idea\"</p>",
        "id": 193819846,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811110
    },
    {
        "content": "<p>yeah, that's true</p>",
        "id": 193819862,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811122
    },
    {
        "content": "<p>let's go with that</p>",
        "id": 193819893,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811125
    },
    {
        "content": "<p>how hard would it be to automate the above?</p>",
        "id": 193819904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811140
    },
    {
        "content": "<p>though we should make sure that the notification at the meeting has at least a day or two after it</p>",
        "id": 193819907,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811141
    },
    {
        "content": "<p>e.g., so I wrote <code>rustbot second</code> or something</p>",
        "id": 193819922,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811145
    },
    {
        "content": "<p>maybe the fcp should start at the meeting then? Not sure</p>",
        "id": 193819941,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/mcp.20process/near/193819907\" title=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/mcp.20process/near/193819907\">said</a>:</p>\n<blockquote>\n<p>though we should make sure that the notification at the meeting has at least a day or two after it</p>\n</blockquote>\n<p>yeah I mean ideally it'd be a week, though I suspect a lot of cases (like this one) that feels like overkill</p>",
        "id": 193819948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811172
    },
    {
        "content": "<p>that reminds me that I wanted to make a special zulip stream for these sorts of things</p>",
        "id": 193819982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811199
    },
    {
        "content": "<p>fcp is normally 10 days</p>",
        "id": 193819985,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811202
    },
    {
        "content": "<p>side note that I seconded git subtree 10 days -- I think I actually <em>did</em> annoucne that at the meeting</p>",
        "id": 193820019,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811239
    },
    {
        "content": "<p>so in some sense we've been keeping the procedure :)</p>",
        "id": 193820061,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811245
    },
    {
        "content": "<p>but I forget</p>",
        "id": 193820062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811249
    },
    {
        "content": "<p>so let's maybe have this:</p>\n<ul>\n<li>fcp lasts for 10 days after seconding</li>\n<li>you kick off fcp with <code>rustbot second</code>, which:<ul>\n<li>pings wg-prioritization asking for inclusion in meeting notes</li>\n<li>adds label for fcp</li>\n</ul>\n</li>\n</ul>",
        "id": 193820079,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811263
    },
    {
        "content": "<p>yep</p>",
        "id": 193820088,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811271
    },
    {
        "content": "<p>not sure if the ping is helpful</p>",
        "id": 193820092,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811273
    },
    {
        "content": "<p>ideally it would also post into the zulip stream</p>",
        "id": 193820095,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811276
    },
    {
        "content": "<p>probably the ping isn't needed</p>",
        "id": 193820121,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811294
    },
    {
        "content": "<p>since they can just skim the final-comment-period labels</p>",
        "id": 193820130,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811301
    },
    {
        "content": "<p>but <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> can decide</p>",
        "id": 193820145,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811309
    },
    {
        "content": "<p>okay, I can probably get that going</p>",
        "id": 193820204,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811353
    },
    {
        "content": "<p>I think it probably doesn't make sense for the bot to create a zulip stream though?</p>",
        "id": 193820255,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811365
    },
    {
        "content": "<p>since it probably already exists</p>",
        "id": 193820259,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811370
    },
    {
        "content": "<p>sorry so</p>",
        "id": 193820508,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811526
    },
    {
        "content": "<p>I will make a zulip <em>stream</em></p>",
        "id": 193820511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811529
    },
    {
        "content": "<p>PS I'm going to declare <a href=\"https://github.com/rust-lang/compiler-team/issues/266\" title=\"https://github.com/rust-lang/compiler-team/issues/266\">compiler-team#266</a> accepted :)</p>",
        "id": 193820516,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I meant the per-change stream</p>",
        "id": 193820544,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811556
    },
    {
        "content": "<p>er, not stream</p>",
        "id": 193820552,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811561
    },
    {
        "content": "<p>yeah so .. here's what I want, two things</p>",
        "id": 193820554,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811563
    },
    {
        "content": "<p>topic</p>",
        "id": 193820556,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811565
    },
    {
        "content": "<ul>\n<li>when you open a major-change issue, it'd be nice if a bot could make a topic for it automatically</li>\n</ul>",
        "id": 193820573,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811581
    },
    {
        "content": "<ul>\n<li>when it enters FCP, maybe it should post to a special topic like \"final comment periods\" within <code>#t-compiler/major changes</code>?</li>\n</ul>",
        "id": 193820706,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811614
    },
    {
        "content": "<p>(or perhaps within <code>#t-compiler</code>)</p>",
        "id": 193820728,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811620
    },
    {
        "content": "<p>anyway, something like that</p>",
        "id": 193820738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811625
    },
    {
        "content": "<p>maybe it'd just be nice to have a kind of \"procedural announcements\" stream</p>",
        "id": 193820766,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811635
    },
    {
        "content": "<p>I think they're both feasible, yeah...</p>",
        "id": 193820783,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811642
    },
    {
        "content": "<p>I think having dedicated topics per thing though is good</p>",
        "id": 193820805,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811649
    },
    {
        "content": "<p>(easier on the backend, too)</p>",
        "id": 193820824,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811660
    },
    {
        "content": "<blockquote>\n<p>So @Mark-Simulacrum and I were talking on Zulip and we wanted to tweak the process as follows:</p>\n<ul>\n<li>You can \"second\" at any time by writing <code>@rustbot second</code>. This will trigger the <code>final-comment-period</code> label to be added and FCP lasts for 10 days.</li>\n<li>We will announce things in FCP at the weekly triage meeting.</li>\n<li>As long as the change is \"reversible\", and your confident all stakeholders will agree, you can shortcut the FCP, but it should still overlap with at least one triage meeting.</li>\n</ul>\n</blockquote>",
        "id": 193821057,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811766
    },
    {
        "content": "<p>draft comment, does that sound right?</p>",
        "id": 193821093,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811787
    },
    {
        "content": "<p>to be clear, this fcp does not have the rfcbot checklist</p>",
        "id": 193821122,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811807
    },
    {
        "content": "<p>since that's 'too heavyweight'</p>",
        "id": 193821125,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811811
    },
    {
        "content": "<p>right</p>",
        "id": 193821140,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811815
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> from me in that case</p>",
        "id": 193821164,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811831
    },
    {
        "content": "<p>maybe we should give it a different name</p>",
        "id": 193821165,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811831
    },
    {
        "content": "<p>not sure what but...</p>",
        "id": 193821172,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811837
    },
    {
        "content": "<p>maybe just \"mcp-seconded\"</p>",
        "id": 193821228,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811850
    },
    {
        "content": "<p>'objection period'</p>",
        "id": 193821240,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811858
    },
    {
        "content": "<p>not sure :)</p>",
        "id": 193821253,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811864
    },
    {
        "content": "<p>I mean we could say, you write second, and it becomes a \"seconded MCP\"</p>",
        "id": 193821281,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811886
    },
    {
        "content": "<p>10 days after an MCP has been seconded, if there's no objections or concerns raised, it is accepted</p>",
        "id": 193821298,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811899
    },
    {
        "content": "<p>I would.. avoid tagging more onto MCP I think</p>",
        "id": 193821309,
        "sender_full_name": "simulacrum",
        "timestamp": 1586811907
    },
    {
        "content": "<p>we don't have a name for that <em>period</em> I guess</p>",
        "id": 193821310,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811907
    },
    {
        "content": "<p>side note that</p>",
        "id": 193821389,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811954
    },
    {
        "content": "<p>I'd like to change the normal FCP process to start the clock as soon as you say <code>rfcbot fcp merge</code></p>",
        "id": 193821453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586811964
    },
    {
        "content": "<p>hmm I'm not sure if what I was going to say makes sense</p>",
        "id": 193821487,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586812005
    },
    {
        "content": "<p>anyway these things feel similar, kind of a question of how much \"pre-checking\" you need</p>",
        "id": 193821514,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586812018
    },
    {
        "content": "<p>indeed</p>",
        "id": 193821536,
        "sender_full_name": "simulacrum",
        "timestamp": 1586812033
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/mcp.20process/near/193820145\" title=\"#narrow/stream/185694-t-compiler.2Fwg-meta/topic/mcp.20process/near/193820145\">said</a>:</p>\n<blockquote>\n<p>but <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span> can decide</p>\n</blockquote>\n<p>yeah we can skim the things using the label, remember to let me know when do we need to start doing so :)</p>",
        "id": 193821906,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1586812239
    },
    {
        "content": "<p>ah we should probably start now</p>",
        "id": 193822163,
        "sender_full_name": "simulacrum",
        "timestamp": 1586812401
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> are you planning to create the stream?</p>",
        "id": 193825524,
        "sender_full_name": "simulacrum",
        "timestamp": 1586814400
    },
    {
        "content": "<p>or are we putting in t-compiler for now?</p>",
        "id": 193825537,
        "sender_full_name": "simulacrum",
        "timestamp": 1586814407
    },
    {
        "content": "<p>I guess I will create it now</p>",
        "id": 193935874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887579
    },
    {
        "content": "<p>Created <a class=\"stream\" data-stream-id=\"233931\" href=\"/#narrow/stream/233931-t-compiler.2Fmajor-changes\">#t-compiler/major changes</a></p>",
        "id": 193935956,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1586887627
    },
    {
        "content": "<p>let me update the triagebot.toml on the compiler-team repo to point there</p>",
        "id": 193936066,
        "sender_full_name": "simulacrum",
        "timestamp": 1586887682
    },
    {
        "content": "<p>done</p>",
        "id": 193936205,
        "sender_full_name": "simulacrum",
        "timestamp": 1586887761
    },
    {
        "content": "<p>Hmm, so <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> mentioned in <a href=\"https://github.com/rust-lang/rfcs/issues/2904\" title=\"https://github.com/rust-lang/rfcs/issues/2904\">rfc#2904</a> discussing thread that <a href=\"https://github.com/rust-lang/rfcs/pull/2904#issuecomment-612597794\" title=\"https://github.com/rust-lang/rfcs/pull/2904#issuecomment-612597794\">they would prefer a regular fcp for stabilizing user-facing features</a>:</p>\n<blockquote>\n<p>I don't like that the process for stabilizing a minor user facing feature is different now between language/library and compiler.</p>\n<p>Submitting a PR and starting an FCP worked well enough in all these cases.<br>\n(Except that waiting for one more week after everyone ticked their boxes often feels excessive.)</p>\n</blockquote>\n<p>I'm trying to think how to integrate that feedback exactly. I'm not sure I agree that submitting a PR worked well enough, in that I think many people don't know the procedure, and there is frequently not enough documentation or other notes along the way. But I <em>am</em> inclined to agree that for \"end-user facing features\" a full team FCP seems reasonable (I also agree that waiting another week often feels silly.)</p>",
        "id": 194319758,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587050107
    },
    {
        "content": "<p>I would also kind of like to have a \"smooth line\" between MCP and larger proposals -- i.e., the starting point is an MCP, and what can happen is that it gets \"upgraded\" to requiring a full fcp, because it is a larger decision or impacts end users etc</p>",
        "id": 194319948,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587050172
    },
    {
        "content": "<p>This then effectively becomes the lang team idea I was kicking around for having people propose ideas and look for a sponsor before jumping to a full RFC -- after all, maybe the idea is simple enough it doesn't merit an RFC</p>",
        "id": 194320047,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587050210
    }
]