[
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"126931\">@centril</span></p>",
        "id": 160679592,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493054
    },
    {
        "content": "<p>Hey!</p>",
        "id": 160679606,
        "sender_full_name": "centril",
        "timestamp": 1552493062
    },
    {
        "content": "<p>I'm going to transcribe our Discord conversation to a gist and then post a link to it.</p>",
        "id": 160679630,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493085
    },
    {
        "content": "<p>transcription will be linked here: <a href=\"https://gist.github.com/pnkfelix/a927bfd5c008e07e9757ac608c6c4443\" target=\"_blank\" title=\"https://gist.github.com/pnkfelix/a927bfd5c008e07e9757ac608c6c4443\">https://gist.github.com/pnkfelix/a927bfd5c008e07e9757ac608c6c4443</a></p>",
        "id": 160679698,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493133
    },
    {
        "content": "<p>And now I will attempt to summarize, for the benefit of <span class=\"user-group-mention\" data-user-group-id=\"1095\">@WG-compiler-meta</span></p>",
        "id": 160679978,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493309
    },
    {
        "content": "<p>inspired by discussion of <a href=\"https://github.com/rust-lang/rust/issues/58739\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/58739\">#58739</a> and a hypothetical future-incompat lint there</p>",
        "id": 160680003,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126931\">@centril</span> and I were were musing about some of the problems associated with shifting existing future-incompatibility lints from warnings into hard errors</p>",
        "id": 160680058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493381
    },
    {
        "content": "<p>There are two problems that we discussed. Well, maybe three problems, depending on your point of view.</p>",
        "id": 160680147,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493410
    },
    {
        "content": "<p>First problem: We've been creating future-incompatibility lints, but we have not been establishing a plan/schedule for <em>when</em> they will eventually turn from warnings into hard errors.</p>",
        "id": 160680206,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493447
    },
    {
        "content": "<p>That seems like a policy question. Its probably one that is best handled by T-compiler and T-lang</p>",
        "id": 160680294,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493488
    },
    {
        "content": "<p>Second problem: The existing future-incompat lint structure lets developers <code>#![allow(..)]</code> such lints.</p>",
        "id": 160680402,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493526
    },
    {
        "content": "<p>Thus silencing them. Thus largely defeating their purpose.</p>",
        "id": 160680427,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493538
    },
    {
        "content": "<p>this may be especially problematic when one considers <code>cargo</code> and <code>--cap-lints=allow</code>.</p>",
        "id": 160680587,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493576
    },
    {
        "content": "<p>We almost certainly need to change that behavior in <em>some</em> fashion.</p>",
        "id": 160680689,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493607
    },
    {
        "content": "<p>but (and this is the third problem), I am not even sure how many stake-holders there are when it comes to such a change.</p>",
        "id": 160680932,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493644
    },
    {
        "content": "<p>Or, a rephrasing of the third-problem: Which teams/stakeholders to we need to pull into discussion of this matter?</p>",
        "id": 160681169,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493680
    },
    {
        "content": "<p>that last bit was what I think led <span class=\"user-mention\" data-user-id=\"126931\">@centril</span> to suggest bringing this question to <span class=\"user-group-mention\" data-user-group-id=\"1095\">@WG-compiler-meta</span></p>",
        "id": 160681325,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552493705
    },
    {
        "content": "<p>There's also probably a 4th problem: when we do move from warning=&gt;deny=&gt;error, who needs to approve? do we require team approval (which teams?), or just someone who reviews the crater regressions, the amount of time and then r+es?</p>",
        "id": 160681577,
        "sender_full_name": "centril",
        "timestamp": 1552493752
    },
    {
        "content": "<p>also cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 160682394,
        "sender_full_name": "centril",
        "timestamp": 1552493822
    },
    {
        "content": "<p>For some background, the first \"cycle\" for compatibility warnings lasted for about 6 months, the second one for about 9 months, IIRC.<br>\n(I sent PRs promoting the warnings to deny-by-default and to errors in both cases.)<br>\nI planned to the third \"cycle\" to last for about a year (which seems like an ok timing for me in general), but the edition and other things happened, so it's more than 1.5 years now.</p>",
        "id": 160715246,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1552502046
    },
    {
        "content": "<p>Of course, some lints were turned into errors out of the cycle because they blocked some other work or made it unwieldy.</p>",
        "id": 160715307,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1552502105
    },
    {
        "content": "<blockquote>\n<p>We almost certainly need to change that behavior in <em>some</em> fashion.</p>\n</blockquote>\n<p>see also <a href=\"https://github.com/rust-lang/rust/issues/34596\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34596\">https://github.com/rust-lang/rust/issues/34596</a> -- the best UI is a complex question.</p>",
        "id": 160804536,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552585653
    },
    {
        "content": "<blockquote>\n<p>Or, a rephrasing of the third-problem: Which teams/stakeholders to we need to pull into discussion of this matter?</p>\n</blockquote>\n<p>I think perhaps the best thing would be to be somewhat \"self-selecting\". That is, we might try to arrange a meeting for a date in the future, and then advertise it widely and see who shows up and is interested. I think it would be a good topic for an RFC, ultimately.</p>",
        "id": 160804650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552585712
    },
    {
        "content": "<p>Basically I imagine a short-lived working group focused on drafting a policy</p>",
        "id": 160804681,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552585739
    },
    {
        "content": "<p>not necessarily one that we go through the trouble to \"list\" on the page or anything</p>",
        "id": 160804719,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552585777
    },
    {
        "content": "<p>actually, if we adopted a \"sprint-like structure\"</p>",
        "id": 160804730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552585787
    },
    {
        "content": "<p>this would be a good sprint goal for the meta WG</p>",
        "id": 160804736,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1552585794
    },
    {
        "content": "<p>I think T-Lang + T-Compiler are probably natural reviewers of an RFC in the end (at least for the non-cargo-ish parts)</p>",
        "id": 160805684,
        "sender_full_name": "centril",
        "timestamp": 1552586406
    },
    {
        "content": "<blockquote>\n<p>see also <a href=\"https://github.com/rust-lang/rust/issues/34596\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34596\">https://github.com/rust-lang/rust/issues/34596</a> -- the best UI is a complex question. </p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Looking at this, I think we should at least start with:<br>\n1. Make <code>#![allow(the_incompat_lint)]</code> have no effect and cap the lint at <code>warn</code> at most.<br>\n2. Extend this to <code>--cap-lints=allow</code><br>\n1. can be done before 2.<br>\nAs for not spamming people, first I think the annoyance is by design. I also think each future-compat lint should be emitted at least once. (e.g. don't say that the crate is broken, show why it is broken... because the crate author may be the same one as the dependency's author). That said, I think if we can reduce repetition that's good. However, I think we should not block on this because it may take much time and we should solve the more urgent problem first even if it temporarily is annoying.</p>",
        "id": 160942593,
        "sender_full_name": "centril",
        "timestamp": 1552726157
    },
    {
        "content": "<p>E.g. in the case of Servo and the type alias problem, this should encourage Servo's authors to file bugs against the third party crate such that the warning goes away.</p>",
        "id": 160942658,
        "sender_full_name": "centril",
        "timestamp": 1552726285
    },
    {
        "content": "<blockquote>\n<p>For some background, the first \"cycle\" for compatibility warnings lasted for about 6 months, the second one for about 9 months, IIRC.<br>\n(I sent PRs promoting the warnings to deny-by-default and to errors in both cases.)<br>\nI planned to the third \"cycle\" to last for about a year (which seems like an ok timing for me in general), but the edition and other things happened, so it's more than 1.5 years now.</p>\n</blockquote>\n<p>How about doing this based on editions?  As I understand the discussions around the <a href=\"https://github.com/steveklabnik/rfcs/blob/2019-roadmap/text/0000-roadmap-2019.md\" target=\"_blank\" title=\"https://github.com/steveklabnik/rfcs/blob/2019-roadmap/text/0000-roadmap-2019.md\">2019 roadmap,</a> rust is now now going to be doing editions fairly regularly, correct?  So, how about in edition <code>N</code> it's a warning, in edition <code>N+1</code> it gets denied, and in edition <code>N+2</code> it's a hard error?  This will also give users an idea of how to prioritize any changes they need to make in their code bases based on where in the cycle a feature happens to be.</p>\n<p>We can probably extend this to any sort of deprecation of features as well; that will allow rust to keep evolving, while allowing end users to keep up with the changes.</p>",
        "id": 161058352,
        "sender_full_name": "Cem Karan",
        "timestamp": 1552916877
    },
    {
        "content": "<p>I recently brought up a similar idea, of trying to tie incompat-shifts to edition releases, to SimonSapin. I wish I could remember the various objections they brought up, because I just remember instantly agreeing and saying it was a bad idea</p>",
        "id": 161059999,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552918132
    },
    {
        "content": "<p>One concern is that it may be conflating very different things</p>",
        "id": 161060031,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552918158
    },
    {
        "content": "<p>(e.g. consider changing coding style in order to match edition <em>idioms</em>, versus revising code in order to deal with anticipated hard errors predicts by future-incompat lints)</p>",
        "id": 161060120,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552918213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Could you point me to where those concerns are at?  I'd like to know more, as well as see if we can come up with a systematic way of handling incompatible updates in the future. </p>\n<p>Hrmmmmm.... maybe we need a working group on how to handle incompatible changes from a policy point of view...</p>",
        "id": 161064205,
        "sender_full_name": "Cem Karan",
        "timestamp": 1552920990
    },
    {
        "content": "<p>It was during a face-to-face conversation; I’ll try to poke Simon and ask them to boost my memory</p>",
        "id": 161064660,
        "sender_full_name": "pnkfelix",
        "timestamp": 1552921260
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Thanks.</p>",
        "id": 161087036,
        "sender_full_name": "Cem Karan",
        "timestamp": 1552936251
    },
    {
        "content": "<blockquote>\n<p>I recently brought up a similar idea, of trying to tie incompat-shifts to edition releases, to SimonSapin. I wish I could remember the various objections they brought up, because I just remember instantly agreeing and saying it was a bad idea</p>\n</blockquote>\n<p>for one thing I think the timeline is way too long</p>",
        "id": 161156035,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553006309
    },
    {
        "content": "<p>future incompatibility warnings are generally due to things like <strong>bug fixes</strong></p>",
        "id": 161156054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553006318
    },
    {
        "content": "<p>we are not going to wait until Rust 2021 (or whenever next edition occurs) to stabilize NLL</p>",
        "id": 161156077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1553006333
    },
    {
        "content": "<p>Part of why I wanted to get a better handle on the C-future-compat lints was that I think we let them sit around for way too long even today; I'd like to shorten it overall</p>",
        "id": 161156529,
        "sender_full_name": "centril",
        "timestamp": 1553006581
    },
    {
        "content": "<p>It's fine to postpone based on crater runs ofc</p>",
        "id": 161156551,
        "sender_full_name": "centril",
        "timestamp": 1553006594
    },
    {
        "content": "<p>But if 3 months have passed and there are no crater regressions it should just be moved along</p>",
        "id": 161156590,
        "sender_full_name": "centril",
        "timestamp": 1553006633
    },
    {
        "content": "<p>I think of the schedules and whatnot as scheduled check-ins and guidelines</p>",
        "id": 161156700,
        "sender_full_name": "centril",
        "timestamp": 1553006687
    },
    {
        "content": "<blockquote>\n<p>for one thing I think the timeline is way too long</p>\n</blockquote>\n<p>What sort of timeline were you imagining?  That might suggest how to handle it.</p>",
        "id": 161171160,
        "sender_full_name": "Cem Karan",
        "timestamp": 1553016069
    }
]