[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> -- we raised the idea of a WG oriented around </p>\n<ul>\n<li>improving how we use LLVM</li>\n<li>improving LLVM itself to address bugs</li>\n</ul>\n<p>Still interested in pursuing this? If so, there are <a href=\"https://github.com/rust-lang/compiler-team/blob/master/procedures/form-new-working-group.md#step-3-setting-things-up\" target=\"_blank\" title=\"https://github.com/rust-lang/compiler-team/blob/master/procedures/form-new-working-group.md#step-3-setting-things-up\">instructions in the compiler-team repository</a> for how to setup the basic template, and I can create the Zulip stuff.</p>",
        "id": 159550212,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551299820
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span>, this may be the first you're hearing of this =) so we can definitely talk it over</p>",
        "id": 159550240,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551299848
    },
    {
        "content": "<p>I’m currently very busy with large changes in my (work) life, so I’m not going to pursue that for quite a while.</p>",
        "id": 159550325,
        "sender_full_name": "nagisa",
        "timestamp": 1551299920
    },
    {
        "content": "<p>OTOH if <span class=\"user-mention\" data-user-id=\"133224\">@Nikita Popov</span> expresses their interest, then maybe? Also cc <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span>.</p>",
        "id": 159550349,
        "sender_full_name": "nagisa",
        "timestamp": 1551299953
    },
    {
        "content": "<p>(zulip said something about <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> not being subscribed to the stream and therefore not being notified... and then presented me a button to subscribe them on my own volition?)</p>",
        "id": 159550439,
        "sender_full_name": "nagisa",
        "timestamp": 1551300028
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> Yes, that's part of how Zulip works. If <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> is not subscribed to the stream, they wouldn't see your message. I just subscribed them. =)</p>",
        "id": 159551394,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300900
    },
    {
        "content": "<p>I think the intention is that you will subscribe people if you are asking them a question, but not if you are just mentioning them in passing.</p>",
        "id": 159551419,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300912
    },
    {
        "content": "<p>That reminds me that I want to schedule some sort of Zulip Team meeting and try to write-up these practices...</p>",
        "id": 159551432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300933
    },
    {
        "content": "<p>...but that's for another stream/topic ;)</p>",
        "id": 159551438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300941
    },
    {
        "content": "<blockquote>\n<p>I’m currently very busy with large changes in my (work) life, so I’m not going to pursue that for quite a while.</p>\n</blockquote>\n<p>I'm happy to have it on a kind of \"shortlist\" of ideas for the future -- I was thinking it'd be great to make such a list.</p>",
        "id": 159551458,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551300960
    },
    {
        "content": "<p>weird that I can't even get a notification without being subscribed to the whole stream, did not expect that when I unsubscribed</p>",
        "id": 159555152,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1551303626
    },
    {
        "content": "<p>I, too, am too tied up by other things to pitch in. But in my biased opinion, this is indeed an area where it would make sense to focus more contributions, so I'd be very happy to see such a WG happen and would gladly offer braindumping/mentoring/etc. as time permits</p>",
        "id": 159555352,
        "sender_full_name": "Hanna Kruppe",
        "timestamp": 1551303834
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"124289\">@rkruppe</span> / <span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>  the \"minimal initial investment\" that probably makes sense for a WG is a set of leaders / mentors who are willing to do the following:</p>\n<ul>\n<li>Create a few specific actionable ideas that would be good candidates</li>\n<li>Monitor the Zulip stream and mentor folks who show up</li>\n<li>Update the compiler team every once in a while</li>\n</ul>\n<p>I don't think it has to be a super high investment, but that first step is sort of key. It seems ok to me if we create a WG, do some work to setup \"mentorable bugs\", and then step back to steep if a few folks show up. We can avoid creating too many bugs in order to avoid a flood. =) If nobody shows up, that's ok, we're no worse off -- better off, even, as we have some mentorable bugs in the queue for later.</p>\n<p>But if writing decent mentoring instructions on 1-3 bugs is too much work, it's probably not worth it.</p>",
        "id": 159628914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551371281
    },
    {
        "content": "<p>I guess first order of business (if we want a list of mentorable issues) is then to find issues that stem from LLVM we want to fix the most. <code>loop {}</code> is an obvious candidate I had in mind when proposing the WG, but that is something I already started working on... I guess I could write up <em>some</em> instructions mayhaps?</p>",
        "id": 159629420,
        "sender_full_name": "nagisa",
        "timestamp": 1551371562
    },
    {
        "content": "<p><code>loop { }</code> would be great, yeah. I don't know <em>how</em> detailed the mentoring instructions have to be -- even outlining some high-level steps and asking people to find you for more in depth comments would be better than nothing</p>",
        "id": 159630507,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551372409
    },
    {
        "content": "<p>I know that I'd definitely be interested in helping out with this working group - I have zero experience with LLVM but with some high level instructions and a pointer or two about which areas of the code I should be looking at then I'd be happy to dive in and see what I can come up with.</p>",
        "id": 159630977,
        "sender_full_name": "davidtwco",
        "timestamp": 1551372771
    },
    {
        "content": "<p>Either way, please give me like a month to get my contracting to lift off</p>",
        "id": 159631502,
        "sender_full_name": "nagisa",
        "timestamp": 1551373181
    },
    {
        "content": "<p>so that I don’t have to deal with mentoring people in addition to having to figure out taxes, laws, bookkeeping and all that other stuff that comes along with the pleasure of being own’s boss.</p>",
        "id": 159631624,
        "sender_full_name": "nagisa",
        "timestamp": 1551373251
    },
    {
        "content": "<p>I'd be happy to help with the LLVM WG. We have quite a lot of open LLVM related bugs, and I think many should be approachable to newcomers with some triage.</p>",
        "id": 159637827,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1551378037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span> For <code>loop { }</code>, do you have a workaroud on the rust side in mind, or fixes on the LLVM side?</p>",
        "id": 159637873,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1551378078
    },
    {
        "content": "<p>LLVM already has <code>@llvm.sideeffect</code> so it would be possible to fix it on the Rust side, but it seems to me that fixing it on LLVM side in the first place is easier than making Rust emit <code>@llvm.sideeffect</code>.</p>",
        "id": 159637962,
        "sender_full_name": "nagisa",
        "timestamp": 1551378134
    },
    {
        "content": "<p>specifically the problem appears to be caused specifically by LLVM functionattr pass adding <code>readnone</code>, <code>readonly</code> or <code>writeonly</code> onto non-terminating functions...</p>",
        "id": 159638114,
        "sender_full_name": "nagisa",
        "timestamp": 1551378230
    },
    {
        "content": "<p>that is the part that needs to be fixed and it feels like a fairly easy thing to do, except, I am having a hard time figuring out how to prevent LLVM from doing that.</p>",
        "id": 159638201,
        "sender_full_name": "nagisa",
        "timestamp": 1551378275
    },
    {
        "content": "<p>(admittedly I didn’t look too hard into it since I did the initial investigation)</p>",
        "id": 159638240,
        "sender_full_name": "nagisa",
        "timestamp": 1551378299
    },
    {
        "content": "<p>And once those attributes are there other memory accesses get reordered around calls?</p>",
        "id": 159638764,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1551378622
    },
    {
        "content": "<p>we should split it out into a separate stream.</p>",
        "id": 159638905,
        "sender_full_name": "nagisa",
        "timestamp": 1551378720
    },
    {
        "content": "<p>Seems like I'm a bit late to the party, but I'd also be interested in this WG. I'm new to <code>rustc</code>, but do have some experience with LLVM.</p>",
        "id": 159639892,
        "sender_full_name": "dlrobertson",
        "timestamp": 1551379299
    },
    {
        "content": "<p>What would the difference be between this WG and WG-codegen?</p>",
        "id": 159640027,
        "sender_full_name": "dlrobertson",
        "timestamp": 1551379361
    },
    {
        "content": "<p>LLVM WG is specifically aimed at work upstream, whereas WG-codegen deals with lowering-to-llvm.</p>",
        "id": 159640140,
        "sender_full_name": "nagisa",
        "timestamp": 1551379439
    },
    {
        "content": "<p>An example of such work would be working with upstream to get features <em>we</em> need developed and landed.</p>",
        "id": 159640217,
        "sender_full_name": "nagisa",
        "timestamp": 1551379468
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> thanks for the clarification. I'm just a casual contributor to rustc, so that plus my newbie-ness probably means I will not be much help, but I'm definitely interested in this WG</p>",
        "id": 159641319,
        "sender_full_name": "dlrobertson",
        "timestamp": 1551380209
    },
    {
        "content": "<p>OK seems like there's <strong>definitely</strong> enough interest that this should happen -- who wants to open the PR to create the group?</p>",
        "id": 159641698,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551380467
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"123586\">@nagisa</span>, perhaps?)</p>",
        "id": 159641711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551380472
    },
    {
        "content": "<blockquote>\n<p>(<span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span>, perhaps?)</p>\n</blockquote>\n<p>okay, lemme see if I can find the repository that has instructions <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 159641755,
        "sender_full_name": "nagisa",
        "timestamp": 1551380512
    },
    {
        "content": "<p>I think WG-codegen is dead (and wasn't really particularly alive to start with...)</p>",
        "id": 159648624,
        "sender_full_name": "Nikita Popov",
        "timestamp": 1551385277
    },
    {
        "content": "<p>WG-codegen is dead, love live WG-llvm</p>",
        "id": 159651904,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551387765
    },
    {
        "content": "<p>Created <a class=\"stream\" data-stream-id=\"187780\" href=\"/#narrow/stream/187780-t-compiler.2Fwg-llvm\">#t-compiler/wg-llvm</a>, although it's not the most creative name :)</p>",
        "id": 159661098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1551394977
    }
]