[
    {
        "content": "<p>we were talking about matching <code>Place</code> now that after interning instead of having <code>Box&lt;[T]&gt;</code> we will have <code>&amp;List&lt;T&gt;</code></p>",
        "id": 177947207,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826465
    },
    {
        "content": "<p>/cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>",
        "id": 177947214,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826474
    },
    {
        "content": "<p>what I'm mainly doing is calling <code>Place::as_ref()</code> to get a <code>PlaceRef</code> which holds <code>&amp;[T]</code> instead of <code>&amp;List&lt;T&gt;</code></p>",
        "id": 177947284,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826522
    },
    {
        "content": "<p>so trivial cases are not thaaat bad</p>",
        "id": 177947321,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826531
    },
    {
        "content": "<p>the problem is once the pattern is more complex, like having Place inside other things</p>",
        "id": 177947338,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826547
    },
    {
        "content": "<p>patterns like <code>Operand(Place { ... })</code> are now not directly possible</p>",
        "id": 177947349,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826566
    },
    {
        "content": "<p>yeah I mean at the end of the day I think you just need nested matches sometimes</p>",
        "id": 177947359,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570826573
    },
    {
        "content": "<p>maybe point to some particularl examples?</p>",
        "id": 177947372,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570826581
    },
    {
        "content": "<p>need to translate to <code>Operand(place)</code> and then match over <code>place.as_ref()</code> or things like that</p>",
        "id": 177947384,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826590
    },
    {
        "content": "<p>tbqh I sort of prefer helper functions describing patterns where possible anyway</p>",
        "id": 177947387,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570826592
    },
    {
        "content": "<p>but I might just have stockholm syndrome</p>",
        "id": 177947404,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570826606
    },
    {
        "content": "<p>I feel like there's some syndrome where compiler authors avoid complex features because they know what a pain they are to implement</p>",
        "id": 177947423,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570826619
    },
    {
        "content": "<p>that's how I presently feel about slice patterns :P</p>",
        "id": 177947439,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570826634
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L497\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L497\">https://github.com/rust-lang/rust/blob/master/src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs#L497</a></p>",
        "id": 177947596,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826748
    },
    {
        "content": "<blockquote>\n<p>I feel like there's some syndrome where compiler authors avoid complex features because they know what a pain they are to implement</p>\n</blockquote>\n<p>LOL</p>",
        "id": 177947668,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570826780
    },
    {
        "content": "<p>link doesn't work for me</p>",
        "id": 177947952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570826977
    },
    {
        "content": "<p>fixed</p>",
        "id": 177948062,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570827028
    },
    {
        "content": "<p>sorry, in a particular branch</p>",
        "id": 177948070,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570827039
    },
    {
        "content": "<p>yeah so that's a case where I would sort of prefer the <code>as_local</code> function</p>",
        "id": 177948339,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827211
    },
    {
        "content": "<p>that said</p>",
        "id": 177948353,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827218
    },
    {
        "content": "<p>how often is the pattern the \"empty list\"?</p>",
        "id": 177948371,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827227
    },
    {
        "content": "<p>i.e., <code>box []</code></p>",
        "id": 177948379,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827232
    },
    {
        "content": "<p>A <code>Place::local</code> combinator that returns <code>Some(local)</code> when the place has no projections would remove many places where you need to match on the projections directly, at least in the code I've been working on.</p>",
        "id": 177948411,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1570827243
    },
    {
        "content": "<p>that <em>might</em> be something we could do with a constant</p>",
        "id": 177948433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827246
    },
    {
        "content": "<blockquote>\n<p>A <code>Place::local</code> combinator that returns <code>Some(local)</code> when the place has no projections and would remove many places where you need to match on the projections directly, at least in the code I've been working on.</p>\n</blockquote>\n<p>there is one</p>",
        "id": 177948440,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827253
    },
    {
        "content": "<p>I landed it -- I think? -- as part of some PR</p>",
        "id": 177948450,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827260
    },
    {
        "content": "<p><code> place.as_local()</code> I think?</p>",
        "id": 177948463,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1570827268
    },
    {
        "content": "<p>I'll check. I've seen <code>local_or_deref_local</code>.</p>",
        "id": 177948500,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1570827291
    },
    {
        "content": "<p>maybe I can look for better examples :)</p>",
        "id": 177948508,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570827294
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.Place.html#method.as_local\" target=\"_blank\" title=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc/mir/struct.Place.html#method.as_local\">Place::as_local</a></p>",
        "id": 177948581,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1570827345
    },
    {
        "content": "<p>time to rewrite some stuff :)</p>",
        "id": 177948598,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1570827358
    }
]