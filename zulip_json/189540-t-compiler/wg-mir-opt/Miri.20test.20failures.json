[
    {
        "content": "<p>Uh-oh, I think we have an incorrect optimization somewhere... the Miri test suite started failing with <code>-Zmir-opt-level=3</code>: <a href=\"https://travis-ci.com/github/rust-lang/miri/jobs/352020194\">https://travis-ci.com/github/rust-lang/miri/jobs/352020194</a></p>",
        "id": 201577772,
        "sender_full_name": "RalfJ",
        "timestamp": 1592813488
    },
    {
        "content": "<p>specifically, <a href=\"https://github.com/rust-lang/miri/blob/31ad5f6b2b93f78d3366c0654609f4b685043ec9/tests/run-pass/union.rs#L21\">this assertion fails</a></p>",
        "id": 201578753,
        "sender_full_name": "RalfJ",
        "timestamp": 1592814161
    },
    {
        "content": "<p>yea, mir opt level 3 contains buggy things</p>",
        "id": 201580111,
        "sender_full_name": "oli",
        "timestamp": 1592815228
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/73262\">https://github.com/rust-lang/rust/pull/73262</a> is an example</p>",
        "id": 201580159,
        "sender_full_name": "oli",
        "timestamp": 1592815284
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/73609\">https://github.com/rust-lang/rust/issues/73609</a></p>",
        "id": 201583533,
        "sender_full_name": "RalfJ",
        "timestamp": 1592817896
    },
    {
        "content": "<p>well this is a regression, it worked before</p>",
        "id": 201583539,
        "sender_full_name": "RalfJ",
        "timestamp": 1592817903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/Miri.20test.20failures/near/201580159\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/pull/73262\">https://github.com/rust-lang/rust/pull/73262</a> is an example</p>\n</blockquote>\n<p>wait we are keeping <em>known incorrect</em> optimization passes enabled?!? that's like a deliberate soundness issue, why are we doing this?^^</p>",
        "id": 201583788,
        "sender_full_name": "RalfJ",
        "timestamp": 1592818033
    },
    {
        "content": "<p>\"high opt level\" shouldn't imply \"contains critical bugs\", that just makes no sense...</p>",
        "id": 201583816,
        "sender_full_name": "RalfJ",
        "timestamp": 1592818056
    },
    {
        "content": "<p>if for some reason you want to keep those broken optimizations reachable, please hide them behind <code>-Zmir-please-break-my-code</code> or so</p>",
        "id": 201584314,
        "sender_full_name": "RalfJ",
        "timestamp": 1592818426
    },
    {
        "content": "<p>yes, we discussed that recently and it will come</p>",
        "id": 201584456,
        "sender_full_name": "oli",
        "timestamp": 1592818527
    },
    {
        "content": "<p>:)</p>",
        "id": 201584636,
        "sender_full_name": "RalfJ",
        "timestamp": 1592818679
    },
    {
        "content": "<p>I'll make miri test mir-opt-level=2 until then</p>",
        "id": 201584695,
        "sender_full_name": "RalfJ",
        "timestamp": 1592818701
    },
    {
        "content": "<p>oh no I have to go all the way down to 1...</p>",
        "id": 201585888,
        "sender_full_name": "RalfJ",
        "timestamp": 1592819053
    },
    {
        "content": "<p>Does the const prop change even touch opt-level=3-only code? Maybe it miscompiles on all levels, but you only notice on levels 2 and up</p>",
        "id": 201586046,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1592819134
    },
    {
        "content": "<p><code>Operand::Indirect</code> only gets const-prop'ed at <code>mir-opt-level=2</code> and higher: <a href=\"https://github.com/wesleywiser/rust/blob/2f49d554ff1afd1633a01d6b84192ad0147d9097/src/librustc_mir/transform/const_prop.rs#L705-L709\">https://github.com/wesleywiser/rust/blob/2f49d554ff1afd1633a01d6b84192ad0147d9097/src/librustc_mir/transform/const_prop.rs#L705-L709</a></p>",
        "id": 201586367,
        "sender_full_name": "bjorn3",
        "timestamp": 1592819338
    },
    {
        "content": "<p>the new thing is actually a stable-to-nightly regression:<br>\n<a href=\"https://github.com/rust-lang/rust/issues/73609#issuecomment-647409694\">https://github.com/rust-lang/rust/issues/73609#issuecomment-647409694</a></p>",
        "id": 201586372,
        "sender_full_name": "RalfJ",
        "timestamp": 1592819339
    },
    {
        "content": "<p>and it has nothing to do with unions... it seems to just ignore mutation via references entirely <span aria-label=\"scared\" class=\"emoji emoji-1f628\" role=\"img\" title=\"scared\">:scared:</span></p>",
        "id": 201586851,
        "sender_full_name": "RalfJ",
        "timestamp": 1592819600
    },
    {
        "content": "<p>how does this not break, like, <em>everything</em>?^^</p>",
        "id": 201587013,
        "sender_full_name": "RalfJ",
        "timestamp": 1592819699
    }
]