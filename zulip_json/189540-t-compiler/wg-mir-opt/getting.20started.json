[
    {
        "content": "<p>Hi there! What is a good way to get started with working on MIR optimizations? I looked through the issues tagged with <code>A-mir-opt</code> and there are no E-easy issues, and only one E-mentor issue, which is in fact assigned to <span class=\"user-mention silent\" data-user-id=\"116266\">Santiago Pastorino</span>. I have a basic understanding of data-flow analysis and I've worked on other parts of rustc.</p>",
        "id": 216300349,
        "sender_full_name": "Noah Lev",
        "timestamp": 1605060624
    },
    {
        "content": "<p>We have reached a sort of equilibrium right now where any fancy optimizations require major implementation work and already have someone focussing on it. If you are also interested in just cleaning up our existing optimizations, here's one issue that may require dataflow in order to make correct: <a href=\"https://github.com/rust-lang/rust/issues/78368\">https://github.com/rust-lang/rust/issues/78368</a></p>",
        "id": 216321012,
        "sender_full_name": "oli",
        "timestamp": 1605085540
    },
    {
        "content": "<p>oh... apologies, I just realized while going through my notifications that this issue is in fact addressed in a just newly opened PR: <a href=\"https://github.com/rust-lang/rust/pull/78928\">https://github.com/rust-lang/rust/pull/78928</a></p>",
        "id": 216322704,
        "sender_full_name": "oli",
        "timestamp": 1605086590
    },
    {
        "content": "<p>Any other recommendations then?</p>",
        "id": 216402893,
        "sender_full_name": "Noah Lev",
        "timestamp": 1605131352
    },
    {
        "content": "<p>What's the state of whether MIR needs to be type-correct after optimizations these days?</p>\n<p>I was pondering whether we could strip away all <code>repr(transparent)</code> types as a MIR optimization, or even just <code>ManuallyDrop</code> (which is already a lang item) -- I have a few experiments where the extra copy from an argument into a <code>ManuallyDrop</code> meant that it added a bunch of stack usage for the copy that shouldn't be needed.</p>",
        "id": 216412190,
        "sender_full_name": "scottmcm",
        "timestamp": 1605138923
    },
    {
        "content": "<p>Right now MIR assignments need to have the same type (modulo some special cases) on the LHS and RHS</p>",
        "id": 216439020,
        "sender_full_name": "oli",
        "timestamp": 1605169456
    },
    {
        "content": "<p>but this is not something built in stone, in fact it has been discussed every now and then whether we should lift this restriction</p>",
        "id": 216439046,
        "sender_full_name": "oli",
        "timestamp": 1605169480
    },
    {
        "content": "<p>I think if you do an MCP with that motivation it would go through</p>",
        "id": 216439070,
        "sender_full_name": "oli",
        "timestamp": 1605169498
    },
    {
        "content": "<p>do you have thoughts on more exploratory work maybe, whether it'd be about looking for optimizations, IRs, or validating our existing optimizations ? (a fun note is that sometimes all those can be done by a single thing, for example equality saturation -- which eternaleye and eddy liked a lot IIRC -- and is also fun because there's work done in rust for e-graphs in the <a href=\"https://github.com/egraphs-good/egg\">egg crate</a>)</p>",
        "id": 216459861,
        "sender_full_name": "lqd",
        "timestamp": 1605183348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Camelid</span> <br>\nI just created <a href=\"https://github.com/rust-lang/rust/issues/78994\">https://github.com/rust-lang/rust/issues/78994</a> which perhaps could be of interest to you? I would probably have expected the SimplifyLocals pass to eliminate <code>_2</code>.</p>",
        "id": 216499963,
        "sender_full_name": "Simon Vandel Sillesen",
        "timestamp": 1605201840
    },
    {
        "content": "<p>I'll take a look, thanks :)</p>",
        "id": 216534530,
        "sender_full_name": "Noah Lev",
        "timestamp": 1605217983
    }
]