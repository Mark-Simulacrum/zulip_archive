[
    {
        "content": "<p>Did something change with the <code>optimized_mir</code> query recently? Between nightlies 2021-01-02 and 2021-01-14</p>\n<p>Clippy started panicking on a query call to <a href=\"https://github.com/rust-lang/rust-clippy/blob/00586dfdcd10c37cb8b132c72ed0558304955042/clippy_lints/src/implicit_return.rs#L136\"><code>cx.tcx.optimized_mir()</code></a>  on a function body. The panic comes from <code>get_optimized_mir</code> inside <a href=\"https://github.com/rust-lang/rust/blob/c7b0ddbffebee1cb06f184e815ca637706c53053/compiler/rustc_metadata/src/rmeta/decoder.rs#L1189\"><code>compiler/rustc_metadata/src/rmeta/decoder.rs</code></a>, which suggests, that the MIR query fails to save/recover the MIR of a function.</p>\n<p>Steps to reproduce:</p>\n<ol>\n<li>Compile this pull request of Clippy: <a href=\"https://github.com/rust-lang/rust-clippy/issues/6586\">clippy#6586</a> <code>cargo install --path . --debug --force</code></li>\n<li><code>cp ~/.cargo/bin/*clippy* $(rustc +nightly-2021-01-14 --print sysroot)/bin</code></li>\n<li>Clone <a href=\"https://github.com/Marwes/combine\">https://github.com/Marwes/combine</a></li>\n<li>Check it with Clippy: </li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>RUST_BACKTRACE=full LD_LIBRARY_PATH=$(rustc +nightly-2021-01-14 --print sysroot)/lib cargo +nightly-2021-01-14 clippy --all-targets --all-features\n</code></pre></div>",
        "id": 222703534,
        "sender_full_name": "flip1995",
        "timestamp": 1610622219
    },
    {
        "content": "<p>Miri is no longer encoded by default in check mode.</p>",
        "id": 222703616,
        "sender_full_name": "bjorn3",
        "timestamp": 1610622258
    },
    {
        "content": "<p>This is <a href=\"https://github.com/rust-lang/rust/issues/80718\">#80718</a></p>",
        "id": 222703653,
        "sender_full_name": "bjorn3",
        "timestamp": 1610622285
    },
    {
        "content": "<p>So should I set the <code>always_encode_mir</code> option for Clippy until someone who knows what they do comes and properly fixes this? This would mean, that we can never call <code>optimized_mir</code> on closures in Clippy?</p>",
        "id": 222704052,
        "sender_full_name": "flip1995",
        "timestamp": 1610622540
    },
    {
        "content": "<p>Can't this be fixed by getting the function signature like at <a href=\"https://github.com/rust-lang/rust/blob/f52c72948aa1dd718cc1f168d21c91c584c0a662/src/librustc_middle/ty/layout.rs#L2301\">https://github.com/rust-lang/rust/blob/f52c72948aa1dd718cc1f168d21c91c584c0a662/src/librustc_middle/ty/layout.rs#L2301</a>?</p>",
        "id": 222704410,
        "sender_full_name": "bjorn3",
        "timestamp": 1610622753
    },
    {
        "content": "<p>If not, then <code>-Zalways-encode-mir</code> should fix it for now.</p>",
        "id": 222704433,
        "sender_full_name": "bjorn3",
        "timestamp": 1610622771
    },
    {
        "content": "<p>Hm, this function is private and it seems that is for a reason.</p>",
        "id": 222706382,
        "sender_full_name": "flip1995",
        "timestamp": 1610624175
    },
    {
        "content": "<p>After trying to fix that for some time now, I've come to the conclusion, that I have to add <code>-Zalways-encode-mir</code>. This broke Clippy in every case where Clippy is trying to access MIR. I think we should get rid of calls to the <code>optimized_mir</code> query, like suggested before.</p>",
        "id": 222720259,
        "sender_full_name": "flip1995",
        "timestamp": 1610632969
    },
    {
        "content": "<p>If you only query optimized_mir for the local crate then it should be fixed by <a href=\"https://github.com/rust-lang/rust/issues/81003\">#81003</a>.</p>",
        "id": 222720434,
        "sender_full_name": "tm",
        "timestamp": 1610633046
    },
    {
        "content": "<p>That PR will only encode optimized_mir for generators.</p>",
        "id": 222720500,
        "sender_full_name": "bjorn3",
        "timestamp": 1610633084
    },
    {
        "content": "<p>cargo check doesn't include optimized mir for most items since 2018</p>",
        "id": 222720615,
        "sender_full_name": "tm",
        "timestamp": 1610633151
    },
    {
        "content": "<p>I can try if that PR fixes it. But I doubt it, since adding the option to just the compiled crate and not the deps didn't fix the problem.</p>",
        "id": 222720800,
        "sender_full_name": "flip1995",
        "timestamp": 1610633238
    },
    {
        "content": "<p>If you could test if this PR fixes the issue that would be great.</p>",
        "id": 222721032,
        "sender_full_name": "tm",
        "timestamp": 1610633340
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/Clippy.20started.20panicking.20on.20optimized_mir.20call/near/222703616\">said</a>:</p>\n<blockquote>\n<p>Miri is no longer encoded by default in check mode.</p>\n</blockquote>\n<p>I think this might be why <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20does.20this.20compile.20error.20mean.3F\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20does.20this.20compile.20error.20mean.3F</a> was breaking :D let me try <code>-Z always-encode-mir</code> there</p>",
        "id": 222721113,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610633382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> generators are special because it should be the only thing where optimized mir is required for non-local crate, even if you never request it directly (assuming no codegen).</p>",
        "id": 222721772,
        "sender_full_name": "tm",
        "timestamp": 1610633652
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264664\">flip1995</span> <a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/Clippy.20started.20panicking.20on.20optimized_mir.20call/near/222720800\">said</a>:</p>\n<blockquote>\n<p>I can try if that PR fixes it. But I doubt it, since adding the option to just the compiled crate and not the deps didn't fix the problem.</p>\n</blockquote>\n<p>^^ It would be also the reason why adding -Zencode-mir to the crate, without adding it to the deps didn't fix the problem.</p>",
        "id": 222725303,
        "sender_full_name": "tm",
        "timestamp": 1610635139
    },
    {
        "content": "<p>Yes that fixed it! Thanks <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 222726471,
        "sender_full_name": "flip1995",
        "timestamp": 1610635690
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/Clippy.20started.20panicking.20on.20optimized_mir.20call/near/222721113\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/Clippy.20started.20panicking.20on.20optimized_mir.20call/near/222703616\">said</a>:</p>\n<blockquote>\n<p>Miri is no longer encoded by default in check mode.</p>\n</blockquote>\n<p>I think this might be why <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20does.20this.20compile.20error.20mean.3F\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/What.20does.20this.20compile.20error.20mean.3F</a> was breaking :D let me try <code>-Z always-encode-mir</code> there</p>\n</blockquote>\n<p>nope :(</p>\n<div class=\"codehilite\"><pre><span></span><code>error: crate `std` required to be available in rlib format, but was not found in this form\n</code></pre></div>",
        "id": 222735672,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610639256
    },
    {
        "content": "<p>well, probably unrelated to this change then</p>",
        "id": 222735721,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610639270
    }
]