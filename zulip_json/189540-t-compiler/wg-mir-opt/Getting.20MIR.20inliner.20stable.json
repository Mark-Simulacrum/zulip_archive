[
    {
        "content": "<p>I was wondering, do we have an understanding of the problems holding back the mir inliner? What will it take to get it stable? It seems like we could win a lot by having it. From what I can tell it seems to cause a lot of ICEs but I don't actually see that many issues on GH</p>",
        "id": 205599433,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1596207041
    },
    {
        "content": "<p>ICEs are solved I think, afaik it's just that LLVM regresses perf by a lot if we turn it on</p>",
        "id": 205601608,
        "sender_full_name": "oli",
        "timestamp": 1596207993
    },
    {
        "content": "<p>I can't find a tracking issue for this, but we have <a href=\"https://github.com/rust-lang/compiler-team/issues/281\">https://github.com/rust-lang/compiler-team/issues/281</a></p>",
        "id": 205601868,
        "sender_full_name": "oli",
        "timestamp": 1596208112
    },
    {
        "content": "<p>ah so it's CGU partitioning again?</p>",
        "id": 205602606,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1596208374
    },
    {
        "content": "<p>that's frustrating</p>",
        "id": 205602625,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1596208381
    },
    {
        "content": "<p>good thing we have <a class=\"stream\" data-stream-id=\"241847\" href=\"/#narrow/stream/241847-t-compiler.2Fwg-incr-comp\">#t-compiler/wg-incr-comp</a> now :P</p>",
        "id": 205602660,
        "sender_full_name": "Xavier Denis",
        "timestamp": 1596208394
    },
    {
        "content": "<p>Damned CGUs XD</p>",
        "id": 205603113,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596208592
    },
    {
        "content": "<p>Question: the MIR inliner gave better performance still on full (ie non-incremental) builds, right?</p>",
        "id": 205604227,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596209078
    },
    {
        "content": "<p>Or was it also regressing in full builds?</p>",
        "id": 205604256,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596209093
    },
    {
        "content": "<p>(I ask because if it were regressing in full builds, then that means that there must be something besides CGU partitioning that's making it slower than not inlining)</p>",
        "id": 205604399,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596209150
    },
    {
        "content": "<p>full builds also do CGU partitioning</p>",
        "id": 205605039,
        "sender_full_name": "oli",
        "timestamp": 1596209427
    },
    {
        "content": "<p>and yes, they also regressed</p>",
        "id": 205605054,
        "sender_full_name": "oli",
        "timestamp": 1596209432
    },
    {
        "content": "<p>Damn</p>",
        "id": 205606593,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210288
    },
    {
        "content": "<p>Oh, okay, I think I remember now what the CGU partitioning implied for full builds</p>",
        "id": 205606630,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210312
    },
    {
        "content": "<p><code>deeply-nested</code> also regressed like 10,000x in release mode because LLVM was able to do a lot more optimizations (at least that's my theory).</p>",
        "id": 205606682,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596210349
    },
    {
        "content": "<p>I was thinking only about the fact that in incremental you can change a lot of CGUs when recompiling</p>",
        "id": 205606685,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210351
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/68213\">https://github.com/rust-lang/rust/pull/68213</a></p>",
        "id": 205606814,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596210408
    },
    {
        "content": "<p>For those interested</p>",
        "id": 205606824,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596210414
    },
    {
        "content": "<p>But in full builds the size of the generated CGUs matters a lot, and since inlining should (think) raise the sizes, that's where it can regress</p>",
        "id": 205606832,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210421
    },
    {
        "content": "<p>Oh god, those regressions</p>",
        "id": 205607012,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210513
    },
    {
        "content": "<p>:(</p>",
        "id": 205607016,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210516
    },
    {
        "content": "<p>So Wesley: inlining should only be used for release mode, right?</p>",
        "id": 205607048,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210541
    },
    {
        "content": "<p>Or should it be used in debug as well?</p>",
        "id": 205607076,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210557
    },
    {
        "content": "<p>I dunno if LLVM inlines functions in debug mode</p>",
        "id": 205607118,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210581
    },
    {
        "content": "<p>If it doesn't, then maybe the inlining opt only makes sense for release</p>",
        "id": 205607149,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210599
    },
    {
        "content": "<p>(Because otherwise it wouldn't be taking work out of llvm)</p>",
        "id": 205607248,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596210633
    },
    {
        "content": "<p>(Forgot to tag you: <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span>)</p>",
        "id": 205608035,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211061
    },
    {
        "content": "<p>Arguably yeah it should only apply in release mode but there's a fair number of debug improvements as well. issue-46449-debug for example shows an almost 9% improvement on debug full.</p>",
        "id": 205608299,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596211203
    },
    {
        "content": "<p>Woah</p>",
        "id": 205608416,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211271
    },
    {
        "content": "<p>I guess that means llvm applies inlining even on debug level?</p>",
        "id": 205608472,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211313
    },
    {
        "content": "<p>Hang on I think I can check that with a playground <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 205608537,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211329
    },
    {
        "content": "<p>Brb</p>",
        "id": 205608541,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211331
    },
    {
        "content": "<p>No but inlining is a crucial optimization because it enables so many of the other optimizations to kick in.</p>",
        "id": 205608692,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596211426
    },
    {
        "content": "<p>Ohhhhhhhhh</p>",
        "id": 205609012,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211563
    },
    {
        "content": "<p>That makes sense!</p>",
        "id": 205609027,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211569
    },
    {
        "content": "<p>:D</p>",
        "id": 205609031,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211572
    },
    {
        "content": "<p>And with that you can overall give llvm better and crucially... smaller IR</p>",
        "id": 205609070,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1596211600
    },
    {
        "content": "<p>Yeah <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 205609269,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1596211711
    }
]