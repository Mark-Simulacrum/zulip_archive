[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> , now that <code>BodyCache</code> (soon to be <code>BodyAndCache</code> per recommendation from eddyb through <a href=\"https://github.com/rust-lang/rust/pull/66991\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66991\">https://github.com/rust-lang/rust/pull/66991</a>) is in, should I move forward with figuring out which fn's are good candidates for an <code>#[inline]</code> attribute? Or should I jump back to the <code>wg-parallel-rustc</code> project?</p>",
        "id": 182478140,
        "sender_full_name": "Paul Faria",
        "timestamp": 1575396610
    },
    {
        "content": "<p>iirc eddy fixed it themselves. Not sure if the inline stuff gets us anywhere, so... I guess you removed another stumbling stone for parallel rustc and can search for the next one :D</p>",
        "id": 182478473,
        "sender_full_name": "oli",
        "timestamp": 1575396840
    },
    {
        "content": "<p>I think my change also includes the removal of that body fn we tried getting rid of before. Otherwise it's the same (not sure if his also cleans up the reborrows)</p>",
        "id": 182479428,
        "sender_full_name": "Paul Faria",
        "timestamp": 1575397389
    },
    {
        "content": "<p>I'll check it out, but let's wait until their PR is merged</p>",
        "id": 182483017,
        "sender_full_name": "oli",
        "timestamp": 1575399495
    },
    {
        "content": "<blockquote>\n<p>BodyCache (soon to be BodyAndCache)</p>\n</blockquote>\n<p>And there, Miri breaks again. ;)</p>",
        "id": 182838927,
        "sender_full_name": "RalfJ",
        "timestamp": 1575714230
    },
    {
        "content": "<p>(but we did get Miri into yesterday's nightly so all is fine)</p>",
        "id": 182838975,
        "sender_full_name": "RalfJ",
        "timestamp": 1575714291
    },
    {
        "content": "<p>I had no idea my changes broke miri. So sorry! What steps would I need to take to ensure it doesn't break in the future? I tend to take longer since I can't work on the project full time, and ensuring my changes cause as little trouble as possible is more important to me than getting something out quickly</p>",
        "id": 182919638,
        "sender_full_name": "Paul Faria",
        "timestamp": 1575858220
    },
    {
        "content": "<p>If you want to see whether clippy or miri break, you can run <code>./x.py test src/tools/miri</code> (or clippy) and see if that still compiles. If it does not, you can fix it until it works again and then open a PR with your changes to the respective repo</p>",
        "id": 182943387,
        "sender_full_name": "oli",
        "timestamp": 1575888123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116114\">@Paul Faria</span> it's okay, Miri gets broken at least once a month. That is the price we pay for using internal compiler APIs. we also benefit a lot from that.</p>",
        "id": 183168132,
        "sender_full_name": "RalfJ",
        "timestamp": 1576078358
    },
    {
        "content": "<p>We just had a bad streak of Miri being broken in 4 different ways by 4 PRs that landed within 48h or so^^</p>",
        "id": 183168177,
        "sender_full_name": "RalfJ",
        "timestamp": 1576078378
    },
    {
        "content": "<p>testing if clippy/miri break takes a lot of time, and I don't expect all rustc contributors to do that. if people help with the fallout after landing their PR, that is appreciated, but not mandatory. :)</p>",
        "id": 183168238,
        "sender_full_name": "RalfJ",
        "timestamp": 1576078416
    },
    {
        "content": "<p>but it would be good to be mindful that there are (semi-)external consumers of some of these APIs, so we should avoid renaming a type 3 times while iterating towards the best name.</p>",
        "id": 183168346,
        "sender_full_name": "RalfJ",
        "timestamp": 1576078462
    }
]