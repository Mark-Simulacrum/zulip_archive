[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> hey, do you think it would be cheap to check in the constant folder if a local always has a constant value whenever initialized?</p>",
        "id": 187620166,
        "sender_full_name": "eddyb",
        "timestamp": 1581062339
    },
    {
        "content": "<p>I guess it could be its own pass post-constant-folding, that checks for one initialization and no mutation</p>",
        "id": 187620182,
        "sender_full_name": "eddyb",
        "timestamp": 1581062398
    },
    {
        "content": "<p>I want to have <code>debug x =&gt; _123;</code> replaced with e.g. <code>debug x =&gt; const 42usize;</code> wherever possible</p>",
        "id": 187620277,
        "sender_full_name": "eddyb",
        "timestamp": 1581062480
    },
    {
        "content": "<p>the other thing we could do is <code>debug a =&gt; &amp;b.c;</code> (value of debug var a is always the address of a place with no runtime indexing or derefs)</p>",
        "id": 187620404,
        "sender_full_name": "eddyb",
        "timestamp": 1581062621
    },
    {
        "content": "<p>the latter wouldn't count as a borrow because only the debugger would see it, and also both it and the constant form could use <code>llvm.dbg.value</code></p>",
        "id": 187620479,
        "sender_full_name": "eddyb",
        "timestamp": 1581062710
    },
    {
        "content": "<p>the goal is to reduce the impact of debuginfo on optimizations and codegen</p>",
        "id": 187620576,
        "sender_full_name": "eddyb",
        "timestamp": 1581062851
    },
    {
        "content": "<p>but maybe I should do some statistics on the kinds of things that are e.g. unnecessarily on the stack in debug mode</p>",
        "id": 187620632,
        "sender_full_name": "eddyb",
        "timestamp": 1581062894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> By \"constant folder\" do you mean const-prop or something else?</p>",
        "id": 187629010,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581072395
    },
    {
        "content": "<p>yeah I guess it's called const-prop</p>",
        "id": 187681078,
        "sender_full_name": "eddyb",
        "timestamp": 1581110303
    },
    {
        "content": "<p>I'd argue propagation is just replacing uses with the value at the definition, whereas folding is e.g. <code>_5 = 1 + 2</code> =&gt; <code>_5 = 3</code> (there's no propagation there)</p>",
        "id": 187681256,
        "sender_full_name": "eddyb",
        "timestamp": 1581110342
    },
    {
        "content": "<p>the current pass is a combination of propagation and folding</p>",
        "id": 187681268,
        "sender_full_name": "eddyb",
        "timestamp": 1581110358
    },
    {
        "content": "<p>Sure yeah</p>",
        "id": 187681623,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581110621
    },
    {
        "content": "<p>I can't imagine it would be expensive</p>",
        "id": 187681626,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581110629
    },
    {
        "content": "<p>We've already done that check and know what locals satisfy that constraint</p>",
        "id": 187681686,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581110662
    },
    {
        "content": "<p>oh right you're not relying on dataflow?</p>",
        "id": 187681831,
        "sender_full_name": "eddyb",
        "timestamp": 1581110790
    },
    {
        "content": "<p>I guess you couldn't have, <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span>'s stuff is pretty recent</p>",
        "id": 187681840,
        "sender_full_name": "eddyb",
        "timestamp": 1581110808
    },
    {
        "content": "<p>Nah, not yet</p>",
        "id": 187682124,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1581111009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span>  I took a stab at implementing this. Does this seem about right to you? <a href=\"https://github.com/rust-lang/rust/compare/master...wesleywiser:consts_in_debuginfo\">https://github.com/rust-lang/rust/compare/master...wesleywiser:consts_in_debuginfo</a></p>",
        "id": 199613497,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591187930
    },
    {
        "content": "<p>quick side note just from looking at the tests: use <code>Display</code> formatting for the constant instead of <code>Debug</code> formatting</p>",
        "id": 199624398,
        "sender_full_name": "oli",
        "timestamp": 1591193607
    },
    {
        "content": "<p>Thanks! Will do</p>",
        "id": 199624530,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591193660
    },
    {
        "content": "<p>Yeah, that's way better:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gd\">-         debug x =&gt; _1;                   // in scope 1 at $DIR/scalar_literal_propagation.rs:3:9: 3:10</span>\n<span class=\"gi\">+         debug x =&gt; const 1u32;           // in scope 1 at $DIR/scalar_literal_propagation.rs:3:9: 3:10</span>\n</code></pre></div>",
        "id": 199745232,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591276907
    },
    {
        "content": "<p>I wouldn't change <code>VariableKind</code></p>",
        "id": 199761539,
        "sender_full_name": "eddyb",
        "timestamp": 1591283562
    },
    {
        "content": "<p>it refers to the LHS not the RHS even if it's computed from the RHS.... it's kind of messed up</p>",
        "id": 199761632,
        "sender_full_name": "eddyb",
        "timestamp": 1591283599
    },
    {
        "content": "<p>changing <code>PerLocalVarDebugInfo</code> also doesn't seem necessary</p>",
        "id": 199761693,
        "sender_full_name": "eddyb",
        "timestamp": 1591283631
    },
    {
        "content": "<p>Ah yeah I think I only matched against it here so that's not necessary <a href=\"https://github.com/rust-lang/rust/compare/master...wesleywiser:consts_in_debuginfo#diff-59edf51044167945d3d123c17e706bfdR544\">https://github.com/rust-lang/rust/compare/master...wesleywiser:consts_in_debuginfo#diff-59edf51044167945d3d123c17e706bfdR544</a></p>",
        "id": 199761759,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591283642
    },
    {
        "content": "<p>so hmm starting from the MIR</p>",
        "id": 199762011,
        "sender_full_name": "eddyb",
        "timestamp": 1591283738
    },
    {
        "content": "<p>I wouldn't split the <code>DebugInfo</code> in <code>VarDebugInfo</code></p>",
        "id": 199762056,
        "sender_full_name": "eddyb",
        "timestamp": 1591283754
    },
    {
        "content": "<p>so <code>VarDebugInfoValue</code>, although it doesn't feel great either. I wonder what I used in the SROA PR</p>",
        "id": 199762159,
        "sender_full_name": "eddyb",
        "timestamp": 1591283777
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> <code>VarDebugInfoContents</code></p>",
        "id": 199762248,
        "sender_full_name": "eddyb",
        "timestamp": 1591283810
    },
    {
        "content": "<p>Is that in your SROA PR?</p>",
        "id": 199762334,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591283839
    },
    {
        "content": "<p>yeah</p>",
        "id": 199762347,
        "sender_full_name": "eddyb",
        "timestamp": 1591283845
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/48300\">#48300</a> right?</p>",
        "id": 199762416,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591283871
    },
    {
        "content": "<p>there it's used for simple leaves vs composite (each field has its own <code>VarDebugInfoContents</code>)</p>",
        "id": 199762426,
        "sender_full_name": "eddyb",
        "timestamp": 1591283874
    },
    {
        "content": "<p>yeah</p>",
        "id": 199762444,
        "sender_full_name": "eddyb",
        "timestamp": 1591283881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> so, the reason changing <code>PerLocalVarDebugInfo</code> doesn't make sense to me is that it's specifically the information you need to emit debuginfo <em>for initializing a given <code>Local</code></em></p>",
        "id": 199762814,
        "sender_full_name": "eddyb",
        "timestamp": 1591284021
    },
    {
        "content": "<p>if it's a constant there's no local involved</p>",
        "id": 199762878,
        "sender_full_name": "eddyb",
        "timestamp": 1591284047
    },
    {
        "content": "<p>Yeah</p>",
        "id": 199762889,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284052
    },
    {
        "content": "<p>The reason I did that was I needed all the same fields except <code>projection</code></p>",
        "id": 199762944,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284074
    },
    {
        "content": "<p>you don't need to gather them into a <code>Vec</code> tho</p>",
        "id": 199762984,
        "sender_full_name": "eddyb",
        "timestamp": 1591284095
    },
    {
        "content": "<p>Which is not a great reason to hack it in there lol</p>",
        "id": 199762988,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284098
    },
    {
        "content": "<p>you don't need \"var name\" for constants</p>",
        "id": 199763201,
        "sender_full_name": "eddyb",
        "timestamp": 1591284177
    },
    {
        "content": "<p>since they can't have it anyway (only fn args and instructions can have names)</p>",
        "id": 199763239,
        "sender_full_name": "eddyb",
        "timestamp": 1591284195
    },
    {
        "content": "<p>so you should just get away with spill  + <code>dbg_var_addr</code></p>",
        "id": 199763411,
        "sender_full_name": "eddyb",
        "timestamp": 1591284252
    },
    {
        "content": "<p>oh I see, you're triggering it from <code>debug_introduce_locals</code></p>",
        "id": 199763635,
        "sender_full_name": "eddyb",
        "timestamp": 1591284345
    },
    {
        "content": "<p>Yeah</p>",
        "id": 199763777,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284387
    },
    {
        "content": "<p>okay so uhhh my advice to keep this simple likely requires renaming <code>compute_per_local_var_debug_info</code></p>",
        "id": 199763804,
        "sender_full_name": "eddyb",
        "timestamp": 1591284402
    },
    {
        "content": "<p>I did it that way because the current system seems pretty oriented around locals which we've removed for constants.</p>",
        "id": 199763857,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284423
    },
    {
        "content": "<p>and instead of <code>per_local[place.local].push(</code> it can do <code>dbg_var_addr</code> directly</p>",
        "id": 199763882,
        "sender_full_name": "eddyb",
        "timestamp": 1591284435
    },
    {
        "content": "<p>well it's oriented around locals in a very specific way that makes no sense for constants</p>",
        "id": 199763950,
        "sender_full_name": "eddyb",
        "timestamp": 1591284473
    },
    {
        "content": "<p>Yeah</p>",
        "id": 199763967,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284482
    },
    {
        "content": "<p>specifically it's <em>on-demand</em> for locals</p>",
        "id": 199764007,
        "sender_full_name": "eddyb",
        "timestamp": 1591284486
    },
    {
        "content": "<p>or on-assignment rather</p>",
        "id": 199764016,
        "sender_full_name": "eddyb",
        "timestamp": 1591284490
    },
    {
        "content": "<p>Ok, I think I'm following that.</p>",
        "id": 199764042,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284502
    },
    {
        "content": "<p>no need to do that kind of deferral for constants</p>",
        "id": 199764052,
        "sender_full_name": "eddyb",
        "timestamp": 1591284506
    },
    {
        "content": "<p>And yeah if we do it that way I don't need to collect to a vec or modify PerLocalDebugInfo</p>",
        "id": 199764089,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284525
    },
    {
        "content": "<p>mhmm</p>",
        "id": 199764115,
        "sender_full_name": "eddyb",
        "timestamp": 1591284540
    },
    {
        "content": "<p>thanks for pointing me to this btw</p>",
        "id": 199764125,
        "sender_full_name": "eddyb",
        "timestamp": 1591284545
    },
    {
        "content": "<p>Thanks, that's really helpful!</p>",
        "id": 199764131,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284548
    },
    {
        "content": "<p>as you may have noticed I've been kind of out of it</p>",
        "id": 199764149,
        "sender_full_name": "eddyb",
        "timestamp": 1591284557
    },
    {
        "content": "<p>where \"it\" is everything</p>",
        "id": 199764158,
        "sender_full_name": "eddyb",
        "timestamp": 1591284561
    },
    {
        "content": "<p>np!</p>",
        "id": 199764159,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284561
    },
    {
        "content": "<p>I knew you'd probably be interested <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 199764197,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284580
    },
    {
        "content": "<p>Re the SROA changes. Do you still think I should try to incorporate those into this?</p>",
        "id": 199764331,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284625
    },
    {
        "content": "<p>just the name :P</p>",
        "id": 199764563,
        "sender_full_name": "eddyb",
        "timestamp": 1591284717
    },
    {
        "content": "<p>i.e. value -&gt; contents</p>",
        "id": 199764614,
        "sender_full_name": "eddyb",
        "timestamp": 1591284723
    },
    {
        "content": "<p>only if you think it makes sense</p>",
        "id": 199764631,
        "sender_full_name": "eddyb",
        "timestamp": 1591284729
    },
    {
        "content": "<p>Ah ok</p>",
        "id": 199764637,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284731
    },
    {
        "content": "<p>I forget exactly what my line of reasoning was</p>",
        "id": 199764647,
        "sender_full_name": "eddyb",
        "timestamp": 1591284734
    },
    {
        "content": "<p>That's totally fine</p>",
        "id": 199764657,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284738
    },
    {
        "content": "<p>I have no strong opinions here lol</p>",
        "id": 199764700,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284758
    },
    {
        "content": "<p>Thanks for taking a look at this! I really appreciate it</p>",
        "id": 199764953,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591284853
    }
]