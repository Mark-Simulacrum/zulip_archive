[
    {
        "content": "<p>I'm very interested in finding out what people's opinions are on approaches to resolving <a href=\"https://github.com/rust-lang/miri/issues/196\">https://github.com/rust-lang/miri/issues/196</a></p>",
        "id": 200203542,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591697176
    },
    {
        "content": "<p>The most naive approach (and most labour intensive) would be to build a dedicated MIR front-end right?</p>",
        "id": 200203595,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591697213
    },
    {
        "content": "<p>Would that ever be worthwhile?</p>",
        "id": 200203646,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591697251
    },
    {
        "content": "<p>I mean that would be pretty sweet</p>",
        "id": 200284443,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1591733903
    },
    {
        "content": "<p>That would also probably help us testing the soundness of the MIR-opt transforms</p>",
        "id": 200284503,
        "sender_full_name": "Félix Fischer",
        "timestamp": 1591733939
    },
    {
        "content": "<p>I suspect that we might end up with something like that as part of the Sealed Rust effort, but probably only in a couple of years</p>",
        "id": 200284557,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1591733975
    },
    {
        "content": "<p>Sealed Rust?</p>",
        "id": 200284630,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591734003
    },
    {
        "content": "<p>Ahhhh</p>",
        "id": 200284648,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591734015
    },
    {
        "content": "<p>Like no-source libraries?</p>",
        "id": 200284664,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591734022
    },
    {
        "content": "<p><a href=\"https://ferrous-systems.com/blog/sealed-rust-the-pitch/\">https://ferrous-systems.com/blog/sealed-rust-the-pitch/</a></p>",
        "id": 200284699,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591734045
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 200284735,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591734070
    },
    {
        "content": "<p>I think it could be useful for negative testing of MIR-optimizations</p>",
        "id": 200284801,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591734115
    },
    {
        "content": "<p>Like \"given this weird MIR that's really difficult to generate from Rust, the optimization doesn't do the wrong thing\"</p>",
        "id": 200284885,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591734142
    },
    {
        "content": "<p>But it doesn't seem a huge priority to me</p>",
        "id": 200284993,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591734219
    },
    {
        "content": "<p>Thinking about it, it would be something that should be fairly easy to build incrementally</p>",
        "id": 200285171,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591734316
    },
    {
        "content": "<p>And could be done as part of the ramp up for Sealed Rust?</p>",
        "id": 200285194,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591734333
    },
    {
        "content": "<p>Yeah, I think there are uses for it and some people would certainly like to have it, but I don't know it's something the compiler team would focus on in the next year or so</p>",
        "id": 200285406,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591734437
    },
    {
        "content": "<p>That's my personal opinion</p>",
        "id": 200285417,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1591734443
    },
    {
        "content": "<p>yea, you could totally start out with just a parser extension that adds <code>mir foo(x: type) -&gt; ret_type</code> syntax and incrementally add features step by step. The easiest way to gauge whether it's worthwile to pursue without putting a lot of work into it is to write an MCP to the compiler team with a plan for how to do this</p>",
        "id": 200285588,
        "sender_full_name": "oli",
        "timestamp": 1591734525
    },
    {
        "content": "<p>Ok I'll give that a go! Thanks Oli!</p>",
        "id": 200285964,
        "sender_full_name": "Nathan Corbyn",
        "timestamp": 1591734706
    }
]