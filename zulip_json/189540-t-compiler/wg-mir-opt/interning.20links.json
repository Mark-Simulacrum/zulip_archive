[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you were asking about interning</p>",
        "id": 176965238,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871692
    },
    {
        "content": "<p>I don't see anything in the rustc-guide</p>",
        "id": 176965427,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871822
    },
    {
        "content": "<p>what I usually do when I want to remember how this works, though,</p>",
        "id": 176965444,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871838
    },
    {
        "content": "<p>is to start by digging around in one of the <code>intern</code> methods...</p>",
        "id": 176965453,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871846
    },
    {
        "content": "<p>but they have subtle differences</p>",
        "id": 176965503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871892
    },
    {
        "content": "<p>e.g., <a href=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L1082\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L1082\"><code>intern_promoted</code></a> simply allocates from an arena</p>",
        "id": 176965515,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871907
    },
    {
        "content": "<p>it's a good one to look at, but not <em>quite</em> what you want</p>",
        "id": 176965523,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871914
    },
    {
        "content": "<p>still, there you can see the <code>self.arena</code> access, looking at (I think) <a href=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L988\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L988\">this field</a></p>",
        "id": 176965581,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569871934
    },
    {
        "content": "<p>(I had to add interning stuff in a recent PR. <a href=\"https://github.com/rust-lang/rust/pull/63580/commits/73814654b29604ded9dff105e4156639980d2f2c\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/63580/commits/73814654b29604ded9dff105e4156639980d2f2c\">This commit</a> is where that happens if that's helpful. <code>src/librustc/ty/context.rs </code> is the main bit.)</p>",
        "id": 176965592,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569871945
    },
    {
        "content": "<p>In your case though <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> you want to create a <code>List</code></p>",
        "id": 176965668,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872029
    },
    {
        "content": "<p>this is a rather special type</p>",
        "id": 176965674,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872034
    },
    {
        "content": "<p>yeah, so it's not possible to subslice</p>",
        "id": 176965742,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1569872054
    },
    {
        "content": "<p>I think this is a relevant example</p>",
        "id": 176965753,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872063
    },
    {
        "content": "<p>the <a href=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L2217-L2225\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L2217-L2225\"><code>slice_interners!</code></a> macro usage</p>",
        "id": 176965794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872093
    },
    {
        "content": "<p>that macro is creating methods like <code>_intern_predicates</code></p>",
        "id": 176965842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872129
    },
    {
        "content": "<p>this...seems kind of dumb</p>",
        "id": 176965856,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872141
    },
    {
        "content": "<p>in that there are pretty identical wrappers for each of those cases</p>",
        "id": 176965870,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872150
    },
    {
        "content": "<p>like <a href=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L2587-L2598\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/22bc9e1d9ca49ee4f5cd953088ab09c238a6dd26/src/librustc/ty/context.rs#L2587-L2598\"><code>intern_predicates</code></a></p>",
        "id": 176965929,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872168
    },
    {
        "content": "<p>that just check for an empty slice and then fall through</p>",
        "id": 176965937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872174
    },
    {
        "content": "<p>so we could <em>probably</em> generate those too</p>",
        "id": 176965946,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872178
    },
    {
        "content": "<p>(but maybe there are some cases that work differently, not sure)</p>",
        "id": 176965952,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872183
    },
    {
        "content": "<p>anyway, I guess that's the model you want to follow</p>",
        "id": 176965964,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872192
    },
    {
        "content": "<p>(and maybe try to cleanup the code duplication for the zero-length case, too...)</p>",
        "id": 176966012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1569872227
    },
    {
        "content": "<p>cool, thanks</p>",
        "id": 176966028,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1569872243
    },
    {
        "content": "<p>I'm finishing a thing related to the PR I've opened and going after this thing next, probably tomorrow</p>",
        "id": 176966060,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1569872263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> was going after this but I'm getting ....</p>",
        "id": 177728466,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570636763
    },
    {
        "content": "<p>this means ... the actual interning code, using <code>slice_interners!</code> macro</p>",
        "id": 177728579,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570636809
    },
    {
        "content": "<p>getting ...</p>",
        "id": 177728589,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570636812
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>error[E0277]: the trait bound `mir::ProjectionElem&lt;mir::Local, &amp;ty::TyS&lt;&#39;_&gt;&gt;: std::marker::Copy` is not satisfied\n    --&gt; src/librustc/ty/context.rs:2252:30\n     |\n2247 | / macro_rules! slice_interners {\n2248 | |     ($($field:ident: $method:ident($ty:ty)),+) =&gt; (\n2249 | |         $(impl&lt;&#39;tcx&gt; TyCtxt&lt;&#39;tcx&gt; {\n2250 | |             pub fn $method(self, v: &amp;[$ty]) -&gt; &amp;&#39;tcx List&lt;$ty&gt; {\n2251 | |                 self.interners.$field.intern_ref(v, || {\n2252 | |                     Interned(List::from_arena(&amp;self.interners.arena, v))\n     | |                              ^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `mir::ProjectionElem&lt;mir::Local, &amp;ty::TyS&lt;&#39;_&gt;&gt;`\n...    |\n2256 | |     );\n2257 | | }\n     | |_- in this expansion of `slice_interners!`\n2258 |\n2259 | / slice_interners!(\n2260 | |     type_list: _intern_type_list(Ty&lt;&#39;tcx&gt;),\n2261 | |     substs: _intern_substs(GenericArg&lt;&#39;tcx&gt;),\n2262 | |     canonical_var_infos: _intern_canonical_var_infos(CanonicalVarInfo),\n...    |\n2268 | |     place_elems: _intern_place_elems(PlaceElem&lt;&#39;tcx&gt;)\n2269 | | );\n     | |__- in this macro invocation\n     |\n    ::: src/librustc/ty/mod.rs:625:5\n     |\n625  |       fn from_arena&lt;&#39;tcx&gt;(arena: &amp;&#39;tcx SyncDroplessArena, slice: &amp;[T]) -&gt; &amp;&#39;tcx List&lt;T&gt; {\n     |       --------------------------------------------------------------------------------- required by `ty::List::&lt;T&gt;::from_arena`\n     |\n     = help: the following implementations were found:\n               &lt;mir::ProjectionElem&lt;(), ()&gt; as std::marker::Copy&gt;\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `rustc`.\n</pre></div>",
        "id": 177728598,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570636824
    },
    {
        "content": "<p>why does that need to be <code>Copy</code>?</p>",
        "id": 177728820,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570636956
    },
    {
        "content": "<p>what can we do in the case of projection then?</p>",
        "id": 177728834,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570636964
    },
    {
        "content": "<p>I see, <code>ProjectionElem</code> could be <code>Copy</code> but it's generic and we are not imposing those generics be <code>Copy</code></p>",
        "id": 177730748,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570638206
    },
    {
        "content": "<p>but <code>PlaceElem</code> can be <code>Copy</code> and I think it's reasonable to do so</p>",
        "id": 177730783,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570638239
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/65197/commits/04e491aee1f78e1ed8be5a76c320b3b52fabd281\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/65197/commits/04e491aee1f78e1ed8be5a76c320b3b52fabd281\">https://github.com/rust-lang/rust/pull/65197/commits/04e491aee1f78e1ed8be5a76c320b3b52fabd281</a></p>",
        "id": 177731011,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1570638403
    }
]