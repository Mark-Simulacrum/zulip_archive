[
    {
        "content": "<p>Do we have a pass that can eliminate stores that are never read? Const prop can leave a lot of those behind when it runs.</p>",
        "id": 198596821,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590349330
    },
    {
        "content": "<p><code>SimplifyLocals</code> does a rather naive form of DSE</p>",
        "id": 198596901,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1590349506
    },
    {
        "content": "<p>Specifically it removes stores to locals where the local is never read, rather than where the stored value is never read.</p>",
        "id": 198596971,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1590349634
    },
    {
        "content": "<p>Ah I see, that should already help</p>",
        "id": 198597081,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1590349693
    },
    {
        "content": "<p>More robust DSE is one of the things I wanted to implement now that intrablock liveness is easy to compute.</p>",
        "id": 198601990,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1590357141
    },
    {
        "content": "<p>I think I'll work on that next week.</p>",
        "id": 198602950,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1590358831
    },
    {
        "content": "<p>Somewhat related, I'm working on being able to remove locals that are only used for debug info while still preserving the debug info data.</p>",
        "id": 198608305,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1590369288
    },
    {
        "content": "<p>Hi! I played around with the playground, looking for simple MIR optimizations. In this code <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=5e51319bc039ba93e4006ce775988439\">https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=5e51319bc039ba93e4006ce775988439</a> \"x\" is const so no side effects and completely dead. It is however not removed. </p>\n<p>I'm reviving this topic as that seems to be the \"more robust DSE\" being talked about. Any progress on that <span class=\"user-mention\" data-user-id=\"118594\">@ecstatic-morse</span> , <span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> ? If not, I could be interested in giving a (simple) pass a shot. Would this fit inside SimplifyLocals, or should it be pulled out into a separate dead-code-elimination pass?</p>",
        "id": 204696357,
        "sender_full_name": "Simon Vandel Sillesen",
        "timestamp": 1595438688
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"139182\">@Simon Vandel Sillesen</span>! I've actually got a PR up that's waiting to merge that resolves that <a href=\"https://github.com/rust-lang/rust/pull/73210\">https://github.com/rust-lang/rust/pull/73210</a></p>",
        "id": 204696784,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595438862
    },
    {
        "content": "<p>(The thing that's causing <code>x</code> to hang around is because it's being used by debuginfo)</p>",
        "id": 204696869,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595438887
    },
    {
        "content": "<p>Alright, that sounds good!</p>",
        "id": 204714755,
        "sender_full_name": "Simon Vandel Sillesen",
        "timestamp": 1595447866
    },
    {
        "content": "<p>If you're looking for an optimization to work on, I think <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>  has some \"beginner\" ones in mind <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 204714945,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1595447955
    }
]