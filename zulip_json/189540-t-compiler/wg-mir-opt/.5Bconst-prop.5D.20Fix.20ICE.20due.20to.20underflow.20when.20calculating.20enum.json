[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> I don't know if you saw my <a href=\"https://github.com/rust-lang/rust/pull/66857#issuecomment-560016441\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/66857#issuecomment-560016441\">comment</a>, but implementing enum variant checking like codegen does is a much neater fix and also resolves the issue:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff --git a/src/librustc_mir/interpret/place.rs b/src/librustc_mir/interpret/place.rs</span>\n<span class=\"gh\">index 5b263f76801..f709dfa43ee 100644</span>\n<span class=\"gd\">--- a/src/librustc_mir/interpret/place.rs</span>\n<span class=\"gi\">+++ b/src/librustc_mir/interpret/place.rs</span>\n<span class=\"gu\">@@ -1040,21 +1040,18 @@ where</span>\n     ) -&gt; InterpResult&lt;&#39;tcx&gt; {\n         let variant_scalar = Scalar::from_u32(variant_index.as_u32()).into();\n\n<span class=\"gi\">+        if dest.layout.for_variant(self, variant_index).abi.is_uninhabited() {</span>\n<span class=\"gi\">+            throw_ub!(InvalidDiscriminant(variant_scalar));</span>\n<span class=\"gi\">+        }</span>\n<span class=\"gi\">+</span>\n         match dest.layout.variants {\n<span class=\"gd\">-            layout::Variants::Single { index } =&gt; {</span>\n<span class=\"gd\">-                if index != variant_index {</span>\n<span class=\"gd\">-                    throw_ub!(InvalidDiscriminant(variant_scalar));</span>\n<span class=\"gd\">-                }</span>\n<span class=\"gd\">-            }</span>\n<span class=\"gi\">+            layout::Variants::Single { .. } =&gt; { }</span>\n             layout::Variants::Multiple {\n                 discr_kind: layout::DiscriminantKind::Tag,\n                 discr: ref discr_layout,\n                 discr_index,\n                 ..\n             } =&gt; {\n<span class=\"gd\">-                if !dest.layout.ty.variant_range(*self.tcx).unwrap().contains(&amp;variant_index) {</span>\n<span class=\"gd\">-                    throw_ub!(InvalidDiscriminant(variant_scalar));</span>\n<span class=\"gd\">-                }</span>\n                 let discr_val =\n                     dest.layout.ty.discriminant_for_variant(*self.tcx, variant_index).unwrap().val;\n\n<span class=\"gu\">@@ -1077,9 +1074,6 @@ where</span>\n                 discr_index,\n                 ..\n             } =&gt; {\n<span class=\"gd\">-                if !variant_index.as_usize() &lt; dest.layout.ty.ty_adt_def().unwrap().variants.len() {</span>\n<span class=\"gd\">-                    throw_ub!(InvalidDiscriminant(variant_scalar));</span>\n<span class=\"gd\">-                }</span>\n                 if variant_index != dataful_variant {\n                     let variants_start = niche_variants.start().as_u32();\n                     let variant_index_relative = variant_index.as_u32()\n</pre></div>\n\n\n<p>How do you feel about that as a fix?</p>",
        "id": 182312364,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1575256545
    },
    {
        "content": "<p>Oh yea, that is a lot better</p>",
        "id": 182323159,
        "sender_full_name": "oli",
        "timestamp": 1575274133
    }
]