[
    {
        "content": "<p>hah</p>",
        "id": 194385864,
        "sender_full_name": "eddyb",
        "timestamp": 1587085057
    },
    {
        "content": "<p><code>--keep-stage</code> is not your friend!!</p>",
        "id": 194385868,
        "sender_full_name": "eddyb",
        "timestamp": 1587085066
    },
    {
        "content": "<p>/me has never used it, nor felt the need to use it</p>",
        "id": 194385917,
        "sender_full_name": "eddyb",
        "timestamp": 1587085094
    },
    {
        "content": "<p>incremental is nice and libstd only takes like a minute to build at stage1</p>",
        "id": 194385924,
        "sender_full_name": "eddyb",
        "timestamp": 1587085110
    },
    {
        "content": "<p>the information you're omitting is that you have 62356 cores :P</p>",
        "id": 194386361,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1587085649
    },
    {
        "content": "<p>libstd should take a minute to build with just <code>-j8</code> IIRC</p>",
        "id": 194386374,
        "sender_full_name": "eddyb",
        "timestamp": 1587085666
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 194386379,
        "sender_full_name": "eddyb",
        "timestamp": 1587085669
    },
    {
        "content": "<p>or maybe I'm misremembering</p>",
        "id": 194386416,
        "sender_full_name": "eddyb",
        "timestamp": 1587085683
    },
    {
        "content": "<p>Yeah just over on my 16 cores</p>",
        "id": 194386440,
        "sender_full_name": "simulacrum",
        "timestamp": 1587085726
    },
    {
        "content": "<p>And keep stage was never really intended for compiler development</p>",
        "id": 194386460,
        "sender_full_name": "simulacrum",
        "timestamp": 1587085769
    },
    {
        "content": "<p>Mostly for std, to make it easier to iterate on std in stage 1 without a compiler rebuild</p>",
        "id": 194386501,
        "sender_full_name": "simulacrum",
        "timestamp": 1587085803
    },
    {
        "content": "<p>can't wait to have a proper workflow for that</p>",
        "id": 194386545,
        "sender_full_name": "eddyb",
        "timestamp": 1587085862
    },
    {
        "content": "<p>I just wish we thought through the implications of master builds earlier :P</p>",
        "id": 194386550,
        "sender_full_name": "eddyb",
        "timestamp": 1587085875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> oh damn we can tag nightlies into git</p>",
        "id": 194386555,
        "sender_full_name": "eddyb",
        "timestamp": 1587085889
    },
    {
        "content": "<p>or keep a <code>nightly</code> branch</p>",
        "id": 194386560,
        "sender_full_name": "eddyb",
        "timestamp": 1587085894
    },
    {
        "content": "<p>tagging is nice because it allows you to use a nightly with a specific date explicitly</p>",
        "id": 194386575,
        "sender_full_name": "eddyb",
        "timestamp": 1587085917
    },
    {
        "content": "<p>oops this is getting offtopic fast :P</p>",
        "id": 194386620,
        "sender_full_name": "eddyb",
        "timestamp": 1587085947
    },
    {
        "content": "<p>Yeah, we can. There's someone working on getting regular cargo builds working (vs x.py)</p>",
        "id": 194386799,
        "sender_full_name": "simulacrum",
        "timestamp": 1587086164
    },
    {
        "content": "<p>I should check on that</p>",
        "id": 194386803,
        "sender_full_name": "simulacrum",
        "timestamp": 1587086171
    },
    {
        "content": "<p>right, I saw that, hope it all works out</p>",
        "id": 194386834,
        "sender_full_name": "eddyb",
        "timestamp": 1587086245
    },
    {
        "content": "<p>keep-stage is still absolutely essential when working on miri with rustc changes</p>",
        "id": 194467079,
        "sender_full_name": "RalfJ",
        "timestamp": 1587141385
    },
    {
        "content": "<p>I can do <code>--keep-stage 0</code> and then it only rebuilds stage 1, so when I change librsutc_mir just a few crates, before I can build miri against the new stage 2 toolchain</p>",
        "id": 194467140,
        "sender_full_name": "RalfJ",
        "timestamp": 1587141418
    },
    {
        "content": "<p>but yeah libstd only takes a minute here as well so I hardly ever use keep-stage to just skip libstd</p>",
        "id": 194467192,
        "sender_full_name": "RalfJ",
        "timestamp": 1587141440
    },
    {
        "content": "<p>but until <a href=\"https://github.com/rust-lang/rust/issues/52856\" title=\"https://github.com/rust-lang/rust/issues/52856\">https://github.com/rust-lang/rust/issues/52856</a> is resolved please keep keep-stage :D</p>",
        "id": 194467232,
        "sender_full_name": "RalfJ",
        "timestamp": 1587141468
    },
    {
        "content": "<p>probably blocked on subtree-ing miri :P</p>",
        "id": 194467340,
        "sender_full_name": "eddyb",
        "timestamp": 1587141510
    },
    {
        "content": "<p>or maybe not</p>",
        "id": 194467374,
        "sender_full_name": "eddyb",
        "timestamp": 1587141532
    },
    {
        "content": "<p>or do you mean you want to build miri out of tree?</p>",
        "id": 194467427,
        "sender_full_name": "eddyb",
        "timestamp": 1587141556
    },
    {
        "content": "<p><code>rustdoc</code> for example works fine being built at stage0 into <code>stage1/bin/rustdoc</code> and using it to run rustdoc tests at stage1</p>",
        "id": 194467532,
        "sender_full_name": "eddyb",
        "timestamp": 1587141602
    },
    {
        "content": "<p>i.e. <code>./x.py test --stage 1 src/test/rustdoc{,-ui}</code> builds the compiler once, builds <code>rustdoc</code> and runs the tests</p>",
        "id": 194467609,
        "sender_full_name": "eddyb",
        "timestamp": 1587141641
    },
    {
        "content": "<p>theoretically we can do the same for miri</p>",
        "id": 194467650,
        "sender_full_name": "eddyb",
        "timestamp": 1587141660
    },
    {
        "content": "<p>the last comment in the issue mentions proc macros, which have since been fixed I guess</p>",
        "id": 194467682,
        "sender_full_name": "eddyb",
        "timestamp": 1587141680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> likely understands the situation better than me though</p>",
        "id": 194467704,
        "sender_full_name": "eddyb",
        "timestamp": 1587141696
    },
    {
        "content": "<p>Yeah you shouldn't need a stage 2 toolchain for miri I think, though we may not quite be setup right for that</p>",
        "id": 194467853,
        "sender_full_name": "simulacrum",
        "timestamp": 1587141761
    },
    {
        "content": "<p>Probably fixable though</p>",
        "id": 194467941,
        "sender_full_name": "simulacrum",
        "timestamp": 1587141806
    },
    {
        "content": "<p>out of tree will sadly always be harder because <del>the stage0 toolchain isn't exposed to allow building e.g. build scripts</del></p>",
        "id": 194467944,
        "sender_full_name": "eddyb",
        "timestamp": 1587141808
    },
    {
        "content": "<p>wait no that should be fine. even proc macros maybe</p>",
        "id": 194467966,
        "sender_full_name": "eddyb",
        "timestamp": 1587141819
    },
    {
        "content": "<p>/me forgets what the edge case is</p>",
        "id": 194467973,
        "sender_full_name": "eddyb",
        "timestamp": 1587141824
    },
    {
        "content": "<p>oh miri itself would have to be built by the stage0 toolchain to link against the same rustc_driver that <code>stage1/bin/rustc</code> uses</p>",
        "id": 194468055,
        "sender_full_name": "eddyb",
        "timestamp": 1587141851
    },
    {
        "content": "<p>yeah I was thinking out-of-tree</p>",
        "id": 194585496,
        "sender_full_name": "RalfJ",
        "timestamp": 1587283993
    },
    {
        "content": "<p>I could move my work in-tree though for these cases I guess. (with subtree miri switching between out-of and in-tree might be harder but I'm sure there'll be ways.)</p>",
        "id": 194585501,
        "sender_full_name": "RalfJ",
        "timestamp": 1587284023
    },
    {
        "content": "<p>so are you saying <code>./x.py --stage 1 test src/tools/miri</code> should work these days, or could be made to work with minor adjustments to rustbuild? well that would be cool :D</p>",
        "id": 194585559,
        "sender_full_name": "RalfJ",
        "timestamp": 1587284106
    }
]