[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> idea by <span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span>: if we have a runtime value of array type and we call <code>len</code> on it, we should still const prop that call, because its result is obviously known</p>",
        "id": 176507012,
        "sender_full_name": "oli",
        "timestamp": 1569359682
    },
    {
        "content": "<p>I think it can be done without much additional magic</p>",
        "id": 176507028,
        "sender_full_name": "oli",
        "timestamp": 1569359691
    },
    {
        "content": "<p>some magic may still be required in the unsizing cast</p>",
        "id": 176507080,
        "sender_full_name": "oli",
        "timestamp": 1569359725
    },
    {
        "content": "<p>basically the data pointer would be <code>Undef</code> and only the length would be set</p>",
        "id": 176507096,
        "sender_full_name": "oli",
        "timestamp": 1569359738
    },
    {
        "content": "<p>I feel like I looked at writing an optimization to do that like a year ago and found it already happened.</p>",
        "id": 176507115,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569359752
    },
    {
        "content": "<p>something similar could be done for vtable casts</p>",
        "id": 176507126,
        "sender_full_name": "oli",
        "timestamp": 1569359761
    },
    {
        "content": "<p>huh</p>",
        "id": 176507183,
        "sender_full_name": "oli",
        "timestamp": 1569359780
    },
    {
        "content": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=122730c2a83131198a16080ac6f7a562\" target=\"_blank\" title=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=122730c2a83131198a16080ac6f7a562\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=122730c2a83131198a16080ac6f7a562</a></p>",
        "id": 176507236,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569359844
    },
    {
        "content": "<p>we don't even propagate function calls yet, so I don't see how that could happen (well in llvm it probably will)</p>",
        "id": 176507239,
        "sender_full_name": "oli",
        "timestamp": 1569359846
    },
    {
        "content": "<p>Unless I'm misunderstanding the case you're thinking of</p>",
        "id": 176507252,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569359866
    },
    {
        "content": "<p>ah</p>",
        "id": 176507256,
        "sender_full_name": "oli",
        "timestamp": 1569359868
    },
    {
        "content": "<p>yes the <code>Len</code> statement works</p>",
        "id": 176507274,
        "sender_full_name": "oli",
        "timestamp": 1569359877
    },
    {
        "content": "<p>I literally mean <code>[T]::len</code></p>",
        "id": 176507320,
        "sender_full_name": "oli",
        "timestamp": 1569359885
    },
    {
        "content": "<p>Ah</p>",
        "id": 176507324,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569359893
    },
    {
        "content": "<p>so if the user writes <code>some_arg.len()</code></p>",
        "id": 176507326,
        "sender_full_name": "oli",
        "timestamp": 1569359895
    },
    {
        "content": "<p>Gotcha</p>",
        "id": 176507330,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569359900
    },
    {
        "content": "<p>though it may just work</p>",
        "id": 176507362,
        "sender_full_name": "oli",
        "timestamp": 1569359930
    },
    {
        "content": "<p>since the miri engine may do the unsizing cast without ever checking whether the pointer is Undef</p>",
        "id": 176507397,
        "sender_full_name": "oli",
        "timestamp": 1569359953
    },
    {
        "content": "<p>We've got to get const prop turned on for <code>mir-level &lt; 2</code> first :p</p>",
        "id": 176507418,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569359961
    },
    {
        "content": "<p>As it is, miri and <code>src/test/mir-opt</code> are pretty much the only things that actually do the optimization.</p>",
        "id": 176507452,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569359997
    },
    {
        "content": "<p>whoops</p>",
        "id": 176507527,
        "sender_full_name": "oli",
        "timestamp": 1569360030
    },
    {
        "content": "<p>I don't remember the blockers for that</p>",
        "id": 176507542,
        "sender_full_name": "oli",
        "timestamp": 1569360044
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/6ef275e6c3cb1384ec78128eceeb4963ff788dca/src/librustc_mir/interpret/cast.rs#L256\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/6ef275e6c3cb1384ec78128eceeb4963ff788dca/src/librustc_mir/interpret/cast.rs#L256\">https://github.com/rust-lang/rust/blob/6ef275e6c3cb1384ec78128eceeb4963ff788dca/src/librustc_mir/interpret/cast.rs#L256</a> yay, the engine does the right thing</p>",
        "id": 176507557,
        "sender_full_name": "oli",
        "timestamp": 1569360060
    },
    {
        "content": "<p>I don't know either</p>",
        "id": 176507559,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360060
    },
    {
        "content": "<p>lol</p>",
        "id": 176507565,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360062
    },
    {
        "content": "<p>so we just need to start const propping arguments now?! XD</p>",
        "id": 176507576,
        "sender_full_name": "oli",
        "timestamp": 1569360073
    },
    {
        "content": "<p>Once we do function calls, we can do that I think</p>",
        "id": 176507599,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360104
    },
    {
        "content": "<p>oh, for function calls we don't need to do any argument propping</p>",
        "id": 176507668,
        "sender_full_name": "oli",
        "timestamp": 1569360136
    },
    {
        "content": "<p>we never do any const prop for function call bodies, that will be all in the miri engine</p>",
        "id": 176507682,
        "sender_full_name": "oli",
        "timestamp": 1569360151
    },
    {
        "content": "<p>all these stuff seems exciting :)</p>",
        "id": 176507712,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1569360194
    },
    {
        "content": "<p>Well this at least was motivated because doing things with args in <code>ConstProp</code> was ICE-ing the compiler <a href=\"https://github.com/rust-lang/rust/pull/64419/commits/281cfbf6c38b3d9b3d50b48857e48dab93a0f3aa\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64419/commits/281cfbf6c38b3d9b3d50b48857e48dab93a0f3aa\">https://github.com/rust-lang/rust/pull/64419/commits/281cfbf6c38b3d9b3d50b48857e48dab93a0f3aa</a></p>",
        "id": 176507803,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360246
    },
    {
        "content": "<p>Er, I guess the better link was my original change</p>",
        "id": 176507884,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360318
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/64419/commits/39d6305ef918858ae871da815040ebfc91612a49\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/64419/commits/39d6305ef918858ae871da815040ebfc91612a49\">https://github.com/rust-lang/rust/pull/64419/commits/39d6305ef918858ae871da815040ebfc91612a49</a></p>",
        "id": 176507886,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360319
    },
    {
        "content": "<p>Since that shows the conversation</p>",
        "id": 176507922,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360346
    },
    {
        "content": "<p>Anyway I've got to run <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 176508005,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1569360393
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 176508010,
        "sender_full_name": "oli",
        "timestamp": 1569360397
    }
]