[
    {
        "content": "<p><code>Place</code>s have increased in size since we moved to having a <code>base</code> field and a <code>projection</code> field. If we move further to <code>&amp;[PlaceElem]</code> for the <code>projection</code> field, we don't gain any bytes, because a fat pointer needs 16 bytes. I remember some discussion about reducing <code>Place</code> back to a total of <code>16</code> bytes or so, because it's used so much in MIR</p>",
        "id": 171455057,
        "sender_full_name": "oli",
        "timestamp": 1563820097
    },
    {
        "content": "<p>What we could also do is intern all <code>Place</code>s, so we'd have <code>&amp;'tcx Place&lt;'tcx&gt;</code> everywhere and the body is</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Place</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">base</span>: <span class=\"nc\">PlaceBase</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// and remove all `Box`es from `PlaceBase`</span>\n<span class=\"w\">    </span><span class=\"n\">projections</span>: <span class=\"nc\">SmallVec</span><span class=\"o\">&lt;</span><span class=\"n\">Projection</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 171455181,
        "sender_full_name": "oli",
        "timestamp": 1563820201
    },
    {
        "content": "<p>cc <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> opinions? The current \"plan\" without considering the above is either</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Place</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">base</span>: <span class=\"nc\">PlaceBase</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// 16 bytes</span>\n<span class=\"w\">    </span><span class=\"n\">projection</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;tcx</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Projection</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"c1\">// 16 bytes</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>or</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">Place</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">base</span>: <span class=\"nc\">PlaceBase</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// 16 bytes (or reduce to 8 bytes by putting it behind a `Box` or so)</span>\n<span class=\"w\">    </span><span class=\"n\">projection</span>: <span class=\"kp\">&amp;</span><span class=\"na\">&#39;tcx</span><span class=\"w\"> </span><span class=\"n\">Slice</span><span class=\"o\">&lt;</span><span class=\"n\">Projection</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;tcx</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// 8 bytes</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>",
        "id": 171455392,
        "sender_full_name": "oli",
        "timestamp": 1563820328
    },
    {
        "content": "<p>I don't think I have a strong opinion either way. I'd love to see some empirical data demonstrating better performance/lower memory usage before we make the code uglier. So I'd vote for whichever one leads to nicer code and then we can tune it for performance later.</p>",
        "id": 171459269,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1563823205
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> opinions on how to get <code>Place</code>'s size down?</p>",
        "id": 171700477,
        "sender_full_name": "oli",
        "timestamp": 1564067895
    },
    {
        "content": "<p>interning seems practical for all the <code>Place</code>s that just reference a local (especially the ones with small ids, which there  are a lot of)</p>",
        "id": 171700564,
        "sender_full_name": "oli",
        "timestamp": 1564067986
    },
    {
        "content": "<p>Would it make sense to have a intern cache per <code>mir::Body</code>? Naively, I assume there's a great deal of duplication of <code>Place</code>s within a given body unless it's just like a 2 or 3 line function.</p>",
        "id": 171701734,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564068945
    },
    {
        "content": "<p>like \"there are a maximum of <code>2^32</code> distinguishable <code>Place</code>s that may show up in a <code>mir::Body</code>\"?</p>",
        "id": 171701813,
        "sender_full_name": "oli",
        "timestamp": 1564069001
    },
    {
        "content": "<p>and just use such an index into that cache?</p>",
        "id": 171701825,
        "sender_full_name": "oli",
        "timestamp": 1564069014
    },
    {
        "content": "<p>Yeah, exactly</p>",
        "id": 171701828,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069019
    },
    {
        "content": "<p>hmm... I like it, this has potential for some fun optimizations</p>",
        "id": 171701860,
        "sender_full_name": "oli",
        "timestamp": 1564069061
    },
    {
        "content": "<p>like the indices below 256 are 1:1 mappings for local ids :D</p>",
        "id": 171701874,
        "sender_full_name": "oli",
        "timestamp": 1564069079
    },
    {
        "content": "<p>hmm... wait, this doesn't help. The array element size would be the full 32 bytes</p>",
        "id": 171701947,
        "sender_full_name": "oli",
        "timestamp": 1564069131
    },
    {
        "content": "<p>we'd need an indirection</p>",
        "id": 171701950,
        "sender_full_name": "oli",
        "timestamp": 1564069137
    },
    {
        "content": "<p>or sth</p>",
        "id": 171701953,
        "sender_full_name": "oli",
        "timestamp": 1564069139
    },
    {
        "content": "<p>You mean 32 bits right?</p>",
        "id": 171701964,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069148
    },
    {
        "content": "<p><code>Place</code> is 32 bytes</p>",
        "id": 171701992,
        "sender_full_name": "oli",
        "timestamp": 1564069181
    },
    {
        "content": "<p>Ah yes</p>",
        "id": 171702026,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069202
    },
    {
        "content": "<p>so the cache would have to have a 32 byte entry per <code>Place</code> that it stores</p>",
        "id": 171702039,
        "sender_full_name": "oli",
        "timestamp": 1564069203
    },
    {
        "content": "<p>a naive implementation would not gain us much</p>",
        "id": 171702073,
        "sender_full_name": "oli",
        "timestamp": 1564069217
    },
    {
        "content": "<p>It wouldn't shrink <code>Place</code> any but it would reduce the number of instances of <code>Place</code></p>",
        "id": 171702080,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069226
    },
    {
        "content": "<p>which would shrink <code>Statement</code>... ok</p>",
        "id": 171702096,
        "sender_full_name": "oli",
        "timestamp": 1564069239
    },
    {
        "content": "<p>And any place (hah) which currently has an inline place would shrink in size</p>",
        "id": 171702104,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069255
    },
    {
        "content": "<p>Yeah</p>",
        "id": 171702105,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069256
    },
    {
        "content": "<p>I keep forgetting the \"fallout\" that shrinking the type has</p>",
        "id": 171702111,
        "sender_full_name": "oli",
        "timestamp": 1564069259
    },
    {
        "content": "<p>we can start by just making a few relevant inline <code>Place</code>s <code>Box&lt;Place&gt;</code></p>",
        "id": 171702133,
        "sender_full_name": "oli",
        "timestamp": 1564069287
    },
    {
        "content": "<p>I'm not sure how fast we can get such an indexing scheme done</p>",
        "id": 171702153,
        "sender_full_name": "oli",
        "timestamp": 1564069315
    },
    {
        "content": "<p>we talked about it at the all hands for several other things, too iirc</p>",
        "id": 171702207,
        "sender_full_name": "oli",
        "timestamp": 1564069329
    },
    {
        "content": "<p>We should keep track of this stuff somewhere. Fairly regularly I go looking for stuff to work on and can't find any of that stuff.</p>",
        "id": 171702289,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069388
    },
    {
        "content": "<p>yea <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span> I know what you mean</p>",
        "id": 171702315,
        "sender_full_name": "oli",
        "timestamp": 1564069406
    },
    {
        "content": "<p>we can put it into the <code>wg-mir-opt</code> pages in the <code>compiler-team</code> repo</p>",
        "id": 171702339,
        "sender_full_name": "oli",
        "timestamp": 1564069426
    },
    {
        "content": "<p>So then I have to bug either you or <span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 171702346,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564069435
    },
    {
        "content": "<p>I think we already have a long-term TODO list there</p>",
        "id": 171702348,
        "sender_full_name": "oli",
        "timestamp": 1564069437
    },
    {
        "content": "<p>where is there a long list of things to do?</p>",
        "id": 171703781,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1564070546
    },
    {
        "content": "<p>sorry didn't get that quite well</p>",
        "id": 171703787,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1564070554
    },
    {
        "content": "<p>I still have a bunch of stuff to do with all this Place 2.0 stuff, not looking for more for now but interested in knowing anyway :)</p>",
        "id": 171703810,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1564070576
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125250\">@Wesley Wiser</span> after I finish migrating <code>Place</code> to a slice if you're interested we can talk about future steps and maybe even share work or pair program on stuff</p>",
        "id": 171703919,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1564070644
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> Sounds good!</p>",
        "id": 171703952,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1564070672
    }
]