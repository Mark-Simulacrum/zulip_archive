[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> so from today's <span class=\"user-group-mention\" data-user-group-id=\"897\">@T-compiler/meeting</span>, <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> asked how was the plan to get <code>Place</code> from 24 bytes back to 16 bytes :)</p>",
        "id": 163106334,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1554994057
    },
    {
        "content": "<p>(i could imagine a \"fat index\" type that couples an index (into an interned table of <code>[PlaceProjection]'s</code> with a length, analogous to how a <code>&amp;[T]</code> slice is a fat pointer)</p>",
        "id": 163106461,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554994138
    },
    {
        "content": "<p>There are multiple possibilities. One that doesn't work yet is to make <code>Place</code> an unsized type where the <code>projections</code> field is <code>[PlaceProjection]</code></p>",
        "id": 163106518,
        "sender_full_name": "oli",
        "timestamp": 1554994183
    },
    {
        "content": "<p>Another one is to intern/box <code>Place</code> before putting it into <code>Statement</code> (which would get us down to 8 bytes.</p>",
        "id": 163106615,
        "sender_full_name": "oli",
        "timestamp": 1554994231
    },
    {
        "content": "<p>And yet another one is to work on <code>PlaceBase</code>'s fields to see how to make them smaller</p>",
        "id": 163106674,
        "sender_full_name": "oli",
        "timestamp": 1554994267
    },
    {
        "content": "<p>I remember having a fourth avenue, but it escapes me atm</p>",
        "id": 163106695,
        "sender_full_name": "oli",
        "timestamp": 1554994284
    },
    {
        "content": "<blockquote>\n<p>Another one is to intern/box <code>Place</code> before putting it into <code>Statement</code> (which would get us down to 8 bytes.</p>\n</blockquote>\n<p>it would, but it add cost elsewhere, right? If most Statements actually own one or more places, then this is a net loss, right?</p>",
        "id": 163107864,
        "sender_full_name": "pnkfelix",
        "timestamp": 1554995029
    },
    {
        "content": "<p>True</p>",
        "id": 163108648,
        "sender_full_name": "oli",
        "timestamp": 1554995545
    },
    {
        "content": "<p>And most statements do have a destination place</p>",
        "id": 163108670,
        "sender_full_name": "oli",
        "timestamp": 1554995563
    }
]