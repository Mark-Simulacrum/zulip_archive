[
    {
        "content": "<p>Is there a convenient way to create a const array inside of a mir opt? I was working on implementing an opt outlined <a href=\"https://hackmd.io/@ft4bxUsFT5CEUBmRKYHr7w/rJM8BBPzD\">here</a>, and it's necessary to build a const array for use at runtime. It seems very easy to create scalars, but creating an array seems to require an allocation, and the comment also seems to suggest it is only for <code>&amp;[u8]</code> and <code>&amp;str</code>, but I was wondering if I just missed something obvious. If not, I was wondering if it makes sense to add a variant to <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/mir/interpret/value/enum.ConstValue.html\">ConstValues</a> for arrays?</p>",
        "id": 238085055,
        "sender_full_name": "jknodt",
        "timestamp": 1620620277
    },
    {
        "content": "<p>There is no convenient way. What you have to do is create an <code>Allocation</code>, fill it in with your values, then use some function on <code>TyCtxt</code> whose name I forget (use rustdoc to search for a function taking an <code>Allocation</code> and returning an <code>&amp;'tcx Allocation</code>). Then use that to create a <code>ConstValue::ByRef</code></p>",
        "id": 238109483,
        "sender_full_name": "oli",
        "timestamp": 1620638000
    }
]