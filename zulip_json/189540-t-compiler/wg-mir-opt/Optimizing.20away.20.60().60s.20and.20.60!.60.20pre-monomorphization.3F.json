[
    {
        "content": "<p>I'm very sad about PRs like <a href=\"https://github.com/rust-lang/rust/pull/72139\">https://github.com/rust-lang/rust/pull/72139</a> that make the user experience worse to speed up compilation.</p>\n<p>Any thoughts on the steps we'd need in mir-opt to compile away the excess cruft when implementing <code>fold</code> in terms of <code>try_fold</code>?  Folding away all the <code>ControlFlow::Break(!)</code> arms seems like it could be totally feasible in MIR, though it might be blocked on a bunch of inlining changes</p>",
        "id": 212609993,
        "sender_full_name": "scottmcm",
        "timestamp": 1602100044
    },
    {
        "content": "<p>I did add a mir-opt pass that removed branches on uninhabited enum variants which should do that. Like you said, the issue maybe that we need inlining to occur first.</p>",
        "id": 212611938,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1602100923
    },
    {
        "content": "<p>what is worse about the user experience?</p>",
        "id": 212613571,
        "sender_full_name": "cuviper",
        "timestamp": 1602101712
    },
    {
        "content": "<p>do you mean longer term, when users can implement <code>try_fold</code>?</p>",
        "id": 212613590,
        "sender_full_name": "cuviper",
        "timestamp": 1602101722
    },
    {
        "content": "<p>Yes, that it forces people to implement <code>fold</code> even if they implement <code>try_fold</code>, when for the vast majority of iterators the default <code>fold</code>-via-<code>Result&lt;T, !&gt;</code> is perfectly fine.</p>",
        "id": 212615918,
        "sender_full_name": "scottmcm",
        "timestamp": 1602103022
    }
]