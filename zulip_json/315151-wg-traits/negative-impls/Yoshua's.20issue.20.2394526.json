[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts [he/they]</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 275704236,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647540929
    },
    {
        "content": "<p>I'm building your branch <a href=\"https://github.com/yoshuawuyts/rust/tree/future-for-termination-3\">https://github.com/yoshuawuyts/rust/tree/future-for-termination-3</a> on top of <a href=\"https://github.com/rust-lang/rust/issues/95039\">#95039</a></p>",
        "id": 275704754,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647541173
    },
    {
        "content": "<p>cool got the panic</p>",
        "id": 275704929,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647541237
    },
    {
        "content": "<p>Yayy!</p>",
        "id": 275705754,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647541666
    },
    {
        "content": "<p>if I'm not wrong it's failing on <code>impl dyn Any {</code></p>",
        "id": 275707515,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647542459
    },
    {
        "content": "<p>ohh lol</p>",
        "id": 275707566,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647542491
    },
    {
        "content": "<p>the error is exactly telling that <code>thread 'rustc' panicked at 'Box&lt;dyn Any&gt;', compiler/rustc_errors/src/lib.rs:1242:9</code></p>",
        "id": 275707588,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647542501
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts [he/they]</span> meanwhile I was playing with the example I was able to get rid of the ICE and now getting ...</p>",
        "id": 275709410,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647543355
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0119</span><span class=\"p\">]</span>: <span class=\"nc\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementations</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">process</span>::<span class=\"n\">Termination</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">std</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">process</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">2100</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2071</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">E</span>: <span class=\"nc\">fmt</span>::<span class=\"n\">Debug</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Termination</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">E</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"o\">------------------------------------------------</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">2100</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Termination</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"></span>\n<span class=\"mi\">2101</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"></span>\n<span class=\"mi\">2102</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">T</span>: <span class=\"nc\">Termination</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">2103</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">F</span>: <span class=\"nc\">crate</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"o\">&lt;</span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2155</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">2156</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">upstream</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">versions</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">upstream</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">versions</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275709419,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647543358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> can you send me a link to the unwrap in the code?</p>",
        "id": 275712307,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647544752
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_trait_selection/src/traits/coherence.rs#L305\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_trait_selection/src/traits/coherence.rs#L305</a></p>",
        "id": 275712372,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647544789
    },
    {
        "content": "<p>and there's also code that does ...</p>",
        "id": 275712382,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647544795
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_trait_selection/src/traits/util.rs#L202\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_trait_selection/src/traits/util.rs#L202</a></p>",
        "id": 275712465,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647544820
    },
    {
        "content": "<p>which is called for impl2 here <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_trait_selection/src/traits/coherence.rs#L328\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_trait_selection/src/traits/coherence.rs#L328</a></p>",
        "id": 275712477,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647544825
    },
    {
        "content": "<p>I see</p>",
        "id": 275712511,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647544845
    },
    {
        "content": "<p>I think it <code>impl_trait_ref</code> returns <code>None</code></p>",
        "id": 275712551,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647544868
    },
    {
        "content": "<p>you can call <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TyCtxt.html#method.type_of\"><code>type_of</code></a> to get the \"self type\" (<code>dyn Any</code>, in this case)</p>",
        "id": 275712570,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647544879
    },
    {
        "content": "<p>I see</p>",
        "id": 275712755,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647544965
    },
    {
        "content": "<p>I guess probably the same can be done in the other case for impl2?</p>",
        "id": 275712786,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647544975
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/Yoshua's.20issue.20.2394526/near/275712570\">said</a>:</p>\n<blockquote>\n<p>you can call <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TyCtxt.html#method.type_of\"><code>type_of</code></a> to get the \"self type\" (<code>dyn Any</code>, in this case)</p>\n</blockquote>\n<p>then you mean to use the self type as it were the trait_ref? unsure I clearly follow here</p>",
        "id": 275713348,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647545216
    },
    {
        "content": "<p>I guess we just \"equate\" using that type</p>",
        "id": 275713680,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647545393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> nice! I'm glad you managed to work past the ICE!</p>",
        "id": 275716926,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647546993
    },
    {
        "content": "<p>I guess it shouldn't be hard to come up with an example</p>",
        "id": 275717005,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647547034
    },
    {
        "content": "<p>I'm not familiar with the recent changes. But the <code>async fn main</code> impl used to work for a while. And it'd be really cool if it was possible to make work again?</p>",
        "id": 275717020,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647547043
    },
    {
        "content": "<p>we need <code>dyn Trait</code></p>",
        "id": 275717028,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647547046
    },
    {
        "content": "<p>I'm trying to make the changes in the compiler</p>",
        "id": 275717071,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647547072
    },
    {
        "content": "<p>then we would need a reduced test case too</p>",
        "id": 275717135,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647547091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> I think you might be going astray here</p>",
        "id": 275721300,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647548975
    },
    {
        "content": "<p>not sure what dyn trait has to do with it</p>",
        "id": 275721311,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647548979
    },
    {
        "content": "<p>the fact that it is <code>impl dyn Any</code> is incidental</p>",
        "id": 275721322,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647548986
    },
    {
        "content": "<p>the same thing could work with any inherent impl - it's just <code>impl &lt;ty&gt;</code></p>",
        "id": 275721340,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647548999
    },
    {
        "content": "<p>I thought this was about impl trait objs</p>",
        "id": 275721541,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647549061
    },
    {
        "content": "<p>so I was calling type_of, as you said and grtting the principal trait of the type</p>",
        "id": 275721619,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647549098
    },
    {
        "content": "<p>no, that's not right</p>",
        "id": 275721653,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549116
    },
    {
        "content": "<p>you want some flow like this</p>",
        "id": 275721663,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549120
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ty1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">type_of</span><span class=\"p\">(</span><span class=\"n\">impl1_def_id</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ty2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">type_of</span><span class=\"p\">(</span><span class=\"n\">impl2_def_id</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">equate</span><span class=\"p\">(</span><span class=\"n\">ty1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ty2</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275721775,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549154
    },
    {
        "content": "<p>in the same way that you currently do</p>",
        "id": 275721794,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549166
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">traitref1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">impl_trait_ref</span><span class=\"p\">(</span><span class=\"n\">impl1_def_id</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">traitref2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">impl_trait_ref</span><span class=\"p\">(</span><span class=\"n\">impl2_def_id</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">equate</span><span class=\"p\">(</span><span class=\"n\">traitref1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">traitref2</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275721849,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549188
    },
    {
        "content": "<p>i.e., if trait-ref is <code>Some</code>, then you want to equate that, but otherwise just equate the self-types</p>",
        "id": 275721879,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549205
    },
    {
        "content": "<p>it might be nice if we had something like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">enum</span> <span class=\"nc\">ImplHeader</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">TraitImpl</span><span class=\"p\">(</span><span class=\"n\">TraitRef</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">InherentImpl</span><span class=\"p\">(</span><span class=\"n\">Ty</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275721937,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549232
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">impl_header</span><span class=\"p\">(</span><span class=\"n\">defid</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">ImplHeader</span><span class=\"o\">&lt;'</span><span class=\"na\">tcx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">impl_trait_ref</span><span class=\"p\">(</span><span class=\"n\">defid</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">ImplHEader</span>::<span class=\"n\">TraitImpl</span><span class=\"p\">).</span><span class=\"n\">unwrap_or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">ImplHeader</span>::<span class=\"n\">InherentImpl</span><span class=\"p\">(</span><span class=\"n\">tcx</span><span class=\"p\">.</span><span class=\"n\">type_of</span><span class=\"p\">(</span><span class=\"n\">defid</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275722075,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647549281
    },
    {
        "content": "<p>great, trying this out</p>",
        "id": 275722955,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647549650
    },
    {
        "content": "<p>ok, now I don't get more ICEs</p>",
        "id": 275724003,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550015
    },
    {
        "content": "<p>getting ...</p>",
        "id": 275724007,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550017
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0119</span><span class=\"p\">]</span>: <span class=\"nc\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementations</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">process</span>::<span class=\"n\">Termination</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">std</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">process</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">2100</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2071</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">E</span>: <span class=\"nc\">fmt</span>::<span class=\"n\">Debug</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Termination</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">E</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"o\">------------------------------------------------</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">2100</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Termination</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"></span>\n<span class=\"mi\">2101</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"></span>\n<span class=\"mi\">2102</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">T</span>: <span class=\"nc\">Termination</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">2103</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">F</span>: <span class=\"nc\">crate</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"o\">&lt;</span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2155</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">2156</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">upstream</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">versions</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">upstream</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;!</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">versions</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275724012,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550020
    },
    {
        "content": "<p>not sure if it's a real problem or something related to the code that Yoshua added <a href=\"https://github.com/yoshuawuyts/rust/tree/future-for-termination-3\">https://github.com/yoshuawuyts/rust/tree/future-for-termination-3</a></p>",
        "id": 275724138,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550082
    },
    {
        "content": "<p>I think this should work because of <a href=\"https://github.com/rust-lang/rust/compare/master...yoshuawuyts:future-for-termination-3?expand=1#diff-ce8cd7d0ae24d8c6503198eeb502052175fc9c47d15fbc85258236b53e312ba0R135\">https://github.com/rust-lang/rust/compare/master...yoshuawuyts:future-for-termination-3?expand=1#diff-ce8cd7d0ae24d8c6503198eeb502052175fc9c47d15fbc85258236b53e312ba0R135</a></p>",
        "id": 275725119,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550494
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 275725127,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550496
    },
    {
        "content": "<p>there doesn't seem to be a <code>!Future</code> for <code>Result&lt;!, ..&gt;</code></p>",
        "id": 275725364,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550581
    },
    {
        "content": "<p>I got confused with <code>Termination</code></p>",
        "id": 275725502,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550636
    },
    {
        "content": "<p>btw I'm not sure that <code>!Future</code> for <code>!</code> makes sense</p>",
        "id": 275725542,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550650
    },
    {
        "content": "<p>I guess it might, given that I don't know what <code>&lt;! as Future&gt;::Output</code> would be (<code>!</code>?)</p>",
        "id": 275725577,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550666
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/Yoshua's.20issue.20.2394526/near/275725542\">said</a>:</p>\n<blockquote>\n<p>btw I'm not sure that <code>!Future</code> for <code>!</code> makes sense</p>\n</blockquote>\n<p>yeah I think it also lacks some negation for <code>Termination</code></p>",
        "id": 275725597,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550674
    },
    {
        "content": "<p>no, what I've said is wrong</p>",
        "id": 275726236,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/Yoshua's.20issue.20.2394526/near/275725364\">said</a>:</p>\n<blockquote>\n<p>there doesn't seem to be a <code>!Future</code> for <code>Result&lt;!, ..&gt;</code></p>\n</blockquote>\n<p>what did you mean by this?</p>",
        "id": 275726262,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550872
    },
    {
        "content": "<p>so</p>",
        "id": 275726289,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550884
    },
    {
        "content": "<p>the <code>Termination</code> impl is for <code>Result&lt;!, E&gt;</code></p>",
        "id": 275726319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550892
    },
    {
        "content": "<p>the error also says <code> note: upstream crates may add a new impl of trait </code>core:<span aria-label=\"future\" class=\"emoji emoji-1f52e\" role=\"img\" title=\"future\">:future:</span>:Future<code> for type </code>core::result::Result&lt;!, _&gt;<code> in future versions</code></p>",
        "id": 275726320,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550893
    },
    {
        "content": "<p>and the other is for ny <code>F</code> where <code>F: Future</code></p>",
        "id": 275726343,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550900
    },
    {
        "content": "<p>therefore, we need to know that <code>Result&lt;!, E&gt;: !Future</code></p>",
        "id": 275726382,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550914
    },
    {
        "content": "<p>but I don't see any such impl</p>",
        "id": 275726391,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550920
    },
    {
        "content": "<p>i.e., the error message looks exactly right to me</p>",
        "id": 275726441,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550926
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/compare/master...yoshuawuyts:future-for-termination-3?expand=1#diff-ce8cd7d0ae24d8c6503198eeb502052175fc9c47d15fbc85258236b53e312ba0R135\">https://github.com/rust-lang/rust/compare/master...yoshuawuyts:future-for-termination-3?expand=1#diff-ce8cd7d0ae24d8c6503198eeb502052175fc9c47d15fbc85258236b53e312ba0R135</a></p>",
        "id": 275726443,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550926
    },
    {
        "content": "<p><code>Infallible</code> is not the same as <code>!</code></p>",
        "id": 275726482,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550939
    },
    {
        "content": "<p>it may be someday, but right now they are distinct types</p>",
        "id": 275726509,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647550953
    },
    {
        "content": "<p>hold on ...</p>",
        "id": 275726544,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550969
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/commit/4d6474d192b3aeb6be8a7c5886bd7fe53fb2c6c6#diff-ce8cd7d0ae24d8c6503198eeb502052175fc9c47d15fbc85258236b53e312ba0R134\">https://github.com/rust-lang/rust/commit/4d6474d192b3aeb6be8a7c5886bd7fe53fb2c6c6#diff-ce8cd7d0ae24d8c6503198eeb502052175fc9c47d15fbc85258236b53e312ba0R134</a></p>",
        "id": 275726576,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550983
    },
    {
        "content": "<p>it seems like Yoshua changed something ...</p>",
        "id": 275726593,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647550992
    },
    {
        "content": "<p>well, which code are you testing :)</p>",
        "id": 275726636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647551022
    },
    {
        "content": "<p>yeah <a href=\"https://github.com/rust-lang/rust/commit/859fa268c643ffff2efb4321aae4004445f58401\">https://github.com/rust-lang/rust/commit/859fa268c643ffff2efb4321aae4004445f58401</a></p>",
        "id": 275726637,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647551022
    },
    {
        "content": "<p>you probably want both</p>",
        "id": 275726672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647551035
    },
    {
        "content": "<p>I'm testing the branch but this last commit  ... yeah</p>",
        "id": 275726723,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647551047
    },
    {
        "content": "<p>let's see ...</p>",
        "id": 275726816,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647551095
    },
    {
        "content": "<p>I think a test for this might be</p>",
        "id": 275727702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647551517
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[rustc_strict_coherence]</span><span class=\"w\"></span>\n<span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">MyStruct</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">Foo</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">MyStruct</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">method</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">MyStruct</span><span class=\"o\">&lt;</span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">method</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275727822,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647551555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 275727830,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647551559
    },
    {
        "content": "<p>that code should compile with <code>impl !Foo for u32 { }</code></p>",
        "id": 275727854,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647551573
    },
    {
        "content": "<p>but not otherwise</p>",
        "id": 275727860,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647551575
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 275727915,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647551607
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/Yoshua's.20issue.20.2394526/near/275725542\">said</a>:</p>\n<blockquote>\n<p>btw I'm not sure that <code>!Future</code> for <code>!</code> makes sense</p>\n</blockquote>\n<p>Since <code>Future</code> has an associated type, I'd rather we didn't have <code>! : Future</code>, since for some arbitrary type <code>T</code>, we won't have <code>! : Future&lt;Output = T&gt;</code> anyways: the only one slightly sensible choice <br>\nwould be <code>! : Future&lt;Output = !&gt;</code>, and I'm not convinced that we should favor <code>!</code> in assoc type like that.<br>\nAnother way to look at this, is that we want <code>!Future for Result&lt;!, _&gt;</code>, which thus includes <code>!Future for Result&lt;!, !&gt;</code>, and I don't see why <code>!</code> would have to feature trait impls that <code>Result&lt;!, !&gt;</code> would not have.</p>",
        "id": 275745838,
        "sender_full_name": "Daniel Henry-Mantilla",
        "timestamp": 1647562827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts [he/they]</span> can you try again your branch with <a href=\"https://github.com/rust-lang/rust/compare/master...spastorino:overlap-inherent-impls\">https://github.com/rust-lang/rust/compare/master...spastorino:overlap-inherent-impls</a></p>",
        "id": 275833770,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647623318
    },
    {
        "content": "<p>as you may have seen in this topic you would need to add back <code>!Future</code> for <code>Result&lt;!, ..&gt;</code>, basically both things that you added and removed <a href=\"https://github.com/rust-lang/rust/commit/859fa268c643ffff2efb4321aae4004445f58401#diff-ce8cd7d0ae24d8c6503198eeb502052175fc9c47d15fbc85258236b53e312ba0L134\">here</a> and then there may be other issues but I guess may be related to the changes in your branch?</p>",
        "id": 275833992,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647623418
    },
    {
        "content": "<p>ohh I'd first need to rebase on top of master</p>",
        "id": 275834047,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647623443
    },
    {
        "content": "<p>rebased</p>",
        "id": 275834102,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647623474
    },
    {
        "content": "<p>and opened a PR <a href=\"https://github.com/rust-lang/rust/issues/95082\">#95082</a></p>",
        "id": 275834880,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647623788
    },
    {
        "content": "<p>yesss, trying now!</p>",
        "id": 275838483,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647625392
    },
    {
        "content": "<p>cool</p>",
        "id": 275838508,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647625406
    },
    {
        "content": "<p>was trying to search what was the error I was getting with your branch afterwards</p>",
        "id": 275838766,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647625528
    },
    {
        "content": "<p>just found it, you would probably hit the same I guess</p>",
        "id": 275838786,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647625539
    },
    {
        "content": "<p>but given that I used some master and cherry-picked your commits and now I've also rebased against latest master things may change</p>",
        "id": 275838830,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647625562
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0119</span><span class=\"p\">]</span>: <span class=\"nc\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementations</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">process</span>::<span class=\"n\">Termination</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">library</span><span class=\"o\">/</span><span class=\"n\">std</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">process</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">2100</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2046</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Termination</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"o\">-----------------------</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">2100</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Termination</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"></span>\n<span class=\"mi\">2101</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"></span>\n<span class=\"mi\">2102</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">T</span>: <span class=\"nc\">Termination</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">2103</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">F</span>: <span class=\"nc\">crate</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"o\">&lt;</span><span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2155</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"mi\">2156</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275838872,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647625567
    },
    {
        "content": "<p>that's what I was seeing</p>",
        "id": 275838882,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647625574
    },
    {
        "content": "<p>I guess you had a !Future for () ?</p>",
        "id": 275839016,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647625651
    },
    {
        "content": "<p>Things seem to just work here?</p>",
        "id": 275843133,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647627520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211722\">Yoshua Wuyts [he/they]</span> <a href=\"#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/Yoshua's.20issue.20.2394526/near/275843133\">said</a>:</p>\n<blockquote>\n<p>Things seem to just work here?</p>\n</blockquote>\n<p>it works now?</p>",
        "id": 275845368,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647628693
    },
    {
        "content": "<p>yeah forget about what I've said, because I was running some old stuff over your branch</p>",
        "id": 275845394,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647628707
    },
    {
        "content": "<p>I haven't tried running an actual file with <code>async fn main</code> in it yet</p>",
        "id": 275845443,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647628742
    },
    {
        "content": "<p>How do I build a release again?</p>",
        "id": 275845456,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647628747
    },
    {
        "content": "<p>I meant but you have rebased your branch with changes on lib on top of mine I guess?</p>",
        "id": 275845509,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647628774
    },
    {
        "content": "<p>and you were able to build that, right?</p>",
        "id": 275845522,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647628782
    },
    {
        "content": "<p>yep, compiler is happy</p>",
        "id": 275845616,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647628809
    },
    {
        "content": "<p>then you can just use <code>./build/x86_64-unknown-linux-gnu/stage1/bin/rustc</code></p>",
        "id": 275845679,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647628839
    },
    {
        "content": "<p>you can also do stuff like <code>rustup toolchain link yoshua-rust path_to_rustc/build/x86_64-unknown-linux-gnu/stage1</code></p>",
        "id": 275845763,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647628886
    },
    {
        "content": "<p>/me takes notes</p>",
        "id": 275845801,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647628907
    },
    {
        "content": "<p>and then do <code>rustc +yoshua-rust test.rs</code></p>",
        "id": 275845809,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647628910
    },
    {
        "content": "<p>oh fun, running <code>x.py build</code> surfaced errors</p>",
        "id": 275847044,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647629535
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/Wyc9oRn5OfgjudSL38cTDfBz/Screenshot-2022-03-18-195345.png\">Screenshot-2022-03-18-195345.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/Wyc9oRn5OfgjudSL38cTDfBz/Screenshot-2022-03-18-195345.png\" title=\"Screenshot-2022-03-18-195345.png\"><img src=\"/user_uploads/4715/Wyc9oRn5OfgjudSL38cTDfBz/Screenshot-2022-03-18-195345.png\"></a></div>",
        "id": 275847277,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647629648
    },
    {
        "content": "<p>Oh hah, nice: I think that might be a one-liner to fix. I guess I was mostly surprised the <code>x.py check</code> command didn't catch it :o</p>",
        "id": 275847659,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647629845
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 275849967,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647630907
    },
    {
        "content": "<p>please keep reporting, interested to see how goes :)</p>",
        "id": 275849990,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647630922
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/ksj_UHvaICKiJtYt0CpjsHLI/Screenshot-2022-03-18-202151.png\">Screenshot-2022-03-18-202151.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/ksj_UHvaICKiJtYt0CpjsHLI/Screenshot-2022-03-18-202151.png\" title=\"Screenshot-2022-03-18-202151.png\"><img src=\"/user_uploads/4715/ksj_UHvaICKiJtYt0CpjsHLI/Screenshot-2022-03-18-202151.png\"></a></div>",
        "id": 275850821,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647631323
    },
    {
        "content": "<p>success!</p>",
        "id": 275850850,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647631326
    },
    {
        "content": "<p>(the big red warning is just rust-analyzer using a different Rust version)</p>",
        "id": 275850872,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1647631343
    },
    {
        "content": "<p>yay!</p>",
        "id": 275851677,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647631749
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> about <a href=\"https://github.com/rust-lang/rust/pull/95082#discussion_r831557947\">https://github.com/rust-lang/rust/pull/95082#discussion_r831557947</a></p>",
        "id": 276220626,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647968264
    },
    {
        "content": "<p>I don't think it's possible to do that or well, at least not as you've mentioned there, maybe there's some cool trick you were thinking about ...</p>",
        "id": 276220641,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647968271
    },
    {
        "content": "<p>in particular because of <code>let (impl2_trait_ref, obligations) = impl_trait_ref_and_oblig(selcx, impl1_env, impl2_def_id, impl2_substs);</code></p>",
        "id": 276220748,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1647968308
    },
    {
        "content": "<p>well</p>",
        "id": 276278167,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647998289
    },
    {
        "content": "<p>we'd have to make a wrapper function <code>impl_subject_and_obligations</code> or something like that, I suppose</p>",
        "id": 276278177,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1647998317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/Yoshua's.20issue.20.2394526/near/276278177\">said</a>:</p>\n<blockquote>\n<p>we'd have to make a wrapper function <code>impl_subject_and_obligations</code> or something like that, I suppose</p>\n</blockquote>\n<p>yes, that's more or less what I meant :)</p>",
        "id": 276323981,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648037683
    },
    {
        "content": "<p>later I'll try something and push it to the PR, we can continue the discussion there</p>",
        "id": 276324041,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648037716
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ok</p>",
        "id": 276397525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1648068258
    },
    {
        "content": "<p>I suspect we could use this to cleanup some other code, but I'm not sure</p>",
        "id": 276397537,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1648068266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> ping</p>",
        "id": 276472941,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1648127411
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 276472967,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648127421
    },
    {
        "content": "<p>did you ever do any more on this?</p>",
        "id": 276472981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1648127430
    },
    {
        "content": "<p>do we want to talk here or in <a class=\"stream-topic\" data-stream-id=\"315151\" href=\"/#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/RFC.20draft\">#wg-traits/negative-impls &gt; RFC draft</a> ?</p>",
        "id": 276473010,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648127444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/315151-wg-traits.2Fnegative-impls/topic/Yoshua's.20issue.20.2394526/near/276472981\">said</a>:</p>\n<blockquote>\n<p>did you ever do any more on this?</p>\n</blockquote>\n<p>I was starting when you pinged me :)</p>",
        "id": 276473046,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648127462
    },
    {
        "content": "<p>but after we finish I'm going to complete it in a couple of minutes</p>",
        "id": 276473072,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648127474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> PR looks nice now</p>",
        "id": 276557405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1648168105
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"211722\">@Yoshua Wuyts [he/they]</span> both PRs are now merged, you should be able to land your changes, please cc me so I can follow things :)</p>",
        "id": 276607548,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648209016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116266\">@Santiago Pastorino</span> yay, thanks so much!</p>",
        "id": 276610134,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1648210735
    },
    {
        "content": "<p>I'll probably need to bring this back to the Async WG to figure out what we can do in terms of next steps. But I think there's a reasonable case to be made that we should land this as experimental on nightly so we can <em>finally</em> start writing functioning async code examples in the stdlib.</p>",
        "id": 276610577,
        "sender_full_name": "Yoshua Wuyts [he/they]",
        "timestamp": 1648211023
    },
    {
        "content": "<p>yeah <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 276610896,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648211170
    },
    {
        "content": "<p>also, given that the last PR was merged just some minutes ago, it will be included in the following nightly and it's not in the current one</p>",
        "id": 276611045,
        "sender_full_name": "Santiago Pastorino",
        "timestamp": 1648211260
    }
]