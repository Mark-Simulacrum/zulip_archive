[
    {
        "content": "<p>Interesting article that might be relevant to our group:<a href=\"https://matklad.github.io/2020/10/15/study-of-std-io-error.html\">https://matklad.github.io/2020/10/15/study-of-std-io-error.html</a></p>",
        "id": 213371707,
        "sender_full_name": "DPC",
        "timestamp": 1602726472
    },
    {
        "content": "<p>\"error kitchensinkosis\" <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 213426624,
        "sender_full_name": "oliver",
        "timestamp": 1602769266
    },
    {
        "content": "<p>Nice article, it is quite interesting how intricate the design of such types is:</p>\n<ul>\n<li>monomorphization done by hand to reduce compile time generated code</li>\n</ul>",
        "id": 213885471,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603180718
    },
    {
        "content": "<p>it is mentioned that the size of <code>std::io::Error</code> can be fixed, is there any movement happening concerning it? Or is it not our concern</p>",
        "id": 213885587,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603180798
    },
    {
        "content": "<p>I am quite confused by the proposition:</p>\n<div class=\"codehilite\"><pre><span></span><code>Second, we can make use of the fact that pointers are aligned, and stash both Os and Simple variants into usize with the least significant bit set.\nI think we can even get creative and use the second least significant bit, leaving the first one as a niche. That way, even something like io::Result&lt;i32&gt; can be pointer-sized!\n</code></pre></div>",
        "id": 213885707,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603180842
    },
    {
        "content": "<p>is he proposing some kind of <code>union</code>'ing?</p>",
        "id": 213885901,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603180951
    },
    {
        "content": "<p>And yeah, I know I may be late to party with my replies <span aria-label=\"happy\" class=\"emoji emoji-1f600\" role=\"img\" title=\"happy\">:happy:</span></p>",
        "id": 213885922,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603180971
    },
    {
        "content": "<p>what is confusing you?</p>",
        "id": 213936864,
        "sender_full_name": "oliver",
        "timestamp": 1603208097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344196\">Jakub Duchniewicz</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Study.20of.20io.3A.3AError/near/213885471\">said</a>:</p>\n<blockquote>\n<p>Nice article, it is quite interesting how intricate the design of such types is:</p>\n<ul>\n<li>monomorphization done by hand to reduce compile time generated code</li>\n</ul>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/77960\">https://github.com/rust-lang/rust/issues/77960</a></p>",
        "id": 213940505,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603209713
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281739\">oliver</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Study.20of.20io.3A.3AError/near/213936864\">said</a>:</p>\n<blockquote>\n<p>what is confusing you?</p>\n</blockquote>\n<p>this particular bit fiddling with LSB and second LSB</p>",
        "id": 213949701,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603213820
    }
]