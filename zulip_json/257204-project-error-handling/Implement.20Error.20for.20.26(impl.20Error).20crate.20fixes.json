[
    {
        "content": "<p>I am currently fixing the crates that broke due to <a href=\"https://github.com/rust-lang/rust/issues/75180\">#75180</a> and have stumbled upon some small issues. For example crate <code>neptungen</code> fails with linker errors when I fix the errors introduced by this PR</p>",
        "id": 222422757,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610454052
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>         /usr/bin/ld: /mnt/games/Projects/OpenSourceFixes/rust_pr_75180/neptungen/target/debug/deps/libmd6-438a994c8a2766cb.rlib(md6_compress.o):/home/jduchniewicz/.cargo/registry/src/github.com-1ecc6299db9ec823/md6-1.1.1/ext/md6/md6.h:425: multiple definition of `compression_hook&#39;; /mnt/games/Projects/OpenSourceFixes/rust_pr_75180/neptungen/target/debug/deps/libmd6-438a994c8a2766cb.rlib(md6_nist.o):/home/jduchniewicz/.cargo/registry/src/github.com-1ecc6299db9ec823/md6-1.1.1/ext/md6/md6.h:425: first defined here\n          collect2: error: ld returned 1 exit status\n</code></pre></div>",
        "id": 222422770,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610454064
    },
    {
        "content": "<p>It seems like I am getting the same symbol twice (once due to my custom toolchain and once due to regular one?)</p>",
        "id": 222422944,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610454176
    },
    {
        "content": "<p>Besides, I try to wrap my head around as to WHY does removing <code>as_ref()</code> causes this to work with the implementation introduced by this PR</p>",
        "id": 222423487,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610454559
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>[INFO] [stdout] error[E0283]: type annotations needed for `std::string::String`\n[INFO] [stdout]    --&gt; src/sync.rs:282:76\n[INFO] [stdout]     |\n[INFO] [stdout] 282 |                         format!(&quot;Error during ftp put operation: {:?}&quot;, e).as_ref(),\n[INFO] [stdout]     |                         -------------------------------------------------- ^^^^^^ cannot infer type for struct `std::string::String`\n[INFO] [stdout]     |                         |\n[INFO] [stdout]     |                         consider giving `res` a type\n[INFO] [stdout]     |\n[INFO] [stdout]     = note: cannot satisfy `std::string::String: std::convert::AsRef&lt;_&gt;`\n</code></pre></div>",
        "id": 222423613,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610454630
    },
    {
        "content": "<p>I guess I still know too little about the library <span aria-label=\"slight frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"slight frown\">:slight_frown:</span></p>",
        "id": 222423995,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610454909
    },
    {
        "content": "<p>As for other breakage:<br>\nchainerror - fixed, PR waiting for merge<br>\nneptungen - weird error<br>\nmars-discovery is a no-star repo without any forks<br>\nc_string - no longer maintained<br>\nsv - not sure how to fix this error to be honest (again too brisk knowledge of the library yet)</p>",
        "id": 222425338,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610455825
    },
    {
        "content": "<p>eyre and strerror I have not yet tried</p>",
        "id": 222425355,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610455842
    },
    {
        "content": "<p>You can leave eyre to me</p>",
        "id": 222425958,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610456228
    },
    {
        "content": "<p>And I'll get back to u once I've woken up about the as_ref stuff</p>",
        "id": 222426017,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610456268
    },
    {
        "content": "<p>_passes back out_</p>",
        "id": 222426041,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610456279
    },
    {
        "content": "<p>okay im back</p>",
        "id": 222483046,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610480128
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344196\">Jakub Duchniewicz</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Implement.20Error.20for.20.26(impl.20Error).20crate.20fixes/near/222423613\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\"><pre><span></span><code>[INFO] [stdout] error[E0283]: type annotations needed for `std::string::String`\n[INFO] [stdout]    --&gt; src/sync.rs:282:76\n[INFO] [stdout]     |\n[INFO] [stdout] 282 |                         format!(&quot;Error during ftp put operation: {:?}&quot;, e).as_ref(),\n[INFO] [stdout]     |                         -------------------------------------------------- ^^^^^^ cannot infer type for struct `std::string::String`\n[INFO] [stdout]     |                         |\n[INFO] [stdout]     |                         consider giving `res` a type\n[INFO] [stdout]     |\n[INFO] [stdout]     = note: cannot satisfy `std::string::String: std::convert::AsRef&lt;_&gt;`\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Where is this error from?</p>",
        "id": 222483303,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610480225
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344196\">Jakub Duchniewicz</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Implement.20Error.20for.20.26(impl.20Error).20crate.20fixes/near/222422757\">said</a>:</p>\n<blockquote>\n<p>I am currently fixing the crates that broke due to <a href=\"https://github.com/rust-lang/rust/issues/75180\">#75180</a> and have stumbled upon some small issues. For example crate <code>neptungen</code> fails with linker errors when I fix the errors introduced by this PR</p>\n</blockquote>\n<p>Not sure, you could try using <code>cargo tree -d</code> to see if you've ended up with any duplicate dependencies</p>",
        "id": 222483393,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610480269
    },
    {
        "content": "<p>that's my best bet as to why the symbol would be found twice</p>",
        "id": 222483403,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610480276
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Implement.20Error.20for.20.26(impl.20Error).20crate.20fixes/near/222483303\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"344196\">Jakub Duchniewicz</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Implement.20Error.20for.20.26(impl.20Error).20crate.20fixes/near/222423613\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\"><pre><span></span><code>[INFO] [stdout] error[E0283]: type annotations needed for `std::string::String`\n[INFO] [stdout]    --&gt; src/sync.rs:282:76\n[INFO] [stdout]     |\n[INFO] [stdout] 282 |                         format!(&quot;Error during ftp put operation: {:?}&quot;, e).as_ref(),\n[INFO] [stdout]     |                         -------------------------------------------------- ^^^^^^ cannot infer type for struct `std::string::String`\n[INFO] [stdout]     |                         |\n[INFO] [stdout]     |                         consider giving `res` a type\n[INFO] [stdout]     |\n[INFO] [stdout]     = note: cannot satisfy `std::string::String: std::convert::AsRef&lt;_&gt;`\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Where is this error from?</p>\n</blockquote>\n<p>this is from the rust-sv library and matches on String stored in self</p>\n<div class=\"codehilite\"><pre><span></span><code>            Message::Other(s) =&gt; Err(io::Error::new(io::ErrorKind::InvalidData, s.as_ref())),\n</code></pre></div>",
        "id": 222555679,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610530848
    },
    {
        "content": "<p>oh and returns io::Result&lt;()&gt;</p>",
        "id": 222555724,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610530872
    },
    {
        "content": "<p>so I guess there is some ownership problem involved as we cannot move out of self the String contained within</p>",
        "id": 222555877,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610530956
    },
    {
        "content": "<p>not sure</p>",
        "id": 222640498,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569616
    },
    {
        "content": "<p>let me checkout the rust-sv library and see what you mean</p>",
        "id": 222640514,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569630
    },
    {
        "content": "<p>it is probably something quite simple <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 222640559,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610569661
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"344196\">@Jakub Duchniewicz</span> are you using the current nightly to get these errors or did you have to compile a custom toolchain?</p>",
        "id": 222640691,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569719
    },
    {
        "content": "<p>im assuming nightly because I think I recall this change already landed</p>",
        "id": 222640720,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569735
    },
    {
        "content": "<p>hmm it's this change</p>",
        "id": 222640765,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610569755
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/75180\">https://github.com/rust-lang/rust/pull/75180</a></p>",
        "id": 222640768,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610569757
    },
    {
        "content": "<p>oh it didnt land</p>",
        "id": 222640785,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569767
    },
    {
        "content": "<p>It is still open</p>",
        "id": 222640789,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610569770
    },
    {
        "content": "<p>lol darn</p>",
        "id": 222640790,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569770
    },
    {
        "content": "<p>so I have to compile rustc</p>",
        "id": 222640797,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569774
    },
    {
        "content": "<p>alright</p>",
        "id": 222640803,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1610569777
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"344196\">@Jakub Duchniewicz</span> Ah I think that error with <code>as_ref</code> is inference failing now that there are more ways to make a <code>String</code> satisfy the <code>impl Into&lt;Box&lt;dyn Error + Send + Sync + ‘static&gt;&gt;</code> bound that <code>io::Error::new</code> wants. I’ll check it out when I’m back in front of a machine 🙂</p>",
        "id": 222658890,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1610578518
    },
    {
        "content": "<p>Right, so I should do explicit calls using the the turbofish syntax right?</p>",
        "id": 222687602,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1610610799
    }
]