[
    {
        "content": "<blockquote>\n<p>error defining (?) vs.</p>\n</blockquote>\n<p>I agree with the sentiment. SNAFU is listed as an error handling crate but I feel that handling has always been the wrong word. Itâ€™s a crate that allows you to take an error and produce a new error from it or create an error value out of thin air.</p>",
        "id": 210990892,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600862093
    },
    {
        "content": "<p>I also have the same sentiment regarding the \"Reporter\" terminology. what is that?! a error formatter for the cli, human readable and pretty printer? it's an output formatter? </p>\n<p>for instance if on a service I want to expose an error occurred locally with additional metadata to an external service in a json format, can I call that a reporter?</p>",
        "id": 210992074,
        "sender_full_name": "Nelson J Morais",
        "timestamp": 1600862939
    },
    {
        "content": "<p>no</p>",
        "id": 210997663,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600865933
    },
    {
        "content": "<p>I'd define error reporting as creating human readable representation of errors and their context</p>",
        "id": 210997726,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600865964
    },
    {
        "content": "<p>so all of those things you mentioned would fall under that unbrella except the bit about json because that is still a machine first representation</p>",
        "id": 210997765,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600865993
    },
    {
        "content": "<p>that id call serialization</p>",
        "id": 210997908,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600866050
    },
    {
        "content": "<p>It's more an error formatter then. Reporting suggests some mechanism for I/O IMHO.</p>",
        "id": 210998337,
        "sender_full_name": "pachi",
        "timestamp": 1600866229
    },
    {
        "content": "<p>But, well, this is maybe too bikesheddy</p>",
        "id": 210998433,
        "sender_full_name": "pachi",
        "timestamp": 1600866258
    },
    {
        "content": "<p>One term I toyed with but rejected was \"error creation/creating\", but that just sounds so bad: \"This crate adds errors to your code\" <span aria-label=\"crying cat\" class=\"emoji emoji-1f63f\" role=\"img\" title=\"crying cat\">:crying_cat:</span></p>",
        "id": 210999411,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600866644
    },
    {
        "content": "<p>\"Error creating crate\" might also be hard to read or spell</p>",
        "id": 211002467,
        "sender_full_name": "teor",
        "timestamp": 1600867856
    },
    {
        "content": "<p>create crate</p>",
        "id": 211002528,
        "sender_full_name": "teor",
        "timestamp": 1600867882
    },
    {
        "content": "<p>Well, <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span>, \"error defining\" doesn't sound too alien.</p>",
        "id": 211007995,
        "sender_full_name": "pachi",
        "timestamp": 1600870002
    },
    {
        "content": "<p>Agree.</p>",
        "id": 211008452,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600870160
    },
    {
        "content": "<p>And I'm fine with it if there's a consensus</p>",
        "id": 211008496,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600870177
    },
    {
        "content": "<p>Just in case it suggests some \"functions\"/ naming, What I found most confusing about error handling was:</p>\n<p>1) how to craft/define a set of custom errors (generic ala dyn Error, enum style, Failure, ...)<br>\n2) how to add context to them (depending on the chosen strategy, like wrapping, source, ...)<br>\n3) how to invoke/raise those errors (wrap in Err, using ? with implicit conversion, map_err, etc)<br>\n4) how to intercept to show them to the user (conversions using From, match, ?, ...).</p>\n<p>I still have doubts and have to try and see with parts like the context one.</p>",
        "id": 211009655,
        "sender_full_name": "pachi",
        "timestamp": 1600870632
    },
    {
        "content": "<p>by \"error defining crate\" I should interpret that this crate allows me to structurally define a data type that my app will have nd understand as an error, is that it?</p>",
        "id": 211009717,
        "sender_full_name": "Nelson J Morais",
        "timestamp": 1600870671
    },
    {
        "content": "<p><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 211009825,
        "sender_full_name": "Nelson J Morais",
        "timestamp": 1600870717
    },
    {
        "content": "<p>I would understand so.</p>",
        "id": 211009872,
        "sender_full_name": "pachi",
        "timestamp": 1600870748
    },
    {
        "content": "<p>yes <span class=\"user-mention\" data-user-id=\"344082\">@Nelson J Morais</span></p>",
        "id": 211010039,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600870816
    },
    {
        "content": "<p>OK great. <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 211014371,
        "sender_full_name": "Nelson J Morais",
        "timestamp": 1600872674
    }
]