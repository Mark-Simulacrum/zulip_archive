[
    {
        "content": "<p>Meeting Agenda: <a href=\"https://hackmd.io/@rust-libs/rJ6aitNOw\">https://hackmd.io/@rust-libs/rJ6aitNOw</a></p>",
        "id": 214609651,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603734703
    },
    {
        "content": "<p>meeting starts in 9 minutes</p>",
        "id": 214609661,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603734711
    },
    {
        "content": "<p>alrighty everyone, meeting time</p>",
        "id": 214611083,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735239
    },
    {
        "content": "<p>we will start with reviewing action items from last week</p>",
        "id": 214611179,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735277
    },
    {
        "content": "<p>The first two are mine, implementing the backtrace in core PoC and updating the object provider RFC</p>",
        "id": 214611227,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735304
    },
    {
        "content": "<p>I didn't have time to do either of those these last two weeks</p>",
        "id": 214611253,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735315
    },
    {
        "content": "<p>so I don't have any updates, they both still need doing</p>",
        "id": 214611300,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735324
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204346\">@Ashley Mannix</span> did you end up making a separate tracking issue for box dyn error</p>",
        "id": 214611374,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735367
    },
    {
        "content": "<p>i vaguely recall you making one the day of the last meeting</p>",
        "id": 214611385,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735373
    },
    {
        "content": "<p>let me check the repo rq</p>",
        "id": 214611396,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735376
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/project-error-handling/issues/16\">https://github.com/rust-lang/project-error-handling/issues/16</a></p>",
        "id": 214611414,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735384
    },
    {
        "content": "<p>ay, yes</p>",
        "id": 214611424,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735390
    },
    {
        "content": "<p>and thats the issue you posted the comment in earlier</p>",
        "id": 214611444,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735402
    },
    {
        "content": "<p>got it</p>",
        "id": 214611453,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735405
    },
    {
        "content": "<p>do you want to give a summary of the comment / next steps?</p>",
        "id": 214611473,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735417
    },
    {
        "content": "<p>We set up a tracking issue and I spent a bit of time hacking around with making <code>Box&lt;dyn Error&gt;</code> implement <code>Error</code>. However we slice it I think we need the lattice specialization rules</p>",
        "id": 214611641,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735503
    },
    {
        "content": "<p>the &amp;dyn Error impling error is a possibility though right?</p>",
        "id": 214611694,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735536
    },
    {
        "content": "<p>But I don‚Äôt think that should stop us from making <code>&amp;dyn Error</code> implement <code>Error</code></p>",
        "id": 214611701,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735542
    },
    {
        "content": "<p>what would be the plan for getting such an implementation?</p>",
        "id": 214611723,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735557
    },
    {
        "content": "<p>do we just create the PR and get approval -&gt; merge it?</p>",
        "id": 214611774,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735567
    },
    {
        "content": "<p>that's an instantly stable change right?</p>",
        "id": 214611790,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735577
    },
    {
        "content": "<p>For <code>Box&lt;dyn Error&gt;</code> or for <code>&amp;dyn Error</code>?</p>",
        "id": 214611804,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735584
    },
    {
        "content": "<p>the latter</p>",
        "id": 214611810,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735587
    },
    {
        "content": "<p>That‚Äôs an insta-stable one so the PR needs an FCP started. If we want to do <code>&amp;dyn Error</code> then I can get that kicked off</p>",
        "id": 214611938,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735654
    },
    {
        "content": "<p>Lets get a PR kicked up with an explanation of the problems its trying to solve</p>",
        "id": 214612059,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735703
    },
    {
        "content": "<p>We‚Äôve actually got one open already üòÅ</p>",
        "id": 214612091,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735726
    },
    {
        "content": "<p>why its needed, etc</p>",
        "id": 214612092,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735726
    },
    {
        "content": "<p>perfect</p>",
        "id": 214612101,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735729
    },
    {
        "content": "<p>can you send me the link</p>",
        "id": 214612110,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735735
    },
    {
        "content": "<p>I can dig it up <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 214612129,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735745
    },
    {
        "content": "<p>when you do add it here <a href=\"https://github.com/rust-lang/project-error-handling/projects/1\">https://github.com/rust-lang/project-error-handling/projects/1</a></p>",
        "id": 214612161,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735768
    },
    {
        "content": "<p>assuming you have permissions to do so</p>",
        "id": 214612169,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735774
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/75180\">https://github.com/rust-lang/rust/pull/75180</a></p>",
        "id": 214612172,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735775
    },
    {
        "content": "<p>That‚Äôs what that one does</p>",
        "id": 214612183,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735784
    },
    {
        "content": "<p>k perfect</p>",
        "id": 214612233,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735803
    },
    {
        "content": "<p>added it to the project board</p>",
        "id": 214612272,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735806
    },
    {
        "content": "<p>I‚Äôll need to write a stabilization report and post it there</p>",
        "id": 214612275,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735807
    },
    {
        "content": "<p>alright</p>",
        "id": 214612387,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735872
    },
    {
        "content": "<p>I also wrote a starting point for some recommendations for <code>dyn Error</code> vs <code>impl Error</code> over in <a href=\"https://github.com/rust-lang/project-error-handling/issues/16\">https://github.com/rust-lang/project-error-handling/issues/16</a></p>",
        "id": 214612389,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735874
    },
    {
        "content": "<p>so for those recommendations</p>",
        "id": 214612407,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735884
    },
    {
        "content": "<p>Were there any thoughts on those?</p>",
        "id": 214612408,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735885
    },
    {
        "content": "<p>I was thinking part of the error handling book we're writing</p>",
        "id": 214612421,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735893
    },
    {
        "content": "<p>and possibly in the general rust API guidelines</p>",
        "id": 214612439,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735901
    },
    {
        "content": "<p><a href=\"https://rust-lang.github.io/api-guidelines/\">https://rust-lang.github.io/api-guidelines/</a></p>",
        "id": 214612553,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603735944
    },
    {
        "content": "<p>It would be good to have an API guideline. I think library code that needs to work with errors dynamically is kind of niche</p>",
        "id": 214612656,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603735989
    },
    {
        "content": "<p>But we do have guidelines around making sure library error types are <code>Send + Sync</code> I think</p>",
        "id": 214612713,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603736015
    },
    {
        "content": "<p>yea</p>",
        "id": 214612768,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736038
    },
    {
        "content": "<p>(most threaded code also needs them to be <code>'static</code> too, though.)</p>",
        "id": 214612769,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1603736039
    },
    {
        "content": "<p>theres a C-GOOD-ERR section in <code>interoperability.html</code></p>",
        "id": 214612838,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736054
    },
    {
        "content": "<p>I think we should move on tho</p>",
        "id": 214612936,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736107
    },
    {
        "content": "<p>45 minutes left</p>",
        "id": 214612946,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736112
    },
    {
        "content": "<p>The recommendation I was making was <code>&amp;dyn Error + ‚Äòstatic</code> if you‚Äôre not taking ownership and <code>impl Error + Send + Sync + ‚Äòstatic</code> if you are</p>",
        "id": 214612960,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603736118
    },
    {
        "content": "<p>sounds perfect</p>",
        "id": 214613029,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736160
    },
    {
        "content": "<p>sounds reasonable to me</p>",
        "id": 214613084,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1603736166
    },
    {
        "content": "<p>so next action item was adding a table of contents for the rust book</p>",
        "id": 214613111,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736178
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> <a href=\"https://cryptpad.fr/code/#/2/code/edit/1FhyaBOOANgdSTKA8xbYIt8t/\">https://cryptpad.fr/code/#/2/code/edit/1FhyaBOOANgdSTKA8xbYIt8t/</a> this is that correct?</p>",
        "id": 214613141,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736192
    },
    {
        "content": "<p>Did you want to go ahead and open a PR to add this to the project-error-handling repo itself?</p>",
        "id": 214613167,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736205
    },
    {
        "content": "<p>ya!</p>",
        "id": 214613178,
        "sender_full_name": "oliver",
        "timestamp": 1603736210
    },
    {
        "content": "<p>perfect</p>",
        "id": 214613187,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736214
    },
    {
        "content": "<p>is there anything else you want to mention for that item before we move on?</p>",
        "id": 214613211,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736229
    },
    {
        "content": "<p>gonna take that as a no <em>really wish zulip had an indicator for when ppl are typing</em></p>",
        "id": 214613388,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736309
    },
    {
        "content": "<p>so next up is the blog post <span class=\"user-mention\" data-user-id=\"300743\">@Sean Chen</span> is writing</p>",
        "id": 214613413,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736327
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300743\">@Sean Chen</span> said he'd be late to the meeting, not sure if he has arrived yet</p>",
        "id": 214613434,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736342
    },
    {
        "content": "<p>so ill delay that one until later</p>",
        "id": 214613467,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204346\">@Ashley Mannix</span> how goes the stabilization process for Backtrace?</p>",
        "id": 214613491,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736376
    },
    {
        "content": "<p>Let me check <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 214613526,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603736395
    },
    {
        "content": "<p>looks like @amanieu didn't ever reply to your last comment</p>",
        "id": 214613611,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736422
    },
    {
        "content": "<p>and @ralfjung brought up a comment about <code>panic!</code> relying on different internals than backtrace itself does</p>",
        "id": 214613634,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736438
    },
    {
        "content": "<p>and wanting to see if we could resolve that before moving  forward</p>",
        "id": 214613664,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736457
    },
    {
        "content": "<p>I'm going to assume that we should try to resolve ralf's concerns first and foremost</p>",
        "id": 214613690,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736474
    },
    {
        "content": "<p>I don't know why they're different, not sure if anyone else does</p>",
        "id": 214613718,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736494
    },
    {
        "content": "<p>That‚Äôs it, yes. It could be for no good reason. I‚Äôll investigate!</p>",
        "id": 214613762,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603736513
    },
    {
        "content": "<p>my hope is that we'll be able to just go into the panic implementation and capture a <code>std::backtrace::Backtrace</code> via its public API and remove all the internals usage</p>",
        "id": 214613770,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736518
    },
    {
        "content": "<p>sounds good</p>",
        "id": 214613818,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736526
    },
    {
        "content": "<p>next up is resolving the \"Fix The Error Trait\" issue by <span class=\"user-mention\" data-user-id=\"281739\">@oliver</span></p>",
        "id": 214613907,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736572
    },
    {
        "content": "<p>hows that going</p>",
        "id": 214613917,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736579
    },
    {
        "content": "<p>well...</p>",
        "id": 214614204,
        "sender_full_name": "oliver",
        "timestamp": 1603736707
    },
    {
        "content": "<p>I'm still looking into it</p>",
        "id": 214614217,
        "sender_full_name": "oliver",
        "timestamp": 1603736718
    },
    {
        "content": "<p>it has a lot of touch points I wasn't able to find a good toe hold to get started</p>",
        "id": 214614289,
        "sender_full_name": "oliver",
        "timestamp": 1603736761
    },
    {
        "content": "<p>looking at the tracking issue I think arguably we can say that \"fix backtrace's fmt\" has been done</p>",
        "id": 214614372,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736781
    },
    {
        "content": "<p>we might be able to split off the fancy extra fmt features they want into separate tracking issues</p>",
        "id": 214614405,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736796
    },
    {
        "content": "<p>Would you like some more <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> on it?</p>",
        "id": 214614414,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603736799
    },
    {
        "content": "<p>yes</p>",
        "id": 214614427,
        "sender_full_name": "oliver",
        "timestamp": 1603736806
    },
    {
        "content": "<p>absolutely it should be looked at by others</p>",
        "id": 214614449,
        "sender_full_name": "oliver",
        "timestamp": 1603736816
    },
    {
        "content": "<p>Can you link it? Thanks</p>",
        "id": 214614585,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1603736883
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220273\">Jane Lusby</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Meeting.202020-10-26/near/214614372\">said</a>:</p>\n<blockquote>\n<p>looking at the tracking issue I think arguably we can say that \"fix backtrace's fmt\" has been done</p>\n</blockquote>\n<p>I'm not abreast enough to say definitively.. sorry</p>",
        "id": 214614616,
        "sender_full_name": "oliver",
        "timestamp": 1603736888
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/53487\">https://github.com/rust-lang/rust/issues/53487</a></p>",
        "id": 214614620,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736889
    },
    {
        "content": "<p>I implemented those changes a while back</p>",
        "id": 214614639,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736900
    },
    {
        "content": "<p>the main ones were fixing the debug format and removing the <code>Backtrace:\\n</code> header</p>",
        "id": 214614652,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736910
    },
    {
        "content": "<p>yes yours is still the last comment on 'Fix std::backtrace::Backtrace's fmt representations <a href=\"https://github.com/rust-lang/rust/issues/65280\">#65280</a>'</p>",
        "id": 214614674,
        "sender_full_name": "oliver",
        "timestamp": 1603736918
    },
    {
        "content": "<p>yea</p>",
        "id": 214614693,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736927
    },
    {
        "content": "<p>so the only changes left are I thikn wanting to be able to use the precision to limit the number of frames displayed</p>",
        "id": 214614710,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736942
    },
    {
        "content": "<p>but I think that's minor and secondary</p>",
        "id": 214614729,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736951
    },
    {
        "content": "<p>and shouldn't block the rest of the tracking issue</p>",
        "id": 214614741,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736956
    },
    {
        "content": "<p>also I sorta feel like the <code>fn frames(&amp;self) -&gt; &amp;[BacktraceFrame]</code> feature largely removes the need for it</p>",
        "id": 214614795,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603736991
    },
    {
        "content": "<p>because it will make it easy to produce alternate format representations that include that precision feature out of tree</p>",
        "id": 214614862,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737010
    },
    {
        "content": "<p>so my guess is that the main things we need to do for that tracking issue is close the \"stabilize the backtrace trait\" PR and then do the documentation and stabilization PR</p>",
        "id": 214614959,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737065
    },
    {
        "content": "<p>As for the unresolved issue</p>",
        "id": 214614973,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737070
    },
    {
        "content": "<p>I think we should basically say we think that the internal nullability of backtrace is fine and we want to move forward with it</p>",
        "id": 214615025,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737094
    },
    {
        "content": "<p>and if anyone raises concerns after that we can investigate it</p>",
        "id": 214615054,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737108
    },
    {
        "content": "<p>but since none of us have any concerns I don't think we should keep that question as unresolved</p>",
        "id": 214615078,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> status update on the \"PanicInfo::message\" PR?</p>",
        "id": 214615224,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737180
    },
    {
        "content": "<p>started working on it, not much code to show (got sidetracked on some irl stuff)</p>",
        "id": 214615404,
        "sender_full_name": "DPC",
        "timestamp": 1603737262
    },
    {
        "content": "<p>oh, you're working on implementing it?</p>",
        "id": 214615426,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737274
    },
    {
        "content": "<p>for the first step I was just hoping you'd give a summary of where the issue stands and what the next steps are</p>",
        "id": 214615466,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737293
    },
    {
        "content": "<p>that open concern on that tracking issue, 'single-arg core::panic', is partially resolved by <a href=\"https://github.com/rust-lang/rust/pull/78119\">https://github.com/rust-lang/rust/pull/78119</a></p>",
        "id": 214615487,
        "sender_full_name": "Mara",
        "timestamp": 1603737309
    },
    {
        "content": "<p>im assuming from your comment that it has a full design that has been approved but never implemented</p>",
        "id": 214615489,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737313
    },
    {
        "content": "<p>okay</p>",
        "id": 214615565,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737361
    },
    {
        "content": "<p>next up <span class=\"user-mention\" data-user-id=\"344328\">@Charles Ellis O'Riley Jr.</span> and <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> have been working on implementing the Better assert RFC</p>",
        "id": 214615757,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737435
    },
    {
        "content": "<p>how's that going <span class=\"user-mention\" data-user-id=\"344328\">@Charles Ellis O'Riley Jr.</span> ?</p>",
        "id": 214615780,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737444
    },
    {
        "content": "<p>did you ever end up getting mentorship instructions for that?</p>",
        "id": 214615818,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737464
    },
    {
        "content": "<p>i was helping them set up rustc and linked them to the guide on how to contribute to rust</p>",
        "id": 214615961,
        "sender_full_name": "DPC",
        "timestamp": 1603737532
    },
    {
        "content": "<p>sorry, just arrived. I see that oliver's task has already been discussed</p>",
        "id": 214616196,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603737634
    },
    {
        "content": "<p>Well, I forked and cloned the repo and initially there were 2 errors.  I copied the config filek.  DPC was nice enough to shoot me a link so I went through ity and got to the part of doing the x.py  which produced more errors that I need to work through.  In short it's on my local.</p>",
        "id": 214616218,
        "sender_full_name": "Charles Ellis O'Riley Jr.",
        "timestamp": 1603737647
    },
    {
        "content": "<p>alright, feel free to msg me or <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> (i presume) for help working through any errors</p>",
        "id": 214616300,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737695
    },
    {
        "content": "<p>Cool</p>",
        "id": 214616331,
        "sender_full_name": "Charles Ellis O'Riley Jr.",
        "timestamp": 1603737715
    },
    {
        "content": "<p>alright, last action item</p>",
        "id": 214616445,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737753
    },
    {
        "content": "<p>the backtrace frames</p>",
        "id": 214616449,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737758
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300743\">@Sean Chen</span> are you in attendance now?</p>",
        "id": 214616464,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737766
    },
    {
        "content": "<p>if not I can give the status update</p>",
        "id": 214616483,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737773
    },
    {
        "content": "<p>Yea, I‚Äôve started a draft PR for this</p>",
        "id": 214616485,
        "sender_full_name": "Sean Chen (he/him)",
        "timestamp": 1603737774
    },
    {
        "content": "<p>perfect</p>",
        "id": 214616522,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737792
    },
    {
        "content": "<p>are you blocked on anything?</p>",
        "id": 214616549,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737800
    },
    {
        "content": "<p>Linked here: <a href=\"https://github.com/rust-lang/rust/pull/78299#issuecomment-715704340\">https://github.com/rust-lang/rust/pull/78299#issuecomment-715704340</a></p>",
        "id": 214616591,
        "sender_full_name": "Sean Chen (he/him)",
        "timestamp": 1603737822
    },
    {
        "content": "<p>Nope, just need to find time to actually follow through with Ashley‚Äôs comments and next steps that he outlined :slight_smile:</p>",
        "id": 214616684,
        "sender_full_name": "Sean Chen (he/him)",
        "timestamp": 1603737852
    },
    {
        "content": "<p>perfect</p>",
        "id": 214616690,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737856
    },
    {
        "content": "<p>lol, very relatable</p>",
        "id": 214616700,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737861
    },
    {
        "content": "<p>its hard in covid times</p>",
        "id": 214616710,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737867
    },
    {
        "content": "<p>dont push yourself</p>",
        "id": 214616716,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737869
    },
    {
        "content": "<p>i dont want ppl burning themselves out over self imposed responsibilities</p>",
        "id": 214616760,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737897
    },
    {
        "content": "<p>The blog post is also in a place I‚Äôm happy with after I reviewed everyone‚Äôs input.</p>",
        "id": 214616786,
        "sender_full_name": "Sean Chen (he/him)",
        "timestamp": 1603737912
    },
    {
        "content": "<p>alright</p>",
        "id": 214616798,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737919
    },
    {
        "content": "<p>Only question is when and where to post it</p>",
        "id": 214616808,
        "sender_full_name": "Sean Chen (he/him)",
        "timestamp": 1603737925
    },
    {
        "content": "<p>lets talk about that after the meeting</p>",
        "id": 214616844,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737941
    },
    {
        "content": "<p>but im thinking we will probably want to post on the Inside Rust blog</p>",
        "id": 214616877,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737961
    },
    {
        "content": "<p>Okay though, so thats all the action items, onto the next agenda item</p>",
        "id": 214616941,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737978
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> has opened a new RFC for fixing inconsistencies between core and std panic</p>",
        "id": 214616972,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603737994
    },
    {
        "content": "<p>can you go ahead and give a status update on that <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> ?</p>",
        "id": 214617002,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738014
    },
    {
        "content": "<p>summary, next steps, etc</p>",
        "id": 214617018,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738024
    },
    {
        "content": "<p>it's just one day old, so not much status to update yet ^^. but yeah in summary it proposes to make std's and core's panic macro the same one, and make it behave identically to print!() in how it uses its arguments</p>",
        "id": 214617106,
        "sender_full_name": "Mara",
        "timestamp": 1603738079
    },
    {
        "content": "<p>so <code>panic!(\"{}\")</code> and <code>panic!(123)</code> etc. will no longer compile</p>",
        "id": 214617167,
        "sender_full_name": "Mara",
        "timestamp": 1603738093
    },
    {
        "content": "<p>(all gated behind edition 2021 to avoid breaking existing code)</p>",
        "id": 214617185,
        "sender_full_name": "Mara",
        "timestamp": 1603738105
    },
    {
        "content": "<p>throwing random non-string types is moved to a separate function, <code>panic_any(whatever)</code></p>",
        "id": 214617216,
        "sender_full_name": "Mara",
        "timestamp": 1603738123
    },
    {
        "content": "<p>sounds good</p>",
        "id": 214617221,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738126
    },
    {
        "content": "<p>would you like some eyes on the RFC?</p>",
        "id": 214617241,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738138
    },
    {
        "content": "<p>I can do a review pass of it</p>",
        "id": 214617250,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738143
    },
    {
        "content": "<p>it's mostly a collection of things that were already discussed by libs and lang people on other issues and PRs, so i don't expect a lot of discussion on this rfc</p>",
        "id": 214617320,
        "sender_full_name": "Mara",
        "timestamp": 1603738183
    },
    {
        "content": "<p>sure, always good to see if i missed anything</p>",
        "id": 214617336,
        "sender_full_name": "Mara",
        "timestamp": 1603738193
    },
    {
        "content": "<p>will do</p>",
        "id": 214617360,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738203
    },
    {
        "content": "<p>alright, next up on the agenda is to review open issues on the project group repo</p>",
        "id": 214617464,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738254
    },
    {
        "content": "<p>I've looked at them, there are currently 7, we've already discussed 2 of them as part of this meeting, the impl Error for E: Error one and the backtrace proof of concept</p>",
        "id": 214617515,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738289
    },
    {
        "content": "<p>move std::io::Error to core is currently blocked, and likely impossible</p>",
        "id": 214617541,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738310
    },
    {
        "content": "<p>so I don't thikn we should spend time on it</p>",
        "id": 214617551,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738315
    },
    {
        "content": "<p>globally consistent error reporting is blocked as well I feel</p>",
        "id": 214617613,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738333
    },
    {
        "content": "<p>though we could be doing some research there</p>",
        "id": 214617622,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738338
    },
    {
        "content": "<p>if anyone is interested in discussing it further with me lmk</p>",
        "id": 214617638,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738349
    },
    {
        "content": "<p>error return traces are blocked by the generic member access RFC</p>",
        "id": 214617659,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738361
    },
    {
        "content": "<p>I can check into this globally consistent error reporting as I have nothing right now</p>",
        "id": 214617696,
        "sender_full_name": "Jakub Duchniewicz",
        "timestamp": 1603738386
    },
    {
        "content": "<p>oh actually we've discussed 3 of these, one of them is for backtrace frames API</p>",
        "id": 214617698,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738386
    },
    {
        "content": "<p>so thats already covered</p>",
        "id": 214617701,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738388
    },
    {
        "content": "<p>alright <span class=\"user-mention\" data-user-id=\"344196\">@Jakub Duchniewicz</span></p>",
        "id": 214617717,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738397
    },
    {
        "content": "<p>i have some vague ideas for how to work towards it</p>",
        "id": 214617742,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738411
    },
    {
        "content": "<p>globally consistent error report is also something I am interested in</p>",
        "id": 214617754,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1603738416
    },
    {
        "content": "<p>lets create a zulip topic after this and I'll bring everyone up to speed</p>",
        "id": 214617790,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738433
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/project-error-handling/issues/7\">https://github.com/rust-lang/project-error-handling/issues/7</a> is the only issue that we could in theory talk about</p>",
        "id": 214617863,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738450
    },
    {
        "content": "<p>this is contentious</p>",
        "id": 214617899,
        "sender_full_name": "oliver",
        "timestamp": 1603738471
    },
    {
        "content": "<p>yes</p>",
        "id": 214617911,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738476
    },
    {
        "content": "<p>I recall previous discussion saying POSIX ought not be supported per se</p>",
        "id": 214617934,
        "sender_full_name": "oliver",
        "timestamp": 1603738491
    },
    {
        "content": "<p>I'd like to see the original author of that issue drive any discussion around it</p>",
        "id": 214617935,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738491
    },
    {
        "content": "<p>also there were some previous concerns that seemed to have been ignored</p>",
        "id": 214617943,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738499
    },
    {
        "content": "<p>that I'd like to see them acknowledge before we spend too much time on it</p>",
        "id": 214617962,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738509
    },
    {
        "content": "<p>I'll reach out to the author and see where they are on it</p>",
        "id": 214617970,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738514
    },
    {
        "content": "<p>posix errors can be useful if there's a lot of inter C-library communication happening</p>",
        "id": 214617973,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1603738517
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"116155\">@Jake Goulding</span> has had input</p>",
        "id": 214617995,
        "sender_full_name": "oliver",
        "timestamp": 1603738530
    },
    {
        "content": "<p>Unsure if that is really all that common though</p>",
        "id": 214618006,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1603738533
    },
    {
        "content": "<p>i think the question was whether or not it needed to be part of std</p>",
        "id": 214618014,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738539
    },
    {
        "content": "<p>alright</p>",
        "id": 214618132,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738578
    },
    {
        "content": "<p>fwiw to me it's one of those decisions made 40 years ago impacting how things are done today</p>",
        "id": 214618152,
        "sender_full_name": "oliver",
        "timestamp": 1603738586
    },
    {
        "content": "<p>and I don't think there's anything else to bubble up to the libs team</p>",
        "id": 214618154,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738587
    },
    {
        "content": "<p>4 minutes left</p>",
        "id": 214618208,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738615
    },
    {
        "content": "<p>does anyone have anything else they feel we should cover or shall we call it here?</p>",
        "id": 214618234,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738628
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/Meeting.202020-10-26/near/214617185\">said</a>:</p>\n<blockquote>\n<p>(all gated behind edition 2021 to avoid breaking existing code)</p>\n</blockquote>\n<p>is there anything to discuss re. 2021?</p>",
        "id": 214618250,
        "sender_full_name": "oliver",
        "timestamp": 1603738639
    },
    {
        "content": "<p>My thoughts on the POSIX errors are the same as what's been expressed on the RFC thread: they're useful, but not something I think we need in <code>std</code> itself. An external library seems fine</p>",
        "id": 214618271,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603738650
    },
    {
        "content": "<p>oh thats a good point</p>",
        "id": 214618276,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738653
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"204346\">@Ashley Mannix</span> is there a deadline for introducing breaking changes for the 2021 edition</p>",
        "id": 214618375,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738700
    },
    {
        "content": "<p>or any upcoming meetings to discuss breaking changes?</p>",
        "id": 214618387,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738706
    },
    {
        "content": "<p>if so I think we should make sure that <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> 's breaking changes for the panic plan RFC get included in those discussions</p>",
        "id": 214618419,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738726
    },
    {
        "content": "<p>well, no reservations are needed actually right/</p>",
        "id": 214618452,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738741
    },
    {
        "content": "<p>That's a good question! I'm sure there will be, but maybe not until the normal cut-off for whatever release marks the new edition, which will be sometime next year probably</p>",
        "id": 214618489,
        "sender_full_name": "Ashley Mannix",
        "timestamp": 1603738761
    },
    {
        "content": "<p>oh but the changes has to be implemented before the edition is stabilized</p>",
        "id": 214618497,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738765
    },
    {
        "content": "<p>sounds good</p>",
        "id": 214618520,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738781
    },
    {
        "content": "<p>1 minute left, I say we call it here</p>",
        "id": 214618544,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738794
    },
    {
        "content": "<p>thanks everyone for coming</p>",
        "id": 214618557,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738803
    },
    {
        "content": "<p>thanks for leading the meeting!</p>",
        "id": 214618631,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1603738826
    },
    {
        "content": "<p>my pleasure ^_^</p>",
        "id": 214618640,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603738832
    },
    {
        "content": "<p>is there a hackmd for the next meeting agenda?</p>",
        "id": 215616787,
        "sender_full_name": "oliver",
        "timestamp": 1604511896
    },
    {
        "content": "<p>yes, the link is on the project-error-handling repos readme</p>",
        "id": 215616986,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1604511995
    }
]