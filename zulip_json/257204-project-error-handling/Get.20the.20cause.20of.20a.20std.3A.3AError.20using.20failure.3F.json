[
    {
        "content": "<p>Reposting <a href=\"https://discord.com/channels/273534239310479360/274215136414400513/770684800096665640\">https://discord.com/channels/273534239310479360/274215136414400513/770684800096665640</a>:</p>\n<p>I'm using <code>failure</code> (I can't switch for reasons, it's a large code base) and I'm also using <code>tera</code>, which uses <code>std::error::Error</code>, not <code>failure::Fail</code>. When I try to look at the causes of an error, it always stops at the outer-most error instead of showing the root cause:</p>\n<div class=\"codehilite\"><pre><span></span><code>Error: failed while loading tera templates in &quot;templates&quot;\n\nCaused by:\n    Failed to parse &quot;/home/joshua/src/rust/docs.rs/templates/header/package_navigation.html&quot;\n</code></pre></div>\n\n\n<p>Is there a way to get this to show the root cause without switching away from failure?<br>\nThis is the error itself, so I know it exists, it's just not being shown: <a href=\"https://docs.rs/tera/1.5.0/src/tera/tera.rs.html#187-L188\">https://docs.rs/tera/1.5.0/src/tera/tera.rs.html#187-L188</a><br>\nand I'm calling <code>iter_causes</code>: <a href=\"https://docs.rs/failure/0.1.8/failure/struct.Error.html#method.iter_causes\">https://docs.rs/failure/0.1.8/failure/struct.Error.html#method.iter_causes</a></p>",
        "id": 214725887,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603816236
    },
    {
        "content": "<p>I think there was a transition plan for failure</p>",
        "id": 214729581,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603817705
    },
    {
        "content": "<p>we could theoretically drive that if someone wanted to do the implementation</p>",
        "id": 214729594,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603817713
    },
    {
        "content": "<p>It was sketched out in the original fix the error trait RFC</p>",
        "id": 214729626,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603817728
    },
    {
        "content": "<p>I'd be interested in that</p>",
        "id": 214729634,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603817733
    },
    {
        "content": "<p>it's not feasible for us to switch from failure until <code>thiserror</code> has backtraces on stable</p>",
        "id": 214729663,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603817745
    },
    {
        "content": "<p>if you don't mind writing your own eyre handler then I can walk you through getting back traces on stable</p>",
        "id": 214730112,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603817925
    },
    {
        "content": "<p>Not sure which one would be easier honestly</p>",
        "id": 214730159,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603817940
    },
    {
        "content": "<p>if you have to switch off a failure to get it anyways then this might not actually be easier than making a breaking change in failure itself</p>",
        "id": 214730189,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1603817953
    },
    {
        "content": "<p>Ooh that would be really cool</p>",
        "id": 214732339,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603818776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210267\">@Nemo157</span> did most of the work to switch <a href=\"http://docs.rs\">docs.rs</a> but got stuck on backtraces</p>",
        "id": 214732393,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603818797
    }
]