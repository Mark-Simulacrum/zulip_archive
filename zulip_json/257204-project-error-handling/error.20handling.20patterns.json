[
    {
        "content": "<p>Re-posting from <a class=\"stream\" data-stream-id=\"122652\" href=\"/#narrow/stream/122652-new-members\">#new members</a> as advised:<br>\n<span class=\"user-mention silent\" data-user-id=\"392988\">Gus Gutoski</span> <a href=\"#narrow/stream/122652-new-members/topic/error.20handling.20patterns/near/227998384\">said</a>:</p>\n<blockquote>\n<p>Hi folks.  I'm new to Rust.  Building a cryptography library.  Looking for the right error handling pattern.  Found this zulip via <a class=\"stream\" data-stream-id=\"257204\" href=\"/#narrow/stream/257204-project-error-handling\">#project-error-handling</a> .  It seems there's contention on how best to handle errors in Rust.  I found this article interesting <a href=\"https://sled.rs/errors\">https://sled.rs/errors</a> .  Would someone be so kind as to refer me to the state-of-the-art on error handling patterns?  Thank you.</p>\n</blockquote>",
        "id": 228004185,
        "sender_full_name": "Gus Gutoski",
        "timestamp": 1614377852
    },
    {
        "content": "<p>hello, happy to help</p>",
        "id": 228004278,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614377886
    },
    {
        "content": "<p>rn we're still in early days working on a book documenting many of the best practices</p>",
        "id": 228004317,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614377904
    },
    {
        "content": "<p>I did give a talk at rustconf that went over many of the basics <a href=\"https://www.youtube.com/watch?v=rAF8mLI0naQ\">https://www.youtube.com/watch?v=rAF8mLI0naQ</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"rAF8mLI0naQ\" href=\"https://www.youtube.com/watch?v=rAF8mLI0naQ\"><img src=\"https://i.ytimg.com/vi/rAF8mLI0naQ/default.jpg\"></a></div>",
        "id": 228004394,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614377953
    },
    {
        "content": "<p>The book sounds interesting.</p>",
        "id": 228004407,
        "sender_full_name": "Gus Gutoski",
        "timestamp": 1614377960
    },
    {
        "content": "<p>thanks for the link!  I'll definitely take a look</p>",
        "id": 228004449,
        "sender_full_name": "Gus Gutoski",
        "timestamp": 1614377983
    },
    {
        "content": "<p>my pleasure, if you have any additional questions lmk</p>",
        "id": 228004547,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614378011
    },
    {
        "content": "<p>Thanks for the video.  It's information dense with lots for me to chew on.  Do you have an opinion on the nested Result pattern described in the sled article?  <a href=\"https://sled.rs/errors\">https://sled.rs/errors</a></p>",
        "id": 228022402,
        "sender_full_name": "Gus Gutoski",
        "timestamp": 1614389510
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"392988\">Gus Gutoski</span> <a href=\"#narrow/stream/257204-project-error-handling/topic/error.20handling.20patterns/near/228022402\">said</a>:</p>\n<blockquote>\n<p>Thanks for the video.  It's information dense with lots for me to chew on.  Do you have an opinion on the nested Result pattern described in the sled article?  <a href=\"https://sled.rs/errors\">https://sled.rs/errors</a></p>\n</blockquote>\n<p>I like it a lot</p>",
        "id": 228023292,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390160
    },
    {
        "content": "<p>nested results are waaay better than 3 state result equivalents</p>",
        "id": 228023300,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390174
    },
    {
        "content": "<p>something like</p>",
        "id": 228023306,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390186
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">enum</span> <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">E</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">E</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Fail</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 228023319,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390194
    },
    {
        "content": "<p>which is how <code>nom</code> has handled non-recoverable parser errors in the past</p>",
        "id": 228023351,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390241
    },
    {
        "content": "<p>not sure if they've updated that since</p>",
        "id": 228023391,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390246
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nb\">Err</span><span class=\"o\">&lt;</span><span class=\"n\">E</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Incomplete</span><span class=\"p\">(</span><span class=\"n\">Needed</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"n\">E</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Failure</span><span class=\"p\">(</span><span class=\"n\">E</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 228023413,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390264
    },
    {
        "content": "<p>looks like no</p>",
        "id": 228023414,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390266
    },
    {
        "content": "<p>hmm</p>",
        "id": 228023438,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390305
    },
    {
        "content": "<p>actually no</p>",
        "id": 228023441,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390306
    },
    {
        "content": "<p>this is an error type</p>",
        "id": 228023447,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390308
    },
    {
        "content": "<p>im clearly misremembering things</p>",
        "id": 228023460,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1614390312
    }
]