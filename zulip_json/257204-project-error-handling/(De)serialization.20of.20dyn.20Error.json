[
    {
        "content": "<p>For a Spark-like application (or really any distributed application), how would you handle ser/deser of dyn Error? Is this a fundamental limitation of Rust error handling?</p>",
        "id": 210688340,
        "sender_full_name": "Jason Smith",
        "timestamp": 1600640717
    },
    {
        "content": "<p>it's not really fundamental but right now the error trait only exposes a small amount of context about the underlying error types</p>",
        "id": 210689054,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600641928
    },
    {
        "content": "<p>so you can put msgs and debug fmts and source errors in it but you lose the type info</p>",
        "id": 210689101,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600641965
    },
    {
        "content": "<p>I think you might be able to grab a type id</p>",
        "id": 210689108,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600641972
    },
    {
        "content": "<p>this seems unrelated to api stability tho so maybe we need to split this into a new thread</p>",
        "id": 210689120,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600641994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"344334\">@Jason Smith</span> <a href=\"https://stackoverflow.com/a/50026869/155423\">How to implement <code>serde::Serialize</code> for a boxed trait object?</a> and <a href=\"https://stackoverflow.com/q/42392935/155423\">How do I deserialize into trait, not a concrete type?</a></p>",
        "id": 210691425,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1600646045
    },
    {
        "content": "<p>I should really revive my errtools crate where I implemented serialization and deserialization for dyn errors already</p>",
        "id": 210691982,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600647073
    },
    {
        "content": "<p>and an ill advised version of SNAFUs context fn that is stand alone</p>",
        "id": 210691994,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1600647101
    }
]