[
    {
        "content": "<p>Has there been any talk about allowing the Try (<code>?</code>) operator in a destructure position like this?</p>\n<div class=\"codehilite\"><pre><span></span><code>iter.inspect(|(_, thing)?|  { ... })\n</code></pre></div>\n<p>This could be quite handy when working with result-yielding iterators.</p>",
        "id": 231564508,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1616545476
    },
    {
        "content": "<p>(Maybe there is a better place to ask this?)</p>",
        "id": 231564529,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1616545494
    },
    {
        "content": "<p>not that I know of</p>",
        "id": 231564532,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1616545494
    },
    {
        "content": "<p>this is a langs team issue though, try operator and block is explicitly out of scope for this project group</p>",
        "id": 231564582,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1616545534
    },
    {
        "content": "<p>Got it, should I move this to <code>t-lang</code>?</p>",
        "id": 231564613,
        "sender_full_name": "Jeremiah Senkpiel",
        "timestamp": 1616545554
    },
    {
        "content": "<p>yea, that would probably be the best way to move this forward</p>",
        "id": 231564663,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1616545573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"319552\">@Jeremiah Senkpiel</span> I haven't seen any such proposals floated, even speculatively.</p>",
        "id": 231587019,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1616564905
    },
    {
        "content": "<p>The only version of this I've seen proposed was in the context of <code>for x? in iterator_of_results</code>.</p>\n<p>The inspect one seems surprising to me since I'm not sure what type signature it's expected to provide.  The <code>for</code> version was something like desugaring <code>for x? in ... {</code> to <code>for x in ... { let x = x?;</code> (IIRC), but I'm not sure how to do that in a <code>-&gt; ()</code> method like <code>inspect</code>.</p>",
        "id": 232051497,
        "sender_full_name": "scottmcm",
        "timestamp": 1616807138
    }
]