[
    {
        "content": "<p>I have kicked off crater (<a href=\"https://github.com/rust-lang/rust/issues/79501\">https://github.com/rust-lang/rust/issues/79501</a>).</p>\n<p>I also pinged Steve about blog post, we should be good there. cc <span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> would be great to get release notes a bit earlier this time around due to holidays, but I don't think it's super critical.</p>",
        "id": 218163605,
        "sender_full_name": "simulacrum",
        "timestamp": 1606568647
    },
    {
        "content": "<p>Yeah I’m going have a pr up this week.</p>",
        "id": 218169468,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1606578557
    },
    {
        "content": "<p>crater has finished but I do not know that I can find the time to triage it</p>",
        "id": 219473715,
        "sender_full_name": "simulacrum",
        "timestamp": 1607608361
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2907\">@T-release</span> would someone be up for doing that? or at least starting (you can tell me which report you stopped or so)</p>",
        "id": 219473740,
        "sender_full_name": "simulacrum",
        "timestamp": 1607608378
    },
    {
        "content": "<p>1.49 regressions:</p>\n<ul>\n<li>\n<p>rustdoc runs indented documentation immediately after a header as a doctest <a href=\"https://github.com/rust-lang/rust/issues/79911\">#79911</a><br>\n    * won't fix, waiting on relnote inclusion. only affects few crates and we intentionally want to break those cases because they may be unintentionally skipped tests.</p>\n</li>\n<li>\n<p>reached recursion limit while instantiating <a href=\"https://github.com/rust-lang/rust/issues/79909\">#79909</a><br>\n    * won't fix. should affect very few crates, and largely just those that set recursion_limit. Fix should be a matter of bumping that limit higher (which is compatible with many versions of Rust, not new feature). Arguably just means that recursion is not covered by stability guarantee.</p>\n</li>\n<li>\n<p>macro_rules unexpected tokens <a href=\"https://github.com/rust-lang/rust/issues/79908\">#79908</a><br>\n    * fix in progress, r+d</p>\n</li>\n<li>\n<p>trait bound no longer inferred for associated type <a href=\"https://github.com/rust-lang/rust/issues/79904\">#79904</a><br>\n    * unclear - potentially just standard inference failure.<br>\n    * left comment asking for clarification</p>\n</li>\n<li>\n<p>unexpected unsized tail ICE <a href=\"https://github.com/rust-lang/rust/issues/79902\">#79902</a><br>\n    * fix in progress, not yet approved</p>\n</li>\n<li>\n<p>rustc nightly hangs and leaks memory <a href=\"https://github.com/rust-lang/rust/issues/79714\">#79714</a><br>\n    * error -&gt; hang, so not really a break. unlikely to get fixed in time I suspect.</p>\n</li>\n<li>\n<p>No error reported when a generic parameter doesn't meet the requirement of an associated type <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a> <br>\n    * sound and fine, just exposes new behavior on stable unintentionally.<br>\n    * lang has not yet arrived at conclusion (and won't)<br>\n    * fix also seems unlikely</p>\n</li>\n<li>\n<p>missing_fragment_specifier hard error <a href=\"https://github.com/rust-lang/rust/issues/76605\">#76605</a> <br>\n    * will definitely get fixed (Mark can probably figure it out)<br>\n    * fix is not available yet</p>\n</li>\n</ul>",
        "id": 220421744,
        "sender_full_name": "simulacrum",
        "timestamp": 1608321792
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2907\">@T-release</span> that's my report for this cycle</p>",
        "id": 220421776,
        "sender_full_name": "simulacrum",
        "timestamp": 1608321812
    },
    {
        "content": "<p>79904, 79714, 78893 are not likely to be fixed I think. The rest seem likely.</p>",
        "id": 220421900,
        "sender_full_name": "simulacrum",
        "timestamp": 1608321866
    },
    {
        "content": "<blockquote>\n<ul>\n<li>macro_rules unexpected tokens <a href=\"https://github.com/rust-lang/rust/issues/79908\">#79908</a><ul>\n<li>fix in progress, r+d</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>Fix is on master now; should be in the next nightly; <span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> re-opened issue to track beta backport.</p>",
        "id": 220422463,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608322181
    },
    {
        "content": "<p>Sorry, only just reading this and the meeting discussion now. There are two possibilities that came to mind that I think we could take if we’re not happy with the state of the release.</p>\n<ol>\n<li>It seems like we we know the PR that caused a lot of the issues (<a href=\"https://github.com/rust-lang/rust/issues/73905\">#73905</a>), we could cut a new beta from just before that was merged and release that? The release wouldn’t have everything but it could give a more stable release. Though I’m unsure if doing that would be more work than it’s worth.</li>\n<li>We release as normal, but we include those regressions in relnotes and the blog post, stating that we simply did not have the time to fix them in time due to holidays, and maybe commit to having a patch release in January, as it seems there are fixes for most of the issues, they just might not be ready in time. I think people will be more amenable if we’re honest and upfront about their presence in the release, why they haven’t been fixed, and what we’re doing about them.</li>\n</ol>",
        "id": 220424078,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1608323109
    },
    {
        "content": "<ol start=\"3\">\n<li>Instead of a patch release, delay the release until most of the issues are fixed.</li>\n</ol>\n<p>(not strongly in favor of this, but it is an alterrnative)</p>",
        "id": 220424256,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608323202
    },
    {
        "content": "<p>Well I think if we’re talking about a delay we need to be specific about the timeframe of that delay. Because we’ve built an expectation around every six weeks, and moving the release time will have a butterfly effect on other parts, such as when we can land the edition, and I know I have tooling that’s dependent on the current release schedule that would have to change for example. I think if we were to delay it my preference would be to delay by six weeks, essentially just not having the release at all, and rolling it up into what would have been 1.50. It’s probably the most drastic but would have the least knock on effects from changing when a release happens.</p>",
        "id": 220425414,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1608323938
    },
    {
        "content": "<p>It’s also not like we haven’t had buggy releases before. See 1.27, 1.29, 1.34, and 1.45, all of which had multiple patch releases. Which is why I think it would be better to say “hey we know this one is buggy, and if you wait we’ll have a patch release” ahead of time rather than delay the entire release outright, and have to say that anyway.</p>",
        "id": 220426078,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1608324366
    },
    {
        "content": "<p>heh, I actually started rust with 1.34</p>",
        "id": 220426157,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608324426
    },
    {
        "content": "<p>let me go read those patch notes</p>",
        "id": 220426165,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608324430
    },
    {
        "content": "<p>( Now I feel old. I started with 1.3, not 1.3x plane 1.3. and I know that there are lots of pep that were already involved for a long time when I started that are still involved. )</p>",
        "id": 220426980,
        "sender_full_name": "Eh2406",
        "timestamp": 1608324917
    },
    {
        "content": "<p>well, I think it's pretty uncommon to go from 'learning rust' to 'contributing to the language' in less than a year <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> so no need to feel old</p>",
        "id": 220427156,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1608325031
    },
    {
        "content": "<p>I don't think we will want to say that it is buggy and still release, I would rather skip (beyond normal compatibility notes)</p>",
        "id": 220430286,
        "sender_full_name": "simulacrum",
        "timestamp": 1608326984
    },
    {
        "content": "<p>ok 79904 is also won't fix</p>",
        "id": 220431014,
        "sender_full_name": "simulacrum",
        "timestamp": 1608327472
    },
    {
        "content": "<p>(seems like fallout from soundness fix)</p>",
        "id": 220431067,
        "sender_full_name": "simulacrum",
        "timestamp": 1608327488
    },
    {
        "content": "<p>So what’s the list of actual bugs that are in contention for whether we skip? It seems like <a href=\"https://github.com/rust-lang/rust/issues/79908\">#79908</a>, <a href=\"https://github.com/rust-lang/rust/issues/79902\">#79902</a>, <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a>, and <a href=\"https://github.com/rust-lang/rust/issues/76605\">#76605</a>. We also should set a date for when we commit to release or skip, probably Tuesday or Wednesday?</p>",
        "id": 220442850,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1608336878
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79714\">#79714</a> and <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a> are the only two I'm expecting to not close at this point I think (either through fixing or won't fix status)</p>",
        "id": 220446872,
        "sender_full_name": "simulacrum",
        "timestamp": 1608342062
    },
    {
        "content": "<p>79808 and 79902 both have pending PRs which look backport friendly</p>",
        "id": 220446941,
        "sender_full_name": "simulacrum",
        "timestamp": 1608342156
    },
    {
        "content": "<p>76605 is likely fixable with .5-1 hours of work, roughly, on my part at least - so also expecting a fix there.</p>",
        "id": 220446966,
        "sender_full_name": "simulacrum",
        "timestamp": 1608342230
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79808\">#79808</a> <a href=\"https://github.com/rust-lang/rust/issues/79902\">#79902</a> <a href=\"https://github.com/rust-lang/rust/issues/76605\">#76605</a></p>",
        "id": 220447102,
        "sender_full_name": "oliver",
        "timestamp": 1608342452
    },
    {
        "content": "<p>^for my own reference</p>",
        "id": 220447109,
        "sender_full_name": "oliver",
        "timestamp": 1608342466
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79808\">#79808</a> is a closed issue, <a href=\"https://github.com/rust-lang/rust/issues/79814\">#79814</a> merged</p>",
        "id": 220447182,
        "sender_full_name": "oliver",
        "timestamp": 1608342589
    },
    {
        "content": "<p>/me reads <a href=\"https://forge.rust-lang.org/release/index.html\">https://forge.rust-lang.org/release/index.html</a></p>",
        "id": 220447508,
        "sender_full_name": "oliver",
        "timestamp": 1608343001
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/79714\">#79714</a> and <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a> are the only two I'm expecting to not close at this point I think (either through fixing or won't fix status)</p>\n</blockquote>\n<p>I guess these don’t seem like quite enough to delay a release to me, though it would be nice to have a firmer resolution on <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a></p>",
        "id": 220487424,
        "sender_full_name": "tmandry",
        "timestamp": 1608412189
    },
    {
        "content": "<p><del>the worst case scenario in <a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a> is someone writes a trait in the new release that doesn’t compile in a further release. but this can only happen if they never actually use the trait.</del></p>",
        "id": 220487494,
        "sender_full_name": "tmandry",
        "timestamp": 1608412303
    },
    {
        "content": "<p>actually, that’s not quite right</p>",
        "id": 220487555,
        "sender_full_name": "tmandry",
        "timestamp": 1608412400
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/rust-lang/rust/issues/78893\">#78893</a> accidentally introduced implied bounds in certain situations. This means you don't have to supply bounds for associated types if you aren't using them yourself.</p>\n</blockquote>",
        "id": 220487840,
        "sender_full_name": "tmandry",
        "timestamp": 1608412920
    },
    {
        "content": "<p>is an interesting framing</p>",
        "id": 220487883,
        "sender_full_name": "tmandry",
        "timestamp": 1608412929
    },
    {
        "content": "<blockquote>\n<p>This feels similar in spirit to a monomorphisation-time error, i.e. there is a problem, but you're not going to know about it until you try to use it.</p>\n</blockquote>\n<p>is another</p>",
        "id": 220487904,
        "sender_full_name": "tmandry",
        "timestamp": 1608413020
    },
    {
        "content": "<p>from <a href=\"#narrow/stream/213817-t-lang/topic/.2378893.20no.20err.20when.20genrc.20param.20doesnt.20meet.20req.20of.20assoc.20type\">https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/.2378893.20no.20err.20when.20genrc.20param.20doesnt.20meet.20req.20of.20assoc.20type</a></p>",
        "id": 220487920,
        "sender_full_name": "tmandry",
        "timestamp": 1608413042
    },
    {
        "content": "<p>it looks like the state is “this addition might be okay, but we don’t want to introduce it accidentally, but also haven’t found a way to ‘fix’ it yet”</p>",
        "id": 220488050,
        "sender_full_name": "tmandry",
        "timestamp": 1608413230
    },
    {
        "content": "<p>it would be convenient if the problem was just that we accidentally stabilized part of the (approved) implied bounds RFC because it now just falls out of the implementation</p>",
        "id": 220488210,
        "sender_full_name": "tmandry",
        "timestamp": 1608413479
    },
    {
        "content": "<p>okay yeah, after looking again (not on my phone this time)</p>",
        "id": 220491708,
        "sender_full_name": "tmandry",
        "timestamp": 1608418599
    },
    {
        "content": "<p>I’m convinced that this is not a big issue and probably a desirable change, in the long run at least</p>",
        "id": 220491712,
        "sender_full_name": "tmandry",
        "timestamp": 1608418615
    },
    {
        "content": "<p>it seems fully within the spirit of implied bounds (or at least, its chalk implementation, I’m less familiar with the original RFC)</p>",
        "id": 220491728,
        "sender_full_name": "tmandry",
        "timestamp": 1608418670
    },
    {
        "content": "<p>though I wish the lang team would say this and not me :)</p>",
        "id": 220491771,
        "sender_full_name": "tmandry",
        "timestamp": 1608418685
    },
    {
        "content": "<p>I think I recall Niko also saying similar things, but being unsure that we want to make the change \"by accident\"</p>",
        "id": 220497457,
        "sender_full_name": "simulacrum",
        "timestamp": 1608429068
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E49.20release/near/220427156\">said</a>:</p>\n<blockquote>\n<p>well, I think it's pretty uncommon to go from 'learning rust' to 'contributing to the language' in less than a year <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> so no need to feel old</p>\n</blockquote>\n<p>I started contributing 3 months in <span aria-label=\"embarrassed\" class=\"emoji emoji-1f633\" role=\"img\" title=\"embarrassed\">:embarrassed:</span></p>",
        "id": 220503669,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608441133
    },
    {
        "content": "<p>promoting beta to stable</p>",
        "id": 221084638,
        "sender_full_name": "simulacrum",
        "timestamp": 1609183158
    },
    {
        "content": "<p>PR r+ed</p>",
        "id": 221087462,
        "sender_full_name": "simulacrum",
        "timestamp": 1609185838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> FYI the PR failed because of GitHub runner pool just not existing, so we'll hopefully have a release tomorrow morning</p>",
        "id": 221105150,
        "sender_full_name": "simulacrum",
        "timestamp": 1609205916
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/80450\">#80450</a></p>",
        "id": 221105156,
        "sender_full_name": "simulacrum",
        "timestamp": 1609205930
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> yes we have!</p>",
        "id": 221124576,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609237294
    },
    {
        "content": "<p>doing the dev-static release</p>",
        "id": 221124579,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609237304
    },
    {
        "content": "<p>kicked off dev-stable</p>",
        "id": 221124811,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609237556
    },
    {
        "content": "<p>pre-release is out!</p>",
        "id": 221126236,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609239346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> posting on inside-rust</p>",
        "id": 221128769,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609242291
    },
    {
        "content": "<p>ok blog post out</p>",
        "id": 221128955,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609242586
    },
    {
        "content": "<p>promoting master to beta</p>",
        "id": 221145696,
        "sender_full_name": "simulacrum",
        "timestamp": 1609259041
    },
    {
        "content": "<p>done</p>",
        "id": 221147028,
        "sender_full_name": "simulacrum",
        "timestamp": 1609260091
    },
    {
        "content": "<p>Planning to kick release off in roughly an hour.</p>",
        "id": 221289604,
        "sender_full_name": "simulacrum",
        "timestamp": 1609420697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> need any help from me?</p>",
        "id": 221290000,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609421199
    },
    {
        "content": "<p>I think it'd be great if you can be more or less around in case the python script (first time I think I'm using it?) glitches</p>",
        "id": 221290021,
        "sender_full_name": "simulacrum",
        "timestamp": 1609421242
    },
    {
        "content": "<p>And a double check that blog is good to go would be amazing</p>",
        "id": 221290046,
        "sender_full_name": "simulacrum",
        "timestamp": 1609421273
    },
    {
        "content": "<p>uh</p>",
        "id": 221290173,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609421402
    },
    {
        "content": "<p>steve never applied the feedback he got</p>",
        "id": 221290211,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609421409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> taking a stab at updating the blog post right now</p>",
        "id": 221290334,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609421576
    },
    {
        "content": "<p>okay going to get this kicked off - <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> is blog good to go?</p>",
        "id": 221292122,
        "sender_full_name": "simulacrum",
        "timestamp": 1609423638
    },
    {
        "content": "<p>nope</p>",
        "id": 221292127,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609423643
    },
    {
        "content": "<p>should I wait for release or can we do it in ~30 minutes?</p>",
        "id": 221292219,
        "sender_full_name": "simulacrum",
        "timestamp": 1609423727
    },
    {
        "content": "<p>so</p>",
        "id": 221292233,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609423758
    },
    {
        "content": "<p>I just pushed the commit reworking the aarch64 section, and I'd like eyes on it: <a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/745/commits/cfe92da21b16143466df6bbbad58c664331f50a8\">https://github.com/rust-lang/blog.rust-lang.org/pull/745/commits/cfe92da21b16143466df6bbbad58c664331f50a8</a></p>",
        "id": 221292239,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609423772
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"116011\">@Steve Klabnik</span></p>",
        "id": 221292255,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609423793
    },
    {
        "content": "<p>there was also a request in the PR to mention the bind by move/ref changes, but I didn't have the time to start drafting it yet</p>",
        "id": 221292310,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609423826
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E49.20release/near/221292239\">said</a>:</p>\n<blockquote>\n<p>I just pushed the commit reworking the aarch64 section, and I'd like eyes on it: <a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/745/commits/cfe92da21b16143466df6bbbad58c664331f50a8\">https://github.com/rust-lang/blog.rust-lang.org/pull/745/commits/cfe92da21b16143466df6bbbad58c664331f50a8</a></p>\n</blockquote>\n<p>taking a look</p>",
        "id": 221292324,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609423855
    },
    {
        "content": "<p>if we don't want to include the latter I'd say we can give a brief look to my changes and start the process</p>",
        "id": 221292325,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609423856
    },
    {
        "content": "<p>I do not want to include it, I don't think it's an important change</p>",
        "id": 221292347,
        "sender_full_name": "simulacrum",
        "timestamp": 1609423882
    },
    {
        "content": "<p>i.e. it allows code that should have just worked</p>",
        "id": 221292352,
        "sender_full_name": "simulacrum",
        "timestamp": 1609423893
    },
    {
        "content": "<p>I feel like I would have definitely used less ! but seems ok</p>",
        "id": 221292410,
        "sender_full_name": "simulacrum",
        "timestamp": 1609423926
    },
    {
        "content": "<p>will kick off release</p>",
        "id": 221292417,
        "sender_full_name": "simulacrum",
        "timestamp": 1609423936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E49.20release/near/221292410\">said</a>:</p>\n<blockquote>\n<p>I feel like I would have definitely used less ! but seems ok</p>\n</blockquote>\n<p>I can try trimming them down a bit</p>",
        "id": 221292437,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609423964
    },
    {
        "content": "<p>left a couple comments, I don't want to make <em>too</em> many changes since release is happening soon</p>",
        "id": 221292452,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609423989
    },
    {
        "content": "<p>I think calling out the specific tiers is good</p>",
        "id": 221292526,
        "sender_full_name": "simulacrum",
        "timestamp": 1609424075
    },
    {
        "content": "<p>yeah my goal with that is to provide context for those who are not going to click every link</p>",
        "id": 221292569,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424133
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/745/commits/08a6b5f9641d0c1357c81a1bd25de9f91627df44\">reduced the number of <code>!</code>s</a></p>",
        "id": 221292638,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424193
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> if you're wondering about all those \"pruned miri and rust-analyzer\", it's because those are nightly-only</p>",
        "id": 221292962,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424550
    },
    {
        "content": "<p>yeah I glanced through but seemed right</p>",
        "id": 221292976,
        "sender_full_name": "simulacrum",
        "timestamp": 1609424566
    },
    {
        "content": "<p>the blog post should be ready</p>",
        "id": 221292986,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424585
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E49.20release/near/221292239\">said</a>:</p>\n<blockquote>\n<p>I just pushed the commit reworking the aarch64 section, and I'd like eyes on it: <a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/745/commits/cfe92da21b16143466df6bbbad58c664331f50a8\">https://github.com/rust-lang/blog.rust-lang.org/pull/745/commits/cfe92da21b16143466df6bbbad58c664331f50a8</a></p>\n</blockquote>\n<p>One comment - you say 'ARM' in it a few times, but nominally we should say 'Arm' these days.  They rebranded to no longer be the 'Advanced RISC Machines' acronym.</p>",
        "id": 221292988,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1609424587
    },
    {
        "content": "<p>good point</p>",
        "id": 221293016,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424625
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223910\">@Daniel Silverstone</span> hmm, I'm seeing ARM for the arch all around tho</p>",
        "id": 221293092,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424675
    },
    {
        "content": "<p>I'm sure someone will yell at us either way :)</p>",
        "id": 221293118,
        "sender_full_name": "simulacrum",
        "timestamp": 1609424705
    },
    {
        "content": "<p>Make it Aarch64 and everybody will be happy ^^</p>",
        "id": 221293130,
        "sender_full_name": "nagisa",
        "timestamp": 1609424717
    },
    {
        "content": "<p>is it Aarch64 or AArch64 though?</p>",
        "id": 221293140,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424729
    },
    {
        "content": "<p>AAarch64, sorry.</p>",
        "id": 221293146,
        "sender_full_name": "nagisa",
        "timestamp": 1609424740
    },
    {
        "content": "<p>idea: let's randomize on page visit</p>",
        "id": 221293158,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424761
    },
    {
        "content": "<p>that way we'll make <em>everyone</em> unhappy</p>",
        "id": 221293201,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424769
    },
    {
        "content": "<p>it's more fair</p>",
        "id": 221293202,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609424771
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E49.20release/near/221293092\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"223910\">Daniel Silverstone</span> hmm, I'm seeing ARM for the arch all around tho</p>\n</blockquote>\n<p>Architectures such as 'ARMv8' are capitalised.  The company (and thus the processor architecture family) should be 'Arm' in my opinion, like the company name (though that is 'arm' if using their logotype); and the architectures, as mentioned, are things like AArch64.</p>\n<p>I asked an ex-Arm employee friend of mine which to use and he usefully said 'Yes' so I figure it doesn't matter enough to change it <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 221293446,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1609425052
    },
    {
        "content": "<p>thanks ran into trouble on the new bors squash feature, pushed a fix</p>",
        "id": 221293473,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425074
    },
    {
        "content": "<blockquote>\n<p>We're happy to announce the release of Rust 1.49.0, featuring Tier 1 support for 64-bit ARM on Linux, Tier 2 support for Apple M1 and Windows on ARM, improved output capture during tests, and more! Check out the highlights on our blog:</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> proof-read for the tweet?</p>",
        "id": 221293661,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609425244
    },
    {
        "content": "<p>seems fine</p>",
        "id": 221293667,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425264
    },
    {
        "content": "<p>also, where do you plan to share the post yourself and where should I?</p>",
        "id": 221293698,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609425310
    },
    {
        "content": "<p>you can, but not merged yet</p>",
        "id": 221293701,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425318
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 221293915,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609425581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> are we good to go on blog?</p>",
        "id": 221293922,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425586
    },
    {
        "content": "<p>yep</p>",
        "id": 221293925,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609425589
    },
    {
        "content": "<p>merged</p>",
        "id": 221293976,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425607
    },
    {
        "content": "<p>tagging cargo</p>",
        "id": 221294106,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425737
    },
    {
        "content": "<p>ok posted it all around</p>",
        "id": 221294111,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609425751
    },
    {
        "content": "<p>hm cargo tagging is always confusing me</p>",
        "id": 221294135,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425779
    },
    {
        "content": "<p>should I tag with 0.50?</p>",
        "id": 221294137,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425786
    },
    {
        "content": "<p>there's not a .48 tag...</p>",
        "id": 221294143,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425792
    },
    {
        "content": "<p>we should just switch to rust versioning for tags on cargo too</p>",
        "id": 221294167,
        "sender_full_name": "simulacrum",
        "timestamp": 1609425827
    },
    {
        "content": "<p>yeah 0.50.0</p>",
        "id": 221294173,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1609425834
    },
    {
        "content": "<p>well published cargo, let's see if we got it right this cycle...</p>",
        "id": 221294332,
        "sender_full_name": "simulacrum",
        "timestamp": 1609426016
    },
    {
        "content": "<p>preparing a round of beta backports and de-devifying beta</p>",
        "id": 221294358,
        "sender_full_name": "simulacrum",
        "timestamp": 1609426067
    },
    {
        "content": "<p>Done. I think we're good to go!</p>",
        "id": 221295111,
        "sender_full_name": "simulacrum",
        "timestamp": 1609426904
    },
    {
        "content": "<p>what does 'de-devifying beta' mean? <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221295183,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609426955
    },
    {
        "content": "<p>Switching beta to bootstrap from real stable and not dev-static stable.</p>",
        "id": 221295240,
        "sender_full_name": "simulacrum",
        "timestamp": 1609427017
    },
    {
        "content": "<p>yay this means I can nominate for beta without it being confusing <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 221295355,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609427111
    }
]