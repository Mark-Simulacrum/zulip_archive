[
    {
        "content": "<p>I'm thinking how to implement safeguards to prevent that from happening again, it's not the first time we (I) did this :/</p>",
        "id": 217117406,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605695310
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E48.20release/near/217117406\">said</a>:</p>\n<blockquote>\n<p>I'm thinking how to implement safeguards to prevent that from happening again, it's not the first time we (I) did this <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>\n</blockquote>\n<p>Can these kinds of promotion PRs be generated by tooling rather than humans perhaps?</p>",
        "id": 217117466,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1605695373
    },
    {
        "content": "<p>I guess</p>",
        "id": 217117485,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605695388
    },
    {
        "content": "<p>but like, it also happened for example with beta backports</p>",
        "id": 217117498,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605695400
    },
    {
        "content": "<p>and similar stuff that can't be reasonably implemented manually</p>",
        "id": 217117522,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605695404
    },
    {
        "content": "<p>Does bors have support for looking at keywords in the PR title and matching that to landing branch? (or could it perhaps?)</p>",
        "id": 217117864,
        "sender_full_name": "Daniel Silverstone",
        "timestamp": 1605695598
    },
    {
        "content": "<p>ok I have a plan, I'm going to prepare a PR in a couple hours</p>",
        "id": 217118261,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605695801
    },
    {
        "content": "<p>we can move the channel to a file triagebot can easily read, like <code>src/ci/channel</code></p>",
        "id": 217118395,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605695887
    },
    {
        "content": "<p>then every time a commit is pushed to a PR triagebot can query the file, and if it's different than the branch you're trying to land the PR to the bot will call the GitHub API to automatically change the target branch and ping you about it</p>",
        "id": 217118479,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605695951
    },
    {
        "content": "<p>Yeah I've done this too</p>",
        "id": 217121143,
        "sender_full_name": "simulacrum",
        "timestamp": 1605697789
    },
    {
        "content": "<p>With the new version bumping strategy we can just use version file I think? Cc <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span></p>",
        "id": 217121231,
        "sender_full_name": "simulacrum",
        "timestamp": 1605697839
    },
    {
        "content": "<p>It should be unique</p>",
        "id": 217121242,
        "sender_full_name": "simulacrum",
        "timestamp": 1605697848
    },
    {
        "content": "<p>I think having the explicit channel file would be more easy and generic to implement</p>",
        "id": 217125022,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605700592
    },
    {
        "content": "<p>i.e. I was thinking of something like this for <code>triagebot.toml</code>:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[enforce-branch-name]</span>\n<span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"s\">\"src/ci/channel\"</span>\n<span class=\"n\">map-file-to-branch</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">nightly</span> <span class=\"o\">=</span> <span class=\"s\">\"master\"</span><span class=\"p\">,</span>\n    <span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"s\">\"beta\"</span><span class=\"p\">,</span>\n    <span class=\"n\">stable</span> <span class=\"o\">=</span> <span class=\"s\">\"stable\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 217125041,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605700612
    },
    {
        "content": "<p>that way it's easier to reuse the tool across repositories <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 217125152,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605700689
    },
    {
        "content": "<p>Seems fine, yeah</p>",
        "id": 217125172,
        "sender_full_name": "simulacrum",
        "timestamp": 1605700716
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> btw, are you sure <a href=\"https://github.com/rust-lang/triagebot/blob/44cb05d7de54c876cd11db5b4c1eb3fdfe3011f6/src/github.rs#L254\">https://github.com/rust-lang/triagebot/blob/44cb05d7de54c876cd11db5b4c1eb3fdfe3011f6/src/github.rs#L254</a> is ever getting filled?</p>",
        "id": 217128446,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605702852
    },
    {
        "content": "<p>that would be <code>pull_request.pull_request</code> in the webhook payload</p>",
        "id": 217128463,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605702863
    },
    {
        "content": "<p>which I don't think github sends</p>",
        "id": 217128470,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605702868
    },
    {
        "content": "<p>No? That should be a top level field I think?</p>",
        "id": 217128697,
        "sender_full_name": "simulacrum",
        "timestamp": 1605703023
    },
    {
        "content": "<p>I think we use it somewhere, not at a computer so can't grep though</p>",
        "id": 217128718,
        "sender_full_name": "simulacrum",
        "timestamp": 1605703047
    },
    {
        "content": "<p>nope, <code>Issue</code> is inside <code>IssuesEvent</code> <a href=\"https://github.com/rust-lang/triagebot/blob/44cb05d7de54c876cd11db5b4c1eb3fdfe3011f6/src/github.rs#L706-L710\">https://github.com/rust-lang/triagebot/blob/44cb05d7de54c876cd11db5b4c1eb3fdfe3011f6/src/github.rs#L706-L710</a></p>",
        "id": 217129257,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605703456
    },
    {
        "content": "<p>Hm odd</p>",
        "id": 217129277,
        "sender_full_name": "simulacrum",
        "timestamp": 1605703477
    },
    {
        "content": "<p>We might have custom logic somewhere</p>",
        "id": 217129292,
        "sender_full_name": "simulacrum",
        "timestamp": 1605703493
    },
    {
        "content": "<p>But it's possible it just doesn't work</p>",
        "id": 217129306,
        "sender_full_name": "simulacrum",
        "timestamp": 1605703502
    },
    {
        "content": "<p>I think we do use it successfully though</p>",
        "id": 217129320,
        "sender_full_name": "simulacrum",
        "timestamp": 1605703511
    },
    {
        "content": "<p>wooo beta landed!</p>",
        "id": 217168887,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605720607
    },
    {
        "content": "<p>manually kicked off a beta release</p>",
        "id": 217171230,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605721635
    },
    {
        "content": "<p>ok the beta is out</p>",
        "id": 217181718,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605726394
    }
]