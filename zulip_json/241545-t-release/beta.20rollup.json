[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Are you planning to do a beta rollup?  <a href=\"https://github.com/rust-lang/rust/issues/81762\">#81762</a> needs to be backported to get the branch building again.  I can make a PR if you want, or if you want to do a bunch together, that's fine, just let me know if I can help at all.</p>",
        "id": 225254295,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612492738
    },
    {
        "content": "<p>It'd be great for someone to do a beta rollup</p>",
        "id": 225254313,
        "sender_full_name": "simulacrum",
        "timestamp": 1612492775
    },
    {
        "content": "<p>Just everything that is labeled beta-accepted?  There's only one that I see.</p>",
        "id": 225254382,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612492815
    },
    {
        "content": "<p>Should be both beta-accepted and beta-nominated... Let me look</p>",
        "id": 225254395,
        "sender_full_name": "simulacrum",
        "timestamp": 1612492840
    },
    {
        "content": "<p>I see 6, and a few that should probably be added <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+label%3Abeta-nominated+label%3Abeta-accepted\">https://github.com/rust-lang/rust/pulls?q=is%3Apr+label%3Abeta-nominated+label%3Abeta-accepted</a></p>",
        "id": 225254493,
        "sender_full_name": "simulacrum",
        "timestamp": 1612492963
    },
    {
        "content": "<p>oh, duh, I was looking at only open PRs</p>",
        "id": 225254513,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612492988
    },
    {
        "content": "<p>Updated labels on a few</p>",
        "id": 225254708,
        "sender_full_name": "simulacrum",
        "timestamp": 1612493206
    },
    {
        "content": "<p>ok, I will try to collect all the ones in that query plus 81762</p>",
        "id": 225254733,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612493245
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> What's the process for a PR that doesn't backport cleanly?  Do you normally just figure out what needs to change, or do you ask the author to do it?</p>\n<p><a href=\"https://github.com/rust-lang/rust/issues/81337\">#81337</a> is not entirely obvious to me how to make it work since it relies on other changes.</p>",
        "id": 225256449,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612495054
    },
    {
        "content": "<p>Hm. Usually I try to see if I can fix things but if it seems hard or I have low confidence, I'll ping the author.</p>",
        "id": 225256520,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495107
    },
    {
        "content": "<p>Is there a chance we just need to backport more PRs?</p>",
        "id": 225256526,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495116
    },
    {
        "content": "<p>Not sure, I can try to investigate more, I'm not too familiar with how this stuff works, there might be a trivial workaround.</p>",
        "id": 225256557,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612495160
    },
    {
        "content": "<p>(I tried just ignoring the second <code>tokens</code> parameter, but it caused an ICE.)</p>",
        "id": 225256575,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612495187
    },
    {
        "content": "<p>Yeah I'm also not too familiar.</p>",
        "id": 225256740,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495351
    },
    {
        "content": "<p>I would ping author and reviewer and request guidance, we're pretty short on time.</p>",
        "id": 225256771,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> Do you happen to know what the resolution to <a href=\"https://github.com/rust-lang/rust/pull/81212#issuecomment-763841107\">https://github.com/rust-lang/rust/pull/81212#issuecomment-763841107</a> was?  I'm encountering the same error.</p>",
        "id": 225303858,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612534986
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> That was fixed by <a href=\"https://github.com/rust-lang/rust/pull/81229\">https://github.com/rust-lang/rust/pull/81229</a></p>",
        "id": 225304133,
        "sender_full_name": "Mara",
        "timestamp": 1612535113
    },
    {
        "content": "<p>so that one should be backported as well, i suppose</p>",
        "id": 225304150,
        "sender_full_name": "Mara",
        "timestamp": 1612535123
    },
    {
        "content": "<p>ok, thanks!</p>",
        "id": 225305433,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612535695
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> ! thanks for taking care of this</p>",
        "id": 225320392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612542102
    },
    {
        "content": "<p>I have time now to look into whether PR <a href=\"https://github.com/rust-lang/rust/issues/81257\">#81257</a> backports cleanly</p>",
        "id": 225320435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612542120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I tested it last night. There were a few conflicts, but none seemed too difficult to resolve.</p>",
        "id": 225322196,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612542926
    },
    {
        "content": "<p>By the way, how <em>is</em> one supposed to run the test suite against a beta build? When I try <code>x.py test</code> I get (after the tidy error code check) the message \"./x.py fmt is not supported on this channel\" and it exits.</p>",
        "id": 225357703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612559213
    },
    {
        "content": "<p>try <code>--exclude tidy</code> maybe?</p>",
        "id": 225357777,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612559256
    },
    {
        "content": "<p>do you all set <code>rustfmt = \"&lt;path&gt;\"</code> in the config.toml file?</p>",
        "id": 225357794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612559271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/241545-t-release/topic/beta.20rollup/near/225357777\">said</a>:</p>\n<blockquote>\n<p>try <code>--exclude tidy</code> maybe?</p>\n</blockquote>\n<p>this seems to work</p>",
        "id": 225357939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612559345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> set <code>channel = \"beta\"</code> in config.toml to fix the tidy thing (rustfmt is disabled on beta)</p>",
        "id": 225358542,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612559694
    },
    {
        "content": "<p>btw, I added your PR to the rollup, and all the tests pass on linux, so hopefully everything will pass.  </p>\n<p>I never really thought about the amount of work that goes into these beta backports, it's a bit more than I was expecting.  It might be nice to automate it somehow.</p>",
        "id": 225358780,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612559814
    },
    {
        "content": "<p>Also, what is the way today to get a rust-enabled version of <code>lldb</code>? Will that be built as part of the LLVM tool suite if one chooses <code>llvm-tools = true</code> ? (I am sad that it seems hard to figure this out.)</p>",
        "id": 225361491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> coincidentally, I am investigating an lldb issue right now.</p>",
        "id": 225361539,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561243
    },
    {
        "content": "<p>AFAIK, <code>lldb</code> is not tested on CI, and there currently isn't a way to build it in-tree (AFAIK).  I'm still looking, though.</p>",
        "id": 225361600,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561293
    },
    {
        "content": "<p>There is a test that is broken with lldb 10 for about the past month or two, and it has been annoying enough that I'm looking at it now.</p>",
        "id": 225361658,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561322
    },
    {
        "content": "<p>do we know what people do in practice to acquire it? Build it (via LLVM) themselves?</p>",
        "id": 225361675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561324
    },
    {
        "content": "<p>I run <code>apt install lldb</code></p>",
        "id": 225361691,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561338
    },
    {
        "content": "<p>okay, so the upstream one <em>is</em> rust-enabled at least?</p>",
        "id": 225361710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561354
    },
    {
        "content": "<p>it's like gdb iirc in that we have our custom python script for it which should get auto-discovered</p>",
        "id": 225361736,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561380
    },
    {
        "content": "<p>^^   Yea, there's a python script you have to load.</p>",
        "id": 225361766,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561402
    },
    {
        "content": "<p>right, that adds the extensions for printing collections \"nicely\"</p>",
        "id": 225361773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561407
    },
    {
        "content": "<p>but I seem to recall upstream lldb dropping built-in support for Rust, though I don't know exactly what that means</p>",
        "id": 225361780,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561418
    },
    {
        "content": "<p>I don't think anyone maintains a fork with it added back in</p>",
        "id": 225361792,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561427
    },
    {
        "content": "<p>There is a stub in upstream lldb for rust, but AFAIK it doesn't do anything.</p>",
        "id": 225361889,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Do you happen to know the status of running lldb on CI?  It seems a little odd that there are a bunch of lldb tests, but they aren't being run.</p>",
        "id": 225361967,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561530
    },
    {
        "content": "<p>I have no clue, sorry</p>",
        "id": 225362205,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561680
    },
    {
        "content": "<p>I think it's just on apple?</p>",
        "id": 225362245,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561685
    },
    {
        "content": "<p>oh, that makes sense.  The one test that is broken is disabled on apple.</p>",
        "id": 225362362,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561763
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/241545-t-release/topic/beta.20rollup/near/225358542\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> set <code>channel = \"beta\"</code> in config.toml to fix the tidy thing (rustfmt is disabled on beta)</p>\n</blockquote>\n<p>This seemed to resolve the tidy thing, but then caused issues elsewhere for me. It seems like it calls <code>git rev-log</code> with certain expectations about the tags or branch names when you have <code>channel = beta</code>, and I haven't figured out how to override them.</p>",
        "id": 225363330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612562319
    },
    {
        "content": "<p>oh well, thank you <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> for taking care of my beta backport!</p>",
        "id": 225363372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612562354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Looks like the test failed on msvc: <a href=\"https://github.com/rust-lang/rust/pull/81774#issuecomment-774313799\">https://github.com/rust-lang/rust/pull/81774#issuecomment-774313799</a></p>\n<p>Does that error mean anything to you?  Are any of those tests platform-specific?</p>",
        "id": 225366191,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612563801
    },
    {
        "content": "<p>Oh, does this test not work on linux?  <code>/bin/sh: 1: Bad substitution</code>  I seem to recall you discussing this earlier.</p>",
        "id": 225369774,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612566231
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> I think we can delete/ignore that test on beta, coverage is still unstable anyway</p>",
        "id": 225369883,
        "sender_full_name": "simulacrum",
        "timestamp": 1612566309
    },
    {
        "content": "<p>(unless I'm wrong and coverage is not unstable, but I think that's right)</p>",
        "id": 225369902,
        "sender_full_name": "simulacrum",
        "timestamp": 1612566319
    },
    {
        "content": "<p>Yes ignore test on beta</p>",
        "id": 225370657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612566888
    },
    {
        "content": "<p>(The test inadvertently depends on details on how GNU make decides what shell to use that ends up being platform dependent)</p>",
        "id": 225370709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612566943
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> Might be good to add <a href=\"https://github.com/rust-lang/rust/pull/81729\">https://github.com/rust-lang/rust/pull/81729</a> to your backports PR as well, instead of haivng it separate.</p>",
        "id": 225371047,
        "sender_full_name": "Mara",
        "timestamp": 1612567223
    },
    {
        "content": "<p>Sure, I'll grab it.</p>",
        "id": 225371076,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612567258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> If you want to include <a href=\"https://github.com/rust-lang/rust/issues/88786\">#88786</a> in <a href=\"https://github.com/rust-lang/rust/issues/88783\">#88783</a>, feel free to cancel it, it just started.</p>",
        "id": 252661481,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631207571
    },
    {
        "content": "<p>sorry I didn't see you already had that up</p>",
        "id": 252661530,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631207593
    },
    {
        "content": "<p>eh, more hassle I think for me, no worries</p>",
        "id": 252661550,
        "sender_full_name": "simulacrum",
        "timestamp": 1631207601
    },
    {
        "content": "<p>feel free to push to my branch if you'd like to bundle them</p>",
        "id": 252661565,
        "sender_full_name": "simulacrum",
        "timestamp": 1631207608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Does the <code>__umulh</code> error look familiar to you?</p>",
        "id": 252670872,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631211414
    },
    {
        "content": "<p>No, seems new</p>",
        "id": 252670997,
        "sender_full_name": "simulacrum",
        "timestamp": 1631211468
    },
    {
        "content": "<p>Maybe an update to the windows runners environment?</p>",
        "id": 252671017,
        "sender_full_name": "simulacrum",
        "timestamp": 1631211478
    },
    {
        "content": "<p>Looks like it was updated yesterday.</p>",
        "id": 252671753,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631211729
    },
    {
        "content": "<p>but nothing obvious looks like a culprit</p>",
        "id": 252671821,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631211759
    },
    {
        "content": "<p>hm</p>",
        "id": 252671870,
        "sender_full_name": "simulacrum",
        "timestamp": 1631211775
    },
    {
        "content": "<p>I likely won't have time to investigate too much today/tomorrow, unfortunately</p>",
        "id": 252671900,
        "sender_full_name": "simulacrum",
        "timestamp": 1631211785
    },
    {
        "content": "<p>i'll keep looking</p>\n<p>Oh, they updated windows 10 sdk</p>",
        "id": 252671956,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631211808
    },
    {
        "content": "<p>Microsoft.VisualStudio.Component.Windows10SDK.20348</p>",
        "id": 252671961,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631211809
    },
    {
        "content": "<p>we can probably rustbot ping windows on the PR</p>",
        "id": 252672091,
        "sender_full_name": "simulacrum",
        "timestamp": 1631211852
    },
    {
        "content": "<p>Oh, it looks like all PRs are failing, I didn't notice.</p>",
        "id": 252672401,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631211993
    },
    {
        "content": "<p>Should probably close the tree.</p>",
        "id": 252672414,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631211998
    },
    {
        "content": "<p>haha:</p>\n<p>Clang/LLVM for Windows v11 targeting ARM64 is not compatible with the latest winnt.h</p>\n<p>As a workaround, use the previous version of the Windows 10 SDK (build 19041), or clang/LLVM for Windows v10 when targeting ARM64 platforms</p>",
        "id": 252677437,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631214063
    },
    {
        "content": "<p>Don't suppose anyone happens do know how to control which version of the SDK is used?</p>",
        "id": 252677525,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631214102
    },
    {
        "content": "<p>Hm. Not sure we have control of that.</p>",
        "id": 252677957,
        "sender_full_name": "simulacrum",
        "timestamp": 1631214274
    },
    {
        "content": "<p>Are we using clang for windows 11 though?</p>",
        "id": 252678236,
        "sender_full_name": "simulacrum",
        "timestamp": 1631214378
    },
    {
        "content": "<p>I'd... not expect us to be doing that</p>",
        "id": 252678251,
        "sender_full_name": "simulacrum",
        "timestamp": 1631214386
    },
    {
        "content": "<p>I don't know what \"LLVM for Windows v11\" means specifically.</p>",
        "id": 252678566,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631214524
    },
    {
        "content": "<p>For reference, I'm reading the release notes here: <a href=\"https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/#serverdev\">https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/#serverdev</a></p>",
        "id": 252679015,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631214717
    },
    {
        "content": "<p>So I'm thinking that it may need to pass the SDK version to <code>vcvarsall.bat</code> if we were to go the route of downgrading.</p>",
        "id": 252679821,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631215074
    },
    {
        "content": "<p>Is there a better place to coordinate the fix for this, and other people to possibly rope in?</p>",
        "id": 252690250,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631219446
    },
    {
        "content": "<p>I'm able to reproduce the NatVis error locally.</p>",
        "id": 252690268,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631219458
    },
    {
        "content": "<p>I'm going to write up a summary issue, but otherwise I'll probably not be able to investigate more.  Hopefully we can find a way to fix it without using vcvarsall, since running that is awkward.</p>",
        "id": 252699553,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631223173
    },
    {
        "content": "<p>also looking into it now, but not sure if i can be of much help</p>",
        "id": 252699790,
        "sender_full_name": "Mara",
        "timestamp": 1631223284
    },
    {
        "content": "<p>(staring at <a href=\"https://github.com/rust-lang/rust/blob/497ee321af3b8496eaccd7af7b437f18bab81abf/library/profiler_builtins/build.rs#L37-L45\">these lines</a> now)</p>",
        "id": 252699837,
        "sender_full_name": "Mara",
        "timestamp": 1631223304
    },
    {
        "content": "<p>(and <a href=\"https://bugs.llvm.org/show_bug.cgi?id=51128\">this bug report</a>)</p>",
        "id": 252700708,
        "sender_full_name": "Mara",
        "timestamp": 1631223734
    },
    {
        "content": "<p>Posted <a href=\"https://github.com/rust-lang/rust/issues/88796\">#88796</a> with a summary.</p>",
        "id": 252701252,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631223983
    },
    {
        "content": "<p>oh, the pipeline links have expired</p>",
        "id": 252701865,
        "sender_full_name": "Mara",
        "timestamp": 1631224292
    },
    {
        "content": "<p>oh, that's silly</p>",
        "id": 252702055,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631224391
    },
    {
        "content": "<p>Randomly, I was looking at some Appveyor runs for rust from <em>3 years ago</em> and the logs were still there, and were like 10x faster than GitHub's UI.</p>",
        "id": 252702109,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631224426
    },
    {
        "content": "<p>this looks helpful: &lt;<a href=\"https://github.com/slurps-mad-rips/VCVars\">https://github.com/slurps-mad-rips/VCVars</a>&gt;</p>",
        "id": 252703380,
        "sender_full_name": "Mara",
        "timestamp": 1631225118
    },
    {
        "content": "<p>I installed Windows 10 SDK 20348, but for the life of me I can't get it to fail to build aarch64 with profilers enabled.  I'm using msvc build tools instead of Visual Studio Enterprise, so I'm not sure if that is a significant difference.</p>",
        "id": 252703930,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631225421
    },
    {
        "content": "<p>trying some stuff here: <a href=\"https://github.com/rust-lang/rust/pull/88797\">https://github.com/rust-lang/rust/pull/88797</a></p>",
        "id": 252709577,
        "sender_full_name": "Mara",
        "timestamp": 1631228793
    },
    {
        "content": "<p>(now with help from @slurps-mad-rips)</p>",
        "id": 252709618,
        "sender_full_name": "Mara",
        "timestamp": 1631228831
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> Any luck?</p>\n<p>I took a quick peek at your experiment.  I <em>think</em> you only need to set the host as amd64, and leave the target unset (or maybe set to amd64).  Those affect the defaults, and cmake and other tools will set the target when needed.  At least, that's how it worked in my local testing building for arm64.</p>",
        "id": 252716441,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631234145
    },
    {
        "content": "<p>izzy is saying that we can just use cmake to do this for us instead of using vcvars</p>",
        "id": 252716504,
        "sender_full_name": "Mara",
        "timestamp": 1631234181
    },
    {
        "content": "<p>Ah, that would be great.</p>",
        "id": 252716516,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631234195
    },
    {
        "content": "<p>the problem is that it first builds a compiler for x64, and then builds a compiler for arm64. if we use vcvars, only one of them will work. (or we'll have to switch in the middle)</p>",
        "id": 252716999,
        "sender_full_name": "Mara",
        "timestamp": 1631234589
    },
    {
        "content": "<p>but cmake already supports <code>-D CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION</code> for this</p>",
        "id": 252717009,
        "sender_full_name": "Mara",
        "timestamp": 1631234600
    },
    {
        "content": "<p>so trying that out now</p>",
        "id": 252717010,
        "sender_full_name": "Mara",
        "timestamp": 1631234603
    },
    {
        "content": "<p>Oh, that sounds perfect, I hadn't seen that option.  Hopefully it works.</p>\n<p>I would also mention that the debugger tests will still probably fail, and I would suggest just disabling them and open a new issue to track fixing it.</p>",
        "id": 252717143,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631234740
    },
    {
        "content": "<p>yeah, not going to try to solve that for now</p>",
        "id": 252717264,
        "sender_full_name": "Mara",
        "timestamp": 1631234858
    },
    {
        "content": "<p>once this part passes i'm going to sleep</p>",
        "id": 252717270,
        "sender_full_name": "Mara",
        "timestamp": 1631234863
    },
    {
        "content": "<p>almost 3 am here <span aria-label=\"zzz\" class=\"emoji emoji-1f4a4\" role=\"img\" title=\"zzz\">:zzz:</span></p>",
        "id": 252717275,
        "sender_full_name": "Mara",
        "timestamp": 1631234869
    },
    {
        "content": "<p>oh bleh. <code>rust/library/profiler_builtins</code> is not built by cmake. but directly with the <code>cc</code> crate.</p>",
        "id": 252717386,
        "sender_full_name": "Mara",
        "timestamp": 1631234987
    },
    {
        "content": "<p>okay, i give up for now. time to sleep</p>",
        "id": 252717513,
        "sender_full_name": "Mara",
        "timestamp": 1631235105
    },
    {
        "content": "<p>I did a little more poking and understand the situation a little better. profiler_builtins is using LLVM 12.0.0 clang-cl, and AFAIK, <code>clang-cl</code> does not honor the WindowsSDKVersion environment variables set by vcvarsall. Newer versions support setting it in flags via <a href=\"https://reviews.llvm.org/D95472\">https://reviews.llvm.org/D95472</a> (which also nicely added some FIXMEs to add env var support). I'm a bit at a loss on how to set the appropriate paths with 12.0. If I am reading it correctly, it only looks at the registry entry. Maybe it should try setting the registry entry?</p>",
        "id": 252732745,
        "sender_full_name": "Eric Huss",
        "timestamp": 1631249875
    },
    {
        "content": "<p>oh, ugh, yeah. that's a problem. there's almost no way to influence that version of clang-cl to pick another sdk. :/</p>",
        "id": 252762303,
        "sender_full_name": "Mara",
        "timestamp": 1631268524
    },
    {
        "content": "<p>i can't find a way to make it stop using it. even if i <code>rm -rf</code> that sdk, it still tries to use it and just fails to find include files.<br>\nso now i'm just removing that directory, and renaming the old sdk to the new name so it'll be used instead. super ugly, but it might work :/</p>",
        "id": 252763094,
        "sender_full_name": "Mara",
        "timestamp": 1631268994
    },
    {
        "content": "<p>Does using the <code>_LINK_</code> environment variable to set a <code>/LIBPATH</code> work?</p>",
        "id": 252764898,
        "sender_full_name": "Chris Denton",
        "timestamp": 1631269904
    },
    {
        "content": "<p>Oh wait, it's the header files as well? Sorry catching up.</p>",
        "id": 252765247,
        "sender_full_name": "Chris Denton",
        "timestamp": 1631270067
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"310399\">Mara</span> to <a class=\"stream-topic\" data-stream-id=\"242791\" href=\"/#narrow/stream/242791-t-infra/topic/windows.20ci.20borked\">#t-infra &gt; windows ci borked</a></p>",
        "id": 252774938,
        "sender_full_name": "Notification Bot",
        "timestamp": 1631275214
    },
    {
        "content": "<p>Just FYI, I plan to do a beta rollup today with the cargo fixes, and I'll pick up the other approved beta PRs</p>",
        "id": 269291599,
        "sender_full_name": "Eric Huss",
        "timestamp": 1643131523
    },
    {
        "content": "<p>thanks!</p>",
        "id": 269297301,
        "sender_full_name": "simulacrum",
        "timestamp": 1643133698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> fyi, <a href=\"https://github.com/rust-lang/rust/pull/93302\">https://github.com/rust-lang/rust/pull/93302</a> if you're cherry picking things</p>",
        "id": 269301684,
        "sender_full_name": "simulacrum",
        "timestamp": 1643135469
    },
    {
        "content": "<p>thanks. I assume since notriddle is on the team that is tacit approval for the backport.</p>",
        "id": 269301957,
        "sender_full_name": "Eric Huss",
        "timestamp": 1643135580
    },
    {
        "content": "<p>my sense is rustdoc doesn't have too much formal process, but I'd assume it's good enough, yeah</p>",
        "id": 269302207,
        "sender_full_name": "simulacrum",
        "timestamp": 1643135657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Do you want to backport <a href=\"https://github.com/rust-lang/rust/issues/92983\">#92983</a> in case they do another brownout in the future?</p>",
        "id": 269427536,
        "sender_full_name": "Eric Huss",
        "timestamp": 1643210298
    },
    {
        "content": "<p>Yes, that's a good idea. beta-accepted/nominated it.</p>",
        "id": 269427582,
        "sender_full_name": "simulacrum",
        "timestamp": 1643210319
    }
]