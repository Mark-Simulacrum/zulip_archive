[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Are you planning to do a beta rollup?  <a href=\"https://github.com/rust-lang/rust/issues/81762\">#81762</a> needs to be backported to get the branch building again.  I can make a PR if you want, or if you want to do a bunch together, that's fine, just let me know if I can help at all.</p>",
        "id": 225254295,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612492738
    },
    {
        "content": "<p>It'd be great for someone to do a beta rollup</p>",
        "id": 225254313,
        "sender_full_name": "simulacrum",
        "timestamp": 1612492775
    },
    {
        "content": "<p>Just everything that is labeled beta-accepted?  There's only one that I see.</p>",
        "id": 225254382,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612492815
    },
    {
        "content": "<p>Should be both beta-accepted and beta-nominated... Let me look</p>",
        "id": 225254395,
        "sender_full_name": "simulacrum",
        "timestamp": 1612492840
    },
    {
        "content": "<p>I see 6, and a few that should probably be added <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+label%3Abeta-nominated+label%3Abeta-accepted\">https://github.com/rust-lang/rust/pulls?q=is%3Apr+label%3Abeta-nominated+label%3Abeta-accepted</a></p>",
        "id": 225254493,
        "sender_full_name": "simulacrum",
        "timestamp": 1612492963
    },
    {
        "content": "<p>oh, duh, I was looking at only open PRs</p>",
        "id": 225254513,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612492988
    },
    {
        "content": "<p>Updated labels on a few</p>",
        "id": 225254708,
        "sender_full_name": "simulacrum",
        "timestamp": 1612493206
    },
    {
        "content": "<p>ok, I will try to collect all the ones in that query plus 81762</p>",
        "id": 225254733,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612493245
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> What's the process for a PR that doesn't backport cleanly?  Do you normally just figure out what needs to change, or do you ask the author to do it?</p>\n<p><a href=\"https://github.com/rust-lang/rust/issues/81337\">#81337</a> is not entirely obvious to me how to make it work since it relies on other changes.</p>",
        "id": 225256449,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612495054
    },
    {
        "content": "<p>Hm. Usually I try to see if I can fix things but if it seems hard or I have low confidence, I'll ping the author.</p>",
        "id": 225256520,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495107
    },
    {
        "content": "<p>Is there a chance we just need to backport more PRs?</p>",
        "id": 225256526,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495116
    },
    {
        "content": "<p>Not sure, I can try to investigate more, I'm not too familiar with how this stuff works, there might be a trivial workaround.</p>",
        "id": 225256557,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612495160
    },
    {
        "content": "<p>(I tried just ignoring the second <code>tokens</code> parameter, but it caused an ICE.)</p>",
        "id": 225256575,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612495187
    },
    {
        "content": "<p>Yeah I'm also not too familiar.</p>",
        "id": 225256740,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495351
    },
    {
        "content": "<p>I would ping author and reviewer and request guidance, we're pretty short on time.</p>",
        "id": 225256771,
        "sender_full_name": "simulacrum",
        "timestamp": 1612495409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> Do you happen to know what the resolution to <a href=\"https://github.com/rust-lang/rust/pull/81212#issuecomment-763841107\">https://github.com/rust-lang/rust/pull/81212#issuecomment-763841107</a> was?  I'm encountering the same error.</p>",
        "id": 225303858,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612534986
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> That was fixed by <a href=\"https://github.com/rust-lang/rust/pull/81229\">https://github.com/rust-lang/rust/pull/81229</a></p>",
        "id": 225304133,
        "sender_full_name": "Mara",
        "timestamp": 1612535113
    },
    {
        "content": "<p>so that one should be backported as well, i suppose</p>",
        "id": 225304150,
        "sender_full_name": "Mara",
        "timestamp": 1612535123
    },
    {
        "content": "<p>ok, thanks!</p>",
        "id": 225305433,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612535695
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> ! thanks for taking care of this</p>",
        "id": 225320392,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612542102
    },
    {
        "content": "<p>I have time now to look into whether PR <a href=\"https://github.com/rust-lang/rust/issues/81257\">#81257</a> backports cleanly</p>",
        "id": 225320435,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612542120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I tested it last night. There were a few conflicts, but none seemed too difficult to resolve.</p>",
        "id": 225322196,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612542926
    },
    {
        "content": "<p>By the way, how <em>is</em> one supposed to run the test suite against a beta build? When I try <code>x.py test</code> I get (after the tidy error code check) the message \"./x.py fmt is not supported on this channel\" and it exits.</p>",
        "id": 225357703,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612559213
    },
    {
        "content": "<p>try <code>--exclude tidy</code> maybe?</p>",
        "id": 225357777,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1612559256
    },
    {
        "content": "<p>do you all set <code>rustfmt = \"&lt;path&gt;\"</code> in the config.toml file?</p>",
        "id": 225357794,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612559271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/241545-t-release/topic/beta.20rollup/near/225357777\">said</a>:</p>\n<blockquote>\n<p>try <code>--exclude tidy</code> maybe?</p>\n</blockquote>\n<p>this seems to work</p>",
        "id": 225357939,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612559345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> set <code>channel = \"beta\"</code> in config.toml to fix the tidy thing (rustfmt is disabled on beta)</p>",
        "id": 225358542,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612559694
    },
    {
        "content": "<p>btw, I added your PR to the rollup, and all the tests pass on linux, so hopefully everything will pass.  </p>\n<p>I never really thought about the amount of work that goes into these beta backports, it's a bit more than I was expecting.  It might be nice to automate it somehow.</p>",
        "id": 225358780,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612559814
    },
    {
        "content": "<p>Also, what is the way today to get a rust-enabled version of <code>lldb</code>? Will that be built as part of the LLVM tool suite if one chooses <code>llvm-tools = true</code> ? (I am sad that it seems hard to figure this out.)</p>",
        "id": 225361491,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> coincidentally, I am investigating an lldb issue right now.</p>",
        "id": 225361539,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561243
    },
    {
        "content": "<p>AFAIK, <code>lldb</code> is not tested on CI, and there currently isn't a way to build it in-tree (AFAIK).  I'm still looking, though.</p>",
        "id": 225361600,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561293
    },
    {
        "content": "<p>There is a test that is broken with lldb 10 for about the past month or two, and it has been annoying enough that I'm looking at it now.</p>",
        "id": 225361658,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561322
    },
    {
        "content": "<p>do we know what people do in practice to acquire it? Build it (via LLVM) themselves?</p>",
        "id": 225361675,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561324
    },
    {
        "content": "<p>I run <code>apt install lldb</code></p>",
        "id": 225361691,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561338
    },
    {
        "content": "<p>okay, so the upstream one <em>is</em> rust-enabled at least?</p>",
        "id": 225361710,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561354
    },
    {
        "content": "<p>it's like gdb iirc in that we have our custom python script for it which should get auto-discovered</p>",
        "id": 225361736,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561380
    },
    {
        "content": "<p>^^   Yea, there's a python script you have to load.</p>",
        "id": 225361766,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561402
    },
    {
        "content": "<p>right, that adds the extensions for printing collections \"nicely\"</p>",
        "id": 225361773,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612561407
    },
    {
        "content": "<p>but I seem to recall upstream lldb dropping built-in support for Rust, though I don't know exactly what that means</p>",
        "id": 225361780,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561418
    },
    {
        "content": "<p>I don't think anyone maintains a fork with it added back in</p>",
        "id": 225361792,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561427
    },
    {
        "content": "<p>There is a stub in upstream lldb for rust, but AFAIK it doesn't do anything.</p>",
        "id": 225361889,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Do you happen to know the status of running lldb on CI?  It seems a little odd that there are a bunch of lldb tests, but they aren't being run.</p>",
        "id": 225361967,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561530
    },
    {
        "content": "<p>I have no clue, sorry</p>",
        "id": 225362205,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561680
    },
    {
        "content": "<p>I think it's just on apple?</p>",
        "id": 225362245,
        "sender_full_name": "simulacrum",
        "timestamp": 1612561685
    },
    {
        "content": "<p>oh, that makes sense.  The one test that is broken is disabled on apple.</p>",
        "id": 225362362,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612561763
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/241545-t-release/topic/beta.20rollup/near/225358542\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> set <code>channel = \"beta\"</code> in config.toml to fix the tidy thing (rustfmt is disabled on beta)</p>\n</blockquote>\n<p>This seemed to resolve the tidy thing, but then caused issues elsewhere for me. It seems like it calls <code>git rev-log</code> with certain expectations about the tags or branch names when you have <code>channel = beta</code>, and I haven't figured out how to override them.</p>",
        "id": 225363330,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612562319
    },
    {
        "content": "<p>oh well, thank you <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> for taking care of my beta backport!</p>",
        "id": 225363372,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612562354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> Looks like the test failed on msvc: <a href=\"https://github.com/rust-lang/rust/pull/81774#issuecomment-774313799\">https://github.com/rust-lang/rust/pull/81774#issuecomment-774313799</a></p>\n<p>Does that error mean anything to you?  Are any of those tests platform-specific?</p>",
        "id": 225366191,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612563801
    },
    {
        "content": "<p>Oh, does this test not work on linux?  <code>/bin/sh: 1: Bad substitution</code>  I seem to recall you discussing this earlier.</p>",
        "id": 225369774,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612566231
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> I think we can delete/ignore that test on beta, coverage is still unstable anyway</p>",
        "id": 225369883,
        "sender_full_name": "simulacrum",
        "timestamp": 1612566309
    },
    {
        "content": "<p>(unless I'm wrong and coverage is not unstable, but I think that's right)</p>",
        "id": 225369902,
        "sender_full_name": "simulacrum",
        "timestamp": 1612566319
    },
    {
        "content": "<p>Yes ignore test on beta</p>",
        "id": 225370657,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612566888
    },
    {
        "content": "<p>(The test inadvertently depends on details on how GNU make decides what shell to use that ends up being platform dependent)</p>",
        "id": 225370709,
        "sender_full_name": "pnkfelix",
        "timestamp": 1612566943
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> Might be good to add <a href=\"https://github.com/rust-lang/rust/pull/81729\">https://github.com/rust-lang/rust/pull/81729</a> to your backports PR as well, instead of haivng it separate.</p>",
        "id": 225371047,
        "sender_full_name": "Mara",
        "timestamp": 1612567223
    },
    {
        "content": "<p>Sure, I'll grab it.</p>",
        "id": 225371076,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612567258
    }
]