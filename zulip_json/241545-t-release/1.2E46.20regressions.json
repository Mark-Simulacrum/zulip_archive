[
    {
        "content": "<p>so, I went through all the regression-from-stable-to-beta currently open</p>",
        "id": 207679348,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598040836
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74420\">#74420</a>: still present, rustc is now dynamically linked to zlib</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/74820\">#74820</a>: still present, libtest panics on armv7 musl qemu</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/75453\">#75453</a>: still present, macro stuff, not sure if it's expected breakage</li>\n</ul>\n<p>-</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/73747\">#73747</a>: backported the fix, didn't close the issue</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/75313\">#75313</a>: backported the fix, didn't close the issue</li>\n</ul>\n<p>-</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/71861\">#71861</a>: not a 1.46 regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/71359\">#71359</a>: not a 1.46 regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/73420\">#73420</a>: not a 1.46 regression</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/70098\">#70098</a>: not a 1.46 regression</li>\n</ul>",
        "id": 207679414,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598040853
    },
    {
        "content": "<p>so we're only at three regressions, one of which affects non-tier-1 platforms</p>",
        "id": 207679613,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598040965
    },
    {
        "content": "<p>still need to look at what the zlib change affects, and if the macro thing was expected breakage or not</p>",
        "id": 207679696,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span></p>",
        "id": 207679701,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041045
    },
    {
        "content": "<p>this is <em>way</em> better than the issue list I saw in the meeting :)</p>",
        "id": 207679718,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041057
    },
    {
        "content": "<p>macro is expected</p>",
        "id": 207679908,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041149
    },
    {
        "content": "<p>see comment from petrochenkov and Aaron1011</p>",
        "id": 207679943,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041168
    },
    {
        "content": "<p>ok yeah pretty-printing is expected breakage</p>",
        "id": 207680023,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041202
    },
    {
        "content": "<p>pretty much every release breaks one or two proc macro crates (presuming no \"cargo update\" is ran, usually syn/quote are patched very quickly, backwards and forwards compatible)</p>",
        "id": 207680043,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041205
    },
    {
        "content": "<p>real quick -- can you confirm my reasoning in <a href=\"https://github.com/rust-lang/rust/issues/75142#issuecomment-678474814\">https://github.com/rust-lang/rust/issues/75142#issuecomment-678474814</a>?</p>",
        "id": 207680082,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041232
    },
    {
        "content": "<p>I also want to kick the first PR in crater queue but ideally without losing all that progress</p>",
        "id": 207680107,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041245
    },
    {
        "content": "<p>sounds good</p>",
        "id": 207680156,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041282
    },
    {
        "content": "<p>let me poke in the crater database</p>",
        "id": 207680165,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041287
    },
    {
        "content": "<p>libtest panicking in qemu only on non-tier-1 platform is basically \"unknown\" -- I personally want to say that qemu having different behavior than hardware is a qemu bug, but who knows</p>",
        "id": 207680185,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041302
    },
    {
        "content": "<p>zlib breakage should be minimal afaik, it basically is just \"one more dep\" and only on linux(?) I think too</p>",
        "id": 207680249,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041325
    },
    {
        "content": "<p>where at least on our CI it was just a matter of apt install zlib1g-dev or something like that</p>",
        "id": 207680280,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ok I should have messed with the database the right way</p>",
        "id": 207680387,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041410
    },
    {
        "content": "<p>/me hopes so too</p>",
        "id": 207680424,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041432
    },
    {
        "content": "<p>marked the current run as \"queued\", so the next time a runner asks for an experiment it will pick up the higher priority run  (yours)</p>",
        "id": 207680429,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041435
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E46.20regressions/near/207680249\">said</a>:</p>\n<blockquote>\n<p>zlib breakage should be minimal afaik, it basically is just \"one more dep\" and only on linux(?) I think too</p>\n</blockquote>\n<p>for compiler users or compiler devs?</p>",
        "id": 207680566,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041509
    },
    {
        "content": "<p>users will need the runtime lib, not -dev</p>",
        "id": 207680593,
        "sender_full_name": "cuviper",
        "timestamp": 1598041533
    },
    {
        "content": "<p>ah, yes</p>",
        "id": 207680598,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041538
    },
    {
        "content": "<p>(I always forget which package provides what)</p>",
        "id": 207680616,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041547
    },
    {
        "content": "<p>but users will almost certainly have it anyway</p>",
        "id": 207680635,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041556
    },
    {
        "content": "<p>yep</p>",
        "id": 207680664,
        "sender_full_name": "cuviper",
        "timestamp": 1598041562
    },
    {
        "content": "<p>zlib is like libc, almost</p>",
        "id": 207680704,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041578
    },
    {
        "content": "<p>hmm ok</p>",
        "id": 207680718,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041584
    },
    {
        "content": "<p>nix had to patch for this, because their libraries are so tightly controlled</p>",
        "id": 207680720,
        "sender_full_name": "cuviper",
        "timestamp": 1598041586
    },
    {
        "content": "<p>but otherwise, zlib is everywhere</p>",
        "id": 207680727,
        "sender_full_name": "cuviper",
        "timestamp": 1598041593
    },
    {
        "content": "<p>so, neither of the two regressions are in the compat notes</p>",
        "id": 207680749,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041606
    },
    {
        "content": "<p>(I guess we should also mention the tier-2 one in addition to the two)</p>",
        "id": 207680767,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041621
    },
    {
        "content": "<p>but I think this is good to be released: it's way less scary than 9 open regression issues, including compiles-to-ICE ones <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 207680892,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041687
    },
    {
        "content": "<p>we still have time to adjust rel notes btw</p>",
        "id": 207680913,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041703
    },
    {
        "content": "<p>(probably should, actually)</p>",
        "id": 207680920,
        "sender_full_name": "simulacrum",
        "timestamp": 1598041709
    },
    {
        "content": "<p>yeah, I was wondering how to say that without putting the burden on myself <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 207680956,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041739
    },
    {
        "content": "<p>I could do it I guess</p>",
        "id": 207680989,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598041757
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> well, aside from me not checking that the beta I specified was right (fixed now, I hope), crater also looks to have decided to not start</p>",
        "id": 207681786,
        "sender_full_name": "simulacrum",
        "timestamp": 1598042210
    },
    {
        "content": "<p>whelp</p>",
        "id": 207683722,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598043261
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> tried doing some other queries</p>",
        "id": 207683870,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598043351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> check crater came back clean, so we're good to go for release this week</p>",
        "id": 207832413,
        "sender_full_name": "simulacrum",
        "timestamp": 1598268823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> I'll do the promotion in a couple hours</p>",
        "id": 207832432,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598268840
    },
    {
        "content": "<p>Don't forget to do the release notes edit for the unresolved regressions</p>",
        "id": 207833076,
        "sender_full_name": "simulacrum",
        "timestamp": 1598269340
    },
    {
        "content": "<p>this new regression was reported a couple days ago: <a href=\"https://github.com/rust-lang/rust/issues/75791\">https://github.com/rust-lang/rust/issues/75791</a></p>",
        "id": 207846078,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598277520
    },
    {
        "content": "<p>seems just way worse diagnostics on a code that failed in 1.45 too</p>",
        "id": 207846159,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598277560
    },
    {
        "content": "<p>won't block the release on this</p>",
        "id": 207846171,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1598277566
    }
]