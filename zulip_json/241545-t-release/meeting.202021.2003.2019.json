[
    {
        "content": "<p>meeting in ~3 minutes!</p>",
        "id": 231041050,
        "sender_full_name": "simulacrum",
        "timestamp": 1616167644
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2907\">@T-release</span> meeting!</p>",
        "id": 231041559,
        "sender_full_name": "simulacrum",
        "timestamp": 1616167839
    },
    {
        "content": "<p><del>ah the timezone mess week <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </del></p>",
        "id": 231041655,
        "sender_full_name": "DPC",
        "timestamp": 1616167872
    },
    {
        "content": "<p>yeah hopefully not catching people by surprise too much - definitely been a fun run-around all week :)</p>",
        "id": 231041908,
        "sender_full_name": "simulacrum",
        "timestamp": 1616167970
    },
    {
        "content": "<p>ok, <span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> wg-triage check in?</p>",
        "id": 231041983,
        "sender_full_name": "simulacrum",
        "timestamp": 1616167997
    },
    {
        "content": "<p>uhm yeah went through the reports, closed some of the stale prs</p>",
        "id": 231042231,
        "sender_full_name": "DPC",
        "timestamp": 1616168089
    },
    {
        "content": "<p>had a meeting af ew weeks back, and <span class=\"user-mention silent\" data-user-id=\"307537\">Camelid</span> was asking if we could have a way in triagebot to auto-unblock prs if it is blocked on another pr or issue that gets resolved (closed/merged)</p>",
        "id": 231042322,
        "sender_full_name": "DPC",
        "timestamp": 1616168133
    },
    {
        "content": "<p>i think they are working on an implementation for that, haven't checked</p>",
        "id": 231042377,
        "sender_full_name": "DPC",
        "timestamp": 1616168161
    },
    {
        "content": "<p>That’s cool. Like <code>@bors blocked by #12345</code>?</p>",
        "id": 231042516,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1616168199
    },
    {
        "content": "<p>sounds good - yeah, seems a bit painful to do, but maybe not too bad. obviously happy to review prs :)</p>",
        "id": 231042518,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168199
    },
    {
        "content": "<p>yep</p>",
        "id": 231042553,
        "sender_full_name": "DPC",
        "timestamp": 1616168218
    },
    {
        "content": "<p>so when <a href=\"https://github.com/rust-lang/rust/issues/12345\">#12345</a> gets merged, it will unblock (change label) of the first PR</p>",
        "id": 231042636,
        "sender_full_name": "DPC",
        "timestamp": 1616168253
    },
    {
        "content": "<p>that should be it</p>",
        "id": 231042704,
        "sender_full_name": "DPC",
        "timestamp": 1616168281
    },
    {
        "content": "<p>great, ok</p>",
        "id": 231042773,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168297
    },
    {
        "content": "<p>we have a release next week</p>",
        "id": 231042791,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> -- I forget, but I think I'm running it?</p>",
        "id": 231042829,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168320
    },
    {
        "content": "<p>(Pietro may not be around today)</p>",
        "id": 231042866,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168335
    },
    {
        "content": "<p>regardless, I think we should be OK - blog post, release notes, regressions all look pretty much in order</p>",
        "id": 231042920,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168359
    },
    {
        "content": "<p>Yep, going to finish the blog post this weekend</p>",
        "id": 231042976,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1616168383
    },
    {
        "content": "<p>ok, sounds great</p>",
        "id": 231043116,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168426
    },
    {
        "content": "<p>ok, <a href=\"https://github.com/rust-lang/rust/issues/82913\">https://github.com/rust-lang/rust/issues/82913</a> is something I just wanted to note in case folks have thoughts, but don't expect to discuss today in-meeting</p>",
        "id": 231043215,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168463
    },
    {
        "content": "<p>mostly so people are aware of existence :)</p>",
        "id": 231043251,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168475
    },
    {
        "content": "<p>it's definitely something I want to think more about</p>",
        "id": 231043259,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168482
    },
    {
        "content": "<p>will we need to revert in the next beta?</p>",
        "id": 231043409,
        "sender_full_name": "cuviper",
        "timestamp": 1616168528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/meeting.202021.2003.2019/near/231042829\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> -- I forget, but I think I'm running it?</p>\n</blockquote>\n<p>yes</p>",
        "id": 231043421,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1616168535
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/241545-t-release/topic/meeting.202021.2003.2019/near/231043409\">said</a>:</p>\n<blockquote>\n<p>will we need to revert in the next beta?</p>\n</blockquote>\n<p>you mean for <a href=\"https://github.com/rust-lang/rust/issues/82913\">#82913</a>?</p>",
        "id": 231043465,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168553
    },
    {
        "content": "<p>yes</p>",
        "id": 231043480,
        "sender_full_name": "cuviper",
        "timestamp": 1616168561
    },
    {
        "content": "<p>yeah probably, we'll figure it out - I'll milestone the pr</p>",
        "id": 231043490,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168564
    },
    {
        "content": "<p>er issue</p>",
        "id": 231043510,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168570
    },
    {
        "content": "<p>ok, I think that's all I had - <span class=\"user-mention\" data-user-id=\"261224\">@triagebot</span> end-meeting</p>",
        "id": 231043542,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168590
    },
    {
        "content": "<p>Does anyone have something to bring up?<br>\nReact with <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span> if you have something to say.<br>\nReact with <span aria-label=\"all good\" class=\"emoji emoji-2705\" role=\"img\" title=\"all good\">:all_good:</span> if you're ready to end the meeting.</p>",
        "id": 231043544,
        "sender_full_name": "triagebot",
        "timestamp": 1616168591
    },
    {
        "content": "<p>ok, looks like that's all - thanks everyone!</p>",
        "id": 231043710,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/meeting.202021.2003.2019/near/231043215\">said</a>:</p>\n<blockquote>\n<p>ok, <a href=\"https://github.com/rust-lang/rust/issues/82913\">https://github.com/rust-lang/rust/issues/82913</a> is something I just wanted to note in case folks have thoughts, but don't expect to discuss today in-meeting</p>\n</blockquote>\n<p>This highlights an interesting limitation of glob imports – they don't take precedence over builtins or the prelude. Isn't this also why adding <code>TryFrom</code> to the prelude would be a breaking change?</p>",
        "id": 231043895,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1616168734
    },
    {
        "content": "<p>On the other hand, if they did take precedence, exporting a macro called <code>assert!</code> from my crate can cause a lot of breakage too</p>",
        "id": 231044041,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1616168777
    },
    {
        "content": "<p>hm, not sure - I think tryfrom had similar but different breakage (around method resolution failure? Not sure it was related to glob imports)</p>",
        "id": 231044066,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168793
    },
    {
        "content": "<p>even without colliding on the trait name itself, new prelude traits can make method calls ambiguous</p>",
        "id": 231044104,
        "sender_full_name": "cuviper",
        "timestamp": 1616168808
    },
    {
        "content": "<p>Perhaps there should be a lint against glob-importing from non-workspace crates?</p>",
        "id": 231044135,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1616168826
    },
    {
        "content": "<p>Ah, I see</p>",
        "id": 231044150,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1616168834
    },
    {
        "content": "<p>in this case the problem was <code>use super::*</code>, even, I think</p>",
        "id": 231044166,
        "sender_full_name": "simulacrum",
        "timestamp": 1616168841
    },
    {
        "content": "<p>neat, rust-analyzer has an assist for expanding glob imports</p>",
        "id": 231044282,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1616168877
    }
]