[
    {
        "content": "<p>Hey all, when I do <code>x.py test</code> on a beta branch, it does a “tidy check” as part of the testing, which then fails because \"x.py fmt is not supported on this channel.” What do people do instead to test beta backports?</p>",
        "id": 230413840,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615840413
    },
    {
        "content": "<p>I don't generally run tests on backports locally (maybe just ui tests)</p>",
        "id": 230413921,
        "sender_full_name": "simulacrum",
        "timestamp": 1615840444
    },
    {
        "content": "<p>but you should be able to e.g. --exclude src/tools/tidy I think?</p>",
        "id": 230413954,
        "sender_full_name": "simulacrum",
        "timestamp": 1615840453
    },
    {
        "content": "<p>we should tell people that in the error message, happy to accept pr - it is a bit broader than might be desired</p>",
        "id": 230414075,
        "sender_full_name": "simulacrum",
        "timestamp": 1615840513
    },
    {
        "content": "<p>(would it be a bad thing to make the <code>x.py test</code> logic auto exclude src/tools/tidy on beta branch? Hmm.)</p>",
        "id": 230414080,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615840515
    },
    {
        "content": "<p>Yeah okay I like just making it a suggestion in the error message</p>",
        "id": 230414118,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615840532
    },
    {
        "content": "<p>That gets the bulk of the desired effect.</p>",
        "id": 230414144,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615840543
    },
    {
        "content": "<p>It's always a conflict between failing if we didn't run something (because you 'maybe didn't want to') vs. warning but continuing</p>",
        "id": 230414170,
        "sender_full_name": "simulacrum",
        "timestamp": 1615840557
    },
    {
        "content": "<p>e.g., for the debuginfo tests do we fail if you don't have gdb or lldb. kinda similar problem.</p>",
        "id": 230414273,
        "sender_full_name": "simulacrum",
        "timestamp": 1615840585
    },
    {
        "content": "<p>right. (Speaking of which, <code>[debuginfo-lldb] debuginfo/pretty-std-collections.rs</code> just failed in my own local (pristine) run.)</p>",
        "id": 230414377,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615840637
    },
    {
        "content": "<p>we don't run that test on ci I think at all these days? not sure. lldb/gdb tests are a bit of a pain point historically</p>",
        "id": 230414422,
        "sender_full_name": "simulacrum",
        "timestamp": 1615840669
    },
    {
        "content": "<p>(as you know)</p>",
        "id": 230414427,
        "sender_full_name": "simulacrum",
        "timestamp": 1615840673
    },
    {
        "content": "<p>yeah not surprised</p>",
        "id": 230414501,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615840694
    },
    {
        "content": "<p>didn’t I have a steering meeting proposal about this? Maybe I dreamt that.</p>",
        "id": 230414552,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615840711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116083\">pnkfelix</span> <a href=\"#narrow/stream/241545-t-release/topic/rec.2E.20cmd.20line.20for.20beta.20testing.3F/near/230414080\">said</a>:</p>\n<blockquote>\n<p>(would it be a bad thing to make the <code>x.py test</code> logic auto exclude src/tools/tidy on beta branch? Hmm.)</p>\n</blockquote>\n<p>hmm, weird; it seems like we’re already <em>trying</em> to do this via an allowlist? <a href=\"https://github.com/rust-lang/rust/blob/2ccf06302c08d7d4911aad40e66a9a3ee731c6f9/src/bootstrap/test.rs#L792\">here</a> in <code>&lt;Tidy as Step&gt;::run</code> …:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">channel</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"dev\"</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">channel</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"nightly\"</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s\">\"fmt check\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">crate</span>::<span class=\"n\">format</span>::<span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cmd</span><span class=\"p\">.</span><span class=\"n\">bless</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 230418571,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615842474
    },
    {
        "content": "<p><span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span> well of course that ran; I wasn’t setting <code>rust.channel</code> to <code>beta</code> in my <code>config.toml</code></p>",
        "id": 230418797,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615842590
    },
    {
        "content": "<p>ah, yeah, I guess that'd cause it :)</p>",
        "id": 230419329,
        "sender_full_name": "simulacrum",
        "timestamp": 1615842745
    },
    {
        "content": "<p>anyway I think I have a nice (more targetted) fix now</p>",
        "id": 230419417,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615842761
    },
    {
        "content": "<p>Yea, I set <code>channel = \"beta\"</code> for doing stuff on beta to fix the tidy issue.</p>",
        "id": 230419453,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615842774
    },
    {
        "content": "<p>what is different about the beta branch that makes <code>build.config.initial_rustfmt</code> end up as <code>None</code> ?</p>",
        "id": 230419525,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615842806
    },
    {
        "content": "<p>(probably something about how we try to construct it from the <code>config.build.initial_rustc</code>, whatever that is…)</p>",
        "id": 230419690,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615842872
    },
    {
        "content": "<p>we skip rustfmt downloads on beta, since it's a nightly pin</p>",
        "id": 230419828,
        "sender_full_name": "simulacrum",
        "timestamp": 1615842941
    },
    {
        "content": "<p>ah that makes sense, okay.</p>",
        "id": 230419839,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615842951
    },
    {
        "content": "<p>we don't want distros to need to deal with rustfmt (since we pin to nightly)</p>",
        "id": 230419841,
        "sender_full_name": "simulacrum",
        "timestamp": 1615842951
    },
    {
        "content": "<p>and just generally seems like undue burden</p>",
        "id": 230419861,
        "sender_full_name": "simulacrum",
        "timestamp": 1615842960
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/rec.2E.20cmd.20line.20for.20beta.20testing.3F/near/230414075\">said</a>:</p>\n<blockquote>\n<p>we should tell people that in the error message, happy to accept pr - it is a bit broader than might be desired</p>\n</blockquote>\n<p>PR posted: <a href=\"https://github.com/rust-lang/rust/pull/83172\">https://github.com/rust-lang/rust/pull/83172</a></p>",
        "id": 230512058,
        "sender_full_name": "pnkfelix",
        "timestamp": 1615901612
    }
]