[
    {
        "content": "<p>Hey hey,</p>\n<p><a href=\"https://github.com/rust-lang/rust/issues/79022\">#79022</a> stabilized some library feature in 1.50, but was merged right after <a href=\"https://github.com/rust-lang/rust/issues/80366\">#80366</a> which bumped the version to 1.51 (which got priority due to rollup=never). This was noticed by accident, but could've easily been missed. Is there anything we can do to avoid this in the future?</p>",
        "id": 220958472,
        "sender_full_name": "Mara",
        "timestamp": 1608977720
    },
    {
        "content": "<p>I think we need support in bors for pre-merge scripts, which could be used for e.g. running rustfmt, sed replacing $VERS with the merged version... maybe some other things.</p>",
        "id": 220961391,
        "sender_full_name": "simulacrum",
        "timestamp": 1608984046
    },
    {
        "content": "<p>But nothing right now</p>",
        "id": 220961392,
        "sender_full_name": "simulacrum",
        "timestamp": 1608984062
    },
    {
        "content": "<p>Ideally this would be handled automatically somehow, but a manual thing that might help is, before <code>r+</code>ing the version bump: close the tree, manually make sure none of the PRs stabilize something in the previous version, if they do then give them higher priority than the treeclose, then wait for all of them to be merged, <code>r+</code> the version bump with high priority (e.g. <code>p=10000</code>), and then open the tree.</p>",
        "id": 220973242,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609005772
    },
    {
        "content": "<p>Not sure if that's too much effort or too involved to be worth it, but it's an idea.</p>",
        "id": 220973261,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609005793
    },
    {
        "content": "<p>closing the tree for every stabilization seems like a waste though</p>",
        "id": 220973314,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609005860
    },
    {
        "content": "<p>I would rather just wait the week for the beta bump</p>",
        "id": 220973315,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609005865
    },
    {
        "content": "<p>What do you mean?</p>",
        "id": 220975070,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609009259
    },
    {
        "content": "<p>I honestly don't care enough about versions being right to add such a manual step; my goal is to entirely automate releases at some point and this would work against that. I don't think any manual solution is worth the investment of time/energy from our limited set of releasers.</p>",
        "id": 220976241,
        "sender_full_name": "simulacrum",
        "timestamp": 1609011402
    },
    {
        "content": "<blockquote>\n<p>my goal is to entirely automate releases at some point and this would work against that</p>\n</blockquote>\n<p>This would be a temporary solution, so I'm not sure how it works against that.</p>\n<blockquote>\n<p>I don't think any manual solution is worth the investment of time/energy from our limited set of releasers.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> I was just making a suggestion in case it was worth it :)</p>\n<p>Perhaps I thought that the versions being mismatched was more of an issue than it actually is.</p>",
        "id": 220988565,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609034612
    },
    {
        "content": "<p>It works against it by providing something that's not possible to automate which makes automation a regression and as such less palatable.</p>",
        "id": 220990259,
        "sender_full_name": "simulacrum",
        "timestamp": 1609038019
    },
    {
        "content": "<p>Generally anything that touches release work needs to strive to need as little human input that's not checklist as possible, because even if it's a human doing it release work is very critical and we must not get it wrong. Keeping it simple is the way to do that.</p>",
        "id": 220990274,
        "sender_full_name": "simulacrum",
        "timestamp": 1609038094
    },
    {
        "content": "<p>I've not personally ever seen significant value to version numbers in documentation, but I use nightly exclusively pretty much or latest stable. IMO, if you care about version compatibility you must test against that version and stabilization/missing API errors are usually really obvious. I would rather stop listing version numbers than put contributor time into them personally.</p>",
        "id": 220990336,
        "sender_full_name": "simulacrum",
        "timestamp": 1609038221
    },
    {
        "content": "<p>version numbers are useful for <em>finding</em> what your MSRV is without having to test each release one at a time</p>",
        "id": 220990384,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609038282
    },
    {
        "content": "<p>agreed you should test it in the end, but testing 50 releases one at a time is painful</p>",
        "id": 220990390,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1609038300
    },
    {
        "content": "<p>I am confused - for almost all things, you can bisect, and then 50 is <em>at most</em> 6 points (and 2018 edition use cuts that to 4ish).</p>",
        "id": 220992353,
        "sender_full_name": "simulacrum",
        "timestamp": 1609042492
    }
]