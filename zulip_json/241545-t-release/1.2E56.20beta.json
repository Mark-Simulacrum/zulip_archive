[
    {
        "content": "<p><code>src/stage0.txt</code> in the beta branch still has <code>rustfmt</code> -- shouldn't that be unset?</p>",
        "id": 253321363,
        "sender_full_name": "cuviper",
        "timestamp": 1631652463
    },
    {
        "content": "<p>(I just tried a beta test build in Fedora, and it failed trying to download rustfmt because network isn't allowed)</p>",
        "id": 253321489,
        "sender_full_name": "cuviper",
        "timestamp": 1631652498
    },
    {
        "content": "<p>hm, yes</p>",
        "id": 253321799,
        "sender_full_name": "simulacrum",
        "timestamp": 1631652623
    },
    {
        "content": "<p>I think in the mixup with download-stage0 I may have forgotten to drop it</p>",
        "id": 253321824,
        "sender_full_name": "simulacrum",
        "timestamp": 1631652634
    },
    {
        "content": "<p>feel free to file a beta backport rollup or just an issue milestoned appropriately so we don't forget</p>",
        "id": 253321890,
        "sender_full_name": "simulacrum",
        "timestamp": 1631652664
    },
    {
        "content": "<p>see <a href=\"https://github.com/rust-lang/rust/issues/88946\">#88946</a></p>",
        "id": 253328184,
        "sender_full_name": "cuviper",
        "timestamp": 1631655480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I don't see anything that has used <code>backport-of</code> in a meaningful way, only a few none/nothing, and it looks like that check is ignored</p>",
        "id": 253330153,
        "sender_full_name": "cuviper",
        "timestamp": 1631656590
    },
    {
        "content": "<p>Hm</p>",
        "id": 253330163,
        "sender_full_name": "simulacrum",
        "timestamp": 1631656599
    },
    {
        "content": "<p>well, I guess it's buggy then</p>",
        "id": 253330169,
        "sender_full_name": "simulacrum",
        "timestamp": 1631656604
    },
    {
        "content": "<p>it's only needed if the commit doesn't backport cleanly (or doesn't exist on master at all), in theory</p>",
        "id": 253330183,
        "sender_full_name": "simulacrum",
        "timestamp": 1631656618
    },
    {
        "content": "<p>but it's possible it's just not working</p>",
        "id": 253330196,
        "sender_full_name": "simulacrum",
        "timestamp": 1631656625
    },
    {
        "content": "<p>r=me on that PR anyway, and if you could file an issue to follow up on backport-of that would be good (it's not urgent)</p>",
        "id": 253330219,
        "sender_full_name": "simulacrum",
        "timestamp": 1631656643
    },
    {
        "content": "<p>oh, I see, there's no reference needed for a clean cherry</p>",
        "id": 253330734,
        "sender_full_name": "cuviper",
        "timestamp": 1631656880
    },
    {
        "content": "<p>but personally I'd rather have a reference all the time, as <code>git cherry-pick -x</code> does.</p>",
        "id": 253330740,
        "sender_full_name": "cuviper",
        "timestamp": 1631656885
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E56.20beta/near/253321824\">said</a>:</p>\n<blockquote>\n<p>I think in the mixup with download-stage0 I may have forgotten to drop it</p>\n</blockquote>\n<p>I missed this - was there a bug? or did it just get set to <code>true</code> by accident somewhere?</p>",
        "id": 253330918,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1631656969
    },
    {
        "content": "<p>Hm? No, no bug with rustfmt, just I didn't pay attention and there's no check in place right now</p>",
        "id": 253332688,
        "sender_full_name": "simulacrum",
        "timestamp": 1631657941
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"138448\">@cuviper</span> my reading of the docs for git cherry-pick -x is that it doesn't leave a note when there's a conflict during chery pick</p>",
        "id": 253332754,
        "sender_full_name": "simulacrum",
        "timestamp": 1631657984
    },
    {
        "content": "<p>(in other words, sort of inverse of what we want)</p>",
        "id": 253332782,
        "sender_full_name": "simulacrum",
        "timestamp": 1631657999
    },
    {
        "content": "<p>hmm, this is news to me!</p>",
        "id": 253332854,
        "sender_full_name": "cuviper",
        "timestamp": 1631658032
    },
    {
        "content": "<blockquote>\n<p>When recording the commit, append a line that says \"(cherry picked from commit ...)\" to the original commit message in order to<br>\n           indicate which commit this change was cherry-picked from. This is done only for cherry picks without conflicts. Do not use this option<br>\n           if you are cherry-picking from your private branch because the information is useless to the recipient. If on the other hand you are<br>\n           cherry-picking between two publicly visible branches (e.g. backporting a fix to a maintenance branch for an older release from a<br>\n           development branch), adding this information can be useful.</p>\n</blockquote>\n<p>Maybe the docs are wrong though, wouldn't be the first time. I was surprised + sad to see this, seems like the opposite of useful behavior.</p>",
        "id": 253333559,
        "sender_full_name": "simulacrum",
        "timestamp": 1631658464
    },
    {
        "content": "<p>FWIW, I just tried the <code>-x</code> on a hello-world repo. Cherry-picking a conflict paused the process just like a merge or rebase conflict would. I fixed that, then <code>git cherry-pick --continue</code> gave me a chance to edit the commit message, but it did include the <code>-x</code> content already.</p>",
        "id": 253664858,
        "sender_full_name": "cuviper",
        "timestamp": 1631833767
    },
    {
        "content": "<p>anyway, I added more backports to <a href=\"https://github.com/rust-lang/rust/issues/88946\">#88946</a> for review</p>",
        "id": 253664968,
        "sender_full_name": "cuviper",
        "timestamp": 1631833827
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E56.20beta/near/253664858\">said</a>:</p>\n<blockquote>\n<p>FWIW, I just tried the <code>-x</code> on a hello-world repo. Cherry-picking a conflict paused the process just like a merge or rebase conflict would. I fixed that, then <code>git cherry-pick --continue</code> gave me a chance to edit the commit message, but it did include the <code>-x</code> content already.</p>\n</blockquote>\n<p>Interesting! Sounds like we should delete our cherry pick script and edit the check script to both (a) fix it and (b) use the -x generated syntax</p>",
        "id": 253665755,
        "sender_full_name": "simulacrum",
        "timestamp": 1631834385
    },
    {
        "content": "<p>I'd suggest editing the git docs, but that seems hard :)</p>",
        "id": 253665834,
        "sender_full_name": "simulacrum",
        "timestamp": 1631834418
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"138448\">cuviper</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E56.20beta/near/253664968\">said</a>:</p>\n<blockquote>\n<p>anyway, I added more backports to <a href=\"https://github.com/rust-lang/rust/issues/88946\">#88946</a> for review</p>\n</blockquote>\n<p>FWIW you should feel free to self-approve backport PRs, particularly if things are backporting cleanly</p>",
        "id": 253665855,
        "sender_full_name": "simulacrum",
        "timestamp": 1631834435
    },
    {
        "content": "<p>ok, thanks</p>",
        "id": 253666339,
        "sender_full_name": "cuviper",
        "timestamp": 1631834770
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/1.2E56.20beta/near/253665834\">said</a>:</p>\n<blockquote>\n<p>I'd suggest editing the git docs, but that seems hard :)</p>\n</blockquote>\n<p>can't be as hard as editing Microsoft docs, but I'm not <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> either</p>",
        "id": 253666389,
        "sender_full_name": "cuviper",
        "timestamp": 1631834820
    }
]