[
    {
        "content": "<p>ok -- so the issue <a href=\"https://github.com/rust-lang/rust/issues/79501\">#79501</a> has the links</p>",
        "id": 219484793,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613069
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/index.html\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/index.html</a> is the one I'd start with</p>",
        "id": 219485043,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613158
    },
    {
        "content": "<p>what you want is the \"regressed: root results\" link</p>",
        "id": 219485191,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613216
    },
    {
        "content": "<p>for each of those, what I usually do is try to find an existing issue</p>",
        "id": 219485218,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613227
    },
    {
        "content": "<p>unfotunately github's search is usually pretty bad so this doesn't always work, and you shouldn't limit to just the ones tagged as beta regressions</p>",
        "id": 219485541,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613362
    },
    {
        "content": "<p>let me file one for the first issue so that you can get a sense</p>",
        "id": 219486387,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613708
    },
    {
        "content": "<p>ok, so I filed <a href=\"https://github.com/rust-lang/rust/issues/79902\">https://github.com/rust-lang/rust/issues/79902</a></p>",
        "id": 219486623,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613798
    },
    {
        "content": "<p>if you dump issue links here I can milestone them as well</p>",
        "id": 219486680,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613819
    },
    {
        "content": "<p>but for now my recommendation is that one person at a time does this</p>",
        "id": 219486704,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613828
    },
    {
        "content": "<p>and the goal is to try to file as few issues as possible, collapsing into the same issue for the same bug</p>",
        "id": 219486740,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613842
    },
    {
        "content": "<p>there's also a possibility of spurious errors on the test failures (not so much compiler errors)</p>",
        "id": 219486813,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613860
    },
    {
        "content": "<p>it can be hard to tell there, so feel free to ask here or just stop before hitting them and I can triage them</p>",
        "id": 219486859,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613879
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> <span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> - hopefully this is helpful, maybe you can coordinate between the two of you when to get started</p>",
        "id": 219486932,
        "sender_full_name": "simulacrum",
        "timestamp": 1607613910
    },
    {
        "content": "<p>please let me know by <time datetime=\"2020-12-10T18:00:00Z\">2020-12-10T13:00:00-05:00</time> whether you can commit to doing this, and ideally by <time datetime=\"2020-12-10T22:00:00Z\">2020-12-10T17:00:00-05:00</time> we'd have it as done as we're going to get it so I can finish if needed</p>",
        "id": 219489458,
        "sender_full_name": "simulacrum",
        "timestamp": 1607614840
    },
    {
        "content": "<p>yes I can participate</p>",
        "id": 219489791,
        "sender_full_name": "oliver",
        "timestamp": 1607614988
    },
    {
        "content": "<p>I can participate. I only have about 2 more hours of time for today though. <span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> how do you want to split work?</p>",
        "id": 219491044,
        "sender_full_name": "rylev",
        "timestamp": 1607615490
    },
    {
        "content": "<p>I can help with review and anything else you don't have bandwidth for</p>",
        "id": 219491312,
        "sender_full_name": "oliver",
        "timestamp": 1607615596
    },
    {
        "content": "<p>Ok I'll start going through the logs. We can switch off maybe after 30-60 minutes?</p>",
        "id": 219491662,
        "sender_full_name": "rylev",
        "timestamp": 1607615710
    },
    {
        "content": "<p>I'll post what I find here</p>",
        "id": 219491681,
        "sender_full_name": "rylev",
        "timestamp": 1607615718
    },
    {
        "content": "<p>This <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/marcianx.openmesh-rs-core/log.txt\">one</a> is interesting.</p>\n<div class=\"codehilite\"><pre><span></span><code>[INFO] [stdout] error[E0277]: the trait bound `H: handle::ItemHandle` is not satisfied\n[INFO] [stdout]    --&gt; src/property/property.rs:119:14\n[INFO] [stdout]     |\n[INFO] [stdout] 119 |         self.clone_as_trait()\n[INFO] [stdout]     |              ^^^^^^^^^^^^^^ the trait `handle::ItemHandle` is not implemented for `H`\n[INFO] [stdout]     |\n[INFO] [stdout] help: consider restricting type parameter `H`\n[INFO] [stdout]     |\n[INFO] [stdout] 116 | impl&lt;H: handle::ItemHandle&gt; Clone for Box&lt;dyn ResizeableProperty&lt;Handle=H&gt;&gt;\n[INFO] [stdout]     |       ^^^^^^^^^^^^^^^^^^^^\n</code></pre></div>",
        "id": 219493616,
        "sender_full_name": "rylev",
        "timestamp": 1607616497
    },
    {
        "content": "<p><code>ResizeablePropertyHandle::Handle</code> implements <code>handle::ItemHandle</code></p>",
        "id": 219493705,
        "sender_full_name": "rylev",
        "timestamp": 1607616539
    },
    {
        "content": "<p>so not a compiler related regression probably</p>",
        "id": 219494981,
        "sender_full_name": "oliver",
        "timestamp": 1607616947
    },
    {
        "content": "<p>No it definitely is. I confirmed that this compiles on 1.48 and not on beta</p>",
        "id": 219495059,
        "sender_full_name": "rylev",
        "timestamp": 1607616966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I'm guessing that coming up with a MCVE is not necessary right?</p>",
        "id": 219495206,
        "sender_full_name": "rylev",
        "timestamp": 1607617044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> usually we just open an issue for each \"group\" of errors, linking to the relevant crater logs</p>",
        "id": 219495370,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1607617100
    },
    {
        "content": "<p>triaging crater is not really parallelizable and one person can do it at the time</p>",
        "id": 219495468,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1607617137
    },
    {
        "content": "<p>I'm guessing we can't just assume that each error that has the same error number is actually the same though</p>",
        "id": 219495501,
        "sender_full_name": "rylev",
        "timestamp": 1607617145
    },
    {
        "content": "<p>while figuring out <em>why</em> it's wrong is easily parallelizable</p>",
        "id": 219495515,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1607617153
    },
    {
        "content": "<p>when I triaged crater back in the day I just went with intuition</p>",
        "id": 219495670,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1607617204
    },
    {
        "content": "<p>like, I could see all the \"oh this trait bound is supposed to be valid but it's not\" grouped together</p>",
        "id": 219495911,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1607617303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I updated the issue to include all those logs (I hit submit a bit too soon before).</p>",
        "id": 219496480,
        "sender_full_name": "rylev",
        "timestamp": 1607617518
    },
    {
        "content": "<p>The example I included is the most straightforward one though</p>",
        "id": 219496529,
        "sender_full_name": "rylev",
        "timestamp": 1607617536
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 219496964,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1607617694
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79905\">https://github.com/rust-lang/rust/issues/79905</a></p>",
        "id": 219497002,
        "sender_full_name": "rylev",
        "timestamp": 1607617711
    },
    {
        "content": "<p>I usually batch-created issues at the end, but updating the issue body on the fly is also good!</p>",
        "id": 219497014,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1607617714
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79904\">https://github.com/rust-lang/rust/issues/79904</a></p>",
        "id": 219497038,
        "sender_full_name": "rylev",
        "timestamp": 1607617730
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121055\">Pietro Albini</span> <a href=\"#narrow/stream/241545-t-release/topic/crater.20triage.201.2E49/near/219497014\">said</a>:</p>\n<blockquote>\n<p>I usually batch-created issues at the end, but updating the issue body on the fly is also good!</p>\n</blockquote>\n<p>I think that'd stress me out too much. I like going one by one, but I hope my way isn't annyoing to anyone</p>",
        "id": 219497145,
        "sender_full_name": "rylev",
        "timestamp": 1607617791
    },
    {
        "content": "<p>Any thoughts on if error 0271 is related to 0277 in these cases: <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/actix-amqp-0.1.4/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/actix-amqp-0.1.4/log.txt</a></p>",
        "id": 219497446,
        "sender_full_name": "rylev",
        "timestamp": 1607617904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> ^^</p>",
        "id": 219498212,
        "sender_full_name": "rylev",
        "timestamp": 1607618203
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79906\">https://github.com/rust-lang/rust/issues/79906</a></p>",
        "id": 219498226,
        "sender_full_name": "rylev",
        "timestamp": 1607618208
    },
    {
        "content": "<p>This wasn't an error before? <a href=\"https://github.com/mitrid-labs/mitrid-core/blob/e28f237ea52cf0421485a1082636d469db4528de/src/io/network/client/on_error.rs#L15-L16\">https://github.com/mitrid-labs/mitrid-core/blob/e28f237ea52cf0421485a1082636d469db4528de/src/io/network/client/on_error.rs#L15-L16</a> This seems like it should have always been an error</p>",
        "id": 219498504,
        "sender_full_name": "rylev",
        "timestamp": 1607618330
    },
    {
        "content": "<p>last one is probably: <a href=\"https://github.com/rust-lang/rust/pull/77015\">https://github.com/rust-lang/rust/pull/77015</a></p>",
        "id": 219498811,
        "sender_full_name": "tm",
        "timestamp": 1607618457
    },
    {
        "content": "<p>Yep it seems like it. Should I make a comment on the PR just noting it only seemed to break one crate?</p>",
        "id": 219498925,
        "sender_full_name": "rylev",
        "timestamp": 1607618512
    },
    {
        "content": "<p>it is already mentioned as a regression <a href=\"https://github.com/rust-lang/rust/pull/77015#issuecomment-703711569\">https://github.com/rust-lang/rust/pull/77015#issuecomment-703711569</a></p>",
        "id": 219499102,
        "sender_full_name": "tm",
        "timestamp": 1607618569
    },
    {
        "content": "<p>Ah ok, leaving alone then</p>",
        "id": 219499388,
        "sender_full_name": "rylev",
        "timestamp": 1607618687
    },
    {
        "content": "<p>Ah shoot. <a href=\"https://github.com/rust-lang/rust/issues/79906\">https://github.com/rust-lang/rust/issues/79906</a> is a duplicate of <a href=\"https://github.com/rust-lang/rust/issues/77713\">https://github.com/rust-lang/rust/issues/77713</a></p>",
        "id": 219499684,
        "sender_full_name": "rylev",
        "timestamp": 1607618782
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> Should I reference the already open issue and close or does it make sense to have a second issue labeled as a regression?</p>",
        "id": 219499762,
        "sender_full_name": "rylev",
        "timestamp": 1607618809
    },
    {
        "content": "<p>Oh I see it's been nominated to revert this on beta:<a href=\"https://github.com/rust-lang/rust/pull/79903\">https://github.com/rust-lang/rust/pull/79903</a></p>",
        "id": 219500142,
        "sender_full_name": "rylev",
        "timestamp": 1607618944
    },
    {
        "content": "<p>Sorry for being a bit overzealous there</p>",
        "id": 219500171,
        "sender_full_name": "rylev",
        "timestamp": 1607618952
    },
    {
        "content": "<p>I closed the regression issue and linked to the open issue and PR</p>",
        "id": 219500502,
        "sender_full_name": "rylev",
        "timestamp": 1607619062
    },
    {
        "content": "<p>I find it can be hard to keep track with everything going on at once</p>",
        "id": 219500552,
        "sender_full_name": "oliver",
        "timestamp": 1607619079
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> Let me back up and give you a summary of where I am. Then maybe you can take over for a while?</p>",
        "id": 219500805,
        "sender_full_name": "rylev",
        "timestamp": 1607619176
    },
    {
        "content": "<p>For sure but I'm just needing to dropping off for an hour right now<br>\nso I'll look for your summary when I get back <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 219501015,
        "sender_full_name": "oliver",
        "timestamp": 1607619246
    },
    {
        "content": "<p>you should reference as a duplicate and make sure the issue is labeled, but we can keep just one</p>",
        "id": 219501049,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619259
    },
    {
        "content": "<p>(feel free to go in either order)</p>",
        "id": 219501066,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619265
    },
    {
        "content": "<p>i.e., keep either one</p>",
        "id": 219501092,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/crater.20triage.201.2E49/near/219501049\">said</a>:</p>\n<blockquote>\n<p>you should reference as a duplicate and make sure the issue is labeled, but we can keep just one</p>\n</blockquote>\n<p>Labeled as duplicate? How do I do that</p>",
        "id": 219501099,
        "sender_full_name": "rylev",
        "timestamp": 1607619281
    },
    {
        "content": "<p>oh it's just like literally write that</p>",
        "id": 219501133,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619297
    },
    {
        "content": "<p>\"closing as a duplicate of #xxx\" or so</p>",
        "id": 219501152,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619306
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/79906#issuecomment-742646740\">https://github.com/rust-lang/rust/issues/79906#issuecomment-742646740</a> This good?</p>",
        "id": 219501165,
        "sender_full_name": "rylev",
        "timestamp": 1607619314
    },
    {
        "content": "<p>perfect!</p>",
        "id": 219501323,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619378
    },
    {
        "content": "<p>Going in order of issues in <code>regressed: root</code> on <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/index.html\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/index.html</a>:</p>\n<ul>\n<li>The first (the ICE) was opened by Mark: <a href=\"https://github.com/rust-lang/rust/issues/79902\">https://github.com/rust-lang/rust/issues/79902</a></li>\n<li>I've skipped the second group (E0271) for now (more on that in just a second</li>\n<li>I then opened <a href=\"https://github.com/rust-lang/rust/issues/79904\">an issue</a> for failing to see bounds on an associated type (E0277). I'm not sure if this issue is actually related to (E0271). I need some help figuring that out. </li>\n<li>I then opened <a href=\"https://github.com/rust-lang/rust/issues/79905\">an issue</a> for failing to infer a generic param (E0282).</li>\n<li>I then opened <a href=\"https://github.com/rust-lang/rust/issues/79906\">an issue</a> for build failure when using deny/warn after using forbid (E0453), but this was a duplicate of an existing issue (see the issue for a link to the original issue).</li>\n<li>The issue (E0517) which rejects nonsencial attributes on enum variants is already <a href=\"https://github.com/rust-lang/rust/pull/77015\">being tracked</a> and determined to not be a regression.</li>\n</ul>",
        "id": 219501901,
        "sender_full_name": "rylev",
        "timestamp": 1607619626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281739\">@oliver</span> this is where I am right now. I'll let you know if I do any more. It would be helpful for you to get somewhat familiar with the issues before starting</p>",
        "id": 219502004,
        "sender_full_name": "rylev",
        "timestamp": 1607619680
    },
    {
        "content": "<p>I think the E0271 would be good to mention on the E0277 issue as \"maybe same\"?</p>",
        "id": 219502247,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619779
    },
    {
        "content": "<p>it looks like they're failing with <em>both</em> errors</p>",
        "id": 219502308,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619811
    },
    {
        "content": "<p>so probably unclear cause</p>",
        "id": 219502349,
        "sender_full_name": "simulacrum",
        "timestamp": 1607619825
    },
    {
        "content": "<p>I'll mention those errors and say they might be related</p>",
        "id": 219502461,
        "sender_full_name": "rylev",
        "timestamp": 1607619860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> can you look at the \"build failed (unknown)\". these all have to do with macro_rules but they seem unrelated. What are your thoughts?</p>",
        "id": 219503970,
        "sender_full_name": "rylev",
        "timestamp": 1607620526
    },
    {
        "content": "<p>For the \"test failed (unknown)\" I'm not sure what to do for most of them. A lot of them look like legit test failures and we'd probably want to run the tests on them to see what's happening</p>",
        "id": 219504641,
        "sender_full_name": "rylev",
        "timestamp": 1607620838
    },
    {
        "content": "<p>ok, I will take those on, don't have time now</p>",
        "id": 219505762,
        "sender_full_name": "simulacrum",
        "timestamp": 1607621347
    },
    {
        "content": "<p>Ok please make notes about your process here if you can so we can learn <span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span></p>",
        "id": 219505929,
        "sender_full_name": "rylev",
        "timestamp": 1607621410
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/ErickHdez96.tiger/log.txt\">ErickHdez96.tiger</a> - const in macro fragment -- error: expected expression, found keyword <code>const</code>,  potentially related to <a href=\"https://github.com/rust-lang/rust/issues/78912\">#78912</a></p>",
        "id": 219508240,
        "sender_full_name": "oliver",
        "timestamp": 1607622418
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/hiratara.toy-linear-type-system/log.txt\">hiratara.toy-linear-type-system</a> - recursion limit - <code>parse mode</code> defined here - potentially related: <a href=\"https://github.com/rust-lang/rust/commit/92bfa05b07090be1b3bf32af0c8947a0f0b387e8\">https://github.com/rust-lang/rust/commit/92bfa05b07090be1b3bf32af0c8947a0f0b387e8</a>, <a href=\"https://github.com/rust-lang/rust/issues/76537\">https://github.com/rust-lang/rust/issues/76537</a></p>",
        "id": 219509269,
        "sender_full_name": "oliver",
        "timestamp": 1607622888
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/fourier-0.1.0/log.txt\">fourier-0.1.0</a> - error: no rules expected the token <code>f32</code>, potentially related <a href=\"https://github.com/rust-lang/rust/issues/69604\">https://github.com/rust-lang/rust/issues/69604</a></p>",
        "id": 219510292,
        "sender_full_name": "oliver",
        "timestamp": 1607623308
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/sem-0.1.0/log.txt\">sem-0.1.0</a> - error: missing fragment specifier - <a href=\"https://github.com/rust-lang/rust/issues/76605\">https://github.com/rust-lang/rust/issues/76605</a></p>",
        "id": 219510685,
        "sender_full_name": "oliver",
        "timestamp": 1607623467
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/1000teslas.tree_traversal/log.txt\">1000teslas.tree_traversal</a> - stack overflow</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">test_stack_to_queue</span><span class=\"p\">(</span><span class=\"n\">e</span>: <span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"n\">Expr</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">bool</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">traverse</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sq</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bf_traverse</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">stack_to_queue</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">ss</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">sq</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/rust-lang/rust/issues/57633\">https://github.com/rust-lang/rust/issues/57633</a></p>",
        "id": 219511087,
        "sender_full_name": "oliver",
        "timestamp": 1607623668
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/Floppy.ruby-version-badger/log.txt\">Floppy.ruby-version-badger</a> - equality assertion failed</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">port</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">String</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">env</span>::<span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s\">\"PORT\"</span><span class=\"p\">).</span><span class=\"n\">unwrap_or</span><span class=\"p\">(</span><span class=\"s\">\"3000\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[test]</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">default_to_port_3k</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">assert_eq</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"3000\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">config</span>::<span class=\"n\">port</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// encounters \"3030\"</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 219511905,
        "sender_full_name": "oliver",
        "timestamp": 1607624046
    },
    {
        "content": "<p>That's all I can do right now</p>",
        "id": 219511971,
        "sender_full_name": "oliver",
        "timestamp": 1607624090
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/rust/issues/79908\">https://github.com/rust-lang/rust/issues/79908</a> for the macro changes (tiger, fourier)</p>",
        "id": 219514541,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625228
    },
    {
        "content": "<p>noted on <a href=\"https://github.com/rust-lang/rust/issues/76605\">#76605</a> that a revert has not yet happened, pinged</p>",
        "id": 219514614,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625246
    },
    {
        "content": "<p>afaict, tree-traversal is not related to <a href=\"https://github.com/rust-lang/rust/issues/57633\">#57633</a> and I am confused by the reference; that issue is both old and represents a lack of diagnostics</p>",
        "id": 219514757,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625312
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/rust/issues/79909\">https://github.com/rust-lang/rust/issues/79909</a> for the tree traversal, I think I recall seeing a combine issue earlier so might be a re-regression or so</p>",
        "id": 219515520,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625642
    },
    {
        "content": "<p>(previous cycle that is)</p>",
        "id": 219515546,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625650
    },
    {
        "content": "<p>er, not for tree traversal</p>",
        "id": 219515607,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625681
    },
    {
        "content": "<p>for the toy linear type system</p>",
        "id": 219515651,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625707
    },
    {
        "content": "<p>tree traversal not filing an issue for, likely spurious - I generally ignore stack overflows, they're unlikely to be Rust-caused in some sense (or we can't do much about them)</p>",
        "id": 219515750,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625744
    },
    {
        "content": "<p>ruby version badger, skipping, default_to_port_3k tells me it's probably a network test and those are flaky on crater (we have too many occupied ports and such)</p>",
        "id": 219515814,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625780
    },
    {
        "content": "<p>apery rust - similar stack overflow, likely spurious</p>",
        "id": 219515859,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625804
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/Indy2222.vole/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/Indy2222.vole/log.txt</a> - not sure what's up but seems likely to be spurious, seems to be running something in CLI which might be hitting a conflict</p>",
        "id": 219515989,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625866
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/PicoJr.bswp-cli/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/PicoJr.bswp-cli/log.txt</a> - again, cli, broken pipe, fairly common spurious</p>",
        "id": 219516015,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625882
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/appaquet.extsort-rs/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/appaquet.extsort-rs/log.txt</a> is rustdoc crate loading, almost always spurious</p>",
        "id": 219516045,
        "sender_full_name": "simulacrum",
        "timestamp": 1607625901
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/bes.google-datastore1-generated/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/bes.google-datastore1-generated/log.txt</a> seems strange</p>",
        "id": 219516268,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626013
    },
    {
        "content": "<p>going to try and take a look at source</p>",
        "id": 219516285,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626019
    },
    {
        "content": "<p>ah interesting</p>",
        "id": 219516345,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626057
    },
    {
        "content": "<p><a href=\"https://github.com/bes/google-datastore1-generated/blob/master/src/lib.rs#L1\">https://github.com/bes/google-datastore1-generated/blob/master/src/lib.rs#L1</a></p>",
        "id": 219516352,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626061
    },
    {
        "content": "<p>ok, filing issue, could be a real regression</p>",
        "id": 219516361,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626067
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/crater.20triage.201.2E49/near/219516045\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/appaquet.extsort-rs/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/appaquet.extsort-rs/log.txt</a> is rustdoc crate loading, almost always spurious</p>\n</blockquote>\n<p>this seems like a bug in crater maybe? I don't know how else it would have a 1.48 cache</p>\n<div class=\"codehilite\"><pre><span></span><code>[INFO] [stdout] ---- readme_sect_example_line_9 stdout ----\n[INFO] [stdout] error[E0514]: found crate `byteorder` compiled by an incompatible version of rustc\n[INFO] [stdout]  --&gt; /tmp/rust-skepticzXLIMM/test.rs:3:1\n[INFO] [stdout]   |\n[INFO] [stdout] 3 | extern crate byteorder;\n[INFO] [stdout]   | ^^^^^^^^^^^^^^^^^^^^^^^\n[INFO] [stdout]   |\n[INFO] [stdout]   = help: please recompile that crate using this compiler (rustc 1.49.0-beta.2 (bd26e4e54 2020-11-24))\n[INFO] [stdout]   = note: the following crate versions were found:\n[INFO] [stdout]           crate `byteorder` compiled by rustc 1.48.0 (7eac88abb 2020-11-16): /opt/rustwide/target/debug/deps/libbyteorder-d8402bb412e981c6.rlib\n</code></pre></div>",
        "id": 219516517,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607626141
    },
    {
        "content": "<p>oh well, not so much bug</p>",
        "id": 219516527,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626150
    },
    {
        "content": "<p>just we run everything at the same time</p>",
        "id": 219516537,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626155
    },
    {
        "content": "<p>rust-skeptic has problems in general I imagine</p>",
        "id": 219516573,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626178
    },
    {
        "content": "<p>but yeah this is probably related to <a href=\"https://github.com/rust-lang/rust/issues/68427#issuecomment-578113028\">https://github.com/rust-lang/rust/issues/68427#issuecomment-578113028</a> somehow</p>",
        "id": 219516580,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607626184
    },
    {
        "content": "<p>doubtful</p>",
        "id": 219516620,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626202
    },
    {
        "content": "<p>I see these all the time though so not a regression!</p>",
        "id": 219516683,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626224
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/bwinton.timemoji/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/bwinton.timemoji/log.txt</a> - honestly, no idea, but seems unlikely to be caused by Rust changes, probably spurious test</p>",
        "id": 219516725,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626252
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/chrisrhayden.words_cli/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/chrisrhayden.words_cli/log.txt</a> - probably fs error due to parallel tests or crater constraints</p>",
        "id": 219516777,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626275
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/ctsrc.persistence/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/ctsrc.persistence/log.txt</a> - also suspecting fs error</p>",
        "id": 219516818,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626302
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/doy.matasano/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/doy.matasano/log.txt</a> - seems to be in a module called \"crack\" so perhaps has randomness, not noting</p>",
        "id": 219516899,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626332
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/fsyncd.serde-command-opts/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/fsyncd.serde-command-opts/log.txt</a> - possibly changed ordering of hashmap iteration?</p>",
        "id": 219516946,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626364
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/garbados.roll-rs/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/garbados.roll-rs/log.txt</a> - almost certainly randomness</p>",
        "id": 219516970,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626377
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/luoos.bitcoin_client/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/luoos.bitcoin_client/log.txt</a> - seems likely to be random or so? generally unlikely to be a rust bug</p>",
        "id": 219517025,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626402
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/mantal.expert_system/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/mantal.expert_system/log.txt</a> also seems like not likely a rust bug, just nondeterministic solving</p>",
        "id": 219517074,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626426
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/mhthies.cdecao/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/mhthies.cdecao/log.txt</a> - also feels plausibly randomness related? fixed course sounds... pathfinding</p>",
        "id": 219517383,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626548
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/naomijub.genetic-labyrinth/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/naomijub.genetic-labyrinth/log.txt</a> - likely spurious, mutation</p>",
        "id": 219517470,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626571
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/nkzawa.fzq/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/nkzawa.fzq/log.txt</a> - broken pipe, io error, likely just crater env spurious</p>",
        "id": 219517502,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626594
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/nrlsk.alloy/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/nrlsk.alloy/log.txt</a> - huh, weird, but again percents sounds like it is doing some potentially nondeterministic computation</p>",
        "id": 219517662,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626678
    },
    {
        "content": "<p>(if you can't tell the bar for test failure being a rust regression is pretty high for me)</p>",
        "id": 219517719,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626691
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/platy.raft/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/platy.raft/log.txt</a> - consensus algorithms</p>",
        "id": 219517749,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626708
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/richardanaya.globals/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/richardanaya.globals/log.txt</a> - probably mutating global env, or something, unsurprising to see problems</p>",
        "id": 219517807,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626734
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/saresend.shack/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/saresend.shack/log.txt</a> - possibly interacting with other instances of itself?</p>",
        "id": 219518394,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626981
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/vspecky.neat-rs/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/vspecky.neat-rs/log.txt</a> - fitness, seems to be random</p>",
        "id": 219518428,
        "sender_full_name": "simulacrum",
        "timestamp": 1607626994
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/zesterer.flume/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/gh/zesterer.flume/log.txt</a> - timeout, likely spurious</p>",
        "id": 219518466,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627010
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/actix_web_metrics_mw-0.3.1/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/actix_web_metrics_mw-0.3.1/log.txt</a> - http unlikely to work well</p>",
        "id": 219518494,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627023
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/auto-0.0.8/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/auto-0.0.8/log.txt</a> - seems likely to be another case of the rustdoc failure</p>",
        "id": 219518522,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627040
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/bfc-1.9.0/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/bfc-1.9.0/log.txt</a> - I'm seeing some tests with names like pointer out of range, so maybe testing UB?</p>",
        "id": 219518845,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627164
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/big_enum_set-0.2.0/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/big_enum_set-0.2.0/log.txt</a> - span change, but not really a problem</p>",
        "id": 219519241,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627392
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/bosun_emitter-1.2.0/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/bosun_emitter-1.2.0/log.txt</a> - feels likely to be network</p>",
        "id": 219519318,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627411
    },
    {
        "content": "<p><a href=\"https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/crossbeam-channel-0.5.0/log.txt\">https://crater-reports.s3.amazonaws.com/beta-1.49-1/beta-2020-11-26/reg/crossbeam-channel-0.5.0/log.txt</a> - seems likely to be spurious</p>",
        "id": 219519346,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627433
    },
    {
        "content": "<p>going to stop there so I can get through the rest quickly, but will flag anything I actually take action on</p>",
        "id": 219519579,
        "sender_full_name": "simulacrum",
        "timestamp": 1607627545
    },
    {
        "content": "<p>ok didn't find any new things but added several rustdoc regression examples to that bug</p>",
        "id": 219520516,
        "sender_full_name": "simulacrum",
        "timestamp": 1607628009
    },
    {
        "content": "<p>I will take a look at rustdoc's list later I guess, but I don't expect anything new in there, it's usually just more of the same</p>",
        "id": 219520558,
        "sender_full_name": "simulacrum",
        "timestamp": 1607628031
    },
    {
        "content": "<p>(since rustdoc is almost a rust compiler)</p>",
        "id": 219520576,
        "sender_full_name": "simulacrum",
        "timestamp": 1607628039
    },
    {
        "content": "<p>if you can look at intra-doc link errors or doctest errors that would be super helpful</p>",
        "id": 219522223,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607628623
    },
    {
        "content": "<p>but yeah I would expect most of the rest to be the same</p>",
        "id": 219522238,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1607628634
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/crater.20triage.201.2E49/near/219520516\">said</a>:</p>\n<blockquote>\n<p>ok didn't find any new things but added several rustdoc regression examples to that bug</p>\n</blockquote>\n<p>that's a cool outcome, thanks for outlining your criteria looking at these</p>",
        "id": 219534496,
        "sender_full_name": "oliver",
        "timestamp": 1607634688
    },
    {
        "content": "<p>Awesome! This was very informative. I’d like to help out with this again next time.</p>",
        "id": 219540470,
        "sender_full_name": "rylev",
        "timestamp": 1607637949
    },
    {
        "content": "<p>Do backport PRs like <a href=\"https://github.com/rust-lang/rust/pull/79903\">this one</a> need any labels to ensure they’re not missed?</p>",
        "id": 219541492,
        "sender_full_name": "rylev",
        "timestamp": 1607638415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@Ryan Levick</span> so I usually open and r+ such PRs immediately</p>",
        "id": 219542341,
        "sender_full_name": "simulacrum",
        "timestamp": 1607638855
    },
    {
        "content": "<p>you'll note it is targeting beta</p>",
        "id": 219542347,
        "sender_full_name": "simulacrum",
        "timestamp": 1607638859
    },
    {
        "content": "<p>so there's not really any need for anyone else to look at it :)</p>",
        "id": 219542360,
        "sender_full_name": "simulacrum",
        "timestamp": 1607638868
    },
    {
        "content": "<p>Makes sense. I missed the r+. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 219542735,
        "sender_full_name": "rylev",
        "timestamp": 1607639094
    }
]