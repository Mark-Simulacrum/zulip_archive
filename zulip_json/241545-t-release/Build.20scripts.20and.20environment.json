[
    {
        "content": "<p>Hi,</p>\n<p>where could i find the build scripts and environment setup used to produce official rustc builds? I was initially looking for how to build rustc for x86_64-pc-windows-gnu host to target aarch64-unknown-linux-gnu. Hope to learn from the production scripts as building locally fails in various ways, as <a href=\"#narrow/stream/182449-t-compiler.2Fhelp/topic/Compiling.20rustc.20for.20MingW.20host.20on.20Linux\">https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Compiling.20rustc.20for.20MingW.20host.20on.20Linux</a> doesn't seem to have traction. If there are any other tips, it'd be even better.</p>\n<p>Thanks!</p>",
        "id": 235583796,
        "sender_full_name": "weltling",
        "timestamp": 1619039764
    },
    {
        "content": "<p>The builds are driven on GitHub's CI with this file: <a href=\"https://github.com/rust-lang/rust/blob/master/.github/workflows/ci.yml\">https://github.com/rust-lang/rust/blob/master/.github/workflows/ci.yml</a></p>\n<p>For <code>x86_64-pc-windows-gnu</code> it uses GitHub Windows image which has a bunch of stuff pre-installed: <a href=\"https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md\">https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md</a></p>\n<p>Important for <code>x86_64-pc-windows-gnu</code> is the install-mingw script: <a href=\"https://github.com/rust-lang/rust/blob/master/src/ci/scripts/install-mingw.sh\">https://github.com/rust-lang/rust/blob/master/src/ci/scripts/install-mingw.sh</a></p>\n<p>After installing things, it just runs <a href=\"https://github.com/rust-lang/rust/blob/b849326744a8eec939e592f0ab13bff85cc865d3/.github/workflows/ci.yml#L403-L409\">x.py dist</a>.</p>\n<p>The <code>aarch64-unknown-linux-gnu</code> target is built via the <a href=\"https://github.com/rust-lang/rust/blob/master/src/ci/docker/host-x86_64/dist-aarch64-linux/Dockerfile\"><code>dist-aarch64-linux</code> Dockerfile</a>.</p>",
        "id": 235585365,
        "sender_full_name": "Eric Huss",
        "timestamp": 1619040488
    },
    {
        "content": "<p>I should also probably mention that the main configuration is driven by <a href=\"https://github.com/rust-lang/rust/blob/master/src/ci/run.sh\"><code>run.sh</code></a>, which adds a bunch of settings to config.toml.</p>",
        "id": 235585720,
        "sender_full_name": "Eric Huss",
        "timestamp": 1619040667
    },
    {
        "content": "<p>Thanks a golden read, thanks a lot! I probably see why i have the issue now. In short, i use a config similar to the below:</p>\n<div class=\"codehilite\"><pre><span></span><code>changelog-seen = 2\n\n[target.aarch64-unknown-linux-gnu]\nllvm-config = &quot;/usr/bin/llvm-config-10&quot;\n\n[target.x86_64-pc-windows-gnu]\nllvm-config = &quot;/usr/bin/llvm-config-10&quot;\n\n[target.x86_64-unknown-linux-gnu]\nllvm-config = &quot;/usr/bin/llvm-config-10&quot;\n\n[rust]\nrpath = true\nchannel = &quot;stable&quot;\noptimize = true\n\n[build]\nsubmodules = false\ndocs = false\nvendor = true\ntarget = [&quot;aarch64-unknown-linux-gnu&quot;, &quot;x86_64-pc-windows-gnu&quot;]\nhost = [&quot;x86_64-pc-windows-gnu&quot;]\nbuild = &quot;x86_64-unknown-linux-gnu&quot;\n</code></pre></div>\n<p>and then invoke </p>\n<p><code>python3 src/bootstrap/bootstrap.py build --stage 2</code>.</p>\n<p>We use a similar approach in <a href=\"https://github.com/meta-rust/meta-rust\">https://github.com/meta-rust/meta-rust</a> to produce a cross rustc for the Yocto SDK for Linux host. A similar way it works is when <code>[build]</code> contains</p>\n<div class=\"codehilite\"><pre><span></span><code>target = [&quot;aarch64-unknown-linux-gnu&quot;, &quot;x86_64-unknown-linux-gnu&quot;]\nhost = [&quot;x86_64-unknown-linux-gnu&quot;]\nbuild = &quot;x86_64-unknown-linux-gnu&quot;\n</code></pre></div>\n<p>In the case AMD64 Linux <code>build == host</code>- <code>rustc</code> is built for host and <code>std</code> is built for both host and target in just one shot. But when I try to have <code>build != host</code> and specifically when host is MingW, it doesn't seem to be going well with cross compiling for MingW. In the scripts you've linked, the MingW part is compiled separately on Windows, and the AARCH64 part is compiled separately, too.</p>\n<p>Why I'm striving to do it this way is Yocto specific. There, the MingW based part is cross compiled under Linux and also includes target libraries so then compilers can be pointed to the correct sysroot. It seems that if rustc can't be cross compiled on Linux for MingW, then it can't be integrated in Yocto this way.  Perhaps any advise/comment from your side on the matter described? ATM it seems I need more experiment especially looking how it is done for the official build in separate passes.</p>\n<p>Thanks!</p>",
        "id": 235656155,
        "sender_full_name": "weltling",
        "timestamp": 1619089062
    },
    {
        "content": "<p>Sorry, I don't have any experience building mingw on linux.</p>",
        "id": 235706655,
        "sender_full_name": "Eric Huss",
        "timestamp": 1619108601
    },
    {
        "content": "<p>i guess <a class=\"stream\" data-stream-id=\"242791\" href=\"/#narrow/stream/242791-t-infra\">#t-infra</a> might be a better place for this (though many members are here )</p>",
        "id": 235710137,
        "sender_full_name": "DPC",
        "timestamp": 1619110023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120823\">@DPC</span>  I was asking on several channels about this, but then thought people that release should know best on the matter :) That's why i landed here. I'll keep t-infra in mind OFC.</p>\n<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> ack, you already helped a lot. Thanks for the guidance! There are sure any possible quirks just seeing how things done officially is probably the best way to choose.</p>\n<p>Thanks</p>",
        "id": 235727217,
        "sender_full_name": "weltling",
        "timestamp": 1619116617
    },
    {
        "content": "<p>we are a sub-team of infra, so most likely the people who answer you there would answer you so not an issue <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> i just feel there's a chance that other non-release infra people might get to you faster than here <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 235727427,
        "sender_full_name": "DPC",
        "timestamp": 1619116690
    },
    {
        "content": "<p>uh, release is not a subteam of infra</p>",
        "id": 235727802,
        "sender_full_name": "simulacrum",
        "timestamp": 1619116828
    },
    {
        "content": "<p>it's a top-level team</p>",
        "id": 235727834,
        "sender_full_name": "simulacrum",
        "timestamp": 1619116836
    },
    {
        "content": "<p>(essentially)</p>",
        "id": 235727846,
        "sender_full_name": "simulacrum",
        "timestamp": 1619116842
    },
    {
        "content": "<p>but yeah, <a class=\"stream\" data-stream-id=\"242791\" href=\"/#narrow/stream/242791-t-infra\">#t-infra</a> or here is both fine</p>",
        "id": 235727896,
        "sender_full_name": "simulacrum",
        "timestamp": 1619116856
    },
    {
        "content": "<p>ah never mind <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 235730156,
        "sender_full_name": "DPC",
        "timestamp": 1619117846
    }
]