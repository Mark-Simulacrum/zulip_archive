[
    {
        "content": "<p>We'll need to triage the 1.50 crater run soon, and I'm interested in finding out if <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> you might be interested in leading that effort (maybe in concert with a few others).</p>\n<p>The issue with results is here - <a href=\"https://github.com/rust-lang/rust/issues/80667\">https://github.com/rust-lang/rust/issues/80667</a> - they should be ready in around an hour. I would like to see this done by next Wednesday, roughly.</p>",
        "id": 222003271,
        "sender_full_name": "simulacrum",
        "timestamp": 1610054800
    },
    {
        "content": "<p>Iâ€™m happy to lead the effort. Is all that needs to be done is classifying errors and opening issues for regressions?</p>",
        "id": 222003553,
        "sender_full_name": "rylev",
        "timestamp": 1610054950
    },
    {
        "content": "<p>yep, same as last time.</p>",
        "id": 222003692,
        "sender_full_name": "simulacrum",
        "timestamp": 1610055006
    },
    {
        "content": "<p>FYI: Going to start this now</p>",
        "id": 222274926,
        "sender_full_name": "rylev",
        "timestamp": 1610357213
    },
    {
        "content": "<p>I've gone through all of the compile time error for <code>regressed: root</code>.</p>\n<ul>\n<li><code>E0034</code>, <code>E0061</code>, and <code>E0277</code> are all cases of new APIs being stablized (<code>Ord::clamp</code> and <code>bool::then</code>) which were defined on extension traits.</li>\n<li><code>E0597</code> seems to be <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.50-1/beta-2021-01-01/reg/euca-0.1.0/log.txt\">the only interesting failure</a>. The borrower checker finds an issue on beta but not on stable. It seems like this code should _not_ compile (making beta correct) as moving the <code>&amp;mut</code> borrow out of argument position to its own variable (which should extend the lifetime if anything) causes a borrow checker failure even on stable. I can't find an issue that references this though.</li>\n</ul>",
        "id": 222278840,
        "sender_full_name": "rylev",
        "timestamp": 1610360048
    },
    {
        "content": "<ul>\n<li>Next is a <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.50-1/beta-2021-01-01/gh/devrandom.utxo-oracle/log.txt\">linker error</a> with duplicate symbols. I don't see any obvious reason for this failure at this point.</li>\n</ul>",
        "id": 222279678,
        "sender_full_name": "rylev",
        "timestamp": 1610360608
    },
    {
        "content": "<ul>\n<li>The last build <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.50-1/beta-2021-01-01/reg/allegro_examples-0.0.41/log.txt\">failed</a> is from an <a href=\"https://github.com/SiegeLord/RustAllegro/blob/master/examples/build.rs#L10\"><code>env var not being set</code></a>, but I don't know how the tests passed in the first place...</li>\n</ul>",
        "id": 222280108,
        "sender_full_name": "rylev",
        "timestamp": 1610360886
    },
    {
        "content": "<ul>\n<li>The rest are test failed. <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> is the procedure to quickly scan and see if any seem like they might not be due to the tests not being 100% reproducible (i.e., having some randomness in them).?</li>\n</ul>",
        "id": 222280327,
        "sender_full_name": "rylev",
        "timestamp": 1610361044
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> there isn't unfortunately, it's pretty much up to guess work. I usually don't try to rerun them though, and just look at the failure- if it looks plausibly deterministic I will file an issue.</p>\n<p>One of the goals I've long had for crater is to automate rerunning regressed crates, say, 3 times to try and get rid of ones that fail spuriously.</p>",
        "id": 222286638,
        "sender_full_name": "simulacrum",
        "timestamp": 1610365204
    },
    {
        "content": "<p>The env var not set error is a cargo regression: <a href=\"https://github.com/rust-lang/cargo/issues/9063\">https://github.com/rust-lang/cargo/issues/9063</a></p>",
        "id": 222310171,
        "sender_full_name": "Eric Huss",
        "timestamp": 1610378434
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> for the new APIs being stabalized causing code to break. Does this need to be reported anywhere?</p>",
        "id": 222462306,
        "sender_full_name": "rylev",
        "timestamp": 1610471095
    },
    {
        "content": "<p>Please file an issue - I'd like to try to start/continue to note such things, even though it's super likely we'll close as won't fix pretty quickly</p>",
        "id": 222462480,
        "sender_full_name": "simulacrum",
        "timestamp": 1610471152
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> an update: I've filed issues or left comments for all the issues I listed above with the exception of the <a href=\"https://crater-reports.s3.amazonaws.com/beta-1.50-1/beta-2021-01-01/gh/devrandom.utxo-oracle/log.txt\">linker error</a> which i'm not quite sure how to report. </p>\n<p>I still need to go through the test failures, but I won't have time to do that until tomorrow.</p>",
        "id": 222465726,
        "sender_full_name": "rylev",
        "timestamp": 1610472443
    },
    {
        "content": "<p>Let's file an issue on the linker error, maybe someone can get a bisect or mcve going</p>",
        "id": 222466094,
        "sender_full_name": "simulacrum",
        "timestamp": 1610472601
    },
    {
        "content": "<p>If you can leave a comment on the crater issue today/tomorrow listing the issues files (just numbers or numbers and titles) that would be amazing</p>",
        "id": 222466212,
        "sender_full_name": "simulacrum",
        "timestamp": 1610472634
    },
    {
        "content": "<ul>\n<li><a href=\"https://github.com/rust-lang/cargo/issues/9063#issuecomment-758814836\">Cargo: DEP_* env variable not set in nightly test run</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/80950\">Code breaks due to newly stabalized std lib methods <code>Ord::clamp</code> and <code>bool::then</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/80949\">Borrow checker reports function param as not living long enough</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/80951\">Duplicate symbol linker error</a></li>\n</ul>",
        "id": 222466768,
        "sender_full_name": "rylev",
        "timestamp": 1610472870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> seeing a bunch of tests failing due to an issue that I believe is related to or is exactly (<a href=\"https://github.com/rust-lang/rust/issues/77713\">https://github.com/rust-lang/rust/issues/77713</a>). In test <code>#[forbid(warnings)]</code> is set and this conflicts with various <code>#[deny(..)]</code> annotations</p>",
        "id": 222617552,
        "sender_full_name": "rylev",
        "timestamp": 1610559456
    },
    {
        "content": "<p>Some of the error messages are a bit unexpected too:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0453]: allow(unused_qualifications) incompatible with previous forbid\n   --&gt; src/lib.rs:105:38\n    |\n25  |     warnings\n    |     -------- `forbid` level set here\n...\n105 | #[derive(Debug, PartialEq, Eq, Hash, Clone)]\n    |                                      ^^^^^ overruled by previous forbid\n</code></pre></div>",
        "id": 222617595,
        "sender_full_name": "rylev",
        "timestamp": 1610559479
    },
    {
        "content": "<p>This was an issue for 1.49 and was reverted out</p>",
        "id": 222618010,
        "sender_full_name": "rylev",
        "timestamp": 1610559633
    },
    {
        "content": "<p>huh</p>",
        "id": 222618296,
        "sender_full_name": "simulacrum",
        "timestamp": 1610559748
    },
    {
        "content": "<p>file an issue please</p>",
        "id": 222618309,
        "sender_full_name": "simulacrum",
        "timestamp": 1610559753
    },
    {
        "content": "<p>I am.. surprised, I guess, by people setting forbid, but would like to dig in more</p>",
        "id": 222618368,
        "sender_full_name": "simulacrum",
        "timestamp": 1610559781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> I went through ~50% of the test failures and the above was the only issue I found. There might be more issues but I don't have time to finish going through all the crates today unfortunately. Do you think this is enough for this first crater run? I can continue tomorrow.</p>",
        "id": 222619895,
        "sender_full_name": "rylev",
        "timestamp": 1610560526
    },
    {
        "content": "<p>yes, this is great - I think we've likely discovered most things. Not sure what you mean by \"first\" crater run - we usually only do one. Triaging the rustdoc one is pretty quick since it mirrors the rustc one for a good portion of problems usually</p>",
        "id": 222620450,
        "sender_full_name": "simulacrum",
        "timestamp": 1610560766
    },
    {
        "content": "<p>when you get a chance if you can record all of the issues you filed on <a href=\"https://github.com/rust-lang/rust/issues/80667\">https://github.com/rust-lang/rust/issues/80667</a> as a comment that would help me keep track of things</p>",
        "id": 222620632,
        "sender_full_name": "simulacrum",
        "timestamp": 1610560829
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/crater.20triage.201.2E50/near/222620450\">said</a>:</p>\n<blockquote>\n<p>Not sure what you mean by \"first\" crater run - we usually only do one. Triaging the rustdoc one is pretty quick since it mirrors the rustc one for a good portion of problems usually</p>\n</blockquote>\n<p>Ah sorry, I was under the impression we do 2.</p>",
        "id": 222693805,
        "sender_full_name": "rylev",
        "timestamp": 1610615748
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/241545-t-release/topic/crater.20triage.201.2E50/near/222620632\">said</a>:</p>\n<blockquote>\n<p>when you get a chance if you can record all of the issues you filed on <a href=\"https://github.com/rust-lang/rust/issues/80667\">https://github.com/rust-lang/rust/issues/80667</a> as a comment that would help me keep track of things</p>\n</blockquote>\n<p>Done: <a href=\"https://github.com/rust-lang/rust/issues/80667#issuecomment-760068319\">https://github.com/rust-lang/rust/issues/80667#issuecomment-760068319</a></p>",
        "id": 222694221,
        "sender_full_name": "rylev",
        "timestamp": 1610616044
    }
]