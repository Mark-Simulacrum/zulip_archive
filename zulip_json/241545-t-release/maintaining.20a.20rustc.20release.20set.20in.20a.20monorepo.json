[
    {
        "content": "<p>Howdy all! I'm maintaining (along with <span class=\"user-mention\" data-user-id=\"273789\">@Benjamin Brittain</span> and some others) a Rust toolchain in a monorepo, and for security-team reasons we need to build them all ourselves, using ones we already have. We'd been trying to only have a nightly release kicking around, but it looks like we should also keep a copy of the most recent beta built and use that for building nightlies. Is that the best thing to do? Is there anything else I should be planning to keep track of as I go down this rabbit hole?</p>",
        "id": 223416685,
        "sender_full_name": "durin42",
        "timestamp": 1611168353
    },
    {
        "content": "<p>t-release is probably the wrong stream, but yes, rustc is always guarenteed to build with itself and with the previous release. It is <em>not</em> guarenteed to work with a recently nightly, although it may work in practice</p>",
        "id": 223417019,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611168490
    },
    {
        "content": "<p>you might be interested in <a href=\"https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html\">https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html</a></p>",
        "id": 223417051,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611168507
    },
    {
        "content": "<p>We can confirm it does not work in practice :)</p>",
        "id": 223417077,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611168519
    },
    {
        "content": "<p>Ah, I was directed here, sorry if this is woefully misplaced. We'd been using nightly and it was working until sometime in December. :)</p>",
        "id": 223417096,
        "sender_full_name": "durin42",
        "timestamp": 1611168528
    },
    {
        "content": "<p>np, bootstrapping doesn't really have a stream that fits</p>",
        "id": 223417238,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611168600
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"131828\" href=\"/#narrow/stream/131828-t-compiler\">#t-compiler</a> maybe</p>",
        "id": 223417268,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611168604
    },
    {
        "content": "<p>What's the relationship between nightlies and betas? I had naively assumed that some nightly turned into a beta, but that doesn't appear to be the case.</p>",
        "id": 223426136,
        "sender_full_name": "durin42",
        "timestamp": 1611172509
    },
    {
        "content": "<p>that's basically true. nightlies are built from the master branch, and beta forks from master every 6 weeks. the beta branch will get backported patches for any regressions we find, then branch to stable after another 6 weeks.</p>",
        "id": 223426774,
        "sender_full_name": "cuviper",
        "timestamp": 1611172792
    },
    {
        "content": "<p>here is the description(s): <br>\n<a href=\"https://rustc-dev-guide.rust-lang.org/getting-started.html#new-features\">https://rustc-dev-guide.rust-lang.org/getting-started.html#new-features</a></p>",
        "id": 223426785,
        "sender_full_name": "oliver",
        "timestamp": 1611172795
    },
    {
        "content": "<p><code>src/stage0.txt</code> gives the exact toolchain expected for bootstrapping</p>",
        "id": 223427006,
        "sender_full_name": "cuviper",
        "timestamp": 1611172865
    },
    {
        "content": "<p>are there stable URLs for the various betas? The \"download Rust\" page doesn't make that easy to find</p>",
        "id": 223428689,
        "sender_full_name": "durin42",
        "timestamp": 1611173627
    },
    {
        "content": "<p>That is, instead of <a href=\"https://static.rust-lang.org/dist/rustc-beta-src.tar.gz\">https://static.rust-lang.org/dist/rustc-beta-src.tar.gz</a>, something that is maybe date-stamped?</p>",
        "id": 223428794,
        "sender_full_name": "durin42",
        "timestamp": 1611173662
    },
    {
        "content": "<p><code>rustup toolchain install beta-*</code>?</p>",
        "id": 223428911,
        "sender_full_name": "oliver",
        "timestamp": 1611173723
    },
    {
        "content": "<p>I can't use rustup - I'm obligated to build these myself.</p>",
        "id": 223428948,
        "sender_full_name": "durin42",
        "timestamp": 1611173740
    },
    {
        "content": "<p>you can add the target to a file in your crate</p>",
        "id": 223429072,
        "sender_full_name": "oliver",
        "timestamp": 1611173791
    },
    {
        "content": "<p>and into <code>Cargo.toml</code> soon</p>",
        "id": 223429089,
        "sender_full_name": "oliver",
        "timestamp": 1611173804
    },
    {
        "content": "<p>I'm not sure what you're trying to tell me to do. I'm managing a Rust toolchain in a monorepo, no cargo (except where required to build rustc), so I don't have a Cargo.toml?</p>",
        "id": 223429145,
        "sender_full_name": "durin42",
        "timestamp": 1611173840
    },
    {
        "content": "<p>I think the URL scheme from past shenanigans is</p>\n<div class=\"codehilite\"><pre><span></span><code>wget https://static.rust-lang.org/dist/&lt;date&gt;/rust-&lt;channel&gt;-&lt;triple&gt;\n</code></pre></div>",
        "id": 223429626,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611174068
    },
    {
        "content": "<p>Isn't that built compilers, not sources?</p>",
        "id": 223429669,
        "sender_full_name": "durin42",
        "timestamp": 1611174099
    },
    {
        "content": "<p>... yes</p>",
        "id": 223429690,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611174112
    },
    {
        "content": "<p>brb, getting more coffee</p>",
        "id": 223429705,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611174117
    },
    {
        "content": "<p>wait, no!</p>",
        "id": 223429816,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611174175
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>wget https://static.rust-lang.org/dist/&lt;date&gt;/rust-&lt;channel&gt;.tar.gz\n</code></pre></div>",
        "id": 223429842,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611174187
    },
    {
        "content": "<p>idk what's going on but sources are on GH</p>",
        "id": 223430155,
        "sender_full_name": "oliver",
        "timestamp": 1611174343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316805\">@durin42</span> is asking for the source code of the cut beta</p>",
        "id": 223430257,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611174374
    },
    {
        "content": "<p>GH?</p>",
        "id": 223430270,
        "sender_full_name": "oliver",
        "timestamp": 1611174385
    },
    {
        "content": "<p>is it tagged?</p>",
        "id": 223430279,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611174389
    },
    {
        "content": "<p>the sources are under that /date/ too</p>",
        "id": 223430301,
        "sender_full_name": "cuviper",
        "timestamp": 1611174396
    },
    {
        "content": "<p><code>rustc-beta-src.tar.xz</code></p>",
        "id": 223430441,
        "sender_full_name": "cuviper",
        "timestamp": 1611174471
    },
    {
        "content": "<p>and you'll need stable to build that</p>",
        "id": 223430509,
        "sender_full_name": "cuviper",
        "timestamp": 1611174488
    },
    {
        "content": "<p>Okay, so notionally take the date from stage0.txt and then the beta channel from that date on <a href=\"http://static.rust-lang.org\">static.rust-lang.org</a>?</p>",
        "id": 223430523,
        "sender_full_name": "durin42",
        "timestamp": 1611174497
    },
    {
        "content": "<p>and you can decide how far to take your bootstrap efforts</p>",
        "id": 223430535,
        "sender_full_name": "cuviper",
        "timestamp": 1611174503
    },
    {
        "content": "<p>yes</p>",
        "id": 223430557,
        "sender_full_name": "cuviper",
        "timestamp": 1611174513
    },
    {
        "content": "<p>(Yep, I've got a trusted stable from another part of my company that was bootstrapped all the way back to mrustc)</p>",
        "id": 223430565,
        "sender_full_name": "durin42",
        "timestamp": 1611174516
    },
    {
        "content": "<p>great thanks!</p>",
        "id": 223430599,
        "sender_full_name": "durin42",
        "timestamp": 1611174532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316805\">@durin42</span> I'm curious, why do you bootstrap that far back? Are you worried about a \"trusting trust\" attack?</p>",
        "id": 223432115,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611175235
    },
    {
        "content": "<p>Because if so I have a lot more questions, like how far back have you bootstrapped your C compiler ;)</p>",
        "id": 223432147,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611175256
    },
    {
        "content": "<p>You'd very quickly get into things you'd have to ask our security people, but the answer is yes, trusting-trust attacks.</p>",
        "id": 223432179,
        "sender_full_name": "durin42",
        "timestamp": 1611175277
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> all the way</p>",
        "id": 223432226,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611175304
    },
    {
        "content": "<p>and I'm not joking</p>",
        "id": 223432239,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611175314
    },
    {
        "content": "<p>well, I assume they actually did an early convergence test from differing c compilers</p>",
        "id": 223432313,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611175336
    },
    {
        "content": "<p>Wait, you have a compiler for C written in assembly somewhere?</p>",
        "id": 223432322,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611175341
    },
    {
        "content": "<p>I mean, that's not _technically_ necessary to defeat trusting trust</p>",
        "id": 223432373,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611175374
    },
    {
        "content": "<p>Hmm, I guess you could get three different compilers together and compare the output? I'd be shocked if any two compilers had byte identical outputs for the same code though</p>",
        "id": 223432450,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611175433
    },
    {
        "content": "<p>Or rather that's not the property you want - you want to build a compiler with three different compilers, and make sure the <em>newly built</em> compiler always produces the same code</p>",
        "id": 223432533,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611175467
    },
    {
        "content": "<p>i.e. <a href=\"https://dwheeler.com/trusting-trust/\">https://dwheeler.com/trusting-trust/</a></p>",
        "id": 223432790,
        "sender_full_name": "cuviper",
        "timestamp": 1611175607
    },
    {
        "content": "<p>Ooh nice, thanks! I hadn't seen that article, only the original by Ken Thompson</p>",
        "id": 223432924,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611175682
    },
    {
        "content": "<p>yes, one of those two people work here :P I promise we know what we're doing with this</p>",
        "id": 223433051,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611175740
    },
    {
        "content": "<p>Haha, I wasn't trying to doubt you, just curious :)</p>",
        "id": 223433117,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611175784
    },
    {
        "content": "<p>I'm actually trying to hunt down the internal stuff on how we did it. I assume it's plan9 c based stuff</p>",
        "id": 223433196,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611175812
    },
    {
        "content": "<p>but I might be totally offbase</p>",
        "id": 223433203,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1611175818
    },
    {
        "content": "<p>Wow that PDF by david wheeler scares me <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> if you have a subverted compiler all the tools you use for verifying things could be subverted too, you don't even know if <code>cmp compiler-a compiler-b</code> is accurate</p>",
        "id": 223434819,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611176503
    },
    {
        "content": "<p>this touches on that: <a href=\"https://lwn.net/Articles/841797/\">https://lwn.net/Articles/841797/</a></p>",
        "id": 223434955,
        "sender_full_name": "oliver",
        "timestamp": 1611176544
    },
    {
        "content": "<p>I guess cmp is simple enough you could write it in assembly but you still have to trust the assembler</p>",
        "id": 223435385,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611176734
    },
    {
        "content": "<p>do you trust your editor to show you the sources you're verifying?</p>",
        "id": 223438280,
        "sender_full_name": "cuviper",
        "timestamp": 1611178146
    },
    {
        "content": "<p>do you trust your CPU to execute the code faithfully?</p>",
        "id": 223438298,
        "sender_full_name": "cuviper",
        "timestamp": 1611178158
    },
    {
        "content": "<p>do you trust your RAM and storage devices?</p>",
        "id": 223438435,
        "sender_full_name": "cuviper",
        "timestamp": 1611178215
    },
    {
        "content": "<p>Do you trust your firmware? cc Bryan Cantrill</p>",
        "id": 223439116,
        "sender_full_name": "Eh2406",
        "timestamp": 1611178559
    },
    {
        "content": "<p>well right but my point is that if you need blind trust at some point <em>anyway</em>, then what's the point of doing diverse double compiling?</p>",
        "id": 223439192,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611178578
    },
    {
        "content": "<p>I guess the point is to push the trust boundary as far as possible, and strive ever farther</p>",
        "id": 223439336,
        "sender_full_name": "cuviper",
        "timestamp": 1611178674
    },
    {
        "content": "<p>people have been making computers based on fluid dynamics, could start there, assuming you trust manufacturers of pipes to not be compromised in some way ^^</p>",
        "id": 223582712,
        "sender_full_name": "nagisa",
        "timestamp": 1611269660
    }
]