[
    {
        "content": "<p>I want to make a stable version of <code>rustc_on_unimplemented</code> (see also <a href=\"#narrow/stream/122652-new-members/topic/compiler.202022/near/277521006\">https://rust-lang.zulipchat.com/#narrow/stream/122652-new-members/topic/compiler.202022/near/277521006</a>)</p>",
        "id": 277938220,
        "sender_full_name": "mejrs",
        "timestamp": 1649190075
    },
    {
        "content": "<p>As a library author i've been wanting something like it for a long time, and many others do too. So I guess my main question is whether there is an actual reason for that not being a thing, or that it hasn't happened because nobody took ownership and drove it.</p>",
        "id": 277938521,
        "sender_full_name": "mejrs",
        "timestamp": 1649190243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"119031\">@Esteban K√ºber</span> was also experimenting with this externally on Twitter: <a href=\"https://twitter.com/ekuber/status/1510713053049806848\">https://twitter.com/ekuber/status/1510713053049806848</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/ekuber/status/1510713053049806848\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/54ebb66a3826cae204b77f70c96c9cf2f21e8678/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313433383536383037393135363536333936392f4d7075547a6470745f6e6f726d616c2e6a7067\"></a><p>If you're a Rust crate maintainer, would you accept the responsibility to keep changes to your root crate and build script in order to provide nicer errors?</p><span>- Esteban KÔøΩber ‚Äì ü¶Ä‚öôÔ∏è (@ekuber)</span></div></div><p>I suspect they have ideas for how we could make this a reality.</p>",
        "id": 277939003,
        "sender_full_name": "Alice Cecile",
        "timestamp": 1649190524
    },
    {
        "content": "<p>Yeah I've read some of his thoughts before :)</p>",
        "id": 277939690,
        "sender_full_name": "mejrs",
        "timestamp": 1649190905
    },
    {
        "content": "<p>mainly <a href=\"https://internals.rust-lang.org/t/stable-diagnostic-affecting-attribute-with-unstable-api/16368\">https://internals.rust-lang.org/t/stable-diagnostic-affecting-attribute-with-unstable-api/16368</a> which i think is a great idea.</p>",
        "id": 277939750,
        "sender_full_name": "mejrs",
        "timestamp": 1649190947
    },
    {
        "content": "<p>I have to say, I'm not very keen on stabilizing the rustc-on-unimplemented API as designed today</p>",
        "id": 278364597,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649453316
    },
    {
        "content": "<p>though I would very much like to see <em>something</em> like this</p>",
        "id": 278364604,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649453323
    },
    {
        "content": "<p>I think it'd be good to start by outlining the kinds of errors we want to produce</p>",
        "id": 278364631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649453341
    },
    {
        "content": "<p>mostly my feeling is that rustc-on-unimplemented is too limited and a bit ad-hoc -- I'd like to look at some of the errors the Diesel crate would like to do, for example, and see what it will take. I think often the right error will require traversing more information than just the fact that a single trait was not implemented</p>",
        "id": 278364711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1649453390
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/318377-t-lang.2Froadmap-2024/topic/trait.20error.20diagnostics/near/278364631\">said</a>:</p>\n<blockquote>\n<p>I think it'd be good to start by outlining the kinds of errors we want to produce</p>\n</blockquote>\n<p>I think that'd be a good idea.</p>",
        "id": 278399996,
        "sender_full_name": "mejrs",
        "timestamp": 1649497578
    },
    {
        "content": "<p>I can't speak for Diesel, but pyo3 is very heavy on traits (and non-user implementable traits), so often the correct error is something like \"you can't implement this trait, use this attribute macro instead\"</p>",
        "id": 278400072,
        "sender_full_name": "mejrs",
        "timestamp": 1649497715
    }
]