[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> moving from the bisect-rustc topic</p>",
        "id": 189209512,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582806974
    },
    {
        "content": "<p>I would sort of like if triagebot becomes the place for most of our automation</p>",
        "id": 189209536,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582807012
    },
    {
        "content": "<p>like, a thing I'd love is a button somewhere so that team members can automatically get the deploy keys for github pages configured</p>",
        "id": 189209570,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582807051
    },
    {
        "content": "<p>or possibly a button \"please open a PR filling my team repo details\"</p>",
        "id": 189209646,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582807087
    },
    {
        "content": "<p>just bikeshedding... <code>@rustbot</code> / <code>bot.rust-lang.org</code> / <code>rust-lang/bot</code>?</p>",
        "id": 189209696,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582807159
    },
    {
        "content": "<p>I think rustbot, which is what we have now is fine</p>",
        "id": 189209902,
        "sender_full_name": "simulacrum",
        "timestamp": 1582807331
    },
    {
        "content": "<p>(possibly rust-bot if it's a GitHub app)</p>",
        "id": 189209921,
        "sender_full_name": "simulacrum",
        "timestamp": 1582807338
    },
    {
        "content": "<p>I would put it at either triage.r-lo or infra.r-l.o or so</p>",
        "id": 189209936,
        "sender_full_name": "simulacrum",
        "timestamp": 1582807365
    },
    {
        "content": "<p>It's not really a bot - that's not the main point</p>",
        "id": 189209973,
        "sender_full_name": "simulacrum",
        "timestamp": 1582807392
    },
    {
        "content": "<p>Just a helper</p>",
        "id": 189209993,
        "sender_full_name": "simulacrum",
        "timestamp": 1582807413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I've been experimenting with GitHub Actions for these kinds of tasks, since they don't require any additional infrastructure, and you can use actions inline in your repo, so the behaviour and automation can be made to suit specific use cases. Right now I'm making a <code>mdbook-deploy</code> action to build and deploy mdbook projects to gh-pages as well experimenting with an action to automatically create personalised repositories for project groups from the template when someone adds a project to <code>team</code>.</p>",
        "id": 189221960,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582816337
    },
    {
        "content": "<p>iirc they didn't fix not being able to push to github pages from actions</p>",
        "id": 189221991,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582816379
    },
    {
        "content": "<p>that's why we still need deploy keys</p>",
        "id": 189222005,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582816387
    },
    {
        "content": "<p>I'd <em>love</em> to be able to stop using them, but well, unless they fixed it last week without updating the feedback issue we can't do that</p>",
        "id": 189222121,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582816460
    },
    {
        "content": "<p>I know, I'm not saying it fixes that specific problem.</p>",
        "id": 189222130,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582816466
    },
    {
        "content": "<blockquote>\n<p>or possibly a button \"please open a PR filling my team repo details\"</p>\n</blockquote>\n<p>I was more talking about something like that.</p>",
        "id": 189222211,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582816521
    },
    {
        "content": "<p>I personally also find GHA somewhat painful to configure in a new repo (you need to copy a bunch of files and configure things, etc.)</p>",
        "id": 189222217,
        "sender_full_name": "simulacrum",
        "timestamp": 1582816526
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> not sure how what you propose would fix the problem?</p>",
        "id": 189222260,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582816551
    },
    {
        "content": "<p>and for some of this it's just much easier to do with a webpage, I feel</p>",
        "id": 189222262,
        "sender_full_name": "simulacrum",
        "timestamp": 1582816552
    },
    {
        "content": "<p>I probably didn't explain myself clearly, but that suggestion was for people adding themselves in the repo for the first time (like icebreakers), to remove the need to clone the repo and run the <code>add-person</code> command</p>",
        "id": 189222344,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582816588
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> There are templates provided by GitHub that have worked pretty well for me. <a href=\"https://github.com/actions/typescript-action\" target=\"_blank\" title=\"https://github.com/actions/typescript-action\">https://github.com/actions/typescript-action</a></p>",
        "id": 189222524,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582816722
    },
    {
        "content": "<p>I don't personally think templates solve anything</p>",
        "id": 189222703,
        "sender_full_name": "simulacrum",
        "timestamp": 1582816858
    },
    {
        "content": "<p>like they're excellent to have</p>",
        "id": 189222713,
        "sender_full_name": "simulacrum",
        "timestamp": 1582816864
    },
    {
        "content": "<p>but the overhead is still too high</p>",
        "id": 189222721,
        "sender_full_name": "simulacrum",
        "timestamp": 1582816869
    },
    {
        "content": "<p>compared to pushing a button</p>",
        "id": 189222727,
        "sender_full_name": "simulacrum",
        "timestamp": 1582816874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span>  Right, what I'm saying that it's actually quite easy to do that through GitHub Actions (far easier than a button), and that we could do it in ways that are more intuitive to a GitHub workflow. Because you can have any action triggered by a webhook event.</p>\n<p>For example you can create a workflow that triggers on every new comment in an pull request or an issue. That means we could do something like open a PR for the next icebreakers group and then anyone who puts \"add me\" in the pull request automatically gets added as a commit to that pull request.</p>",
        "id": 189223475,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582817360
    },
    {
        "content": "<p>The problems with a button on a website is authentication, people either need to sign in to your github app to work, or you have to create a server based app storing the secret that makes the actual pull request. Where as with GitHub Actions we can store the secret in the repo itself.</p>",
        "id": 189223820,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582817562
    },
    {
        "content": "<p>I personally find GH actions sufficiently opaque that I'd prefer it to run on our own infra. That might be a lack of experience speaking, though.</p>",
        "id": 189224477,
        "sender_full_name": "simulacrum",
        "timestamp": 1582817983
    },
    {
        "content": "<p>e.g. for the PR/issue and \"add me\" I personally find that a bit less nice than a landing page that says 'join us by clicking [here].</p>",
        "id": 189224581,
        "sender_full_name": "simulacrum",
        "timestamp": 1582818039
    },
    {
        "content": "<p>Or maybe even just links on forge to it</p>",
        "id": 189225401,
        "sender_full_name": "simulacrum",
        "timestamp": 1582818526
    },
    {
        "content": "<blockquote>\n<p>e.g. for the PR/issue and \"add me\" I personally find that a bit less nice than a landing page that says 'join us by clicking [here].</p>\n</blockquote>\n<p>A landing page has to be designed and maintained, and advantage of a comment is it very low friction, both on the user and the integration side.</p>\n<blockquote>\n<p>I personally find GH actions sufficiently opaque that I'd prefer it to run on our own infra. That might be a lack of experience speaking, though.</p>\n</blockquote>\n<p>I definitely disagree that it's opaque, and I don't understand how it's not our own infra, it is what we're using in a lot of projects on <code>rust-lang</code>. Actions are entirely git based, so you can easily create and share your own infra, and fork and extend any of GitHub's infra. For example I made the <a href=\"https://github.com/rust-lang/simpleinfra/tree/master/github-actions/simple-ci\" target=\"_blank\" title=\"https://github.com/rust-lang/simpleinfra/tree/master/github-actions/simple-ci\"><code>simple-ci</code></a> action to simplify the CI for some projects in the <code>rust-lang</code> org where the CI script is always the same <code>cargo build &amp;&amp; cargo test</code>. And this is the entire script.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">process</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;process&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\">// Third Party libraries</span>\n<span class=\"kr\">const</span> <span class=\"nx\">actions</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;@actions/core&#39;</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">exec</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">&#39;@actions/exec&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\">// Configuration</span>\n<span class=\"kr\">const</span> <span class=\"nx\">checkFmt</span> <span class=\"o\">=</span> <span class=\"nx\">actions</span><span class=\"p\">.</span><span class=\"nx\">getInput</span><span class=\"p\">(</span><span class=\"s1\">&#39;check_fmt&#39;</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"kc\">false</span>\n\n<span class=\"nx\">async</span> <span class=\"kd\">function</span> <span class=\"nx\">main</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">try</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">checkFmt</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">try</span> <span class=\"p\">{</span>\n        <span class=\"nx\">await</span> <span class=\"nx\">exec</span><span class=\"p\">.</span><span class=\"nx\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;which&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rustfmt&#39;</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">{</span>\n        <span class=\"nx\">await</span> <span class=\"nx\">exec</span><span class=\"p\">.</span><span class=\"nx\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;rustup&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;component&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;add&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rustfmt&#39;</span><span class=\"p\">])</span>\n      <span class=\"p\">}</span>\n      <span class=\"nx\">await</span> <span class=\"nx\">exec</span><span class=\"p\">.</span><span class=\"nx\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;cargo&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;fmt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--check&#39;</span><span class=\"p\">])</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">await</span> <span class=\"nx\">exec</span><span class=\"p\">.</span><span class=\"nx\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;cargo&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;build&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--workspace&#39;</span><span class=\"p\">])</span>\n    <span class=\"nx\">await</span> <span class=\"nx\">exec</span><span class=\"p\">.</span><span class=\"nx\">exec</span><span class=\"p\">(</span><span class=\"s1\">&#39;cargo&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--workspace&#39;</span><span class=\"p\">])</span>\n  <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span>\n    <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">main</span><span class=\"p\">()</span>\n</pre></div>",
        "id": 189227361,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1582819664
    },
    {
        "content": "<blockquote>\n<p>Where as with GitHub Actions we can store the secret in the repo itself.</p>\n</blockquote>\n<p>I definitely don't want to store sensitive secrets on github actions if we can avoid it</p>",
        "id": 189233567,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1582823466
    },
    {
        "content": "<p>Sorry I don't think I was clear I meant the secrets that you can store on a repo. <a href=\"https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets\" target=\"_blank\" title=\"https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets\">https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets</a></p>",
        "id": 190621705,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1584231751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219696\">@XAMPPRocky</span> yep I'm aware of those, still, I'd prefer not to store the secrets on gha</p>",
        "id": 190638969,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1584265268
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> Can you expand on your motivation? Because without that, it seems like a bit of FUD to me.</p>",
        "id": 190641010,
        "sender_full_name": "XAMPPRocky",
        "timestamp": 1584268532
    },
    {
        "content": "<p>in private</p>",
        "id": 190641011,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1584268541
    },
    {
        "content": "<p>(pinged you on discord)</p>",
        "id": 190641018,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1584268558
    },
    {
        "content": "<p>clarified with erin in private (btw, this is related to the team repo specifically, most other repos can use gha secrets just fine)</p>",
        "id": 190641460,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1584269233
    }
]