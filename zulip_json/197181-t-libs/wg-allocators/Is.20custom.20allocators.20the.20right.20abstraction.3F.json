[
    {
        "content": "<p><strong>matthieum</strong> has started an <a href=\"https://internals.rust-lang.org/t/is-custom-allocators-the-right-abstraction/13460\">interesting proposal at IRL.org</a> which is really worth taking a look at.</p>\n<p><strong>TL;DR: </strong><br>\nUse a more generic trait for collections, which abstracts over storages rather than allocators.</p>",
        "id": 218178617,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1606593524
    },
    {
        "content": "<p>Storage instead of an Allocator as a generic makes sense for contiguous data structures (Vec, Box), but not as much for non-contiguous ones (LinkedList), I think?</p>",
        "id": 218179020,
        "sender_full_name": "nagisa",
        "timestamp": 1606594166
    },
    {
        "content": "<p>Agreed</p>",
        "id": 218179076,
        "sender_full_name": "John Ericson",
        "timestamp": 1606594231
    },
    {
        "content": "<p>But it would be nice to do both</p>",
        "id": 218179079,
        "sender_full_name": "John Ericson",
        "timestamp": 1606594237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123586\">nagisa</span> <a href=\"#narrow/stream/197181-t-libs.2Fwg-allocators/topic/Is.20custom.20allocators.20the.20right.20abstraction.3F/near/218179020\">said</a>:</p>\n<blockquote>\n<p>Storage instead of an Allocator as a generic makes sense for contiguous data structures (Vec, Box), but not as much for non-contiguous ones (LinkedList), I think?</p>\n</blockquote>\n<p>Interesting question, the OP says, it <em>could</em> be possible.</p>",
        "id": 218179083,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1606594252
    },
    {
        "content": "<p>(I wrote a one off ring buffer recently and was sad)</p>",
        "id": 218179088,
        "sender_full_name": "John Ericson",
        "timestamp": 1606594263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"220594\">John Ericson</span> <a href=\"#narrow/stream/197181-t-libs.2Fwg-allocators/topic/Is.20custom.20allocators.20the.20right.20abstraction.3F/near/218179079\">said</a>:</p>\n<blockquote>\n<p>But it would be nice to do both</p>\n</blockquote>\n<p>Like having <code>AllocRef</code> and <code>Storage</code>?</p>",
        "id": 218179090,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1606594268
    },
    {
        "content": "<p>That would be simply possible with <code>AllocatorStorage</code> I think.</p>",
        "id": 218179093,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1606594293
    },
    {
        "content": "<p>I'll need to look at the propose, but i mean in vague terms all collections should allow some variation on this front, and the \"flat\" ones should allow more</p>",
        "id": 218182695,
        "sender_full_name": "John Ericson",
        "timestamp": 1606600039
    }
]