[
    {
        "content": "<p>I'm starting to wonder what good <code>&amp;mut self</code> on all the <code>Alloc</code> method does. Especially when it's renamed to <code>AllocHandle</code>, what does it mean to use a mutable reference to a handle?</p>",
        "id": 165049991,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557215120
    },
    {
        "content": "<p>I also have a hard time coming up with a scenario where <code>&amp;self</code> wouldn’t work or make things harder. OTOH, are there cases where it would make things easier?</p>",
        "id": 165050091,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1557215236
    },
    {
        "content": "<p>I wouldn't have to get a mutable ref in the code I'm writing right now.</p>",
        "id": 165050502,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557215743
    },
    {
        "content": "<p>Can you share that code? I’m curious in what kind of situation it makes a difference</p>",
        "id": 165052591,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1557218032
    },
    {
        "content": "<p>Essentially my handle is an integer, and it's used to call into the moz_arena_* functions in mozjemalloc.</p>",
        "id": 165052689,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557218128
    },
    {
        "content": "<p>and I have a global for the id of the default arena</p>",
        "id": 165052746,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557218166
    },
    {
        "content": "<p>So the thing, really, is that <code>Alloc</code> with <code>&amp;mut self</code> makes sense for the implementation of the allocator itself. And <code>AllocHandle</code> with <code>&amp;self</code> for the handle.</p>",
        "id": 165053198,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557218644
    },
    {
        "content": "<p>where, in fact, for the handle type, we don't really need everything... we only need something that gets us a &amp;mut Alloc</p>",
        "id": 165053221,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557218691
    },
    {
        "content": "<p>which circles back to the <code>AllocFrom</code> idea</p>",
        "id": 165053256,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557218731
    },
    {
        "content": "<p>(kinda)</p>",
        "id": 165053260,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1557218752
    }
]