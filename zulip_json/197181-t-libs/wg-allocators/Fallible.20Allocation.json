[
    {
        "content": "<p>Hey Y'all, what's the current \"state of the art\" \"hip\" \"newfangled\" situation for fallible allocators that aren't just using <code>try_reserve</code>?</p>",
        "id": 198322734,
        "sender_full_name": "Benjamin Brittain",
        "timestamp": 1590069067
    },
    {
        "content": "<p>Allocators are fallible in general as every allocating method returns <code>Result&lt;MemoryBlock, AllocErr&gt;</code>. Only the collection types (like <code>Vec</code>) don't forward the result but calls <code>handle_alloc_error</code> instead. Currently it's not fully resolved if we want an associated error type on <code>AllocRef</code>, thus <code>try_reserve</code> is blocked on this decision. See <a href=\"https://github.com/rust-lang/rust/issues/48043#issuecomment-631054957\">#48043 (comment)</a> and the following comments for more information on that.</p>",
        "id": 198366893,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1590090200
    }
]