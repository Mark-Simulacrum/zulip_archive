[
    {
        "content": "<p>I just wanted to post and draw some attention to this PR in case anyone here has opinions about merging it.<br>\n<a href=\"https://github.com/rust-lang/rust/pull/86844\">https://github.com/rust-lang/rust/pull/86844</a></p>",
        "id": 250857084,
        "sender_full_name": "Wesley Wiser",
        "timestamp": 1630020751
    },
    {
        "content": "<p>I want to <em>re-raise</em> attention to this PR (<a href=\"https://github.com/rust-lang/rust/issues/86844\">#86844</a>), and to the alternative \" create -Z force-allocator-shim codegen option\" PR <a href=\"https://github.com/rust-lang/rust/issues/94389\">#94389</a> which tries to provide a narrower solution to a narrower problem (IIUC). I'm looking at both at the moment but I think I colud use more context from you all about what people need in practice.</p>",
        "id": 277469326,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648842450
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> You have stated that you prefer PR <a href=\"https://github.com/rust-lang/rust/issues/86844\">#86844</a>. I do not yet have any problem with landing <a href=\"https://github.com/rust-lang/rust/issues/86844\">#86844</a>, apart from it just <em>being</em> a bigger change. So my immediate question is: Is there a reason to <em>not</em> land <a href=\"https://github.com/rust-lang/rust/issues/94389\">#94389</a> anyway, while separately deciding about <a href=\"https://github.com/rust-lang/rust/issues/86844\">#86844</a>?</p>",
        "id": 277469646,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648842662
    },
    {
        "content": "<p>The option introduced in that PR would need to be removed again after my PR.</p>",
        "id": 277469711,
        "sender_full_name": "bjorn3",
        "timestamp": 1648842711
    },
    {
        "content": "<p>Oh, I suppose that's a drawback</p>",
        "id": 277469780,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648842728
    },
    {
        "content": "<p>okay</p>",
        "id": 277469782,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648842729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133247\">@bjorn3</span> I'm overall in favor of this change, though its insta-stable nature is of course risky</p>",
        "id": 277476902,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648846793
    },
    {
        "content": "<p>Would you feel better if I added a dummy __rust_no_alloc_shim_unstable function to the allocator shim to force linking in the allocator shim even with #[global_allocator] for now?</p>",
        "id": 277477172,
        "sender_full_name": "bjorn3",
        "timestamp": 1648846907
    },
    {
        "content": "<p>that's an interesting idea</p>",
        "id": 277477184,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648846919
    },
    {
        "content": "<p>by the way, just to confirm: the <code>_rg_</code>- and <code>_rdl_</code>-prefixed symbols are hidden and cannot be linked from user code, right? I.e. there's no way that aspect of the changes here, the replacement of <code>_rg_</code> with <code>_rust_</code>, there's no way someone could have been linking to the <code>_rg_</code>- forms, right?</p>",
        "id": 277477322,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648846995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"133247\">bjorn3</span> <a href=\"#narrow/stream/197181-t-libs.2Fwg-allocators/topic/Support.20.23.5Bglobal_allocator.5D.20without.20the.20allocator.20shim.20.238684/near/277477172\">said</a>:</p>\n<blockquote>\n<p>Would you feel better if I added a dummy __rust_no_alloc_shim_is_unstable function to the allocator shim to force linking in the allocator shim even with #[global_allocator] for now?</p>\n</blockquote>\n<p>What would that mean for your goal of making this code work with <code>--emit obj</code> ?</p>",
        "id": 277477361,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648847025
    },
    {
        "content": "<p>(I assume it would mean <em>that</em> part of the goal would be delayed)</p>",
        "id": 277477441,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648847060
    },
    {
        "content": "<p><code>__rg_*</code> and <code>__rdl_*</code> symbols can technically be linked by user code, but we don't provide any guarantee it will remain to work afaik just like for all other internal <code>__*</code> symbols.</p>",
        "id": 277477763,
        "sender_full_name": "bjorn3",
        "timestamp": 1648847265
    },
    {
        "content": "<p>oh, okay. I must have misunderstood some of the comments I read</p>",
        "id": 277477865,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648847297
    },
    {
        "content": "<p><code>__rust_no_alloc_shim_is_unstable</code> would delay allowing stable <code>--emit obj</code> with liballoc. Users who want want to commit to using it unstable only have to define this symbol and then don't have to define the various <code>__rust_*</code> symbols of the allocator shim. For example rust-for-linux currently defines them itself and would switch to defining <code>__rust_no_alloc_shim_is_unstable</code> until we stabilize this.</p>",
        "id": 277478067,
        "sender_full_name": "bjorn3",
        "timestamp": 1648847414
    },
    {
        "content": "<p>Hmm. that <em>does</em> sound better.</p>",
        "id": 277478148,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648847487
    },
    {
        "content": "<p>Okay, yeah, if you can update the PR to look like that, then I'd r+ it pronto, I think.</p>",
        "id": 277478170,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648847504
    },
    {
        "content": "<p>thanks for the clarifications!</p>",
        "id": 277478260,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648847544
    },
    {
        "content": "<p>I will update it tomorrow.</p>",
        "id": 277478447,
        "sender_full_name": "bjorn3",
        "timestamp": 1648847674
    }
]