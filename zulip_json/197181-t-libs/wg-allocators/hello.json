[
    {
        "content": "<p>Welcome to <a class=\"stream\" data-stream-id=\"197181\" href=\"/#narrow/stream/197181-t-libs.2Fwg-allocators\">#t-libs/wg-allocators</a>.</p>\n<p><strong>Description</strong>: Paving a path for a standard set of allocator traits to be used in collections!</p>",
        "id": 164747825,
        "sender_full_name": "Welcome Bot",
        "timestamp": 1556832915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220097\">@Erich Gubler</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 164747928,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1556833009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220097\">@Erich Gubler</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> trying again...</p>",
        "id": 164747939,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1556833024
    },
    {
        "content": "<p>Oh hi! :)</p>",
        "id": 164751159,
        "sender_full_name": "Erich Gubler",
        "timestamp": 1556836260
    },
    {
        "content": "<p>Okay, so, what are action items right now? Should I just comb over the Allocator API tracking issue and figure out how to summarize it?</p>",
        "id": 164751191,
        "sender_full_name": "Erich Gubler",
        "timestamp": 1556836306
    },
    {
        "content": "<p>I think the first thing for using the allocator_api in collections is to associate <code>Box&lt;T, A: Alloc = Global&gt;</code>.  <a href=\"https://github.com/rust-lang/rust/pull/58457\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/pull/58457\">#58457</a> did some work on this, but it requires a <code>Default</code> bound as <code>DispatchFromDyn</code> could only use <code>PhantomData</code> as extra fields. Two days ago I made a PR to change this. <code>DispatchFromDyn</code> now can take any ZST field with alignment of 1, thus <code>Default</code> can be dropped as bound. </p>\n<p>I made some tests on this: <a href=\"https://github.com/TimDiekmann/rust/commit/94031fd1f3c6dc1cb48474d5144003d697660b15\" target=\"_blank\" title=\"https://github.com/TimDiekmann/rust/commit/94031fd1f3c6dc1cb48474d5144003d697660b15\">TimDiekmann@<code>97031fd</code></a><br>\nSadly, <code>rustc_typeck</code> (where <code>DispatchFromDyn</code> is checked) is used from the stage0 compiler, thus I had to dance with <code>#[cfg(stage0)]</code>.</p>",
        "id": 164751498,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1556836620
    },
    {
        "content": "<p>Additionally we should decide, if we use <code>#[feature(allocator_api)]</code> for both, the api and the association with the collections, or split it up.</p>",
        "id": 164751584,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1556836707
    },
    {
        "content": "<p>After this is finished, I think we can split up the work and associate an allocator with other collections.</p>",
        "id": 164751694,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1556836834
    },
    {
        "content": "<blockquote>\n<p>I just comb over the Allocator API tracking issue and figure out how to summarize it?</p>\n</blockquote>\n<p>Maybe one issue per item on the wg-repository?</p>",
        "id": 164751784,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1556836941
    },
    {
        "content": "<p>ZSTs are not the long term play, though... we still need a story for non-ZST <code>A</code> in <code>Box&lt;T, A&gt;</code>. There was also the question whether the bound on A should be left out of the <code>struct Box</code> definition.</p>",
        "id": 164761236,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1556848500
    },
    {
        "content": "<p>Actually... without a bound that says <code>A</code> is a ZST, how can <code>DispatchFromDyn</code> be impl'ed?</p>",
        "id": 164761312,
        "sender_full_name": "Mike Hommey",
        "timestamp": 1556848609
    },
    {
        "content": "<p>No, you are right, but in unblocks the PR. To proceed and implement it the semver compatible way, it can be implemented for <code>Global</code>.</p>",
        "id": 164770990,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1556864363
    },
    {
        "content": "<p>Iâ€™ve added a README and filed a couple of issues in <a href=\"https://github.com/rust-lang/wg-allocators\" target=\"_blank\" title=\"https://github.com/rust-lang/wg-allocators\">https://github.com/rust-lang/wg-allocators</a></p>",
        "id": 164774097,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1556869123
    },
    {
        "content": "<p>Wow, in 17 hours we filed 11 issues with 32 comments! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 164842037,
        "sender_full_name": "Tim Diekmann",
        "timestamp": 1556931099
    }
]