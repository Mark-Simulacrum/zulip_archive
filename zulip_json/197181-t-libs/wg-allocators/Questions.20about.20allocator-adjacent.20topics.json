[
    {
        "content": "<p>I'm not sure if these things are within the remit of the allocators WG or not, but it seems like interested folk might be around.</p>\n<p>Has there been any work on placement new or the <code>box</code> syntax since the RFC was unaccepted and implementation removed? Any discussion of what priority that work should have?</p>\n<p>Is there a summary of allocation-related work that is necessary/desired for kernel development or similarly low-level work? (Specifically for the Linux kernel and/or more generally).</p>",
        "id": 247277868,
        "sender_full_name": "Nick Cameron",
        "timestamp": 1627343286
    },
    {
        "content": "<p>AFAIK this is outside the scope of the allocators WG. At the very least, it has never been discussed within the WG.</p>",
        "id": 248388213,
        "sender_full_name": "Amanieu",
        "timestamp": 1628101461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256841\">@Nick Cameron</span> Not been discussed, but I have thought about it, I think placement new a bit too magical, and <code>MaybeUninit</code> too low-level, and we'll need to go all the way back to those pre-1.0 \"type state\" ideas to get it right :D</p>",
        "id": 248388548,
        "sender_full_name": "John Ericson",
        "timestamp": 1628101624
    },
    {
        "content": "<p>So far, the kernel side seems fine with <code>try_</code> methods, which does side step the issue of really fine-grained control and not wasting effort building values before allocating, but I worry pushing on those others things will be a big quagmire, so I rather not block any kernel stuff on it.</p>",
        "id": 248388819,
        "sender_full_name": "John Ericson",
        "timestamp": 1628101758
    }
]