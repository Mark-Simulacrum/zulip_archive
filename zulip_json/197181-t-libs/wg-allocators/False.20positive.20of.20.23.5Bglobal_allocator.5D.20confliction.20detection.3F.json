[
    {
        "content": "<p>Hello. I posted a question about the #[global_allocator] conflictions to StackOverflow. However, one of the Rust community members said that it may be a false positive rather than a usage problem. Could someone check the question? <a href=\"https://stackoverflow.com/questions/68955652/how-to-avoid-global-allocator-conflicts\">https://stackoverflow.com/questions/68955652/how-to-avoid-global-allocator-conflicts</a></p>",
        "id": 251110193,
        "sender_full_name": "Hiroki Tokunaga",
        "timestamp": 1630218192
    },
    {
        "content": "<p>Would setting <code>resolver = 2</code> in the <code>[workspace]</code> section of the root <code>Cargo.toml</code> work?</p>",
        "id": 251110592,
        "sender_full_name": "bjorn3",
        "timestamp": 1630218701
    },
    {
        "content": "<p>It didn't work.</p>",
        "id": 251110700,
        "sender_full_name": "Hiroki Tokunaga",
        "timestamp": 1630218814
    },
    {
        "content": "<p>Then I think only removing <code>heap</code> from the default features of <code>bar</code> will help</p>",
        "id": 251110859,
        "sender_full_name": "bjorn3",
        "timestamp": 1630219015
    },
    {
        "content": "<p>So I removed the <code>heap</code> feature from the default ones and made <code>baz</code> depend on <code>bar</code> with the <code>heap</code> feature. However, this caused the same error.</p>",
        "id": 251111156,
        "sender_full_name": "Hiroki Tokunaga",
        "timestamp": 1630219390
    },
    {
        "content": "<p>If foo, bar and baz are all compiled together, the heap feature will be globally enabled for bar if either foo or baz depends on it. Cargo will take the union of all the features each dependent crate requires and compile dependencies <strong>once</strong> with these features.</p>",
        "id": 251115726,
        "sender_full_name": "bjorn3",
        "timestamp": 1630224643
    },
    {
        "content": "<p>Thank you for the information. Could I quote your comment as an answer to the question, or could you answer it?</p>",
        "id": 251133124,
        "sender_full_name": "Hiroki Tokunaga",
        "timestamp": 1630244122
    },
    {
        "content": "<p>I don't have a stackoverflow account. It is fine to quote my comment.</p>",
        "id": 251141260,
        "sender_full_name": "bjorn3",
        "timestamp": 1630252873
    }
]