[
    {
        "content": "<p>I'd definitely like to talk more about how we can integrate the reference into the lang team.</p>",
        "id": 225879525,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979527
    },
    {
        "content": "<p>i'm kind of dropping this topic here as a placeholder</p>",
        "id": 225879548,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979534
    },
    {
        "content": "<p>I'm sorry I missed the audio meeting discussion-- was super busy--</p>",
        "id": 225879567,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979541
    },
    {
        "content": "<p>I think I might want to start a bit with what goals we are attempting to serve</p>",
        "id": 225879617,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979564
    },
    {
        "content": "<p>I have to thnk abot my own answer to that question, but I'd encourage people to just brainstorm a bit on what kinds of things they want to see</p>",
        "id": 225879679,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979588
    },
    {
        "content": "<p>I'll throw in a few to get things started from my perspective</p>",
        "id": 225879699,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979596
    },
    {
        "content": "<ul>\n<li>A place where people can go to get answer to detailed questions</li>\n</ul>",
        "id": 225879935,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979680
    },
    {
        "content": "<ul>\n<li>Complete enough that I don't have to ask \"do we need to update the reference?\" but rather can just assume that's true =)</li>\n</ul>",
        "id": 225879989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979701
    },
    {
        "content": "<ul>\n<li>Developing reference chapters should be part of the feature development process (it sort of is, but i think we can integrate much better)</li>\n</ul>",
        "id": 225880049,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979722
    },
    {
        "content": "<ul>\n<li>one question mark for me: I don't think the reference wants to be a <em>specification</em> -- i think it wants to be detailed enough for people to learn, but targeted at end users</li>\n</ul>",
        "id": 225880189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979765
    },
    {
        "content": "<p>Thanks for opening the topic!</p>\n<p>My own opinion I think aligns with what you said. I think the reference is a good utility for learning the details, or more advanced topics. When I was first learning Rust, the \"Patterns\" chapter was one of the first things I saw in the Reference, and it helped me understand patterns much more clearly than other texts could (and it was one of the first chapters I worked on writing).</p>\n<p>I think a non-goal for now is to make it a language spec, and I mainly say this because of our lack of resources. There's a bit of a gray area between \"reference\" and \"spec\", so it's not always clear what the difference is. However, I don't think it is possible to have a standards-level quality document with just a few volunteers randomly contributing, and I don't see that changing in the foreseeable future.</p>\n<p>As for completeness, there are a few areas that have huge holes. Things like type inference, trait solving, and type checking are for the most part completely undocumented. Those are <em>huge</em> topics, so that is unlikely to change. I just started a chapter on <a href=\"https://doc.rust-lang.org/nightly/reference/names.html\">name resolution</a>, but I suspect it will take a very long time for me to finish it. </p>\n<p>So, I think it would be great if people assumed changes in rustc need to be reflected in the reference, with the caveat that the huge holes can be ignored.</p>\n<p>I try to monitor PRs to see when language changes happen, but it is impossible for me to catch them all. Sometimes the PR description is too opaque for me to even know it is changing something. Sometimes the PR changes something accidentally. Sometimes the changes happen during review long after the PR has been opened, and I won't catch those. It would be great if more people were at least opening issues to track changes that are needed.</p>\n<p>There is issue <a href=\"https://github.com/rust-lang/reference/issues/599\">https://github.com/rust-lang/reference/issues/599</a> which goes into lower-level details about what the reference should be. I would like to make progress on some of those individual questions, but unfortunately I am spread thin and don't have much time.</p>",
        "id": 225884113,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612981448
    },
    {
        "content": "<p>it seems at a glance that the stabilization PR doesn't specifically require<br>\nconsideration of documentation:<br>\n<a href=\"https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\">https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr</a><br>\nnot having stabilized anything personally I can't speak from experience but it<br>\nseems reasonable that a stabilization PR would present a review of relevant<br>\ndocumentation so it can be examined with a view for sufficiency</p>",
        "id": 225903032,
        "sender_full_name": "oliver",
        "timestamp": 1612989188
    },
    {
        "content": "<p>It used to be a requirement to include Reference documentation if needed, but it was dropped because of bandwidth issues.</p>\n<p>Otherwise, what you said mirrors my thoughts. Part of the problem with building reference chapters early on is that the features often have changes that require changing of the reference material. The unsafe book is/was meant to be the area for working on documentation for features in progress, but I'm not sure how well that's panned out in practice.</p>",
        "id": 225925830,
        "sender_full_name": "isHavvy",
        "timestamp": 1612998394
    },
    {
        "content": "<p>I think that stabilization guide does make it clear that the documentation should exist.  The very first section is about documentation, and the \"Stabilization Report\" includes the note to have \"Links to the documentations (the PRs we have made in the previous steps)\".   I think process-wise it should be clear that documentation should exist, but in reality people don't always do that.  Also, a lot of changes aren't exactly \"stabilize this feature\", but are more like \"Accept tuple.0.0 as tuple indexing (take 2)\".</p>",
        "id": 225925897,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612998433
    },
    {
        "content": "<p>For the most part, stabilizations of big features have usually been handled well, with stabilization reports, and often PRs to the reference.  It's the random non-stabilization PRs that make it difficult.</p>",
        "id": 225926033,
        "sender_full_name": "Eric Huss",
        "timestamp": 1612998493
    },
    {
        "content": "<p>it seemed documentation for this process merely meant the recorded PR process<br>\n[emphasis added] <code>Links to the documentations (*the _PRs_ we have made in the\nprevious steps*).</code> it wouldn't be unimaginable to have feature discussion and<br>\nreview form the 'documentations' though it might not be a very reasonable<br>\npresentation to the user</p>",
        "id": 225929297,
        "sender_full_name": "oliver",
        "timestamp": 1613000338
    },
    {
        "content": "<p>also fwiw my first reading of this suggested two distinct processes of<br>\n'documentation PRs' and 'stabilization PRs' and not that those were necessarily<br>\nrelated</p>",
        "id": 225929641,
        "sender_full_name": "oliver",
        "timestamp": 1613000542
    },
    {
        "content": "<p>the unstable book does do this which I think is what @isHavvy meant to<br>\nrefer to i.e.:<br>\n<a href=\"https://doc.rust-lang.org/nightly/unstable-book/language-features/associated-type-bounds.html\">https://doc.rust-lang.org/nightly/unstable-book/language-features/associated-type-bounds.html</a>, also:<br>\n<a href=\"#narrow/stream/237824-t-lang.2Fdoc/topic/how.20active.2Ers.20features.20land.20in.20the.20unstable.20book\">https://rust-lang.zulipchat.com/#narrow/stream/237824-t-lang.2Fdoc/topic/how.20active.2Ers.20features.20land.20in.20the.20unstable.20book</a><br>\nI had spent a minute or two looking through with a view to lift the<br>\ninformation from the links though where I looked the basic information <em>is</em><br>\ngenerally contained in the PRs and generally isn't unavailable</p>",
        "id": 225930895,
        "sender_full_name": "oliver",
        "timestamp": 1613001317
    },
    {
        "content": "<p>I think we should overhaul the stabilization process</p>",
        "id": 227337030,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614027879
    },
    {
        "content": "<p>I definitely think we should have a section in stabilization reports that includes links to reference PRs</p>",
        "id": 227337062,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614027895
    },
    {
        "content": "<p>For most big feature stabilizations, that already happens most of the time (and the instructions <a href=\"https://rustc-dev-guide.rust-lang.org/stabilization_guide.html?highlight=report#write-a-stabilization-report\">here</a> mention including links).   It's usually the smaller things that slip by without fanfare.</p>",
        "id": 227337828,
        "sender_full_name": "Eric Huss",
        "timestamp": 1614028236
    }
]