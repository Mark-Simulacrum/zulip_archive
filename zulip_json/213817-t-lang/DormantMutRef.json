[
    {
        "content": "<p>We currently have a btree PR <a href=\"https://github.com/rust-lang/rust/pull/74437/files#diff-1669d4df3278e7aa0eb152f5d13bb141\">adding an interesting unsafe abstraction</a> that I haven't seen before, but that could be more generally useful: <code>DormantMutRef</code>.<br>\nNot sure what to do with that right now beyond using it in btree, but Cc some people that have expressed interest in such unsafe abstractions in the past: <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> <span class=\"user-mention\" data-user-id=\"256759\">@boats</span> <span class=\"user-group-mention\" data-user-group-id=\"810\">@WG-unsafe-code-guidelines</span></p>",
        "id": 206681138,
        "sender_full_name": "RalfJ",
        "timestamp": 1597230201
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"1977\">@T-lang</span> FYI, here is an interesting little abstraction for unsafe raw pointer code that turned out very useful in <code>BTreeMap</code>: <a href=\"https://github.com/rust-lang/rust/pull/74437/files#diff-1669d4df3278e7aa0eb152f5d13bb141\"><code>DormantMutRef</code></a>. I think it might be more generally useful even, so this seems relevant for the \"unsafe code ergonomics\" that keep coming up.</p>",
        "id": 209601675,
        "sender_full_name": "RalfJ",
        "timestamp": 1599720976
    }
]