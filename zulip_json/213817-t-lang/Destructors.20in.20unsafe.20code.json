[
    {
        "content": "<p>So in writing ringbahn I've so far had 2 memory safety bugs, both of which were ultimately caused by destructors running in unsafe code that I wrote without properly considering the implicit destructors. It would be nice to have some sort of optional lint to warn about every destructor running in an unsafe scopes (which would naturally be silenced by introducing an explicit call to <code>drop</code>).</p>",
        "id": 199880520,
        "sender_full_name": "boats",
        "timestamp": 1591365877
    },
    {
        "content": "<p>One bug was the classic using assignment when I should've used ptr::write, the other was that I had <code>NonNull&lt;Mutex&lt;_&gt;&gt;</code> and did <code>as_ref().lock()</code>, then freed the mutex's backing memory without first dropping the lock.</p>",
        "id": 199880682,
        "sender_full_name": "boats",
        "timestamp": 1591365947
    },
    {
        "content": "<p>Unsafe code is often a situation where implicitly inserting code in an order that can be hard to determine is a recipe for disaster, and thats exactly what destructors do by default.</p>",
        "id": 199880859,
        "sender_full_name": "boats",
        "timestamp": 1591366005
    },
    {
        "content": "<p>There was a similar request for a clippy lint: <a href=\"https://github.com/rust-lang/rust-clippy/issues/3915\">https://github.com/rust-lang/rust-clippy/issues/3915</a></p>",
        "id": 199886687,
        "sender_full_name": "oli",
        "timestamp": 1591368393
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> for having a lint like that.</p>",
        "id": 199886764,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591368423
    }
]