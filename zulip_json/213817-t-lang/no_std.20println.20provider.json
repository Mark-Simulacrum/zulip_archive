[
    {
        "content": "<p>Has there been any discussion of a sort of <code>#[global_allocator]</code>-like functionality for providing something that the lang can use to allow printlns and whatnot on no_std? i searched a bit on github and didn't find anything.</p>",
        "id": 220835865,
        "sender_full_name": "devsnek",
        "timestamp": 1608765684
    },
    {
        "content": "<p>sounds like an excellent idea! also relevant is allowing redirection for things like buffering output from test cases, since the standard library's testing framework is not always the best option.</p>",
        "id": 220843694,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1608775992
    },
    {
        "content": "<p>I would love to see that as well.</p>",
        "id": 220843846,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608776292
    },
    {
        "content": "<p>I've seen some proposals for a globals mechanism based on traits.</p>",
        "id": 220843850,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608776315
    },
    {
        "content": "<p>it seems like there will need to be a lot of scary work in the compiler, at least from my cursory glance, but maybe a good start would be defining a proper framework for things like global_allocator, so it isn't totally ad-lib. is this the kind of thing that would need an rfc?</p>",
        "id": 220843935,
        "sender_full_name": "devsnek",
        "timestamp": 1608776503
    },
    {
        "content": "<p>I'm guessing yes, that it would need an RFC since it's a pretty big change, but it probably makes sense to have more pre-RFC discussion first.</p>",
        "id": 220845529,
        "sender_full_name": "Noah Lev",
        "timestamp": 1608779457
    },
    {
        "content": "<p>like technical details? i was thinking a trait with <code>stdout</code> and <code>stderr</code> methods, mostly drop-in to how _print and _eprint work right now</p>",
        "id": 220846268,
        "sender_full_name": "devsnek",
        "timestamp": 1608780862
    },
    {
        "content": "<p>I think associated types that implement Write would work.</p>",
        "id": 220846341,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608781019
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rfcs/pull/2725#issuecomment-701527929\">https://github.com/rust-lang/rfcs/pull/2725#issuecomment-701527929</a></p>",
        "id": 220847480,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1608783240
    }
]