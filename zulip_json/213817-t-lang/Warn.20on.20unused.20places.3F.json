[
    {
        "content": "<p>These two (silly) functions do very different things:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">demo1</span><span class=\"p\">(</span><span class=\"n\">x</span>: <span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,))</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">String</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">demo2</span><span class=\"p\">(</span><span class=\"n\">x</span>: <span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,))</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">String</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>We probably can't change them to have the same semantics (since it could change drop order for some code), but maybe it would be worth warning about the latter?</p>\n<p>Currently this code is warning-free:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">demo3</span><span class=\"p\">(</span><span class=\"n\">x</span>: <span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,))</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I would propose that we add a new lint for that, suggesting that it be replaced with <code>drop(x.0);</code> (or just removed, if <code>Copy</code>).  Strawman names, <code>unused_place</code> or <code>place_statement</code> or <span aria-label=\"bike\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bike\">:bike:</span><span aria-label=\"house\" class=\"emoji emoji-1f3e0\" role=\"img\" title=\"house\">:house:</span>.</p>\n<p>Thoughts?</p>",
        "id": 221715040,
        "sender_full_name": "scottmcm",
        "timestamp": 1609888699
    },
    {
        "content": "<p>While I have no idea for good names, I like the idea of such a warning</p>",
        "id": 221715469,
        "sender_full_name": "Poliorcetics",
        "timestamp": 1609888963
    },
    {
        "content": "<p>also see<br>\n<a href=\"https://github.com/rust-lang/rust/issues/79735\">https://github.com/rust-lang/rust/issues/79735</a><br>\n<a href=\"https://github.com/rust-lang/rust/issues/80059\">https://github.com/rust-lang/rust/issues/80059</a><br>\n<a href=\"https://github.com/rust-lang/unsafe-code-guidelines/issues/261\">https://github.com/rust-lang/unsafe-code-guidelines/issues/261</a></p>",
        "id": 221719075,
        "sender_full_name": "RalfJ",
        "timestamp": 1609891427
    },
    {
        "content": "<p>(Yeah, I probably should have mentioned those.  They're what had me thinking about this.)</p>",
        "id": 221726623,
        "sender_full_name": "scottmcm",
        "timestamp": 1609899299
    }
]