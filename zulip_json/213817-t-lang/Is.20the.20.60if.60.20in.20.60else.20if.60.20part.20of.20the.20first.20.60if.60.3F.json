[
    {
        "content": "<p>Right now, the reference states:</p>\n<blockquote>\n<p>An <em>if expression</em> is a conditional branch in program control.<br>\nThe syntax of an if expression is an expression, called the <em>condition operand</em>, then a block expression, called the <em>consequent</em>, then any number of <code>else if</code> conditions and blocks, and an optional trailing <code>else</code> block.</p>\n</blockquote>\n<p>I want to change the syntax so that it's always a single optional else followed by an expression, called the <em>antecedent</em> and that it must be a block expression, an if expression, or an if let expression. Is that an okay change to make without lang team sign-off, or should I get official sign-off for this?</p>",
        "id": 229174290,
        "sender_full_name": "isHavvy",
        "timestamp": 1615110825
    },
    {
        "content": "<p>It seems like your proposed change matches the grammar, so I would say it is fine.  I think that is also how rustc represents it in the AST.</p>\n<p>I'm not sure about using the word \"antecedent\".  I've not seen that in PL texts. I'm guessing that comes from logic?  I'm not too familiar with that, but it seems strange to me. I've always seen it called the \"else clause\" or similar.</p>",
        "id": 229197318,
        "sender_full_name": "Eric Huss",
        "timestamp": 1615132328
    },
    {
        "content": "<p>Ditto about \"antecedent\", that doesn't match the usage in logic either</p>",
        "id": 229197345,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615132372
    },
    {
        "content": "<p>the antecedent is the P in \"P -&gt; Q\"</p>",
        "id": 229197352,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615132385
    },
    {
        "content": "<p>it's a real stretch to identify the else clause as that</p>",
        "id": 229197382,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615132411
    },
    {
        "content": "<p>(the consequent is the Q in \"P -&gt; Q\", which seems more like the \"then\" clause than the \"else\" clause) EDIT: actually this matches the usage in the quote, I misread</p>",
        "id": 229197469,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615132489
    },
    {
        "content": "<p>I mean it's literally read \"if P then Q\"</p>",
        "id": 229197537,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615132553
    },
    {
        "content": "<p>If you want a term other than \"else clause\", \"fallback clause\" is an option, although that gives a kind of priority to the \"then\" clause</p>",
        "id": 229197610,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615132601
    },
    {
        "content": "<p>Yeah, I would just call it the \"else expression\".</p>",
        "id": 229207427,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615141595
    },
    {
        "content": "<p>That aside, this seems like a perfectly reasonable approach.</p>",
        "id": 229207435,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615141614
    },
    {
        "content": "<p>I don't think there's anything special rust is doing to keep if/else-if chains together.</p>",
        "id": 229207471,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615141647
    },
    {
        "content": "<p>So I don't know why the reference would need to reflect that.</p>",
        "id": 229207477,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615141657
    },
    {
        "content": "<p>The reference should still explain the common pattern of if/else-if chaining, but doesn't need to treat it as a single grammatical construct.</p>",
        "id": 229207488,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615141681
    },
    {
        "content": "<p>Well it is necessary to have if else if chains or something equivalent as part of the grammar since <code>if cond { e1 } else e2</code> is not valid but <code>if cond { e1 } else if cond2 { e2 }</code> is</p>",
        "id": 229209089,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615142970
    },
    {
        "content": "<p>if the grammar only allowed the form <code>if cond { e1 } else { e2 }</code> then you would have to write <code>if cond { e1 } else { if cond2 { e2 } }</code></p>",
        "id": 229209198,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615143049
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"296643\">isHavvy</span> 's replacement text addresses this by restricting the expressions that can appear after an <code>else</code>; I don't think this particular nonterminal (block, if, or if-let) exists anywhere else in the grammar</p>",
        "id": 229209302,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615143132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"271719\">@Mario Carneiro</span> Ah, fair. We do need the special-case of \"you can write an <code>if</code> without braces\".</p>",
        "id": 229210398,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1615144174
    },
    {
        "content": "<p>That's as simple as saying the else expression is a block expression or another if (let) expression.</p>",
        "id": 229212858,
        "sender_full_name": "isHavvy",
        "timestamp": 1615146470
    },
    {
        "content": "<p>Also, just checking Wikipedia, I've been using \"antecedent\" wrong for years... <a href=\"https://en.wikipedia.org/wiki/Antecedent_%28logic%29\">https://en.wikipedia.org/wiki/Antecedent_%28logic%29</a></p>",
        "id": 229215025,
        "sender_full_name": "isHavvy",
        "timestamp": 1615148443
    }
]