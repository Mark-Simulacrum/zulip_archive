[
    {
        "content": "<p>FWIW I'm working on adding checks for specializations in the compiler.</p>",
        "id": 187307276,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1580765900
    },
    {
        "content": "<p>I've also opened <a href=\"https://github.com/rust-lang/rust/issues/68358\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68358\">#68358</a> to remove the unsound and weaponizable impls</p>",
        "id": 187307281,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1580765903
    },
    {
        "content": "<p>By which I mean specializing on non-marker traits.</p>",
        "id": 187307835,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1580766180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> that's perfect timing :P</p>",
        "id": 187310428,
        "sender_full_name": "centril",
        "timestamp": 1580767797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116118\">@Matthew Jasper</span> what sorts of checks are you working on?</p>",
        "id": 187498144,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1580939007
    },
    {
        "content": "<p>maybe let's move that to another zulip topic, actually</p>",
        "id": 187498153,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1580939014
    },
    {
        "content": "<p>The goal was to ensure that all specialising impls are always applicable. There were some compromises so that all the impls in libstd (except those removed in the linked PR) are allowed.</p>",
        "id": 187498592,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1580939328
    },
    {
        "content": "<p>To allow the required impls, I had to consider the bounds from the specialized impl. I also had to whitelist some marker traits (via attribute) as being ok to specialize on (this is unsound for traits other than Sized, but can't be exploited in the same way as traits with items).</p>",
        "id": 187498996,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1580939620
    },
    {
        "content": "<p>I'm unsure if we can keep all of the TrustedRandomAccess  impls that we currently have.</p>",
        "id": 187499250,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1580939785
    },
    {
        "content": "<blockquote>\n<p>To allow the required impls, I had to consider the bounds from the specialized impl. I also had to whitelist some marker traits (via attribute) as being ok to specialize on (this is unsound for traits other than Sized, but can't be exploited in the same way as traits with items).</p>\n</blockquote>\n<p>this is kind of the \"more advanced\" variant of \"always applicable\" that I initially proposed?</p>",
        "id": 187508755,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1580947722
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/68970\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/68970\">#68970</a></p>",
        "id": 187733130,
        "sender_full_name": "Matthew Jasper",
        "timestamp": 1581199325
    }
]