[
    {
        "content": "<p>Following up from the meeting: <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span>, you mentioned you had some specific issue with the proposed textual changes to your RFC?</p>",
        "id": 232471061,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617127699
    },
    {
        "content": "<p>Basically it changed the conclusion of the rationale without changing any of the premises.</p>",
        "id": 232471309,
        "sender_full_name": "scottmcm",
        "timestamp": 1617127803
    },
    {
        "content": "<p>Oh! I see. Yeah, the premise \"It was important that old editions support raw identifiers, but old editions do not need to support raw keywords\" would need to be updated.</p>",
        "id": 232471489,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617127869
    },
    {
        "content": "<p>I didn't notice that because it wasn't in the diff context.</p>",
        "id": 232471516,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617127879
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> So, to clarify something, would you be willing to accept a PR similar to <a href=\"https://github.com/scottmcm/rfcs/pull/1\">https://github.com/scottmcm/rfcs/pull/1</a> that updates the other points as well?</p>",
        "id": 232471577,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617127911
    },
    {
        "content": "<p>Basically I remain unconvinced that any (admittedly small) work to add these to 2015 and 2018 is worth bothering.  So I'd want to see some reason it'd be important -- especially since there are no features that will be showing up to use this for probably another year anyway.</p>",
        "id": 232471842,
        "sender_full_name": "scottmcm",
        "timestamp": 1617128024
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> I'm trying to figure out whether you're expressing strong opposition, mild opposition, or simply non-support.</p>",
        "id": 232471976,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617128072
    },
    {
        "content": "<p>\"Mild opposition\" sounds like the best fit.</p>",
        "id": 232472124,
        "sender_full_name": "scottmcm",
        "timestamp": 1617128131
    },
    {
        "content": "<p>That's helpful, thank you.</p>",
        "id": 232472227,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617128164
    },
    {
        "content": "<p>Especially assuming that <a href=\"https://github.com/rust-lang/rfcs/pull/3085\">https://github.com/rust-lang/rfcs/pull/3085</a> lands.</p>",
        "id": 232472265,
        "sender_full_name": "scottmcm",
        "timestamp": 1617128175
    },
    {
        "content": "<p>Can you elaborate on why you feel RFC 3085 affects this?</p>",
        "id": 232472384,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617128249
    },
    {
        "content": "<p>Because of the explicit statements it contains about things like</p>\n<blockquote>\n<p>However, we may sometimes opt to issue warnings or deprecations where the best fix involves moving to a new edition.</p>\n</blockquote>\n<p>and how editions are expected to be adopted.</p>",
        "id": 232472651,
        "sender_full_name": "scottmcm",
        "timestamp": 1617128367
    },
    {
        "content": "<p>The opening summary of that RFC also says \"Whenever possible, new features should be made to work across all editions\".</p>",
        "id": 232472884,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617128458
    },
    {
        "content": "<p>And to me, <code>k#</code> is the mechanism by which we automatically make that happen for future editions, for any feature whose sole incompatibility with past editions is a new keyword.</p>",
        "id": 232472929,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617128483
    },
    {
        "content": "<p>Effectively, by adding <code>k#</code> to 2021+, and adding <code>r#$</code> to 2015/2018, we automatically fulfill that goal for anything involving keywords, without having to put any per-feature effort into it.</p>",
        "id": 232473063,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617128537
    },
    {
        "content": "<p>I'm not, in general, proposing that we push to make every feature work on older editions; in most cases, I think if we run into friction making a feature work on an old edition, we can just <em>not</em>, and require moving to the new edition to get that feature. I think this specific proposal should be an exception to that, precisely because it's designed to make other such things easier in the future.</p>",
        "id": 232473178,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617128592
    },
    {
        "content": "<p>To be clear: <code>r#$</code> would be added to <em>all editions</em>, not just 2015/2018, right <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> ?</p>",
        "id": 232484931,
        "sender_full_name": "pnkfelix",
        "timestamp": 1617133142
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span> I was assuming that <code>r#$</code> would only apply in 2015/2018. cc <span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span></p>",
        "id": 232485446,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617133375
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> they have to exist on 2021 at least to permit migration</p>",
        "id": 232491830,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135867
    },
    {
        "content": "<p>I don't really have a strong opinion about that, but I'd probably make them work on any edition</p>",
        "id": 232491868,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/213817-t-lang/topic/k.23.20.2C.20r.23.24.20.2C.20editions/near/232472884\">said</a>:</p>\n<blockquote>\n<p>The opening summary of that RFC also says \"Whenever possible, new features should be made to work across all editions\".</p>\n</blockquote>\n<p>this is a strong point :)</p>",
        "id": 232491939,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135911
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/213817-t-lang/topic/k.23.20.2C.20r.23.24.20.2C.20editions/near/232491868\">said</a>:</p>\n<blockquote>\n<p>I don't really have a strong opinion about that, but I'd probably make them work on any edition</p>\n</blockquote>\n<p>but have a warn-by-default lint against them on Rust 2021+ that rewrites to either <code>k#foo</code> or just <code>foo</code>, depending on what edition you are in</p>",
        "id": 232492056,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1617135955
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I'm fine with that. I don't strongly care whether the old syntax works on 2021 or not, so if it's preferable for it to work, by all means.</p>",
        "id": 232492576,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617136160
    },
    {
        "content": "<p>I feel like \"whenever possible\" is actually meaning \"whenever practical\", since it's always <em>possible</em> to make something work on an old edition (with attributes, magic macros, <code>do catch</code>, etc).</p>",
        "id": 232498056,
        "sender_full_name": "scottmcm",
        "timestamp": 1617138312
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> I agree with that, in general.</p>",
        "id": 232510699,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617145133
    },
    {
        "content": "<p>But it seems like we have a practical solution proposed here.</p>",
        "id": 232510732,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1617145156
    }
]