[
    {
        "content": "<p>I was surprised to find that this compiles:</p>\n<div class=\"codehilite\"><pre><span></span><code>pub enum Foo {\n    A(i32),\n}\nimpl Foo {\n    pub const A: Self = Foo::A(0);\n}\n</code></pre></div>\n\n\n<p>I'd thought that both went in the the value namespace, so they'd conflict with each other.  (Certainly <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=d1e7c140a60c78cc6ede62b677a74e5e\">if you try to actually use the constant</a> it just gives the variant's voldemort fn.  Filed a bug that we should at least have a warning: <a href=\"https://github.com/rust-lang/rust/issues/76347\">https://github.com/rust-lang/rust/issues/76347</a>)</p>\n<p>What rule am I missing that makes this allowed?</p>",
        "id": 209144957,
        "sender_full_name": "scottmcm",
        "timestamp": 1599256879
    },
    {
        "content": "<p>I ran in to this recently too</p>",
        "id": 209144988,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599256902
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/75756#discussion_r479807425\">https://github.com/rust-lang/rust/pull/75756#discussion_r479807425</a></p>",
        "id": 209144995,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599256915
    },
    {
        "content": "<p>(might need to expand hidden comments)</p>",
        "id": 209145038,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1599256924
    }
]