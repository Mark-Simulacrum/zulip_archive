[
    {
        "content": "<p>Turns out this is accepted by the compiler:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[repr(transparent)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">Ascii</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">inner</span>: <span class=\"kt\">u8</span> <span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_val</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Ascii</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">Ascii</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"cp\">#[repr(transparent)]</span><span class=\"w\"> </span><span class=\"n\">inner</span>: <span class=\"mi\">1</span><span class=\"k\">u8</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>Even though of course a <code>repr</code> attribute on a field currently has no semantics. This is unfortunate as this might be an interesting way to safely in-place construct such a wrapper type, i.e. a method <code>&amp;mut u8 -&gt; Option&lt;&amp;mut Ascii&gt;</code>.<br>\nIn the grander scope, are _all_ attributes currently ignored on fields? If not, where is it documented how they are interpreted?</p>",
        "id": 214440745,
        "sender_full_name": "HeroicKatora",
        "timestamp": 1603562503
    },
    {
        "content": "<p>There's been work to deny attributes in more places (e.g.https://github.com/rust-lang/rust/pull/77015)</p>",
        "id": 214443043,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603565368
    },
    {
        "content": "<p>I think that could easily be extended to deny <code>#[repr(transparent)]</code> on non-items</p>",
        "id": 214443054,
        "sender_full_name": "Aaron Hill",
        "timestamp": 1603565391
    },
    {
        "content": "<p>An inner attribute <code>#![repr(transparent)]</code> expresses the intent better here and is not allowed so it's not a blocker for that syntax (drafting RFC right now). But still something to be aware of and probably good to deny for forward compatibility.</p>",
        "id": 214444021,
        "sender_full_name": "HeroicKatora",
        "timestamp": 1603566566
    },
    {
        "content": "<p>Sadly the automatic <code>unused_attribute</code> lint seems unreliable at best, so attribute authors need to remember to check for misplaced ones, which is often missed in certain positions.</p>\n<p>PRs to improve that are always appreciated, though whether we're (T-lang) willing to make them hard errors tends to depend on ecosystem impact.  (One of these was just discussed at a recent triage meeting.)</p>",
        "id": 214462703,
        "sender_full_name": "scottmcm",
        "timestamp": 1603592238
    }
]