[
    {
        "content": "<p>Compiling Servo with a recent Nightly fails with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0642</span><span class=\"p\">]</span>: <span class=\"nc\">patterns</span><span class=\"w\"> </span><span class=\"n\">aren</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">allowed</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">methods</span><span class=\"w\"> </span><span class=\"n\">without</span><span class=\"w\"> </span><span class=\"n\">bodies</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">simon</span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">cargo</span><span class=\"o\">-</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"n\">sys</span><span class=\"o\">-</span><span class=\"mf\">0.29.3</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">2186</span>:<span class=\"mi\">46</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2186</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">clang_VerbatimLineComment_getText</span><span class=\"p\">(</span><span class=\"n\">comment</span>: <span class=\"nc\">CXComment</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">CXString</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">                                              </span><span class=\"o\">^^^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">help</span>: <span class=\"nc\">give</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">underscore</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">ignore</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">2186</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">clang_VerbatimLineComment_getText</span><span class=\"p\">(</span><span class=\"n\">_</span>: <span class=\"nc\">CXComment</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">CXString</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 234447763,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618381923
    },
    {
        "content": "<p>It looks like a deprecation warning was turned into a hard error independent of editions. Couldn’t this breaking change have been edition-conditional?</p>",
        "id": 234447872,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618381997
    },
    {
        "content": "<p>How is that a pattern?</p>",
        "id": 234448599,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1618382394
    },
    {
        "content": "<p>Also a good question. clang-sys is macro heavy so I’m trying to figure that out…</p>",
        "id": 234448861,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618382571
    },
    {
        "content": "<p><a href=\"https://github.com/KyleMayes/clang-sys/blob/v0.29.3/src/lib.rs#L1659\">https://github.com/KyleMayes/clang-sys/blob/v0.29.3/src/lib.rs#L1659</a> is where the error spans point</p>",
        "id": 234448925,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618382635
    },
    {
        "content": "<p>It’s also not a method as far as I can tell…</p>",
        "id": 234451267,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618384012
    },
    {
        "content": "<p>this is also affecting wasmtime/cranelift <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2829/checks?check_run_id=2332860293\">https://github.com/bytecodealliance/wasmtime/pull/2829/checks?check_run_id=2332860293</a> and they have now pinned their CI to another recent nightly</p>",
        "id": 234452244,
        "sender_full_name": "lqd",
        "timestamp": 1618384612
    },
    {
        "content": "<p>this is tracked in <a href=\"https://github.com/rust-lang/rust/issues/84162\">#84162</a> and will be fixed by <a href=\"https://github.com/rust-lang/rust/issues/84130\">#84130</a></p>",
        "id": 234454521,
        "sender_full_name": "lqd",
        "timestamp": 1618385851
    },
    {
        "content": "<p>Oh, nice! I was trying to reduce but looks like I don’t need to. Thanks <span class=\"user-mention\" data-user-id=\"116113\">@lqd</span></p>",
        "id": 234459144,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618388047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"219747\">Simon Sapin</span> <a href=\"#narrow/stream/213817-t-lang/topic/error.5BE0642.5D.3A.20patterns.20aren't.20allowed.20in.20methods.20without.20bod/near/234447872\">said</a>:</p>\n<blockquote>\n<p>It looks like a deprecation warning was turned into a hard error independent of editions. Couldn’t this breaking change have been edition-conditional?</p>\n</blockquote>\n<p>for bugfixes AFAIK it is pretty common to turn future-incompat lints into hard errors without edition boundary?</p>",
        "id": 234506041,
        "sender_full_name": "RalfJ",
        "timestamp": 1618409868
    },
    {
        "content": "<p>I don’t know if I’d call it “common.” Its something we certainly <em>want</em> to do more often. Being able to increase the number of future-incompat lints that become hard-errors was a big motivation for me in writing <a href=\"https://github.com/rust-lang/rfcs/issues/2834\">rfcs#2834</a> (tracked in <a href=\"https://github.com/rust-lang/rust/issues/71249\">rust#71249</a>)</p>",
        "id": 234507516,
        "sender_full_name": "pnkfelix",
        "timestamp": 1618410393
    },
    {
        "content": "<p>I think it would be worth a case-by-case evaluation. If a lint is for a potential soundness issue that sounds justified to be relatively aggressive. As far as I can tell though, the thing about patterns in method parameters is mostly stylistic and making the language easier to teach? It doesn’t seem worth pushing the ecosystem through a breaking change, even with mitigations like <a href=\"https://github.com/rust-lang/rfcs/pull/2834\">https://github.com/rust-lang/rfcs/pull/2834</a></p>",
        "id": 234523495,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618415160
    },
    {
        "content": "<p>(This example is hypothetical since <a href=\"https://github.com/rust-lang/rust/issues/84162\">https://github.com/rust-lang/rust/issues/84162</a> was an unintentional bug and being fixed)</p>",
        "id": 234531073,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618417885
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"219747\">@Simon Sapin</span> on this point; I'd like to see us formulating a fresh policy around breaking changes etc</p>",
        "id": 234534578,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618419163
    },
    {
        "content": "<p>I think we already do have a couple RFCs on this? But refining what is considered a major or minor change sounds good</p>",
        "id": 234534846,
        "sender_full_name": "Simon Sapin",
        "timestamp": 1618419253
    },
    {
        "content": "<p>we do, but I think that we can be a lot more specific now; this is related to the work that <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and I were doing on lint policy etc</p>",
        "id": 234535132,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618419355
    },
    {
        "content": "<p>I personally think it may be time for us to be tighter</p>",
        "id": 234535214,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1618419375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/213817-t-lang/topic/error.5BE0642.5D.3A.20patterns.20aren't.20allowed.20in.20methods.20without.20bod/near/234535214\">said</a>:</p>\n<blockquote>\n<p>I personally think it may be time for us to be tighter</p>\n</blockquote>\n<p>what does that mean for <a href=\"https://github.com/rust-lang/rust/issues/71800\">https://github.com/rust-lang/rust/issues/71800</a> ?</p>",
        "id": 234536910,
        "sender_full_name": "RalfJ",
        "timestamp": 1618419970
    }
]