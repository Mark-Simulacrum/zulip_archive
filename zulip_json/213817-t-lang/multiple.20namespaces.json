[
    {
        "content": "<p>I regret that Rust has multiple namespaces.</p>",
        "id": 259872690,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635778053
    },
    {
        "content": "<p>I wonder if we should think about moving away from that?</p>",
        "id": 259872702,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635778062
    },
    {
        "content": "<p>Would be an edition change, obviously.</p>",
        "id": 259872711,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635778068
    },
    {
        "content": "<p>The RFC kind of hinted at this.</p>",
        "id": 259872721,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635778073
    },
    {
        "content": "<p>I think I'd be in favor of this for unifying types and functions and similar. The one case where I kinda like multiple namespaces is that modules and functions don't collide.</p>",
        "id": 259872837,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1635778120
    },
    {
        "content": "<p>If we have robust shadowing rules that <em>might</em> not be an issue, though.</p>",
        "id": 259873001,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1635778194
    },
    {
        "content": "<p>And it'd probably be more readable to not write something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">concept_name</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">concept_name</span>::<span class=\"n\">function_from_the_crate_implementing_that_concept</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 259873104,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1635778226
    },
    {
        "content": "<p>considering that we have keywords for each of the namespaces which can be used to address them it doesn't seem that bad.</p>",
        "id": 259873298,
        "sender_full_name": "The 8472",
        "timestamp": 1635778332
    },
    {
        "content": "<p>/me wonders if unifying the namespaces would simplify name resolution.</p>",
        "id": 259874999,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1635779143
    },
    {
        "content": "<p>(And if so, would it still provide such a simplification if we can only do it in a new edition?)</p>",
        "id": 259875086,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1635779167
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 259880552,
        "sender_full_name": "Gary Guo",
        "timestamp": 1635781875
    },
    {
        "content": "<p>it may have done, but having to support it across editions is a big blow :)</p>",
        "id": 260014301,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1635867859
    },
    {
        "content": "<p>So how will you handle tuple structs</p>",
        "id": 260047001,
        "sender_full_name": "Lokathor",
        "timestamp": 1635881991
    },
    {
        "content": "<p>That is, one declares a tuple struct Type(FieldType) and the  you can use Type(field) as an expression, but Type \"the Type\" and Type \"the construction function\" are separate things.</p>",
        "id": 260047250,
        "sender_full_name": "Lokathor",
        "timestamp": 1635882108
    },
    {
        "content": "<p>And some people do this with type aliases as well because (depending on use case) type aliases are kinda junk otherwise</p>",
        "id": 260047336,
        "sender_full_name": "Lokathor",
        "timestamp": 1635882136
    },
    {
        "content": "<p>I honestly also like that functions and variables don't collide</p>",
        "id": 260254634,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1636023687
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> why do you regret it?</p>",
        "id": 260254649,
        "sender_full_name": "Dirkjan Ochtman",
        "timestamp": 1636023697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"226095\">@Dirkjan Ochtman</span> it makes some things more complex, but I don't remember in detail what :)</p>",
        "id": 261029231,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1636567402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/213817-t-lang/topic/multiple.20namespaces/near/259872690\">said</a>:</p>\n<blockquote>\n<p>I regret that Rust has multiple namespaces.</p>\n</blockquote>\n<p>is there any particular issue that triggered this sentiment?</p>",
        "id": 261377465,
        "sender_full_name": "RalfJ",
        "timestamp": 1636833887
    }
]