[
    {
        "content": "<p>Uh-oh: <a href=\"https://internals.rust-lang.org/t/unsoundness-in-pin/11311\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/unsoundness-in-pin/11311\">https://internals.rust-lang.org/t/unsoundness-in-pin/11311</a><br>\nCc <span class=\"user-mention\" data-user-id=\"203289\">@boats</span> <span class=\"user-mention\" data-user-id=\"127859\">@Taylor Cramer</span> <span class=\"user-mention\" data-user-id=\"126931\">@centril</span></p>",
        "id": 181049302,
        "sender_full_name": "RalfJ",
        "timestamp": 1574106484
    },
    {
        "content": "<p>I saw; haven't processed yet</p>",
        "id": 181090141,
        "sender_full_name": "centril",
        "timestamp": 1574151035
    },
    {
        "content": "<p>Should also be filed as an issue on rust-lang/rust and labeled with I-unsound so that we can have the more-official discussion there</p>",
        "id": 181090160,
        "sender_full_name": "centril",
        "timestamp": 1574151071
    },
    {
        "content": "<p>IRLO is official though?</p>",
        "id": 181097884,
        "sender_full_name": "RalfJ",
        "timestamp": 1574158836
    },
    {
        "content": "<p>I agree about having an issue for tracking, but discourse is just the better medium for discussion that GH^^</p>",
        "id": 181097899,
        "sender_full_name": "RalfJ",
        "timestamp": 1574158850
    },
    {
        "content": "<p>issue filed: <a href=\"https://github.com/rust-lang/rust/issues/66544\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/66544\">https://github.com/rust-lang/rust/issues/66544</a></p>",
        "id": 181098057,
        "sender_full_name": "RalfJ",
        "timestamp": 1574158951
    },
    {
        "content": "<p>Feel free to add more labels to that issue, I am not sure what makes sense. P-high? I-nominate?</p>",
        "id": 181098113,
        "sender_full_name": "RalfJ",
        "timestamp": 1574159007
    },
    {
        "content": "<p>ok this is good for now; added some labels</p>",
        "id": 181102987,
        "sender_full_name": "centril",
        "timestamp": 1574163196
    },
    {
        "content": "<p>One thing that I thought might be worth mentioning around the discussion for blanket forbidding e.g. DerefMut on <code>&amp;T</code> is a recent Embedded <a href=\"https://github.com/rust-embedded/wg/blob/master/rfcs/0377-mutex-trait.md#the-rust-standard-library-mutex-uses-self-for-the-lock-method-why-choose-mut-self\" target=\"_blank\" title=\"https://github.com/rust-embedded/wg/blob/master/rfcs/0377-mutex-trait.md#the-rust-standard-library-mutex-uses-self-for-the-lock-method-why-choose-mut-self\">RFC</a> which suggests a trait and a typical impl for <code>&amp;T</code> while the traits signature takes <code>&amp;mut self</code> -- I don't think this is really a problem in this case, but thought I'd mention it at least</p>",
        "id": 181605065,
        "sender_full_name": "simulacrum",
        "timestamp": 1574389479
    },
    {
        "content": "<p>In particular I haven't put in too much thought but I could imagine a design that made DerefMut for &amp;Mutex reasonable in some sense (not sure how you'd synthesize the mutable reference, but I think you <em>could</em> with the right effort</p>",
        "id": 181605083,
        "sender_full_name": "simulacrum",
        "timestamp": 1574389544
    },
    {
        "content": "<p>@simulacrum implementing DerefMut for &amp;Mutex doesn't work, because it needs to drop the lock in its destructor. Implementing an &amp;mut method for an &amp;T type presents no problems for pin and is quite different - it means exclusive access to that shared reference.</p>",
        "id": 182762997,
        "sender_full_name": "boats",
        "timestamp": 1575641106
    },
    {
        "content": "<p>(I thought so, but wanted to point it out in case it was relevant. Thanks for taking a look!)</p>",
        "id": 182766051,
        "sender_full_name": "simulacrum",
        "timestamp": 1575643098
    }
]