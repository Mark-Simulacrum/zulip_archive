[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> I was working on another issue related to <code>inspect</code> APIs and the <code>tap</code> crate and when I was checking out the APIs they have already I noticed that the author intended to switch over to the <code>Try</code> trait once it was stable which inspired me to try out the API real quick to see how it would work with Try and I have to say the end diff is very satisfying</p>",
        "id": 276131916,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647909977
    },
    {
        "content": "<p><a href=\"https://github.com/myrrlyn/tap/pull/8\">https://github.com/myrrlyn/tap/pull/8</a></p>",
        "id": 276131917,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647909978
    },
    {
        "content": "<p>thought you might enjoy</p>",
        "id": 276131922,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647909981
    },
    {
        "content": "<p><code>.tap_break(|Err(error)|</code> ah, of course.  Nice that that works, though I think that's unstable too (<a href=\"https://doc.rust-lang.org/nightly/unstable-book/language-features/exhaustive-patterns.html\">https://doc.rust-lang.org/nightly/unstable-book/language-features/exhaustive-patterns.html</a>)</p>",
        "id": 276132297,
        "sender_full_name": "scottmcm",
        "timestamp": 1647910436
    },
    {
        "content": "<p>Hmm, I wonder if it should have <code>tap_continue</code>+<code>tap_continue_ref</code>+<code>tap_continue_mut</code></p>\n<p>Since if it's pulling them apart anyway it could offer owned access too</p>",
        "id": 276132389,
        "sender_full_name": "scottmcm",
        "timestamp": 1647910557
    },
    {
        "content": "<p>(Those names would probably be bad, actually, since the <code>_ref</code> version should probably keep being the short one)</p>",
        "id": 276132444,
        "sender_full_name": "scottmcm",
        "timestamp": 1647910588
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/213817-t-lang/topic/try.20trait.20integration.20example/near/276132297\">said</a>:</p>\n<blockquote>\n<p><code>.tap_break(|Err(error)|</code> ah, of course.  Nice that that works, though I think that's unstable too (<a href=\"https://doc.rust-lang.org/nightly/unstable-book/language-features/exhaustive-patterns.html\">https://doc.rust-lang.org/nightly/unstable-book/language-features/exhaustive-patterns.html</a>)</p>\n</blockquote>\n<p>heh, yea, is there anything blocking that from stabilization?</p>",
        "id": 276136334,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647915429
    },
    {
        "content": "<p>I'd love to see that stabilize around the same time the Try trait does</p>",
        "id": 276136342,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647915439
    },
    {
        "content": "<p><em>I asked but I'm gonna go and read the issue</em></p>",
        "id": 276136350,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647915456
    },
    {
        "content": "<p>okay so it's blocked on never patterns</p>",
        "id": 276138333,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647917787
    },
    {
        "content": "<p>I'm optimistically trying to find information on the status of that feature but not finding anything</p>",
        "id": 276138389,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647917866
    },
    {
        "content": "<p>is it safe to assume that is completely unimplemented atm and waiting for someone to take it on? :(</p>",
        "id": 276138393,
        "sender_full_name": "Jane Lusby [she/her]",
        "timestamp": 1647917877
    }
]