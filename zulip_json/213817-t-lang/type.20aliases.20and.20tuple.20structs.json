[
    {
        "content": "<p>is there any push to make it so that type aliases of tuple structs can be constructed? I just noticed that the reference is <a href=\"https://github.com/rust-lang/reference/pull/831\">out of date</a></p>",
        "id": 200304185,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745442
    },
    {
        "content": "<p>my understanding is that this is the only way that <code>pub type foo = bar</code> differs from <code>pub use bar as foo</code></p>",
        "id": 200304216,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745486
    },
    {
        "content": "<p>and presumably it is fixable, where the compiler could just insert an alias to the constructor as well as the type when the RHS of a <code>type</code> item is a tuple struct, but that this would be a breaking change</p>",
        "id": 200304311,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745537
    },
    {
        "content": "<p>it seems like something we could and might want to fix in the upcoming edition</p>",
        "id": 200304327,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745555
    },
    {
        "content": "<p>and relatively easy</p>",
        "id": 200304336,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745568
    },
    {
        "content": "<p>I wasn't aware of that issue, but that seems entirely reasonable.</p>",
        "id": 200304407,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745642
    },
    {
        "content": "<p>Why would this be a breaking change?</p>",
        "id": 200304437,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745647
    },
    {
        "content": "<p>What code would it change the meaning of?</p>",
        "id": 200304441,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745653
    },
    {
        "content": "<p>Oh. A function named with a non-standard capitalization?</p>",
        "id": 200304449,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745665
    },
    {
        "content": "<p>yea</p>",
        "id": 200304465,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745691
    },
    {
        "content": "<p>which seems like its probably not something that people do</p>",
        "id": 200304471,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745702
    },
    {
        "content": "<p>Actually, I think I have code doing it, but it specifically uses it to define an alias for the constructor function. :)</p>",
        "id": 200304527,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745726
    },
    {
        "content": "<p>so it might be that we could implement this change and then do a crater and find nothing breaks but with an upcoming edition soon it just makes more sense to do it as part of the edition imo</p>",
        "id": 200304544,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745746
    },
    {
        "content": "<p>So simply deleting that code and letting Rust do the same thing better would be quite sufficient. :)</p>",
        "id": 200304548,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745749
    },
    {
        "content": "<p>\"D</p>",
        "id": 200304556,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745754
    },
    {
        "content": "<p>:D</p>",
        "id": 200304558,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745755
    },
    {
        "content": "<p>thats what I was thinking</p>",
        "id": 200304560,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745758
    },
    {
        "content": "<p>I'm all for it. Interested in writing a feature-gated PR, and perhaps an allow-by-default lint?</p>",
        "id": 200304622,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745787
    },
    {
        "content": "<p>(and then we could crater a commit that changes that to error-by-default, as a test?)</p>",
        "id": 200304635,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745800
    },
    {
        "content": "<p>sounds like a good idea</p>",
        "id": 200304655,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745828
    },
    {
        "content": "<p>I should say, this should probably get written up as a proposed plan, first. :)</p>",
        "id": 200304667,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745843
    },
    {
        "content": "<p>Then with lang team signoff, we can move forward with that proposal.</p>",
        "id": 200304681,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745862
    },
    {
        "content": "<p>RFC? or new processs</p>",
        "id": 200304682,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745863
    },
    {
        "content": "<p>Not RFC; I was thinking just an issue and a poll. I don't think we have the machinery for the new process ready yet.</p>",
        "id": 200304740,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745892
    },
    {
        "content": "<p>okay</p>",
        "id": 200304773,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745930
    },
    {
        "content": "<p>ill open an issue rn</p>",
        "id": 200304778,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745933
    },
    {
        "content": "<p>So, I'd suggest: file issue on rust-lang/rust, label T-lang and I-nominated, we'll talk about it next meeting and then FCP it to gauge consensus.</p>",
        "id": 200304784,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745936
    },
    {
        "content": "<p>okay</p>",
        "id": 200304807,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591745971
    },
    {
        "content": "<p>Can you include the above possible plan steps, of introducing a future compatibility lint (schedule TBD but to be tested via crater) and making the change in the next edition?</p>",
        "id": 200304823,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745988
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 200304827,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591745991
    },
    {
        "content": "<p>ill do my best to include all the steps you've mentioned, and ill link the issue here in a sec so you can double check i didnt miss anything :)</p>",
        "id": 200304932,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591746109
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/73191\">https://github.com/rust-lang/rust/issues/73191</a> baby RFC</p>",
        "id": 200305564,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591746610
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span></p>",
        "id": 200305566,
        "sender_full_name": "Jane Lusby",
        "timestamp": 1591746614
    },
    {
        "content": "<p>Looks great! I added the labels, otherwise looks good. We'll talk about it on Monday.</p>",
        "id": 200305716,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1591746761
    },
    {
        "content": "<p>I think this is a good example of </p>\n<p>(a) something that would be a proposal<br>\nand (b) something that could (maybe) go straight to PR if approved, though I'm not entirely sure</p>",
        "id": 200426675,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1591800717
    }
]