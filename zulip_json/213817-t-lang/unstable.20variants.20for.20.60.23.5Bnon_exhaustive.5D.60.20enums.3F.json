[
    {
        "content": "<p>For an enum marked as <code>#[non_exhaustive]</code>, would it be reasonable to allow unstable enum variants? Stable code couldn't match those variants, but for a <code>#[non_exhaustive]</code> enum that seems potentially acceptable.</p>",
        "id": 238578581,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620878890
    },
    {
        "content": "<p>Why not private variants as well then?</p>",
        "id": 238583265,
        "sender_full_name": "isHavvy",
        "timestamp": 1620883774
    },
    {
        "content": "<p>I guess this is for adding things like <code>ErrorKind</code>s, Josh?</p>",
        "id": 238583321,
        "sender_full_name": "scottmcm",
        "timestamp": 1620883807
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> Exactly.</p>",
        "id": 238583456,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1620883968
    },
    {
        "content": "<p>I think if T-compiler says it's feasible I don't have any objections.  I assume y'all on libs will figure out the implications of making it impossible to directly match a variant that someone cares about.</p>\n<p>(We used to have fake-unstable variants in them anyway, just spelled <code>#[doc(hidden)] __DoNotUse(())</code>, so real-unstable doesn't seem like a foundational issue.  But I assume if it was easy to implement it would have been done instead of the underscores-and-hidden hack.)</p>",
        "id": 238583795,
        "sender_full_name": "scottmcm",
        "timestamp": 1620884304
    }
]