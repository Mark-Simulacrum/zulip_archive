[
    {
        "content": "<p>(while we're adjacent to the topic, should <code>try {}</code> blocks actually be called <code>catch {}</code>?) <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 227325844,
        "sender_full_name": "bstrie",
        "timestamp": 1614023096
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256342\">bstrie</span> <a href=\"#narrow/stream/213817-t-lang/topic/try_trait_v2.3A.202nd.20attempt/near/227325844\">said</a>:</p>\n<blockquote>\n<p>(while we're adjacent to the topic, should <code>try {}</code> blocks actually be called <code>catch {}</code>?) <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>Maybe we should call it <code>wait {  }</code> or <code>stop {  }</code> to wait/stop the propagation <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 227326769,
        "sender_full_name": "Eduardo Canellas",
        "timestamp": 1614023448
    },
    {
        "content": "<p>ah yes, if we use <code>wait</code> to stop the propagation then how about <code>sync</code> to initiate it? sync/wait will be the headline feature of Rust 2021 :P</p>",
        "id": 227327095,
        "sender_full_name": "bstrie",
        "timestamp": 1614023587
    },
    {
        "content": "<p>Joke apart, I think <code>catch {  }</code> express the meaning better than <code>try {  }</code>, although I personally don't like its background</p>",
        "id": 227327114,
        "sender_full_name": "Eduardo Canellas",
        "timestamp": 1614023591
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256342\">bstrie</span> <a href=\"#narrow/stream/213817-t-lang/topic/try_trait_v2.3A.202nd.20attempt/near/227325844\">said</a>:</p>\n<blockquote>\n<p>(while we're adjacent to the topic, should <code>try {}</code> blocks actually be called <code>catch {}</code>?) <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>No, because in <code>try{}catch{}</code> the <code>try</code> is the block in which one does the fallible operation, not the one in which one is handling the error.  Note that <code>catch</code> is already reserved after <code>try{}</code> in case such a syntax were to make sense for Rust in the future: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9e5713786a10651df5d77c9597e1252d\">https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9e5713786a10651df5d77c9597e1252d</a></p>\n<p>A previous conversation on naming for the block, specifically niko's post that convinced me to go for <code>try</code>: <a href=\"https://internals.rust-lang.org/t/bikeshed-rename-catch-blocks-to-fallible-blocks/7121/4?u=scottmcm\">https://internals.rust-lang.org/t/bikeshed-rename-catch-blocks-to-fallible-blocks/7121/4?u=scottmcm</a></p>",
        "id": 227331438,
        "sender_full_name": "scottmcm",
        "timestamp": 1614025396
    },
    {
        "content": "<p>See also the RFC that resolved the unresolved question from the original RFC, picking <code>try</code>: <a href=\"https://rust-lang.github.io/rfcs/2388-try-expr.html\">https://rust-lang.github.io/rfcs/2388-try-expr.html</a></p>",
        "id": 227331582,
        "sender_full_name": "scottmcm",
        "timestamp": 1614025461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> the meaning of <code>try { }</code> should really be tied to \"fallible operations\"? Combined with the Try trait, it could be used to other types of operations. Imagine a sequence of computations which is desirable to early return in the first success case:</p>\n<div class=\"codehilite\"><pre><span></span><code>let x = try {\n    technique_a()?;\n    technique_b()?;\n   technique_c()?;\n   &quot;All techniques failed&quot;\n}\n</code></pre></div>\n<p>Currently, to do such a thing (propagate success) I think we would have to <code>if/match</code> or make something weird with <code>Result</code>, (<code>Ok(error), Err(value)</code>)</p>",
        "id": 227434093,
        "sender_full_name": "Eduardo Canellas",
        "timestamp": 1614089031
    },
    {
        "content": "<p>I don't think I follow your argument in that last one.  I definitely agree <code>Try</code> and such shouldn't talk in terms of errors.</p>",
        "id": 227475256,
        "sender_full_name": "scottmcm",
        "timestamp": 1614103358
    },
    {
        "content": "<p>the very word \"try\" implies something that might not succeed</p>",
        "id": 227475653,
        "sender_full_name": "cuviper",
        "timestamp": 1614103499
    },
    {
        "content": "<p>we could really annoy Haskellers and call it <code>Maybe</code></p>",
        "id": 227475772,
        "sender_full_name": "cuviper",
        "timestamp": 1614103549
    },
    {
        "content": "<p>I stand by my <a href=\"https://internals.rust-lang.org/t/bikeshed-rename-catch-blocks-to-fallible-blocks/7121/4?u=scottmcm\">prior comment</a></p>",
        "id": 227485433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1614107001
    }
]