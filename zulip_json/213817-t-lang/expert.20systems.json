[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>, <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span> or others--</p>\n<p>I was talking to some folks recently about custom diagnostics, better Rust IDEs, etc and I got to think about \"expert systems\". I was thinking how, for the builtin diagnostics we have, if we wanted to expose them in a rich IDE setting where people can explore them, we would need more metadata ---</p>\n<p>e.g., being able to identify for users <em>why</em> we are giving them this suggestion (\"your type had these characteristics\" etc) might be really interesting stuff.</p>\n<p>But that is kind of the same stuff a custom diagnostics engine would want to provide.</p>\n<p>It starts to feel a bit like \"expert systems\", and makes me wonder about how much work there is in that context also about resolving conflicting diagnoeses and presenting multiple possibilities.</p>",
        "id": 277309596,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1648745291
    },
    {
        "content": "<p>Kind of just musings but I thought they were fun ones</p>",
        "id": 277309623,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1648745307
    },
    {
        "content": "<p>See some of the discussion at the end of <a href=\"#narrow/stream/213817-t-lang/topic/lint.20brainstorming\">https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/lint.20brainstorming</a> as well</p>",
        "id": 277310156,
        "sender_full_name": "Jake Goulding",
        "timestamp": 1648745607
    },
    {
        "content": "<p>whoa, that's a pretty wild analogy. I'll have to reflect on it more.</p>",
        "id": 277328268,
        "sender_full_name": "pnkfelix",
        "timestamp": 1648754561
    },
    {
        "content": "<p>my thoughts on this have always leaned towards outputting the build system/dependency graph as a RDF graph, which has the properties i believe you want to have for diverse tooling attach their arbitrary metadata to a graph node.  For cargo, specifically i'd make it output json-ld and using <a href=\"https://json-ld.org/spec/latest/json-ld-rdf/\">https://json-ld.org/spec/latest/json-ld-rdf/</a> that is about as short a synopsis of the idea as I can give, but perhaps too short, so if i need to elaborate on anything let me know.</p>",
        "id": 277696079,
        "sender_full_name": "matt rice",
        "timestamp": 1649060033
    }
]