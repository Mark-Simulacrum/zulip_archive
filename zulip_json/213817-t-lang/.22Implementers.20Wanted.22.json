[
    {
        "content": "<p>At the meeting the subject of \"how do we get people to implement things?\" came up. Remember that This Week In Rust has a \"Call for Participation\" every single week. It's often for <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> crates, but there's no reason that rust language work can't also be posted there for more people to become aware of.</p>",
        "id": 185287997,
        "sender_full_name": "Lokathor",
        "timestamp": 1578641030
    },
    {
        "content": "<p>It's not just implementers, but also T-compiler reviewers</p>",
        "id": 185288047,
        "sender_full_name": "centril",
        "timestamp": 1578641081
    },
    {
        "content": "<p>(people with r+ who understand the code more generally)</p>",
        "id": 185288053,
        "sender_full_name": "centril",
        "timestamp": 1578641100
    },
    {
        "content": "<p>compiler implementers become compiler reviewers and the cycle continues :)</p>",
        "id": 185302786,
        "sender_full_name": "varkor",
        "timestamp": 1578656741
    },
    {
        "content": "<p>That is one great point.</p>\n<p>Another is that we're at 5,000+ issues and 210 PRs, so I suspect there's a lot of work to be done just getting things to a place where it can be reviewed at all. And if reviewers are doing work writing instead of reviewing it slows down the overall pipeline.</p>\n<p>So, <em>without letting code quality drop</em>, it's probably wise to try and get more people working on the compiler so that we have a situation of \"too much written and waiting on review\" instead of \"too much not even written yet\".</p>",
        "id": 185351189,
        "sender_full_name": "Lokathor",
        "timestamp": 1578690188
    },
    {
        "content": "<p>I'd definitely prefer to be waiting on review than waiting on implementation</p>",
        "id": 185393402,
        "sender_full_name": "varkor",
        "timestamp": 1578755493
    },
    {
        "content": "<p>because even if someone gives up waiting for a review, their code is still available for someone else to pick up later down the line</p>",
        "id": 185393405,
        "sender_full_name": "varkor",
        "timestamp": 1578755509
    },
    {
        "content": "<p>and I think we're fairly good at reviewing at the moment, especially small to medium PRs</p>",
        "id": 185393450,
        "sender_full_name": "varkor",
        "timestamp": 1578755531
    },
    {
        "content": "<p>I'm torn between two impulses, and I haven't figured out what I think yet.</p>\n<p>On the one hand, I find our current <a href=\"http://smallcultfollowing.com/babysteps/blog/2019/07/10/aic-unbounded-queues-and-lang-design/\" target=\"_blank\" title=\"http://smallcultfollowing.com/babysteps/blog/2019/07/10/aic-unbounded-queues-and-lang-design/\">\"unbounded queues\"</a> setup kind of stressful and overwhelming. It's hard to track what's going on. I think things kind of get lost in limbo. Sometimes a lot of work goes on into an RFC, but there is nobody to implement, and the design just sits, and I think that leads to downstream problems. I'd prefer -- especially for larger projects! -- that we tried not to take on something we don't intend to finish. I'd prefer if we had some notion of who is going to do implementation <em>and</em> review before we take on big things.</p>\n<p>On the other hand, I see that the current setup is in some ways natural for an open-source organization. There are smaller changes that I think would just never happen if we drove things in an overly top-down way. And you have things like the <code>unwrap()</code> work that <span class=\"user-mention\" data-user-id=\"130111\">@anp</span> is tackling now, where the initial design was done last year, and yeah it sat around, but now <span class=\"user-mention\" data-user-id=\"130111\">@anp</span> is doing it, and we're all very glad that this is getting done. If we'd been too much of a stickler around provisioning before-hand, maybe it'd be done already, but maybe we wouldn't even have an RFC.</p>\n<p>So I don't quite know what to think yet.</p>",
        "id": 185499859,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1578927274
    },
    {
        "content": "<p>I wonder if we could get some help, via This Week In Rust or similar, to get a comprehensive list of \"accepted but not implemented RFCs\", as well as of \"implemented but not stabilized RFCs\".</p>",
        "id": 185513238,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1578935217
    },
    {
        "content": "<p>Maybe just create labels and assign them to the tracking issues?</p>",
        "id": 185513649,
        "sender_full_name": "Charles Lew",
        "timestamp": 1578935478
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 185519167,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1578938990
    }
]