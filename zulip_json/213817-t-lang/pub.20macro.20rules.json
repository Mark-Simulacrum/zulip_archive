[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> and I were talking to <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> about the question of pub macro rules. In particular, we were looking for someone to help in shepherding a group, working with <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> who (I think) is highly motivated to do the implementation.</p>",
        "id": 222599278,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610552407
    },
    {
        "content": "<p>I think we probably want to make a project proposal to \"charter\" this effort</p>",
        "id": 222599334,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610552430
    },
    {
        "content": "<p>but in any case <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> you had a draft RFC, right?</p>",
        "id": 222599361,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1610552442
    },
    {
        "content": "<p>Indeed! Here's the <a href=\"https://hackmd.io/@ryanlevick/SkcDREnCD\">draft</a>.</p>",
        "id": 222599612,
        "sender_full_name": "rylev",
        "timestamp": 1610552530
    },
    {
        "content": "<p>I've proposed trying to do the full transition to path based privacy scoping for macro_rules! macros in Rust 2021 but I've also added an alternative to start in 2021 and finish (probably) in 2024.</p>",
        "id": 222599799,
        "sender_full_name": "rylev",
        "timestamp": 1610552601
    },
    {
        "content": "<p>I would love all of your feedback!</p>",
        "id": 222599871,
        "sender_full_name": "rylev",
        "timestamp": 1610552625
    },
    {
        "content": "<p>Hi @rylev and t-lang. Maybe an option to mitigate the verbosity downside of path based macros would be standardizing a new \"prelude\" or namespace, like crate::macros, so the user could do \"use crate::macros::*;\" . Also, it could ease the transition, as a single use can replace [#macro_use].</p>",
        "id": 222606516,
        "sender_full_name": "pachi",
        "timestamp": 1610555150
    },
    {
        "content": "<p>does that need to be part of the language directly? with path-based macros you could have <code>mod macros</code> that uses all the macros in the crate</p>",
        "id": 222607317,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610555493
    },
    {
        "content": "<p>(also <code>use crate::macros::*</code> is ambiguous with any module named <code>macros</code>)</p>",
        "id": 222607408,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1610555524
    },
    {
        "content": "<p>indeed, that would be a convention, but maybe if it's made part of the rustfix it could be better understood / more widely used.</p>",
        "id": 222609796,
        "sender_full_name": "pachi",
        "timestamp": 1610556471
    },
    {
        "content": "<p>Perhaps crate::prelude::macros::* would be better</p>",
        "id": 222609951,
        "sender_full_name": "pachi",
        "timestamp": 1610556526
    },
    {
        "content": "<p>I feel like <code>crate::prelude::macros::*</code> would be problematic. If multiple crates' preludes had that module and were glob imported as you'd expect, you'd be importing multiple <code>macros</code> modules into scope.</p>\n<p>I wouldn't mind <code>crate::macros::*</code> being a convention a la <code>prelude</code>.</p>",
        "id": 222794406,
        "sender_full_name": "ThatsNoMoon",
        "timestamp": 1610663178
    },
    {
        "content": "<p>rustfix should not do any prelude re-arranging of you code, it should make the minimal amount of automatic changes.</p>",
        "id": 222800329,
        "sender_full_name": "Lokathor",
        "timestamp": 1610666835
    },
    {
        "content": "<p>Hey all, I've updated the RFC draft above with changes based on feedback. These changes include:</p>\n<ul>\n<li>Discussion of use case for macro shadowing (anonymous macro helpers) which are not possible in a path based scoping world.</li>\n<li>Discussion of usage of macros in submodules</li>\n<li>Mention of the fact that the RFC for editions suggests that introducing breaking changes without first going through warnings in the previous editions</li>\n<li>Small clarifications of certain points</li>\n</ul>\n<p>Please take another look if you can. <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I'm going to let this sit for another two days and then I think we should post this to the RFCs repo. Thoughts?</p>",
        "id": 223389055,
        "sender_full_name": "rylev",
        "timestamp": 1611156721
    },
    {
        "content": "<p>Reading now...</p>",
        "id": 223404534,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611162888
    },
    {
        "content": "<blockquote>\n<p>Fixing this requires annotating macro invoations with the path to the parent module where the macro is defined.</p>\n</blockquote>\n<p>Or importing the macro path with <code>use</code>.</p>",
        "id": 223405054,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611163127
    },
    {
        "content": "<p>hehe yes. That's what I originally had and then changed. I'll change it to an OR</p>",
        "id": 223406581,
        "sender_full_name": "rylev",
        "timestamp": 1611163884
    },
    {
        "content": "<p>One thing I need to address is if this changes anything in 2015/2018 editions</p>",
        "id": 223407346,
        "sender_full_name": "rylev",
        "timestamp": 1611164269
    },
    {
        "content": "<p>Overall, this is looking good to me.</p>",
        "id": 223407513,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1611164359
    },
    {
        "content": "<p>I've posted this in the RFCs repo: <a href=\"https://github.com/rust-lang/rfcs/pull/3067\">https://github.com/rust-lang/rfcs/pull/3067</a></p>",
        "id": 223885088,
        "sender_full_name": "rylev",
        "timestamp": 1611575118
    },
    {
        "content": "<p>I don't have anything to add other than a big +1 for making this change.  I always had the impression that it didn't work this way because it is hard to implement. But if Vadim thinks it is feasible, that would be wonderful.</p>",
        "id": 223938014,
        "sender_full_name": "Eric Huss",
        "timestamp": 1611598584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/213817-t-lang/topic/pub.20macro.20rules/near/223938014\">said</a>:</p>\n<blockquote>\n<p>I don't have anything to add other than a big +1 for making this change.  I always had the impression that it didn't work this way because it is hard to implement. But if Vadim thinks it is feasible, that would be wonderful.</p>\n</blockquote>\n<p>the PR actually <em>deletes</em> code <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> <a href=\"https://github.com/rust-lang/rust/pull/78166\">https://github.com/rust-lang/rust/pull/78166</a></p>",
        "id": 223938510,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1611598791
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span>, <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> mentioned that you <a href=\"https://github.com/rust-lang/rust/pull/78166#issuecomment-759808960\">closed #78166</a>, I wanted to circle up. I was hoping to land <a href=\"https://github.com/rust-lang/rust/issues/78166\">#78166</a> (or something very much like it) as part of a larger plan (as described by <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> in the RFC) to change defaults. Is there a reason that this plan doesn't work? Are you interested in pursuing some of that, at least?</p>",
        "id": 225075210,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612383484
    },
    {
        "content": "<p>Answered on the PR thread.</p>",
        "id": 225148336,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1612438819
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> great! I'm curious whether you can coordinate a bit with <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> to figure out the \"workplan\", I want to have a good picture of all the parts.</p>",
        "id": 225412283,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612618613
    },
    {
        "content": "<p>There are some things -- e.g., migrations -- that I'm not sure if you have interest in doing</p>",
        "id": 225412292,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612618623
    },
    {
        "content": "<p>maybe we can mentor those out</p>",
        "id": 225412299,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612618631
    },
    {
        "content": "<p>alternatively maybe <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> and I can sketch out a work plan and you can review it :)</p>",
        "id": 225412303,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612618644
    },
    {
        "content": "<p>whichever works better</p>",
        "id": 225412308,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612618648
    },
    {
        "content": "<p>this reminds me I have to read the RFC carefully, I feel like there was one or two points where I was feeling uncertain</p>",
        "id": 225412315,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612618662
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116009\">nikomatsakis</span> <a href=\"#narrow/stream/213817-t-lang/topic/pub.20macro.20rules/near/225412292\">said</a>:</p>\n<blockquote>\n<p>There are some things -- e.g., migrations -- that I'm not sure if you have interest in doing</p>\n</blockquote>\n<p>That's true, migration lints are the last thing I'd like to work on.<br>\nI can review PRs and answer questions about details though.</p>",
        "id": 225456228,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1612692870
    },
    {
        "content": "<p>It would also be great if someone else could revive <a href=\"https://github.com/rust-lang/rust/pull/78166\">https://github.com/rust-lang/rust/pull/78166</a> and add the necessary cross-crate tests to make sure everything works correctly in that case.</p>",
        "id": 225456657,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1612693459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123856\">@Vadim Petrochenkov</span> maybe you would prefer to be the REVIEWER and not the main implementor?</p>",
        "id": 225879104,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979383
    },
    {
        "content": "<p>just overall</p>",
        "id": 225879114,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979389
    },
    {
        "content": "<p>I bet we could find somebody else to drive this</p>",
        "id": 225879129,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979394
    },
    {
        "content": "<p>and it might be a nice way to grow strength in that area of the code, too</p>",
        "id": 225879248,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1612979426
    },
    {
        "content": "<p>Yeah, I can review as I said above, with someone else doing the primary work.<br>\nThe scope of the proposal grew so much compared to the initial version that it exceeded all the limits of efforts that I was ready to spend on it.</p>",
        "id": 225880099,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1612979745
    }
]